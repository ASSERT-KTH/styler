{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3325",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "48",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "66",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "105",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "104",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "153",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "167",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "167",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "176",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "176",
                    "column": "104",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "177",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "177",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "177",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "179",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "179",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "180",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "180",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "180",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "182",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "182",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "187",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "187",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "195",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "195",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "199",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "199",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "204",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "204",
                    "column": "104",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "205",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "205",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "205",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "208",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "208",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "208",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "210",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "210",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3325/IndexManagerImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3325/IndexManagerImpl.java\nindex 4b362802dec..a4a12866d77 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3325/IndexManagerImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3325/IndexManagerImpl.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.coreapi;\n \n import java.util.Map;\n@@ -39,193 +40,186 @@ import org.neo4j.kernel.impl.api.explicitindex.InternalAutoIndexing;\n \n public class IndexManagerImpl implements IndexManager\n {\n-    private final Supplier<Transaction> transactionBridge;\n-    private final IndexProvider provider;\n-    private final AutoIndexer<Node> nodeAutoIndexer;\n-    private final RelationshipAutoIndexer relAutoIndexer;\n-\n-    public IndexManagerImpl( Supplier<Transaction> bridge,\n-                             IndexProvider provider,\n-                             AutoIndexer<Node> nodeAutoIndexer,\n-                             RelationshipAutoIndexer relAutoIndexer )\n+  private final Supplier<Transaction> transactionBridge;\n+  private final IndexProvider provider;\n+  private final AutoIndexer<Node> nodeAutoIndexer;\n+  private final RelationshipAutoIndexer relAutoIndexer;\n+\n+  public IndexManagerImpl(Supplier<Transaction> bridge,\n+                          IndexProvider provider,\n+                          AutoIndexer<Node> nodeAutoIndexer,\n+                          RelationshipAutoIndexer relAutoIndexer)\n+  {\n+    this.transactionBridge = bridge;\n+    this.provider = provider;\n+    this.nodeAutoIndexer = nodeAutoIndexer;\n+    this.relAutoIndexer = relAutoIndexer;\n+  }\n+\n+  @Override\n+  public boolean existsForNodes(String indexName)\n+  {\n+    try\n     {\n-        this.transactionBridge = bridge;\n-        this.provider = provider;\n-        this.nodeAutoIndexer = nodeAutoIndexer;\n-        this.relAutoIndexer = relAutoIndexer;\n-    }\n-\n-    @Override\n-    public boolean existsForNodes( String indexName )\n+      transactionBridge.get().indexRead().nodeExplicitIndexGetConfiguration(indexName);\n+      return true;\n+    } catch (ExplicitIndexNotFoundKernelException e)\n     {\n-        try\n-        {\n-            transactionBridge.get().indexRead().nodeExplicitIndexGetConfiguration( indexName );\n-            return true;\n-        }\n-        catch ( ExplicitIndexNotFoundKernelException e )\n-        {\n-            return false;\n-        }\n+      return false;\n     }\n+  }\n \n-    @Override\n-    public Index<Node> forNodes( String indexName )\n-    {\n-        return forNodes( indexName, null );\n-    }\n+  @Override\n+  public Index<Node> forNodes(String indexName)\n+  {\n+    return forNodes(indexName, null);\n+  }\n+\n+  @Override\n+  public Index<Node> forNodes(String indexName, Map<String, String> customConfiguration)\n+  {\n+    Index<Node> toReturn = provider.getOrCreateNodeIndex(indexName, customConfiguration);\n \n-    @Override\n-    public Index<Node> forNodes( String indexName, Map<String,String> customConfiguration )\n+    // TODO move this into kernel layer\n+    if (InternalAutoIndexing.NODE_AUTO_INDEX.equals(indexName))\n     {\n-        Index<Node> toReturn = provider.getOrCreateNodeIndex( indexName, customConfiguration );\n-\n-        // TODO move this into kernel layer\n-        if ( InternalAutoIndexing.NODE_AUTO_INDEX.equals( indexName ) )\n-        {\n-            return new ReadOnlyIndexFacade<>( toReturn );\n-        }\n-        return toReturn;\n+      return new ReadOnlyIndexFacade<>(toReturn);\n     }\n+    return toReturn;\n+  }\n \n-    @Override\n-    public String[] nodeIndexNames()\n-    {\n+  @Override\n+  public String[] nodeIndexNames()\n+  {\n \n-        return transactionBridge.get().indexRead().nodeExplicitIndexesGetAll();\n-    }\n+    return transactionBridge.get().indexRead().nodeExplicitIndexesGetAll();\n+  }\n \n-    @Override\n-    public boolean existsForRelationships( String indexName )\n+  @Override\n+  public boolean existsForRelationships(String indexName)\n+  {\n+    try\n     {\n-        try\n-        {\n-            transactionBridge.get().indexRead().relationshipExplicitIndexGetConfiguration( indexName );\n-            return true;\n-        }\n-        catch ( ExplicitIndexNotFoundKernelException e )\n-        {\n-            return false;\n-        }\n-    }\n-\n-    @Override\n-    public RelationshipIndex forRelationships( String indexName )\n+      transactionBridge.get().indexRead().relationshipExplicitIndexGetConfiguration(indexName);\n+      return true;\n+    } catch (ExplicitIndexNotFoundKernelException e)\n     {\n-        return forRelationships( indexName, null );\n+      return false;\n     }\n-\n-    @Override\n-    public RelationshipIndex forRelationships( String indexName,\n-                                               Map<String,String> customConfiguration )\n+  }\n+\n+  @Override\n+  public RelationshipIndex forRelationships(String indexName)\n+  {\n+    return forRelationships(indexName, null);\n+  }\n+\n+  @Override\n+  public RelationshipIndex forRelationships(String indexName,\n+                                            Map<String, String> customConfiguration)\n+  {\n+    RelationshipIndex toReturn = provider.getOrCreateRelationshipIndex(indexName, customConfiguration);\n+\n+    // TODO move this into kernel layer\n+    if (InternalAutoIndexing.RELATIONSHIP_AUTO_INDEX.equals(indexName))\n     {\n-        RelationshipIndex toReturn = provider.getOrCreateRelationshipIndex( indexName, customConfiguration );\n-\n-        // TODO move this into kernel layer\n-        if ( InternalAutoIndexing.RELATIONSHIP_AUTO_INDEX.equals( indexName ) )\n-        {\n-            return new RelationshipReadOnlyIndexFacade( toReturn );\n-        }\n-        return toReturn;\n+      return new RelationshipReadOnlyIndexFacade(toReturn);\n     }\n+    return toReturn;\n+  }\n \n-    @Override\n-    public String[] relationshipIndexNames()\n-    {\n+  @Override\n+  public String[] relationshipIndexNames()\n+  {\n \n-        return transactionBridge.get().indexRead().relationshipExplicitIndexesGetAll();\n-    }\n+    return transactionBridge.get().indexRead().relationshipExplicitIndexesGetAll();\n+  }\n \n-    @Override\n-    public Map<String,String> getConfiguration( Index<? extends PropertyContainer> index )\n+  @Override\n+  public Map<String, String> getConfiguration(Index<? extends PropertyContainer> index)\n+  {\n+    try\n     {\n-        try\n-        {\n-            Transaction transaction = transactionBridge.get();\n-            if ( index.getEntityType().equals( Node.class ) )\n-            {\n-                return transaction.indexRead().nodeExplicitIndexGetConfiguration( index.getName() );\n-            }\n-            if ( index.getEntityType().equals( Relationship.class ) )\n-            {\n-                return transaction.indexRead().relationshipExplicitIndexGetConfiguration( index.getName() );\n-            }\n-            throw new IllegalArgumentException( \"Unknown entity type \" + index.getEntityType().getSimpleName() );\n-        }\n-        catch ( ExplicitIndexNotFoundKernelException e )\n-        {\n-            throw new NotFoundException( \"No node index '\" + index.getName() + \"' found\" );\n-        }\n-    }\n-\n-    @Override\n-    public String setConfiguration( Index<? extends PropertyContainer> index, String key, String value )\n+      Transaction transaction = transactionBridge.get();\n+      if (index.getEntityType().equals(Node.class))\n+      {\n+        return transaction.indexRead().nodeExplicitIndexGetConfiguration(index.getName());\n+      }\n+      if (index.getEntityType().equals(Relationship.class))\n+      {\n+        return transaction.indexRead().relationshipExplicitIndexGetConfiguration(index.getName());\n+      }\n+      throw new IllegalArgumentException(\"Unknown entity type \" + index.getEntityType().getSimpleName());\n+    } catch (ExplicitIndexNotFoundKernelException e)\n     {\n-        // Configuration changes should be done transactionally. However this\n-        // has always been done non-transactionally, so it's not a regression.\n-        try\n-        {\n-            Transaction transaction = transactionBridge.get();\n-            if ( index.getEntityType().equals( Node.class ) )\n-            {\n-                return transaction.indexWrite().nodeExplicitIndexSetConfiguration( index.getName(), key, value );\n-            }\n-            if ( index.getEntityType().equals( Relationship.class ) )\n-            {\n-                return transaction.indexWrite().relationshipExplicitIndexSetConfiguration(\n-                        index.getName(), key, value );\n-            }\n-            throw new IllegalArgumentException( \"Unknown entity type \" + index.getEntityType().getSimpleName() );\n-        }\n-        catch ( InvalidTransactionTypeKernelException e )\n-        {\n-            throw new ConstraintViolationException( e.getMessage(), e );\n-        }\n-        catch ( ExplicitIndexNotFoundKernelException e )\n-        {\n-            throw new NotFoundException( e );\n-        }\n+      throw new NotFoundException(\"No node index '\" + index.getName() + \"' found\");\n     }\n-\n-    @Override\n-    public String removeConfiguration( Index<? extends PropertyContainer> index, String key )\n+  }\n+\n+  @Override\n+  public String setConfiguration(Index<? extends PropertyContainer> index, String key, String value)\n+  {\n+    // Configuration changes should be done transactionally. However this\n+    // has always been done non-transactionally, so it's not a regression.\n+    try\n     {\n-        // Configuration changes should be done transactionally. However this\n-        // has always been done non-transactionally, so it's not a regression.\n-\n-        try\n-        {\n-            Transaction transaction = transactionBridge.get();\n-            if ( index.getEntityType().equals( Node.class ) )\n-            {\n-                return transaction.indexWrite().nodeExplicitIndexRemoveConfiguration( index.getName(), key );\n-            }\n-            if ( index.getEntityType().equals( Relationship.class ) )\n-            {\n-                return transaction.indexWrite().relationshipExplicitIndexRemoveConfiguration(\n-                        index.getName(), key );\n-            }\n-            throw new IllegalArgumentException( \"Unknown entity type \" + index.getEntityType().getSimpleName() );\n-        }\n-        catch ( InvalidTransactionTypeKernelException e )\n-        {\n-            throw new ConstraintViolationException( e.getMessage(), e );\n-        }\n-        catch ( ExplicitIndexNotFoundKernelException e )\n-        {\n-            throw new NotFoundException( e );\n-        }\n-    }\n-\n-    @Override\n-    public AutoIndexer<Node> getNodeAutoIndexer()\n+      Transaction transaction = transactionBridge.get();\n+      if (index.getEntityType().equals(Node.class))\n+      {\n+        return transaction.indexWrite().nodeExplicitIndexSetConfiguration(index.getName(), key, value);\n+      }\n+      if (index.getEntityType().equals(Relationship.class))\n+      {\n+        return transaction.indexWrite().relationshipExplicitIndexSetConfiguration(\n+            index.getName(), key, value);\n+      }\n+      throw new IllegalArgumentException(\"Unknown entity type \" + index.getEntityType().getSimpleName());\n+    } catch (InvalidTransactionTypeKernelException e)\n+    {\n+      throw new ConstraintViolationException(e.getMessage(), e);\n+    } catch (ExplicitIndexNotFoundKernelException e)\n     {\n-        return nodeAutoIndexer;\n+      throw new NotFoundException(e);\n     }\n+  }\n+\n+  @Override\n+  public String removeConfiguration(Index<? extends PropertyContainer> index, String key)\n+  {\n+    // Configuration changes should be done transactionally. However this\n+    // has always been done non-transactionally, so it's not a regression.\n \n-    @Override\n-    public RelationshipAutoIndexer getRelationshipAutoIndexer()\n+    try\n+    {\n+      Transaction transaction = transactionBridge.get();\n+      if (index.getEntityType().equals(Node.class))\n+      {\n+        return transaction.indexWrite().nodeExplicitIndexRemoveConfiguration(index.getName(), key);\n+      }\n+      if (index.getEntityType().equals(Relationship.class))\n+      {\n+        return transaction.indexWrite().relationshipExplicitIndexRemoveConfiguration(\n+            index.getName(), key);\n+      }\n+      throw new IllegalArgumentException(\"Unknown entity type \" + index.getEntityType().getSimpleName());\n+    } catch (InvalidTransactionTypeKernelException e)\n+    {\n+      throw new ConstraintViolationException(e.getMessage(), e);\n+    } catch (ExplicitIndexNotFoundKernelException e)\n     {\n-        return relAutoIndexer;\n+      throw new NotFoundException(e);\n     }\n+  }\n+\n+  @Override\n+  public AutoIndexer<Node> getNodeAutoIndexer()\n+  {\n+    return nodeAutoIndexer;\n+  }\n+\n+  @Override\n+  public RelationshipAutoIndexer getRelationshipAutoIndexer()\n+  {\n+    return relAutoIndexer;\n+  }\n }\n",
            "diff_size": 240
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3325/IndexManagerImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3325/IndexManagerImpl.java\nindex 4b362802dec..23040b2f5e8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3325/IndexManagerImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3325/IndexManagerImpl.java\n@@ -44,11 +44,9 @@ public class IndexManagerImpl implements IndexManager\n     private final AutoIndexer<Node> nodeAutoIndexer;\n     private final RelationshipAutoIndexer relAutoIndexer;\n \n-    public IndexManagerImpl( Supplier<Transaction> bridge,\n-                             IndexProvider provider,\n-                             AutoIndexer<Node> nodeAutoIndexer,\n+    public IndexManagerImpl( Supplier<Transaction> bridge, IndexProvider provider, AutoIndexer<Node> nodeAutoIndexer,\n                              RelationshipAutoIndexer relAutoIndexer )\n-    {\n+{\n         this.transactionBridge = bridge;\n         this.provider = provider;\n         this.nodeAutoIndexer = nodeAutoIndexer;\n@@ -85,14 +83,14 @@ public class IndexManagerImpl implements IndexManager\n         {\n             return new ReadOnlyIndexFacade<>( toReturn );\n         }\n-        return toReturn;\n+\n+return toReturn;\n     }\n \n     @Override\n     public String[] nodeIndexNames()\n     {\n-\n-        return transactionBridge.get().indexRead().nodeExplicitIndexesGetAll();\n+    return transactionBridge.get().indexRead().nodeExplicitIndexesGetAll();\n     }\n \n     @Override\n@@ -116,9 +114,8 @@ public class IndexManagerImpl implements IndexManager\n     }\n \n     @Override\n-    public RelationshipIndex forRelationships( String indexName,\n-                                               Map<String,String> customConfiguration )\n-    {\n+    public RelationshipIndex forRelationships( String indexName, Map<String,String> customConfiguration )\n+{\n         RelationshipIndex toReturn = provider.getOrCreateRelationshipIndex( indexName, customConfiguration );\n \n         // TODO move this into kernel layer\n@@ -126,14 +123,14 @@ public class IndexManagerImpl implements IndexManager\n         {\n             return new RelationshipReadOnlyIndexFacade( toReturn );\n         }\n-        return toReturn;\n+\n+return toReturn;\n     }\n \n     @Override\n     public String[] relationshipIndexNames()\n     {\n-\n-        return transactionBridge.get().indexRead().relationshipExplicitIndexesGetAll();\n+    return transactionBridge.get().indexRead().relationshipExplicitIndexesGetAll();\n     }\n \n     @Override\n@@ -146,7 +143,8 @@ public class IndexManagerImpl implements IndexManager\n             {\n                 return transaction.indexRead().nodeExplicitIndexGetConfiguration( index.getName() );\n             }\n-            if ( index.getEntityType().equals( Relationship.class ) )\n+\n+if ( index.getEntityType().equals( Relationship.class ) )\n             {\n                 return transaction.indexRead().relationshipExplicitIndexGetConfiguration( index.getName() );\n             }\n@@ -170,10 +168,10 @@ public class IndexManagerImpl implements IndexManager\n             {\n                 return transaction.indexWrite().nodeExplicitIndexSetConfiguration( index.getName(), key, value );\n             }\n-            if ( index.getEntityType().equals( Relationship.class ) )\n+\n+if ( index.getEntityType().equals( Relationship.class ) )\n             {\n-                return transaction.indexWrite().relationshipExplicitIndexSetConfiguration(\n-                        index.getName(), key, value );\n+                return transaction.indexWrite().relationshipExplicitIndexSetConfiguration( index.getName(), key, value );\n             }\n             throw new IllegalArgumentException( \"Unknown entity type \" + index.getEntityType().getSimpleName() );\n         }\n@@ -200,10 +198,10 @@ public class IndexManagerImpl implements IndexManager\n             {\n                 return transaction.indexWrite().nodeExplicitIndexRemoveConfiguration( index.getName(), key );\n             }\n-            if ( index.getEntityType().equals( Relationship.class ) )\n+\n+if ( index.getEntityType().equals( Relationship.class ) )\n             {\n-                return transaction.indexWrite().relationshipExplicitIndexRemoveConfiguration(\n-                        index.getName(), key );\n+                return transaction.indexWrite().relationshipExplicitIndexRemoveConfiguration( index.getName(), key );\n             }\n             throw new IllegalArgumentException( \"Unknown entity type \" + index.getEntityType().getSimpleName() );\n         }\n@@ -228,4 +226,4 @@ public class IndexManagerImpl implements IndexManager\n     {\n         return relAutoIndexer;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 26
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "DarLiner-weixin-java-tools",
    "error_id": "24",
    "information": {
        "errors": [
            {
                "line": "58",
                "column": "51",
                "severity": "warning",
                "message": "',' should be on a new line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.SeparatorWrapCheck"
            }
        ]
    },
    "source_code": "    Map<String, String> form = material.getForm();\n    if (material.getForm() != null) {\n      multipartEntityBuilder.addPart(\"description\",\n        new StringBody(WxGsonBuilder.create().toJson(form), ContentType.create(\"text/plain\", Consts.UTF_8)));\n    }\n",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "58",
                    "column": "51",
                    "severity": "warning",
                    "message": "',' should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.SeparatorWrapCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "58",
                    "column": "51",
                    "severity": "warning",
                    "message": "',' should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.SeparatorWrapCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DarLiner-weixin-java-tools/errored/1/24/ApacheMaterialUploadRequestExecutor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DarLiner-weixin-java-tools/intellij/24/ApacheMaterialUploadRequestExecutor.java\nindex 9ddd61f9a95..8a671210cfc 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DarLiner-weixin-java-tools/errored/1/24/ApacheMaterialUploadRequestExecutor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DarLiner-weixin-java-tools/intellij/24/ApacheMaterialUploadRequestExecutor.java\n@@ -51,12 +51,12 @@ public class ApacheMaterialUploadRequestExecutor extends MaterialUploadRequestEx\n \n     MultipartEntityBuilder multipartEntityBuilder = MultipartEntityBuilder.create();\n     multipartEntityBuilder\n-      .addBinaryBody(\"media\", file)\n-      .setMode(HttpMultipartMode.RFC6532);\n+        .addBinaryBody(\"media\", file)\n+        .setMode(HttpMultipartMode.RFC6532);\n     Map<String, String> form = material.getForm();\n     if (material.getForm() != null) {\n       multipartEntityBuilder.addPart(\"description\",\n-        new StringBody(WxGsonBuilder.create().toJson(form), ContentType.create(\"text/plain\", Consts.UTF_8)));\n+          new StringBody(WxGsonBuilder.create().toJson(form), ContentType.create(\"text/plain\", Consts.UTF_8)));\n     }\n \n     httpPost.setEntity(multipartEntityBuilder.build());\n",
            "diff_size": 3
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "58",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 153).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DarLiner-weixin-java-tools/errored/1/24/ApacheMaterialUploadRequestExecutor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DarLiner-weixin-java-tools/naturalize/24/ApacheMaterialUploadRequestExecutor.java\nindex 9ddd61f9a95..2a689be5f96 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DarLiner-weixin-java-tools/errored/1/24/ApacheMaterialUploadRequestExecutor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DarLiner-weixin-java-tools/naturalize/24/ApacheMaterialUploadRequestExecutor.java\n@@ -50,13 +50,12 @@ public class ApacheMaterialUploadRequestExecutor extends MaterialUploadRequestEx\n     }\n \n     MultipartEntityBuilder multipartEntityBuilder = MultipartEntityBuilder.create();\n-    multipartEntityBuilder\n-      .addBinaryBody(\"media\", file)\n+    multipartEntityBuilder.addBinaryBody(\"media\", file)\n       .setMode(HttpMultipartMode.RFC6532);\n-    Map<String, String> form = material.getForm();\n+\n+Map<String, String> form = material.getForm();\n     if (material.getForm() != null) {\n-      multipartEntityBuilder.addPart(\"description\",\n-        new StringBody(WxGsonBuilder.create().toJson(form), ContentType.create(\"text/plain\", Consts.UTF_8)));\n+      multipartEntityBuilder.addPart(\"description\", new StringBody(WxGsonBuilder.create().toJson(form), ContentType.create(\"text/plain\", Consts.UTF_8)));\n     }\n \n     httpPost.setEntity(multipartEntityBuilder.build());\n@@ -74,4 +73,4 @@ public class ApacheMaterialUploadRequestExecutor extends MaterialUploadRequestEx\n       httpPost.releaseConnection();\n     }\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "58",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 153).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DarLiner-weixin-java-tools/errored/1/24/ApacheMaterialUploadRequestExecutor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DarLiner-weixin-java-tools/codebuff/24/ApacheMaterialUploadRequestExecutor.java\nindex 9ddd61f9a95..cd9bf64a3bf 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DarLiner-weixin-java-tools/errored/1/24/ApacheMaterialUploadRequestExecutor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DarLiner-weixin-java-tools/codebuff/24/ApacheMaterialUploadRequestExecutor.java\n@@ -18,7 +18,6 @@ import org.apache.http.entity.mime.HttpMultipartMode;\n import org.apache.http.entity.mime.MultipartEntityBuilder;\n import org.apache.http.entity.mime.content.StringBody;\n import org.apache.http.impl.client.CloseableHttpClient;\n-\n import java.io.File;\n import java.io.FileNotFoundException;\n import java.io.IOException;\n@@ -27,7 +26,10 @@ import java.util.Map;\n /**\n  * Created by ecoolper on 2017/5/5.\n  */\n+\n+\n public class ApacheMaterialUploadRequestExecutor extends MaterialUploadRequestExecutor<CloseableHttpClient, HttpHost> {\n+\n   public ApacheMaterialUploadRequestExecutor(RequestHttp requestHttp) {\n     super(requestHttp);\n   }\n@@ -50,18 +52,13 @@ public class ApacheMaterialUploadRequestExecutor extends MaterialUploadRequestEx\n     }\n \n     MultipartEntityBuilder multipartEntityBuilder = MultipartEntityBuilder.create();\n-    multipartEntityBuilder\n-      .addBinaryBody(\"media\", file)\n-      .setMode(HttpMultipartMode.RFC6532);\n+    multipartEntityBuilder.addBinaryBody(\"media\", file).setMode(HttpMultipartMode.RFC6532);\n     Map<String, String> form = material.getForm();\n     if (material.getForm() != null) {\n-      multipartEntityBuilder.addPart(\"description\",\n-        new StringBody(WxGsonBuilder.create().toJson(form), ContentType.create(\"text/plain\", Consts.UTF_8)));\n+      multipartEntityBuilder.addPart(\"description\", new StringBody(WxGsonBuilder.create().toJson(form), ContentType.create(\"text/plain\", Consts.UTF_8)));\n     }\n-\n     httpPost.setEntity(multipartEntityBuilder.build());\n     httpPost.setHeader(\"Content-Type\", ContentType.MULTIPART_FORM_DATA.toString());\n-\n     try (CloseableHttpResponse response = requestHttp.getRequestHttpClient().execute(httpPost)) {\n       String responseContent = Utf8ResponseHandler.INSTANCE.handleResponse(response);\n       WxError error = WxError.fromJson(responseContent);\n@@ -74,4 +71,4 @@ public class ApacheMaterialUploadRequestExecutor extends MaterialUploadRequestEx\n       httpPost.releaseConnection();\n     }\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 12
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "58",
                    "column": "51",
                    "severity": "warning",
                    "message": "',' should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.SeparatorWrapCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "58",
                    "column": "51",
                    "severity": "warning",
                    "message": "',' should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.SeparatorWrapCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "neo4j-neo4j",
    "error_id": "2503",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "61",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "133",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "106",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "186",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "187",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "194",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "195",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "202",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "203",
                    "column": "127",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "217",
                    "column": "82",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "217",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "220",
                    "column": "82",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "220",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "223",
                    "column": "19",
                    "severity": "error",
                    "message": "'}' at column 19 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "225",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "225",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "232",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "233",
                    "column": "124",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "241",
                    "column": "19",
                    "severity": "error",
                    "message": "'}' at column 19 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "241",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "241",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "250",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "250",
                    "column": "144",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "254",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "254",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "256",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "256",
                    "column": "150",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "263",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "263",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "271",
                    "column": "19",
                    "severity": "error",
                    "message": "'}' at column 19 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "274",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "274",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "283",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "283",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "285",
                    "column": "58",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "285",
                    "column": "88",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "285",
                    "column": "130",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "285",
                    "column": "131",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "289",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "289",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "293",
                    "column": "78",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "293",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "301",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "302",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "304",
                    "column": "58",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "304",
                    "column": "88",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "304",
                    "column": "135",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "304",
                    "column": "136",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "308",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "309",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "315",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "315",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "317",
                    "column": "62",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "319",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "319",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "320",
                    "column": "19",
                    "severity": "error",
                    "message": "'}' at column 19 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "327",
                    "column": "82",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "327",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "331",
                    "column": "82",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "331",
                    "column": "106",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "338",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "338",
                    "column": "144",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "341",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "341",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "346",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "346",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "348",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "348",
                    "column": "150",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "356",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "356",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "363",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "363",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "370",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "371",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "373",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "374",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "377",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "377",
                    "column": "147",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "380",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "380",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "382",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "382",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "384",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "384",
                    "column": "110",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "394",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "394",
                    "column": "107",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "400",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "400",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "404",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "404",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "407",
                    "column": "21",
                    "severity": "error",
                    "message": "'}' at column 21 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "411",
                    "column": "17",
                    "severity": "error",
                    "message": "'}' at column 17 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "420",
                    "column": "54",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "420",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "424",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "424",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "429",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "429",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "435",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "435",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "439",
                    "column": "17",
                    "severity": "error",
                    "message": "'}' at column 17 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "439",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "439",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "441",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "441",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "443",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "443",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "444",
                    "column": "21",
                    "severity": "error",
                    "message": "'}' at column 21 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "452",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "452",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "458",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "458",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "462",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "462",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "467",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "467",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "473",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "473",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "477",
                    "column": "17",
                    "severity": "error",
                    "message": "'}' at column 17 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "477",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "477",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "479",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "479",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "481",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "481",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "482",
                    "column": "21",
                    "severity": "error",
                    "message": "'}' at column 21 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "490",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "490",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "496",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "496",
                    "column": "129",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "503",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "506",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "506",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "510",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "510",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "519",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "519",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "524",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "524",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "524",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "533",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "533",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "568",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "568",
                    "column": "118",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "586",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "586",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "591",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "591",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2503/TransactionStateMachine.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2503/TransactionStateMachine.java\nindex 90db023df4d..8e26844875a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2503/TransactionStateMachine.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2503/TransactionStateMachine.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.bolt.runtime.statemachine.impl;\n \n import java.time.Clock;\n@@ -57,31 +58,31 @@ public class TransactionStateMachine implements StatementProcessor\n     State state = State.AUTO_COMMIT;\n     private final String databaseName;\n \n-    public TransactionStateMachine( String databaseName, TransactionStateMachineSPI spi, AuthenticationResult authenticationResult, Clock clock,\n-                                    RoutingContext routingContext )\n+    public TransactionStateMachine(String databaseName, TransactionStateMachineSPI spi, AuthenticationResult authenticationResult, Clock clock,\n+                                   RoutingContext routingContext)\n     {\n         this.spi = spi;\n-        ctx = new MutableTransactionState( authenticationResult, clock, routingContext );\n+        ctx = new MutableTransactionState(authenticationResult, clock, routingContext);\n         this.databaseName = databaseName;\n     }\n \n     @Override\n-    public void beginTransaction( List<Bookmark> bookmarks, Duration txTimeout, AccessMode accessMode, Map<String,Object> txMetadata ) throws KernelException\n+    public void beginTransaction(List<Bookmark> bookmarks, Duration txTimeout, AccessMode accessMode, Map<String, Object> txMetadata) throws KernelException\n     {\n-        state = state.beginTransaction( ctx, spi, bookmarks, txTimeout, accessMode, txMetadata );\n+        state = state.beginTransaction(ctx, spi, bookmarks, txTimeout, accessMode, txMetadata);\n     }\n \n     @Override\n-    public StatementMetadata run( String statement, MapValue params ) throws KernelException\n+    public StatementMetadata run(String statement, MapValue params) throws KernelException\n     {\n-        return run( statement, params, List.of(), null, AccessMode.WRITE, Map.of() );\n+        return run(statement, params, List.of(), null, AccessMode.WRITE, Map.of());\n     }\n \n     @Override\n-    public StatementMetadata run( String statement, MapValue params, List<Bookmark> bookmarks, Duration txTimeout, AccessMode accessMode,\n-            Map<String,Object> txMetaData ) throws KernelException\n+    public StatementMetadata run(String statement, MapValue params, List<Bookmark> bookmarks, Duration txTimeout, AccessMode accessMode,\n+                                 Map<String, Object> txMetaData) throws KernelException\n     {\n-        state = state.run( ctx, spi, statement, params, bookmarks, txTimeout, accessMode, txMetaData );\n+        state = state.run(ctx, spi, statement, params, bookmarks, txTimeout, accessMode, txMetaData);\n \n         StatementMetadata metadata = ctx.lastStatementMetadata;\n         ctx.lastStatementMetadata = null; // metadata should not be needed more than once\n@@ -89,9 +90,9 @@ public class TransactionStateMachine implements StatementProcessor\n     }\n \n     @Override\n-    public Bookmark streamResult( int statementId, ResultConsumer resultConsumer ) throws Throwable\n+    public Bookmark streamResult(int statementId, ResultConsumer resultConsumer) throws Throwable\n     {\n-        return state.streamResult( ctx, spi, statementId, resultConsumer );\n+        return state.streamResult(ctx, spi, statementId, resultConsumer);\n     }\n \n     @Override\n@@ -100,10 +101,9 @@ public class TransactionStateMachine implements StatementProcessor\n         try\n         {\n             BoltTransaction tx = ctx.currentTransaction;\n-            state = state.commitTransaction( ctx, spi );\n-            return newestBookmark( spi, tx );\n-        }\n-        catch ( TransactionFailureException ex )\n+            state = state.commitTransaction(ctx, spi);\n+            return newestBookmark(spi, tx);\n+        } catch (TransactionFailureException ex)\n         {\n             state = State.AUTO_COMMIT;\n             throw ex;\n@@ -113,7 +113,7 @@ public class TransactionStateMachine implements StatementProcessor\n     @Override\n     public void rollbackTransaction() throws KernelException\n     {\n-        state = state.rollbackTransaction( ctx, spi );\n+        state = state.rollbackTransaction(ctx, spi);\n     }\n \n     @Override\n@@ -133,7 +133,7 @@ public class TransactionStateMachine implements StatementProcessor\n     @Override\n     public void reset() throws TransactionFailureException\n     {\n-        state.terminateQueryAndRollbackTransaction( spi, ctx );\n+        state.terminateQueryAndRollbackTransaction(spi, ctx);\n         state = State.AUTO_COMMIT;\n     }\n \n@@ -141,9 +141,9 @@ public class TransactionStateMachine implements StatementProcessor\n     public void markCurrentTransactionForTermination()\n     {\n         BoltTransaction tx = ctx.currentTransaction;\n-        if ( tx != null )\n+        if (tx != null)\n         {\n-            tx.markForTermination( Status.Transaction.Terminated );\n+            tx.markForTermination(Status.Transaction.Terminated);\n         }\n     }\n \n@@ -152,11 +152,11 @@ public class TransactionStateMachine implements StatementProcessor\n     {\n         BoltTransaction tx = ctx.currentTransaction;\n \n-        if ( tx != null )\n+        if (tx != null)\n         {\n             Optional<Status> statusOpt = tx.getReasonIfTerminated();\n \n-            if ( statusOpt.isPresent() && statusOpt.get().code().classification().rollbackTransaction() )\n+            if (statusOpt.isPresent() && statusOpt.get().code().classification().rollbackTransaction())\n             {\n                 Status pendingTerminationNotice = statusOpt.get();\n                 reset();\n@@ -181,240 +181,234 @@ public class TransactionStateMachine implements StatementProcessor\n     enum State\n     {\n         AUTO_COMMIT\n-                {\n-                    @Override\n-                    State beginTransaction( MutableTransactionState ctx, TransactionStateMachineSPI spi, List<Bookmark> bookmarks, Duration txTimeout,\n-                            AccessMode accessMode, Map<String,Object> txMetadata ) throws KernelException\n-                    {\n-                        beginTransaction( ctx, spi, bookmarks, txTimeout, accessMode, txMetadata, false );\n-                        return EXPLICIT_TRANSACTION;\n-                    }\n-\n-                    @Override\n-                    State run( MutableTransactionState ctx, TransactionStateMachineSPI spi, String statement, MapValue params, List<Bookmark> bookmarks,\n-                               Duration txTimeout, AccessMode accessMode, Map<String,Object> txMetadata )\n-                            throws KernelException\n-                    {\n-                        execute( ctx, spi, statement, params, spi.isPeriodicCommit( statement ), bookmarks, txTimeout, accessMode, txMetadata );\n-                        return AUTO_COMMIT;\n-                    }\n-\n-                    void execute( MutableTransactionState ctx, TransactionStateMachineSPI spi, String statement, MapValue params, boolean isPeriodicCommit,\n-                            List<Bookmark> bookmarks, Duration txTimeout, AccessMode accessMode, Map<String,Object> txMetadata )\n-                            throws KernelException\n-                    {\n-                        beginTransaction( ctx, spi, bookmarks, txTimeout, accessMode, txMetadata, isPeriodicCommit );\n-\n-                        boolean failed = true;\n-                        try\n-                        {\n-                            int statementId = StatementMetadata.ABSENT_QUERY_ID;\n-\n-                            BoltQueryExecutor boltQueryExecutor = ctx.currentTransaction;\n-\n-                            BoltResultHandle resultHandle = spi.executeQuery( boltQueryExecutor, statement, params);\n-                            BoltResult result = startExecution( resultHandle );\n-                            ctx.statementOutcomes.put( statementId, new StatementOutcome( resultHandle, result ) );\n-\n-                            String[] fieldNames = result.fieldNames();\n-                            ctx.lastStatementMetadata = new AutoCommitStatementMetadata( fieldNames );\n-\n-                            failed = false;\n-                        }\n-                        finally\n-                        {\n-                            if ( failed )\n-                            {\n-                                closeTransaction( ctx, spi, false );\n-                            }\n-                        }\n-                    }\n-\n-                    private void beginTransaction( MutableTransactionState ctx, TransactionStateMachineSPI spi, List<Bookmark> bookmarks, Duration txTimeout,\n-                            AccessMode accessMode, Map<String,Object> txMetadata, boolean isPeriodicCommit )\n-                    {\n-                        try\n-                        {\n-                            ctx.currentTransaction = isPeriodicCommit ?\n-                                                     spi.beginPeriodicCommitTransaction( ctx.loginContext, bookmarks,\n-                                                                                         txTimeout, accessMode, txMetadata, ctx.routingContext ) :\n-                                                     spi.beginTransaction( ctx.loginContext, bookmarks, txTimeout, accessMode, txMetadata, ctx.routingContext);\n-                        }\n-                        catch ( Throwable e )\n-                        {\n-                            // If we failed to begin a transaction for some reason such as the database is stopped, we need to release ourselves\n-                            spi.transactionClosed();\n-                            throw e;\n-                        }\n-                    }\n-\n-                    @Override\n-                    Bookmark streamResult( MutableTransactionState ctx, TransactionStateMachineSPI spi, int statementId, ResultConsumer resultConsumer )\n-                            throws Throwable\n-                    {\n-                        StatementOutcome outcome = ctx.statementOutcomes.get( statementId );\n-                        if ( outcome == null )\n-                        {\n-                            throw new IllegalArgumentException( \"Unknown statement ID: \" + statementId + \". Existing IDs: \" + ctx.statementOutcomes.keySet() );\n-                        }\n-\n-                        boolean success = false;\n-                        try\n-                        {\n-                            consumeResult( ctx, statementId, outcome, resultConsumer );\n-                            if ( !resultConsumer.hasMore() )\n-                            {\n-                                var tx = ctx.currentTransaction;\n-                                closeTransaction( ctx, spi, true );\n-                                success = true;\n-                                return newestBookmark( spi, tx );\n-                            }\n-                            success = true;\n-                        }\n-                        finally\n-                        {\n-                            // throw error\n-                            if ( !success )\n-                            {\n-                                closeTransaction( ctx, spi, false );\n-                            }\n-                        }\n-                        return EMPTY_BOOKMARK;\n-                    }\n-\n-                    @Override\n-                    State commitTransaction( MutableTransactionState ctx, TransactionStateMachineSPI spi ) throws KernelException\n-                    {\n-                        throw new QueryExecutionKernelException( new InvalidSemanticsException( \"No current transaction to commit.\", null ) );\n-                    }\n-\n-                    @Override\n-                    State rollbackTransaction( MutableTransactionState ctx, TransactionStateMachineSPI spi )\n-                    {\n-                        // add dummy outcome useful for < Bolt V3, i.e. `RUN \"ROLLBACK\" & PULL_ALL`\n-                        int statementId = StatementMetadata.ABSENT_QUERY_ID;\n-                        ctx.statementOutcomes.put( statementId, new StatementOutcome( BoltResult.EMPTY ) );\n-\n-                        return AUTO_COMMIT;\n-                    }\n-                },\n+          {\n+              @Override\n+              State beginTransaction(MutableTransactionState ctx, TransactionStateMachineSPI spi, List<Bookmark> bookmarks, Duration txTimeout,\n+                                     AccessMode accessMode, Map<String, Object> txMetadata) throws KernelException\n+              {\n+                  beginTransaction(ctx, spi, bookmarks, txTimeout, accessMode, txMetadata, false);\n+                  return EXPLICIT_TRANSACTION;\n+              }\n+\n+              @Override\n+              State run(MutableTransactionState ctx, TransactionStateMachineSPI spi, String statement, MapValue params, List<Bookmark> bookmarks,\n+                        Duration txTimeout, AccessMode accessMode, Map<String, Object> txMetadata)\n+                throws KernelException\n+              {\n+                  execute(ctx, spi, statement, params, spi.isPeriodicCommit(statement), bookmarks, txTimeout, accessMode, txMetadata);\n+                  return AUTO_COMMIT;\n+              }\n+\n+              void execute(MutableTransactionState ctx, TransactionStateMachineSPI spi, String statement, MapValue params, boolean isPeriodicCommit,\n+                           List<Bookmark> bookmarks, Duration txTimeout, AccessMode accessMode, Map<String, Object> txMetadata)\n+                throws KernelException\n+              {\n+                  beginTransaction(ctx, spi, bookmarks, txTimeout, accessMode, txMetadata, isPeriodicCommit);\n+\n+                  boolean failed = true;\n+                  try\n+                  {\n+                      int statementId = StatementMetadata.ABSENT_QUERY_ID;\n+\n+                      BoltQueryExecutor boltQueryExecutor = ctx.currentTransaction;\n+\n+                      BoltResultHandle resultHandle = spi.executeQuery(boltQueryExecutor, statement, params);\n+                      BoltResult result = startExecution(resultHandle);\n+                      ctx.statementOutcomes.put(statementId, new StatementOutcome(resultHandle, result));\n+\n+                      String[] fieldNames = result.fieldNames();\n+                      ctx.lastStatementMetadata = new AutoCommitStatementMetadata(fieldNames);\n+\n+                      failed = false;\n+                  } finally\n+                  {\n+                      if (failed)\n+                      {\n+                          closeTransaction(ctx, spi, false);\n+                      }\n+                  }\n+              }\n+\n+              private void beginTransaction(MutableTransactionState ctx, TransactionStateMachineSPI spi, List<Bookmark> bookmarks, Duration txTimeout,\n+                                            AccessMode accessMode, Map<String, Object> txMetadata, boolean isPeriodicCommit)\n+              {\n+                  try\n+                  {\n+                      ctx.currentTransaction = isPeriodicCommit ?\n+                        spi.beginPeriodicCommitTransaction(ctx.loginContext, bookmarks,\n+                          txTimeout, accessMode, txMetadata, ctx.routingContext) :\n+                        spi.beginTransaction(ctx.loginContext, bookmarks, txTimeout, accessMode, txMetadata, ctx.routingContext);\n+                  } catch (Throwable e)\n+                  {\n+                      // If we failed to begin a transaction for some reason such as the database is stopped, we need to release ourselves\n+                      spi.transactionClosed();\n+                      throw e;\n+                  }\n+              }\n+\n+              @Override\n+              Bookmark streamResult(MutableTransactionState ctx, TransactionStateMachineSPI spi, int statementId, ResultConsumer resultConsumer)\n+                throws Throwable\n+              {\n+                  StatementOutcome outcome = ctx.statementOutcomes.get(statementId);\n+                  if (outcome == null)\n+                  {\n+                      throw new IllegalArgumentException(\"Unknown statement ID: \" + statementId + \". Existing IDs: \" + ctx.statementOutcomes.keySet());\n+                  }\n+\n+                  boolean success = false;\n+                  try\n+                  {\n+                      consumeResult(ctx, statementId, outcome, resultConsumer);\n+                      if (!resultConsumer.hasMore())\n+                      {\n+                          var tx = ctx.currentTransaction;\n+                          closeTransaction(ctx, spi, true);\n+                          success = true;\n+                          return newestBookmark(spi, tx);\n+                      }\n+                      success = true;\n+                  } finally\n+                  {\n+                      // throw error\n+                      if (!success)\n+                      {\n+                          closeTransaction(ctx, spi, false);\n+                      }\n+                  }\n+                  return EMPTY_BOOKMARK;\n+              }\n+\n+              @Override\n+              State commitTransaction(MutableTransactionState ctx, TransactionStateMachineSPI spi) throws KernelException\n+              {\n+                  throw new QueryExecutionKernelException(new InvalidSemanticsException(\"No current transaction to commit.\", null));\n+              }\n+\n+              @Override\n+              State rollbackTransaction(MutableTransactionState ctx, TransactionStateMachineSPI spi)\n+              {\n+                  // add dummy outcome useful for < Bolt V3, i.e. `RUN \"ROLLBACK\" & PULL_ALL`\n+                  int statementId = StatementMetadata.ABSENT_QUERY_ID;\n+                  ctx.statementOutcomes.put(statementId, new StatementOutcome(BoltResult.EMPTY));\n+\n+                  return AUTO_COMMIT;\n+              }\n+          },\n         EXPLICIT_TRANSACTION\n-                {\n-                    @Override\n-                    State beginTransaction( MutableTransactionState ctx, TransactionStateMachineSPI spi, List<Bookmark> bookmarks, Duration txTimeout,\n-                            AccessMode accessMode, Map<String,Object> txMetadata ) throws KernelException\n-                    {\n-                        throw new QueryExecutionKernelException( new InvalidSemanticsException( \"Nested transactions are not supported.\", null ) );\n-                    }\n-\n-                    @Override\n-                    State run( MutableTransactionState ctx, TransactionStateMachineSPI spi, String statement, MapValue params, List<Bookmark> bookmarks,\n-                            Duration txTimeout, AccessMode accessMode, Map<String,Object> txMetadata )\n-                            throws KernelException\n-                    {\n-                        checkState( txTimeout == null, \"Explicit Transaction should not run with tx_timeout\" );\n-                        checkState( isEmpty( txMetadata ), \"Explicit Transaction should not run with tx_metadata\" );\n-\n-                        if ( spi.isPeriodicCommit( statement ) )\n-                        {\n-                            throw new QueryExecutionKernelException( new InvalidSemanticsException(\n-                                    \"Executing queries that use periodic commit in an \" +\n-                                    \"open transaction is not possible.\", null ) );\n-                        }\n-                        else\n-                        {\n-                            // generate real statement ID only when nested statements in transaction are supported\n-                            int statementId = spi.supportsNestedStatementsInTransaction() ? ctx.nextStatementId() : StatementMetadata.ABSENT_QUERY_ID;\n-\n-                            BoltResultHandle resultHandle = spi.executeQuery( ctx.currentTransaction, statement, params);\n-                            BoltResult result = startExecution( resultHandle );\n-                            ctx.statementOutcomes.put( statementId, new StatementOutcome( resultHandle, result ) );\n-\n-                            String[] fieldNames = result.fieldNames();\n-                            ctx.lastStatementId = statementId;\n-                            ctx.lastStatementMetadata = new ExplicitTxStatementMetadata( fieldNames, statementId );\n-\n-                            return EXPLICIT_TRANSACTION;\n-                        }\n-                    }\n-\n-                    @Override\n-                    Bookmark streamResult( MutableTransactionState ctx, TransactionStateMachineSPI spi, int statementId, ResultConsumer resultConsumer )\n-                            throws Throwable\n-                    {\n-                        if ( statementId == StatementMetadata.ABSENT_QUERY_ID )\n-                        {\n-                            statementId = ctx.lastStatementId;\n-                        }\n-                        StatementOutcome outcome = ctx.statementOutcomes.get( statementId );\n-                        if ( outcome == null )\n-                        {\n-                            throw new IllegalArgumentException( \"Unknown statement ID: \" + statementId + \". Existing IDs: \" + ctx.statementOutcomes.keySet() );\n-                        }\n-\n-                        consumeResult( ctx, statementId, outcome, resultConsumer );\n-                        return EMPTY_BOOKMARK; // Explicit tx shall not get a bookmark in PULL_ALL or DISCARD_ALL\n-                    }\n-\n-                    @Override\n-                    State commitTransaction( MutableTransactionState ctx, TransactionStateMachineSPI spi ) throws KernelException\n-                    {\n-                        closeTransaction( ctx, spi, true );\n-                        return AUTO_COMMIT;\n-                    }\n-\n-                    @Override\n-                    State rollbackTransaction( MutableTransactionState ctx, TransactionStateMachineSPI spi ) throws KernelException\n-                    {\n-                        closeTransaction( ctx, spi, false );\n-                        return AUTO_COMMIT;\n-                    }\n-                };\n-\n-        abstract State beginTransaction( MutableTransactionState ctx, TransactionStateMachineSPI spi, List<Bookmark> bookmarks, Duration txTimeout,\n-                AccessMode accessMode, Map<String,Object> txMetadata ) throws KernelException;\n-\n-        abstract State run( MutableTransactionState ctx, TransactionStateMachineSPI spi, String statement, MapValue params, List<Bookmark> bookmarks,\n-                Duration txTimeout, AccessMode accessMode, Map<String,Object> txMetadata )\n-                throws KernelException;\n-\n-        abstract Bookmark streamResult( MutableTransactionState ctx, TransactionStateMachineSPI spi, int statementId, ResultConsumer resultConsumer )\n-                throws Throwable;\n-\n-        abstract State commitTransaction( MutableTransactionState ctx, TransactionStateMachineSPI spi ) throws KernelException;\n-\n-        abstract State rollbackTransaction( MutableTransactionState ctx, TransactionStateMachineSPI spi ) throws KernelException;\n-\n-        void terminateQueryAndRollbackTransaction( TransactionStateMachineSPI spi, MutableTransactionState ctx ) throws TransactionFailureException\n+          {\n+              @Override\n+              State beginTransaction(MutableTransactionState ctx, TransactionStateMachineSPI spi, List<Bookmark> bookmarks, Duration txTimeout,\n+                                     AccessMode accessMode, Map<String, Object> txMetadata) throws KernelException\n+              {\n+                  throw new QueryExecutionKernelException(new InvalidSemanticsException(\"Nested transactions are not supported.\", null));\n+              }\n+\n+              @Override\n+              State run(MutableTransactionState ctx, TransactionStateMachineSPI spi, String statement, MapValue params, List<Bookmark> bookmarks,\n+                        Duration txTimeout, AccessMode accessMode, Map<String, Object> txMetadata)\n+                throws KernelException\n+              {\n+                  checkState(txTimeout == null, \"Explicit Transaction should not run with tx_timeout\");\n+                  checkState(isEmpty(txMetadata), \"Explicit Transaction should not run with tx_metadata\");\n+\n+                  if (spi.isPeriodicCommit(statement))\n+                  {\n+                      throw new QueryExecutionKernelException(new InvalidSemanticsException(\n+                        \"Executing queries that use periodic commit in an \" +\n+                          \"open transaction is not possible.\", null));\n+                  } else\n+                  {\n+                      // generate real statement ID only when nested statements in transaction are supported\n+                      int statementId = spi.supportsNestedStatementsInTransaction() ? ctx.nextStatementId() : StatementMetadata.ABSENT_QUERY_ID;\n+\n+                      BoltResultHandle resultHandle = spi.executeQuery(ctx.currentTransaction, statement, params);\n+                      BoltResult result = startExecution(resultHandle);\n+                      ctx.statementOutcomes.put(statementId, new StatementOutcome(resultHandle, result));\n+\n+                      String[] fieldNames = result.fieldNames();\n+                      ctx.lastStatementId = statementId;\n+                      ctx.lastStatementMetadata = new ExplicitTxStatementMetadata(fieldNames, statementId);\n+\n+                      return EXPLICIT_TRANSACTION;\n+                  }\n+              }\n+\n+              @Override\n+              Bookmark streamResult(MutableTransactionState ctx, TransactionStateMachineSPI spi, int statementId, ResultConsumer resultConsumer)\n+                throws Throwable\n+              {\n+                  if (statementId == StatementMetadata.ABSENT_QUERY_ID)\n+                  {\n+                      statementId = ctx.lastStatementId;\n+                  }\n+                  StatementOutcome outcome = ctx.statementOutcomes.get(statementId);\n+                  if (outcome == null)\n+                  {\n+                      throw new IllegalArgumentException(\"Unknown statement ID: \" + statementId + \". Existing IDs: \" + ctx.statementOutcomes.keySet());\n+                  }\n+\n+                  consumeResult(ctx, statementId, outcome, resultConsumer);\n+                  return EMPTY_BOOKMARK; // Explicit tx shall not get a bookmark in PULL_ALL or DISCARD_ALL\n+              }\n+\n+              @Override\n+              State commitTransaction(MutableTransactionState ctx, TransactionStateMachineSPI spi) throws KernelException\n+              {\n+                  closeTransaction(ctx, spi, true);\n+                  return AUTO_COMMIT;\n+              }\n+\n+              @Override\n+              State rollbackTransaction(MutableTransactionState ctx, TransactionStateMachineSPI spi) throws KernelException\n+              {\n+                  closeTransaction(ctx, spi, false);\n+                  return AUTO_COMMIT;\n+              }\n+          };\n+\n+        abstract State beginTransaction(MutableTransactionState ctx, TransactionStateMachineSPI spi, List<Bookmark> bookmarks, Duration txTimeout,\n+                                        AccessMode accessMode, Map<String, Object> txMetadata) throws KernelException;\n+\n+        abstract State run(MutableTransactionState ctx, TransactionStateMachineSPI spi, String statement, MapValue params, List<Bookmark> bookmarks,\n+                           Duration txTimeout, AccessMode accessMode, Map<String, Object> txMetadata)\n+          throws KernelException;\n+\n+        abstract Bookmark streamResult(MutableTransactionState ctx, TransactionStateMachineSPI spi, int statementId, ResultConsumer resultConsumer)\n+          throws Throwable;\n+\n+        abstract State commitTransaction(MutableTransactionState ctx, TransactionStateMachineSPI spi) throws KernelException;\n+\n+        abstract State rollbackTransaction(MutableTransactionState ctx, TransactionStateMachineSPI spi) throws KernelException;\n+\n+        void terminateQueryAndRollbackTransaction(TransactionStateMachineSPI spi, MutableTransactionState ctx) throws TransactionFailureException\n         {\n-            terminateActiveStatements( ctx );\n-            closeTransaction( ctx, spi, false );\n+            terminateActiveStatements(ctx);\n+            closeTransaction(ctx, spi, false);\n         }\n \n         /*\n          * This is overly careful about always closing and nulling the transaction since\n          * reset can cause ctx.currentTransaction to be null we store in local variable.\n          */\n-        void closeTransaction( MutableTransactionState ctx, TransactionStateMachineSPI spi, boolean success ) throws TransactionFailureException\n+        void closeTransaction(MutableTransactionState ctx, TransactionStateMachineSPI spi, boolean success) throws TransactionFailureException\n         {\n-            closeActiveStatements( ctx, success );\n+            closeActiveStatements(ctx, success);\n \n             BoltTransaction tx = ctx.currentTransaction;\n             ctx.currentTransaction = null;\n-            if ( tx != null )\n+            if (tx != null)\n             {\n                 try\n                 {\n-                    if ( success )\n+                    if (success)\n                     {\n                         tx.commit();\n-                    }\n-                    else\n+                    } else\n                     {\n                         tx.rollback();\n                     }\n-                }\n-                finally\n+                } finally\n                 {\n                     ctx.currentTransaction = null;\n                     ctx.statementCounter = 0;\n@@ -423,144 +417,144 @@ public class TransactionStateMachine implements StatementProcessor\n             }\n         }\n \n-        private static void terminateActiveStatements( MutableTransactionState ctx )\n+        private static void terminateActiveStatements(MutableTransactionState ctx)\n         {\n             RuntimeException error = null;\n \n-            for ( StatementOutcome outcome : ctx.statementOutcomes.values() )\n+            for (StatementOutcome outcome : ctx.statementOutcomes.values())\n             {\n                 try\n                 {\n                     BoltResultHandle resultHandle = outcome.resultHandle;\n-                    if ( resultHandle != null )\n+                    if (resultHandle != null)\n                     {\n                         resultHandle.terminate();\n                     }\n \n                     BoltResult result = outcome.result;\n-                    if ( result != null )\n+                    if (result != null)\n                     {\n                         result.close();\n                     }\n-                }\n-                catch ( Throwable e )\n+                } catch (Throwable e)\n                 {\n-                    if ( error == null )\n+                    if (error == null)\n                     {\n-                        error = new RuntimeException( \"Failed to terminate active statements.\", e );\n-                    }\n-                    else\n+                        error = new RuntimeException(\"Failed to terminate active statements.\", e);\n+                    } else\n                     {\n-                        error.addSuppressed( e );\n+                        error.addSuppressed(e);\n                     }\n                 }\n             }\n             ctx.statementOutcomes.clear();\n \n-            if ( error != null )\n+            if (error != null)\n             {\n                 throw error;\n             }\n         }\n \n-        private static void closeActiveStatements( MutableTransactionState ctx, boolean success )\n+        private static void closeActiveStatements(MutableTransactionState ctx, boolean success)\n         {\n             RuntimeException error = null;\n \n-            for ( StatementOutcome outcome : ctx.statementOutcomes.values() )\n+            for (StatementOutcome outcome : ctx.statementOutcomes.values())\n             {\n                 try\n                 {\n                     BoltResultHandle resultHandle = outcome.resultHandle;\n-                    if ( resultHandle != null )\n+                    if (resultHandle != null)\n                     {\n-                        resultHandle.close( success );\n+                        resultHandle.close(success);\n                     }\n \n                     BoltResult result = outcome.result;\n-                    if ( result != null )\n+                    if (result != null)\n                     {\n                         result.close();\n                     }\n-                }\n-                catch ( Throwable e )\n+                } catch (Throwable e)\n                 {\n-                    if ( error == null )\n+                    if (error == null)\n                     {\n-                        error = new RuntimeException( \"Failed to close active statements.\", e );\n-                    }\n-                    else\n+                        error = new RuntimeException(\"Failed to close active statements.\", e);\n+                    } else\n                     {\n-                        error.addSuppressed( e );\n+                        error.addSuppressed(e);\n                     }\n                 }\n             }\n             ctx.statementOutcomes.clear();\n \n-            if ( error != null )\n+            if (error != null)\n             {\n                 throw error;\n             }\n         }\n \n-        void consumeResult( MutableTransactionState ctx, int statementId, StatementOutcome outcome, ResultConsumer resultConsumer ) throws Throwable\n+        void consumeResult(MutableTransactionState ctx, int statementId, StatementOutcome outcome, ResultConsumer resultConsumer) throws Throwable\n         {\n             boolean success = false;\n             try\n             {\n-                resultConsumer.consume( outcome.result );\n+                resultConsumer.consume(outcome.result);\n                 success = true;\n-            }\n-            finally\n+            } finally\n             {\n                 // if throws errors or if we finished consuming result\n-                if ( !success || !resultConsumer.hasMore() )\n+                if (!success || !resultConsumer.hasMore())\n                 {\n                     outcome.result.close();\n                     BoltResultHandle resultHandle = outcome.resultHandle;\n-                    if ( resultHandle != null )\n+                    if (resultHandle != null)\n                     {\n-                        resultHandle.close( success );\n+                        resultHandle.close(success);\n                     }\n-                    ctx.statementOutcomes.remove( statementId );\n+                    ctx.statementOutcomes.remove(statementId);\n                 }\n             }\n         }\n \n-        BoltResult startExecution( BoltResultHandle resultHandle ) throws KernelException\n+        BoltResult startExecution(BoltResultHandle resultHandle) throws KernelException\n         {\n             try\n             {\n                 return resultHandle.start();\n-            }\n-            catch ( Throwable t )\n+            } catch (Throwable t)\n             {\n-                resultHandle.close( false );\n+                resultHandle.close(false);\n                 throw t;\n             }\n         }\n \n     }\n \n-    private static Bookmark newestBookmark( TransactionStateMachineSPI spi, BoltTransaction tx )\n+    private static Bookmark newestBookmark(TransactionStateMachineSPI spi, BoltTransaction tx)\n     {\n-        return spi.newestBookmark( tx );\n+        return spi.newestBookmark(tx);\n     }\n \n     static class MutableTransactionState\n     {\n-        /** The current routing context for internal cluster communication */\n+        /**\n+         * The current routing context for internal cluster communication\n+         */\n         final RoutingContext routingContext;\n \n         int statementCounter;\n \n-        /** The current session security context to be used for starting transactions */\n+        /**\n+         * The current session security context to be used for starting transactions\n+         */\n         final LoginContext loginContext;\n \n-        /** The current transaction, if present */\n+        /**\n+         * The current transaction, if present\n+         */\n         BoltTransaction currentTransaction;\n \n-        final Map<Integer,StatementOutcome> statementOutcomes = new HashMap<>();\n+        final Map<Integer, StatementOutcome> statementOutcomes = new HashMap<>();\n \n         final Clock clock;\n \n@@ -571,7 +565,7 @@ public class TransactionStateMachine implements StatementProcessor\n \n         StatementMetadata lastStatementMetadata;\n \n-        MutableTransactionState( AuthenticationResult authenticationResult, Clock clock, RoutingContext routingContext )\n+        MutableTransactionState(AuthenticationResult authenticationResult, Clock clock, RoutingContext routingContext)\n         {\n             this.clock = clock;\n             this.loginContext = authenticationResult.getLoginContext();\n@@ -589,12 +583,12 @@ public class TransactionStateMachine implements StatementProcessor\n         BoltResultHandle resultHandle;\n         BoltResult result;\n \n-        StatementOutcome( BoltResult result )\n+        StatementOutcome(BoltResult result)\n         {\n             this.result = result;\n         }\n \n-        StatementOutcome( BoltResultHandle resultHandle, BoltResult result )\n+        StatementOutcome(BoltResultHandle resultHandle, BoltResult result)\n         {\n             this.resultHandle = resultHandle;\n             this.result = result;\n",
            "diff_size": 289
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1079",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "71",
                    "column": "60",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "165",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "165",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "187",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "187",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "189",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "189",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "201",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "201",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "220",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "220",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "234",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "234",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "239",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "240",
                    "column": "105",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "246",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "246",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "248",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "248",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "251",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "265",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "270",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "270",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "279",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "281",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "285",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "285",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "285",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "286",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "286",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "286",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "288",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "288",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "293",
                    "column": "64",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "293",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "297",
                    "column": "63",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "298",
                    "column": "123",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "301",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "301",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "308",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "308",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "314",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "314",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "323",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "323",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "328",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "328",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "332",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "332",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "340",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "341",
                    "column": "120",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "343",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "343",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "349",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "349",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "350",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "350",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "352",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "352",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "354",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "354",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "355",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "361",
                    "column": "60",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "361",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "368",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "368",
                    "column": "110",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "374",
                    "column": "58",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "374",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "378",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "378",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "390",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "390",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "394",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "395",
                    "column": "109",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "397",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "397",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "401",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "401",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "407",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "407",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "413",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "413",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "419",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "419",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "425",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "425",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "431",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "431",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "437",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "437",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "443",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "443",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "451",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "452",
                    "column": "117",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "454",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "454",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "458",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "458",
                    "column": "102",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "463",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "463",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "464",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "464",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "474",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "474",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "478",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "478",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "488",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "488",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "494",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "494",
                    "column": "109",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "502",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "503",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "515",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "515",
                    "column": "105",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "518",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "518",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "519",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "519",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "528",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "528",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "531",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "531",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "537",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "537",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "539",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "539",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "544",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "544",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "546",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "546",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "548",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "548",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "548",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "548",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "553",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "553",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1079/LuceneExplicitIndex.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1079/LuceneExplicitIndex.java\nindex 78f8434b684..1801f2a4062 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1079/LuceneExplicitIndex.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1079/LuceneExplicitIndex.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.index.impl.lucene.explicit;\n \n import org.apache.lucene.document.Document;\n@@ -63,500 +64,496 @@ import static org.neo4j.index.impl.lucene.explicit.EntityId.RelationshipData;\n \n public abstract class LuceneExplicitIndex implements ExplicitIndex\n {\n-    static final String KEY_DOC_ID = \"_id_\";\n-    static final String KEY_START_NODE_ID = \"_start_node_id_\";\n-    static final String KEY_END_NODE_ID = \"_end_node_id_\";\n-\n-    private static Set<String> FORBIDDEN_KEYS = new HashSet<>( Arrays.asList(\n-            null, KEY_DOC_ID, KEY_START_NODE_ID, KEY_END_NODE_ID ) );\n-\n-    protected final IndexIdentifier identifier;\n-    final IndexType type;\n-\n-    protected final LuceneTransactionState transaction;\n-    protected final LuceneDataSource dataSource;\n-    protected final IndexCommandFactory commandFactory;\n-\n-    LuceneExplicitIndex( LuceneDataSource dataSource, IndexIdentifier identifier, LuceneTransactionState transaction,\n-            IndexType type, IndexCommandFactory commandFactory )\n-    {\n-        this.dataSource = dataSource;\n-        this.identifier = identifier;\n-        this.transaction = transaction;\n-        this.type = type;\n-        this.commandFactory = commandFactory;\n-    }\n-\n-    /**\n-     * See {@link Index#add(PropertyContainer, String, Object)} for more generic\n-     * documentation.\n-     *\n-     * Adds key/value to the {@code entity} in this index. Added values are\n-     * searchable within the transaction, but composite {@code AND}\n-     * queries aren't guaranteed to return added values correctly within that\n-     * transaction. When the transaction has been committed all such queries\n-     * are guaranteed to return correct results.\n-     *\n-     * @param key the key in the key/value pair to associate with the entity.\n-     * @param value the value in the key/value pair to associate with the\n-     * entity.\n-     */\n+  static final String KEY_DOC_ID = \"_id_\";\n+  static final String KEY_START_NODE_ID = \"_start_node_id_\";\n+  static final String KEY_END_NODE_ID = \"_end_node_id_\";\n+\n+  private static Set<String> FORBIDDEN_KEYS = new HashSet<>(Arrays.asList(\n+      null, KEY_DOC_ID, KEY_START_NODE_ID, KEY_END_NODE_ID));\n+\n+  protected final IndexIdentifier identifier;\n+  final IndexType type;\n+\n+  protected final LuceneTransactionState transaction;\n+  protected final LuceneDataSource dataSource;\n+  protected final IndexCommandFactory commandFactory;\n+\n+  LuceneExplicitIndex(LuceneDataSource dataSource, IndexIdentifier identifier, LuceneTransactionState transaction,\n+                      IndexType type, IndexCommandFactory commandFactory)\n+  {\n+    this.dataSource = dataSource;\n+    this.identifier = identifier;\n+    this.transaction = transaction;\n+    this.type = type;\n+    this.commandFactory = commandFactory;\n+  }\n+\n+  /**\n+   * See {@link Index#add(PropertyContainer, String, Object)} for more generic\n+   * documentation.\n+   * <p>\n+   * Adds key/value to the {@code entity} in this index. Added values are\n+   * searchable within the transaction, but composite {@code AND}\n+   * queries aren't guaranteed to return added values correctly within that\n+   * transaction. When the transaction has been committed all such queries\n+   * are guaranteed to return correct results.\n+   *\n+   * @param key   the key in the key/value pair to associate with the entity.\n+   * @param value the value in the key/value pair to associate with the\n+   *              entity.\n+   */\n+  @Override\n+  public void addNode(long entityId, String key, Object value) throws ExplicitIndexNotFoundKernelException\n+  {\n+    assertValidKey(key);\n+    assertValidValue(value);\n+    EntityId entity = new IdData(entityId);\n+    for (Object oneValue : IoPrimitiveUtils.asArray(value))\n+    {\n+      oneValue = getCorrectValue(oneValue);\n+      dataSource.assertValidType(key, oneValue, identifier);\n+      transaction.add(this, entity, key, oneValue);\n+      commandFactory.addNode(identifier.indexName, entityId, key, oneValue);\n+    }\n+  }\n+\n+  protected Object getCorrectValue(Object value)\n+  {\n+    assertValidValue(value);\n+    Object result = value instanceof ValueContext\n+        ? ((ValueContext) value).getCorrectValue()\n+        : value.toString();\n+    assertValidValue(result);\n+    return result;\n+  }\n+\n+  static boolean isValidKey(String key)\n+  {\n+    return !FORBIDDEN_KEYS.contains(key);\n+  }\n+\n+  private static void assertValidKey(String key)\n+  {\n+    if (!isValidKey(key))\n+    {\n+      throw new IllegalArgumentException(\"Key \" + key + \" forbidden\");\n+    }\n+  }\n+\n+  private static void assertValidValue(Object value)\n+  {\n+    ExplicitIndexValueValidator.INSTANCE.validate(value);\n+  }\n+\n+  /**\n+   * See {@link Index#remove(PropertyContainer, String, Object)} for more\n+   * generic documentation.\n+   * <p>\n+   * Removes key/value to the {@code entity} in this index. Removed values\n+   * are excluded within the transaction, but composite {@code AND}\n+   * queries aren't guaranteed to exclude removed values correctly within\n+   * that transaction. When the transaction has been committed all such\n+   * queries are guaranteed to return correct results.\n+   *\n+   * @param entityId the entity (i.e {@link Node} or {@link Relationship})\n+   *                 to dissociate the key/value pair from.\n+   * @param key      the key in the key/value pair to dissociate from the entity.\n+   * @param value    the value in the key/value pair to dissociate from the\n+   *                 entity.\n+   */\n+  @Override\n+  public void remove(long entityId, String key, Object value)\n+  {\n+    assertValidKey(key);\n+    EntityId entity = new IdData(entityId);\n+    for (Object oneValue : IoPrimitiveUtils.asArray(value))\n+    {\n+      oneValue = getCorrectValue(oneValue);\n+      transaction.remove(this, entity, key, oneValue);\n+      addRemoveCommand(entityId, key, oneValue);\n+    }\n+  }\n+\n+  @Override\n+  public void remove(long entityId, String key)\n+  {\n+    assertValidKey(key);\n+    EntityId entity = new IdData(entityId);\n+    transaction.remove(this, entity, key);\n+    addRemoveCommand(entityId, key, null);\n+  }\n+\n+  @Override\n+  public void remove(long entityId)\n+  {\n+    EntityId entity = new IdData(entityId);\n+    transaction.remove(this, entity);\n+    addRemoveCommand(entityId, null, null);\n+  }\n+\n+  @Override\n+  public void drop()\n+  {\n+    transaction.delete(this);\n+  }\n+\n+  @Override\n+  public ExplicitIndexHits get(String key, Object value) throws ExplicitIndexNotFoundKernelException\n+  {\n+    return query(type.get(key, value), key, value, null);\n+  }\n+\n+  /**\n+   * {@inheritDoc}\n+   * <p>\n+   * {@code queryOrQueryObject} can be a {@link String} containing the query\n+   * in Lucene syntax format, http://lucene.apache.org/java/3_0_2/queryparsersyntax.html.\n+   * Or it can be a {@link Query} object. If can even be a {@link QueryContext}\n+   * object which can contain a query ({@link String} or {@link Query}) and\n+   * additional parameters, such as {@link Sort}.\n+   * <p>\n+   * Because of performance issues, including uncommitted transaction modifications\n+   * in the result is disabled by default, but can be enabled using\n+   * {@link QueryContext#tradeCorrectnessForSpeed()}.\n+   */\n+  @Override\n+  public ExplicitIndexHits query(String key, Object queryOrQueryObject) throws ExplicitIndexNotFoundKernelException\n+  {\n+    QueryContext context = queryOrQueryObject instanceof QueryContext ?\n+        (QueryContext) queryOrQueryObject : null;\n+    return query(type.query(key, context != null ?\n+        context.getQueryOrQueryObject() : queryOrQueryObject, context), null, null, context);\n+  }\n+\n+  /**\n+   * {@inheritDoc}\n+   *\n+   * @see #query(String, Object)\n+   */\n+  @Override\n+  public ExplicitIndexHits query(Object queryOrQueryObject) throws ExplicitIndexNotFoundKernelException\n+  {\n+    return query(null, queryOrQueryObject);\n+  }\n+\n+  protected ExplicitIndexHits query(Query query, String keyForDirectLookup,\n+                                    Object valueForDirectLookup, QueryContext additionalParametersOrNull)\n+      throws ExplicitIndexNotFoundKernelException\n+  {\n+    List<EntityId> simpleTransactionStateIds = new ArrayList<>();\n+    Collection<EntityId> removedIdsFromTransactionState = Collections.emptySet();\n+    IndexSearcher fulltextTransactionStateSearcher = null;\n+    if (transaction != null)\n+    {\n+      if (keyForDirectLookup != null)\n+      {\n+        simpleTransactionStateIds.addAll(transaction.getAddedIds(this, keyForDirectLookup, valueForDirectLookup));\n+      } else\n+      {\n+        fulltextTransactionStateSearcher = transaction.getAdditionsAsSearcher(this, additionalParametersOrNull);\n+      }\n+      removedIdsFromTransactionState = keyForDirectLookup != null ?\n+          transaction.getRemovedIds(this, keyForDirectLookup, valueForDirectLookup) :\n+          transaction.getRemovedIds(this, query);\n+    }\n+    ExplicitIndexHits idIterator = null;\n+    IndexReference searcher;\n+    dataSource.getReadLock();\n+    try\n+    {\n+      searcher = dataSource.getIndexSearcher(identifier);\n+    } finally\n+    {\n+      dataSource.releaseReadLock();\n+    }\n+\n+    if (searcher != null)\n+    {\n+      try\n+      {\n+        // Gather all added ids from fulltextTransactionStateSearcher and simpleTransactionStateIds.\n+        PrimitiveLongSet idsModifiedInTransactionState = gatherIdsModifiedInTransactionState(\n+            simpleTransactionStateIds, fulltextTransactionStateSearcher, query);\n+\n+        // Do the combined search from store and fulltext tx state\n+        DocToIdIterator hits = new DocToIdIterator(search(searcher, fulltextTransactionStateSearcher,\n+            query, additionalParametersOrNull, removedIdsFromTransactionState),\n+            removedIdsFromTransactionState, searcher, idsModifiedInTransactionState);\n+\n+        idIterator = simpleTransactionStateIds.isEmpty() ? hits : new CombinedIndexHits(\n+            Arrays.asList(hits,\n+                new ConstantScoreIterator(simpleTransactionStateIds, Float.NaN)));\n+      } catch (IOException e)\n+      {\n+        throw new RuntimeException(\"Unable to query \" + this + \" with \" + query, e);\n+      }\n+    }\n+\n+    // We've only got transaction state\n+    idIterator = idIterator == null ? new ConstantScoreIterator(simpleTransactionStateIds, 0) : idIterator;\n+    return idIterator;\n+  }\n+\n+  private PrimitiveLongSet gatherIdsModifiedInTransactionState(List<EntityId> simpleTransactionStateIds,\n+                                                               IndexSearcher fulltextTransactionStateSearcher, Query query) throws IOException\n+  {\n+    // If there's no state them don't bother gathering it\n+    if (simpleTransactionStateIds.isEmpty() && fulltextTransactionStateSearcher == null)\n+    {\n+      return PrimitiveLongCollections.emptySet();\n+    }\n+    // There's potentially some state\n+    DocValuesCollector docValuesCollector = null;\n+    int fulltextSize = 0;\n+    if (fulltextTransactionStateSearcher != null)\n+    {\n+      docValuesCollector = new DocValuesCollector();\n+      fulltextTransactionStateSearcher.search(query, docValuesCollector);\n+      fulltextSize = docValuesCollector.getTotalHits();\n+      // Nah, no state\n+      if (simpleTransactionStateIds.isEmpty() && fulltextSize == 0)\n+      {\n+        return PrimitiveLongCollections.emptySet();\n+      }\n+    }\n+\n+    PrimitiveLongSet set = longSet(simpleTransactionStateIds.size() + fulltextSize);\n+\n+    // Add from simple tx state\n+    for (EntityId id : simpleTransactionStateIds)\n+    {\n+      set.add(id.id());\n+    }\n+\n+    if (docValuesCollector != null)\n+    {\n+      // Add from fulltext tx state\n+      PrimitiveLongIterator valuesIterator = docValuesCollector.getValuesIterator(LuceneExplicitIndex.KEY_DOC_ID);\n+      while (valuesIterator.hasNext())\n+      {\n+        set.add(valuesIterator.next());\n+      }\n+    }\n+    return set;\n+  }\n+\n+  private IndexHits<Document> search(IndexReference searcherRef, IndexSearcher fulltextTransactionStateSearcher,\n+                                     Query query, QueryContext additionalParametersOrNull, Collection<EntityId> removed) throws IOException\n+  {\n+    if (fulltextTransactionStateSearcher != null && !removed.isEmpty())\n+    {\n+      letThroughAdditions(fulltextTransactionStateSearcher, query, removed);\n+    }\n+\n+    IndexSearcher searcher = fulltextTransactionStateSearcher == null ? searcherRef.getSearcher() :\n+        new IndexSearcher(new MultiReader(searcherRef.getSearcher().getIndexReader(),\n+            fulltextTransactionStateSearcher.getIndexReader()));\n+    IndexHits<Document> result;\n+    if (additionalParametersOrNull != null && additionalParametersOrNull.getTop() > 0)\n+    {\n+      result = new TopDocsIterator(query, additionalParametersOrNull, searcher);\n+    } else\n+    {\n+      Sort sorting = additionalParametersOrNull != null ?\n+          additionalParametersOrNull.getSorting() : null;\n+      boolean forceScore = additionalParametersOrNull == null ||\n+          !additionalParametersOrNull.getTradeCorrectnessForSpeed();\n+      DocValuesCollector collector = new DocValuesCollector(forceScore);\n+      searcher.search(query, collector);\n+      return collector.getIndexHits(sorting);\n+    }\n+    return result;\n+  }\n+\n+  private void letThroughAdditions(IndexSearcher additionsSearcher, Query query, Collection<EntityId> removed)\n+      throws IOException\n+  {\n+    // This could be improved further by doing a term-dict lookup for every term in removed\n+    // and retaining only those that did not match.\n+    // This is getting quite low-level though\n+    DocValuesCollector collector = new DocValuesCollector(false);\n+    additionsSearcher.search(query, collector);\n+    PrimitiveLongIterator valuesIterator = collector.getValuesIterator(KEY_DOC_ID);\n+    LongCostume id = new LongCostume();\n+    while (valuesIterator.hasNext())\n+    {\n+      long value = valuesIterator.next();\n+      removed.remove(id.setId(value));\n+    }\n+  }\n+\n+  IndexIdentifier getIdentifier()\n+  {\n+    return this.identifier;\n+  }\n+\n+  protected abstract void addRemoveCommand(long entity, String key, Object value);\n+\n+  static class NodeExplicitIndex extends LuceneExplicitIndex\n+  {\n+    NodeExplicitIndex(LuceneDataSource dataSource, IndexIdentifier identifier,\n+                      LuceneTransactionState transaction, IndexType type, IndexCommandFactory commandFactory)\n+    {\n+      super(dataSource, identifier, transaction, type, commandFactory);\n+    }\n+\n+    @Override\n+    public ExplicitIndexHits get(String key, Object value, long startNode, long endNode)\n+    {\n+      throw new UnsupportedOperationException();\n+    }\n+\n+    @Override\n+    public ExplicitIndexHits query(String key, Object queryOrQueryObject, long startNode, long endNode)\n+    {\n+      throw new UnsupportedOperationException();\n+    }\n+\n+    @Override\n+    public ExplicitIndexHits query(Object queryOrQueryObject, long startNode, long endNode)\n+    {\n+      throw new UnsupportedOperationException();\n+    }\n+\n     @Override\n-    public void addNode( long entityId, String key, Object value ) throws ExplicitIndexNotFoundKernelException\n+    public void addRelationship(long entity, String key, Object value, long startNode, long endNode)\n     {\n-        assertValidKey( key );\n-        assertValidValue( value );\n-        EntityId entity = new IdData( entityId );\n-        for ( Object oneValue : IoPrimitiveUtils.asArray( value ) )\n-        {\n-            oneValue = getCorrectValue( oneValue );\n-            dataSource.assertValidType( key, oneValue, identifier );\n-            transaction.add( this, entity, key, oneValue );\n-            commandFactory.addNode( identifier.indexName, entityId, key, oneValue );\n-        }\n+      throw new UnsupportedOperationException();\n     }\n \n-    protected Object getCorrectValue( Object value )\n+    @Override\n+    public void removeRelationship(long entity, String key, Object value, long startNode, long endNode)\n+    {\n+      throw new UnsupportedOperationException();\n+    }\n+\n+    @Override\n+    public void removeRelationship(long entity, String key, long startNode, long endNode)\n+    {\n+      throw new UnsupportedOperationException();\n+    }\n+\n+    @Override\n+    public void removeRelationship(long entity, long startNode, long endNode)\n     {\n-        assertValidValue( value );\n-        Object result = value instanceof ValueContext\n-                ? ((ValueContext) value).getCorrectValue()\n-                : value.toString();\n-        assertValidValue( result );\n-        return result;\n+      throw new UnsupportedOperationException();\n     }\n \n-    static boolean isValidKey( String key )\n+    @Override\n+    protected void addRemoveCommand(long entity, String key, Object value)\n     {\n-        return !FORBIDDEN_KEYS.contains( key );\n+      commandFactory.removeNode(identifier.indexName, entity, key, value);\n     }\n+  }\n \n-    private static void assertValidKey( String key )\n+  static class RelationshipExplicitIndex extends LuceneExplicitIndex\n+  {\n+    RelationshipExplicitIndex(LuceneDataSource dataSource, IndexIdentifier identifier,\n+                              LuceneTransactionState transaction, IndexType type, IndexCommandFactory commandFactory)\n     {\n-        if ( !isValidKey( key ) )\n-        {\n-            throw new IllegalArgumentException( \"Key \" + key + \" forbidden\" );\n-        }\n+      super(dataSource, identifier, transaction, type, commandFactory);\n     }\n \n-    private static void assertValidValue( Object value )\n+    @Override\n+    public void addRelationship(long entityId, String key, Object value, long startNode, long endNode)\n+        throws ExplicitIndexNotFoundKernelException\n     {\n-        ExplicitIndexValueValidator.INSTANCE.validate( value );\n+      assertValidKey(key);\n+      assertValidValue(value);\n+      RelationshipData entity = new RelationshipData(entityId, startNode, endNode);\n+      for (Object oneValue : IoPrimitiveUtils.asArray(value))\n+      {\n+        oneValue = getCorrectValue(oneValue);\n+        dataSource.assertValidType(key, oneValue, identifier);\n+        transaction.add(this, entity, key, oneValue);\n+        commandFactory.addRelationship(identifier.indexName, entityId, key, oneValue, startNode, endNode);\n+      }\n     }\n \n-    /**\n-     * See {@link Index#remove(PropertyContainer, String, Object)} for more\n-     * generic documentation.\n-     *\n-     * Removes key/value to the {@code entity} in this index. Removed values\n-     * are excluded within the transaction, but composite {@code AND}\n-     * queries aren't guaranteed to exclude removed values correctly within\n-     * that transaction. When the transaction has been committed all such\n-     * queries are guaranteed to return correct results.\n-     *\n-     * @param entityId the entity (i.e {@link Node} or {@link Relationship})\n-     * to dissociate the key/value pair from.\n-     * @param key the key in the key/value pair to dissociate from the entity.\n-     * @param value the value in the key/value pair to dissociate from the\n-     * entity.\n-     */\n     @Override\n-    public void remove( long entityId, String key, Object value )\n+    public ExplicitIndexHits get(String key, Object valueOrNull, long startNode, long endNode)\n+        throws ExplicitIndexNotFoundKernelException\n     {\n-        assertValidKey( key );\n-        EntityId entity = new IdData( entityId );\n-        for ( Object oneValue : IoPrimitiveUtils.asArray( value ) )\n-        {\n-            oneValue = getCorrectValue( oneValue );\n-            transaction.remove( this, entity, key, oneValue );\n-            addRemoveCommand( entityId, key, oneValue );\n-        }\n+      BooleanQuery.Builder builder = new BooleanQuery.Builder();\n+      if (key != null && valueOrNull != null)\n+      {\n+        builder.add(type.get(key, valueOrNull), Occur.MUST);\n+      }\n+      addIfAssigned(builder, startNode, KEY_START_NODE_ID);\n+      addIfAssigned(builder, endNode, KEY_END_NODE_ID);\n+      return query(builder.build(), null, null, null);\n     }\n \n     @Override\n-    public void remove( long entityId, String key )\n+    protected void addRemoveCommand(long entity, String key, Object value)\n     {\n-        assertValidKey( key );\n-        EntityId entity = new IdData( entityId );\n-        transaction.remove( this, entity, key );\n-        addRemoveCommand( entityId, key, null );\n+      commandFactory.removeRelationship(identifier.indexName, entity, key, value);\n     }\n \n     @Override\n-    public void remove( long entityId )\n+    public ExplicitIndexHits query(String key, Object queryOrQueryObjectOrNull, long startNode, long endNode)\n+        throws ExplicitIndexNotFoundKernelException\n     {\n-        EntityId entity = new IdData( entityId );\n-        transaction.remove( this, entity );\n-        addRemoveCommand( entityId, null, null );\n+      QueryContext context = queryOrQueryObjectOrNull != null &&\n+          queryOrQueryObjectOrNull instanceof QueryContext ?\n+          (QueryContext) queryOrQueryObjectOrNull : null;\n+\n+      BooleanQuery.Builder builder = new BooleanQuery.Builder();\n+      if ((context != null && context.getQueryOrQueryObject() != null) ||\n+          (context == null && queryOrQueryObjectOrNull != null))\n+      {\n+        builder.add(type.query(key, context != null ?\n+                context.getQueryOrQueryObject() : queryOrQueryObjectOrNull, context),\n+            Occur.MUST);\n+      }\n+      addIfAssigned(builder, startNode, KEY_START_NODE_ID);\n+      addIfAssigned(builder, endNode, KEY_END_NODE_ID);\n+      return query(builder.build(), null, null, context);\n     }\n \n     @Override\n-    public void drop()\n+    public void removeRelationship(long entityId, String key, Object value, long startNode, long endNode)\n     {\n-        transaction.delete( this );\n+      assertValidKey(key);\n+      RelationshipData entity = new RelationshipData(entityId, startNode, endNode);\n+      for (Object oneValue : IoPrimitiveUtils.asArray(value))\n+      {\n+        oneValue = getCorrectValue(oneValue);\n+        transaction.remove(this, entity, key, oneValue);\n+        addRemoveCommand(entityId, key, oneValue);\n+      }\n     }\n \n     @Override\n-    public ExplicitIndexHits get( String key, Object value ) throws ExplicitIndexNotFoundKernelException\n-    {\n-        return query( type.get( key, value ), key, value, null );\n-    }\n-\n-    /**\n-     * {@inheritDoc}\n-     *\n-     * {@code queryOrQueryObject} can be a {@link String} containing the query\n-     * in Lucene syntax format, http://lucene.apache.org/java/3_0_2/queryparsersyntax.html.\n-     * Or it can be a {@link Query} object. If can even be a {@link QueryContext}\n-     * object which can contain a query ({@link String} or {@link Query}) and\n-     * additional parameters, such as {@link Sort}.\n-     *\n-     * Because of performance issues, including uncommitted transaction modifications\n-     * in the result is disabled by default, but can be enabled using\n-     * {@link QueryContext#tradeCorrectnessForSpeed()}.\n-     */\n+    public void removeRelationship(long entityId, String key, long startNode, long endNode)\n+    {\n+      assertValidKey(key);\n+      RelationshipData entity = new RelationshipData(entityId, startNode, endNode);\n+      transaction.remove(this, entity, key);\n+      addRemoveCommand(entityId, key, null);\n+    }\n+\n     @Override\n-    public ExplicitIndexHits query( String key, Object queryOrQueryObject ) throws ExplicitIndexNotFoundKernelException\n+    public void removeRelationship(long entityId, long startNode, long endNode)\n     {\n-        QueryContext context = queryOrQueryObject instanceof QueryContext ?\n-                (QueryContext) queryOrQueryObject : null;\n-        return query( type.query( key, context != null ?\n-                context.getQueryOrQueryObject() : queryOrQueryObject, context ), null, null, context );\n+      RelationshipData entity = new RelationshipData(entityId, startNode, endNode);\n+      transaction.remove(this, entity);\n+      addRemoveCommand(entityId, null, null);\n+    }\n+\n+    private static void addIfAssigned(BooleanQuery.Builder builder, long node, String field)\n+    {\n+      if (node != -1)\n+      {\n+        builder.add(new TermQuery(new Term(field, \"\" + node)), Occur.MUST);\n+      }\n     }\n \n-    /**\n-     * {@inheritDoc}\n-     *\n-     * @see #query(String, Object)\n-     */\n     @Override\n-    public ExplicitIndexHits query( Object queryOrQueryObject ) throws ExplicitIndexNotFoundKernelException\n-    {\n-        return query( null, queryOrQueryObject );\n-    }\n-\n-    protected ExplicitIndexHits query( Query query, String keyForDirectLookup,\n-            Object valueForDirectLookup, QueryContext additionalParametersOrNull )\n-            throws ExplicitIndexNotFoundKernelException\n-    {\n-        List<EntityId> simpleTransactionStateIds = new ArrayList<>();\n-        Collection<EntityId> removedIdsFromTransactionState = Collections.emptySet();\n-        IndexSearcher fulltextTransactionStateSearcher = null;\n-        if ( transaction != null )\n-        {\n-            if ( keyForDirectLookup != null )\n-            {\n-                simpleTransactionStateIds.addAll( transaction.getAddedIds( this, keyForDirectLookup, valueForDirectLookup ) );\n-            }\n-            else\n-            {\n-                fulltextTransactionStateSearcher = transaction.getAdditionsAsSearcher( this, additionalParametersOrNull );\n-            }\n-            removedIdsFromTransactionState = keyForDirectLookup != null ?\n-                    transaction.getRemovedIds( this, keyForDirectLookup, valueForDirectLookup ) :\n-                    transaction.getRemovedIds( this, query );\n-        }\n-        ExplicitIndexHits idIterator = null;\n-        IndexReference searcher;\n-        dataSource.getReadLock();\n-        try\n-        {\n-            searcher = dataSource.getIndexSearcher( identifier );\n-        }\n-        finally\n-        {\n-            dataSource.releaseReadLock();\n-        }\n-\n-        if ( searcher != null )\n-        {\n-            try\n-            {\n-                // Gather all added ids from fulltextTransactionStateSearcher and simpleTransactionStateIds.\n-                PrimitiveLongSet idsModifiedInTransactionState = gatherIdsModifiedInTransactionState(\n-                        simpleTransactionStateIds, fulltextTransactionStateSearcher, query );\n-\n-                // Do the combined search from store and fulltext tx state\n-                DocToIdIterator hits = new DocToIdIterator( search( searcher, fulltextTransactionStateSearcher,\n-                        query, additionalParametersOrNull, removedIdsFromTransactionState ),\n-                        removedIdsFromTransactionState, searcher, idsModifiedInTransactionState );\n-\n-                idIterator = simpleTransactionStateIds.isEmpty() ? hits : new CombinedIndexHits(\n-                        Arrays.asList( hits,\n-                                new ConstantScoreIterator( simpleTransactionStateIds, Float.NaN ) ) );\n-            }\n-            catch ( IOException e )\n-            {\n-                throw new RuntimeException( \"Unable to query \" + this + \" with \" + query, e );\n-            }\n-        }\n-\n-        // We've only got transaction state\n-        idIterator = idIterator == null ? new ConstantScoreIterator( simpleTransactionStateIds, 0 ) : idIterator;\n-        return idIterator;\n-    }\n-\n-    private PrimitiveLongSet gatherIdsModifiedInTransactionState( List<EntityId> simpleTransactionStateIds,\n-            IndexSearcher fulltextTransactionStateSearcher, Query query ) throws IOException\n-    {\n-        // If there's no state them don't bother gathering it\n-        if ( simpleTransactionStateIds.isEmpty() && fulltextTransactionStateSearcher == null )\n-        {\n-            return PrimitiveLongCollections.emptySet();\n-        }\n-        // There's potentially some state\n-        DocValuesCollector docValuesCollector = null;\n-        int fulltextSize = 0;\n-        if ( fulltextTransactionStateSearcher != null )\n-        {\n-            docValuesCollector = new DocValuesCollector();\n-            fulltextTransactionStateSearcher.search( query, docValuesCollector );\n-            fulltextSize = docValuesCollector.getTotalHits();\n-            // Nah, no state\n-            if ( simpleTransactionStateIds.isEmpty() && fulltextSize == 0 )\n-            {\n-                return PrimitiveLongCollections.emptySet();\n-            }\n-        }\n-\n-        PrimitiveLongSet set = longSet( simpleTransactionStateIds.size() + fulltextSize );\n-\n-        // Add from simple tx state\n-        for ( EntityId id : simpleTransactionStateIds )\n-        {\n-            set.add( id.id() );\n-        }\n-\n-        if ( docValuesCollector != null )\n-        {\n-            // Add from fulltext tx state\n-            PrimitiveLongIterator valuesIterator = docValuesCollector.getValuesIterator( LuceneExplicitIndex.KEY_DOC_ID );\n-            while ( valuesIterator.hasNext() )\n-            {\n-                set.add( valuesIterator.next() );\n-            }\n-        }\n-        return set;\n-    }\n-\n-    private IndexHits<Document> search( IndexReference searcherRef, IndexSearcher fulltextTransactionStateSearcher,\n-            Query query, QueryContext additionalParametersOrNull, Collection<EntityId> removed ) throws IOException\n-    {\n-        if ( fulltextTransactionStateSearcher != null && !removed.isEmpty() )\n-        {\n-            letThroughAdditions( fulltextTransactionStateSearcher, query, removed );\n-        }\n-\n-        IndexSearcher searcher = fulltextTransactionStateSearcher == null ? searcherRef.getSearcher() :\n-                new IndexSearcher( new MultiReader( searcherRef.getSearcher().getIndexReader(),\n-                        fulltextTransactionStateSearcher.getIndexReader() ) );\n-        IndexHits<Document> result;\n-        if ( additionalParametersOrNull != null && additionalParametersOrNull.getTop() > 0 )\n-        {\n-            result = new TopDocsIterator( query, additionalParametersOrNull, searcher );\n-        }\n-        else\n-        {\n-            Sort sorting = additionalParametersOrNull != null ?\n-                    additionalParametersOrNull.getSorting() : null;\n-            boolean forceScore = additionalParametersOrNull == null ||\n-                    !additionalParametersOrNull.getTradeCorrectnessForSpeed();\n-            DocValuesCollector collector = new DocValuesCollector( forceScore );\n-            searcher.search( query, collector );\n-            return collector.getIndexHits( sorting );\n-        }\n-        return result;\n-    }\n-\n-    private void letThroughAdditions( IndexSearcher additionsSearcher, Query query, Collection<EntityId> removed )\n-            throws IOException\n-    {\n-        // This could be improved further by doing a term-dict lookup for every term in removed\n-        // and retaining only those that did not match.\n-        // This is getting quite low-level though\n-        DocValuesCollector collector = new DocValuesCollector( false );\n-        additionsSearcher.search( query, collector );\n-        PrimitiveLongIterator valuesIterator = collector.getValuesIterator( KEY_DOC_ID );\n-        LongCostume id = new LongCostume();\n-        while ( valuesIterator.hasNext() )\n-        {\n-            long value = valuesIterator.next();\n-            removed.remove( id.setId( value ) );\n-        }\n-    }\n-\n-    IndexIdentifier getIdentifier()\n-    {\n-        return this.identifier;\n-    }\n-\n-    protected abstract void addRemoveCommand( long entity, String key, Object value );\n-\n-    static class NodeExplicitIndex extends LuceneExplicitIndex\n-    {\n-        NodeExplicitIndex( LuceneDataSource dataSource, IndexIdentifier identifier,\n-                LuceneTransactionState transaction, IndexType type, IndexCommandFactory commandFactory )\n-        {\n-            super( dataSource, identifier, transaction, type, commandFactory );\n-        }\n-\n-        @Override\n-        public ExplicitIndexHits get( String key, Object value, long startNode, long endNode )\n-        {\n-            throw new UnsupportedOperationException();\n-        }\n-\n-        @Override\n-        public ExplicitIndexHits query( String key, Object queryOrQueryObject, long startNode, long endNode )\n-        {\n-            throw new UnsupportedOperationException();\n-        }\n-\n-        @Override\n-        public ExplicitIndexHits query( Object queryOrQueryObject, long startNode, long endNode )\n-        {\n-            throw new UnsupportedOperationException();\n-        }\n-\n-        @Override\n-        public void addRelationship( long entity, String key, Object value, long startNode, long endNode )\n-        {\n-            throw new UnsupportedOperationException();\n-        }\n-\n-        @Override\n-        public void removeRelationship( long entity, String key, Object value, long startNode, long endNode )\n-        {\n-            throw new UnsupportedOperationException();\n-        }\n-\n-        @Override\n-        public void removeRelationship( long entity, String key, long startNode, long endNode )\n-        {\n-            throw new UnsupportedOperationException();\n-        }\n-\n-        @Override\n-        public void removeRelationship( long entity, long startNode, long endNode )\n-        {\n-            throw new UnsupportedOperationException();\n-        }\n-\n-        @Override\n-        protected void addRemoveCommand( long entity, String key, Object value )\n-        {\n-            commandFactory.removeNode( identifier.indexName, entity, key, value );\n-        }\n-    }\n-\n-    static class RelationshipExplicitIndex extends LuceneExplicitIndex\n-    {\n-        RelationshipExplicitIndex( LuceneDataSource dataSource, IndexIdentifier identifier,\n-                LuceneTransactionState transaction, IndexType type, IndexCommandFactory commandFactory )\n-        {\n-            super( dataSource, identifier, transaction, type, commandFactory );\n-        }\n-\n-        @Override\n-        public void addRelationship( long entityId, String key, Object value, long startNode, long endNode )\n-                throws ExplicitIndexNotFoundKernelException\n-        {\n-            assertValidKey( key );\n-            assertValidValue( value );\n-            RelationshipData entity = new RelationshipData( entityId, startNode, endNode );\n-            for ( Object oneValue : IoPrimitiveUtils.asArray( value ) )\n-            {\n-                oneValue = getCorrectValue( oneValue );\n-                dataSource.assertValidType( key, oneValue, identifier );\n-                transaction.add( this, entity, key, oneValue );\n-                commandFactory.addRelationship( identifier.indexName, entityId, key, oneValue, startNode, endNode );\n-            }\n-        }\n-\n-        @Override\n-        public ExplicitIndexHits get( String key, Object valueOrNull, long startNode, long endNode )\n-                throws ExplicitIndexNotFoundKernelException\n-        {\n-            BooleanQuery.Builder builder = new BooleanQuery.Builder();\n-            if ( key != null && valueOrNull != null )\n-            {\n-                builder.add( type.get( key, valueOrNull ), Occur.MUST );\n-            }\n-            addIfAssigned( builder, startNode, KEY_START_NODE_ID );\n-            addIfAssigned( builder, endNode, KEY_END_NODE_ID );\n-            return query( builder.build(), null, null, null );\n-        }\n-\n-        @Override\n-        protected void addRemoveCommand( long entity, String key, Object value )\n-        {\n-            commandFactory.removeRelationship( identifier.indexName, entity, key, value );\n-        }\n-\n-        @Override\n-        public ExplicitIndexHits query( String key, Object queryOrQueryObjectOrNull, long startNode, long endNode )\n-                throws ExplicitIndexNotFoundKernelException\n-        {\n-            QueryContext context = queryOrQueryObjectOrNull != null &&\n-                    queryOrQueryObjectOrNull instanceof QueryContext ?\n-                            (QueryContext) queryOrQueryObjectOrNull : null;\n-\n-            BooleanQuery.Builder builder = new BooleanQuery.Builder();\n-            if ( (context != null && context.getQueryOrQueryObject() != null) ||\n-                    (context == null && queryOrQueryObjectOrNull != null ) )\n-            {\n-                builder.add( type.query( key, context != null ?\n-                                              context.getQueryOrQueryObject() : queryOrQueryObjectOrNull, context ),\n-                        Occur.MUST );\n-            }\n-            addIfAssigned( builder, startNode, KEY_START_NODE_ID );\n-            addIfAssigned( builder, endNode, KEY_END_NODE_ID );\n-            return query( builder.build(), null, null, context );\n-        }\n-\n-        @Override\n-        public void removeRelationship( long entityId, String key, Object value, long startNode, long endNode )\n-        {\n-            assertValidKey( key );\n-            RelationshipData entity = new RelationshipData( entityId, startNode, endNode );\n-            for ( Object oneValue : IoPrimitiveUtils.asArray( value ) )\n-            {\n-                oneValue = getCorrectValue( oneValue );\n-                transaction.remove( this, entity, key, oneValue );\n-                addRemoveCommand( entityId, key, oneValue );\n-            }\n-        }\n-\n-        @Override\n-        public void removeRelationship( long entityId, String key, long startNode, long endNode )\n-        {\n-            assertValidKey( key );\n-            RelationshipData entity = new RelationshipData( entityId, startNode, endNode );\n-            transaction.remove( this, entity, key );\n-            addRemoveCommand( entityId, key, null );\n-        }\n-\n-        @Override\n-        public void removeRelationship( long entityId, long startNode, long endNode )\n-        {\n-            RelationshipData entity = new RelationshipData( entityId, startNode, endNode );\n-            transaction.remove( this, entity );\n-            addRemoveCommand( entityId, null, null );\n-        }\n-\n-        private static void addIfAssigned( BooleanQuery.Builder builder, long node, String field )\n-        {\n-            if ( node != -1 )\n-            {\n-                builder.add( new TermQuery( new Term( field, \"\" + node ) ), Occur.MUST );\n-            }\n-        }\n-\n-        @Override\n-        public ExplicitIndexHits query( Object queryOrQueryObjectOrNull, long startNode, long endNode )\n-                throws ExplicitIndexNotFoundKernelException\n-        {\n-            return query( null, queryOrQueryObjectOrNull, startNode, endNode );\n-        }\n+    public ExplicitIndexHits query(Object queryOrQueryObjectOrNull, long startNode, long endNode)\n+        throws ExplicitIndexNotFoundKernelException\n+    {\n+      return query(null, queryOrQueryObjectOrNull, startNode, endNode);\n     }\n+  }\n }\n",
            "diff_size": 829
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "250",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 181).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "270",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 171).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "273",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 167).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "274",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 172).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "338",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 238).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1079/LuceneExplicitIndex.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1079/LuceneExplicitIndex.java\nindex 78f8434b684..31e2d63dcc8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1079/LuceneExplicitIndex.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1079/LuceneExplicitIndex.java\n@@ -67,10 +67,8 @@ public abstract class LuceneExplicitIndex implements ExplicitIndex\n     static final String KEY_START_NODE_ID = \"_start_node_id_\";\n     static final String KEY_END_NODE_ID = \"_end_node_id_\";\n \n-    private static Set<String> FORBIDDEN_KEYS = new HashSet<>( Arrays.asList(\n-            null, KEY_DOC_ID, KEY_START_NODE_ID, KEY_END_NODE_ID ) );\n-\n-    protected final IndexIdentifier identifier;\n+    private static Set<String> FORBIDDEN_KEYS = new HashSet<>( Arrays.asList( null, KEY_DOC_ID, KEY_START_NODE_ID, KEY_END_NODE_ID ) );\n+protected final IndexIdentifier identifier;\n     final IndexType type;\n \n     protected final LuceneTransactionState transaction;\n@@ -119,10 +117,9 @@ public abstract class LuceneExplicitIndex implements ExplicitIndex\n     protected Object getCorrectValue( Object value )\n     {\n         assertValidValue( value );\n-        Object result = value instanceof ValueContext\n-                ? ((ValueContext) value).getCorrectValue()\n-                : value.toString();\n-        assertValidValue( result );\n+        Object result = value instanceof ValueContext ? ((ValueContext) value).getCorrectValue() : value.toString();\n+\n+assertValidValue( result );\n         return result;\n     }\n \n@@ -218,10 +215,8 @@ public abstract class LuceneExplicitIndex implements ExplicitIndex\n     @Override\n     public ExplicitIndexHits query( String key, Object queryOrQueryObject ) throws ExplicitIndexNotFoundKernelException\n     {\n-        QueryContext context = queryOrQueryObject instanceof QueryContext ?\n-                (QueryContext) queryOrQueryObject : null;\n-        return query( type.query( key, context != null ?\n-                context.getQueryOrQueryObject() : queryOrQueryObject, context ), null, null, context );\n+        QueryContext context = queryOrQueryObject instanceof QueryContext ? (QueryContext) queryOrQueryObject : null;\n+return query( type.query( key, context != null ? context.getQueryOrQueryObject() : queryOrQueryObject, context ), null, null, context );\n     }\n \n     /**\n@@ -236,9 +231,8 @@ public abstract class LuceneExplicitIndex implements ExplicitIndex\n     }\n \n     protected ExplicitIndexHits query( Query query, String keyForDirectLookup,\n-            Object valueForDirectLookup, QueryContext additionalParametersOrNull )\n-            throws ExplicitIndexNotFoundKernelException\n-    {\n+            Object valueForDirectLookup, QueryContext additionalParametersOrNull ) throws ExplicitIndexNotFoundKernelException\n+{\n         List<EntityId> simpleTransactionStateIds = new ArrayList<>();\n         Collection<EntityId> removedIdsFromTransactionState = Collections.emptySet();\n         IndexSearcher fulltextTransactionStateSearcher = null;\n@@ -252,11 +246,11 @@ public abstract class LuceneExplicitIndex implements ExplicitIndex\n             {\n                 fulltextTransactionStateSearcher = transaction.getAdditionsAsSearcher( this, additionalParametersOrNull );\n             }\n-            removedIdsFromTransactionState = keyForDirectLookup != null ?\n-                    transaction.getRemovedIds( this, keyForDirectLookup, valueForDirectLookup ) :\n-                    transaction.getRemovedIds( this, query );\n+\n+removedIdsFromTransactionState = keyForDirectLookup != null ? transaction.getRemovedIds( this, keyForDirectLookup, valueForDirectLookup ) : transaction.getRemovedIds( this, query );\n         }\n-        ExplicitIndexHits idIterator = null;\n+\n+ExplicitIndexHits idIterator = null;\n         IndexReference searcher;\n         dataSource.getReadLock();\n         try\n@@ -273,18 +267,12 @@ public abstract class LuceneExplicitIndex implements ExplicitIndex\n             try\n             {\n                 // Gather all added ids from fulltextTransactionStateSearcher and simpleTransactionStateIds.\n-                PrimitiveLongSet idsModifiedInTransactionState = gatherIdsModifiedInTransactionState(\n-                        simpleTransactionStateIds, fulltextTransactionStateSearcher, query );\n-\n-                // Do the combined search from store and fulltext tx state\n+                PrimitiveLongSet idsModifiedInTransactionState = gatherIdsModifiedInTransactionState( simpleTransactionStateIds, fulltextTransactionStateSearcher, query );\n+    // Do the combined search from store and fulltext tx state\n                 DocToIdIterator hits = new DocToIdIterator( search( searcher, fulltextTransactionStateSearcher,\n-                        query, additionalParametersOrNull, removedIdsFromTransactionState ),\n-                        removedIdsFromTransactionState, searcher, idsModifiedInTransactionState );\n-\n-                idIterator = simpleTransactionStateIds.isEmpty() ? hits : new CombinedIndexHits(\n-                        Arrays.asList( hits,\n-                                new ConstantScoreIterator( simpleTransactionStateIds, Float.NaN ) ) );\n-            }\n+                        query, additionalParametersOrNull, removedIdsFromTransactionState ), removedIdsFromTransactionState, searcher, idsModifiedInTransactionState );\n+idIterator = simpleTransactionStateIds.isEmpty() ? hits : new CombinedIndexHits( Arrays.asList( hits, new ConstantScoreIterator( simpleTransactionStateIds, Float.NaN ) ) );\n+    }\n             catch ( IOException e )\n             {\n                 throw new RuntimeException( \"Unable to query \" + this + \" with \" + query, e );\n@@ -298,7 +286,7 @@ public abstract class LuceneExplicitIndex implements ExplicitIndex\n \n     private PrimitiveLongSet gatherIdsModifiedInTransactionState( List<EntityId> simpleTransactionStateIds,\n             IndexSearcher fulltextTransactionStateSearcher, Query query ) throws IOException\n-    {\n+{\n         // If there's no state them don't bother gathering it\n         if ( simpleTransactionStateIds.isEmpty() && fulltextTransactionStateSearcher == null )\n         {\n@@ -341,36 +329,33 @@ public abstract class LuceneExplicitIndex implements ExplicitIndex\n \n     private IndexHits<Document> search( IndexReference searcherRef, IndexSearcher fulltextTransactionStateSearcher,\n             Query query, QueryContext additionalParametersOrNull, Collection<EntityId> removed ) throws IOException\n-    {\n+{\n         if ( fulltextTransactionStateSearcher != null && !removed.isEmpty() )\n         {\n             letThroughAdditions( fulltextTransactionStateSearcher, query, removed );\n         }\n \n-        IndexSearcher searcher = fulltextTransactionStateSearcher == null ? searcherRef.getSearcher() :\n-                new IndexSearcher( new MultiReader( searcherRef.getSearcher().getIndexReader(),\n-                        fulltextTransactionStateSearcher.getIndexReader() ) );\n-        IndexHits<Document> result;\n+        IndexSearcher searcher = fulltextTransactionStateSearcher == null ? searcherRef.getSearcher() : new IndexSearcher( new MultiReader( searcherRef.getSearcher().getIndexReader(), fulltextTransactionStateSearcher.getIndexReader() ) );\n+IndexHits<Document> result;\n         if ( additionalParametersOrNull != null && additionalParametersOrNull.getTop() > 0 )\n         {\n             result = new TopDocsIterator( query, additionalParametersOrNull, searcher );\n         }\n         else\n         {\n-            Sort sorting = additionalParametersOrNull != null ?\n-                    additionalParametersOrNull.getSorting() : null;\n-            boolean forceScore = additionalParametersOrNull == null ||\n+            Sort sorting = additionalParametersOrNull != null ? additionalParametersOrNull.getSorting() : null;\n+boolean forceScore = additionalParametersOrNull == null ||\n                     !additionalParametersOrNull.getTradeCorrectnessForSpeed();\n-            DocValuesCollector collector = new DocValuesCollector( forceScore );\n+DocValuesCollector collector = new DocValuesCollector( forceScore );\n             searcher.search( query, collector );\n             return collector.getIndexHits( sorting );\n         }\n-        return result;\n+\n+return result;\n     }\n \n-    private void letThroughAdditions( IndexSearcher additionsSearcher, Query query, Collection<EntityId> removed )\n-            throws IOException\n-    {\n+    private void letThroughAdditions( IndexSearcher additionsSearcher, Query query, Collection<EntityId> removed ) throws IOException\n+{\n         // This could be improved further by doing a term-dict lookup for every term in removed\n         // and retaining only those that did not match.\n         // This is getting quite low-level though\n@@ -458,9 +443,8 @@ public abstract class LuceneExplicitIndex implements ExplicitIndex\n         }\n \n         @Override\n-        public void addRelationship( long entityId, String key, Object value, long startNode, long endNode )\n-                throws ExplicitIndexNotFoundKernelException\n-        {\n+        public void addRelationship( long entityId, String key, Object value, long startNode, long endNode ) throws ExplicitIndexNotFoundKernelException\n+{\n             assertValidKey( key );\n             assertValidValue( value );\n             RelationshipData entity = new RelationshipData( entityId, startNode, endNode );\n@@ -474,15 +458,15 @@ public abstract class LuceneExplicitIndex implements ExplicitIndex\n         }\n \n         @Override\n-        public ExplicitIndexHits get( String key, Object valueOrNull, long startNode, long endNode )\n-                throws ExplicitIndexNotFoundKernelException\n-        {\n+        public ExplicitIndexHits get( String key, Object valueOrNull, long startNode, long endNode ) throws ExplicitIndexNotFoundKernelException\n+{\n             BooleanQuery.Builder builder = new BooleanQuery.Builder();\n             if ( key != null && valueOrNull != null )\n             {\n                 builder.add( type.get( key, valueOrNull ), Occur.MUST );\n             }\n-            addIfAssigned( builder, startNode, KEY_START_NODE_ID );\n+\n+addIfAssigned( builder, startNode, KEY_START_NODE_ID );\n             addIfAssigned( builder, endNode, KEY_END_NODE_ID );\n             return query( builder.build(), null, null, null );\n         }\n@@ -494,22 +478,17 @@ public abstract class LuceneExplicitIndex implements ExplicitIndex\n         }\n \n         @Override\n-        public ExplicitIndexHits query( String key, Object queryOrQueryObjectOrNull, long startNode, long endNode )\n-                throws ExplicitIndexNotFoundKernelException\n-        {\n+        public ExplicitIndexHits query( String key, Object queryOrQueryObjectOrNull, long startNode, long endNode ) throws ExplicitIndexNotFoundKernelException\n+{\n             QueryContext context = queryOrQueryObjectOrNull != null &&\n-                    queryOrQueryObjectOrNull instanceof QueryContext ?\n-                            (QueryContext) queryOrQueryObjectOrNull : null;\n-\n-            BooleanQuery.Builder builder = new BooleanQuery.Builder();\n-            if ( (context != null && context.getQueryOrQueryObject() != null) ||\n-                    (context == null && queryOrQueryObjectOrNull != null ) )\n+                    queryOrQueryObjectOrNull instanceof QueryContext ? (QueryContext) queryOrQueryObjectOrNull : null;\n+BooleanQuery.Builder builder = new BooleanQuery.Builder();\n+            if ( (context != null && context.getQueryOrQueryObject() != null ) || ( context == null && queryOrQueryObjectOrNull != null ) )\n             {\n-                builder.add( type.query( key, context != null ?\n-                                              context.getQueryOrQueryObject() : queryOrQueryObjectOrNull, context ),\n-                        Occur.MUST );\n+                builder.add( type.query( key, context != null ? context.getQueryOrQueryObject() : queryOrQueryObjectOrNull, context ), Occur.MUST );\n             }\n-            addIfAssigned( builder, startNode, KEY_START_NODE_ID );\n+\n+addIfAssigned( builder, startNode, KEY_START_NODE_ID );\n             addIfAssigned( builder, endNode, KEY_END_NODE_ID );\n             return query( builder.build(), null, null, context );\n         }\n@@ -553,10 +532,9 @@ public abstract class LuceneExplicitIndex implements ExplicitIndex\n         }\n \n         @Override\n-        public ExplicitIndexHits query( Object queryOrQueryObjectOrNull, long startNode, long endNode )\n-                throws ExplicitIndexNotFoundKernelException\n-        {\n+        public ExplicitIndexHits query( Object queryOrQueryObjectOrNull, long startNode, long endNode ) throws ExplicitIndexNotFoundKernelException\n+{\n             return query( null, queryOrQueryObjectOrNull, startNode, endNode );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 72
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
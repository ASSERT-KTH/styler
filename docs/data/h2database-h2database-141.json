{
    "project_name": "h2database-h2database",
    "error_id": "141",
    "information": {
        "errors": [
            {
                "line": "24",
                "column": "29",
                "severity": "warning",
                "message": "'{' is not followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
            }
        ]
    },
    "source_code": "    private static final ValueDataType DUMMY = new ValueDataType();\n\n    public LongDBDataType() {}\n\n    @Override\n    public void write(WriteBuffer buff, Long data) {",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/errored/1/141/LongDBDataType.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/styler/141/LongDBDataType.java\nindex 7a54312ba25..a0cd1c21aa1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/errored/1/141/LongDBDataType.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/styler/141/LongDBDataType.java\n@@ -21,7 +21,7 @@ public class LongDBDataType extends LongDataType {\n     public static final LongDBDataType INSTANCE = new LongDBDataType();\n     private static final ValueDataType DUMMY = new ValueDataType();\n \n-    public LongDBDataType() {}\n+    public LongDBDataType() { }\n \n     @Override\n     public void write(WriteBuffer buff, Long data) {\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/errored/1/141/LongDBDataType.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/intellij/141/LongDBDataType.java\nindex 7a54312ba25..4a4bfc80bc8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/errored/1/141/LongDBDataType.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/intellij/141/LongDBDataType.java\n@@ -3,6 +3,7 @@\n  * and the EPL 1.0 (https://h2database.com/html/license.html).\n  * Initial Developer: H2 Group\n  */\n+\n package org.h2.mvstore.db;\n \n import org.h2.mvstore.WriteBuffer;\n@@ -21,7 +22,8 @@ public class LongDBDataType extends LongDataType {\n     public static final LongDBDataType INSTANCE = new LongDBDataType();\n     private static final ValueDataType DUMMY = new ValueDataType();\n \n-    public LongDBDataType() {}\n+    public LongDBDataType() {\n+    }\n \n     @Override\n     public void write(WriteBuffer buff, Long data) {\n",
            "diff_size": 3
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "24",
                    "column": "29",
                    "severity": "warning",
                    "message": "'{' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/errored/1/141/LongDBDataType.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/naturalize/141/LongDBDataType.java\nindex 7a54312ba25..c8a51ad5013 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/errored/1/141/LongDBDataType.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/naturalize/141/LongDBDataType.java\n@@ -32,4 +32,4 @@ public class LongDBDataType extends LongDataType {\n     public Long read(ByteBuffer buff) {\n         return DUMMY.read(buff).getLong();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/errored/1/141/LongDBDataType.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/codebuff/141/LongDBDataType.java\nindex 7a54312ba25..0884e7bc6f5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/errored/1/141/LongDBDataType.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/codebuff/141/LongDBDataType.java\n@@ -16,12 +16,17 @@ import java.nio.ByteBuffer;\n  *\n  * @author <a href='mailto:andrei.tokar@gmail.com'>Andrei Tokar</a>\n  */\n+\n+\n public class LongDBDataType extends LongDataType {\n \n+\n     public static final LongDBDataType INSTANCE = new LongDBDataType();\n     private static final ValueDataType DUMMY = new ValueDataType();\n \n-    public LongDBDataType() {}\n+    public LongDBDataType() {\n+\n+    }\n \n     @Override\n     public void write(WriteBuffer buff, Long data) {\n@@ -32,4 +37,5 @@ public class LongDBDataType extends LongDataType {\n     public Long read(ByteBuffer buff) {\n         return DUMMY.read(buff).getLong();\n     }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/errored/1/141/LongDBDataType.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/styler_random/141/LongDBDataType.java\nindex 7a54312ba25..a0cd1c21aa1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/errored/1/141/LongDBDataType.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/styler_random/141/LongDBDataType.java\n@@ -21,7 +21,7 @@ public class LongDBDataType extends LongDataType {\n     public static final LongDBDataType INSTANCE = new LongDBDataType();\n     private static final ValueDataType DUMMY = new ValueDataType();\n \n-    public LongDBDataType() {}\n+    public LongDBDataType() { }\n \n     @Override\n     public void write(WriteBuffer buff, Long data) {\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/errored/1/141/LongDBDataType.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/styler_three_grams/141/LongDBDataType.java\nindex 7a54312ba25..313f042c21d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/errored/1/141/LongDBDataType.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/h2database-h2database/styler_three_grams/141/LongDBDataType.java\n@@ -21,7 +21,8 @@ public class LongDBDataType extends LongDataType {\n     public static final LongDBDataType INSTANCE = new LongDBDataType();\n     private static final ValueDataType DUMMY = new ValueDataType();\n \n-    public LongDBDataType() {}\n+    public LongDBDataType() {\n+        }\n \n     @Override\n     public void write(WriteBuffer buff, Long data) {\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize"
    ]
}
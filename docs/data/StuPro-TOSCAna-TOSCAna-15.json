{
    "project_name": "StuPro-TOSCAna-TOSCAna",
    "error_id": "15",
    "information": {
        "errors": [
            {
                "line": "61",
                "column": "5",
                "severity": "error",
                "message": "'/*' has more than 1 empty lines before.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": "\n\n    /**\n     @return {@link #defaultInstances}\n     */\n    public Optional<Integer> getDefaultInstances() {",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StuPro-TOSCAna-TOSCAna/errored/1/15/ScalableCapability.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StuPro-TOSCAna-TOSCAna/styler/15/ScalableCapability.java\nindex 84e31af4d52..ed0b8c3e3eb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StuPro-TOSCAna-TOSCAna/errored/1/15/ScalableCapability.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StuPro-TOSCAna-TOSCAna/styler/15/ScalableCapability.java\n@@ -57,7 +57,6 @@ public class ScalableCapability extends Capability {\n         return new ScalableCapabilityBuilder().scaleRange(scaleRange);\n     }\n \n-\n     /**\n      @return {@link #defaultInstances}\n      */\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "61",
                    "column": "5",
                    "severity": "error",
                    "message": "'/*' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StuPro-TOSCAna-TOSCAna/errored/1/15/ScalableCapability.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StuPro-TOSCAna-TOSCAna/intellij/15/ScalableCapability.java\nindex 84e31af4d52..cebf85eb0ac 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StuPro-TOSCAna-TOSCAna/errored/1/15/ScalableCapability.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StuPro-TOSCAna-TOSCAna/intellij/15/ScalableCapability.java\n@@ -14,23 +14,23 @@ import lombok.Singular;\n import static java.lang.String.format;\n \n /**\n- The default TOSCA type that should be used to express a scalability capability of a node.\n- (TOSCA Simple Profile in YAML Version 1.1, p. 158)\n+ * The default TOSCA type that should be used to express a scalability capability of a node.\n+ * (TOSCA Simple Profile in YAML Version 1.1, p. 158)\n  */\n @Data\n public class ScalableCapability extends Capability {\n \n     /**\n-     Indicates the minimum and maximum number of instances that should be created\n-     for the associated TOSCA Node Template by a TOSCA orchestrator.\n-     (TOSCA Simple Profile in YAML Version 1.1, p. 157)\n+     * Indicates the minimum and maximum number of instances that should be created\n+     * for the associated TOSCA Node Template by a TOSCA orchestrator.\n+     * (TOSCA Simple Profile in YAML Version 1.1, p. 157)\n      */\n     private final Range scaleRange;\n \n     /**\n-     The optional default number of instances that should be the starting number of instances\n-     a TOSCA orchestrator should attempt to allocate.\n-     (TOSCA Simple Profile in YAML Version 1.1, p. 157)\n+     * The optional default number of instances that should be the starting number of instances\n+     * a TOSCA orchestrator should attempt to allocate.\n+     * (TOSCA Simple Profile in YAML Version 1.1, p. 157)\n      */\n     private final Integer defaultInstances;\n \n@@ -51,7 +51,7 @@ public class ScalableCapability extends Capability {\n     }\n \n     /**\n-     @param scaleRange {@link #scaleRange}\n+     * @param scaleRange {@link #scaleRange}\n      */\n     public static ScalableCapabilityBuilder builder(Range scaleRange) {\n         return new ScalableCapabilityBuilder().scaleRange(scaleRange);\n@@ -59,7 +59,7 @@ public class ScalableCapability extends Capability {\n \n \n     /**\n-     @return {@link #defaultInstances}\n+     * @return {@link #defaultInstances}\n      */\n     public Optional<Integer> getDefaultInstances() {\n         return Optional.ofNullable(defaultInstances);\n",
            "diff_size": 10
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StuPro-TOSCAna-TOSCAna/errored/1/15/ScalableCapability.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StuPro-TOSCAna-TOSCAna/naturalize/15/ScalableCapability.java\nindex 84e31af4d52..de6c2649083 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StuPro-TOSCAna-TOSCAna/errored/1/15/ScalableCapability.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StuPro-TOSCAna-TOSCAna/naturalize/15/ScalableCapability.java\n@@ -35,12 +35,11 @@ public class ScalableCapability extends Capability {\n     private final Integer defaultInstances;\n \n     @Builder\n-    protected ScalableCapability(Range scaleRange,\n-                                 Integer defaultInstances,\n+    protected ScalableCapability(Range scaleRange, Integer defaultInstances,\n                                  @Singular Set<Class<? extends RootNode>> validSourceTypes,\n                                  Range occurence,\n                                  String description) {\n-        super(validSourceTypes, occurence, description);\n+    super(validSourceTypes, occurence, description);\n         if (defaultInstances != null && !scaleRange.inRange(defaultInstances)) {\n             throw new IllegalArgumentException(format(\n                 \"Constraint violation: range.min (%d) <= defaultInstances (%d) <= range.max (%d)\",\n@@ -57,12 +56,10 @@ public class ScalableCapability extends Capability {\n         return new ScalableCapabilityBuilder().scaleRange(scaleRange);\n     }\n \n-\n-    /**\n+/**\n      @return {@link #defaultInstances}\n      */\n     public Optional<Integer> getDefaultInstances() {\n         return Optional.ofNullable(defaultInstances);\n     }\n-\n-}\n+    }\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "62",
                    "column": "5",
                    "severity": "error",
                    "message": "'/*' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "67",
                    "column": "5",
                    "severity": "error",
                    "message": "'METHOD_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StuPro-TOSCAna-TOSCAna/errored/1/15/ScalableCapability.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StuPro-TOSCAna-TOSCAna/codebuff/15/ScalableCapability.java\nindex 84e31af4d52..0d331e0ca2f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StuPro-TOSCAna-TOSCAna/errored/1/15/ScalableCapability.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StuPro-TOSCAna-TOSCAna/codebuff/15/ScalableCapability.java\n@@ -3,10 +3,8 @@ package org.opentosca.toscana.model.capability;\n import java.util.Objects;\n import java.util.Optional;\n import java.util.Set;\n-\n import org.opentosca.toscana.model.datatype.Range;\n import org.opentosca.toscana.model.node.RootNode;\n-\n import lombok.Builder;\n import lombok.Data;\n import lombok.Singular;\n@@ -17,6 +15,7 @@ import static java.lang.String.format;\n  The default TOSCA type that should be used to express a scalability capability of a node.\n  (TOSCA Simple Profile in YAML Version 1.1, p. 158)\n  */\n+\n @Data\n public class ScalableCapability extends Capability {\n \n@@ -25,6 +24,7 @@ public class ScalableCapability extends Capability {\n      for the associated TOSCA Node Template by a TOSCA orchestrator.\n      (TOSCA Simple Profile in YAML Version 1.1, p. 157)\n      */\n+\n     private final Range scaleRange;\n \n     /**\n@@ -35,16 +35,15 @@ public class ScalableCapability extends Capability {\n     private final Integer defaultInstances;\n \n     @Builder\n-    protected ScalableCapability(Range scaleRange,\n-                                 Integer defaultInstances,\n-                                 @Singular Set<Class<? extends RootNode>> validSourceTypes,\n-                                 Range occurence,\n-                                 String description) {\n+    protected ScalableCapability(\n+        Range scaleRange,\n+        Integer defaultInstances,\n+        @Singular Set<Class<? extends RootNode>> validSourceTypes,\n+        Range occurence, String description\n+    ) {\n         super(validSourceTypes, occurence, description);\n         if (defaultInstances != null && !scaleRange.inRange(defaultInstances)) {\n-            throw new IllegalArgumentException(format(\n-                \"Constraint violation: range.min (%d) <= defaultInstances (%d) <= range.max (%d)\",\n-                scaleRange.min, defaultInstances, scaleRange.max));\n+            throw new IllegalArgumentException(format(\"Constraint violation: range.min (%d) <= defaultInstances (%d) <= range.max (%d)\", scaleRange.min, defaultInstances, scaleRange.max));\n         }\n         this.scaleRange = Objects.requireNonNull(scaleRange);\n         this.defaultInstances = defaultInstances;\n@@ -53,16 +52,19 @@ public class ScalableCapability extends Capability {\n     /**\n      @param scaleRange {@link #scaleRange}\n      */\n+\n     public static ScalableCapabilityBuilder builder(Range scaleRange) {\n-        return new ScalableCapabilityBuilder().scaleRange(scaleRange);\n+        return new ScalableCapabilityBuilder()\n+            .scaleRange(scaleRange);\n     }\n \n \n     /**\n      @return {@link #defaultInstances}\n      */\n+\n+\n     public Optional<Integer> getDefaultInstances() {\n         return Optional.ofNullable(defaultInstances);\n     }\n-\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 20
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StuPro-TOSCAna-TOSCAna/errored/1/15/ScalableCapability.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StuPro-TOSCAna-TOSCAna/styler_random/15/ScalableCapability.java\nindex 84e31af4d52..ad001c29f52 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StuPro-TOSCAna-TOSCAna/errored/1/15/ScalableCapability.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StuPro-TOSCAna-TOSCAna/styler_random/15/ScalableCapability.java\n@@ -57,10 +57,10 @@ public class ScalableCapability extends Capability {\n         return new ScalableCapabilityBuilder().scaleRange(scaleRange);\n     }\n \n-\n     /**\n      @return {@link #defaultInstances}\n      */\n+\n     public Optional<Integer> getDefaultInstances() {\n         return Optional.ofNullable(defaultInstances);\n     }\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StuPro-TOSCAna-TOSCAna/errored/1/15/ScalableCapability.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StuPro-TOSCAna-TOSCAna/styler_three_grams/15/ScalableCapability.java\nindex 84e31af4d52..ed0b8c3e3eb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StuPro-TOSCAna-TOSCAna/errored/1/15/ScalableCapability.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StuPro-TOSCAna-TOSCAna/styler_three_grams/15/ScalableCapability.java\n@@ -57,7 +57,6 @@ public class ScalableCapability extends Capability {\n         return new ScalableCapabilityBuilder().scaleRange(scaleRange);\n     }\n \n-\n     /**\n      @return {@link #defaultInstances}\n      */\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "intellij",
        "codebuff"
    ]
}
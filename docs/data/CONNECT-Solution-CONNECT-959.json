{
    "project_name": "CONNECT-Solution-CONNECT",
    "error_id": "959",
    "information": {
        "errors": [
            {
                "line": "27",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\npackage gov.hhs.fha.nhinc.patientdiscovery.adapter.deferred.response;\n\nimport javax.annotation.Resource;\nimport javax.xml.ws.BindingType;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/959/AdapterPatientDiscoveryDeferredResponseSecured.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler/959/AdapterPatientDiscoveryDeferredResponseSecured.java\nindex b0bd4be9220..d385986bad0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/959/AdapterPatientDiscoveryDeferredResponseSecured.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler/959/AdapterPatientDiscoveryDeferredResponseSecured.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.patientdiscovery.adapter.deferred.response;\n \n import javax.annotation.Resource;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/959/AdapterPatientDiscoveryDeferredResponseSecured.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/intellij/959/AdapterPatientDiscoveryDeferredResponseSecured.java\nindex b0bd4be9220..ec7f8abf5d7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/959/AdapterPatientDiscoveryDeferredResponseSecured.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/intellij/959/AdapterPatientDiscoveryDeferredResponseSecured.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.patientdiscovery.adapter.deferred.response;\n \n import javax.annotation.Resource;\n@@ -32,21 +33,20 @@ import javax.xml.ws.WebServiceContext;\n import javax.xml.ws.soap.SOAPBinding;\n \n /**\n- *\n  * @author JHOPPESC\n  */\n @BindingType(value = SOAPBinding.SOAP12HTTP_BINDING)\n public class AdapterPatientDiscoveryDeferredResponseSecured implements\n     gov.hhs.fha.nhinc.adapterpatientdiscoverysecuredasyncresp.AdapterPatientDiscoverySecuredAsyncRespPortType {\n \n-    @Resource\n-    private WebServiceContext context;\n+  @Resource\n+  private WebServiceContext context;\n \n-    @Override\n-    public org.hl7.v3.MCCIIN000002UV01 processPatientDiscoveryAsyncResp(\n-        org.hl7.v3.RespondingGatewayPRPAIN201306UV02SecuredRequestType processPatientDiscoveryAsyncRespAsyncRequest) {\n-        return new AdapterPatientDiscoverySecuredDeferredResponseImpl().processPatientDiscoveryAsyncResp(\n-            processPatientDiscoveryAsyncRespAsyncRequest.getPRPAIN201306UV02(), context);\n-    }\n+  @Override\n+  public org.hl7.v3.MCCIIN000002UV01 processPatientDiscoveryAsyncResp(\n+      org.hl7.v3.RespondingGatewayPRPAIN201306UV02SecuredRequestType processPatientDiscoveryAsyncRespAsyncRequest) {\n+    return new AdapterPatientDiscoverySecuredDeferredResponseImpl().processPatientDiscoveryAsyncResp(\n+        processPatientDiscoveryAsyncRespAsyncRequest.getPRPAIN201306UV02(), context);\n+  }\n \n }\n",
            "diff_size": 10
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "40",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 178).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "45",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 182).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "46",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 178).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/959/AdapterPatientDiscoveryDeferredResponseSecured.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/naturalize/959/AdapterPatientDiscoveryDeferredResponseSecured.java\nindex b0bd4be9220..3d7a54d2033 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/959/AdapterPatientDiscoveryDeferredResponseSecured.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/naturalize/959/AdapterPatientDiscoveryDeferredResponseSecured.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.patientdiscovery.adapter.deferred.response;\n \n import javax.annotation.Resource;\n@@ -36,17 +37,13 @@ import javax.xml.ws.soap.SOAPBinding;\n  * @author JHOPPESC\n  */\n @BindingType(value = SOAPBinding.SOAP12HTTP_BINDING)\n-public class AdapterPatientDiscoveryDeferredResponseSecured implements\n-    gov.hhs.fha.nhinc.adapterpatientdiscoverysecuredasyncresp.AdapterPatientDiscoverySecuredAsyncRespPortType {\n-\n-    @Resource\n+public class AdapterPatientDiscoveryDeferredResponseSecured implements gov.hhs.fha.nhinc.adapterpatientdiscoverysecuredasyncresp.AdapterPatientDiscoverySecuredAsyncRespPortType {\n+@Resource\n     private WebServiceContext context;\n \n     @Override\n-    public org.hl7.v3.MCCIIN000002UV01 processPatientDiscoveryAsyncResp(\n-        org.hl7.v3.RespondingGatewayPRPAIN201306UV02SecuredRequestType processPatientDiscoveryAsyncRespAsyncRequest) {\n-        return new AdapterPatientDiscoverySecuredDeferredResponseImpl().processPatientDiscoveryAsyncResp(\n-            processPatientDiscoveryAsyncRespAsyncRequest.getPRPAIN201306UV02(), context);\n+    public org.hl7.v3.MCCIIN000002UV01 processPatientDiscoveryAsyncResp(org.hl7.v3.RespondingGatewayPRPAIN201306UV02SecuredRequestType processPatientDiscoveryAsyncRespAsyncRequest) {\n+    return new AdapterPatientDiscoverySecuredDeferredResponseImpl().processPatientDiscoveryAsyncResp(processPatientDiscoveryAsyncRespAsyncRequest.getPRPAIN201306UV02(), context);\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 10
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "41",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 178).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "48",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 182).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "49",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 182).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/959/AdapterPatientDiscoveryDeferredResponseSecured.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/codebuff/959/AdapterPatientDiscoveryDeferredResponseSecured.java\nindex b0bd4be9220..cbbf143d931 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/959/AdapterPatientDiscoveryDeferredResponseSecured.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/codebuff/959/AdapterPatientDiscoveryDeferredResponseSecured.java\n@@ -35,18 +35,18 @@ import javax.xml.ws.soap.SOAPBinding;\n  *\n  * @author JHOPPESC\n  */\n+\n+\n @BindingType(value = SOAPBinding.SOAP12HTTP_BINDING)\n-public class AdapterPatientDiscoveryDeferredResponseSecured implements\n-    gov.hhs.fha.nhinc.adapterpatientdiscoverysecuredasyncresp.AdapterPatientDiscoverySecuredAsyncRespPortType {\n+public class AdapterPatientDiscoveryDeferredResponseSecured implements gov.hhs.fha.nhinc.adapterpatientdiscoverysecuredasyncresp.AdapterPatientDiscoverySecuredAsyncRespPortType {\n+\n+\n+    @Resource private WebServiceContext context;\n \n-    @Resource\n-    private WebServiceContext context;\n \n     @Override\n-    public org.hl7.v3.MCCIIN000002UV01 processPatientDiscoveryAsyncResp(\n-        org.hl7.v3.RespondingGatewayPRPAIN201306UV02SecuredRequestType processPatientDiscoveryAsyncRespAsyncRequest) {\n-        return new AdapterPatientDiscoverySecuredDeferredResponseImpl().processPatientDiscoveryAsyncResp(\n-            processPatientDiscoveryAsyncRespAsyncRequest.getPRPAIN201306UV02(), context);\n+    public org.hl7.v3.MCCIIN000002UV01 processPatientDiscoveryAsyncResp(org.hl7.v3.RespondingGatewayPRPAIN201306UV02SecuredRequestType processPatientDiscoveryAsyncRespAsyncRequest) {\n+        return new AdapterPatientDiscoverySecuredDeferredResponseImpl().processPatientDiscoveryAsyncResp(processPatientDiscoveryAsyncRespAsyncRequest.getPRPAIN201306UV02(), context);\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 13
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "28",
                    "severity": "error",
                    "message": "'import' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/959/AdapterPatientDiscoveryDeferredResponseSecured.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_random/959/AdapterPatientDiscoveryDeferredResponseSecured.java\nindex b0bd4be9220..b864c8a5e82 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/959/AdapterPatientDiscoveryDeferredResponseSecured.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_random/959/AdapterPatientDiscoveryDeferredResponseSecured.java\n@@ -25,7 +25,6 @@\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n package gov.hhs.fha.nhinc.patientdiscovery.adapter.deferred.response;\n-\n import javax.annotation.Resource;\n import javax.xml.ws.BindingType;\n import javax.xml.ws.WebServiceContext;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/959/AdapterPatientDiscoveryDeferredResponseSecured.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_three_grams/959/AdapterPatientDiscoveryDeferredResponseSecured.java\nindex b0bd4be9220..d385986bad0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/959/AdapterPatientDiscoveryDeferredResponseSecured.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_three_grams/959/AdapterPatientDiscoveryDeferredResponseSecured.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.patientdiscovery.adapter.deferred.response;\n \n import javax.annotation.Resource;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff",
        "styler_random"
    ]
}
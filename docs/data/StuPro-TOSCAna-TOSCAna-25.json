{
    "project_name": "StuPro-TOSCAna-TOSCAna",
    "error_id": "25",
    "information": {
        "errors": [
            {
                "line": "112",
                "column": "5",
                "severity": "error",
                "message": "'/*' has more than 1 empty lines before.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": "\n\n    /**\n     @return {@link #port}\n     */\n    public Optional<Integer> getPort() {",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StuPro-TOSCAna-TOSCAna/errored/1/25/Database.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StuPro-TOSCAna-TOSCAna/styler/25/Database.java\nindex 82d32eb2277..2048b5bb92b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StuPro-TOSCAna-TOSCAna/errored/1/25/Database.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StuPro-TOSCAna-TOSCAna/styler/25/Database.java\n@@ -108,7 +108,6 @@ public class Database extends RootNode {\n             .databaseEndpoint(databaseEndpoint);\n     }\n \n-\n     /**\n      @return {@link #port}\n      */\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "112",
                    "column": "5",
                    "severity": "error",
                    "message": "'/*' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StuPro-TOSCAna-TOSCAna/errored/1/25/Database.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StuPro-TOSCAna-TOSCAna/intellij/25/Database.java\nindex 82d32eb2277..96c4e8a3370 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StuPro-TOSCAna-TOSCAna/errored/1/25/Database.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StuPro-TOSCAna-TOSCAna/intellij/25/Database.java\n@@ -14,8 +14,8 @@ import lombok.Builder;\n import lombok.Data;\n \n /**\n- Represents a logical database that can be managed and hosted by a {@link Dbms} node.\n- (TOSCA Simple Profile in YAML Version 1.1, p. 173)\n+ * Represents a logical database that can be managed and hosted by a {@link Dbms} node.\n+ * (TOSCA Simple Profile in YAML Version 1.1, p. 173)\n  */\n @Data\n public class Database extends RootNode {\n@@ -23,26 +23,26 @@ public class Database extends RootNode {\n     public final Requirement<ContainerCapability, Dbms, HostedOn> host;\n \n     /**\n-     The logical database databaseName.\n-     (TOSCA Simple Profile in YAML Version 1.1, p. 173)\n+     * The logical database databaseName.\n+     * (TOSCA Simple Profile in YAML Version 1.1, p. 173)\n      */\n     private final String databaseName;\n \n     /**\n-     The optional port the database service will use for incoming data and request.\n-     (TOSCA Simple Profile in YAML Version 1.1, p. 173)\n+     * The optional port the database service will use for incoming data and request.\n+     * (TOSCA Simple Profile in YAML Version 1.1, p. 173)\n      */\n     private final Integer port;\n \n     /**\n-     The optional special user account used for database administration.\n-     (TOSCA Simple Profile in YAML Version 1.1, p. 173)\n+     * The optional special user account used for database administration.\n+     * (TOSCA Simple Profile in YAML Version 1.1, p. 173)\n      */\n     private final String user;\n \n     /**\n-     The optional password associated with the user account provided in the {@link #user} field.\n-     (TOSCA Simple Profile in YAML Version 1.1, p. 173)\n+     * The optional password associated with the user account provided in the {@link #user} field.\n+     * (TOSCA Simple Profile in YAML Version 1.1, p. 173)\n      */\n     private final String password;\n \n@@ -92,10 +92,10 @@ public class Database extends RootNode {\n     }\n \n     /**\n-     @param nodeName         {@link #nodeName}\n-     @param databaseName     {@link #databaseName}\n-     @param host             {@link #host}\n-     @param databaseEndpoint {@link #databaseEndpoint}\n+     * @param nodeName         {@link #nodeName}\n+     * @param databaseName     {@link #databaseName}\n+     * @param host             {@link #host}\n+     * @param databaseEndpoint {@link #databaseEndpoint}\n      */\n     public static DatabaseBuilder builder(String nodeName,\n                                           String databaseName,\n@@ -110,21 +110,21 @@ public class Database extends RootNode {\n \n \n     /**\n-     @return {@link #port}\n+     * @return {@link #port}\n      */\n     public Optional<Integer> getPort() {\n         return Optional.ofNullable(port);\n     }\n \n     /**\n-     @return {@link #user}\n+     * @return {@link #user}\n      */\n     public Optional<String> getUser() {\n         return Optional.ofNullable(user);\n     }\n \n     /**\n-     @return {@link #password}\n+     * @return {@link #password}\n      */\n     public Optional<String> getPassword() {\n         return Optional.ofNullable(password);\n",
            "diff_size": 17
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StuPro-TOSCAna-TOSCAna/errored/1/25/Database.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StuPro-TOSCAna-TOSCAna/naturalize/25/Database.java\nindex 82d32eb2277..67ca4c08d1a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StuPro-TOSCAna-TOSCAna/errored/1/25/Database.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StuPro-TOSCAna-TOSCAna/naturalize/25/Database.java\n@@ -45,13 +45,10 @@ public class Database extends RootNode {\n      (TOSCA Simple Profile in YAML Version 1.1, p. 173)\n      */\n     private final String password;\n-\n-\n-    private final DatabaseEndpointCapability databaseEndpoint;\n+private final DatabaseEndpointCapability databaseEndpoint;\n \n     @Builder\n-    private Database(String databaseName,\n-                     Integer port,\n+    private Database(String databaseName, Integer port,\n                      String user,\n                      String password,\n                      Requirement<ContainerCapability, Dbms, HostedOn> host,\n@@ -59,7 +56,7 @@ public class Database extends RootNode {\n                      String nodeName,\n                      StandardLifecycle standardLifecycle,\n                      String description) {\n-        super(nodeName, standardLifecycle, description);\n+    super(nodeName, standardLifecycle, description);\n         this.databaseName = Objects.requireNonNull(databaseName);\n         this.port = port;\n         this.user = user;\n@@ -72,15 +69,14 @@ public class Database extends RootNode {\n     }\n \n     // only use when subclassing this and hiding host field\n-    protected Database(String databaseName,\n-                       Integer port,\n+    protected Database(String databaseName, Integer port,\n                        String user,\n                        String password,\n                        DatabaseEndpointCapability databaseEndpoint,\n                        String nodeName,\n                        StandardLifecycle standardLifecycle,\n                        String description) {\n-        super(nodeName, standardLifecycle, description);\n+    super(nodeName, standardLifecycle, description);\n         this.databaseName = Objects.requireNonNull(databaseName);\n         this.port = port;\n         this.user = user;\n@@ -97,19 +93,17 @@ public class Database extends RootNode {\n      @param host             {@link #host}\n      @param databaseEndpoint {@link #databaseEndpoint}\n      */\n-    public static DatabaseBuilder builder(String nodeName,\n-                                          String databaseName,\n+    public static DatabaseBuilder builder(String nodeName, String databaseName,\n                                           Requirement<ContainerCapability, Dbms, HostedOn> host,\n                                           DatabaseEndpointCapability databaseEndpoint) {\n-        return new DatabaseBuilder()\n+    return new DatabaseBuilder()\n             .nodeName(nodeName)\n             .databaseName(databaseName)\n             .host(host)\n             .databaseEndpoint(databaseEndpoint);\n     }\n \n-\n-    /**\n+/**\n      @return {@link #port}\n      */\n     public Optional<Integer> getPort() {\n@@ -134,4 +128,4 @@ public class Database extends RootNode {\n     public void accept(Visitor v) {\n         v.visit(this);\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 15
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "112",
                    "column": "5",
                    "severity": "error",
                    "message": "'/*' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "117",
                    "column": "5",
                    "severity": "error",
                    "message": "'METHOD_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "126",
                    "column": "5",
                    "severity": "error",
                    "message": "'METHOD_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "135",
                    "column": "5",
                    "severity": "error",
                    "message": "'METHOD_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StuPro-TOSCAna-TOSCAna/errored/1/25/Database.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StuPro-TOSCAna-TOSCAna/codebuff/25/Database.java\nindex 82d32eb2277..c3898165269 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StuPro-TOSCAna-TOSCAna/errored/1/25/Database.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StuPro-TOSCAna-TOSCAna/codebuff/25/Database.java\n@@ -2,14 +2,12 @@ package org.opentosca.toscana.model.node;\n \n import java.util.Objects;\n import java.util.Optional;\n-\n import org.opentosca.toscana.model.capability.ContainerCapability;\n import org.opentosca.toscana.model.capability.DatabaseEndpointCapability;\n import org.opentosca.toscana.model.capability.Requirement;\n import org.opentosca.toscana.model.operation.StandardLifecycle;\n import org.opentosca.toscana.model.relation.HostedOn;\n import org.opentosca.toscana.model.visitor.Visitor;\n-\n import lombok.Builder;\n import lombok.Data;\n \n@@ -17,6 +15,7 @@ import lombok.Data;\n  Represents a logical database that can be managed and hosted by a {@link Dbms} node.\n  (TOSCA Simple Profile in YAML Version 1.1, p. 173)\n  */\n+\n @Data\n public class Database extends RootNode {\n \n@@ -45,20 +44,19 @@ public class Database extends RootNode {\n      (TOSCA Simple Profile in YAML Version 1.1, p. 173)\n      */\n     private final String password;\n-\n-\n     private final DatabaseEndpointCapability databaseEndpoint;\n \n     @Builder\n-    private Database(String databaseName,\n-                     Integer port,\n-                     String user,\n-                     String password,\n-                     Requirement<ContainerCapability, Dbms, HostedOn> host,\n-                     DatabaseEndpointCapability databaseEndpoint,\n-                     String nodeName,\n-                     StandardLifecycle standardLifecycle,\n-                     String description) {\n+    private Database(\n+        String databaseName,\n+        Integer port,\n+        String user,\n+        String password,\n+        Requirement<ContainerCapability, Dbms, HostedOn> host,\n+        DatabaseEndpointCapability databaseEndpoint,\n+        String nodeName,\n+        StandardLifecycle standardLifecycle, String description\n+    ) {\n         super(nodeName, standardLifecycle, description);\n         this.databaseName = Objects.requireNonNull(databaseName);\n         this.port = port;\n@@ -66,20 +64,21 @@ public class Database extends RootNode {\n         this.password = password;\n         this.host = Objects.requireNonNull(host);\n         this.databaseEndpoint = Objects.requireNonNull(databaseEndpoint);\n-\n         capabilities.add(databaseEndpoint);\n         requirements.add(host);\n     }\n \n     // only use when subclassing this and hiding host field\n-    protected Database(String databaseName,\n-                       Integer port,\n-                       String user,\n-                       String password,\n-                       DatabaseEndpointCapability databaseEndpoint,\n-                       String nodeName,\n-                       StandardLifecycle standardLifecycle,\n-                       String description) {\n+\n+    protected Database(\n+        String databaseName,\n+        Integer port,\n+        String user,\n+        String password,\n+        DatabaseEndpointCapability databaseEndpoint,\n+        String nodeName,\n+        StandardLifecycle standardLifecycle, String description\n+    ) {\n         super(nodeName, standardLifecycle, description);\n         this.databaseName = Objects.requireNonNull(databaseName);\n         this.port = port;\n@@ -87,7 +86,6 @@ public class Database extends RootNode {\n         this.password = password;\n         this.host = null;\n         this.databaseEndpoint = Objects.requireNonNull(databaseEndpoint);\n-\n         capabilities.add(databaseEndpoint);\n     }\n \n@@ -97,10 +95,12 @@ public class Database extends RootNode {\n      @param host             {@link #host}\n      @param databaseEndpoint {@link #databaseEndpoint}\n      */\n-    public static DatabaseBuilder builder(String nodeName,\n-                                          String databaseName,\n-                                          Requirement<ContainerCapability, Dbms, HostedOn> host,\n-                                          DatabaseEndpointCapability databaseEndpoint) {\n+\n+    public static DatabaseBuilder builder(\n+        String nodeName,\n+        String databaseName,\n+        Requirement<ContainerCapability, Dbms, HostedOn> host, DatabaseEndpointCapability databaseEndpoint\n+    ) {\n         return new DatabaseBuilder()\n             .nodeName(nodeName)\n             .databaseName(databaseName)\n@@ -112,6 +112,8 @@ public class Database extends RootNode {\n     /**\n      @return {@link #port}\n      */\n+\n+\n     public Optional<Integer> getPort() {\n         return Optional.ofNullable(port);\n     }\n@@ -119,6 +121,8 @@ public class Database extends RootNode {\n     /**\n      @return {@link #user}\n      */\n+\n+\n     public Optional<String> getUser() {\n         return Optional.ofNullable(user);\n     }\n@@ -126,6 +130,8 @@ public class Database extends RootNode {\n     /**\n      @return {@link #password}\n      */\n+\n+\n     public Optional<String> getPassword() {\n         return Optional.ofNullable(password);\n     }\n@@ -134,4 +140,4 @@ public class Database extends RootNode {\n     public void accept(Visitor v) {\n         v.visit(this);\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 40
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StuPro-TOSCAna-TOSCAna/errored/1/25/Database.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StuPro-TOSCAna-TOSCAna/styler_random/25/Database.java\nindex 82d32eb2277..d0169fa3790 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StuPro-TOSCAna-TOSCAna/errored/1/25/Database.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StuPro-TOSCAna-TOSCAna/styler_random/25/Database.java\n@@ -108,10 +108,10 @@ public class Database extends RootNode {\n             .databaseEndpoint(databaseEndpoint);\n     }\n \n-\n     /**\n      @return {@link #port}\n      */\n+\n     public Optional<Integer> getPort() {\n         return Optional.ofNullable(port);\n     }\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StuPro-TOSCAna-TOSCAna/errored/1/25/Database.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StuPro-TOSCAna-TOSCAna/styler_three_grams/25/Database.java\nindex 82d32eb2277..2048b5bb92b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StuPro-TOSCAna-TOSCAna/errored/1/25/Database.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StuPro-TOSCAna-TOSCAna/styler_three_grams/25/Database.java\n@@ -108,7 +108,6 @@ public class Database extends RootNode {\n             .databaseEndpoint(databaseEndpoint);\n     }\n \n-\n     /**\n      @return {@link #port}\n      */\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "intellij",
        "codebuff"
    ]
}
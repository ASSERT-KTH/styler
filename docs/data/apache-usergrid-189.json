{
    "project_name": "apache-usergrid",
    "error_id": "189",
    "information": {
        "errors": [
            {
                "line": "53",
                "severity": "warning",
                "message": "Line is longer than 120 characters (found 244).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "        final UUID entityId = scanColumn.getUUID();\n\n        final ConnectionRefImpl hashRef = new ConnectionRefImpl( searchConnection.getConnectingEntityType(), searchConnection.getConnectedEntityId(), searchConnection.getConnectionType(), searchConnection.getConnectingEntityType(), entityId  );\n\n        final UUID hashId = hashRef.getConnectionSearchShardId();\n",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "53",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 229).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "55",
                    "column": "9",
                    "severity": "warning",
                    "message": "'(' should be on the previous line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.MethodParamPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/errored/1/189/ConnectionShardFilter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/styler/189/ConnectionShardFilter.java\nindex 39f3683583e..a6a1fc3a8fa 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/errored/1/189/ConnectionShardFilter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/styler/189/ConnectionShardFilter.java\n@@ -50,7 +50,9 @@ public final class ConnectionShardFilter implements ShardFilter {\n \n         final UUID entityId = scanColumn.getUUID();\n \n-        final ConnectionRefImpl hashRef = new ConnectionRefImpl( searchConnection.getConnectingEntityType(), searchConnection.getConnectedEntityId(), searchConnection.getConnectionType(), searchConnection.getConnectingEntityType(), entityId  );\n+        final ConnectionRefImpl hashRef = new ConnectionRefImpl( searchConnection.getConnectingEntityType(), searchConnection.getConnectedEntityId(), searchConnection.getConnectionType(), searchConnection .getConnectingEntityType\n+\n+        ( ), entityId  );\n \n         final UUID hashId = hashRef.getConnectionSearchShardId();\n \n",
            "diff_size": 3
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/errored/1/189/ConnectionShardFilter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/intellij/189/ConnectionShardFilter.java\nindex 39f3683583e..d23973edfd5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/errored/1/189/ConnectionShardFilter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/intellij/189/ConnectionShardFilter.java\n@@ -29,12 +29,14 @@ import org.apache.usergrid.persistence.cassandra.ConnectionRefImpl;\n  */\n public final class ConnectionShardFilter implements ShardFilter {\n     private final IndexBucketLocator indexBucketLocator;\n+\n     private final String expectedBucket;\n+\n     private final ConnectionRefImpl searchConnection;\n \n \n-    public ConnectionShardFilter( final IndexBucketLocator indexBucketLocator, final String expectedBucket,\n-                                  final ConnectionRefImpl connection ) {\n+    public ConnectionShardFilter(final IndexBucketLocator indexBucketLocator, final String expectedBucket,\n+                                 final ConnectionRefImpl connection) {\n         this.indexBucketLocator = indexBucketLocator;\n         this.expectedBucket = expectedBucket;\n         this.searchConnection = connection;\n@@ -43,20 +45,19 @@ public final class ConnectionShardFilter implements ShardFilter {\n     }\n \n \n-\n-\n-\n-    public boolean isInShard( final ScanColumn scanColumn ) {\n+    public boolean isInShard(final ScanColumn scanColumn) {\n \n         final UUID entityId = scanColumn.getUUID();\n \n-        final ConnectionRefImpl hashRef = new ConnectionRefImpl( searchConnection.getConnectingEntityType(), searchConnection.getConnectedEntityId(), searchConnection.getConnectionType(), searchConnection.getConnectingEntityType(), entityId  );\n+        final ConnectionRefImpl hashRef =\n+            new ConnectionRefImpl(searchConnection.getConnectingEntityType(), searchConnection.getConnectedEntityId(),\n+                searchConnection.getConnectionType(), searchConnection.getConnectingEntityType(), entityId);\n \n         final UUID hashId = hashRef.getConnectionSearchShardId();\n \n         //not for our current processing shard, discard\n-        final String shard = indexBucketLocator.getBucket( hashId );\n+        final String shard = indexBucketLocator.getBucket(hashId);\n \n-        return expectedBucket.equals( shard );\n+        return expectedBucket.equals(shard);\n     }\n }\n",
            "diff_size": 13
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "35",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 146).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "46",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 243).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/errored/1/189/ConnectionShardFilter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/naturalize/189/ConnectionShardFilter.java\nindex 39f3683583e..000e0ba8a59 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/errored/1/189/ConnectionShardFilter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/naturalize/189/ConnectionShardFilter.java\n@@ -14,7 +14,6 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n-\n package org.apache.usergrid.persistence.query.ir.result;\n \n \n@@ -33,24 +32,18 @@ public final class ConnectionShardFilter implements ShardFilter {\n     private final ConnectionRefImpl searchConnection;\n \n \n-    public ConnectionShardFilter( final IndexBucketLocator indexBucketLocator, final String expectedBucket,\n-                                  final ConnectionRefImpl connection ) {\n+    public ConnectionShardFilter( final IndexBucketLocator indexBucketLocator, final String expectedBucket, final ConnectionRefImpl connection ) {\n         this.indexBucketLocator = indexBucketLocator;\n         this.expectedBucket = expectedBucket;\n         this.searchConnection = connection;\n-\n-\n     }\n \n \n-\n-\n-\n-    public boolean isInShard( final ScanColumn scanColumn ) {\n+public boolean isInShard( final ScanColumn scanColumn ) {\n \n         final UUID entityId = scanColumn.getUUID();\n \n-        final ConnectionRefImpl hashRef = new ConnectionRefImpl( searchConnection.getConnectingEntityType(), searchConnection.getConnectedEntityId(), searchConnection.getConnectionType(), searchConnection.getConnectingEntityType(), entityId  );\n+        final ConnectionRefImpl hashRef = new ConnectionRefImpl( searchConnection.getConnectingEntityType(), searchConnection.getConnectedEntityId(), searchConnection.getConnectionType(), searchConnection.getConnectingEntityType(), entityId );\n \n         final UUID hashId = hashRef.getConnectionSearchShardId();\n \n@@ -59,4 +52,4 @@ public final class ConnectionShardFilter implements ShardFilter {\n \n         return expectedBucket.equals( shard );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 11
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "38",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 146).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "47",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 243).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/errored/1/189/ConnectionShardFilter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/codebuff/189/ConnectionShardFilter.java\nindex 39f3683583e..c9e7a4bf21d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/errored/1/189/ConnectionShardFilter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/codebuff/189/ConnectionShardFilter.java\n@@ -19,7 +19,6 @@ package org.apache.usergrid.persistence.query.ir.result;\n \n \n import java.util.UUID;\n-\n import org.apache.usergrid.persistence.IndexBucketLocator;\n import org.apache.usergrid.persistence.cassandra.ConnectionRefImpl;\n \n@@ -27,36 +26,29 @@ import org.apache.usergrid.persistence.cassandra.ConnectionRefImpl;\n /**\n  * Class that performs validation on an entity to ensure it's in the shard we expect\n  */\n+\n+\n public final class ConnectionShardFilter implements ShardFilter {\n+\n     private final IndexBucketLocator indexBucketLocator;\n     private final String expectedBucket;\n     private final ConnectionRefImpl searchConnection;\n \n \n-    public ConnectionShardFilter( final IndexBucketLocator indexBucketLocator, final String expectedBucket,\n-                                  final ConnectionRefImpl connection ) {\n+    public ConnectionShardFilter( final IndexBucketLocator indexBucketLocator, final String expectedBucket, final ConnectionRefImpl connection ) {\n         this.indexBucketLocator = indexBucketLocator;\n         this.expectedBucket = expectedBucket;\n         this.searchConnection = connection;\n-\n-\n     }\n \n \n-\n-\n-\n     public boolean isInShard( final ScanColumn scanColumn ) {\n-\n         final UUID entityId = scanColumn.getUUID();\n-\n-        final ConnectionRefImpl hashRef = new ConnectionRefImpl( searchConnection.getConnectingEntityType(), searchConnection.getConnectedEntityId(), searchConnection.getConnectionType(), searchConnection.getConnectingEntityType(), entityId  );\n-\n+        final ConnectionRefImpl hashRef = new ConnectionRefImpl( searchConnection.getConnectingEntityType(), searchConnection.getConnectedEntityId(), searchConnection.getConnectionType(), searchConnection.getConnectingEntityType(), entityId );\n         final UUID hashId = hashRef.getConnectionSearchShardId();\n \n         //not for our current processing shard, discard\n         final String shard = indexBucketLocator.getBucket( hashId );\n-\n         return expectedBucket.equals( shard );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 17
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "53",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 229).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "55",
                    "column": "9",
                    "severity": "warning",
                    "message": "'(' should be on the previous line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.MethodParamPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/errored/1/189/ConnectionShardFilter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/styler_random/189/ConnectionShardFilter.java\nindex 39f3683583e..a6a1fc3a8fa 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/errored/1/189/ConnectionShardFilter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/styler_random/189/ConnectionShardFilter.java\n@@ -50,7 +50,9 @@ public final class ConnectionShardFilter implements ShardFilter {\n \n         final UUID entityId = scanColumn.getUUID();\n \n-        final ConnectionRefImpl hashRef = new ConnectionRefImpl( searchConnection.getConnectingEntityType(), searchConnection.getConnectedEntityId(), searchConnection.getConnectionType(), searchConnection.getConnectingEntityType(), entityId  );\n+        final ConnectionRefImpl hashRef = new ConnectionRefImpl( searchConnection.getConnectingEntityType(), searchConnection.getConnectedEntityId(), searchConnection.getConnectionType(), searchConnection .getConnectingEntityType\n+\n+        ( ), entityId  );\n \n         final UUID hashId = hashRef.getConnectionSearchShardId();\n \n",
            "diff_size": 3
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "54",
                    "column": "35",
                    "severity": "warning",
                    "message": "'(' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.MethodParamPadCheck"
                },
                {
                    "line": "54",
                    "column": "55",
                    "severity": "warning",
                    "message": "'.' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck"
                },
                {
                    "line": "54",
                    "column": "80",
                    "severity": "warning",
                    "message": "'(' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.MethodParamPadCheck"
                },
                {
                    "line": "56",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 145).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/errored/1/189/ConnectionShardFilter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/styler_three_grams/189/ConnectionShardFilter.java\nindex 39f3683583e..2a82853703a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/errored/1/189/ConnectionShardFilter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/styler_three_grams/189/ConnectionShardFilter.java\n@@ -50,9 +50,12 @@ public final class ConnectionShardFilter implements ShardFilter {\n \n         final UUID entityId = scanColumn.getUUID();\n \n-        final ConnectionRefImpl hashRef = new ConnectionRefImpl( searchConnection.getConnectingEntityType(), searchConnection.getConnectedEntityId(), searchConnection.getConnectionType(), searchConnection.getConnectingEntityType(), entityId  );\n+        final ConnectionRefImpl hashRef = new\n+                ConnectionRefImpl ( searchConnection . getConnectingEntityType ()\n \n-        final UUID hashId = hashRef.getConnectionSearchShardId();\n+        , searchConnection.getConnectedEntityId(), searchConnection.getConnectionType(), searchConnection.getConnectingEntityType(), entityId  );\n+\n+         final UUID hashId = hashRef.getConnectionSearchShardId();\n \n         //not for our current processing shard, discard\n         final String shard = indexBucketLocator.getBucket( hashId );\n",
            "diff_size": 5
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
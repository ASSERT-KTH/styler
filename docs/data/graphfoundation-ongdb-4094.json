{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4094",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "49",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "113",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "80",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "102",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "113",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4094/CommitContext.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4094/CommitContext.java\nindex ba70cbd7115..04e8fa356c7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4094/CommitContext.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4094/CommitContext.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.index.impl.lucene.explicit;\n \n import org.apache.lucene.document.Document;\n@@ -36,109 +37,106 @@ import org.neo4j.kernel.impl.index.IndexCommand;\n  */\n class CommitContext implements Closeable\n {\n-    final LuceneDataSource dataSource;\n-    final IndexIdentifier identifier;\n-    final IndexType indexType;\n-    final PrimitiveLongObjectMap<DocumentContext> documents = Primitive.longObjectMap();\n-    final boolean recovery;\n+  final LuceneDataSource dataSource;\n+  final IndexIdentifier identifier;\n+  final IndexType indexType;\n+  final PrimitiveLongObjectMap<DocumentContext> documents = Primitive.longObjectMap();\n+  final boolean recovery;\n+\n+  IndexReference searcher;\n+  IndexWriter writer;\n \n-    IndexReference searcher;\n-    IndexWriter writer;\n+  CommitContext(LuceneDataSource dataSource, IndexIdentifier identifier, IndexType indexType, boolean isRecovery)\n+  {\n+    this.dataSource = dataSource;\n+    this.identifier = identifier;\n+    this.indexType = indexType;\n+    this.recovery = isRecovery;\n+  }\n \n-    CommitContext( LuceneDataSource dataSource, IndexIdentifier identifier, IndexType indexType, boolean isRecovery )\n+  void ensureWriterInstantiated() throws ExplicitIndexNotFoundKernelException\n+  {\n+    if (searcher == null)\n     {\n-        this.dataSource = dataSource;\n-        this.identifier = identifier;\n-        this.indexType = indexType;\n-        this.recovery = isRecovery;\n+      searcher = dataSource.getIndexSearcher(identifier);\n+      writer = searcher.getWriter();\n     }\n+  }\n \n-    void ensureWriterInstantiated() throws ExplicitIndexNotFoundKernelException\n+  DocumentContext getDocument(EntityId entityId, boolean allowCreate)\n+  {\n+    long id = entityId.id();\n+    DocumentContext context = documents.get(id);\n+    if (context != null)\n     {\n-        if ( searcher == null )\n-        {\n-            searcher = dataSource.getIndexSearcher( identifier );\n-            writer = searcher.getWriter();\n-        }\n+      return context;\n     }\n \n-    DocumentContext getDocument( EntityId entityId, boolean allowCreate )\n+    Document document = LuceneDataSource.findDocument(indexType, searcher.getSearcher(), id);\n+    if (document != null)\n     {\n-        long id = entityId.id();\n-        DocumentContext context = documents.get( id );\n-        if ( context != null )\n-        {\n-            return context;\n-        }\n+      context = new DocumentContext(document, true, id);\n+      documents.put(id, context);\n+    } else if (allowCreate)\n+    {\n+      context = new DocumentContext(IndexType.newDocument(entityId), false, id);\n+      documents.put(id, context);\n+    }\n+    return context;\n+  }\n \n-        Document document = LuceneDataSource.findDocument( indexType, searcher.getSearcher(), id );\n-        if ( document != null )\n+  private void applyDocuments(IndexWriter writer, IndexType type,\n+                              PrimitiveLongObjectMap<DocumentContext> documents) throws IOException\n+  {\n+    for (DocumentContext context : documents.values())\n+    {\n+      if (context.exists)\n+      {\n+        if (LuceneDataSource.documentIsEmpty(context.document))\n         {\n-            context = new DocumentContext( document, true, id );\n-            documents.put( id, context );\n-        }\n-        else if ( allowCreate )\n+          writer.deleteDocuments(type.idTerm(context.entityId));\n+        } else\n         {\n-            context = new DocumentContext( IndexType.newDocument( entityId ), false, id );\n-            documents.put( id, context );\n+          writer.updateDocument(type.idTerm(context.entityId), context.document);\n         }\n-        return context;\n+      } else\n+      {\n+        writer.addDocument(context.document);\n+      }\n     }\n+  }\n \n-    private void applyDocuments( IndexWriter writer, IndexType type,\n-            PrimitiveLongObjectMap<DocumentContext> documents ) throws IOException\n+  @Override\n+  public void close() throws IOException\n+  {\n+    applyDocuments(writer, indexType, documents);\n+    if (writer != null)\n     {\n-        for ( DocumentContext context : documents.values() )\n-        {\n-            if ( context.exists )\n-            {\n-                if ( LuceneDataSource.documentIsEmpty( context.document ) )\n-                {\n-                    writer.deleteDocuments( type.idTerm( context.entityId ) );\n-                }\n-                else\n-                {\n-                    writer.updateDocument( type.idTerm( context.entityId ), context.document );\n-                }\n-            }\n-            else\n-            {\n-                writer.addDocument( context.document );\n-            }\n-        }\n+      dataSource.invalidateIndexSearcher(identifier);\n     }\n-\n-    @Override\n-    public void close() throws IOException\n+    if (searcher != null)\n     {\n-        applyDocuments( writer, indexType, documents );\n-        if ( writer != null )\n-        {\n-            dataSource.invalidateIndexSearcher( identifier );\n-        }\n-        if ( searcher != null )\n-        {\n-            searcher.close();\n-        }\n+      searcher.close();\n     }\n+  }\n \n-    static class DocumentContext\n-    {\n-        final Document document;\n-        final boolean exists;\n-        final long entityId;\n+  static class DocumentContext\n+  {\n+    final Document document;\n+    final boolean exists;\n+    final long entityId;\n \n-        DocumentContext( Document document, boolean exists, long entityId )\n-        {\n-            this.document = document;\n-            this.exists = exists;\n-            this.entityId = entityId;\n-        }\n+    DocumentContext(Document document, boolean exists, long entityId)\n+    {\n+      this.document = document;\n+      this.exists = exists;\n+      this.entityId = entityId;\n+    }\n \n-        @Override\n-        public String toString()\n-        {\n-            return \"DocumentContext[document=\" + document + \", exists=\" + exists + \", entityId=\" + entityId + \"]\";\n-        }\n+    @Override\n+    public String toString()\n+    {\n+      return \"DocumentContext[document=\" + document + \", exists=\" + exists + \", entityId=\" + entityId + \"]\";\n     }\n+  }\n }\n",
            "diff_size": 117
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4094/CommitContext.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4094/CommitContext.java\nindex ba70cbd7115..6f7f510f639 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4094/CommitContext.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4094/CommitContext.java\n@@ -82,12 +82,12 @@ class CommitContext implements Closeable\n             context = new DocumentContext( IndexType.newDocument( entityId ), false, id );\n             documents.put( id, context );\n         }\n-        return context;\n+\n+return context;\n     }\n \n-    private void applyDocuments( IndexWriter writer, IndexType type,\n-            PrimitiveLongObjectMap<DocumentContext> documents ) throws IOException\n-    {\n+    private void applyDocuments( IndexWriter writer, IndexType type, PrimitiveLongObjectMap<DocumentContext> documents ) throws IOException\n+{\n         for ( DocumentContext context : documents.values() )\n         {\n             if ( context.exists )\n@@ -116,7 +116,8 @@ class CommitContext implements Closeable\n         {\n             dataSource.invalidateIndexSearcher( identifier );\n         }\n-        if ( searcher != null )\n+\n+if ( searcher != null )\n         {\n             searcher.close();\n         }\n@@ -141,4 +142,4 @@ class CommitContext implements Closeable\n             return \"DocumentContext[document=\" + document + \", exists=\" + exists + \", entityId=\" + entityId + \"]\";\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
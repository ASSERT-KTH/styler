{
    "project_name": "neo4j-neo4j",
    "error_id": "194",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "50",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/194/IdMapper.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/194/IdMapper.java\nindex cc89dc686b5..caf6fd04a11 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/194/IdMapper.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/194/IdMapper.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.internal.batchimport.cache.idmapping;\n \n import org.eclipse.collections.api.iterator.LongIterator;\n@@ -37,15 +38,16 @@ public interface IdMapper extends MemoryStatsVisitor.Visitable, AutoCloseable\n \n     /**\n      * Maps an {@code inputId} to an actual node id.\n-     * @param inputId an id of an unknown type, coming from input.\n+     *\n+     * @param inputId  an id of an unknown type, coming from input.\n      * @param actualId the actual node id that the inputId will represent.\n-     * @param group {@link Group} this input id will be added to. Used for handling input ids collisions\n-     * where multiple equal input ids might be added, as long as all input ids within a single group is unique.\n-     * Group ids are also passed into {@link #get(Object, Group)}.\n-     * It is required that all input ids belonging to a specific group are put in sequence before putting any\n-     * input ids for another group.\n+     * @param group    {@link Group} this input id will be added to. Used for handling input ids collisions\n+     *                 where multiple equal input ids might be added, as long as all input ids within a single group is unique.\n+     *                 Group ids are also passed into {@link #get(Object, Group)}.\n+     *                 It is required that all input ids belonging to a specific group are put in sequence before putting any\n+     *                 input ids for another group.\n      */\n-    void put( Object inputId, long actualId, Group group );\n+    void put(Object inputId, long actualId, Group group);\n \n     /**\n      * @return whether or not a call to {@link #prepare(PropertyValueLookup, Collector, ProgressListener)} needs to commence after all calls to\n@@ -57,13 +59,14 @@ public interface IdMapper extends MemoryStatsVisitor.Visitable, AutoCloseable\n     /**\n      * After all mappings have been {@link #put(Object, long, Group)} call this method to prepare for\n      * {@link #get(Object, Group)}.\n+     *\n      * @param inputIdLookup can return input id of supplied node id. Used in the event of difficult collisions\n-     * so that more information have to be read from the input data again, data that normally isn't necessary\n-     * and hence discarded.\n-     * @param collector {@link Collector} for bad entries, such as duplicate node ids.\n-     * @param progress reports preparation progress.\n+     *                      so that more information have to be read from the input data again, data that normally isn't necessary\n+     *                      and hence discarded.\n+     * @param collector     {@link Collector} for bad entries, such as duplicate node ids.\n+     * @param progress      reports preparation progress.\n      */\n-    void prepare( PropertyValueLookup inputIdLookup, Collector collector, ProgressListener progress );\n+    void prepare(PropertyValueLookup inputIdLookup, Collector collector, ProgressListener progress);\n \n     /**\n      * Returns an actual node id representing {@code inputId}.\n@@ -73,10 +76,10 @@ public interface IdMapper extends MemoryStatsVisitor.Visitable, AutoCloseable\n      * {@link #put(Object, long, Group) being put}\n      *\n      * @param inputId the input id to get the actual node id for.\n-     * @param group {@link Group} the given {@code inputId} must exist in, i.e. have been put with.\n+     * @param group   {@link Group} the given {@code inputId} must exist in, i.e. have been put with.\n      * @return the actual node id previously specified by {@link #put(Object, long, Group)}, or {@code -1} if not found.\n      */\n-    long get( Object inputId, Group group );\n+    long get(Object inputId, Group group);\n \n     /**\n      * Releases all resources used by this {@link IdMapper}.\n@@ -90,7 +93,7 @@ public interface IdMapper extends MemoryStatsVisitor.Visitable, AutoCloseable\n      * @param numberOfNodes number of nodes to calculate memory for.\n      * @return instance capable of calculating memory usage for the given number of nodes.\n      */\n-    MemoryStatsVisitor.Visitable memoryEstimation( long numberOfNodes );\n+    MemoryStatsVisitor.Visitable memoryEstimation(long numberOfNodes);\n \n     LongIterator leftOverDuplicateNodesIds();\n }\n",
            "diff_size": 18
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
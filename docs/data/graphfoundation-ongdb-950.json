{
    "project_name": "graphfoundation-ongdb",
    "error_id": "950",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "36",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "36",
                    "column": "105",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/950/CountsStoreBatchTransactionApplier.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/950/CountsStoreBatchTransactionApplier.java\nindex 9b4640a46e4..1d3eb567f0d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/950/CountsStoreBatchTransactionApplier.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/950/CountsStoreBatchTransactionApplier.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.api;\n \n import java.io.IOException;\n@@ -28,23 +29,23 @@ import org.neo4j.storageengine.api.TransactionApplicationMode;\n \n public class CountsStoreBatchTransactionApplier extends BatchTransactionApplier.Adapter\n {\n-    private final CountsTracker countsTracker;\n-    private CountsTracker.Updater countsUpdater;\n-    private final TransactionApplicationMode mode;\n+  private final CountsTracker countsTracker;\n+  private CountsTracker.Updater countsUpdater;\n+  private final TransactionApplicationMode mode;\n \n-    public CountsStoreBatchTransactionApplier( CountsTracker countsTracker, TransactionApplicationMode mode )\n-    {\n-        this.countsTracker = countsTracker;\n-        this.mode = mode;\n-    }\n+  public CountsStoreBatchTransactionApplier(CountsTracker countsTracker, TransactionApplicationMode mode)\n+  {\n+    this.countsTracker = countsTracker;\n+    this.mode = mode;\n+  }\n \n-    @Override\n-    public TransactionApplier startTx( CommandsToApply transaction )\n-    {\n-        Optional<CountsAccessor.Updater> result = countsTracker.apply( transaction.transactionId() );\n-        result.ifPresent( updater -> this.countsUpdater = updater );\n-        assert this.countsUpdater != null || mode == TransactionApplicationMode.RECOVERY;\n+  @Override\n+  public TransactionApplier startTx(CommandsToApply transaction)\n+  {\n+    Optional<CountsAccessor.Updater> result = countsTracker.apply(transaction.transactionId());\n+    result.ifPresent(updater -> this.countsUpdater = updater);\n+    assert this.countsUpdater != null || mode == TransactionApplicationMode.RECOVERY;\n \n-        return new CountsStoreTransactionApplier( mode, countsUpdater );\n-    }\n+    return new CountsStoreTransactionApplier(mode, countsUpdater);\n+  }\n }\n",
            "diff_size": 17
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/950/CountsStoreBatchTransactionApplier.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/950/CountsStoreBatchTransactionApplier.java\nindex 9b4640a46e4..fbbdf94545d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/950/CountsStoreBatchTransactionApplier.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/950/CountsStoreBatchTransactionApplier.java\n@@ -44,7 +44,6 @@ public class CountsStoreBatchTransactionApplier extends BatchTransactionApplier.\n         Optional<CountsAccessor.Updater> result = countsTracker.apply( transaction.transactionId() );\n         result.ifPresent( updater -> this.countsUpdater = updater );\n         assert this.countsUpdater != null || mode == TransactionApplicationMode.RECOVERY;\n-\n-        return new CountsStoreTransactionApplier( mode, countsUpdater );\n+return new CountsStoreTransactionApplier( mode, countsUpdater );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
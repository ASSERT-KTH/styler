{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2687",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "32",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "32",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "15",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2687/NonPrimitiveArray.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2687/NonPrimitiveArray.java\nindex 8b65be50165..e1c51d57e04 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2687/NonPrimitiveArray.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2687/NonPrimitiveArray.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.values.storable;\n \n import java.util.Arrays;\n@@ -25,131 +26,131 @@ import org.neo4j.hashing.HashFunction;\n \n public abstract class NonPrimitiveArray<T extends Comparable<? super T>> extends ArrayValue\n {\n-    protected abstract T[] value();\n-\n-    @Override\n-    public final boolean equals( boolean[] x )\n-    {\n-        return false;\n-    }\n-\n-    @Override\n-    public final boolean equals( char[] x )\n-    {\n-        return false;\n-    }\n-\n-    @Override\n-    public final boolean equals( String[] x )\n-    {\n-        return false;\n-    }\n-\n-    @Override\n-    public final boolean equals( byte[] x )\n-    {\n-        return false;\n-    }\n-\n-    @Override\n-    public final boolean equals( short[] x )\n-    {\n-        return false;\n-    }\n-\n-    @Override\n-    public final boolean equals( int[] x )\n-    {\n-        return false;\n-    }\n-\n-    @Override\n-    public final boolean equals( long[] x )\n-    {\n-        return false;\n-    }\n-\n-    @Override\n-    public final boolean equals( float[] x )\n-    {\n-        return false;\n-    }\n-\n-    @Override\n-    public final boolean equals( double[] x )\n-    {\n-        return false;\n-    }\n-\n-    @Override\n-    public final NumberType numberType()\n-    {\n-        return NumberType.NO_NUMBER;\n-    }\n-\n-    protected final int compareToNonPrimitiveArray( NonPrimitiveArray<T> other )\n-    {\n-        int i = 0;\n-        int x = 0;\n-        int length = Math.min( this.length(), other.length() );\n-\n-        while ( x == 0 && i < length )\n-        {\n-            x = this.value()[i].compareTo( other.value()[i] );\n-            i++;\n-        }\n-        if ( x == 0 )\n-        {\n-            x = this.length() - other.length();\n-        }\n-        return x;\n-    }\n-\n-    @Override\n-    public final int computeHash()\n-    {\n-        return Arrays.hashCode( value() );\n-    }\n-\n-    @Override\n-    public long updateHash( HashFunction hashFunction, long hash )\n-    {\n-        hash = hashFunction.update( hash, length() );\n-        for ( T obj : value() )\n-        {\n-            hash = hashFunction.update( hash, obj.hashCode() );\n-        }\n-        return hash;\n-    }\n-\n-    @Override\n-    public final int length()\n-    {\n-        return value().length;\n-    }\n-\n-    @Override\n-    public final T[] asObjectCopy()\n-    {\n-        return value().clone();\n-    }\n-\n-    @Override\n-    @Deprecated\n-    public final T[] asObject()\n-    {\n-        return value();\n-    }\n-\n-    @Override\n-    public final String prettyPrint()\n-    {\n-        return Arrays.toString( value() );\n-    }\n-\n-    @Override\n-    public final String toString()\n-    {\n-        return getClass().getSimpleName() + Arrays.toString( value());\n-    }\n+  protected abstract T[] value();\n+\n+  @Override\n+  public final boolean equals(boolean[] x)\n+  {\n+    return false;\n+  }\n+\n+  @Override\n+  public final boolean equals(char[] x)\n+  {\n+    return false;\n+  }\n+\n+  @Override\n+  public final boolean equals(String[] x)\n+  {\n+    return false;\n+  }\n+\n+  @Override\n+  public final boolean equals(byte[] x)\n+  {\n+    return false;\n+  }\n+\n+  @Override\n+  public final boolean equals(short[] x)\n+  {\n+    return false;\n+  }\n+\n+  @Override\n+  public final boolean equals(int[] x)\n+  {\n+    return false;\n+  }\n+\n+  @Override\n+  public final boolean equals(long[] x)\n+  {\n+    return false;\n+  }\n+\n+  @Override\n+  public final boolean equals(float[] x)\n+  {\n+    return false;\n+  }\n+\n+  @Override\n+  public final boolean equals(double[] x)\n+  {\n+    return false;\n+  }\n+\n+  @Override\n+  public final NumberType numberType()\n+  {\n+    return NumberType.NO_NUMBER;\n+  }\n+\n+  protected final int compareToNonPrimitiveArray(NonPrimitiveArray<T> other)\n+  {\n+    int i = 0;\n+    int x = 0;\n+    int length = Math.min(this.length(), other.length());\n+\n+    while (x == 0 && i < length)\n+    {\n+      x = this.value()[i].compareTo(other.value()[i]);\n+      i++;\n+    }\n+    if (x == 0)\n+    {\n+      x = this.length() - other.length();\n+    }\n+    return x;\n+  }\n+\n+  @Override\n+  public final int computeHash()\n+  {\n+    return Arrays.hashCode(value());\n+  }\n+\n+  @Override\n+  public long updateHash(HashFunction hashFunction, long hash)\n+  {\n+    hash = hashFunction.update(hash, length());\n+    for (T obj : value())\n+    {\n+      hash = hashFunction.update(hash, obj.hashCode());\n+    }\n+    return hash;\n+  }\n+\n+  @Override\n+  public final int length()\n+  {\n+    return value().length;\n+  }\n+\n+  @Override\n+  public final T[] asObjectCopy()\n+  {\n+    return value().clone();\n+  }\n+\n+  @Override\n+  @Deprecated\n+  public final T[] asObject()\n+  {\n+    return value();\n+  }\n+\n+  @Override\n+  public final String prettyPrint()\n+  {\n+    return Arrays.toString(value());\n+  }\n+\n+  @Override\n+  public final String toString()\n+  {\n+    return getClass().getSimpleName() + Arrays.toString(value());\n+  }\n }\n",
            "diff_size": 128
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2687/NonPrimitiveArray.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2687/NonPrimitiveArray.java\nindex 8b65be50165..a47c5438f41 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2687/NonPrimitiveArray.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2687/NonPrimitiveArray.java\n@@ -98,11 +98,13 @@ public abstract class NonPrimitiveArray<T extends Comparable<? super T>> extends\n             x = this.value()[i].compareTo( other.value()[i] );\n             i++;\n         }\n-        if ( x == 0 )\n+\n+if ( x == 0 )\n         {\n             x = this.length() - other.length();\n         }\n-        return x;\n+\n+return x;\n     }\n \n     @Override\n@@ -119,7 +121,8 @@ public abstract class NonPrimitiveArray<T extends Comparable<? super T>> extends\n         {\n             hash = hashFunction.update( hash, obj.hashCode() );\n         }\n-        return hash;\n+\n+return hash;\n     }\n \n     @Override\n@@ -150,6 +153,6 @@ public abstract class NonPrimitiveArray<T extends Comparable<? super T>> extends\n     @Override\n     public final String toString()\n     {\n-        return getClass().getSimpleName() + Arrays.toString( value());\n+        return getClass().getSimpleName() + Arrays.toString( value() );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
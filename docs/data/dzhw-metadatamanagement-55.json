{
    "project_name": "dzhw-metadatamanagement",
    "error_id": "55",
    "information": {
        "errors": [
            {
                "line": "28",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 122).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " */\n@RequiredArgsConstructor\npublic abstract class GenericDomainObjectResourceController<T extends AbstractRdcDomainObject, S extends CrudService<T>> {\n\n  private final CrudService<T> crudService;\n",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "28",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 122).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 122).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/55/GenericDomainObjectResourceController.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/intellij/55/GenericDomainObjectResourceController.java\nindex 54f62d63a36..e359780d092 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/55/GenericDomainObjectResourceController.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/intellij/55/GenericDomainObjectResourceController.java\n@@ -18,11 +18,10 @@ import lombok.RequiredArgsConstructor;\n /**\n  * REST Controller managing CRUD access to our {@link AbstractRdcDomainObject} stored in\n  * {@link MongoDatabase}.\n- * \n- * @author Ren\u00e9 Reitmann\n  *\n  * @param <T> The concrete type of the domain object.\n  * @param <S> The CRUD service implementation of the domain object.\n+ * @author Ren\u00e9 Reitmann\n  */\n @RequiredArgsConstructor\n public abstract class GenericDomainObjectResourceController<T extends AbstractRdcDomainObject, S extends CrudService<T>> {\n@@ -31,7 +30,7 @@ public abstract class GenericDomainObjectResourceController<T extends AbstractRd\n \n   /**\n    * Retrieve the {@link AbstractRdcDomainObject} and set the cache header.\n-   * \n+   *\n    * @param id the id of the {@link AbstractRdcDomainObject}.\n    * @return the {@link AbstractRdcDomainObject} or 404\n    */\n@@ -52,7 +51,7 @@ public abstract class GenericDomainObjectResourceController<T extends AbstractRd\n   /**\n    * Create the given {@link AbstractRdcDomainObject}. For {@link AbstractShadowableRdcDomainObject}\n    * only masters can be created.\n-   * \n+   *\n    * @param domainObject The {@link AbstractRdcDomainObject} to be created.\n    */\n   public ResponseEntity<?> postDomainObject(T domainObject) {\n@@ -63,7 +62,7 @@ public abstract class GenericDomainObjectResourceController<T extends AbstractRd\n   /**\n    * Save or create the given {@link AbstractRdcDomainObject}.\n    * {@link AbstractShadowableRdcDomainObject} may only be saved if they are masters.\n-   * \n+   *\n    * @param domainObject The {@link AbstractRdcDomainObject} to be saved.\n    */\n   public ResponseEntity<?> putDomainObject(T domainObject) {\n@@ -74,7 +73,7 @@ public abstract class GenericDomainObjectResourceController<T extends AbstractRd\n   /**\n    * Delete the {@link AbstractRdcDomainObject} under the given id.\n    * {@link AbstractShadowableRdcDomainObject} may only be deleted if they are masters.\n-   * \n+   *\n    * @param id The id of the {@link AbstractRdcDomainObject}\n    */\n   public ResponseEntity<?> deleteDomainObject(String id) {\n",
            "diff_size": 7
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "28",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 122).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/55/GenericDomainObjectResourceController.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/naturalize/55/GenericDomainObjectResourceController.java\nindex 54f62d63a36..035cb9d2e1a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/55/GenericDomainObjectResourceController.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/naturalize/55/GenericDomainObjectResourceController.java\n@@ -87,4 +87,4 @@ public abstract class GenericDomainObjectResourceController<T extends AbstractRd\n   }\n \n   protected abstract URI buildLocationHeaderUri(T domainObject);\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "28",
                    "severity": "error",
                    "message": "'S' has incorrect indentation level 2, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "46",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 105).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/55/GenericDomainObjectResourceController.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/codebuff/55/GenericDomainObjectResourceController.java\nindex 54f62d63a36..aa76a3bd1d7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/55/GenericDomainObjectResourceController.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/codebuff/55/GenericDomainObjectResourceController.java\n@@ -4,12 +4,9 @@ import java.net.URI;\n import java.time.ZoneId;\n import java.util.Optional;\n import java.util.concurrent.TimeUnit;\n-\n import org.springframework.http.CacheControl;\n import org.springframework.http.ResponseEntity;\n-\n import com.mongodb.client.MongoDatabase;\n-\n import eu.dzhw.fdz.metadatamanagement.common.domain.AbstractRdcDomainObject;\n import eu.dzhw.fdz.metadatamanagement.common.domain.AbstractShadowableRdcDomainObject;\n import eu.dzhw.fdz.metadatamanagement.common.service.CrudService;\n@@ -24,9 +21,11 @@ import lombok.RequiredArgsConstructor;\n  * @param <T> The concrete type of the domain object.\n  * @param <S> The CRUD service implementation of the domain object.\n  */\n-@RequiredArgsConstructor\n-public abstract class GenericDomainObjectResourceController<T extends AbstractRdcDomainObject, S extends CrudService<T>> {\n \n+\n+@RequiredArgsConstructor\n+public abstract class GenericDomainObjectResourceController<T extends AbstractRdcDomainObject,\n+  S extends CrudService<T>> {\n   private final CrudService<T> crudService;\n \n   /**\n@@ -41,11 +40,13 @@ public abstract class GenericDomainObjectResourceController<T extends AbstractRd\n       return ResponseEntity.notFound().build();\n     } else {\n       T domainObject = optional.get();\n-      return ResponseEntity.ok()\n-          .cacheControl(CacheControl.maxAge(0, TimeUnit.DAYS).mustRevalidate().cachePublic())\n-          .eTag(domainObject.getVersion().toString()).lastModified(domainObject\n-              .getLastModifiedDate().atZone(ZoneId.of(\"GMT\")).toInstant().toEpochMilli())\n-          .body(domainObject);\n+      return ResponseEntity.ok().cacheControl(CacheControl.maxAge(0, TimeUnit.DAYS).mustRevalidate()\n+                                                                                   .cachePublic())\n+                                .eTag(domainObject.getVersion().toString())\n+                                .lastModified(domainObject.getLastModifiedDate().atZone(ZoneId.of(\"GMT\"))\n+                                                                                .toInstant()\n+                                                                                .toEpochMilli())\n+                                .body(domainObject);\n     }\n   }\n \n@@ -55,6 +56,7 @@ public abstract class GenericDomainObjectResourceController<T extends AbstractRd\n    * \n    * @param domainObject The {@link AbstractRdcDomainObject} to be created.\n    */\n+\n   public ResponseEntity<?> postDomainObject(T domainObject) {\n     T saved = crudService.create(domainObject);\n     return ResponseEntity.created(buildLocationHeaderUri(saved)).build();\n@@ -66,6 +68,7 @@ public abstract class GenericDomainObjectResourceController<T extends AbstractRd\n    * \n    * @param domainObject The {@link AbstractRdcDomainObject} to be saved.\n    */\n+\n   public ResponseEntity<?> putDomainObject(T domainObject) {\n     crudService.save(domainObject);\n     return ResponseEntity.noContent().build();\n@@ -77,6 +80,7 @@ public abstract class GenericDomainObjectResourceController<T extends AbstractRd\n    * \n    * @param id The id of the {@link AbstractRdcDomainObject}\n    */\n+\n   public ResponseEntity<?> deleteDomainObject(String id) {\n     Optional<T> optional = crudService.read(id);\n     if (optional.isEmpty()) {\n@@ -87,4 +91,4 @@ public abstract class GenericDomainObjectResourceController<T extends AbstractRd\n   }\n \n   protected abstract URI buildLocationHeaderUri(T domainObject);\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 20
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "28",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 122).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "28",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 122).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
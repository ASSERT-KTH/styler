{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4558",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "57",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "104",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "72",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "126",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "158",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "166",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "166",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "177",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "177",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "182",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "182",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "194",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "194",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "199",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "199",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "216",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "216",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "218",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "218",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "240",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "240",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "282",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "282",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4558/TransactionEventHandlers.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4558/TransactionEventHandlers.java\nindex 8b7a562b33f..b7aad864a39 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4558/TransactionEventHandlers.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4558/TransactionEventHandlers.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.internal;\n \n import java.util.Collection;\n@@ -47,265 +48,264 @@ import org.neo4j.storageengine.api.txstate.ReadableTransactionState;\n  * Handle the collection of transaction event handlers, and fire events as needed.\n  */\n public class TransactionEventHandlers\n-        implements Lifecycle, TransactionHook<TransactionEventHandlers.TransactionHandlerState>\n+    implements Lifecycle, TransactionHook<TransactionEventHandlers.TransactionHandlerState>\n {\n-    private final CopyOnWriteArraySet<TransactionEventHandler> transactionEventHandlers = new CopyOnWriteArraySet<>();\n+  private final CopyOnWriteArraySet<TransactionEventHandler> transactionEventHandlers = new CopyOnWriteArraySet<>();\n+\n+  private final EmbeddedProxySPI proxySpi;\n+\n+  public TransactionEventHandlers(EmbeddedProxySPI spi)\n+  {\n+    this.proxySpi = spi;\n+  }\n+\n+  @Override\n+  public void init()\n+  {\n+  }\n+\n+  @Override\n+  public void start()\n+  {\n+  }\n+\n+  @Override\n+  public void stop()\n+  {\n+  }\n+\n+  @Override\n+  public void shutdown()\n+  {\n+  }\n+\n+  public <T> TransactionEventHandler<T> registerTransactionEventHandler(\n+      TransactionEventHandler<T> handler)\n+  {\n+    this.transactionEventHandlers.add(handler);\n+    return handler;\n+  }\n+\n+  public <T> TransactionEventHandler<T> unregisterTransactionEventHandler(\n+      TransactionEventHandler<T> handler)\n+  {\n+    return unregisterHandler(this.transactionEventHandlers, handler);\n+  }\n+\n+  private <T> T unregisterHandler(Collection<?> setOfHandlers, T handler)\n+  {\n+    if (!setOfHandlers.remove(handler))\n+    {\n+      throw new IllegalStateException(handler + \" isn't registered\");\n+    }\n+    return handler;\n+  }\n+\n+  @Override\n+  public TransactionHandlerState beforeCommit(ReadableTransactionState state, KernelTransaction transaction,\n+                                              StoreReadLayer storeReadLayer, StorageStatement statement)\n+  {\n+    // The iterator grabs a snapshot of our list of handlers\n+    Iterator<TransactionEventHandler> handlers = transactionEventHandlers.iterator();\n+    if (!handlers.hasNext())\n+    {\n+      // Use 'null' as a signal that no event handlers were registered at beforeCommit time\n+      return null;\n+    }\n+\n+    TransactionData txData = state == null ? EMPTY_DATA :\n+        new TxStateTransactionDataSnapshot(state, proxySpi, storeReadLayer, statement, transaction);\n+\n+    TransactionHandlerState handlerStates = new TransactionHandlerState(txData);\n+    while (handlers.hasNext())\n+    {\n+      TransactionEventHandler<?> handler = handlers.next();\n+      try\n+      {\n+        handlerStates.add(handler).setState(handler.beforeCommit(txData));\n+      } catch (Throwable t)\n+      {\n+        handlerStates.failed(t);\n+      }\n+    }\n \n-    private final EmbeddedProxySPI proxySpi;\n+    return handlerStates;\n+  }\n \n-    public TransactionEventHandlers( EmbeddedProxySPI spi )\n+  @Override\n+  @SuppressWarnings(\"unchecked\")\n+  public void afterCommit(ReadableTransactionState state,\n+                          KernelTransaction transaction,\n+                          TransactionHandlerState handlerState)\n+  {\n+    if (handlerState == null)\n+    {\n+      // As per beforeCommit, 'null' means no handlers were registered in time for this transaction to\n+      // observe them.\n+      return;\n+    }\n+\n+    for (HandlerAndState handlerAndState : handlerState.states)\n+    {\n+      handlerAndState.handler.afterCommit(handlerState.txData, handlerAndState.state);\n+    }\n+  }\n+\n+  @Override\n+  @SuppressWarnings(\"unchecked\")\n+  public void afterRollback(ReadableTransactionState state,\n+                            KernelTransaction transaction,\n+                            TransactionHandlerState handlerState)\n+  {\n+    if (handlerState == null)\n     {\n-        this.proxySpi = spi;\n+      // For legacy reasons, we don't call transaction handlers on implicit rollback.\n+      return;\n     }\n \n+    for (HandlerAndState handlerAndState : handlerState.states)\n+    {\n+      handlerAndState.handler.afterRollback(handlerState.txData, handlerAndState.state);\n+    }\n+  }\n+\n+  public static class HandlerAndState\n+  {\n+    private final TransactionEventHandler handler;\n+    private Object state;\n+\n+    public HandlerAndState(TransactionEventHandler<?> handler)\n+    {\n+      this.handler = handler;\n+    }\n+\n+    void setState(Object state)\n+    {\n+      this.state = state;\n+    }\n+  }\n+\n+  public static class TransactionHandlerState implements TransactionHook.Outcome\n+  {\n+    private final TransactionData txData;\n+    private final List<HandlerAndState> states = new LinkedList<>();\n+    private Throwable error;\n+\n+    public TransactionHandlerState(TransactionData txData)\n+    {\n+      this.txData = txData;\n+    }\n+\n+    public void failed(Throwable error)\n+    {\n+      this.error = error;\n+    }\n+\n+    @Override\n+    public boolean isSuccessful()\n+    {\n+      return error == null;\n+    }\n+\n+    @Override\n+    public Throwable failure()\n+    {\n+      return error;\n+    }\n+\n+    public HandlerAndState add(TransactionEventHandler<?> handler)\n+    {\n+      HandlerAndState result = new HandlerAndState(handler);\n+      states.add(result);\n+      return result;\n+    }\n+  }\n+\n+  private static final TransactionData EMPTY_DATA = new TransactionData()\n+  {\n+\n     @Override\n-    public void init()\n+    public Iterable<Node> createdNodes()\n     {\n+      return Iterables.empty();\n     }\n \n     @Override\n-    public void start()\n+    public Iterable<Node> deletedNodes()\n     {\n+      return Iterables.empty();\n     }\n \n     @Override\n-    public void stop()\n+    public boolean isDeleted(Node node)\n     {\n+      return false;\n     }\n \n     @Override\n-    public void shutdown()\n+    public Iterable<PropertyEntry<Node>> assignedNodeProperties()\n     {\n+      return Iterables.empty();\n     }\n \n-    public <T> TransactionEventHandler<T> registerTransactionEventHandler(\n-            TransactionEventHandler<T> handler )\n+    @Override\n+    public Iterable<PropertyEntry<Node>> removedNodeProperties()\n     {\n-        this.transactionEventHandlers.add( handler );\n-        return handler;\n+      return Iterables.empty();\n     }\n \n-    public <T> TransactionEventHandler<T> unregisterTransactionEventHandler(\n-            TransactionEventHandler<T> handler )\n+    @Override\n+    public Iterable<LabelEntry> assignedLabels()\n     {\n-        return unregisterHandler( this.transactionEventHandlers, handler );\n+      return Iterables.empty();\n     }\n \n-    private <T> T unregisterHandler( Collection<?> setOfHandlers, T handler )\n+    @Override\n+    public Iterable<LabelEntry> removedLabels()\n     {\n-        if ( !setOfHandlers.remove( handler ) )\n-        {\n-            throw new IllegalStateException( handler + \" isn't registered\" );\n-        }\n-        return handler;\n+      return Iterables.empty();\n     }\n \n     @Override\n-    public TransactionHandlerState beforeCommit( ReadableTransactionState state, KernelTransaction transaction,\n-            StoreReadLayer storeReadLayer, StorageStatement statement )\n+    public Iterable<Relationship> createdRelationships()\n     {\n-        // The iterator grabs a snapshot of our list of handlers\n-        Iterator<TransactionEventHandler> handlers = transactionEventHandlers.iterator();\n-        if ( !handlers.hasNext() )\n-        {\n-            // Use 'null' as a signal that no event handlers were registered at beforeCommit time\n-            return null;\n-        }\n-\n-        TransactionData txData = state == null ? EMPTY_DATA :\n-                new TxStateTransactionDataSnapshot( state, proxySpi, storeReadLayer, statement, transaction );\n-\n-        TransactionHandlerState handlerStates = new TransactionHandlerState( txData );\n-        while ( handlers.hasNext() )\n-        {\n-            TransactionEventHandler<?> handler = handlers.next();\n-            try\n-            {\n-                handlerStates.add( handler ).setState( handler.beforeCommit( txData ) );\n-            }\n-            catch ( Throwable t )\n-            {\n-                handlerStates.failed( t );\n-            }\n-        }\n-\n-        return handlerStates;\n+      return Iterables.empty();\n     }\n \n     @Override\n-    @SuppressWarnings( \"unchecked\" )\n-    public void afterCommit( ReadableTransactionState state,\n-            KernelTransaction transaction,\n-            TransactionHandlerState handlerState )\n+    public Iterable<Relationship> deletedRelationships()\n     {\n-        if ( handlerState == null )\n-        {\n-            // As per beforeCommit, 'null' means no handlers were registered in time for this transaction to\n-            // observe them.\n-            return;\n-        }\n-\n-        for ( HandlerAndState handlerAndState : handlerState.states )\n-        {\n-            handlerAndState.handler.afterCommit( handlerState.txData, handlerAndState.state );\n-        }\n+      return Iterables.empty();\n     }\n \n     @Override\n-    @SuppressWarnings( \"unchecked\" )\n-    public void afterRollback( ReadableTransactionState state,\n-            KernelTransaction transaction,\n-            TransactionHandlerState handlerState )\n+    public boolean isDeleted(Relationship relationship)\n     {\n-        if ( handlerState == null )\n-        {\n-            // For legacy reasons, we don't call transaction handlers on implicit rollback.\n-            return;\n-        }\n-\n-        for ( HandlerAndState handlerAndState : handlerState.states )\n-        {\n-            handlerAndState.handler.afterRollback( handlerState.txData, handlerAndState.state );\n-        }\n+      return false;\n     }\n \n-    public static class HandlerAndState\n+    @Override\n+    public String username()\n     {\n-        private final TransactionEventHandler handler;\n-        private Object state;\n-\n-        public HandlerAndState( TransactionEventHandler<?> handler )\n-        {\n-            this.handler = handler;\n-        }\n-\n-        void setState( Object state )\n-        {\n-            this.state = state;\n-        }\n+      return \"\";\n     }\n \n-    public static class TransactionHandlerState implements TransactionHook.Outcome\n+    @Override\n+    public Map<String, Object> metaData()\n     {\n-        private final TransactionData txData;\n-        private final List<HandlerAndState> states = new LinkedList<>();\n-        private Throwable error;\n-\n-        public TransactionHandlerState( TransactionData txData )\n-        {\n-            this.txData = txData;\n-        }\n-\n-        public void failed( Throwable error )\n-        {\n-            this.error = error;\n-        }\n-\n-        @Override\n-        public boolean isSuccessful()\n-        {\n-            return error == null;\n-        }\n-\n-        @Override\n-        public Throwable failure()\n-        {\n-            return error;\n-        }\n-\n-        public HandlerAndState add( TransactionEventHandler<?> handler )\n-        {\n-            HandlerAndState result = new HandlerAndState( handler );\n-            states.add( result );\n-            return result;\n-        }\n+      return Collections.emptyMap();\n     }\n \n-    private static final TransactionData EMPTY_DATA = new TransactionData()\n+    @Override\n+    public Iterable<PropertyEntry<Relationship>> assignedRelationshipProperties()\n     {\n+      return Iterables.empty();\n+    }\n \n-        @Override\n-        public Iterable<Node> createdNodes()\n-        {\n-            return Iterables.empty();\n-        }\n-\n-        @Override\n-        public Iterable<Node> deletedNodes()\n-        {\n-            return Iterables.empty();\n-        }\n-\n-        @Override\n-        public boolean isDeleted( Node node )\n-        {\n-            return false;\n-        }\n-\n-        @Override\n-        public Iterable<PropertyEntry<Node>> assignedNodeProperties()\n-        {\n-            return Iterables.empty();\n-        }\n-\n-        @Override\n-        public Iterable<PropertyEntry<Node>> removedNodeProperties()\n-        {\n-            return Iterables.empty();\n-        }\n-\n-        @Override\n-        public Iterable<LabelEntry> assignedLabels()\n-        {\n-            return Iterables.empty();\n-        }\n-\n-        @Override\n-        public Iterable<LabelEntry> removedLabels()\n-        {\n-            return Iterables.empty();\n-        }\n-\n-        @Override\n-        public Iterable<Relationship> createdRelationships()\n-        {\n-            return Iterables.empty();\n-        }\n-\n-        @Override\n-        public Iterable<Relationship> deletedRelationships()\n-        {\n-            return Iterables.empty();\n-        }\n-\n-        @Override\n-        public boolean isDeleted( Relationship relationship )\n-        {\n-            return false;\n-        }\n-\n-        @Override\n-        public String username()\n-        {\n-            return \"\";\n-        }\n-\n-        @Override\n-        public Map<String,Object> metaData()\n-        {\n-            return Collections.emptyMap();\n-        }\n-\n-        @Override\n-        public Iterable<PropertyEntry<Relationship>> assignedRelationshipProperties()\n-        {\n-            return Iterables.empty();\n-        }\n-\n-        @Override\n-        public Iterable<PropertyEntry<Relationship>> removedRelationshipProperties()\n-        {\n-            return Iterables.empty();\n-        }\n-    };\n+    @Override\n+    public Iterable<PropertyEntry<Relationship>> removedRelationshipProperties()\n+    {\n+      return Iterables.empty();\n+    }\n+  };\n }\n",
            "diff_size": 386
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4558/TransactionEventHandlers.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4558/TransactionEventHandlers.java\nindex 8b7a562b33f..8c5d0af5c6b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4558/TransactionEventHandlers.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4558/TransactionEventHandlers.java\n@@ -46,8 +46,7 @@ import org.neo4j.storageengine.api.txstate.ReadableTransactionState;\n /**\n  * Handle the collection of transaction event handlers, and fire events as needed.\n  */\n-public class TransactionEventHandlers\n-        implements Lifecycle, TransactionHook<TransactionEventHandlers.TransactionHandlerState>\n+public class TransactionEventHandlers implements Lifecycle, TransactionHook<TransactionEventHandlers.TransactionHandlerState>\n {\n     private final CopyOnWriteArraySet<TransactionEventHandler> transactionEventHandlers = new CopyOnWriteArraySet<>();\n \n@@ -78,15 +77,13 @@ public class TransactionEventHandlers\n     {\n     }\n \n-    public <T> TransactionEventHandler<T> registerTransactionEventHandler(\n-            TransactionEventHandler<T> handler )\n+    public <T> TransactionEventHandler<T> registerTransactionEventHandler( TransactionEventHandler<T> handler )\n     {\n         this.transactionEventHandlers.add( handler );\n         return handler;\n     }\n \n-    public <T> TransactionEventHandler<T> unregisterTransactionEventHandler(\n-            TransactionEventHandler<T> handler )\n+    public <T> TransactionEventHandler<T> unregisterTransactionEventHandler( TransactionEventHandler<T> handler )\n     {\n         return unregisterHandler( this.transactionEventHandlers, handler );\n     }\n@@ -97,7 +94,8 @@ public class TransactionEventHandlers\n         {\n             throw new IllegalStateException( handler + \" isn't registered\" );\n         }\n-        return handler;\n+\n+return handler;\n     }\n \n     @Override\n@@ -112,10 +110,8 @@ public class TransactionEventHandlers\n             return null;\n         }\n \n-        TransactionData txData = state == null ? EMPTY_DATA :\n-                new TxStateTransactionDataSnapshot( state, proxySpi, storeReadLayer, statement, transaction );\n-\n-        TransactionHandlerState handlerStates = new TransactionHandlerState( txData );\n+        TransactionData txData = state == null ? EMPTY_DATA : new TxStateTransactionDataSnapshot( state, proxySpi, storeReadLayer, statement, transaction );\n+TransactionHandlerState handlerStates = new TransactionHandlerState( txData );\n         while ( handlers.hasNext() )\n         {\n             TransactionEventHandler<?> handler = handlers.next();\n@@ -224,7 +220,7 @@ public class TransactionEventHandlers\n     private static final TransactionData EMPTY_DATA = new TransactionData()\n     {\n \n-        @Override\n+@Override\n         public Iterable<Node> createdNodes()\n         {\n             return Iterables.empty();\n@@ -308,4 +304,4 @@ public class TransactionEventHandlers\n             return Iterables.empty();\n         }\n     };\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 14
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2266",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "37",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "71",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "104",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "87",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2266/AnnotationBasedConfigurationMigrator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2266/AnnotationBasedConfigurationMigrator.java\nindex 5b1e3f1de93..0f3b3b34426 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2266/AnnotationBasedConfigurationMigrator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2266/AnnotationBasedConfigurationMigrator.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.configuration;\n \n import java.lang.reflect.Field;\n@@ -31,66 +32,65 @@ import org.neo4j.logging.Log;\n \n public class AnnotationBasedConfigurationMigrator implements ConfigurationMigrator\n {\n-    private ArrayList<ConfigurationMigrator> migrators = new ArrayList<>();\n+  private ArrayList<ConfigurationMigrator> migrators = new ArrayList<>();\n \n-    AnnotationBasedConfigurationMigrator( @Nonnull Iterable<LoadableConfig> settingsClasses )\n+  AnnotationBasedConfigurationMigrator(@Nonnull Iterable<LoadableConfig> settingsClasses)\n+  {\n+    for (LoadableConfig loadableConfig : settingsClasses)\n     {\n-        for ( LoadableConfig loadableConfig : settingsClasses )\n-        {\n-            for ( ConfigurationMigrator field : getMigratorsFromClass( loadableConfig.getClass() ) )\n-            {\n-                migrators.add( field );\n-            }\n-        }\n+      for (ConfigurationMigrator field : getMigratorsFromClass(loadableConfig.getClass()))\n+      {\n+        migrators.add(field);\n+      }\n     }\n+  }\n \n-    @Override\n-    @Nonnull\n-    public Map<String,String> apply( @Nonnull Map<String,String> rawConfiguration, @Nonnull Log log )\n+  @Override\n+  @Nonnull\n+  public Map<String, String> apply(@Nonnull Map<String, String> rawConfiguration, @Nonnull Log log)\n+  {\n+    for (ConfigurationMigrator migrator : migrators)\n     {\n-        for ( ConfigurationMigrator migrator : migrators )\n-        {\n-            rawConfiguration = migrator.apply( rawConfiguration, log );\n-        }\n-        return rawConfiguration;\n+      rawConfiguration = migrator.apply(rawConfiguration, log);\n     }\n+    return rawConfiguration;\n+  }\n \n-    /**\n-     * Find all {@link ConfigurationMigrator} annotated with {@link Migrator} from a given class.\n-     *\n-     * @param clazz The class to scan for migrators.\n-     * @throws AssertionError if a field annotated as a {@link Migrator} is not static or does not implement\n-     * {@link ConfigurationMigrator}.\n-     */\n-    private static Iterable<ConfigurationMigrator> getMigratorsFromClass( Class<?> clazz )\n+  /**\n+   * Find all {@link ConfigurationMigrator} annotated with {@link Migrator} from a given class.\n+   *\n+   * @param clazz The class to scan for migrators.\n+   * @throws AssertionError if a field annotated as a {@link Migrator} is not static or does not implement\n+   *                        {@link ConfigurationMigrator}.\n+   */\n+  private static Iterable<ConfigurationMigrator> getMigratorsFromClass(Class<?> clazz)\n+  {\n+    List<ConfigurationMigrator> found = new ArrayList<>();\n+    for (Field field : clazz.getDeclaredFields())\n     {\n-        List<ConfigurationMigrator> found = new ArrayList<>();\n-        for ( Field field : clazz.getDeclaredFields() )\n+      if (field.isAnnotationPresent(Migrator.class))\n+      {\n+        if (!ConfigurationMigrator.class.isAssignableFrom(field.getType()))\n         {\n-            if ( field.isAnnotationPresent( Migrator.class ) )\n-            {\n-                if ( !ConfigurationMigrator.class.isAssignableFrom( field.getType() ) )\n-                {\n-                    throw new AssertionError( \"Field annotated as Migrator has to implement ConfigurationMigrator\" );\n-                }\n-\n-                if ( !Modifier.isStatic( field.getModifiers() ) )\n-                {\n-                    throw new AssertionError( \"Field annotated as Migrator has to be static\" );\n-                }\n+          throw new AssertionError(\"Field annotated as Migrator has to implement ConfigurationMigrator\");\n+        }\n \n-                try\n-                {\n-                    field.setAccessible( true );\n-                    found.add( (ConfigurationMigrator) field.get( null ) );\n-                }\n-                catch ( IllegalAccessException ex )\n-                {\n-                    throw new AssertionError( \"Field annotated as Migrator could not be accessed\", ex );\n-                }\n-            }\n+        if (!Modifier.isStatic(field.getModifiers()))\n+        {\n+          throw new AssertionError(\"Field annotated as Migrator has to be static\");\n         }\n \n-        return found;\n+        try\n+        {\n+          field.setAccessible(true);\n+          found.add((ConfigurationMigrator) field.get(null));\n+        } catch (IllegalAccessException ex)\n+        {\n+          throw new AssertionError(\"Field annotated as Migrator could not be accessed\", ex);\n+        }\n+      }\n     }\n+\n+    return found;\n+  }\n }\n",
            "diff_size": 72
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2266/AnnotationBasedConfigurationMigrator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2266/AnnotationBasedConfigurationMigrator.java\nindex 5b1e3f1de93..5db1646d141 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2266/AnnotationBasedConfigurationMigrator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2266/AnnotationBasedConfigurationMigrator.java\n@@ -52,7 +52,8 @@ public class AnnotationBasedConfigurationMigrator implements ConfigurationMigrat\n         {\n             rawConfiguration = migrator.apply( rawConfiguration, log );\n         }\n-        return rawConfiguration;\n+\n+return rawConfiguration;\n     }\n \n     /**\n@@ -93,4 +94,4 @@ public class AnnotationBasedConfigurationMigrator implements ConfigurationMigrat\n \n         return found;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
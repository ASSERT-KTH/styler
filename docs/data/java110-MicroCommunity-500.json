{
    "project_name": "java110-MicroCommunity",
    "error_id": "500",
    "information": {
        "errors": [
            {
                "line": "151",
                "severity": "error",
                "message": "Line is longer than 150 characters (found 173).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "        }\n\n        List<BillOweFeeDto> billOweFeeDtos = BeanConvertUtil.covertBeanList(feeServiceDaoImpl.queryBillOweFees(BeanConvertUtil.beanCovertMap(billDto)), BillOweFeeDto.class);\n\n        return billOweFeeDtos;\n",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "150",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 169).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/500/FeeInnerServiceSMOImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/styler/500/FeeInnerServiceSMOImpl.java\nindex 99c03db93a5..9981b68ff41 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/500/FeeInnerServiceSMOImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/styler/500/FeeInnerServiceSMOImpl.java\n@@ -147,8 +147,7 @@ public class FeeInnerServiceSMOImpl extends BaseServiceSMO implements IFeeInnerS\n         if (page != PageDto.DEFAULT_PAGE) {\n             billDto.setPage((page - 1) * billDto.getRow());\n         }\n-\n-        List<BillOweFeeDto> billOweFeeDtos = BeanConvertUtil.covertBeanList(feeServiceDaoImpl.queryBillOweFees(BeanConvertUtil.beanCovertMap(billDto)), BillOweFeeDto.class);\n+    List<BillOweFeeDto> billOweFeeDtos = BeanConvertUtil.covertBeanList(feeServiceDaoImpl.queryBillOweFees(BeanConvertUtil.beanCovertMap(billDto)), BillOweFeeDto.class);\n \n         return billOweFeeDtos;\n \n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/500/FeeInnerServiceSMOImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/intellij/500/FeeInnerServiceSMOImpl.java\nindex 99c03db93a5..2c0e7a83659 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/500/FeeInnerServiceSMOImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/intellij/500/FeeInnerServiceSMOImpl.java\n@@ -148,7 +148,8 @@ public class FeeInnerServiceSMOImpl extends BaseServiceSMO implements IFeeInnerS\n             billDto.setPage((page - 1) * billDto.getRow());\n         }\n \n-        List<BillOweFeeDto> billOweFeeDtos = BeanConvertUtil.covertBeanList(feeServiceDaoImpl.queryBillOweFees(BeanConvertUtil.beanCovertMap(billDto)), BillOweFeeDto.class);\n+        List<BillOweFeeDto> billOweFeeDtos =\n+            BeanConvertUtil.covertBeanList(feeServiceDaoImpl.queryBillOweFees(BeanConvertUtil.beanCovertMap(billDto)), BillOweFeeDto.class);\n \n         return billOweFeeDtos;\n \n",
            "diff_size": 2
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "151",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 173).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/500/FeeInnerServiceSMOImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/naturalize/500/FeeInnerServiceSMOImpl.java\nindex 99c03db93a5..1de6f4830a7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/500/FeeInnerServiceSMOImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/naturalize/500/FeeInnerServiceSMOImpl.java\n@@ -192,4 +192,4 @@ public class FeeInnerServiceSMOImpl extends BaseServiceSMO implements IFeeInnerS\n     public void setUserInnerServiceSMOImpl(IUserInnerServiceSMO userInnerServiceSMOImpl) {\n         this.userInnerServiceSMOImpl = userInnerServiceSMOImpl;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "153",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 173).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/500/FeeInnerServiceSMOImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/codebuff/500/FeeInnerServiceSMOImpl.java\nindex 99c03db93a5..f7d133cbad8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/500/FeeInnerServiceSMOImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/codebuff/500/FeeInnerServiceSMOImpl.java\n@@ -1,6 +1,5 @@\n package com.java110.fee.smo.impl;\n \n-\n import com.java110.dto.fee.BillDto;\n import com.java110.dto.fee.BillOweFeeDto;\n import com.java110.fee.dao.IFeeServiceDao;\n@@ -14,7 +13,6 @@ import com.java110.dto.user.UserDto;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.web.bind.annotation.RequestBody;\n import org.springframework.web.bind.annotation.RestController;\n-\n import java.util.ArrayList;\n import java.util.List;\n \n@@ -26,6 +24,8 @@ import java.util.List;\n  * @Version 1.0\n  * add by wuxw 2019/4/24\n  **/\n+\n+\n @RestController\n public class FeeInnerServiceSMOImpl extends BaseServiceSMO implements IFeeInnerServiceSMO {\n \n@@ -40,14 +40,14 @@ public class FeeInnerServiceSMOImpl extends BaseServiceSMO implements IFeeInnerS\n \n         //\u6821\u9a8c\u662f\u5426\u4f20\u4e86 \u5206\u9875\u4fe1\u606f\n \n-        int page = feeDto.getPage();\n \n+\n+        int page = feeDto.getPage();\n         if (page != PageDto.DEFAULT_PAGE) {\n             feeDto.setPage((page - 1) * feeDto.getRow());\n         }\n \n         List<FeeDto> fees = BeanConvertUtil.covertBeanList(feeServiceDaoImpl.getFeeInfo(BeanConvertUtil.beanCovertMap(feeDto)), FeeDto.class);\n-\n         if (fees == null || fees.size() == 0) {\n             return fees;\n         }\n@@ -55,7 +55,6 @@ public class FeeInnerServiceSMOImpl extends BaseServiceSMO implements IFeeInnerS\n         String[] userIds = getUserIds(fees);\n         //\u6839\u636e userId \u67e5\u8be2\u7528\u6237\u4fe1\u606f\n         List<UserDto> users = userInnerServiceSMOImpl.getUserInfo(userIds);\n-\n         for (FeeDto fee : fees) {\n             refreshFee(fee, users);\n         }\n@@ -68,6 +67,8 @@ public class FeeInnerServiceSMOImpl extends BaseServiceSMO implements IFeeInnerS\n      * @param fee   \u5c0f\u533a\u8d39\u7528\u4fe1\u606f\n      * @param users \u7528\u6237\u5217\u8868\n      */\n+\n+\n     private void refreshFee(FeeDto fee, List<UserDto> users) {\n         for (UserDto user : users) {\n             if (fee.getUserId().equals(user.getUserId())) {\n@@ -82,12 +83,13 @@ public class FeeInnerServiceSMOImpl extends BaseServiceSMO implements IFeeInnerS\n      * @param fees \u5c0f\u533a\u697c\u4fe1\u606f\n      * @return \u6279\u91cfuserIds \u4fe1\u606f\n      */\n+\n+\n     private String[] getUserIds(List<FeeDto> fees) {\n         List<String> userIds = new ArrayList<String>();\n         for (FeeDto fee : fees) {\n             userIds.add(fee.getUserId());\n         }\n-\n         return userIds.toArray(new String[userIds.size()]);\n     }\n \n@@ -96,7 +98,6 @@ public class FeeInnerServiceSMOImpl extends BaseServiceSMO implements IFeeInnerS\n         return feeServiceDaoImpl.queryFeesCount(BeanConvertUtil.beanCovertMap(feeDto));\n     }\n \n-\n     @Override\n     public int queryBillCount(@RequestBody BillDto billDto) {\n         return feeServiceDaoImpl.queryBillCount(BeanConvertUtil.beanCovertMap(billDto));\n@@ -108,24 +109,23 @@ public class FeeInnerServiceSMOImpl extends BaseServiceSMO implements IFeeInnerS\n      * @param billDto\n      * @return\n      */\n+\n     @Override\n     public List<BillDto> queryBills(@RequestBody BillDto billDto) {\n \n         //\u6821\u9a8c\u662f\u5426\u4f20\u4e86 \u5206\u9875\u4fe1\u606f\n \n-        int page = billDto.getPage();\n \n+\n+        int page = billDto.getPage();\n         if (page != PageDto.DEFAULT_PAGE) {\n             billDto.setPage((page - 1) * billDto.getRow());\n         }\n \n         List<BillDto> billDtos = BeanConvertUtil.covertBeanList(feeServiceDaoImpl.queryBills(BeanConvertUtil.beanCovertMap(billDto)), BillDto.class);\n-\n         return billDtos;\n-\n     }\n \n-\n     @Override\n     public int queryBillOweFeeCount(@RequestBody BillOweFeeDto billDto) {\n         return feeServiceDaoImpl.queryBillOweFeeCount(BeanConvertUtil.beanCovertMap(billDto));\n@@ -137,21 +137,21 @@ public class FeeInnerServiceSMOImpl extends BaseServiceSMO implements IFeeInnerS\n      * @param billDto\n      * @return\n      */\n+\n     @Override\n     public List<BillOweFeeDto> queryBillOweFees(@RequestBody BillOweFeeDto billDto) {\n \n         //\u6821\u9a8c\u662f\u5426\u4f20\u4e86 \u5206\u9875\u4fe1\u606f\n \n-        int page = billDto.getPage();\n \n+\n+        int page = billDto.getPage();\n         if (page != PageDto.DEFAULT_PAGE) {\n             billDto.setPage((page - 1) * billDto.getRow());\n         }\n \n         List<BillOweFeeDto> billOweFeeDtos = BeanConvertUtil.covertBeanList(feeServiceDaoImpl.queryBillOweFees(BeanConvertUtil.beanCovertMap(billDto)), BillOweFeeDto.class);\n-\n         return billOweFeeDtos;\n-\n     }\n \n     /**\n@@ -160,6 +160,7 @@ public class FeeInnerServiceSMOImpl extends BaseServiceSMO implements IFeeInnerS\n      * @param billDto\n      * @return\n      */\n+\n     @Override\n     public int insertBillOweFees(@RequestBody BillOweFeeDto billDto) {\n         return feeServiceDaoImpl.insertBillOweFees(BeanConvertUtil.beanCovertMap(billDto));\n@@ -171,12 +172,12 @@ public class FeeInnerServiceSMOImpl extends BaseServiceSMO implements IFeeInnerS\n      * @param billDto\n      * @return\n      */\n+\n     @Override\n     public int insertBill(@RequestBody BillDto billDto) {\n         return feeServiceDaoImpl.insertBill(BeanConvertUtil.beanCovertMap(billDto));\n     }\n \n-\n     public IFeeServiceDao getFeeServiceDaoImpl() {\n         return feeServiceDaoImpl;\n     }\n@@ -192,4 +193,4 @@ public class FeeInnerServiceSMOImpl extends BaseServiceSMO implements IFeeInnerS\n     public void setUserInnerServiceSMOImpl(IUserInnerServiceSMO userInnerServiceSMOImpl) {\n         this.userInnerServiceSMOImpl = userInnerServiceSMOImpl;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 32
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "149",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 174).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "149",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "149",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/500/FeeInnerServiceSMOImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/styler_random/500/FeeInnerServiceSMOImpl.java\nindex 99c03db93a5..e64a3a5a321 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/500/FeeInnerServiceSMOImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/styler_random/500/FeeInnerServiceSMOImpl.java\n@@ -146,9 +146,7 @@ public class FeeInnerServiceSMOImpl extends BaseServiceSMO implements IFeeInnerS\n \n         if (page != PageDto.DEFAULT_PAGE) {\n             billDto.setPage((page - 1) * billDto.getRow());\n-        }\n-\n-        List<BillOweFeeDto> billOweFeeDtos = BeanConvertUtil.covertBeanList(feeServiceDaoImpl.queryBillOweFees(BeanConvertUtil.beanCovertMap(billDto)), BillOweFeeDto.class);\n+        }List<BillOweFeeDto> billOweFeeDtos = BeanConvertUtil.covertBeanList(feeServiceDaoImpl.queryBillOweFees(BeanConvertUtil.beanCovertMap(billDto)), BillOweFeeDto.class);\n \n         return billOweFeeDtos;\n \n",
            "diff_size": 3
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "150",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 169).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/500/FeeInnerServiceSMOImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/styler_three_grams/500/FeeInnerServiceSMOImpl.java\nindex 99c03db93a5..9981b68ff41 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/500/FeeInnerServiceSMOImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/styler_three_grams/500/FeeInnerServiceSMOImpl.java\n@@ -147,8 +147,7 @@ public class FeeInnerServiceSMOImpl extends BaseServiceSMO implements IFeeInnerS\n         if (page != PageDto.DEFAULT_PAGE) {\n             billDto.setPage((page - 1) * billDto.getRow());\n         }\n-\n-        List<BillOweFeeDto> billOweFeeDtos = BeanConvertUtil.covertBeanList(feeServiceDaoImpl.queryBillOweFees(BeanConvertUtil.beanCovertMap(billDto)), BillOweFeeDto.class);\n+    List<BillOweFeeDto> billOweFeeDtos = BeanConvertUtil.covertBeanList(feeServiceDaoImpl.queryBillOweFees(BeanConvertUtil.beanCovertMap(billDto)), BillOweFeeDto.class);\n \n         return billOweFeeDtos;\n \n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
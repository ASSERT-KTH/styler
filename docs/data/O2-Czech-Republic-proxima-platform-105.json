{
    "project_name": "O2-Czech-Republic-proxima-platform",
    "error_id": "105",
    "information": {
        "errors": [
            {
                "line": "121",
                "severity": "error",
                "message": "Line is longer than 90 characters (found 95).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "   *\n   * @param error error caught during processing\n   * @return {@code true} to restart processing from beginning {@code false} to stop processing\n   */\n  default boolean onError(Throwable error) {\n    return false;",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "121",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 95).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "124",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 95).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/105/BatchLogObserver.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/intellij/105/BatchLogObserver.java\nindex 2cfe5f480de..2a24a499a84 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/105/BatchLogObserver.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/intellij/105/BatchLogObserver.java\n@@ -1,18 +1,19 @@\n /**\n  * Copyright 2017-2021 O2 Czech Republic, a.s.\n- *\n+ * <p>\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *\n- *    http://www.apache.org/licenses/LICENSE-2.0\n- *\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package cz.o2.proxima.direct.batch;\n \n import cz.o2.proxima.annotations.Stable;\n@@ -109,10 +110,12 @@ public interface BatchLogObserver {\n   }\n \n   /** Signalled when the reading is finished. */\n-  default void onCompleted() {}\n+  default void onCompleted() {\n+  }\n \n   /** Signalled when the reading is cancelled. */\n-  default void onCancelled() {}\n+  default void onCancelled() {\n+  }\n \n   /**\n    * Signaled when reading error occurs.\n",
            "diff_size": 9
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "121",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 95).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/105/BatchLogObserver.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/naturalize/105/BatchLogObserver.java\nindex 2cfe5f480de..6782d0757e1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/105/BatchLogObserver.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/naturalize/105/BatchLogObserver.java\n@@ -123,4 +123,4 @@ public interface BatchLogObserver {\n   default boolean onError(Throwable error) {\n     return false;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "145",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 95).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/105/BatchLogObserver.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/codebuff/105/BatchLogObserver.java\nindex 2cfe5f480de..789cba5abc1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/105/BatchLogObserver.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/codebuff/105/BatchLogObserver.java\n@@ -26,16 +26,21 @@ import lombok.Value;\n  *\n  * <p>Implementations should override either of `onNext` methods.\n  */\n+\n+\n @Stable\n public interface BatchLogObserver {\n \n+\n   @Value\n   class SimpleOffset implements BatchLogObserver.Offset {\n+\n     Partition partition;\n     long elementIndex;\n     boolean last;\n   }\n \n+\n   interface Offset {\n \n     /**\n@@ -43,6 +48,7 @@ public interface BatchLogObserver {\n      *\n      * @return Partition.\n      */\n+\n     Partition getPartition();\n \n     /**\n@@ -50,6 +56,8 @@ public interface BatchLogObserver {\n      *\n      * @return Index of the element.\n      */\n+\n+\n     long getElementIndex();\n \n     /**\n@@ -57,10 +65,13 @@ public interface BatchLogObserver {\n      *\n      * @return True if there are no more elements in the partition.\n      */\n+\n+\n     boolean isLast();\n   }\n \n   /** Context passed to {@link #onNext}. */\n+\n   @Stable\n   interface OnNextContext extends WatermarkSupplier {\n \n@@ -69,6 +80,7 @@ public interface BatchLogObserver {\n      *\n      * @return partition of currently processed record\n      */\n+\n     Partition getPartition();\n \n     /**\n@@ -76,6 +88,8 @@ public interface BatchLogObserver {\n      *\n      * @return Offset.\n      */\n+\n+\n     Offset getOffset();\n \n     /**\n@@ -83,6 +97,8 @@ public interface BatchLogObserver {\n      *\n      * @return watermark in milliseconds\n      */\n+\n+\n     @Override\n     long getWatermark();\n   }\n@@ -93,6 +109,8 @@ public interface BatchLogObserver {\n    * @param element the retrieved data element\n    * @return {@code true} to continue processing, {@code false} otherwise\n    */\n+\n+\n   default boolean onNext(StreamElement element) {\n     throw new UnsupportedOperationException(\"Please override either of `onNext` methods\");\n   }\n@@ -104,14 +122,20 @@ public interface BatchLogObserver {\n    * @param context context of the data element\n    * @return {@code true} to continue processing, {@code false} otherwise\n    */\n+\n+\n   default boolean onNext(StreamElement element, OnNextContext context) {\n     return onNext(element);\n   }\n \n   /** Signalled when the reading is finished. */\n+\n+\n   default void onCompleted() {}\n \n   /** Signalled when the reading is cancelled. */\n+\n+\n   default void onCancelled() {}\n \n   /**\n@@ -120,7 +144,9 @@ public interface BatchLogObserver {\n    * @param error error caught during processing\n    * @return {@code true} to restart processing from beginning {@code false} to stop processing\n    */\n+\n+\n   default boolean onError(Throwable error) {\n     return false;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 27
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "121",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 95).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "121",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 95).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
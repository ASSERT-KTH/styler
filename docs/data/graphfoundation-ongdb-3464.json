{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3464",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "37",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3464/BasicContext.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3464/BasicContext.java\nindex 1e3ef7d2423..8e491086551 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3464/BasicContext.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3464/BasicContext.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.api.proc;\n \n import java.util.HashMap;\n@@ -30,33 +31,33 @@ import org.neo4j.kernel.api.exceptions.Status;\n  */\n public class BasicContext implements Context\n {\n-    private final Map<String, Object> values = new HashMap<>();\n+  private final Map<String, Object> values = new HashMap<>();\n \n-    @Override\n-    public <T> T get( Key<T> key ) throws ProcedureException\n+  @Override\n+  public <T> T get(Key<T> key) throws ProcedureException\n+  {\n+    Object o = values.get(key.name());\n+    if (o == null)\n     {\n-        Object o = values.get( key.name() );\n-        if ( o == null )\n-        {\n-            throw new ProcedureException( Status.Procedure.ProcedureCallFailed,\n-                    \"There is no `%s` in the current procedure call context.\", key.name() );\n-        }\n-        return (T) o;\n+      throw new ProcedureException(Status.Procedure.ProcedureCallFailed,\n+          \"There is no `%s` in the current procedure call context.\", key.name());\n     }\n+    return (T) o;\n+  }\n \n-    @Override\n-    public <T> T getOrElse( Key<T> key, T orElse )\n+  @Override\n+  public <T> T getOrElse(Key<T> key, T orElse)\n+  {\n+    Object o = values.get(key.name());\n+    if (o == null)\n     {\n-        Object o = values.get( key.name() );\n-        if ( o == null )\n-        {\n-            return orElse;\n-        }\n-        return (T) o;\n+      return orElse;\n     }\n+    return (T) o;\n+  }\n \n-    public <T> void put( Key<T> key, T value )\n-    {\n-        values.put( key.name(), value );\n-    }\n+  public <T> void put(Key<T> key, T value)\n+  {\n+    values.put(key.name(), value);\n+  }\n }\n",
            "diff_size": 33
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3464/BasicContext.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3464/BasicContext.java\nindex 1e3ef7d2423..5a462f58b8a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3464/BasicContext.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3464/BasicContext.java\n@@ -30,7 +30,7 @@ import org.neo4j.kernel.api.exceptions.Status;\n  */\n public class BasicContext implements Context\n {\n-    private final Map<String, Object> values = new HashMap<>();\n+    private final Map<String,Object> values = new HashMap<>();\n \n     @Override\n     public <T> T get( Key<T> key ) throws ProcedureException\n@@ -38,8 +38,7 @@ public class BasicContext implements Context\n         Object o = values.get( key.name() );\n         if ( o == null )\n         {\n-            throw new ProcedureException( Status.Procedure.ProcedureCallFailed,\n-                    \"There is no `%s` in the current procedure call context.\", key.name() );\n+            throw new ProcedureException( Status.Procedure.ProcedureCallFailed, \"There is no `%s` in the current procedure call context.\", key.name() );\n         }\n         return (T) o;\n     }\n@@ -59,4 +58,4 @@ public class BasicContext implements Context\n     {\n         values.put( key.name(), value );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
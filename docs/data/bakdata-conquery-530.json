{
    "project_name": "bakdata-conquery",
    "error_id": "530",
    "information": {
        "errors": [
            {
                "line": "55",
                "column": "13",
                "severity": "warning",
                "message": "'}' at column 4 should be alone on a line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
            }
        ]
    },
    "source_code": "\t\t\ttry {\n\t\t\t\treturn Charset.forName(queryCharset);\n\t\t\t}catch (Exception e) {\n\t\t\t\tlog.warn(\"Unable to map '{}' to a charset. Defaulting to UTF-8\", queryCharset);\n\t\t\t\treturn StandardCharsets.UTF_8;\n\t\t\t}",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "55",
                    "column": "13",
                    "severity": "warning",
                    "message": "'}' at column 4 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "24",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "25",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "26",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "27",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "28",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "29",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "30",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "31",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "34",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "35",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "36",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "37",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "38",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "39",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "40",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "41",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "42",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "43",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "44",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "45",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "47",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "48",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "49",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "50",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "51",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "52",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "54",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "55",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "55",
                    "column": "13",
                    "severity": "warning",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "56",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "57",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "58",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "59",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "60",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "61",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "62",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "63",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "64",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/530/ResultUtil.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/intellij/530/ResultUtil.java\nindex 777921e140a..14d8991f770 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/530/ResultUtil.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/intellij/530/ResultUtil.java\n@@ -20,46 +20,46 @@ import java.nio.charset.StandardCharsets;\n @Slf4j\n public class ResultUtil {\n \n-\t\n-\tpublic static ExternalEntityId createId(Namespace namespace, EntityResult cer, IdMappingConfig idMappingConfig, IdMappingState mappingState) {\n-\t\tEncodedDictionary dict = namespace.getStorage().getPrimaryDictionary();\n-\t\treturn idMappingConfig\n-\t\t\t.toExternal(\n-\t\t\t\tnew CsvEntityId(dict.getElement(cer.getEntityId())),\n-\t\t\t\tnamespace,\n-\t\t\t\tmappingState);\n-\t}\n \n+    public static ExternalEntityId createId(Namespace namespace, EntityResult cer, IdMappingConfig idMappingConfig, IdMappingState mappingState) {\n+        EncodedDictionary dict = namespace.getStorage().getPrimaryDictionary();\n+        return idMappingConfig\n+            .toExternal(\n+                new CsvEntityId(dict.getElement(cer.getEntityId())),\n+                namespace,\n+                mappingState);\n+    }\n \n \n-\tpublic static Response.ResponseBuilder makeResponseWithFileName(String fileExtension, ManagedExecution<?> exec, StreamingOutput out) {\n-\t\tResponse.ResponseBuilder response = Response.ok(out);\n-\t\tString label = exec.getLabelWithoutAutoLabelSuffix();\n-\t\tif(!(Strings.isNullOrEmpty(label) || label.isBlank())) {\n-\t\t\t// Set filename from label if the label was set, otherwise the browser will name the file according to the request path\n-\t\t\tresponse.header(\"Content-Disposition\", String.format(\n-\t\t\t\t\t\"attachment; filename=\\\"%s.%s\\\"\",\n-\t\t\t\t\tFileUtil.SAVE_FILENAME_REPLACEMENT_MATCHER.matcher(label).replaceAll(\"_\"),\n-\t\t\t\t\tfileExtension));\n-\t\t}\n-\t\treturn response;\n-\t}\n-\t/**\n-\t * Tries to determine the charset for the result encoding from different request properties.\n-\t * Defaults to StandardCharsets.UTF_8.\n-\t */\n-\tpublic static Charset determineCharset(String userAgent, String queryCharset) {\n-\t\tif(queryCharset != null) {\n-\t\t\ttry {\n-\t\t\t\treturn Charset.forName(queryCharset);\n-\t\t\t}catch (Exception e) {\n-\t\t\t\tlog.warn(\"Unable to map '{}' to a charset. Defaulting to UTF-8\", queryCharset);\n-\t\t\t\treturn StandardCharsets.UTF_8;\n-\t\t\t}\n-\t\t}\n-\t\tif(userAgent != null) {\n-\t\t\treturn userAgent.toLowerCase().contains(\"windows\") ? StandardCharsets.ISO_8859_1 : StandardCharsets.UTF_8;\n-\t\t}\n-\t\treturn StandardCharsets.UTF_8;\n-\t}\n+    public static Response.ResponseBuilder makeResponseWithFileName(String fileExtension, ManagedExecution<?> exec, StreamingOutput out) {\n+        Response.ResponseBuilder response = Response.ok(out);\n+        String label = exec.getLabelWithoutAutoLabelSuffix();\n+        if (!(Strings.isNullOrEmpty(label) || label.isBlank())) {\n+            // Set filename from label if the label was set, otherwise the browser will name the file according to the request path\n+            response.header(\"Content-Disposition\", String.format(\n+                \"attachment; filename=\\\"%s.%s\\\"\",\n+                FileUtil.SAVE_FILENAME_REPLACEMENT_MATCHER.matcher(label).replaceAll(\"_\"),\n+                fileExtension));\n+        }\n+        return response;\n+    }\n+\n+    /**\n+     * Tries to determine the charset for the result encoding from different request properties.\n+     * Defaults to StandardCharsets.UTF_8.\n+     */\n+    public static Charset determineCharset(String userAgent, String queryCharset) {\n+        if (queryCharset != null) {\n+            try {\n+                return Charset.forName(queryCharset);\n+            } catch (Exception e) {\n+                log.warn(\"Unable to map '{}' to a charset. Defaulting to UTF-8\", queryCharset);\n+                return StandardCharsets.UTF_8;\n+            }\n+        }\n+        if (userAgent != null) {\n+            return userAgent.toLowerCase().contains(\"windows\") ? StandardCharsets.ISO_8859_1 : StandardCharsets.UTF_8;\n+        }\n+        return StandardCharsets.UTF_8;\n+    }\n }\n",
            "diff_size": 48
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "32",
                    "column": "1",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "41",
                    "column": "5",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "45",
                    "column": "1",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 0, expected is 1, indentation should be the same level as line 49.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "54",
                    "column": "1",
                    "severity": "warning",
                    "message": "'catch' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/530/ResultUtil.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/naturalize/530/ResultUtil.java\nindex 777921e140a..da261bbcb31 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/530/ResultUtil.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/naturalize/530/ResultUtil.java\n@@ -20,7 +20,6 @@ import java.nio.charset.StandardCharsets;\n @Slf4j\n public class ResultUtil {\n \n-\t\n \tpublic static ExternalEntityId createId(Namespace namespace, EntityResult cer, IdMappingConfig idMappingConfig, IdMappingState mappingState) {\n \t\tEncodedDictionary dict = namespace.getStorage().getPrimaryDictionary();\n \t\treturn idMappingConfig\n@@ -30,9 +29,7 @@ public class ResultUtil {\n \t\t\t\tmappingState);\n \t}\n \n-\n-\n-\tpublic static Response.ResponseBuilder makeResponseWithFileName(String fileExtension, ManagedExecution<?> exec, StreamingOutput out) {\n+public static Response.ResponseBuilder makeResponseWithFileName(String fileExtension, ManagedExecution<?> exec, StreamingOutput out) {\n \t\tResponse.ResponseBuilder response = Response.ok(out);\n \t\tString label = exec.getLabelWithoutAutoLabelSuffix();\n \t\tif(!(Strings.isNullOrEmpty(label) || label.isBlank())) {\n@@ -41,10 +38,11 @@ public class ResultUtil {\n \t\t\t\t\t\"attachment; filename=\\\"%s.%s\\\"\",\n \t\t\t\t\tFileUtil.SAVE_FILENAME_REPLACEMENT_MATCHER.matcher(label).replaceAll(\"_\"),\n \t\t\t\t\tfileExtension));\n-\t\t}\n+\t}\n \t\treturn response;\n \t}\n-\t/**\n+\n+/**\n \t * Tries to determine the charset for the result encoding from different request properties.\n \t * Defaults to StandardCharsets.UTF_8.\n \t */\n@@ -52,7 +50,8 @@ public class ResultUtil {\n \t\tif(queryCharset != null) {\n \t\t\ttry {\n \t\t\t\treturn Charset.forName(queryCharset);\n-\t\t\t}catch (Exception e) {\n+\t\t\t}\n+catch (Exception e) {\n \t\t\t\tlog.warn(\"Unable to map '{}' to a charset. Defaulting to UTF-8\", queryCharset);\n \t\t\t\treturn StandardCharsets.UTF_8;\n \t\t\t}\n@@ -62,4 +61,4 @@ public class ResultUtil {\n \t\t}\n \t\treturn StandardCharsets.UTF_8;\n \t}\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 10
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "22",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "22",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "23",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "23",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "24",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "24",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "25",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "25",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "27",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "27",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "28",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "28",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "29",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "29",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "30",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "30",
                    "column": "3",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "31",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "32",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "32",
                    "column": "4",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "33",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "33",
                    "column": "3",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "34",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "34",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "35",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "35",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "36",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "37",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "38",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "39",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "41",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "41",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "42",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "42",
                    "column": "3",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "43",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "43",
                    "column": "4",
                    "severity": "warning",
                    "message": "'try' has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "44",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "44",
                    "column": "5",
                    "severity": "warning",
                    "message": "'try' child has incorrect indentation level 4, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "45",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "45",
                    "column": "4",
                    "severity": "warning",
                    "message": "'try rcurly' has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "46",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "46",
                    "column": "4",
                    "severity": "warning",
                    "message": "'catch' has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "47",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "47",
                    "column": "5",
                    "severity": "warning",
                    "message": "'catch' child has incorrect indentation level 4, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "48",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "48",
                    "column": "5",
                    "severity": "warning",
                    "message": "'catch' child has incorrect indentation level 4, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "49",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "49",
                    "column": "4",
                    "severity": "warning",
                    "message": "'catch rcurly' has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "50",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "50",
                    "column": "3",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "51",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "51",
                    "column": "3",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "52",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "52",
                    "column": "4",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "53",
                    "column": "3",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "54",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "54",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "55",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "55",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/530/ResultUtil.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/codebuff/530/ResultUtil.java\nindex 777921e140a..25d81c7b636 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/530/ResultUtil.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/codebuff/530/ResultUtil.java\n@@ -11,7 +11,6 @@ import com.bakdata.conquery.models.worker.Namespace;\n import com.bakdata.conquery.util.io.FileUtil;\n import com.google.common.base.Strings;\n import lombok.extern.slf4j.Slf4j;\n-\n import javax.ws.rs.core.Response;\n import javax.ws.rs.core.StreamingOutput;\n import java.nio.charset.Charset;\n@@ -20,46 +19,38 @@ import java.nio.charset.StandardCharsets;\n @Slf4j\n public class ResultUtil {\n \n-\t\n-\tpublic static ExternalEntityId createId(Namespace namespace, EntityResult cer, IdMappingConfig idMappingConfig, IdMappingState mappingState) {\n-\t\tEncodedDictionary dict = namespace.getStorage().getPrimaryDictionary();\n-\t\treturn idMappingConfig\n-\t\t\t.toExternal(\n-\t\t\t\tnew CsvEntityId(dict.getElement(cer.getEntityId())),\n-\t\t\t\tnamespace,\n-\t\t\t\tmappingState);\n-\t}\n-\n+ public static ExternalEntityId createId(Namespace namespace, EntityResult cer, IdMappingConfig idMappingConfig, IdMappingState mappingState) {\n+  EncodedDictionary dict = namespace.getStorage().getPrimaryDictionary();\n+  return idMappingConfig.toExternal(new CsvEntityId(dict.getElement(cer.getEntityId())), namespace, mappingState);\n+ }\n \n+ public static Response.ResponseBuilder makeResponseWithFileName(String fileExtension, ManagedExecution<?> exec, StreamingOutput out) {\n+  Response.ResponseBuilder response = Response.ok(out);\n+  String label = exec.getLabelWithoutAutoLabelSuffix();\n+  if (!(Strings.isNullOrEmpty(label) || label.isBlank())) {\n+   // Set filename from label if the label was set, otherwise the browser will name the file according to the request path\n+   response.header(\"Content-Disposition\", String.format(\"attachment; filename=\\\"%s.%s\\\"\", FileUtil.SAVE_FILENAME_REPLACEMENT_MATCHER.matcher(label).replaceAll(\"_\"), fileExtension));\n+  }\n+  return response;\n+ }\n+ /**\n+  * Tries to determine the charset for the result encoding from different request properties.\n+  * Defaults to StandardCharsets.UTF_8.\n+  */\n \n-\tpublic static Response.ResponseBuilder makeResponseWithFileName(String fileExtension, ManagedExecution<?> exec, StreamingOutput out) {\n-\t\tResponse.ResponseBuilder response = Response.ok(out);\n-\t\tString label = exec.getLabelWithoutAutoLabelSuffix();\n-\t\tif(!(Strings.isNullOrEmpty(label) || label.isBlank())) {\n-\t\t\t// Set filename from label if the label was set, otherwise the browser will name the file according to the request path\n-\t\t\tresponse.header(\"Content-Disposition\", String.format(\n-\t\t\t\t\t\"attachment; filename=\\\"%s.%s\\\"\",\n-\t\t\t\t\tFileUtil.SAVE_FILENAME_REPLACEMENT_MATCHER.matcher(label).replaceAll(\"_\"),\n-\t\t\t\t\tfileExtension));\n-\t\t}\n-\t\treturn response;\n-\t}\n-\t/**\n-\t * Tries to determine the charset for the result encoding from different request properties.\n-\t * Defaults to StandardCharsets.UTF_8.\n-\t */\n-\tpublic static Charset determineCharset(String userAgent, String queryCharset) {\n-\t\tif(queryCharset != null) {\n-\t\t\ttry {\n-\t\t\t\treturn Charset.forName(queryCharset);\n-\t\t\t}catch (Exception e) {\n-\t\t\t\tlog.warn(\"Unable to map '{}' to a charset. Defaulting to UTF-8\", queryCharset);\n-\t\t\t\treturn StandardCharsets.UTF_8;\n-\t\t\t}\n-\t\t}\n-\t\tif(userAgent != null) {\n-\t\t\treturn userAgent.toLowerCase().contains(\"windows\") ? StandardCharsets.ISO_8859_1 : StandardCharsets.UTF_8;\n-\t\t}\n-\t\treturn StandardCharsets.UTF_8;\n-\t}\n-}\n+ public static Charset determineCharset(String userAgent, String queryCharset) {\n+  if (queryCharset != null) {\n+   try {\n+    return Charset.forName(queryCharset);\n+   }\n+   catch (Exception e) {\n+    log.warn(\"Unable to map '{}' to a charset. Defaulting to UTF-8\", queryCharset);\n+    return StandardCharsets.UTF_8;\n+   }\n+  }\n+  if (userAgent != null) {\n+   return userAgent.toLowerCase().contains(\"windows\") ? StandardCharsets.ISO_8859_1 : StandardCharsets.UTF_8;\n+  }\n+  return StandardCharsets.UTF_8;\n+ }\n+}\n\\ No newline at end of file\n",
            "diff_size": 55
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "55",
                    "column": "13",
                    "severity": "warning",
                    "message": "'}' at column 4 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "55",
                    "column": "13",
                    "severity": "warning",
                    "message": "'}' at column 4 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
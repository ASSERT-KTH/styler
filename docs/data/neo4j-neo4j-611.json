{
    "project_name": "neo4j-neo4j",
    "error_id": "611",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "37",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/611/RecordFormat.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/611/RecordFormat.java\nindex 66f8e30abd0..7366dc7ff9d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/611/RecordFormat.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/611/RecordFormat.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.io.pagecache.stress;\n \n import java.io.IOException;\n@@ -33,7 +34,7 @@ public class RecordFormat\n     private final int checksumFieldOffset;\n     private final int recordSize;\n \n-    public RecordFormat( int numberOfThreads, int cachePageSize )\n+    public RecordFormat(int numberOfThreads, int cachePageSize)\n     {\n         this.numberOfThreads = numberOfThreads;\n         this.cachePageSize = cachePageSize;\n@@ -60,22 +61,22 @@ public class RecordFormat\n     /**\n      * Assume the given cursor is writable and has already been positioned at the record offset.\n      */\n-    public long incrementCounter( PageCursor cursor, int threadId )\n+    public long incrementCounter(PageCursor cursor, int threadId)\n     {\n         int recordOffset = cursor.getOffset();\n         int fieldOffset = recordOffset + (fieldSize * threadId);\n         int checksumOffset = recordOffset + checksumFieldOffset;\n \n-        long newValue = 1 + cursor.getLong( fieldOffset );\n-        cursor.putLong( fieldOffset, newValue );\n-        cursor.putLong( checksumOffset, 1 + cursor.getLong( checksumOffset ) );\n+        long newValue = 1 + cursor.getLong(fieldOffset);\n+        cursor.putLong(fieldOffset, newValue);\n+        cursor.putLong(checksumOffset, 1 + cursor.getLong(checksumOffset));\n         return newValue;\n     }\n \n     /**\n      * Sum up the fields for the given thread for all records on the given page.\n      */\n-    public long sumCountsForThread( PageCursor cursor, int threadId ) throws IOException\n+    public long sumCountsForThread(PageCursor cursor, int threadId) throws IOException\n     {\n         int recordsPerPage = getRecordsPerPage();\n         int fieldOffset = fieldSize * threadId;\n@@ -83,22 +84,22 @@ public class RecordFormat\n         do\n         {\n             sum = 0;\n-            for ( int i = 0; i < recordsPerPage; i++ )\n+            for (int i = 0; i < recordsPerPage; i++)\n             {\n-                sum += cursor.getLong( (i * recordSize) + fieldOffset );\n+                sum += cursor.getLong((i * recordSize) + fieldOffset);\n             }\n         }\n-        while ( cursor.shouldRetry() );\n+        while (cursor.shouldRetry());\n         return sum;\n     }\n \n     /**\n      * Verify the checksums on all the records on the given page\n      */\n-    public void verifyCheckSums( PageCursor cursor ) throws IOException\n+    public void verifyCheckSums(PageCursor cursor) throws IOException\n     {\n         int recordsPerPage = getRecordsPerPage();\n-        for ( int i = 0; i < recordsPerPage; i++ )\n+        for (int i = 0; i < recordsPerPage; i++)\n         {\n             int recordOffset = i * recordSize;\n             long expectedChecksum;\n@@ -106,15 +107,15 @@ public class RecordFormat\n             do\n             {\n                 actualChecksum = 0;\n-                for ( int j = 0; j < numberOfThreads; j++ )\n+                for (int j = 0; j < numberOfThreads; j++)\n                 {\n-                    actualChecksum += cursor.getLong( recordOffset + (j * fieldSize) );\n+                    actualChecksum += cursor.getLong(recordOffset + (j * fieldSize));\n                 }\n-                expectedChecksum = cursor.getLong( recordOffset + checksumFieldOffset );\n+                expectedChecksum = cursor.getLong(recordOffset + checksumFieldOffset);\n             }\n-            while ( cursor.shouldRetry() );\n+            while (cursor.shouldRetry());\n             String msg = \"Checksum for record \" + i + \" on page \" + cursor.getCurrentPageId();\n-            assertThat( actualChecksum ).describedAs( msg ).isEqualTo( expectedChecksum );\n+            assertThat(actualChecksum).describedAs(msg).isEqualTo(expectedChecksum);\n         }\n     }\n }\n",
            "diff_size": 17
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
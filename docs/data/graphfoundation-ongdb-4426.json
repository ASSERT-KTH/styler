{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4426",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4426/AbstractIndexHits.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4426/AbstractIndexHits.java\nindex 57d4a6db315..2e2e67a23b1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4426/AbstractIndexHits.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4426/AbstractIndexHits.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.api.explicitindex;\n \n import org.neo4j.graphdb.ResourceIterator;\n@@ -26,21 +27,21 @@ import org.neo4j.helpers.collection.PrefetchingIterator;\n \n public abstract class AbstractIndexHits<T> extends PrefetchingIterator<T> implements IndexHits<T>\n {\n-    @Override\n-    public ResourceIterator<T> iterator()\n-    {\n-        return this;\n-    }\n+  @Override\n+  public ResourceIterator<T> iterator()\n+  {\n+    return this;\n+  }\n \n-    @Override\n-    public void close()\n-    {   // Nothing to close by default\n-    }\n+  @Override\n+  public void close()\n+  {   // Nothing to close by default\n+  }\n \n-    @Override\n-    public T getSingle()\n-    {\n-        // This instance will be closed by this call\n-        return Iterators.singleOrNull( this );\n-    }\n+  @Override\n+  public T getSingle()\n+  {\n+    // This instance will be closed by this call\n+    return Iterators.singleOrNull(this);\n+  }\n }\n",
            "diff_size": 16
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4426/AbstractIndexHits.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4426/AbstractIndexHits.java\nindex 57d4a6db315..934a1ae160f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4426/AbstractIndexHits.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4426/AbstractIndexHits.java\n@@ -34,7 +34,8 @@ public abstract class AbstractIndexHits<T> extends PrefetchingIterator<T> implem\n \n     @Override\n     public void close()\n-    {   // Nothing to close by default\n+    {\n+    // Nothing to close by default\n     }\n \n     @Override\n@@ -43,4 +44,4 @@ public abstract class AbstractIndexHits<T> extends PrefetchingIterator<T> implem\n         // This instance will be closed by this call\n         return Iterators.singleOrNull( this );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
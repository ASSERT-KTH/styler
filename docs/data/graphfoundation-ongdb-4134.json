{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4134",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "47",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4134/UserRepository.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4134/UserRepository.java\nindex 57e143574bd..d8e5fd049f5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4134/UserRepository.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4134/UserRepository.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.server.security.auth;\n \n import java.io.IOException;\n@@ -32,69 +33,76 @@ import org.neo4j.server.security.auth.exception.ConcurrentModificationException;\n  */\n public interface UserRepository extends Lifecycle\n {\n-    /**\n-     * Clears all cached user data.\n-     */\n-    void clear();\n+  /**\n+   * Clears all cached user data.\n+   */\n+  void clear();\n \n-    /**\n-     * Return the user associated with the given username.\n-     * @param username the username\n-     * @return the associated user, or null if no user exists\n-     */\n-    User getUserByName( String username );\n+  /**\n+   * Return the user associated with the given username.\n+   *\n+   * @param username the username\n+   * @return the associated user, or null if no user exists\n+   */\n+  User getUserByName(String username);\n \n-    /**\n-     * Create a user, given that the users token is unique.\n-     * @param user the new user object\n-     * @throws InvalidArgumentsException if the username is not valid\n-     * @throws IOException if the underlying storage for users fails\n-     */\n-    void create( User user ) throws InvalidArgumentsException, IOException;\n+  /**\n+   * Create a user, given that the users token is unique.\n+   *\n+   * @param user the new user object\n+   * @throws InvalidArgumentsException if the username is not valid\n+   * @throws IOException               if the underlying storage for users fails\n+   */\n+  void create(User user) throws InvalidArgumentsException, IOException;\n \n-    /**\n-     * Replaces the users in the repository with the given users.\n-     * @param users the new users\n-     * @throws InvalidArgumentsException if any username is not valid\n-     * @throws IOException if the underlying storage for users fails\n-     */\n-    void setUsers( ListSnapshot<User> users ) throws InvalidArgumentsException;\n+  /**\n+   * Replaces the users in the repository with the given users.\n+   *\n+   * @param users the new users\n+   * @throws InvalidArgumentsException if any username is not valid\n+   * @throws IOException               if the underlying storage for users fails\n+   */\n+  void setUsers(ListSnapshot<User> users) throws InvalidArgumentsException;\n \n-    /**\n-     * Update a user, given that the users token is unique.\n-     * @param existingUser the existing user object, which must match the current state in this repository\n-     * @param updatedUser the updated user object\n-     * @throws ConcurrentModificationException if the existingUser does not match the current state in the repository\n-     * @throws IOException if the underlying storage for users fails\n-     * @throws InvalidArgumentsException if the existing and updated users have different names\n-     */\n-    void update( User existingUser, User updatedUser )\n-            throws ConcurrentModificationException, IOException;\n+  /**\n+   * Update a user, given that the users token is unique.\n+   *\n+   * @param existingUser the existing user object, which must match the current state in this repository\n+   * @param updatedUser  the updated user object\n+   * @throws ConcurrentModificationException if the existingUser does not match the current state in the repository\n+   * @throws IOException                     if the underlying storage for users fails\n+   * @throws InvalidArgumentsException       if the existing and updated users have different names\n+   */\n+  void update(User existingUser, User updatedUser)\n+      throws ConcurrentModificationException, IOException;\n \n-    /**\n-     * Deletes a user.\n-     * @param user the user to delete\n-     * @throws IOException if the underlying storage for users fails\n-     * @return true if the user was found and deleted\n-     */\n-    boolean delete( User user ) throws IOException;\n+  /**\n+   * Deletes a user.\n+   *\n+   * @param user the user to delete\n+   * @return true if the user was found and deleted\n+   * @throws IOException if the underlying storage for users fails\n+   */\n+  boolean delete(User user) throws IOException;\n \n-    int numberOfUsers();\n+  int numberOfUsers();\n \n-    /**\n-     * Asserts whether the given username is valid or not. A valid username is non-null, non-empty, and contains\n-     * only simple ascii characters.\n-     * @param username the username to be tested.\n-     * @throws InvalidArgumentsException if the username was invalid.\n-     */\n-    void assertValidUsername( String username ) throws InvalidArgumentsException;\n+  /**\n+   * Asserts whether the given username is valid or not. A valid username is non-null, non-empty, and contains\n+   * only simple ascii characters.\n+   *\n+   * @param username the username to be tested.\n+   * @throws InvalidArgumentsException if the username was invalid.\n+   */\n+  void assertValidUsername(String username) throws InvalidArgumentsException;\n \n-    Set<String> getAllUsernames();\n+  Set<String> getAllUsernames();\n \n-    /**\n-     * Returns a snapshot of the current persisted user repository\n-     * @return a snapshot of the current persisted user repository\n-     * @throws IOException\n-     */\n-    ListSnapshot<User> getPersistedSnapshot() throws IOException;\n+  /**\n+   * Returns a snapshot of the current persisted user repository\n+   *\n+   * @return a snapshot of the current persisted user repository\n+   * @throws IOException\n+   */\n+  ListSnapshot<User> getPersistedSnapshot() throws IOException;\n }\n",
            "diff_size": 64
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4134/UserRepository.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4134/UserRepository.java\nindex 57e143574bd..288a05404f6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4134/UserRepository.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4134/UserRepository.java\n@@ -68,10 +68,9 @@ public interface UserRepository extends Lifecycle\n      * @throws IOException if the underlying storage for users fails\n      * @throws InvalidArgumentsException if the existing and updated users have different names\n      */\n-    void update( User existingUser, User updatedUser )\n-            throws ConcurrentModificationException, IOException;\n+    void update( User existingUser, User updatedUser ) throws ConcurrentModificationException, IOException;\n \n-    /**\n+/**\n      * Deletes a user.\n      * @param user the user to delete\n      * @throws IOException if the underlying storage for users fails\n@@ -97,4 +96,4 @@ public interface UserRepository extends Lifecycle\n      * @throws IOException\n      */\n     ListSnapshot<User> getPersistedSnapshot() throws IOException;\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "wso2-attic-commons",
    "error_id": "181",
    "information": {
        "errors": [
            {
                "line": "262",
                "severity": "error",
                "message": "Line is longer than 120 characters (found 129).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "        for (int i = 0; i < digest.length(); i++) {\n            char c = digest.charAt(i);\n            val = new BigInteger(val, base).add(BigInteger.valueOf((long) c)).multiply(BigInteger.valueOf(prime)).toString(base);\n            if (val.length() > maxlen) val = val.substring(0, maxlen);\n        }\n",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/181/GUID.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler/181/GUID.java\nindex c29a8203389..425a134ddb8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/181/GUID.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler/181/GUID.java\n@@ -259,7 +259,8 @@ public final class GUID implements Cloneable, Comparable, java.io.Serializable {\n         int prime = 31;\n         for (int i = 0; i < digest.length(); i++) {\n             char c = digest.charAt(i);\n-            val = new BigInteger(val, base).add(BigInteger.valueOf((long) c)).multiply(BigInteger.valueOf(prime)).toString(base);\n+            val = new BigInteger(val, base).add(BigInteger.valueOf((long) c)).multiply(BigInteger.valueOf(prime)).\n+            toString (base);\n             if (val.length() > maxlen) val = val.substring(0, maxlen);\n         }\n \n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/181/GUID.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/intellij/181/GUID.java\nindex c29a8203389..6543c2c7da6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/181/GUID.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/intellij/181/GUID.java\n@@ -51,218 +51,219 @@ import java.util.Set;\n  * </pre>\n  */\n public final class GUID implements Cloneable, Comparable, java.io.Serializable {\n-    static final long serialVersionUID = -7977671257884186039L;\n+  static final long serialVersionUID = -7977671257884186039L;\n \n-    static String PROP_PORT = \"org.apache.ode.uid.port\";\n+  static String PROP_PORT = \"org.apache.ode.uid.port\";\n \n-    static int port = Integer.getInteger(PROP_PORT, 33666);\n+  static int port = Integer.getInteger(PROP_PORT, 33666);\n \n-    // 32 bits\n-    private static final byte[] ipadd = {127,0,0,1};\n+  // 32 bits\n+  private static final byte[] ipadd = {127, 0, 0, 1};\n \n-    // 64 bits\n-    private static byte[] baseId = getSystemUniqId();\n+  // 64 bits\n+  private static byte[] baseId = getSystemUniqId();\n \n-    // 32 bits\n-    private static short cnt = Short.MIN_VALUE;\n+  // 32 bits\n+  private static short cnt = Short.MIN_VALUE;\n \n-    private static GUID _VM_GUID;\n+  private static GUID _VM_GUID;\n \n-    static {\n-        _VM_GUID = new GUID();\n-    }\n-\n-    private final byte[] id;\n-\n-    private transient String guidstring = null;\n+  static {\n+    _VM_GUID = new GUID();\n+  }\n \n-    /**\n-     * Create a new unique GUID\n-     */\n-    public GUID() {\n-        short c;\n-        byte[] b;\n+  private final byte[] id;\n \n-        synchronized (GUID.class) {\n-            c = ++cnt;\n-            b = baseId;\n+  private transient String guidstring = null;\n \n-            if (cnt == Short.MAX_VALUE) {\n-                cnt = Short.MIN_VALUE;\n-                baseId = getSystemUniqId();\n-            }\n-        }\n+  /**\n+   * Create a new unique GUID\n+   */\n+  public GUID() {\n+    short c;\n+    byte[] b;\n \n-        id = new byte[] { ipadd[0], ipadd[1], ipadd[2], ipadd[3], b[7], b[6],\n-                b[5], b[4], b[3], b[2], b[1], b[0], (byte) ((c >>> 8) & 0xff),\n-                (byte) (c & 0xff) };\n-    }\n+    synchronized (GUID.class) {\n+      c = ++cnt;\n+      b = baseId;\n \n-    /**\n-     * Reconstitute a GUID from it's string representation\n-     *\n-     * @param str\n-     *            DOCUMENTME\n-     *\n-     * @throws MalformedGuidException\n-     *             DOCUMENTME\n-     */\n-    public GUID(String str) throws MalformedGuidException {\n-        if (str == null) {\n-            throw new MalformedGuidException(str);\n-        }\n-\n-        id = new byte[14];\n-        stringToBytes(str);\n+      if (cnt == Short.MAX_VALUE) {\n+        cnt = Short.MIN_VALUE;\n+        baseId = getSystemUniqId();\n+      }\n     }\n \n-    /**\n-     * Get the GUID bytes.\n-     */\n-    public byte[] getGuid() {\n-        return id;\n+    id = new byte[] {ipadd[0], ipadd[1], ipadd[2], ipadd[3], b[7], b[6],\n+      b[5], b[4], b[3], b[2], b[1], b[0], (byte) ((c >>> 8) & 0xff),\n+      (byte) (c & 0xff)};\n+  }\n+\n+  /**\n+   * Reconstitute a GUID from it's string representation\n+   *\n+   * @param str DOCUMENTME\n+   * @throws MalformedGuidException DOCUMENTME\n+   */\n+  public GUID(String str) throws MalformedGuidException {\n+    if (str == null) {\n+      throw new MalformedGuidException(str);\n     }\n \n-    public static GUID getVMGUID() {\n-        return _VM_GUID;\n-    }\n+    id = new byte[14];\n+    stringToBytes(str);\n+  }\n \n-    public int compareTo(Object o) {\n-        if (o == this) {\n+  /**\n+   * Get the GUID bytes.\n+   */\n+  public byte[] getGuid() {\n+    return id;\n+  }\n \n-            return 0;\n-        }\n+  public static GUID getVMGUID() {\n+    return _VM_GUID;\n+  }\n \n-        GUID o1 = (GUID) o;\n+  public int compareTo(Object o) {\n+    if (o == this) {\n \n-        for (short i = 0; i < id.length; ++i) {\n-            if (o1.id[i] < id[i]) {\n+      return 0;\n+    }\n \n-                return -1;\n-            } else if (o1.id[i] > id[i]) {\n+    GUID o1 = (GUID) o;\n \n-                return 1;\n-            }\n-        }\n+    for (short i = 0; i < id.length; ++i) {\n+      if (o1.id[i] < id[i]) {\n \n-        return 0;\n-    }\n+        return -1;\n+      } else if (o1.id[i] > id[i]) {\n \n-    public boolean equals(Object o) {\n-        try {\n-            return compareTo(o) == 0;\n-        } catch (ClassCastException ce) {\n-            return false;\n-        }\n+        return 1;\n+      }\n     }\n \n-    public int hashCode() {\n-        int ret = 0;\n+    return 0;\n+  }\n \n-        for (short i = 0; i < id.length; ++i) {\n-            ret ^= (id[i] << (i % 4));\n+  public boolean equals(Object o) {\n+    try {\n+      return compareTo(o) == 0;\n+    } catch (ClassCastException ce) {\n+      return false;\n     }\n+  }\n+\n+  public int hashCode() {\n+    int ret = 0;\n \n-        return ret;\n+    for (short i = 0; i < id.length; ++i) {\n+      ret ^= (id[i] << (i % 4));\n     }\n \n-    public static void main(String[] argv) throws Exception {\n-        Set<GUID> set = new HashSet<GUID>();\n+    return ret;\n+  }\n \n-        for (int i = 0; i < 100000; ++i) {\n-            GUID g = new GUID();\n+  public static void main(String[] argv) throws Exception {\n+    Set<GUID> set = new HashSet<GUID>();\n \n-            if (set.contains(g)) {\n-                System.out.println(\"CONFLICT>>>\");\n-            }\n+    for (int i = 0; i < 100000; ++i) {\n+      GUID g = new GUID();\n \n-            set.add(g);\n+      if (set.contains(g)) {\n+        System.out.println(\"CONFLICT>>>\");\n+      }\n \n-            GUID ng = new GUID(g.toString());\n+      set.add(g);\n \n-            if (!ng.toString().equals(g.toString()) || !ng.equals(g)) {\n-                System.out.println(\"INEQUALITY>>>\");\n-                System.out.println(ng.toString());\n-                System.out.println(g.toString());\n-            } else {\n-                System.out.println(g.toString());\n-            }\n-        }\n-    }\n+      GUID ng = new GUID(g.toString());\n \n-    /**\n-     * Convert a GUID to it's string representation. This will return a string\n-     * of at most 32 bytes.\n-     *\n-     * @return DOCUMENTME\n-     */\n-    public String toString() {\n-        if (guidstring == null) {\n-            guidstring = mapBytesToChars();\n-        }\n-\n-        return guidstring;\n+      if (!ng.toString().equals(g.toString()) || !ng.equals(g)) {\n+        System.out.println(\"INEQUALITY>>>\");\n+        System.out.println(ng.toString());\n+        System.out.println(g.toString());\n+      } else {\n+        System.out.println(g.toString());\n+      }\n     }\n-\n-    private static byte[] getSystemUniqId() {\n-        ProcessMutex pm = new ProcessMutex(port);\n-\n-        try {\n-            pm.lock();\n-        } catch (InterruptedException ie) {\n-            System.err\n-                    .println(\"ERROR: Could not establish unique starttime using\\n\"\n-                            + \"       TCP port \"\n-                            + port\n-                            + \" for synchronization. \\n\"\n-                            + \"       Perhaps this port is used by anotherprocess? \\n\"\n-                            + \"       Check the '\"\n-                            + PROP_PORT\n-                            + \"' JAVA system property. \\n\");\n-            throw new RuntimeException(\"GUID.getSystemUniqId() FAILED!!!\");\n-        }\n-\n-        long uid = System.currentTimeMillis();\n-        pm.unlock();\n-\n-        return new byte[] { (byte) (uid & 0xff), (byte) ((uid >>> 8) & 0xff),\n-                (byte) ((uid >>> 16) & 0xff), (byte) ((uid >>> 24) & 0xff),\n-                (byte) ((uid >>> 32) & 0xff), (byte) ((uid >>> 40) & 0xff),\n-                (byte) ((uid >>> 48) & 0xff), (byte) ((uid >>> 56) & 0xff) };\n+  }\n+\n+  /**\n+   * Convert a GUID to it's string representation. This will return a string\n+   * of at most 32 bytes.\n+   *\n+   * @return DOCUMENTME\n+   */\n+  public String toString() {\n+    if (guidstring == null) {\n+      guidstring = mapBytesToChars();\n     }\n \n-    private String mapBytesToChars() {\n-        BigInteger bigInt = new BigInteger(id);\n-        return bigInt.toString(34);\n+    return guidstring;\n+  }\n+\n+  private static byte[] getSystemUniqId() {\n+    ProcessMutex pm = new ProcessMutex(port);\n+\n+    try {\n+      pm.lock();\n+    } catch (InterruptedException ie) {\n+      System.err\n+        .println(\"ERROR: Could not establish unique starttime using\\n\"\n+          + \"       TCP port \"\n+          + port\n+          + \" for synchronization. \\n\"\n+          + \"       Perhaps this port is used by anotherprocess? \\n\"\n+          + \"       Check the '\"\n+          + PROP_PORT\n+          + \"' JAVA system property. \\n\");\n+      throw new RuntimeException(\"GUID.getSystemUniqId() FAILED!!!\");\n     }\n \n-    private void stringToBytes(String s) {\n-        BigInteger bigInt = new BigInteger(s, 34);\n-        byte[] bytes = bigInt.toByteArray();\n-        for (int i = 0; i < id.length; ++i)\n-            id[i] = bytes[i];\n+    long uid = System.currentTimeMillis();\n+    pm.unlock();\n+\n+    return new byte[] {(byte) (uid & 0xff), (byte) ((uid >>> 8) & 0xff),\n+      (byte) ((uid >>> 16) & 0xff), (byte) ((uid >>> 24) & 0xff),\n+      (byte) ((uid >>> 32) & 0xff), (byte) ((uid >>> 40) & 0xff),\n+      (byte) ((uid >>> 48) & 0xff), (byte) ((uid >>> 56) & 0xff)};\n+  }\n+\n+  private String mapBytesToChars() {\n+    BigInteger bigInt = new BigInteger(id);\n+    return bigInt.toString(34);\n+  }\n+\n+  private void stringToBytes(String s) {\n+    BigInteger bigInt = new BigInteger(s, 34);\n+    byte[] bytes = bigInt.toByteArray();\n+    for (int i = 0; i < id.length; ++i) {\n+      id[i] = bytes[i];\n     }\n+  }\n \n-    public static class MalformedGuidException extends Exception {\n+  public static class MalformedGuidException extends Exception {\n \n-        private static final long serialVersionUID = -8922336058603571809L;\n+    private static final long serialVersionUID = -8922336058603571809L;\n \n-        public MalformedGuidException(String guid) {\n-            super(\"Malformed guid: \" + guid);\n-        }\n+    public MalformedGuidException(String guid) {\n+      super(\"Malformed guid: \" + guid);\n     }\n-\n-    public static String makeGUID(String digest) {\n-        String val = \"0\";\n-        int maxlen = 32;\n-        int base = 34;\n-        int prime = 31;\n-        for (int i = 0; i < digest.length(); i++) {\n-            char c = digest.charAt(i);\n-            val = new BigInteger(val, base).add(BigInteger.valueOf((long) c)).multiply(BigInteger.valueOf(prime)).toString(base);\n-            if (val.length() > maxlen) val = val.substring(0, maxlen);\n-        }\n-\n-        return val;\n+  }\n+\n+  public static String makeGUID(String digest) {\n+    String val = \"0\";\n+    int maxlen = 32;\n+    int base = 34;\n+    int prime = 31;\n+    for (int i = 0; i < digest.length(); i++) {\n+      char c = digest.charAt(i);\n+      val =\n+        new BigInteger(val, base).add(BigInteger.valueOf((long) c)).multiply(BigInteger.valueOf(prime)).toString(base);\n+      if (val.length() > maxlen) {\n+        val = val.substring(0, maxlen);\n+      }\n     }\n+\n+    return val;\n+  }\n }\n",
            "diff_size": 227
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "96",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 140).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "256",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 129).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/181/GUID.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/naturalize/181/GUID.java\nindex c29a8203389..382e9ad68e4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/181/GUID.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/naturalize/181/GUID.java\n@@ -93,8 +93,7 @@ public final class GUID implements Cloneable, Comparable, java.io.Serializable {\n             }\n         }\n \n-        id = new byte[] { ipadd[0], ipadd[1], ipadd[2], ipadd[3], b[7], b[6],\n-                b[5], b[4], b[3], b[2], b[1], b[0], (byte) ((c >>> 8) & 0xff),\n+        id = new byte[] { ipadd[0], ipadd[1], ipadd[2], ipadd[3], b[7], b[6], b[5], b[4], b[3], b[2], b[1], b[0], (byte) ((c >>> 8) & 0xff),\n                 (byte) (c & 0xff) };\n     }\n \n@@ -129,19 +128,16 @@ public final class GUID implements Cloneable, Comparable, java.io.Serializable {\n \n     public int compareTo(Object o) {\n         if (o == this) {\n-\n-            return 0;\n+    return 0;\n         }\n \n         GUID o1 = (GUID) o;\n \n         for (short i = 0; i < id.length; ++i) {\n             if (o1.id[i] < id[i]) {\n-\n-                return -1;\n+    return -1;\n             } else if (o1.id[i] > id[i]) {\n-\n-                return 1;\n+    return 1;\n             }\n         }\n \n@@ -162,8 +158,7 @@ public final class GUID implements Cloneable, Comparable, java.io.Serializable {\n         for (short i = 0; i < id.length; ++i) {\n             ret ^= (id[i] << (i % 4));\n     }\n-\n-        return ret;\n+return ret;\n     }\n \n     public static void main(String[] argv) throws Exception {\n@@ -210,8 +205,7 @@ public final class GUID implements Cloneable, Comparable, java.io.Serializable {\n         try {\n             pm.lock();\n         } catch (InterruptedException ie) {\n-            System.err\n-                    .println(\"ERROR: Could not establish unique starttime using\\n\"\n+            System.err.println(\"ERROR: Could not establish unique starttime using\\n\"\n                             + \"       TCP port \"\n                             + port\n                             + \" for synchronization. \\n\"\n@@ -219,7 +213,7 @@ public final class GUID implements Cloneable, Comparable, java.io.Serializable {\n                             + \"       Check the '\"\n                             + PROP_PORT\n                             + \"' JAVA system property. \\n\");\n-            throw new RuntimeException(\"GUID.getSystemUniqId() FAILED!!!\");\n+throw new RuntimeException(\"GUID.getSystemUniqId() FAILED!!!\");\n         }\n \n         long uid = System.currentTimeMillis();\n@@ -265,4 +259,4 @@ public final class GUID implements Cloneable, Comparable, java.io.Serializable {\n \n         return val;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 14
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/181/GUID.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler_random/181/GUID.java\nindex c29a8203389..425a134ddb8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/181/GUID.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler_random/181/GUID.java\n@@ -259,7 +259,8 @@ public final class GUID implements Cloneable, Comparable, java.io.Serializable {\n         int prime = 31;\n         for (int i = 0; i < digest.length(); i++) {\n             char c = digest.charAt(i);\n-            val = new BigInteger(val, base).add(BigInteger.valueOf((long) c)).multiply(BigInteger.valueOf(prime)).toString(base);\n+            val = new BigInteger(val, base).add(BigInteger.valueOf((long) c)).multiply(BigInteger.valueOf(prime)).\n+            toString (base);\n             if (val.length() > maxlen) val = val.substring(0, maxlen);\n         }\n \n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/181/GUID.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler_three_grams/181/GUID.java\nindex c29a8203389..44d146f9c53 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/181/GUID.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler_three_grams/181/GUID.java\n@@ -259,7 +259,8 @@ public final class GUID implements Cloneable, Comparable, java.io.Serializable {\n         int prime = 31;\n         for (int i = 0; i < digest.length(); i++) {\n             char c = digest.charAt(i);\n-            val = new BigInteger(val, base).add(BigInteger.valueOf((long) c)).multiply(BigInteger.valueOf(prime)).toString(base);\n+            val = new BigInteger(val, base).add(BigInteger.valueOf((long) c))\n+            . multiply(BigInteger.valueOf(prime)).toString(base);\n             if (val.length() > maxlen) val = val.substring(0, maxlen);\n         }\n \n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2318",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "35",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "35",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2318/LabelScanReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2318/LabelScanReader.java\nindex 61f9541384f..6c18779eb16 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2318/LabelScanReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2318/LabelScanReader.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.storageengine.api.schema;\n \n import org.neo4j.collection.primitive.PrimitiveLongResourceIterator;\n@@ -27,29 +28,29 @@ import org.neo4j.graphdb.Resource;\n  */\n public interface LabelScanReader extends Resource\n {\n-    /**\n-     * @param labelId label token id.\n-     * @return node ids with the given {@code labelId}.\n-     */\n-    PrimitiveLongResourceIterator nodesWithLabel( int labelId );\n+  /**\n+   * @param labelId label token id.\n+   * @return node ids with the given {@code labelId}.\n+   */\n+  PrimitiveLongResourceIterator nodesWithLabel(int labelId);\n \n-    /**\n-     * Sets the client up for a label scan on <code>labelId</code>\n-     *\n-     * @param client the client to communicate with\n-     * @param labelId label token id\n-     */\n-    void nodesWithLabel( IndexProgressor.NodeLabelClient client, int labelId );\n+  /**\n+   * Sets the client up for a label scan on <code>labelId</code>\n+   *\n+   * @param client  the client to communicate with\n+   * @param labelId label token id\n+   */\n+  void nodesWithLabel(IndexProgressor.NodeLabelClient client, int labelId);\n \n-    /**\n-     * @param labelIds label token ids.\n-     * @return node ids with any of the given label ids.\n-     */\n-    PrimitiveLongResourceIterator nodesWithAnyOfLabels( int... labelIds );\n+  /**\n+   * @param labelIds label token ids.\n+   * @return node ids with any of the given label ids.\n+   */\n+  PrimitiveLongResourceIterator nodesWithAnyOfLabels(int... labelIds);\n \n-    /**\n-     * @param labelIds label token ids.\n-     * @return node ids with all of the given label ids.\n-     */\n-    PrimitiveLongResourceIterator nodesWithAllLabels( int... labelIds );\n+  /**\n+   * @param labelIds label token ids.\n+   * @return node ids with all of the given label ids.\n+   */\n+  PrimitiveLongResourceIterator nodesWithAllLabels(int... labelIds);\n }\n",
            "diff_size": 23
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2318/LabelScanReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2318/LabelScanReader.java\nindex 61f9541384f..232a128a5c4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2318/LabelScanReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2318/LabelScanReader.java\n@@ -52,4 +52,4 @@ public interface LabelScanReader extends Resource\n      * @return node ids with all of the given label ids.\n      */\n     PrimitiveLongResourceIterator nodesWithAllLabels( int... labelIds );\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "seedstack-business",
    "error_id": "8",
    "information": {
        "errors": [
            {
                "line": "8",
                "column": "1",
                "severity": "warning",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\npackage org.seedstack.business.internal.domain;\n\nimport static javassist.bytecode.annotation.Annotation.createMemberValue;\nimport static org.seedstack.business.internal.utils.BusinessUtils.getQualifier;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/8/DefaultRepositoryGenerator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/styler/8/DefaultRepositoryGenerator.java\nindex 575fc91d810..bf6e045ea80 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/8/DefaultRepositoryGenerator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/styler/8/DefaultRepositoryGenerator.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.business.internal.domain;\n \n import static javassist.bytecode.annotation.Annotation.createMemberValue;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/8/DefaultRepositoryGenerator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/intellij/8/DefaultRepositoryGenerator.java\nindex 575fc91d810..8f66769445b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/8/DefaultRepositoryGenerator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/intellij/8/DefaultRepositoryGenerator.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.business.internal.domain;\n \n import static javassist.bytecode.annotation.Annotation.createMemberValue;\n@@ -67,7 +68,7 @@ class DefaultRepositoryGenerator<T extends Repository> {\n \n             cc.setModifiers(Modifier.PUBLIC);\n \n-            cc.setInterfaces(new CtClass[]{classPool.getCtClass(repositoryInterface.getName())});\n+            cc.setInterfaces(new CtClass[] {classPool.getCtClass(repositoryInterface.getName())});\n \n             if (hasGenericConstructor(baseImpl)) {\n                 cc.addConstructor(createConstructor(constPool, cc));\n@@ -90,7 +91,8 @@ class DefaultRepositoryGenerator<T extends Repository> {\n     }\n \n     private AnnotationsAttribute createQualifierAttribute(ConstPool constPool,\n-            java.lang.annotation.Annotation qualifier) throws NotFoundException {\n+                                                          java.lang.annotation.Annotation qualifier)\n+            throws NotFoundException {\n         AnnotationsAttribute attr = new AnnotationsAttribute(constPool, AnnotationsAttribute.visibleTag);\n         attr.setAnnotation(copyAnnotation(constPool, qualifier));\n         return attr;\n@@ -111,7 +113,7 @@ class DefaultRepositoryGenerator<T extends Repository> {\n     }\n \n     private Annotation copyAnnotation(ConstPool constPool,\n-            java.lang.annotation.Annotation annotation) throws NotFoundException {\n+                                      java.lang.annotation.Annotation annotation) throws NotFoundException {\n         // Create annotation from specified type\n         Annotation byteCodeAnnotation = createAnnotation(\n                 constPool,\n@@ -127,7 +129,7 @@ class DefaultRepositoryGenerator<T extends Repository> {\n             );\n \n             invoke(from(memberValue.getClass())\n-                            .method(\"setValue\", new Class[]{value.getClass()})\n+                            .method(\"setValue\", new Class[] {value.getClass()})\n                             .orElseThrow(() -> new NotFoundException(\"Cannot copy value of qualifier parameter \"\n                                     + m.getName())),\n                     memberValue,\n@@ -143,7 +145,7 @@ class DefaultRepositoryGenerator<T extends Repository> {\n     }\n \n     private Annotation createAnnotation(ConstPool constPool,\n-            Class<? extends java.lang.annotation.Annotation> annotationType) {\n+                                        Class<? extends java.lang.annotation.Annotation> annotationType) {\n         return new Annotation(\n                 annotationType.getName(),\n                 constPool\n@@ -165,7 +167,7 @@ class DefaultRepositoryGenerator<T extends Repository> {\n \n     private CtConstructor createConstructor(ConstPool constPool, CtClass declaringClass) throws NotFoundException,\n             CannotCompileException {\n-        CtConstructor cc = new CtConstructor(new CtClass[]{\n+        CtConstructor cc = new CtConstructor(new CtClass[] {\n                 declaringClass.getClassPool().getCtClass(Object.class.getName() + \"[]\")\n         }, declaringClass);\n \n@@ -191,7 +193,7 @@ class DefaultRepositoryGenerator<T extends Repository> {\n     private void addAssistedAnnotation(ConstPool constPool, CtConstructor cc) {\n         ParameterAnnotationsAttribute attribute = new ParameterAnnotationsAttribute(constPool,\n                 ParameterAnnotationsAttribute.visibleTag);\n-        attribute.setAnnotations(new Annotation[][]{{createAnnotation(constPool, Assisted.class)}});\n+        attribute.setAnnotations(new Annotation[][] {{createAnnotation(constPool, Assisted.class)}});\n         cc.getMethodInfo().addAttribute(attribute);\n     }\n }\n",
            "diff_size": 9
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "8",
                    "column": "1",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "62",
                    "column": "9",
                    "severity": "warning",
                    "message": "'baseImpl' has incorrect indentation level 8, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "78",
                    "column": "1",
                    "severity": "warning",
                    "message": "'try' child has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "83",
                    "column": "5",
                    "severity": "warning",
                    "message": "'catch rcurly' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "85",
                    "column": "1",
                    "severity": "warning",
                    "message": "'METHOD_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "85",
                    "column": "1",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "87",
                    "column": "5",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "97",
                    "column": "38",
                    "severity": "warning",
                    "message": "WhitespaceAround: '+' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "107",
                    "column": "5",
                    "severity": "warning",
                    "message": "Comment has incorrect indentation level 4, expected is 8, indentation should be the same level as line 108.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "116",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 128).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "116",
                    "column": "113",
                    "severity": "warning",
                    "message": "WhitespaceAround: '+' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "117",
                    "column": "9",
                    "severity": "warning",
                    "message": "'method call' child has incorrect indentation level 8, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "118",
                    "column": "9",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "119",
                    "column": "9",
                    "severity": "warning",
                    "message": "'method call' child has incorrect indentation level 8, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "125",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 127).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "126",
                    "column": "5",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "138",
                    "column": "1",
                    "severity": "warning",
                    "message": "'METHOD_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "138",
                    "column": "1",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "144",
                    "column": "5",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "145",
                    "column": "5",
                    "severity": "warning",
                    "message": "'declaringClass' has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "170",
                    "column": "5",
                    "severity": "warning",
                    "message": "'array initialization rcurly' has incorrect indentation level 4, expected level should be one of the following: 8, 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/8/DefaultRepositoryGenerator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/naturalize/8/DefaultRepositoryGenerator.java\nindex 575fc91d810..048c4b2493f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/8/DefaultRepositoryGenerator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/naturalize/8/DefaultRepositoryGenerator.java\n@@ -58,10 +58,8 @@ class DefaultRepositoryGenerator<T extends Repository> {\n \n     Class<? extends T> generate(Class<? extends Repository> baseImpl) {\n         try {\n-            CtClass cc = createClass(\n-                    getClassName(baseImpl, getCounter(repositoryInterface).incrementAndGet()),\n-                    baseImpl\n-            );\n+            CtClass cc = createClass(getClassName(baseImpl, getCounter(repositoryInterface).incrementAndGet()),\n+        baseImpl);\n             ClassFile cf = cc.getClassFile();\n             ConstPool constPool = cf.getConstPool();\n \n@@ -77,21 +75,16 @@ class DefaultRepositoryGenerator<T extends Repository> {\n \n             cf.addAttribute(createQualifierAttribute(constPool, getQualifier(baseImpl)\n                     .orElseThrow(() -> new NotFoundException(\"Qualifier annotation not found\"))));\n-\n-            return cast(cc.toClass(\n-                    classLoader,\n-                    DefaultRepositoryCollector.class.getProtectionDomain())\n-            );\n+return cast(cc.toClass(classLoader, DefaultRepositoryCollector.class.getProtectionDomain()));\n         } catch (CannotCompileException | NotFoundException e) {\n             throw BusinessException.wrap(e, BusinessErrorCode.UNABLE_TO_CREATE_DEFAULT_IMPLEMENTATION)\n                     .put(\"interface\", repositoryInterface)\n                     .put(\"base\", baseImpl);\n-        }\n     }\n-\n-    private AnnotationsAttribute createQualifierAttribute(ConstPool constPool,\n+    }\n+private AnnotationsAttribute createQualifierAttribute(ConstPool constPool,\n             java.lang.annotation.Annotation qualifier) throws NotFoundException {\n-        AnnotationsAttribute attr = new AnnotationsAttribute(constPool, AnnotationsAttribute.visibleTag);\n+    AnnotationsAttribute attr = new AnnotationsAttribute(constPool, AnnotationsAttribute.visibleTag);\n         attr.setAnnotation(copyAnnotation(constPool, qualifier));\n         return attr;\n     }\n@@ -101,8 +94,7 @@ class DefaultRepositoryGenerator<T extends Repository> {\n     }\n \n     private String getClassName(Class<? extends Repository> defaultRepositoryImplementation, int generation) {\n-        return GENERATED_PACKAGE_NAME\n-                + \".\"\n+        return GENERATED_PACKAGE_NAME+ \".\"\n                 + repositoryInterface.getSimpleName()\n                 + \"_\"\n                 + defaultRepositoryImplementation.getSimpleName()\n@@ -112,42 +104,27 @@ class DefaultRepositoryGenerator<T extends Repository> {\n \n     private Annotation copyAnnotation(ConstPool constPool,\n             java.lang.annotation.Annotation annotation) throws NotFoundException {\n-        // Create annotation from specified type\n-        Annotation byteCodeAnnotation = createAnnotation(\n-                constPool,\n-                annotation.annotationType()\n-        );\n+    // Create annotation from specified type\n+        Annotation byteCodeAnnotation = createAnnotation(constPool, annotation.annotationType());\n \n         // Copy annotation methods\n         for (Method m : annotation.annotationType().getDeclaredMethods()) {\n             Object value = invoke(m, annotation);\n-            MemberValue memberValue = createMemberValue(\n-                    constPool,\n-                    classPool.get(value.getClass().getName())\n-            );\n-\n-            invoke(from(memberValue.getClass())\n-                            .method(\"setValue\", new Class[]{value.getClass()})\n-                            .orElseThrow(() -> new NotFoundException(\"Cannot copy value of qualifier parameter \"\n-                                    + m.getName())),\n-                    memberValue,\n-                    value);\n-\n-            byteCodeAnnotation.addMemberValue(\n-                    m.getName(),\n-                    memberValue\n-            );\n+            MemberValue memberValue = createMemberValue(constPool, classPool.get(value.getClass().getName()));\n+\n+            invoke(from(memberValue.getClass()).method(\"setValue\", new Class[]{value.getClass()})\n+                            .orElseThrow(() -> new NotFoundException(\"Cannot copy value of qualifier parameter \"+ m.getName())),\n+        memberValue, value);\n+        byteCodeAnnotation.addMemberValue(m.getName(),\n+        memberValue);\n         }\n \n         return byteCodeAnnotation;\n     }\n \n-    private Annotation createAnnotation(ConstPool constPool,\n-            Class<? extends java.lang.annotation.Annotation> annotationType) {\n-        return new Annotation(\n-                annotationType.getName(),\n-                constPool\n-        );\n+    private Annotation createAnnotation(ConstPool constPool, Class<? extends java.lang.annotation.Annotation> annotationType) {\n+    return new Annotation(annotationType.getName(),\n+        constPool);\n     }\n \n     private boolean hasGenericConstructor(Class<? extends Repository> baseImpl) {\n@@ -158,16 +135,14 @@ class DefaultRepositoryGenerator<T extends Repository> {\n             return false;\n         }\n     }\n-\n-    private CtConstructor createDefaultConstructor(CtClass declaringClass) throws CannotCompileException {\n+private CtConstructor createDefaultConstructor(CtClass declaringClass) throws CannotCompileException {\n         return CtNewConstructor.defaultConstructor(declaringClass);\n     }\n \n     private CtConstructor createConstructor(ConstPool constPool, CtClass declaringClass) throws NotFoundException,\n             CannotCompileException {\n-        CtConstructor cc = new CtConstructor(new CtClass[]{\n-                declaringClass.getClassPool().getCtClass(Object.class.getName() + \"[]\")\n-        }, declaringClass);\n+    CtConstructor cc = new CtConstructor(new CtClass[]{\n+    declaringClass.getClassPool().getCtClass(Object.class.getName() + \"[]\")}, declaringClass);\n \n         // Define the constructor behavior\n         cc.setBody(\"super($1);\");\n@@ -191,7 +166,8 @@ class DefaultRepositoryGenerator<T extends Repository> {\n     private void addAssistedAnnotation(ConstPool constPool, CtConstructor cc) {\n         ParameterAnnotationsAttribute attribute = new ParameterAnnotationsAttribute(constPool,\n                 ParameterAnnotationsAttribute.visibleTag);\n-        attribute.setAnnotations(new Annotation[][]{{createAnnotation(constPool, Assisted.class)}});\n+        attribute.setAnnotations(new Annotation[][]{{createAnnotation(constPool, Assisted.class)}\n+    });\n         cc.getMethodInfo().addAttribute(attribute);\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 50
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "8",
                    "column": "1",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "58",
                    "column": "13",
                    "severity": "warning",
                    "message": "'.' has incorrect indentation level 12, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "62",
                    "column": "75",
                    "severity": "warning",
                    "message": "WhitespaceAround: '->' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "68",
                    "column": "17",
                    "severity": "warning",
                    "message": "'.' has incorrect indentation level 16, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "82",
                    "column": "17",
                    "severity": "warning",
                    "message": "'getQualifier' has incorrect indentation level 16, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "83",
                    "column": "36",
                    "severity": "warning",
                    "message": "WhitespaceAround: '->' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "88",
                    "column": "13",
                    "severity": "warning",
                    "message": "'catch' has incorrect indentation level 12, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "88",
                    "column": "13",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'catch' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "88",
                    "column": "41",
                    "severity": "warning",
                    "message": "WhitespaceAround: '|' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "89",
                    "column": "17",
                    "severity": "warning",
                    "message": "'catch' child has incorrect indentation level 16, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "92",
                    "column": "13",
                    "severity": "warning",
                    "message": "'catch rcurly' has incorrect indentation level 12, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "95",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 148).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "106",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 151).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "106",
                    "column": "38",
                    "severity": "warning",
                    "message": "WhitespaceAround: '+' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "106",
                    "column": "43",
                    "severity": "warning",
                    "message": "WhitespaceAround: '+' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "106",
                    "column": "80",
                    "severity": "warning",
                    "message": "WhitespaceAround: '+' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "106",
                    "column": "85",
                    "severity": "warning",
                    "message": "WhitespaceAround: '+' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "106",
                    "column": "134",
                    "severity": "warning",
                    "message": "WhitespaceAround: '+' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "106",
                    "column": "139",
                    "severity": "warning",
                    "message": "WhitespaceAround: '+' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "109",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 129).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "114",
                    "column": "9",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'for' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "115",
                    "column": "13",
                    "severity": "warning",
                    "message": "'.' has incorrect indentation level 12, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "116",
                    "column": "40",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 39, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "118",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 124).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "118",
                    "column": "40",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 39, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "119",
                    "column": "44",
                    "severity": "warning",
                    "message": "'.' has incorrect indentation level 43, expected level should be 47.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "120",
                    "column": "40",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 39, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "121",
                    "column": "44",
                    "severity": "warning",
                    "message": "'.' has incorrect indentation level 43, expected level should be 47.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "123",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 163).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "123",
                    "column": "44",
                    "severity": "warning",
                    "message": "'.' has incorrect indentation level 43, expected level should be 47.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "123",
                    "column": "59",
                    "severity": "warning",
                    "message": "WhitespaceAround: '->' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "123",
                    "column": "127",
                    "severity": "warning",
                    "message": "WhitespaceAround: '+' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "124",
                    "column": "40",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 39, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "125",
                    "column": "36",
                    "severity": "warning",
                    "message": "'for rcurly' has incorrect indentation level 35, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "129",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 127).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "139",
                    "column": "13",
                    "severity": "warning",
                    "message": "'catch' has incorrect indentation level 12, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "139",
                    "column": "13",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'catch' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "140",
                    "column": "17",
                    "severity": "warning",
                    "message": "'catch' child has incorrect indentation level 16, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "141",
                    "column": "13",
                    "severity": "warning",
                    "message": "'catch rcurly' has incorrect indentation level 12, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "148",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 139).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "152",
                    "column": "78",
                    "severity": "warning",
                    "message": "WhitespaceAround: '+' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "153",
                    "column": "1",
                    "severity": "warning",
                    "message": "'declaringClass' has incorrect indentation level 0, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "174",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 137).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "176",
                    "column": "38",
                    "severity": "warning",
                    "message": "'array initialization lcurly' has incorrect indentation level 37, expected level should be one of the following: 12, 16, 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/8/DefaultRepositoryGenerator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/codebuff/8/DefaultRepositoryGenerator.java\nindex 575fc91d810..0e5671c0a99 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/8/DefaultRepositoryGenerator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/codebuff/8/DefaultRepositoryGenerator.java\n@@ -8,11 +8,14 @@\n package org.seedstack.business.internal.domain;\n \n import static javassist.bytecode.annotation.Annotation.createMemberValue;\n+\n import static org.seedstack.business.internal.utils.BusinessUtils.getQualifier;\n+\n import static org.seedstack.shed.reflect.Classes.cast;\n+\n import static org.seedstack.shed.reflect.Classes.from;\n-import static org.seedstack.shed.reflect.ReflectUtils.invoke;\n \n+import static org.seedstack.shed.reflect.ReflectUtils.invoke;\n import com.google.inject.assistedinject.Assisted;\n import java.lang.reflect.Method;\n import java.lang.reflect.Modifier;\n@@ -38,7 +41,9 @@ import org.seedstack.business.internal.BusinessErrorCode;\n import org.seedstack.business.internal.BusinessException;\n import org.seedstack.shed.ClassLoaders;\n \n+\n class DefaultRepositoryGenerator<T extends Repository> {\n+\n     private static final String GENERATED_PACKAGE_NAME = \"org.seedstack.business.__generated.repository\";\n     private static final ConcurrentMap<String, AtomicInteger> counters = new ConcurrentHashMap<>();\n     private final ClassPool classPool;\n@@ -49,48 +54,45 @@ class DefaultRepositoryGenerator<T extends Repository> {\n         this.repositoryInterface = repositoryInterface;\n         this.classLoader = ClassLoaders.findMostCompleteClassLoader(DefaultRepositoryCollector.class);\n         this.classPool = new ClassPool(false);\n-        this.classPool.appendClassPath(new LoaderClassPath(this.classLoader));\n+        this.classPool.appendClassPath(new LoaderClassPath(this\n+            .classLoader));\n     }\n \n     private static AtomicInteger getCounter(Class<?> repositoryInterface) {\n-        return counters.computeIfAbsent(repositoryInterface.getName(), key -> new AtomicInteger());\n+        return counters.computeIfAbsent(repositoryInterface.getName(), key-> new AtomicInteger());\n     }\n \n     Class<? extends T> generate(Class<? extends Repository> baseImpl) {\n         try {\n-            CtClass cc = createClass(\n-                    getClassName(baseImpl, getCounter(repositoryInterface).incrementAndGet()),\n-                    baseImpl\n-            );\n+            CtClass cc = createClass(getClassName(baseImpl, getCounter(repositoryInterface)\n+                .incrementAndGet()), baseImpl);\n+\n             ClassFile cf = cc.getClassFile();\n-            ConstPool constPool = cf.getConstPool();\n \n+            ConstPool constPool = cf.getConstPool();\n             cc.setModifiers(Modifier.PUBLIC);\n-\n-            cc.setInterfaces(new CtClass[]{classPool.getCtClass(repositoryInterface.getName())});\n-\n+            cc.setInterfaces(new CtClass[] {\n+                                           classPool.getCtClass(repositoryInterface.getName())});\n             if (hasGenericConstructor(baseImpl)) {\n                 cc.addConstructor(createConstructor(constPool, cc));\n             } else {\n                 cc.addConstructor(createDefaultConstructor(cc));\n             }\n+            cf.addAttribute(createQualifierAttribute(constPool,\n+                getQualifier(baseImpl)\n+                    .orElseThrow(()-> new NotFoundException(\"Qualifier annotation not found\"))));\n+            return cast(cc.toClass(classLoader, DefaultRepositoryCollector.class\n+                .getProtectionDomain()));\n+        }\n \n-            cf.addAttribute(createQualifierAttribute(constPool, getQualifier(baseImpl)\n-                    .orElseThrow(() -> new NotFoundException(\"Qualifier annotation not found\"))));\n-\n-            return cast(cc.toClass(\n-                    classLoader,\n-                    DefaultRepositoryCollector.class.getProtectionDomain())\n-            );\n-        } catch (CannotCompileException | NotFoundException e) {\n-            throw BusinessException.wrap(e, BusinessErrorCode.UNABLE_TO_CREATE_DEFAULT_IMPLEMENTATION)\n+            catch(CannotCompileException| NotFoundException e) {\n+                throw BusinessException.wrap(e, BusinessErrorCode.UNABLE_TO_CREATE_DEFAULT_IMPLEMENTATION)\n                     .put(\"interface\", repositoryInterface)\n                     .put(\"base\", baseImpl);\n-        }\n+            }\n     }\n \n-    private AnnotationsAttribute createQualifierAttribute(ConstPool constPool,\n-            java.lang.annotation.Annotation qualifier) throws NotFoundException {\n+    private AnnotationsAttribute createQualifierAttribute(ConstPool constPool, java.lang.annotation.Annotation qualifier) throws NotFoundException {\n         AnnotationsAttribute attr = new AnnotationsAttribute(constPool, AnnotationsAttribute.visibleTag);\n         attr.setAnnotation(copyAnnotation(constPool, qualifier));\n         return attr;\n@@ -101,73 +103,54 @@ class DefaultRepositoryGenerator<T extends Repository> {\n     }\n \n     private String getClassName(Class<? extends Repository> defaultRepositoryImplementation, int generation) {\n-        return GENERATED_PACKAGE_NAME\n-                + \".\"\n-                + repositoryInterface.getSimpleName()\n-                + \"_\"\n-                + defaultRepositoryImplementation.getSimpleName()\n-                + \"_\"\n-                + generation;\n+        return GENERATED_PACKAGE_NAME+ \".\"+ repositoryInterface.getSimpleName()+ \"_\"+ defaultRepositoryImplementation.getSimpleName()+ \"_\"+ generation;\n     }\n \n-    private Annotation copyAnnotation(ConstPool constPool,\n-            java.lang.annotation.Annotation annotation) throws NotFoundException {\n+    private Annotation copyAnnotation(ConstPool constPool, java.lang.annotation.Annotation annotation) throws NotFoundException {\n         // Create annotation from specified type\n-        Annotation byteCodeAnnotation = createAnnotation(\n-                constPool,\n-                annotation.annotationType()\n-        );\n+        Annotation byteCodeAnnotation = createAnnotation(constPool, annotation.annotationType());\n \n         // Copy annotation methods\n-        for (Method m : annotation.annotationType().getDeclaredMethods()) {\n-            Object value = invoke(m, annotation);\n-            MemberValue memberValue = createMemberValue(\n-                    constPool,\n-                    classPool.get(value.getClass().getName())\n-            );\n-\n-            invoke(from(memberValue.getClass())\n-                            .method(\"setValue\", new Class[]{value.getClass()})\n-                            .orElseThrow(() -> new NotFoundException(\"Cannot copy value of qualifier parameter \"\n-                                    + m.getName())),\n-                    memberValue,\n-                    value);\n-\n-            byteCodeAnnotation.addMemberValue(\n-                    m.getName(),\n-                    memberValue\n-            );\n-        }\n-\n+        for(Method m :annotation.annotationType()\n+            .getDeclaredMethods()) {\n+                                       Object value = invoke(m, annotation);\n+\n+                                       MemberValue memberValue = createMemberValue(constPool, classPool.get(value.getClass()\n+                                           .getName()));\n+                                       invoke(from(memberValue.getClass())\n+                                           .method(\"setValue\", new Class[] {\n+                                                                           value.getClass()})\n+                                           .orElseThrow(()-> new NotFoundException(\"Cannot copy value of qualifier parameter \"+ m.getName())), memberValue, value);\n+                                       byteCodeAnnotation.addMemberValue(m.getName(), memberValue);\n+                                   }\n         return byteCodeAnnotation;\n     }\n \n-    private Annotation createAnnotation(ConstPool constPool,\n-            Class<? extends java.lang.annotation.Annotation> annotationType) {\n-        return new Annotation(\n-                annotationType.getName(),\n-                constPool\n-        );\n+    private Annotation createAnnotation(ConstPool constPool, Class<? extends java.lang.annotation.Annotation> annotationType) {\n+        return new Annotation(annotationType.getName(), constPool);\n     }\n \n     private boolean hasGenericConstructor(Class<? extends Repository> baseImpl) {\n         try {\n             baseImpl.getDeclaredConstructor(Object[].class);\n             return true;\n-        } catch (NoSuchMethodException e) {\n-            return false;\n         }\n+\n+            catch(NoSuchMethodException e) {\n+                return false;\n+            }\n     }\n \n     private CtConstructor createDefaultConstructor(CtClass declaringClass) throws CannotCompileException {\n         return CtNewConstructor.defaultConstructor(declaringClass);\n     }\n \n-    private CtConstructor createConstructor(ConstPool constPool, CtClass declaringClass) throws NotFoundException,\n-            CannotCompileException {\n-        CtConstructor cc = new CtConstructor(new CtClass[]{\n-                declaringClass.getClassPool().getCtClass(Object.class.getName() + \"[]\")\n-        }, declaringClass);\n+    private CtConstructor createConstructor(ConstPool constPool, CtClass declaringClass) throws NotFoundException, CannotCompileException {\n+        CtConstructor cc = new CtConstructor(new CtClass[] {\n+                                                           declaringClass.getClassPool()\n+                                                               .getCtClass(Object.class\n+                                                                   .getName()+ \"[]\")},\n+declaringClass);\n \n         // Define the constructor behavior\n         cc.setBody(\"super($1);\");\n@@ -178,7 +161,6 @@ class DefaultRepositoryGenerator<T extends Repository> {\n \n         // Add the @Assisted annotation to the constructor parameter\n         addAssistedAnnotation(constPool, cc);\n-\n         return cc;\n     }\n \n@@ -189,9 +171,9 @@ class DefaultRepositoryGenerator<T extends Repository> {\n     }\n \n     private void addAssistedAnnotation(ConstPool constPool, CtConstructor cc) {\n-        ParameterAnnotationsAttribute attribute = new ParameterAnnotationsAttribute(constPool,\n-                ParameterAnnotationsAttribute.visibleTag);\n-        attribute.setAnnotations(new Annotation[][]{{createAnnotation(constPool, Assisted.class)}});\n+        ParameterAnnotationsAttribute attribute = new ParameterAnnotationsAttribute(constPool, ParameterAnnotationsAttribute.visibleTag);\n+        attribute.setAnnotations(new Annotation[][] {\n+                                     { createAnnotation(constPool, Assisted.class)}});\n         cc.getMethodInfo().addAttribute(attribute);\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 93
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/8/DefaultRepositoryGenerator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/styler_random/8/DefaultRepositoryGenerator.java\nindex 575fc91d810..bf6e045ea80 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/8/DefaultRepositoryGenerator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/styler_random/8/DefaultRepositoryGenerator.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.business.internal.domain;\n \n import static javassist.bytecode.annotation.Annotation.createMemberValue;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/8/DefaultRepositoryGenerator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/styler_three_grams/8/DefaultRepositoryGenerator.java\nindex 575fc91d810..bf6e045ea80 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/8/DefaultRepositoryGenerator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/styler_three_grams/8/DefaultRepositoryGenerator.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.business.internal.domain;\n \n import static javassist.bytecode.annotation.Annotation.createMemberValue;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1810",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "83",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "116",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "153",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "162",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "166",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "166",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "172",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "172",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "175",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "175",
                    "column": "122",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "186",
                    "column": "115",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "198",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "198",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "209",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "209",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "209",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "211",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "211",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "227",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "227",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "227",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "229",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "229",
                    "column": "107",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "235",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "235",
                    "column": "135",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "241",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "241",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "246",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "246",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "248",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "248",
                    "column": "121",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "251",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "251",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "261",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "261",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "261",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "263",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "263",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "266",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "266",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "268",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "268",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "271",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "271",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "271",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "273",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "273",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "280",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "280",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "285",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "285",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "285",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "287",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "287",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "291",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "291",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "293",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "293",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "296",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "296",
                    "column": "105",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "302",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "302",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "302",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "304",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "305",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "309",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "310",
                    "column": "104",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "312",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "312",
                    "column": "17",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "322",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "322",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "324",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "324",
                    "column": "121",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "325",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "325",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "325",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "327",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "327",
                    "column": "125",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "331",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "331",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "334",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "334",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "336",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "336",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "342",
                    "column": "11",
                    "severity": "error",
                    "message": "'}' at column 11 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "342",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "342",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "344",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "344",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "352",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "352",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "354",
                    "column": "74",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "354",
                    "column": "109",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "358",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "358",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "360",
                    "column": "66",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "360",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "361",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1810/SslPolicyLoader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1810/SslPolicyLoader.java\nindex 13cdf4dc97f..5a26c972b7d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1810/SslPolicyLoader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1810/SslPolicyLoader.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.configuration.ssl;\n \n import io.netty.handler.ssl.SslProvider;\n@@ -72,307 +73,296 @@ import static org.neo4j.kernel.configuration.ssl.SslPolicyConfig.TLS_VERSION_DEF\n  */\n public class SslPolicyLoader\n {\n-    private final Map<String,SslPolicy> policies = new ConcurrentHashMap<>();\n-    private final PkiUtils pkiUtils = new PkiUtils();\n-    private final Config config;\n-    private final SslProvider sslProvider;\n+  private final Map<String, SslPolicy> policies = new ConcurrentHashMap<>();\n+  private final PkiUtils pkiUtils = new PkiUtils();\n+  private final Config config;\n+  private final SslProvider sslProvider;\n+\n+  private SslPolicy legacyPolicy;\n+\n+  private SslPolicyLoader(Config config)\n+  {\n+    this.config = config;\n+    this.sslProvider = config.get(SslSystemSettings.netty_ssl_provider);\n+  }\n+\n+  /**\n+   * Loads all the SSL policies as defined by the config.\n+   *\n+   * @param config The configuration for the SSL policies.\n+   * @return A factory populated with SSL policies.\n+   */\n+  public static SslPolicyLoader create(Config config, LogProvider logProvider)\n+  {\n+    SslPolicyLoader policyFactory = new SslPolicyLoader(config);\n+    policyFactory.load(config, logProvider.getLog(SslPolicyLoader.class));\n+    return policyFactory;\n+  }\n+\n+  /**\n+   * Use this for retrieving the SSL policy configured under the specified name.\n+   *\n+   * @param policyName The name of the SSL policy to be returned.\n+   * @return Returns the policy defined under the requested name. If the policy name is null\n+   * then the null policy will be returned which means that SSL will not be used. It is up\n+   * to each respective SSL policy using component to decide exactly what that means.\n+   * @throws IllegalArgumentException If a policy with the supplied name does not exist.\n+   */\n+  public SslPolicy getPolicy(String policyName)\n+  {\n+    if (policyName == null)\n+    {\n+      return null;\n+    } else if (policyName.equals(LEGACY_POLICY_NAME))\n+    {\n+      return getOrCreateLegacyPolicy();\n+    }\n \n-    private SslPolicy legacyPolicy;\n+    SslPolicy sslPolicy = policies.get(policyName);\n \n-    private SslPolicyLoader( Config config )\n+    if (sslPolicy == null)\n     {\n-        this.config = config;\n-        this.sslProvider = config.get( SslSystemSettings.netty_ssl_provider );\n+      throw new IllegalArgumentException(\n+          format(\"Cannot find enabled SSL policy with name '%s' in the configuration\", policyName));\n     }\n+    return sslPolicy;\n+  }\n \n-    /**\n-     * Loads all the SSL policies as defined by the config.\n-     *\n-     * @param config The configuration for the SSL policies.\n-     * @return A factory populated with SSL policies.\n-     */\n-    public static SslPolicyLoader create( Config config, LogProvider logProvider )\n+  private synchronized SslPolicy getOrCreateLegacyPolicy()\n+  {\n+    if (legacyPolicy != null)\n     {\n-        SslPolicyLoader policyFactory = new SslPolicyLoader( config );\n-        policyFactory.load( config, logProvider.getLog( SslPolicyLoader.class ) );\n-        return policyFactory;\n+      return legacyPolicy;\n     }\n+    legacyPolicy = loadOrCreateLegacyPolicy();\n+    return legacyPolicy;\n+  }\n+\n+  private SslPolicy loadOrCreateLegacyPolicy()\n+  {\n+    File privateKeyFile = config.get(LegacySslPolicyConfig.tls_key_file).getAbsoluteFile();\n+    File certficateFile = config.get(LegacySslPolicyConfig.tls_certificate_file).getAbsoluteFile();\n \n-    /**\n-     * Use this for retrieving the SSL policy configured under the specified name.\n-     *\n-     * @param policyName The name of the SSL policy to be returned.\n-     * @return Returns the policy defined under the requested name. If the policy name is null\n-     * then the null policy will be returned which means that SSL will not be used. It is up\n-     * to each respective SSL policy using component to decide exactly what that means.\n-     * @throws IllegalArgumentException If a policy with the supplied name does not exist.\n-     */\n-    public SslPolicy getPolicy( String policyName )\n+    if (!privateKeyFile.exists() && !certficateFile.exists())\n     {\n-        if ( policyName == null )\n-        {\n-            return null;\n-        }\n-        else if ( policyName.equals( LEGACY_POLICY_NAME ) )\n-        {\n-            return getOrCreateLegacyPolicy();\n-        }\n+      String hostname = config.get(default_advertised_address);\n+\n+      try\n+      {\n+        pkiUtils.createSelfSignedCertificate(certficateFile, privateKeyFile, hostname);\n+      } catch (Exception e)\n+      {\n+        throw new RuntimeException(\"Failed to generate private key and certificate\", e);\n+      }\n+    }\n \n-        SslPolicy sslPolicy = policies.get( policyName );\n+    PrivateKey privateKey = loadPrivateKey(privateKeyFile, null);\n+    X509Certificate[] keyCertChain = loadCertificateChain(certficateFile);\n \n-        if ( sslPolicy == null )\n-        {\n-            throw new IllegalArgumentException(\n-                    format( \"Cannot find enabled SSL policy with name '%s' in the configuration\", policyName ) );\n-        }\n-        return sslPolicy;\n-    }\n+    return new SslPolicy(privateKey, keyCertChain, TLS_VERSION_DEFAULTS, CIPHER_SUITES_DEFAULTS,\n+        ClientAuth.NONE, InsecureTrustManagerFactory.INSTANCE, sslProvider);\n+  }\n \n-    private synchronized SslPolicy getOrCreateLegacyPolicy()\n-    {\n-        if ( legacyPolicy != null )\n-        {\n-            return legacyPolicy;\n-        }\n-        legacyPolicy = loadOrCreateLegacyPolicy();\n-        return legacyPolicy;\n-    }\n+  private void load(Config config, Log log)\n+  {\n+    Set<String> policyNames = config.identifiersFromGroup(SslPolicyConfig.class);\n \n-    private SslPolicy loadOrCreateLegacyPolicy()\n+    for (String policyName : policyNames)\n     {\n-        File privateKeyFile = config.get( LegacySslPolicyConfig.tls_key_file ).getAbsoluteFile();\n-        File certficateFile = config.get( LegacySslPolicyConfig.tls_certificate_file ).getAbsoluteFile();\n+      if (policyName.equals(LEGACY_POLICY_NAME))\n+      {\n+        // the legacy policy name is reserved for the legacy policy which derives its configuration from legacy settings\n+        throw new IllegalArgumentException(\"Legacy policy cannot be configured. Please migrate to new SSL policy system.\");\n+      }\n \n-        if ( !privateKeyFile.exists() && !certficateFile.exists() )\n-        {\n-            String hostname = config.get( default_advertised_address );\n-\n-            try\n-            {\n-                pkiUtils.createSelfSignedCertificate( certficateFile, privateKeyFile, hostname );\n-            }\n-            catch ( Exception e )\n-            {\n-                throw new RuntimeException( \"Failed to generate private key and certificate\", e );\n-            }\n-        }\n+      SslPolicyConfig policyConfig = new SslPolicyConfig(policyName);\n+      File baseDirectory = config.get(policyConfig.base_directory);\n+      File trustedCertificatesDir = config.get(policyConfig.trusted_dir);\n+      File revokedCertificatesDir = config.get(policyConfig.revoked_dir);\n \n-        PrivateKey privateKey = loadPrivateKey( privateKeyFile, null );\n-        X509Certificate[] keyCertChain = loadCertificateChain( certficateFile );\n+      if (!baseDirectory.exists())\n+      {\n+        throw new IllegalArgumentException(\n+            format(\"Base directory '%s' for SSL policy with name '%s' does not exist.\", baseDirectory, policyName));\n+      }\n \n-        return new SslPolicy( privateKey, keyCertChain, TLS_VERSION_DEFAULTS, CIPHER_SUITES_DEFAULTS,\n-                ClientAuth.NONE, InsecureTrustManagerFactory.INSTANCE, sslProvider );\n-    }\n+      boolean allowKeyGeneration = config.get(policyConfig.allow_key_generation);\n \n-    private void load( Config config, Log log )\n-    {\n-        Set<String> policyNames = config.identifiersFromGroup( SslPolicyConfig.class );\n+      File privateKeyFile = config.get(policyConfig.private_key);\n+      String privateKeyPassword = config.get(policyConfig.private_key_password);\n+      PrivateKey privateKey;\n \n-        for ( String policyName : policyNames )\n-        {\n-            if ( policyName.equals( LEGACY_POLICY_NAME ) )\n-            {\n-                // the legacy policy name is reserved for the legacy policy which derives its configuration from legacy settings\n-                throw new IllegalArgumentException( \"Legacy policy cannot be configured. Please migrate to new SSL policy system.\" );\n-            }\n-\n-            SslPolicyConfig policyConfig = new SslPolicyConfig( policyName );\n-            File baseDirectory = config.get( policyConfig.base_directory );\n-            File trustedCertificatesDir = config.get( policyConfig.trusted_dir );\n-            File revokedCertificatesDir = config.get( policyConfig.revoked_dir );\n-\n-            if ( !baseDirectory.exists() )\n-            {\n-                throw new IllegalArgumentException(\n-                        format( \"Base directory '%s' for SSL policy with name '%s' does not exist.\", baseDirectory, policyName ) );\n-            }\n-\n-            boolean allowKeyGeneration = config.get( policyConfig.allow_key_generation );\n-\n-            File privateKeyFile = config.get( policyConfig.private_key );\n-            String privateKeyPassword = config.get( policyConfig.private_key_password );\n-            PrivateKey privateKey;\n-\n-            X509Certificate[] keyCertChain;\n-            File keyCertChainFile = config.get( policyConfig.public_certificate );\n-\n-            if ( allowKeyGeneration && !privateKeyFile.exists() && !keyCertChainFile.exists() )\n-            {\n-                log.info( format( \"Generating key and self-signed certificate for SSL policy '%s'\", policyName ) );\n-                String hostname = config.get( default_advertised_address );\n-\n-                try\n-                {\n-                    pkiUtils.createSelfSignedCertificate( keyCertChainFile, privateKeyFile, hostname );\n-\n-                    trustedCertificatesDir.mkdir();\n-                    revokedCertificatesDir.mkdir();\n-                }\n-                catch ( GeneralSecurityException | IOException | OperatorCreationException e )\n-                {\n-                    throw new RuntimeException( \"Failed to generate private key and certificate\", e );\n-                }\n-            }\n-\n-            privateKey = loadPrivateKey( privateKeyFile, privateKeyPassword );\n-            keyCertChain = loadCertificateChain( keyCertChainFile );\n-\n-            ClientAuth clientAuth = config.get( policyConfig.client_auth );\n-            boolean trustAll = config.get( policyConfig.trust_all );\n-            TrustManagerFactory trustManagerFactory;\n-\n-            Collection<X509CRL> crls = getCRLs( revokedCertificatesDir );\n-\n-            try\n-            {\n-                trustManagerFactory = createTrustManagerFactory( trustAll, trustedCertificatesDir, crls, clientAuth );\n-            }\n-            catch ( Exception e )\n-            {\n-                throw new RuntimeException( \"Failed to create trust manager based on: \" + trustedCertificatesDir, e );\n-            }\n-\n-            List<String> tlsVersions = config.get( policyConfig.tls_versions );\n-            List<String> ciphers = config.get( policyConfig.ciphers );\n-\n-            SslPolicy sslPolicy = new SslPolicy( privateKey, keyCertChain, tlsVersions, ciphers, clientAuth, trustManagerFactory, sslProvider );\n-            log.info( format( \"Loaded SSL policy '%s' = %s\", policyName, sslPolicy ) );\n-            policies.put( policyName, sslPolicy );\n-        }\n-    }\n+      X509Certificate[] keyCertChain;\n+      File keyCertChainFile = config.get(policyConfig.public_certificate);\n \n-    private Collection<X509CRL> getCRLs( File revokedCertificatesDir )\n-    {\n-        Collection<X509CRL> crls = new ArrayList<>();\n-        File[] revocationFiles = revokedCertificatesDir.listFiles();\n+      if (allowKeyGeneration && !privateKeyFile.exists() && !keyCertChainFile.exists())\n+      {\n+        log.info(format(\"Generating key and self-signed certificate for SSL policy '%s'\", policyName));\n+        String hostname = config.get(default_advertised_address);\n \n-        if ( revocationFiles == null )\n+        try\n         {\n-            throw new RuntimeException( format( \"Could not find or list files in revoked directory: %s\", revokedCertificatesDir ) );\n-        }\n+          pkiUtils.createSelfSignedCertificate(keyCertChainFile, privateKeyFile, hostname);\n \n-        if ( revocationFiles.length == 0 )\n+          trustedCertificatesDir.mkdir();\n+          revokedCertificatesDir.mkdir();\n+        } catch (GeneralSecurityException | IOException | OperatorCreationException e)\n         {\n-            return crls;\n+          throw new RuntimeException(\"Failed to generate private key and certificate\", e);\n         }\n+      }\n \n-        CertificateFactory certificateFactory;\n+      privateKey = loadPrivateKey(privateKeyFile, privateKeyPassword);\n+      keyCertChain = loadCertificateChain(keyCertChainFile);\n \n-        try\n-        {\n-            certificateFactory = CertificateFactory.getInstance( \"X.509\" );\n-        }\n-        catch ( CertificateException e )\n-        {\n-            throw new RuntimeException( \"Could not generated certificate factory\", e );\n-        }\n+      ClientAuth clientAuth = config.get(policyConfig.client_auth);\n+      boolean trustAll = config.get(policyConfig.trust_all);\n+      TrustManagerFactory trustManagerFactory;\n \n-        for ( File crl : revocationFiles )\n-        {\n-            try ( InputStream input = Files.newInputStream( crl.toPath() ) )\n-            {\n-                crls.addAll( (Collection<X509CRL>) certificateFactory.generateCRLs( input ) );\n-            }\n-            catch ( IOException | CRLException e )\n-            {\n-                throw new RuntimeException( format( \"Could not load CRL: %s\", crl ), e );\n-            }\n-        }\n+      Collection<X509CRL> crls = getCRLs(revokedCertificatesDir);\n+\n+      try\n+      {\n+        trustManagerFactory = createTrustManagerFactory(trustAll, trustedCertificatesDir, crls, clientAuth);\n+      } catch (Exception e)\n+      {\n+        throw new RuntimeException(\"Failed to create trust manager based on: \" + trustedCertificatesDir, e);\n+      }\n+\n+      List<String> tlsVersions = config.get(policyConfig.tls_versions);\n+      List<String> ciphers = config.get(policyConfig.ciphers);\n \n-        return crls;\n+      SslPolicy sslPolicy = new SslPolicy(privateKey, keyCertChain, tlsVersions, ciphers, clientAuth, trustManagerFactory, sslProvider);\n+      log.info(format(\"Loaded SSL policy '%s' = %s\", policyName, sslPolicy));\n+      policies.put(policyName, sslPolicy);\n     }\n+  }\n \n-    private X509Certificate[] loadCertificateChain( File keyCertChainFile )\n+  private Collection<X509CRL> getCRLs(File revokedCertificatesDir)\n+  {\n+    Collection<X509CRL> crls = new ArrayList<>();\n+    File[] revocationFiles = revokedCertificatesDir.listFiles();\n+\n+    if (revocationFiles == null)\n     {\n-        try\n-        {\n-            return pkiUtils.loadCertificates( keyCertChainFile );\n-        }\n-        catch ( Exception e )\n-        {\n-            throw new RuntimeException( \"Failed to load public certificate chain: \" + keyCertChainFile, e );\n-        }\n+      throw new RuntimeException(format(\"Could not find or list files in revoked directory: %s\", revokedCertificatesDir));\n     }\n \n-    private PrivateKey loadPrivateKey( File privateKeyFile, String privateKeyPassword )\n+    if (revocationFiles.length == 0)\n     {\n-        if ( privateKeyPassword != null )\n-        {\n-            // TODO: Support loading of private keys with passwords.\n-            throw new UnsupportedOperationException( \"Loading private keys with passwords is not yet supported\" );\n-        }\n+      return crls;\n+    }\n \n-        try\n-        {\n-            return pkiUtils.loadPrivateKey( privateKeyFile );\n-        }\n-        catch ( Exception e )\n-        {\n-            throw new RuntimeException( \"Failed to load private key: \" + privateKeyFile +\n-                                        (privateKeyPassword == null ? \"\" : \" (using configured password)\"), e );\n-        }\n+    CertificateFactory certificateFactory;\n+\n+    try\n+    {\n+      certificateFactory = CertificateFactory.getInstance(\"X.509\");\n+    } catch (CertificateException e)\n+    {\n+      throw new RuntimeException(\"Could not generated certificate factory\", e);\n     }\n \n-    private TrustManagerFactory createTrustManagerFactory( boolean trustAll, File trustedCertificatesDir,\n-            Collection<X509CRL> crls, ClientAuth clientAuth ) throws Exception\n+    for (File crl : revocationFiles)\n     {\n-        if ( trustAll )\n-        {\n-            return InsecureTrustManagerFactory.INSTANCE;\n-        }\n+      try (InputStream input = Files.newInputStream(crl.toPath()))\n+      {\n+        crls.addAll((Collection<X509CRL>) certificateFactory.generateCRLs(input));\n+      } catch (IOException | CRLException e)\n+      {\n+        throw new RuntimeException(format(\"Could not load CRL: %s\", crl), e);\n+      }\n+    }\n \n-        KeyStore trustStore = KeyStore.getInstance( KeyStore.getDefaultType() );\n-        trustStore.load( null, null );\n+    return crls;\n+  }\n \n-        File[] trustedCertFiles = trustedCertificatesDir.listFiles();\n+  private X509Certificate[] loadCertificateChain(File keyCertChainFile)\n+  {\n+    try\n+    {\n+      return pkiUtils.loadCertificates(keyCertChainFile);\n+    } catch (Exception e)\n+    {\n+      throw new RuntimeException(\"Failed to load public certificate chain: \" + keyCertChainFile, e);\n+    }\n+  }\n \n-        if ( trustedCertFiles == null )\n-        {\n-            throw new RuntimeException( format( \"Could not find or list files in trusted directory: %s\", trustedCertificatesDir ) );\n-        }\n-        else if ( clientAuth == ClientAuth.REQUIRE && trustedCertFiles.length == 0 )\n-        {\n-            throw new RuntimeException( format( \"Client auth is required but no trust anchors found in: %s\", trustedCertificatesDir ) );\n-        }\n+  private PrivateKey loadPrivateKey(File privateKeyFile, String privateKeyPassword)\n+  {\n+    if (privateKeyPassword != null)\n+    {\n+      // TODO: Support loading of private keys with passwords.\n+      throw new UnsupportedOperationException(\"Loading private keys with passwords is not yet supported\");\n+    }\n \n-        int i = 0;\n-        for ( File trustedCertFile : trustedCertFiles )\n-        {\n-            CertificateFactory certificateFactory = CertificateFactory.getInstance( \"X.509\" );\n-            try ( InputStream input = Files.newInputStream( trustedCertFile.toPath() ) )\n-            {\n-                while ( input.available() > 0 )\n-                {\n-                    try\n-                    {\n-                        X509Certificate cert = (X509Certificate) certificateFactory.generateCertificate( input );\n-                        trustStore.setCertificateEntry( Integer.toString( i++ ), cert );\n-                    }\n-                    catch ( Exception e )\n-                    {\n-                        throw new CertificateException( \"Error loading certificate file: \" + trustedCertFile, e );\n-                    }\n-                }\n-            }\n-        }\n+    try\n+    {\n+      return pkiUtils.loadPrivateKey(privateKeyFile);\n+    } catch (Exception e)\n+    {\n+      throw new RuntimeException(\"Failed to load private key: \" + privateKeyFile +\n+          (privateKeyPassword == null ? \"\" : \" (using configured password)\"), e);\n+    }\n+  }\n \n-        TrustManagerFactory trustManagerFactory = TrustManagerFactory.getInstance( TrustManagerFactory.getDefaultAlgorithm() );\n+  private TrustManagerFactory createTrustManagerFactory(boolean trustAll, File trustedCertificatesDir,\n+                                                        Collection<X509CRL> crls, ClientAuth clientAuth) throws Exception\n+  {\n+    if (trustAll)\n+    {\n+      return InsecureTrustManagerFactory.INSTANCE;\n+    }\n \n-        if ( !crls.isEmpty() )\n-        {\n-            PKIXBuilderParameters pkixParamsBuilder = new PKIXBuilderParameters( trustStore, new X509CertSelector() );\n-            pkixParamsBuilder.setRevocationEnabled( true );\n+    KeyStore trustStore = KeyStore.getInstance(KeyStore.getDefaultType());\n+    trustStore.load(null, null);\n \n-            pkixParamsBuilder.addCertStore( CertStore.getInstance( \"Collection\",\n-                    new CollectionCertStoreParameters( crls ) ) );\n+    File[] trustedCertFiles = trustedCertificatesDir.listFiles();\n \n-            trustManagerFactory.init( new CertPathTrustManagerParameters( pkixParamsBuilder ) );\n-        }\n-        else\n+    if (trustedCertFiles == null)\n+    {\n+      throw new RuntimeException(format(\"Could not find or list files in trusted directory: %s\", trustedCertificatesDir));\n+    } else if (clientAuth == ClientAuth.REQUIRE && trustedCertFiles.length == 0)\n+    {\n+      throw new RuntimeException(format(\"Client auth is required but no trust anchors found in: %s\", trustedCertificatesDir));\n+    }\n+\n+    int i = 0;\n+    for (File trustedCertFile : trustedCertFiles)\n+    {\n+      CertificateFactory certificateFactory = CertificateFactory.getInstance(\"X.509\");\n+      try (InputStream input = Files.newInputStream(trustedCertFile.toPath()))\n+      {\n+        while (input.available() > 0)\n         {\n-            trustManagerFactory.init( trustStore );\n+          try\n+          {\n+            X509Certificate cert = (X509Certificate) certificateFactory.generateCertificate(input);\n+            trustStore.setCertificateEntry(Integer.toString(i++), cert);\n+          } catch (Exception e)\n+          {\n+            throw new CertificateException(\"Error loading certificate file: \" + trustedCertFile, e);\n+          }\n         }\n+      }\n+    }\n+\n+    TrustManagerFactory trustManagerFactory = TrustManagerFactory.getInstance(TrustManagerFactory.getDefaultAlgorithm());\n \n-        return trustManagerFactory;\n+    if (!crls.isEmpty())\n+    {\n+      PKIXBuilderParameters pkixParamsBuilder = new PKIXBuilderParameters(trustStore, new X509CertSelector());\n+      pkixParamsBuilder.setRevocationEnabled(true);\n+\n+      pkixParamsBuilder.addCertStore(CertStore.getInstance(\"Collection\",\n+          new CollectionCertStoreParameters(crls)));\n+\n+      trustManagerFactory.init(new CertPathTrustManagerParameters(pkixParamsBuilder));\n+    } else\n+    {\n+      trustManagerFactory.init(trustStore);\n     }\n+\n+    return trustManagerFactory;\n+  }\n }\n",
            "diff_size": 381
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3537",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "39",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3537/Vote.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3537/Vote.java\nindex c004295c221..1478c5b4b9e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3537/Vote.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3537/Vote.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.cluster.protocol.atomicbroadcast.multipaxos;\n \n import org.neo4j.cluster.InstanceId;\n@@ -30,65 +31,65 @@ import org.neo4j.cluster.protocol.election.ElectionCredentialsProvider;\n  * Votes are comparable so that they can be ordered to find winner. Credentials implement the comparison rules.\n  */\n public class Vote\n-        implements Comparable<Vote>\n+    implements Comparable<Vote>\n {\n-    private final InstanceId suggestedNode;\n-    private final ElectionCredentials voteCredentials;\n+  private final InstanceId suggestedNode;\n+  private final ElectionCredentials voteCredentials;\n \n-    public Vote( InstanceId suggestedNode, ElectionCredentials voteCredentials )\n-    {\n-        this.suggestedNode = suggestedNode;\n-        this.voteCredentials = voteCredentials;\n-    }\n+  public Vote(InstanceId suggestedNode, ElectionCredentials voteCredentials)\n+  {\n+    this.suggestedNode = suggestedNode;\n+    this.voteCredentials = voteCredentials;\n+  }\n \n-    public org.neo4j.cluster.InstanceId getSuggestedNode()\n-    {\n-        return suggestedNode;\n-    }\n+  public org.neo4j.cluster.InstanceId getSuggestedNode()\n+  {\n+    return suggestedNode;\n+  }\n \n-    public Comparable<ElectionCredentials> getCredentials()\n-    {\n-        return voteCredentials;\n-    }\n+  public Comparable<ElectionCredentials> getCredentials()\n+  {\n+    return voteCredentials;\n+  }\n \n-    @Override\n-    public String toString()\n-    {\n-        return suggestedNode + \":\" + voteCredentials;\n-    }\n+  @Override\n+  public String toString()\n+  {\n+    return suggestedNode + \":\" + voteCredentials;\n+  }\n+\n+  @Override\n+  public int compareTo(Vote o)\n+  {\n+    return this.voteCredentials.compareTo(o.voteCredentials);\n+  }\n \n-    @Override\n-    public int compareTo( Vote o )\n+  @Override\n+  public boolean equals(Object o)\n+  {\n+    if (this == o)\n     {\n-        return this.voteCredentials.compareTo( o.voteCredentials );\n+      return true;\n     }\n-\n-    @Override\n-    public boolean equals( Object o )\n+    if (o == null || getClass() != o.getClass())\n     {\n-        if ( this == o )\n-        {\n-            return true;\n-        }\n-        if ( o == null || getClass() != o.getClass() )\n-        {\n-            return false;\n-        }\n-\n-        Vote vote = (Vote) o;\n-\n-        if ( !suggestedNode.equals( vote.suggestedNode ) )\n-        {\n-            return false;\n-        }\n-        return voteCredentials.equals( vote.voteCredentials );\n+      return false;\n     }\n \n-    @Override\n-    public int hashCode()\n+    Vote vote = (Vote) o;\n+\n+    if (!suggestedNode.equals(vote.suggestedNode))\n     {\n-        int result = suggestedNode.hashCode();\n-        result = 31 * result + voteCredentials.hashCode();\n-        return result;\n+      return false;\n     }\n+    return voteCredentials.equals(vote.voteCredentials);\n+  }\n+\n+  @Override\n+  public int hashCode()\n+  {\n+    int result = suggestedNode.hashCode();\n+    result = 31 * result + voteCredentials.hashCode();\n+    return result;\n+  }\n }\n",
            "diff_size": 68
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3537/Vote.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3537/Vote.java\nindex c004295c221..6b6ec3f0951 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3537/Vote.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3537/Vote.java\n@@ -29,8 +29,7 @@ import org.neo4j.cluster.protocol.election.ElectionCredentialsProvider;\n  * <p/>\n  * Votes are comparable so that they can be ordered to find winner. Credentials implement the comparison rules.\n  */\n-public class Vote\n-        implements Comparable<Vote>\n+public class Vote implements Comparable<Vote>\n {\n     private final InstanceId suggestedNode;\n     private final ElectionCredentials voteCredentials;\n@@ -70,7 +69,8 @@ public class Vote\n         {\n             return true;\n         }\n-        if ( o == null || getClass() != o.getClass() )\n+\n+if ( o == null || getClass() != o.getClass() )\n         {\n             return false;\n         }\n@@ -81,7 +81,8 @@ public class Vote\n         {\n             return false;\n         }\n-        return voteCredentials.equals( vote.voteCredentials );\n+\n+return voteCredentials.equals( vote.voteCredentials );\n     }\n \n     @Override\n@@ -91,4 +92,4 @@ public class Vote\n         result = 31 * result + voteCredentials.hashCode();\n         return result;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
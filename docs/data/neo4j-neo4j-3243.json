{
    "project_name": "neo4j-neo4j",
    "error_id": "3243",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "40",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "125",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "145",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "132",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "122",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "134",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "144",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "144",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "133",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "175",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "176",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "125",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "190",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "190",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "195",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "195",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "203",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "204",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "212",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "212",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "219",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "219",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "226",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "226",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "228",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "228",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "233",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "233",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "238",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "238",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "245",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "245",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "247",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "247",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "251",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "251",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "257",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "257",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "259",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "259",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "263",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "263",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "267",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "267",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/3243/RelationshipCreator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/3243/RelationshipCreator.java\nindex ceda8e738aa..20e56eeaf17 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/3243/RelationshipCreator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/3243/RelationshipCreator.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.internal.recordstorage;\n \n import org.neo4j.internal.recordstorage.RecordAccess.RecordProxy;\n@@ -36,7 +37,7 @@ public class RelationshipCreator\n     private final int denseNodeThreshold;\n     private final PageCursorTracer cursorTracer;\n \n-    public RelationshipCreator( RelationshipGroupGetter relGroupGetter, int denseNodeThreshold, PageCursorTracer cursorTracer )\n+    public RelationshipCreator(RelationshipGroupGetter relGroupGetter, int denseNodeThreshold, PageCursorTracer cursorTracer)\n     {\n         this.relGroupGetter = relGroupGetter;\n         this.denseNodeThreshold = denseNodeThreshold;\n@@ -47,64 +48,64 @@ public class RelationshipCreator\n      * Creates a relationship with the given id, from the nodes identified by id\n      * and of type typeId\n      *\n-     * @param id The id of the relationship to create.\n-     * @param type The id of the relationship type this relationship will\n-     *            have.\n-     * @param firstNodeId The id of the start node.\n+     * @param id           The id of the relationship to create.\n+     * @param type         The id of the relationship type this relationship will\n+     *                     have.\n+     * @param firstNodeId  The id of the start node.\n      * @param secondNodeId The id of the end node.\n      */\n-    public void relationshipCreate( long id, int type, long firstNodeId, long secondNodeId, RecordAccessSet recordChangeSet, ResourceLocker locks )\n+    public void relationshipCreate(long id, int type, long firstNodeId, long secondNodeId, RecordAccessSet recordChangeSet, ResourceLocker locks)\n     {\n-        RecordProxy<NodeRecord,Void> firstNode = recordChangeSet.getNodeRecords().getOrLoad( firstNodeId, null, cursorTracer );\n-        RecordProxy<NodeRecord,Void> secondNode =\n-                firstNodeId == secondNodeId ? firstNode : recordChangeSet.getNodeRecords().getOrLoad( secondNodeId, null, cursorTracer );\n-        convertNodeToDenseIfNecessary( firstNode, recordChangeSet.getRelRecords(),\n-                recordChangeSet.getRelGroupRecords(), locks );\n-        convertNodeToDenseIfNecessary( secondNode, recordChangeSet.getRelRecords(),\n-                recordChangeSet.getRelGroupRecords(), locks );\n-        RelationshipRecord record = recordChangeSet.getRelRecords().create( id, null, cursorTracer ).forChangingLinkage();\n-        record.setLinks( firstNodeId, secondNodeId, type );\n-        record.setInUse( true );\n+        RecordProxy<NodeRecord, Void> firstNode = recordChangeSet.getNodeRecords().getOrLoad(firstNodeId, null, cursorTracer);\n+        RecordProxy<NodeRecord, Void> secondNode =\n+          firstNodeId == secondNodeId ? firstNode : recordChangeSet.getNodeRecords().getOrLoad(secondNodeId, null, cursorTracer);\n+        convertNodeToDenseIfNecessary(firstNode, recordChangeSet.getRelRecords(),\n+          recordChangeSet.getRelGroupRecords(), locks);\n+        convertNodeToDenseIfNecessary(secondNode, recordChangeSet.getRelRecords(),\n+          recordChangeSet.getRelGroupRecords(), locks);\n+        RelationshipRecord record = recordChangeSet.getRelRecords().create(id, null, cursorTracer).forChangingLinkage();\n+        record.setLinks(firstNodeId, secondNodeId, type);\n+        record.setInUse(true);\n         record.setCreated();\n-        connectRelationship( firstNode, secondNode, record, recordChangeSet.getRelRecords(),\n-                recordChangeSet.getRelGroupRecords(), locks );\n+        connectRelationship(firstNode, secondNode, record, recordChangeSet.getRelRecords(),\n+          recordChangeSet.getRelGroupRecords(), locks);\n     }\n \n-    static int relCount( long nodeId, RelationshipRecord rel )\n+    static int relCount(long nodeId, RelationshipRecord rel)\n     {\n         return (int) (nodeId == rel.getFirstNode() ? rel.getFirstPrevRel() : rel.getSecondPrevRel());\n     }\n \n-    private void convertNodeToDenseIfNecessary( RecordProxy<NodeRecord,Void> nodeChange,\n-            RecordAccess<RelationshipRecord, Void> relRecords,\n-            RecordAccess<RelationshipGroupRecord, Integer> relGroupRecords, ResourceLocker locks )\n+    private void convertNodeToDenseIfNecessary(RecordProxy<NodeRecord, Void> nodeChange,\n+                                               RecordAccess<RelationshipRecord, Void> relRecords,\n+                                               RecordAccess<RelationshipGroupRecord, Integer> relGroupRecords, ResourceLocker locks)\n     {\n         NodeRecord node = nodeChange.forReadingLinkage();\n-        if ( node.isDense() )\n+        if (node.isDense())\n         {\n             return;\n         }\n         long relId = node.getNextRel();\n-        if ( relId != Record.NO_NEXT_RELATIONSHIP.intValue() )\n+        if (relId != Record.NO_NEXT_RELATIONSHIP.intValue())\n         {\n-            RecordProxy<RelationshipRecord, Void> relChange = relRecords.getOrLoad( relId, null, cursorTracer );\n+            RecordProxy<RelationshipRecord, Void> relChange = relRecords.getOrLoad(relId, null, cursorTracer);\n             RelationshipRecord rel = relChange.forReadingLinkage();\n-            if ( relCount( node.getId(), rel ) >= denseNodeThreshold )\n+            if (relCount(node.getId(), rel) >= denseNodeThreshold)\n             {\n-                locks.acquireExclusive( LockTracer.NONE, ResourceTypes.RELATIONSHIP, relId );\n+                locks.acquireExclusive(LockTracer.NONE, ResourceTypes.RELATIONSHIP, relId);\n                 // Re-read the record after we've locked it since another transaction might have\n                 // changed in the meantime.\n-                relChange = relRecords.getOrLoad( relId, null, cursorTracer );\n+                relChange = relRecords.getOrLoad(relId, null, cursorTracer);\n \n-                convertNodeToDenseNode( nodeChange, relChange.forChangingLinkage(), relRecords, relGroupRecords, locks );\n+                convertNodeToDenseNode(nodeChange, relChange.forChangingLinkage(), relRecords, relGroupRecords, locks);\n             }\n         }\n     }\n \n-    private void connectRelationship( RecordProxy<NodeRecord,Void> firstNodeChange,\n-            RecordProxy<NodeRecord,Void> secondNodeChange, RelationshipRecord rel,\n-            RecordAccess<RelationshipRecord, Void> relRecords,\n-            RecordAccess<RelationshipGroupRecord, Integer> relGroupRecords, ResourceLocker locks )\n+    private void connectRelationship(RecordProxy<NodeRecord, Void> firstNodeChange,\n+                                     RecordProxy<NodeRecord, Void> secondNodeChange, RelationshipRecord rel,\n+                                     RecordAccess<RelationshipRecord, Void> relRecords,\n+                                     RecordAccess<RelationshipGroupRecord, Integer> relGroupRecords, ResourceLocker locks)\n     {\n         // Assertion interpreted: if node is a normal node and we're trying to create a\n         // relationship that we already have as first rel for that node --> error\n@@ -113,159 +114,156 @@ public class RelationshipCreator\n         assert firstNode.getNextRel() != rel.getId() || firstNode.isDense();\n         assert secondNode.getNextRel() != rel.getId() || secondNode.isDense();\n \n-        if ( !firstNode.isDense() )\n+        if (!firstNode.isDense())\n         {\n-            rel.setFirstNextRel( firstNode.getNextRel() );\n+            rel.setFirstNextRel(firstNode.getNextRel());\n         }\n-        if ( !secondNode.isDense() )\n+        if (!secondNode.isDense())\n         {\n-            rel.setSecondNextRel( secondNode.getNextRel() );\n+            rel.setSecondNextRel(secondNode.getNextRel());\n         }\n \n-        if ( !firstNode.isDense() )\n+        if (!firstNode.isDense())\n         {\n-            connect( firstNode, rel, relRecords, locks );\n-        }\n-        else\n+            connect(firstNode, rel, relRecords, locks);\n+        } else\n         {\n-            connectRelationshipToDenseNode( firstNodeChange, rel, relRecords, relGroupRecords, locks );\n+            connectRelationshipToDenseNode(firstNodeChange, rel, relRecords, relGroupRecords, locks);\n         }\n \n-        if ( !secondNode.isDense() )\n+        if (!secondNode.isDense())\n         {\n-            if ( firstNode.getId() != secondNode.getId() )\n+            if (firstNode.getId() != secondNode.getId())\n             {\n-                connect( secondNode, rel, relRecords, locks );\n-            }\n-            else\n+                connect(secondNode, rel, relRecords, locks);\n+            } else\n             {\n-                rel.setFirstInFirstChain( true );\n-                rel.setSecondPrevRel( rel.getFirstPrevRel() );\n+                rel.setFirstInFirstChain(true);\n+                rel.setSecondPrevRel(rel.getFirstPrevRel());\n             }\n-        }\n-        else if ( firstNode.getId() != secondNode.getId() )\n+        } else if (firstNode.getId() != secondNode.getId())\n         {\n-            connectRelationshipToDenseNode( secondNodeChange, rel, relRecords, relGroupRecords, locks );\n+            connectRelationshipToDenseNode(secondNodeChange, rel, relRecords, relGroupRecords, locks);\n         }\n \n-        if ( !firstNode.isDense() )\n+        if (!firstNode.isDense())\n         {\n             firstNodeChange.forChangingLinkage();\n-            firstNode.setNextRel( rel.getId() );\n+            firstNode.setNextRel(rel.getId());\n         }\n-        if ( !secondNode.isDense() )\n+        if (!secondNode.isDense())\n         {\n             secondNodeChange.forChangingLinkage();\n-            secondNode.setNextRel( rel.getId() );\n+            secondNode.setNextRel(rel.getId());\n         }\n     }\n \n-    private void connectRelationshipToDenseNode( RecordProxy<NodeRecord,Void> nodeChange, RelationshipRecord rel,\n-            RecordAccess<RelationshipRecord, Void> relRecords,\n-            RecordAccess<RelationshipGroupRecord, Integer> relGroupRecords, ResourceLocker locks )\n+    private void connectRelationshipToDenseNode(RecordProxy<NodeRecord, Void> nodeChange, RelationshipRecord rel,\n+                                                RecordAccess<RelationshipRecord, Void> relRecords,\n+                                                RecordAccess<RelationshipGroupRecord, Integer> relGroupRecords, ResourceLocker locks)\n     {\n-        var relationshipGroup = relGroupGetter.getOrCreateRelationshipGroup( nodeChange, rel.getType(), relGroupRecords );\n+        var relationshipGroup = relGroupGetter.getOrCreateRelationshipGroup(nodeChange, rel.getType(), relGroupRecords);\n         RelationshipGroupRecord group = relationshipGroup.forChangingData();\n         NodeRecord node = nodeChange.forReadingLinkage();\n-        DirectionWrapper dir = DirectionIdentifier.wrapDirection( rel, node );\n-        long nextRel = dir.getNextRel( group );\n-        setCorrectNextRel( node, rel, nextRel );\n-        connect( node.getId(), nextRel, rel, relRecords, locks );\n-        dir.setNextRel( group, rel.getId() );\n+        DirectionWrapper dir = DirectionIdentifier.wrapDirection(rel, node);\n+        long nextRel = dir.getNextRel(group);\n+        setCorrectNextRel(node, rel, nextRel);\n+        connect(node.getId(), nextRel, rel, relRecords, locks);\n+        dir.setNextRel(group, rel.getId());\n     }\n \n-    private void connect( NodeRecord node, RelationshipRecord rel,\n-            RecordAccess<RelationshipRecord, Void> relRecords, ResourceLocker locks )\n+    private void connect(NodeRecord node, RelationshipRecord rel,\n+                         RecordAccess<RelationshipRecord, Void> relRecords, ResourceLocker locks)\n     {\n-        connect( node.getId(), node.getNextRel(), rel, relRecords, locks );\n+        connect(node.getId(), node.getNextRel(), rel, relRecords, locks);\n     }\n \n-    private void convertNodeToDenseNode( RecordProxy<NodeRecord,Void> nodeChange, RelationshipRecord firstRel,\n-            RecordAccess<RelationshipRecord, Void> relRecords,\n-            RecordAccess<RelationshipGroupRecord, Integer> relGroupRecords, ResourceLocker locks )\n+    private void convertNodeToDenseNode(RecordProxy<NodeRecord, Void> nodeChange, RelationshipRecord firstRel,\n+                                        RecordAccess<RelationshipRecord, Void> relRecords,\n+                                        RecordAccess<RelationshipGroupRecord, Integer> relGroupRecords, ResourceLocker locks)\n     {\n         NodeRecord node = nodeChange.forChangingLinkage();\n-        node.setDense( true );\n-        node.setNextRel( Record.NO_NEXT_RELATIONSHIP.intValue() );\n+        node.setDense(true);\n+        node.setNextRel(Record.NO_NEXT_RELATIONSHIP.intValue());\n         long relId = firstRel.getId();\n         RelationshipRecord relRecord = firstRel;\n-        while ( relId != Record.NO_NEXT_RELATIONSHIP.intValue() )\n+        while (relId != Record.NO_NEXT_RELATIONSHIP.intValue())\n         {\n             // Get the next relationship id before connecting it (where linkage is overwritten)\n-            relId = relChain( relRecord, node.getId() ).get( relRecord );\n-            connectRelationshipToDenseNode( nodeChange, relRecord, relRecords, relGroupRecords, locks );\n-            if ( relId != Record.NO_NEXT_RELATIONSHIP.intValue() )\n+            relId = relChain(relRecord, node.getId()).get(relRecord);\n+            connectRelationshipToDenseNode(nodeChange, relRecord, relRecords, relGroupRecords, locks);\n+            if (relId != Record.NO_NEXT_RELATIONSHIP.intValue())\n             {   // Lock and load the next relationship in the chain\n-                locks.acquireExclusive( LockTracer.NONE, ResourceTypes.RELATIONSHIP, relId );\n-                relRecord = relRecords.getOrLoad( relId, null, cursorTracer ).forChangingLinkage();\n+                locks.acquireExclusive(LockTracer.NONE, ResourceTypes.RELATIONSHIP, relId);\n+                relRecord = relRecords.getOrLoad(relId, null, cursorTracer).forChangingLinkage();\n             }\n         }\n     }\n \n-    private void connect( long nodeId, long firstRelId, RelationshipRecord rel,\n-            RecordAccess<RelationshipRecord, Void> relRecords, ResourceLocker locks )\n+    private void connect(long nodeId, long firstRelId, RelationshipRecord rel,\n+                         RecordAccess<RelationshipRecord, Void> relRecords, ResourceLocker locks)\n     {\n         long newCount = 1;\n-        if ( firstRelId != Record.NO_NEXT_RELATIONSHIP.intValue() )\n+        if (firstRelId != Record.NO_NEXT_RELATIONSHIP.intValue())\n         {\n-            locks.acquireExclusive( LockTracer.NONE, ResourceTypes.RELATIONSHIP, firstRelId );\n-            RelationshipRecord firstRel = relRecords.getOrLoad( firstRelId, null, cursorTracer ).forChangingLinkage();\n+            locks.acquireExclusive(LockTracer.NONE, ResourceTypes.RELATIONSHIP, firstRelId);\n+            RelationshipRecord firstRel = relRecords.getOrLoad(firstRelId, null, cursorTracer).forChangingLinkage();\n             boolean changed = false;\n-            if ( firstRel.getFirstNode() == nodeId )\n+            if (firstRel.getFirstNode() == nodeId)\n             {\n                 newCount = firstRel.getFirstPrevRel() + 1;\n-                firstRel.setFirstPrevRel( rel.getId() );\n-                firstRel.setFirstInFirstChain( false );\n+                firstRel.setFirstPrevRel(rel.getId());\n+                firstRel.setFirstInFirstChain(false);\n                 changed = true;\n             }\n-            if ( firstRel.getSecondNode() == nodeId )\n+            if (firstRel.getSecondNode() == nodeId)\n             {\n                 newCount = firstRel.getSecondPrevRel() + 1;\n-                firstRel.setSecondPrevRel( rel.getId() );\n-                firstRel.setFirstInSecondChain( false );\n+                firstRel.setSecondPrevRel(rel.getId());\n+                firstRel.setFirstInSecondChain(false);\n                 changed = true;\n             }\n-            if ( !changed )\n+            if (!changed)\n             {\n-                throw new InvalidRecordException( nodeId + \" doesn't match \" + firstRel );\n+                throw new InvalidRecordException(nodeId + \" doesn't match \" + firstRel);\n             }\n         }\n \n         // Set the relationship count\n-        if ( rel.getFirstNode() == nodeId )\n+        if (rel.getFirstNode() == nodeId)\n         {\n-            rel.setFirstPrevRel( newCount );\n-            rel.setFirstInFirstChain( true );\n+            rel.setFirstPrevRel(newCount);\n+            rel.setFirstInFirstChain(true);\n         }\n-        if ( rel.getSecondNode() == nodeId )\n+        if (rel.getSecondNode() == nodeId)\n         {\n-            rel.setSecondPrevRel( newCount );\n-            rel.setFirstInSecondChain( true );\n+            rel.setSecondPrevRel(newCount);\n+            rel.setFirstInSecondChain(true);\n         }\n     }\n \n-    private void setCorrectNextRel( NodeRecord node, RelationshipRecord rel, long nextRel )\n+    private void setCorrectNextRel(NodeRecord node, RelationshipRecord rel, long nextRel)\n     {\n-        if ( node.getId() == rel.getFirstNode() )\n+        if (node.getId() == rel.getFirstNode())\n         {\n-            rel.setFirstNextRel( nextRel );\n+            rel.setFirstNextRel(nextRel);\n         }\n-        if ( node.getId() == rel.getSecondNode() )\n+        if (node.getId() == rel.getSecondNode())\n         {\n-            rel.setSecondNextRel( nextRel );\n+            rel.setSecondNextRel(nextRel);\n         }\n     }\n \n-    private static RelationshipConnection relChain( RelationshipRecord rel, long nodeId )\n+    private static RelationshipConnection relChain(RelationshipRecord rel, long nodeId)\n     {\n-        if ( rel.getFirstNode() == nodeId )\n+        if (rel.getFirstNode() == nodeId)\n         {\n             return RelationshipConnection.START_NEXT;\n         }\n-        if ( rel.getSecondNode() == nodeId )\n+        if (rel.getSecondNode() == nodeId)\n         {\n             return RelationshipConnection.END_NEXT;\n         }\n-        throw new RuntimeException( nodeId + \" neither start not end node in \" + rel );\n+        throw new RuntimeException(nodeId + \" neither start not end node in \" + rel);\n     }\n }\n",
            "diff_size": 108
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
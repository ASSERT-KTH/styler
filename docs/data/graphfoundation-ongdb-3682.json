{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3682",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "48",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3682/GraphDatabaseQueryService.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3682/GraphDatabaseQueryService.java\nindex e34b6b14fe0..229130bbb8c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3682/GraphDatabaseQueryService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3682/GraphDatabaseQueryService.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel;\n \n import java.net.URL;\n@@ -35,30 +36,30 @@ import org.neo4j.kernel.impl.coreapi.InternalTransaction;\n  */\n public interface GraphDatabaseQueryService\n {\n-    DependencyResolver getDependencyResolver();\n+  DependencyResolver getDependencyResolver();\n \n-    /**\n-     * Begin new internal transaction with with default timeout.\n-     *\n-     * @param type transaction type\n-     * @param loginContext transaction login context\n-     * @return internal transaction\n-     */\n-    InternalTransaction beginTransaction( KernelTransaction.Type type, LoginContext loginContext );\n+  /**\n+   * Begin new internal transaction with with default timeout.\n+   *\n+   * @param type         transaction type\n+   * @param loginContext transaction login context\n+   * @return internal transaction\n+   */\n+  InternalTransaction beginTransaction(KernelTransaction.Type type, LoginContext loginContext);\n \n-    /**\n-     * Begin new internal transaction with specified timeout in milliseconds.\n-     *\n-     * @param type transaction type\n-     * @param loginContext transaction login context\n-     * @param timeout transaction timeout\n-     * @param unit time unit of timeout argument\n-     * @return internal transaction\n-     */\n-    InternalTransaction beginTransaction( KernelTransaction.Type type, LoginContext loginContext, long timeout,\n-            TimeUnit unit );\n+  /**\n+   * Begin new internal transaction with specified timeout in milliseconds.\n+   *\n+   * @param type         transaction type\n+   * @param loginContext transaction login context\n+   * @param timeout      transaction timeout\n+   * @param unit         time unit of timeout argument\n+   * @return internal transaction\n+   */\n+  InternalTransaction beginTransaction(KernelTransaction.Type type, LoginContext loginContext, long timeout,\n+                                       TimeUnit unit);\n \n-    URL validateURLAccess( URL url ) throws URLAccessValidationError;\n+  URL validateURLAccess(URL url) throws URLAccessValidationError;\n \n-    DbmsOperations getDbmsOperations();\n+  DbmsOperations getDbmsOperations();\n }\n",
            "diff_size": 23
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3682/GraphDatabaseQueryService.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3682/GraphDatabaseQueryService.java\nindex e34b6b14fe0..b913828030d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3682/GraphDatabaseQueryService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3682/GraphDatabaseQueryService.java\n@@ -57,8 +57,7 @@ public interface GraphDatabaseQueryService\n      */\n     InternalTransaction beginTransaction( KernelTransaction.Type type, LoginContext loginContext, long timeout,\n             TimeUnit unit );\n-\n-    URL validateURLAccess( URL url ) throws URLAccessValidationError;\n+URL validateURLAccess( URL url ) throws URLAccessValidationError;\n \n     DbmsOperations getDbmsOperations();\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "48",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 221).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "59",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 608).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "59",
                    "column": "608",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3682/GraphDatabaseQueryService.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/3682/GraphDatabaseQueryService.java\nindex e34b6b14fe0..022f1d66681 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3682/GraphDatabaseQueryService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/3682/GraphDatabaseQueryService.java\n@@ -21,7 +21,6 @@ package org.neo4j.kernel;\n \n import java.net.URL;\n import java.util.concurrent.TimeUnit;\n-\n import org.neo4j.graphdb.DependencyResolver;\n import org.neo4j.graphdb.security.URLAccessValidationError;\n import org.neo4j.internal.kernel.api.security.LoginContext;\n@@ -33,9 +32,11 @@ import org.neo4j.kernel.impl.coreapi.InternalTransaction;\n  * This is a trimmed down version of GraphDatabaseService and GraphDatabaseAPI, limited to a subset of functions needed\n  * by implementations of QueryExecutionEngine.\n  */\n+\n public interface GraphDatabaseQueryService\n {\n-    DependencyResolver getDependencyResolver();\n+    DependencyResolver getDependencyResolver()\n+    ;\n \n     /**\n      * Begin new internal transaction with with default timeout.\n@@ -43,8 +44,8 @@ public interface GraphDatabaseQueryService\n      * @param type transaction type\n      * @param loginContext transaction login context\n      * @return internal transaction\n-     */\n-    InternalTransaction beginTransaction( KernelTransaction.Type type, LoginContext loginContext );\n+     */ InternalTransaction beginTransaction( KernelTransaction.Type type, LoginContext loginContext )\n+                                                                                                                                                                                                                            ;\n \n     /**\n      * Begin new internal transaction with specified timeout in milliseconds.\n@@ -54,11 +55,8 @@ public interface GraphDatabaseQueryService\n      * @param timeout transaction timeout\n      * @param unit time unit of timeout argument\n      * @return internal transaction\n-     */\n-    InternalTransaction beginTransaction( KernelTransaction.Type type, LoginContext loginContext, long timeout,\n-            TimeUnit unit );\n-\n-    URL validateURLAccess( URL url ) throws URLAccessValidationError;\n-\n-    DbmsOperations getDbmsOperations();\n-}\n+     */ InternalTransaction beginTransaction( KernelTransaction.Type type, LoginContext loginContext, long timeout, TimeUnit unit )\nvalidateURLAccess( URL url ) throws URLAccessValidationError ;\n+    DbmsOperations getDbmsOperations()\n+    ;\n+}\n\\ No newline at end of file\n",
            "diff_size": 14
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4366",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "31",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "31",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "102",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4366/InconsistencyReport.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4366/InconsistencyReport.java\nindex 6b0bc56a2de..160060d7281 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4366/InconsistencyReport.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4366/InconsistencyReport.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.consistency.report;\n \n import org.neo4j.consistency.RecordType;\n@@ -24,43 +25,43 @@ import org.neo4j.kernel.impl.store.record.AbstractBaseRecord;\n \n public class InconsistencyReport implements InconsistencyLogger\n {\n-    private final InconsistencyLogger logger;\n-    private final ConsistencySummaryStatistics summary;\n+  private final InconsistencyLogger logger;\n+  private final ConsistencySummaryStatistics summary;\n \n-    public InconsistencyReport( InconsistencyLogger logger, ConsistencySummaryStatistics summary )\n-    {\n-        this.logger = logger;\n-        this.summary = summary;\n-    }\n+  public InconsistencyReport(InconsistencyLogger logger, ConsistencySummaryStatistics summary)\n+  {\n+    this.logger = logger;\n+    this.summary = summary;\n+  }\n \n-    @Override\n-    public void error( RecordType recordType, AbstractBaseRecord record, String message, Object[] args )\n-    {\n-        logger.error( recordType, record, message, args );\n-    }\n+  @Override\n+  public void error(RecordType recordType, AbstractBaseRecord record, String message, Object[] args)\n+  {\n+    logger.error(recordType, record, message, args);\n+  }\n \n-    @Override\n-    public void error( RecordType recordType, AbstractBaseRecord oldRecord, AbstractBaseRecord newRecord,\n-                       String message, Object[] args )\n-    {\n-        logger.error( recordType, oldRecord, newRecord, message, args );\n-    }\n+  @Override\n+  public void error(RecordType recordType, AbstractBaseRecord oldRecord, AbstractBaseRecord newRecord,\n+                    String message, Object[] args)\n+  {\n+    logger.error(recordType, oldRecord, newRecord, message, args);\n+  }\n \n-    @Override\n-    public void warning( RecordType recordType, AbstractBaseRecord record, String message, Object[] args )\n-    {\n-        logger.warning( recordType, record, message, args );\n-    }\n+  @Override\n+  public void warning(RecordType recordType, AbstractBaseRecord record, String message, Object[] args)\n+  {\n+    logger.warning(recordType, record, message, args);\n+  }\n \n-    @Override\n-    public void warning( RecordType recordType, AbstractBaseRecord oldRecord, AbstractBaseRecord newRecord,\n-                         String message, Object[] args )\n-    {\n-        logger.warning( recordType, oldRecord, newRecord, message, args );\n-    }\n+  @Override\n+  public void warning(RecordType recordType, AbstractBaseRecord oldRecord, AbstractBaseRecord newRecord,\n+                      String message, Object[] args)\n+  {\n+    logger.warning(recordType, oldRecord, newRecord, message, args);\n+  }\n \n-    void updateSummary( RecordType type, int errors, int warnings )\n-    {\n-        summary.update( type, errors, warnings );\n-    }\n+  void updateSummary(RecordType type, int errors, int warnings)\n+  {\n+    summary.update(type, errors, warnings);\n+  }\n }\n",
            "diff_size": 34
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4366/InconsistencyReport.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4366/InconsistencyReport.java\nindex 6b0bc56a2de..34dc04d521d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4366/InconsistencyReport.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4366/InconsistencyReport.java\n@@ -40,9 +40,8 @@ public class InconsistencyReport implements InconsistencyLogger\n     }\n \n     @Override\n-    public void error( RecordType recordType, AbstractBaseRecord oldRecord, AbstractBaseRecord newRecord,\n-                       String message, Object[] args )\n-    {\n+    public void error( RecordType recordType, AbstractBaseRecord oldRecord, AbstractBaseRecord newRecord, String message, Object[] args )\n+{\n         logger.error( recordType, oldRecord, newRecord, message, args );\n     }\n \n@@ -53,9 +52,8 @@ public class InconsistencyReport implements InconsistencyLogger\n     }\n \n     @Override\n-    public void warning( RecordType recordType, AbstractBaseRecord oldRecord, AbstractBaseRecord newRecord,\n-                         String message, Object[] args )\n-    {\n+    public void warning( RecordType recordType, AbstractBaseRecord oldRecord, AbstractBaseRecord newRecord, String message, Object[] args )\n+{\n         logger.warning( recordType, oldRecord, newRecord, message, args );\n     }\n \n@@ -63,4 +61,4 @@ public class InconsistencyReport implements InconsistencyLogger\n     {\n         summary.update( type, errors, warnings );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4366/InconsistencyReport.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/4366/InconsistencyReport.java\nindex 6b0bc56a2de..d879a478bd8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4366/InconsistencyReport.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/4366/InconsistencyReport.java\n@@ -40,8 +40,7 @@ public class InconsistencyReport implements InconsistencyLogger\n     }\n \n     @Override\n-    public void error( RecordType recordType, AbstractBaseRecord oldRecord, AbstractBaseRecord newRecord,\n-                       String message, Object[] args )\n+    public void error( RecordType recordType, AbstractBaseRecord oldRecord, AbstractBaseRecord newRecord, String message, Object[] args )\n     {\n         logger.error( recordType, oldRecord, newRecord, message, args );\n     }\n@@ -53,8 +52,7 @@ public class InconsistencyReport implements InconsistencyLogger\n     }\n \n     @Override\n-    public void warning( RecordType recordType, AbstractBaseRecord oldRecord, AbstractBaseRecord newRecord,\n-                         String message, Object[] args )\n+    public void warning( RecordType recordType, AbstractBaseRecord oldRecord, AbstractBaseRecord newRecord, String message, Object[] args )\n     {\n         logger.warning( recordType, oldRecord, newRecord, message, args );\n     }\n@@ -63,4 +61,4 @@ public class InconsistencyReport implements InconsistencyLogger\n     {\n         summary.update( type, errors, warnings );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
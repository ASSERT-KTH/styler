{
    "project_name": "bakdata-conquery",
    "error_id": "629",
    "information": {
        "errors": [
            {
                "line": "63",
                "column": "17",
                "severity": "warning",
                "message": "'}' at column 5 should be alone on a line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
            }
        ]
    },
    "source_code": "\t\t\t\ttry {\n\t\t\t\t\tpassed &= (Boolean)m.invoke(obj, context);\n\t\t\t\t} catch (IllegalAccessException | IllegalArgumentException | InvocationTargetException e) {\n\t\t\t\t\tthrow new IllegalStateException(e);\n\t\t\t\t}\n\t\t\t}",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "63",
                    "column": "17",
                    "severity": "warning",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "25",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "27",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "29",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "31",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "32",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "33",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "34",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "37",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "39",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "41",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "42",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "43",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "45",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "46",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "47",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "48",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "49",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "50",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "51",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "52",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "54",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "55",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "56",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "57",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "59",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "60",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "61",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "62",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "63",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "64",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "64",
                    "column": "17",
                    "severity": "warning",
                    "message": "'}' at column 17 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "65",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "66",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "67",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "68",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "69",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "70",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/629/DetailedValid.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/intellij/629/DetailedValid.java\nindex 7358e7a1e52..54e6b0d8323 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/629/DetailedValid.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/intellij/629/DetailedValid.java\n@@ -17,56 +17,57 @@ import com.bakdata.conquery.models.exceptions.validators.DetailedValid.DetailedV\n import com.google.common.collect.HashMultimap;\n import com.google.common.collect.Multimap;\n \n-@Target({ ElementType.TYPE, ElementType.ANNOTATION_TYPE })\n+@Target({ElementType.TYPE, ElementType.ANNOTATION_TYPE})\n @Retention(RetentionPolicy.RUNTIME)\n @Constraint(validatedBy = DetailedValidValidator.class)\n public @interface DetailedValid {\n \n-\tString message() default \"\";\n-\t\n-\tClass<?>[] groups() default { };\n-\n-\tClass<? extends Payload>[] payload() default { };\n-\t\n-\t@Target(ElementType.METHOD)\n-\t@Retention(RetentionPolicy.RUNTIME)\n-\t@interface ValidationMethod2 {}\n-\t\n-\t\n-\tclass DetailedValidValidator implements ConstraintValidator<DetailedValid, Object> {\n-\t\t\n-\t\tprivate final Multimap<Class<?>, Method> methods = HashMultimap.create();\n-\t\t\n-\t\t@Override\n-\t\tpublic void initialize(DetailedValid anno) {\n-\t\t}\n-\n-\t\t@Override\n-\t\tpublic boolean isValid(Object obj, ConstraintValidatorContext context) {\n-\t\t\tClass<?> cl = obj.getClass();\n-\t\t\tif(!methods.containsKey(cl)) {\n-\t\t\t\tfor(Method m:obj.getClass().getMethods()) {\n-\t\t\t\t\tif(m.isAnnotationPresent(ValidationMethod2.class)\n-\t\t\t\t\t\t\t&& boolean.class.equals(m.getReturnType())\n-\t\t\t\t\t\t\t&& Arrays.equals(new Class<?>[]{ConstraintValidatorContext.class}, m.getParameterTypes())) {\n-\t\t\t\t\t\tm.setAccessible(true);\n-\t\t\t\t\t\tmethods.put(cl, m);\n-\t\t\t\t\t}\n-\t\t\t\t}\n-\t\t\t}\n-\t\t\t\n-\t\t\tcontext.disableDefaultConstraintViolation();\n-\t\t\tboolean passed = true;\n-\t\t\tfor(Method m:methods.get(cl)) {\n-\t\t\t\ttry {\n-\t\t\t\t\tpassed &= (Boolean)m.invoke(obj, context);\n-\t\t\t\t} catch (IllegalAccessException | IllegalArgumentException | InvocationTargetException e) {\n-\t\t\t\t\tthrow new IllegalStateException(e);\n-\t\t\t\t}\n-\t\t\t}\n-\t\t\treturn passed;\n-\t\t}\n-\t}\n+    String message() default \"\";\n+\n+    Class<?>[] groups() default {};\n+\n+    Class<? extends Payload>[] payload() default {};\n+\n+    @Target(ElementType.METHOD)\n+    @Retention(RetentionPolicy.RUNTIME)\n+    @interface ValidationMethod2 {\n+    }\n+\n+\n+    class DetailedValidValidator implements ConstraintValidator<DetailedValid, Object> {\n+\n+        private final Multimap<Class<?>, Method> methods = HashMultimap.create();\n+\n+        @Override\n+        public void initialize(DetailedValid anno) {\n+        }\n+\n+        @Override\n+        public boolean isValid(Object obj, ConstraintValidatorContext context) {\n+            Class<?> cl = obj.getClass();\n+            if (!methods.containsKey(cl)) {\n+                for (Method m : obj.getClass().getMethods()) {\n+                    if (m.isAnnotationPresent(ValidationMethod2.class)\n+                        && boolean.class.equals(m.getReturnType())\n+                        && Arrays.equals(new Class<?>[] {ConstraintValidatorContext.class}, m.getParameterTypes())) {\n+                        m.setAccessible(true);\n+                        methods.put(cl, m);\n+                    }\n+                }\n+            }\n+\n+            context.disableDefaultConstraintViolation();\n+            boolean passed = true;\n+            for (Method m : methods.get(cl)) {\n+                try {\n+                    passed &= (Boolean) m.invoke(obj, context);\n+                } catch (IllegalAccessException | IllegalArgumentException | InvocationTargetException e) {\n+                    throw new IllegalStateException(e);\n+                }\n+            }\n+            return passed;\n+        }\n+    }\n }\n \n \n",
            "diff_size": 47
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "32",
                    "column": "1",
                    "severity": "warning",
                    "message": "'annotation def modifier' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "57",
                    "column": "1",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "62",
                    "column": "1",
                    "severity": "warning",
                    "message": "'catch' has incorrect indentation level 0, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/629/DetailedValid.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/naturalize/629/DetailedValid.java\nindex 7358e7a1e52..9c96ca12ada 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/629/DetailedValid.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/naturalize/629/DetailedValid.java\n@@ -26,10 +26,10 @@ public @interface DetailedValid {\n \t\n \tClass<?>[] groups() default { };\n \n-\tClass<? extends Payload>[] payload() default { };\n+Class<? extends Payload>[] payload() default { };\n \t\n \t@Target(ElementType.METHOD)\n-\t@Retention(RetentionPolicy.RUNTIME)\n+@Retention(RetentionPolicy.RUNTIME)\n \t@interface ValidationMethod2 {}\n \t\n \t\n@@ -46,9 +46,7 @@ public @interface DetailedValid {\n \t\t\tClass<?> cl = obj.getClass();\n \t\t\tif(!methods.containsKey(cl)) {\n \t\t\t\tfor(Method m:obj.getClass().getMethods()) {\n-\t\t\t\t\tif(m.isAnnotationPresent(ValidationMethod2.class)\n-\t\t\t\t\t\t\t&& boolean.class.equals(m.getReturnType())\n-\t\t\t\t\t\t\t&& Arrays.equals(new Class<?>[]{ConstraintValidatorContext.class}, m.getParameterTypes())) {\n+\t\t\t\t\tif(m.isAnnotationPresent(ValidationMethod2.class) && boolean.class.equals(m.getReturnType()) && Arrays.equals(new Class<?>[]{ConstraintValidatorContext.class}, m.getParameterTypes())) {\n \t\t\t\t\t\tm.setAccessible(true);\n \t\t\t\t\t\tmethods.put(cl, m);\n \t\t\t\t\t}\n@@ -56,20 +54,16 @@ public @interface DetailedValid {\n \t\t\t}\n \t\t\t\n \t\t\tcontext.disableDefaultConstraintViolation();\n-\t\t\tboolean passed = true;\n+boolean passed = true;\n \t\t\tfor(Method m:methods.get(cl)) {\n \t\t\t\ttry {\n \t\t\t\t\tpassed &= (Boolean)m.invoke(obj, context);\n-\t\t\t\t} catch (IllegalAccessException | IllegalArgumentException | InvocationTargetException e) {\n+\t\t\t\t}\n+catch (IllegalAccessException | IllegalArgumentException | InvocationTargetException e) {\n \t\t\t\t\tthrow new IllegalStateException(e);\n \t\t\t\t}\n \t\t\t}\n \t\t\treturn passed;\n \t\t}\n \t}\n-}\n-\n-\n-\n-\n-\n+}\n\\ No newline at end of file\n",
            "diff_size": 14
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "24",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "24",
                    "column": "2",
                    "severity": "warning",
                    "message": "'annotation field def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "26",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "28",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "30",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "30",
                    "column": "2",
                    "severity": "warning",
                    "message": "'annotation def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "31",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "31",
                    "column": "2",
                    "severity": "warning",
                    "message": "'annotation def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "32",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "32",
                    "column": "2",
                    "severity": "warning",
                    "message": "'@' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "34",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "34",
                    "column": "8",
                    "severity": "warning",
                    "message": "'class def ident' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "36",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "36",
                    "column": "3",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "38",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "38",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "39",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "41",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "41",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "42",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "43",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "43",
                    "column": "4",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "44",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "44",
                    "column": "4",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "45",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "45",
                    "column": "5",
                    "severity": "warning",
                    "message": "'for' has incorrect indentation level 4, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "46",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "46",
                    "column": "6",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 5, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "47",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "47",
                    "column": "7",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 6, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "48",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "48",
                    "column": "7",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 6, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "49",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "49",
                    "column": "6",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 5, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "50",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "50",
                    "column": "5",
                    "severity": "warning",
                    "message": "'for rcurly' has incorrect indentation level 4, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "51",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "51",
                    "column": "4",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "52",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "52",
                    "column": "4",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "53",
                    "column": "4",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "54",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "54",
                    "column": "4",
                    "severity": "warning",
                    "message": "'for' has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "55",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "55",
                    "column": "5",
                    "severity": "warning",
                    "message": "'try' has incorrect indentation level 4, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "56",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "56",
                    "column": "6",
                    "severity": "warning",
                    "message": "'try' child has incorrect indentation level 5, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "57",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "57",
                    "column": "5",
                    "severity": "warning",
                    "message": "'try rcurly' has incorrect indentation level 4, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "58",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "58",
                    "column": "5",
                    "severity": "warning",
                    "message": "'catch' has incorrect indentation level 4, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "59",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "59",
                    "column": "6",
                    "severity": "warning",
                    "message": "'catch' child has incorrect indentation level 5, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "60",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "60",
                    "column": "5",
                    "severity": "warning",
                    "message": "'catch rcurly' has incorrect indentation level 4, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "61",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "61",
                    "column": "4",
                    "severity": "warning",
                    "message": "'for rcurly' has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "62",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "62",
                    "column": "4",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "63",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "63",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "64",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "64",
                    "column": "2",
                    "severity": "warning",
                    "message": "'class def rcurly' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/629/DetailedValid.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/codebuff/629/DetailedValid.java\nindex 7358e7a1e52..a482b012664 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/629/DetailedValid.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/codebuff/629/DetailedValid.java\n@@ -7,69 +7,59 @@ import java.lang.annotation.Target;\n import java.lang.reflect.InvocationTargetException;\n import java.lang.reflect.Method;\n import java.util.Arrays;\n-\n import javax.validation.Constraint;\n import javax.validation.ConstraintValidator;\n import javax.validation.ConstraintValidatorContext;\n import javax.validation.Payload;\n-\n import com.bakdata.conquery.models.exceptions.validators.DetailedValid.DetailedValidValidator;\n import com.google.common.collect.HashMultimap;\n import com.google.common.collect.Multimap;\n \n+\n @Target({ ElementType.TYPE, ElementType.ANNOTATION_TYPE })\n @Retention(RetentionPolicy.RUNTIME)\n-@Constraint(validatedBy = DetailedValidValidator.class)\n+@Constraint(validatedBy= DetailedValidValidator.class)\n public @interface DetailedValid {\n \n-\tString message() default \"\";\n-\t\n-\tClass<?>[] groups() default { };\n+ String message() default \"\";\n \n-\tClass<? extends Payload>[] payload() default { };\n-\t\n-\t@Target(ElementType.METHOD)\n-\t@Retention(RetentionPolicy.RUNTIME)\n-\t@interface ValidationMethod2 {}\n-\t\n-\t\n-\tclass DetailedValidValidator implements ConstraintValidator<DetailedValid, Object> {\n-\t\t\n-\t\tprivate final Multimap<Class<?>, Method> methods = HashMultimap.create();\n-\t\t\n-\t\t@Override\n-\t\tpublic void initialize(DetailedValid anno) {\n-\t\t}\n+ Class<?>[] groups() default { };\n \n-\t\t@Override\n-\t\tpublic boolean isValid(Object obj, ConstraintValidatorContext context) {\n-\t\t\tClass<?> cl = obj.getClass();\n-\t\t\tif(!methods.containsKey(cl)) {\n-\t\t\t\tfor(Method m:obj.getClass().getMethods()) {\n-\t\t\t\t\tif(m.isAnnotationPresent(ValidationMethod2.class)\n-\t\t\t\t\t\t\t&& boolean.class.equals(m.getReturnType())\n-\t\t\t\t\t\t\t&& Arrays.equals(new Class<?>[]{ConstraintValidatorContext.class}, m.getParameterTypes())) {\n-\t\t\t\t\t\tm.setAccessible(true);\n-\t\t\t\t\t\tmethods.put(cl, m);\n-\t\t\t\t\t}\n-\t\t\t\t}\n-\t\t\t}\n-\t\t\t\n-\t\t\tcontext.disableDefaultConstraintViolation();\n-\t\t\tboolean passed = true;\n-\t\t\tfor(Method m:methods.get(cl)) {\n-\t\t\t\ttry {\n-\t\t\t\t\tpassed &= (Boolean)m.invoke(obj, context);\n-\t\t\t\t} catch (IllegalAccessException | IllegalArgumentException | InvocationTargetException e) {\n-\t\t\t\t\tthrow new IllegalStateException(e);\n-\t\t\t\t}\n-\t\t\t}\n-\t\t\treturn passed;\n-\t\t}\n-\t}\n-}\n+ Class<? extends Payload>[] payload() default { };\n \n+ @Target(ElementType.METHOD)\n+ @Retention(RetentionPolicy.RUNTIME)\n+ @interface ValidationMethod2 {}\n \n+ class DetailedValidValidator implements ConstraintValidator<DetailedValid, Object> {\n \n+  private final Multimap<Class<?>, Method> methods = HashMultimap.create();\n \n+  @Override\n+  public void initialize(DetailedValid anno) {}\n \n+  @Override\n+  public boolean isValid(Object obj, ConstraintValidatorContext context) {\n+   Class<?> cl = obj.getClass();\n+   if (!methods.containsKey(cl)) {\n+    for(Method m :obj.getClass().getMethods()) {\n+     if (m.isAnnotationPresent(ValidationMethod2.class) && boolean.class.equals(m.getReturnType()) && Arrays.equals(new Class<?>[]{ConstraintValidatorContext.class}, m.getParameterTypes())) {\n+      m.setAccessible(true);\n+      methods.put(cl, m);\n+     }\n+    }\n+   }\n+   context.disableDefaultConstraintViolation();\n+   boolean passed = true;\n+   for(Method m :methods.get(cl)) {\n+    try {\n+     passed &= (Boolean)m.invoke(obj, context);\n+    }\n+    catch (IllegalAccessException |IllegalArgumentException| InvocationTargetException e) {\n+     throw new IllegalStateException(e);\n+    }\n+   }\n+   return passed;\n+  }\n+ }\n+}\n\\ No newline at end of file\n",
            "diff_size": 80
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "63",
                    "column": "17",
                    "severity": "warning",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "63",
                    "column": "17",
                    "severity": "warning",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
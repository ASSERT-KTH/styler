{
    "project_name": "CONNECT-Solution-CONNECT",
    "error_id": "1247",
    "information": {
        "errors": [
            {
                "line": "27",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\npackage gov.hhs.fha.nhinc.direct.event;\n\nimport gov.hhs.fha.nhinc.direct.DirectException;\nimport org.junit.Test;",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1247/DirectEventLoggerTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/intellij/1247/DirectEventLoggerTest.java\nindex 5f9930c5c9c..03184813116 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1247/DirectEventLoggerTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/intellij/1247/DirectEventLoggerTest.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.direct.event;\n \n import gov.hhs.fha.nhinc.direct.DirectException;\n@@ -34,32 +35,32 @@ import org.junit.Test;\n  */\n public class DirectEventLoggerTest extends DirectEventTest {\n \n-    private static final String ERROR_MESSAGE = \"I've got blisters on me fingers...\";\n+  private static final String ERROR_MESSAGE = \"I've got blisters on me fingers...\";\n \n-    private final DirectEventLogger testLogger = DirectEventLogger.getInstance();\n+  private final DirectEventLogger testLogger = DirectEventLogger.getInstance();\n \n-    /**\n-     * {@link DirectEventLogger#log(DirectEventType, javax.mail.internet.MimeMessage)}.\n-     */\n-    @Test\n-    public void canLogSuccess() {\n-        testLogger.log(DirectEventType.BEGIN_OUTBOUND_DIRECT, mockMimeMessage);\n-    }\n+  /**\n+   * {@link DirectEventLogger#log(DirectEventType, javax.mail.internet.MimeMessage)}.\n+   */\n+  @Test\n+  public void canLogSuccess() {\n+    testLogger.log(DirectEventType.BEGIN_OUTBOUND_DIRECT, mockMimeMessage);\n+  }\n \n-    /**\n-     * {@link DirectEventLogger#log(DirectEventType, javax.mail.internet.MimeMessage, String)}.\n-     */\n-    @Test\n-    public void canLogError() {\n-        testLogger.log(DirectEventType.DIRECT_ERROR, mockMimeMessage, ERROR_MESSAGE);\n-    }\n+  /**\n+   * {@link DirectEventLogger#log(DirectEventType, javax.mail.internet.MimeMessage, String)}.\n+   */\n+  @Test\n+  public void canLogError() {\n+    testLogger.log(DirectEventType.DIRECT_ERROR, mockMimeMessage, ERROR_MESSAGE);\n+  }\n \n-    /**\n-     * {@link DirectEventLogger#logException(DirectEventType, javax.mail.internet.MimeMessage, Exception)}.\n-     */\n-    @Test\n-    public void canLogException() {\n-        testLogger.logException(DirectEventType.DIRECT_ERROR, mockMimeMessage, new DirectException(ERROR_MESSAGE));\n-    }\n+  /**\n+   * {@link DirectEventLogger#logException(DirectEventType, javax.mail.internet.MimeMessage, Exception)}.\n+   */\n+  @Test\n+  public void canLogException() {\n+    testLogger.logException(DirectEventType.DIRECT_ERROR, mockMimeMessage, new DirectException(ERROR_MESSAGE));\n+  }\n \n }\n",
            "diff_size": 24
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1247/DirectEventLoggerTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/naturalize/1247/DirectEventLoggerTest.java\nindex 5f9930c5c9c..cdf114a56e1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1247/DirectEventLoggerTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/naturalize/1247/DirectEventLoggerTest.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.direct.event;\n \n import gov.hhs.fha.nhinc.direct.DirectException;\n@@ -62,4 +63,4 @@ public class DirectEventLoggerTest extends DirectEventTest {\n         testLogger.logException(DirectEventType.DIRECT_ERROR, mockMimeMessage, new DirectException(ERROR_MESSAGE));\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1247/DirectEventLoggerTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/codebuff/1247/DirectEventLoggerTest.java\nindex 5f9930c5c9c..bdf2c4bbd85 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1247/DirectEventLoggerTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/codebuff/1247/DirectEventLoggerTest.java\n@@ -32,15 +32,19 @@ import org.junit.Test;\n /**\n  * Test {@link DirectEventLogger}.\n  */\n-public class DirectEventLoggerTest extends DirectEventTest {\n \n-    private static final String ERROR_MESSAGE = \"I've got blisters on me fingers...\";\n \n+public class DirectEventLoggerTest extends\n+    DirectEventTest {\n+\n+    private static final String ERROR_MESSAGE = \"I've got blisters on me fingers...\";\n     private final DirectEventLogger testLogger = DirectEventLogger.getInstance();\n \n     /**\n      * {@link DirectEventLogger#log(DirectEventType, javax.mail.internet.MimeMessage)}.\n      */\n+\n+\n     @Test\n     public void canLogSuccess() {\n         testLogger.log(DirectEventType.BEGIN_OUTBOUND_DIRECT, mockMimeMessage);\n@@ -49,6 +53,8 @@ public class DirectEventLoggerTest extends DirectEventTest {\n     /**\n      * {@link DirectEventLogger#log(DirectEventType, javax.mail.internet.MimeMessage, String)}.\n      */\n+\n+\n     @Test\n     public void canLogError() {\n         testLogger.log(DirectEventType.DIRECT_ERROR, mockMimeMessage, ERROR_MESSAGE);\n@@ -57,9 +63,11 @@ public class DirectEventLoggerTest extends DirectEventTest {\n     /**\n      * {@link DirectEventLogger#logException(DirectEventType, javax.mail.internet.MimeMessage, Exception)}.\n      */\n+\n+\n     @Test\n     public void canLogException() {\n         testLogger.logException(DirectEventType.DIRECT_ERROR, mockMimeMessage, new DirectException(ERROR_MESSAGE));\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 13
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": null,
            "diff": null
        }
    ],
    "repaired_by": [
        "intellij",
        "naturalize"
    ],
    "not_repaired_by": [
        "styler",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
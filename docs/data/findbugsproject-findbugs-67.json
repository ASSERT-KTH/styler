{
    "project_name": "findbugsproject-findbugs",
    "error_id": "67",
    "information": {
        "errors": [
            {
                "line": "10",
                "column": "1",
                "severity": "error",
                "message": "File contains tab characters (this is the first instance).",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
            }
        ]
    },
    "source_code": "    int f(@CheckForNull Object x) {\n        return x.hashCode();\n\t}\n    @Nonnull Object g() {\n        return null;\n    }",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/67/SimpleTests.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/styler/67/SimpleTests.java\nindex 8897bce273c..07c77a0ec2b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/67/SimpleTests.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/styler/67/SimpleTests.java\n@@ -7,7 +7,7 @@ public class SimpleTests {\n \n     int f(@CheckForNull Object x) {\n         return x.hashCode();\n-\t}\n+}\n     @Nonnull Object g() {\n         return null;\n     }\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/67/SimpleTests.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/intellij/67/SimpleTests.java\nindex 8897bce273c..1c8eab0eb5c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/67/SimpleTests.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/intellij/67/SimpleTests.java\n@@ -7,8 +7,10 @@ public class SimpleTests {\n \n     int f(@CheckForNull Object x) {\n         return x.hashCode();\n-\t}\n-    @Nonnull Object g() {\n+    }\n+\n+    @Nonnull\n+    Object g() {\n         return null;\n     }\n \n",
            "diff_size": 4
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/67/SimpleTests.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/naturalize/67/SimpleTests.java\nindex 8897bce273c..526366cb280 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/67/SimpleTests.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/naturalize/67/SimpleTests.java\n@@ -7,9 +7,10 @@ public class SimpleTests {\n \n     int f(@CheckForNull Object x) {\n         return x.hashCode();\n-\t}\n-    @Nonnull Object g() {\n+    }\n+\n+@Nonnull Object g() {\n         return null;\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/67/SimpleTests.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/codebuff/67/SimpleTests.java\nindex 8897bce273c..1229821ac9c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/67/SimpleTests.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/codebuff/67/SimpleTests.java\n@@ -4,12 +4,12 @@ import javax.annotation.CheckForNull;\n import javax.annotation.Nonnull;\n \n public class SimpleTests {\n-\n     int f(@CheckForNull Object x) {\n         return x.hashCode();\n-\t}\n-    @Nonnull Object g() {\n-        return null;\n     }\n \n-}\n+    @Nonnull\n+    Object g() {\n+        return null;\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/67/SimpleTests.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/styler_random/67/SimpleTests.java\nindex 8897bce273c..07c77a0ec2b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/67/SimpleTests.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/styler_random/67/SimpleTests.java\n@@ -7,7 +7,7 @@ public class SimpleTests {\n \n     int f(@CheckForNull Object x) {\n         return x.hashCode();\n-\t}\n+}\n     @Nonnull Object g() {\n         return null;\n     }\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": null,
            "diff": null
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random"
    ],
    "not_repaired_by": [
        "styler_three_grams"
    ]
}
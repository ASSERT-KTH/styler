{
    "project_name": "graphfoundation-ongdb",
    "error_id": "281",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "55",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "175",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "175",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/281/AbstractDelegatingIndexProxy.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/281/AbstractDelegatingIndexProxy.java\nindex 2f02e0af9a8..34b793c2276 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/281/AbstractDelegatingIndexProxy.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/281/AbstractDelegatingIndexProxy.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.api.index;\n \n import java.io.File;\n@@ -42,137 +43,137 @@ import org.neo4j.values.storable.Value;\n \n public abstract class AbstractDelegatingIndexProxy implements IndexProxy\n {\n-    protected abstract IndexProxy getDelegate();\n-\n-    @Override\n-    public void start() throws IOException\n-    {\n-        getDelegate().start();\n-    }\n-\n-    @Override\n-    public IndexUpdater newUpdater( IndexUpdateMode mode )\n-    {\n-        return getDelegate().newUpdater( mode );\n-    }\n-\n-    @Override\n-    public void drop() throws IOException\n-    {\n-        getDelegate().drop();\n-    }\n-\n-    @Override\n-    public InternalIndexState getState()\n-    {\n-        return getDelegate().getState();\n-    }\n-\n-    @Override\n-    public IndexCapability getIndexCapability()\n-    {\n-        return getDelegate().getIndexCapability();\n-    }\n-\n-    @Override\n-    public SchemaIndexDescriptor getDescriptor()\n-    {\n-        return getDelegate().getDescriptor();\n-    }\n-\n-    @Override\n-    public SchemaDescriptor schema()\n-    {\n-        return getDelegate().schema();\n-    }\n-\n-    @Override\n-    public IndexProvider.Descriptor getProviderDescriptor()\n-    {\n-        return getDelegate().getProviderDescriptor();\n-    }\n-\n-    @Override\n-    public void force( IOLimiter ioLimiter ) throws IOException\n-    {\n-        getDelegate().force( ioLimiter );\n-    }\n-\n-    @Override\n-    public void refresh() throws IOException\n-    {\n-        getDelegate().refresh();\n-    }\n-\n-    @Override\n-    public void close() throws IOException\n-    {\n-        getDelegate().close();\n-    }\n-\n-    @Override\n-    public IndexReader newReader() throws IndexNotFoundKernelException\n-    {\n-        return getDelegate().newReader();\n-    }\n-\n-    @Override\n-    public boolean awaitStoreScanCompleted() throws IndexPopulationFailedKernelException, InterruptedException\n-    {\n-        return getDelegate().awaitStoreScanCompleted();\n-    }\n-\n-    @Override\n-    public void activate() throws IndexActivationFailedKernelException\n-    {\n-        getDelegate().activate();\n-    }\n-\n-    @Override\n-    public void validate() throws IndexPopulationFailedKernelException, UniquePropertyValueValidationException\n-    {\n-        getDelegate().validate();\n-    }\n-\n-    @Override\n-    public void validateBeforeCommit( Value[] tuple )\n-    {\n-        getDelegate().validateBeforeCommit( tuple );\n-    }\n-\n-    @Override\n-    public IndexPopulationFailure getPopulationFailure() throws IllegalStateException\n-    {\n-        return getDelegate().getPopulationFailure();\n-    }\n-\n-    @Override\n-    public PopulationProgress getIndexPopulationProgress()\n-    {\n-        return getDelegate().getIndexPopulationProgress();\n-    }\n-\n-    @Override\n-    public String toString()\n-    {\n-        return String.format( \"%s -> %s\", getClass().getSimpleName(), getDelegate().toString() );\n-    }\n-\n-    @Override\n-    public long getIndexId()\n-    {\n-        return getDelegate().getIndexId();\n-    }\n-\n-    @Override\n-    public ResourceIterator<File> snapshotFiles() throws IOException\n-    {\n-        return getDelegate().snapshotFiles();\n-    }\n-\n-    @Override\n-    public void verifyDeferredConstraints( PropertyAccessor accessor ) throws IndexEntryConflictException, IOException\n-    {\n-        getDelegate().verifyDeferredConstraints( accessor );\n-    }\n+  protected abstract IndexProxy getDelegate();\n+\n+  @Override\n+  public void start() throws IOException\n+  {\n+    getDelegate().start();\n+  }\n+\n+  @Override\n+  public IndexUpdater newUpdater(IndexUpdateMode mode)\n+  {\n+    return getDelegate().newUpdater(mode);\n+  }\n+\n+  @Override\n+  public void drop() throws IOException\n+  {\n+    getDelegate().drop();\n+  }\n+\n+  @Override\n+  public InternalIndexState getState()\n+  {\n+    return getDelegate().getState();\n+  }\n+\n+  @Override\n+  public IndexCapability getIndexCapability()\n+  {\n+    return getDelegate().getIndexCapability();\n+  }\n+\n+  @Override\n+  public SchemaIndexDescriptor getDescriptor()\n+  {\n+    return getDelegate().getDescriptor();\n+  }\n+\n+  @Override\n+  public SchemaDescriptor schema()\n+  {\n+    return getDelegate().schema();\n+  }\n+\n+  @Override\n+  public IndexProvider.Descriptor getProviderDescriptor()\n+  {\n+    return getDelegate().getProviderDescriptor();\n+  }\n+\n+  @Override\n+  public void force(IOLimiter ioLimiter) throws IOException\n+  {\n+    getDelegate().force(ioLimiter);\n+  }\n+\n+  @Override\n+  public void refresh() throws IOException\n+  {\n+    getDelegate().refresh();\n+  }\n+\n+  @Override\n+  public void close() throws IOException\n+  {\n+    getDelegate().close();\n+  }\n+\n+  @Override\n+  public IndexReader newReader() throws IndexNotFoundKernelException\n+  {\n+    return getDelegate().newReader();\n+  }\n+\n+  @Override\n+  public boolean awaitStoreScanCompleted() throws IndexPopulationFailedKernelException, InterruptedException\n+  {\n+    return getDelegate().awaitStoreScanCompleted();\n+  }\n+\n+  @Override\n+  public void activate() throws IndexActivationFailedKernelException\n+  {\n+    getDelegate().activate();\n+  }\n+\n+  @Override\n+  public void validate() throws IndexPopulationFailedKernelException, UniquePropertyValueValidationException\n+  {\n+    getDelegate().validate();\n+  }\n+\n+  @Override\n+  public void validateBeforeCommit(Value[] tuple)\n+  {\n+    getDelegate().validateBeforeCommit(tuple);\n+  }\n+\n+  @Override\n+  public IndexPopulationFailure getPopulationFailure() throws IllegalStateException\n+  {\n+    return getDelegate().getPopulationFailure();\n+  }\n+\n+  @Override\n+  public PopulationProgress getIndexPopulationProgress()\n+  {\n+    return getDelegate().getIndexPopulationProgress();\n+  }\n+\n+  @Override\n+  public String toString()\n+  {\n+    return String.format(\"%s -> %s\", getClass().getSimpleName(), getDelegate().toString());\n+  }\n+\n+  @Override\n+  public long getIndexId()\n+  {\n+    return getDelegate().getIndexId();\n+  }\n+\n+  @Override\n+  public ResourceIterator<File> snapshotFiles() throws IOException\n+  {\n+    return getDelegate().snapshotFiles();\n+  }\n+\n+  @Override\n+  public void verifyDeferredConstraints(PropertyAccessor accessor) throws IndexEntryConflictException, IOException\n+  {\n+    getDelegate().verifyDeferredConstraints(accessor);\n+  }\n }\n",
            "diff_size": 134
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/281/AbstractDelegatingIndexProxy.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/281/AbstractDelegatingIndexProxy.java\nindex 2f02e0af9a8..747260807f1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/281/AbstractDelegatingIndexProxy.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/281/AbstractDelegatingIndexProxy.java\n@@ -175,4 +175,4 @@ public abstract class AbstractDelegatingIndexProxy implements IndexProxy\n     {\n         getDelegate().verifyDeferredConstraints( accessor );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
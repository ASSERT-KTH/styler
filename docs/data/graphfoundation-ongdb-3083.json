{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3083",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "37",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3083/LabelSchemaDescriptor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3083/LabelSchemaDescriptor.java\nindex a9ca6877533..e84f7ec540f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3083/LabelSchemaDescriptor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3083/LabelSchemaDescriptor.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.api.schema;\n \n import java.util.Arrays;\n@@ -30,89 +31,89 @@ import org.neo4j.storageengine.api.lock.ResourceType;\n \n public class LabelSchemaDescriptor implements org.neo4j.internal.kernel.api.schema.LabelSchemaDescriptor\n {\n-    private final int labelId;\n-    private final int[] propertyIds;\n-\n-    LabelSchemaDescriptor( int labelId, int... propertyIds )\n-    {\n-        this.labelId = labelId;\n-        this.propertyIds = propertyIds;\n-    }\n-\n-    @Override\n-    public <R> R computeWith( SchemaComputer<R> processor )\n-    {\n-        return processor.computeSpecific( this );\n-    }\n-\n-    @Override\n-    public void processWith( SchemaProcessor processor )\n-    {\n-        processor.processSpecific( this );\n-    }\n-\n-    @Override\n-    public String userDescription( TokenNameLookup tokenNameLookup )\n-    {\n-        return SchemaUtil.niceLabelAndProperties( tokenNameLookup, labelId, propertyIds );\n-    }\n-\n-    @Override\n-    public String keyName( TokenNameLookup tokenNameLookup )\n-    {\n-        return tokenNameLookup.labelGetName( labelId );\n-    }\n-\n-    @Override\n-    public int getLabelId()\n-    {\n-        return labelId;\n-    }\n-\n-    @Override\n-    public int keyId()\n-    {\n-        return getLabelId();\n-    }\n-\n-    @Override\n-    public ResourceType keyType()\n-    {\n-        return ResourceTypes.LABEL;\n-    }\n-\n-    @Override\n-    public int[] getPropertyIds()\n-    {\n-        return propertyIds;\n-    }\n-\n-    @Override\n-    public boolean equals( Object o )\n-    {\n-        if ( o instanceof LabelSchemaDescriptor )\n-        {\n-            LabelSchemaDescriptor that = (LabelSchemaDescriptor)o;\n-            return labelId == that.getLabelId() && Arrays.equals( propertyIds, that.getPropertyIds() );\n-        }\n-        return false;\n-    }\n-\n-    @Override\n-    public int hashCode()\n-    {\n-        return Arrays.hashCode( propertyIds ) + 31 * labelId;\n-    }\n-\n-    @Override\n-    public String toString()\n-    {\n-        return \"LabelSchemaDescriptor( \" + userDescription( SchemaUtil.idTokenNameLookup ) + \" )\";\n-    }\n-\n-    @Override\n-    public LabelSchemaDescriptor schema()\n+  private final int labelId;\n+  private final int[] propertyIds;\n+\n+  LabelSchemaDescriptor(int labelId, int... propertyIds)\n+  {\n+    this.labelId = labelId;\n+    this.propertyIds = propertyIds;\n+  }\n+\n+  @Override\n+  public <R> R computeWith(SchemaComputer<R> processor)\n+  {\n+    return processor.computeSpecific(this);\n+  }\n+\n+  @Override\n+  public void processWith(SchemaProcessor processor)\n+  {\n+    processor.processSpecific(this);\n+  }\n+\n+  @Override\n+  public String userDescription(TokenNameLookup tokenNameLookup)\n+  {\n+    return SchemaUtil.niceLabelAndProperties(tokenNameLookup, labelId, propertyIds);\n+  }\n+\n+  @Override\n+  public String keyName(TokenNameLookup tokenNameLookup)\n+  {\n+    return tokenNameLookup.labelGetName(labelId);\n+  }\n+\n+  @Override\n+  public int getLabelId()\n+  {\n+    return labelId;\n+  }\n+\n+  @Override\n+  public int keyId()\n+  {\n+    return getLabelId();\n+  }\n+\n+  @Override\n+  public ResourceType keyType()\n+  {\n+    return ResourceTypes.LABEL;\n+  }\n+\n+  @Override\n+  public int[] getPropertyIds()\n+  {\n+    return propertyIds;\n+  }\n+\n+  @Override\n+  public boolean equals(Object o)\n+  {\n+    if (o instanceof LabelSchemaDescriptor)\n     {\n-        return this;\n+      LabelSchemaDescriptor that = (LabelSchemaDescriptor) o;\n+      return labelId == that.getLabelId() && Arrays.equals(propertyIds, that.getPropertyIds());\n     }\n+    return false;\n+  }\n+\n+  @Override\n+  public int hashCode()\n+  {\n+    return Arrays.hashCode(propertyIds) + 31 * labelId;\n+  }\n+\n+  @Override\n+  public String toString()\n+  {\n+    return \"LabelSchemaDescriptor( \" + userDescription(SchemaUtil.idTokenNameLookup) + \" )\";\n+  }\n+\n+  @Override\n+  public LabelSchemaDescriptor schema()\n+  {\n+    return this;\n+  }\n }\n",
            "diff_size": 105
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3083/LabelSchemaDescriptor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3083/LabelSchemaDescriptor.java\nindex a9ca6877533..a20b309c73e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3083/LabelSchemaDescriptor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3083/LabelSchemaDescriptor.java\n@@ -115,4 +115,4 @@ public class LabelSchemaDescriptor implements org.neo4j.internal.kernel.api.sche\n     {\n         return this;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "95",
                    "column": "48",
                    "severity": "error",
                    "message": "'&&' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "104",
                    "column": "51",
                    "severity": "error",
                    "message": "'*' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3083/LabelSchemaDescriptor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/3083/LabelSchemaDescriptor.java\nindex a9ca6877533..6db730a0e10 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3083/LabelSchemaDescriptor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/3083/LabelSchemaDescriptor.java\n@@ -20,7 +20,6 @@\n package org.neo4j.kernel.api.schema;\n \n import java.util.Arrays;\n-\n import org.neo4j.internal.kernel.api.TokenNameLookup;\n import org.neo4j.internal.kernel.api.schema.SchemaComputer;\n import org.neo4j.internal.kernel.api.schema.SchemaProcessor;\n@@ -92,16 +91,17 @@ public class LabelSchemaDescriptor implements org.neo4j.internal.kernel.api.sche\n     {\n         if ( o instanceof LabelSchemaDescriptor )\n         {\n-            LabelSchemaDescriptor that = (LabelSchemaDescriptor)o;\n-            return labelId == that.getLabelId() && Arrays.equals( propertyIds, that.getPropertyIds() );\n+            LabelSchemaDescriptor that = (LabelSchemaDescriptor) o;\n+            return labelId == that.getLabelId()&& Arrays.equals( propertyIds, that.getPropertyIds() );\n         }\n+\n         return false;\n     }\n \n     @Override\n     public int hashCode()\n     {\n-        return Arrays.hashCode( propertyIds ) + 31 * labelId;\n+        return Arrays.hashCode( propertyIds ) + 31* labelId;\n     }\n \n     @Override\n@@ -115,4 +115,4 @@ public class LabelSchemaDescriptor implements org.neo4j.internal.kernel.api.sche\n     {\n         return this;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
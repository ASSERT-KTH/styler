{
    "project_name": "neo4j-neo4j",
    "error_id": "504",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "40",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "148",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "110",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "70",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/504/EncodeGroupsStep.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/504/EncodeGroupsStep.java\nindex e0dfed7afbc..ff1c0331c14 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/504/EncodeGroupsStep.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/504/EncodeGroupsStep.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.internal.batchimport;\n \n import org.neo4j.internal.batchimport.staging.BatchSender;\n@@ -36,17 +37,17 @@ public class EncodeGroupsStep extends ProcessorStep<RelationshipGroupRecord[]>\n     private long nextId = -1;\n     private final RecordStore<RelationshipGroupRecord> store;\n \n-    public EncodeGroupsStep( StageControl control, Configuration config, RecordStore<RelationshipGroupRecord> store, PageCacheTracer pageCacheTracer )\n+    public EncodeGroupsStep(StageControl control, Configuration config, RecordStore<RelationshipGroupRecord> store, PageCacheTracer pageCacheTracer)\n     {\n-        super( control, \"ENCODE\", config, 1, pageCacheTracer );\n+        super(control, \"ENCODE\", config, 1, pageCacheTracer);\n         this.store = store;\n     }\n \n     @Override\n-    protected void process( RelationshipGroupRecord[] batch, BatchSender sender, PageCursorTracer cursorTracer )\n+    protected void process(RelationshipGroupRecord[] batch, BatchSender sender, PageCursorTracer cursorTracer)\n     {\n         int groupStartIndex = 0;\n-        for ( int i = 0; i < batch.length; i++ )\n+        for (int i = 0; i < batch.length; i++)\n         {\n             RelationshipGroupRecord group = batch[i];\n \n@@ -55,21 +56,20 @@ public class EncodeGroupsStep extends ProcessorStep<RelationshipGroupRecord[]>\n             long count = group.getNext();\n             boolean lastInChain = count == 0;\n \n-            group.setId( nextId == -1 ? nextId = store.nextId( cursorTracer ) : nextId );\n-            if ( !lastInChain )\n+            group.setId(nextId == -1 ? nextId = store.nextId(cursorTracer) : nextId);\n+            if (!lastInChain)\n             {\n-                group.setNext( nextId = store.nextId( cursorTracer ) );\n-            }\n-            else\n+                group.setNext(nextId = store.nextId(cursorTracer));\n+            } else\n             {\n-                group.setNext( nextId = -1 );\n+                group.setNext(nextId = -1);\n \n                 // OK so this group is the last in this chain, which means all the groups in this chain\n                 // are now fully populated. We can now prepare these groups so that their potential\n                 // secondary units ends up very close by.\n-                for ( int j = groupStartIndex; j <= i; j++ )\n+                for (int j = groupStartIndex; j <= i; j++)\n                 {\n-                    store.prepareForCommit( batch[j], cursorTracer );\n+                    store.prepareForCommit(batch[j], cursorTracer);\n                 }\n \n                 groupStartIndex = i + 1;\n@@ -77,6 +77,6 @@ public class EncodeGroupsStep extends ProcessorStep<RelationshipGroupRecord[]>\n         }\n         assert groupStartIndex == batch.length;\n \n-        sender.send( batch );\n+        sender.send(batch);\n     }\n }\n",
            "diff_size": 14
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
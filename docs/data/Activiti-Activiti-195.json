{
    "project_name": "Activiti-Activiti",
    "error_id": "195",
    "information": {
        "errors": [
            {
                "line": "13",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * limitations under the License.\n */\npackage org.activiti.engine.impl.persistence.entity;\n\nimport java.util.Date;\n",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/195/EventLogEntryEntityImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler/195/EventLogEntryEntityImpl.java\nindex 356a6f1c6e7..81b58c7c0c5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/195/EventLogEntryEntityImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler/195/EventLogEntryEntityImpl.java\n@@ -10,6 +10,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.engine.impl.persistence.entity;\n \n import java.util.Date;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/195/EventLogEntryEntityImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/intellij/195/EventLogEntryEntityImpl.java\nindex 356a6f1c6e7..db42893f53c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/195/EventLogEntryEntityImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/intellij/195/EventLogEntryEntityImpl.java\n@@ -1,146 +1,145 @@\n /* Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- * \n+ *\n  *      http://www.apache.org/licenses/LICENSE-2.0\n- * \n+ *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.engine.impl.persistence.entity;\n \n import java.util.Date;\n \n /**\n  * An event log entry can only be inserted (and maybe deleted).\n- * \n-\n  */\n public class EventLogEntryEntityImpl extends AbstractEntityNoRevision implements EventLogEntryEntity {\n \n-  protected long logNumber; // cant use id here, it would clash with entity\n-  protected String type;\n-  protected String processDefinitionId;\n-  protected String processInstanceId;\n-  protected String executionId;\n-  protected String taskId;\n-  protected Date timeStamp;\n-  protected String userId;\n-  protected byte[] data;\n-  protected String lockOwner;\n-  protected String lockTime;\n-  protected int isProcessed;\n-\n-  public EventLogEntryEntityImpl() {\n-  }\n-\n-  @Override\n-  public Object getPersistentState() {\n-    return null; // Not updateable\n-  }\n-\n-  public long getLogNumber() {\n-    return logNumber;\n-  }\n-\n-  public void setLogNumber(long logNumber) {\n-    this.logNumber = logNumber;\n-  }\n-\n-  public String getType() {\n-    return type;\n-  }\n-\n-  public void setType(String type) {\n-    this.type = type;\n-  }\n-\n-  public String getProcessDefinitionId() {\n-    return processDefinitionId;\n-  }\n-\n-  public void setProcessDefinitionId(String processDefinitionId) {\n-    this.processDefinitionId = processDefinitionId;\n-  }\n-\n-  public String getProcessInstanceId() {\n-    return processInstanceId;\n-  }\n-\n-  public void setProcessInstanceId(String processInstanceId) {\n-    this.processInstanceId = processInstanceId;\n-  }\n-\n-  public String getExecutionId() {\n-    return executionId;\n-  }\n-\n-  public void setExecutionId(String executionId) {\n-    this.executionId = executionId;\n-  }\n-\n-  public String getTaskId() {\n-    return taskId;\n-  }\n-\n-  public void setTaskId(String taskId) {\n-    this.taskId = taskId;\n-  }\n-\n-  public Date getTimeStamp() {\n-    return timeStamp;\n-  }\n-\n-  public void setTimeStamp(Date timeStamp) {\n-    this.timeStamp = timeStamp;\n-  }\n-\n-  public String getUserId() {\n-    return userId;\n-  }\n-\n-  public void setUserId(String userId) {\n-    this.userId = userId;\n-  }\n-\n-  public byte[] getData() {\n-    return data;\n-  }\n-\n-  public void setData(byte[] data) {\n-    this.data = data;\n-  }\n-\n-  public String getLockOwner() {\n-    return lockOwner;\n-  }\n-\n-  public void setLockOwner(String lockOwner) {\n-    this.lockOwner = lockOwner;\n-  }\n-\n-  public String getLockTime() {\n-    return lockTime;\n-  }\n-\n-  public void setLockTime(String lockTime) {\n-    this.lockTime = lockTime;\n-  }\n-\n-  public int getProcessed() {\n-    return isProcessed;\n-  }\n+    protected long logNumber; // cant use id here, it would clash with entity\n+    protected String type;\n+    protected String processDefinitionId;\n+    protected String processInstanceId;\n+    protected String executionId;\n+    protected String taskId;\n+    protected Date timeStamp;\n+    protected String userId;\n+    protected byte[] data;\n+    protected String lockOwner;\n+    protected String lockTime;\n+    protected int isProcessed;\n+\n+    public EventLogEntryEntityImpl() {\n+    }\n+\n+    @Override\n+    public Object getPersistentState() {\n+        return null; // Not updateable\n+    }\n+\n+    public long getLogNumber() {\n+        return logNumber;\n+    }\n+\n+    public void setLogNumber(long logNumber) {\n+        this.logNumber = logNumber;\n+    }\n+\n+    public String getType() {\n+        return type;\n+    }\n+\n+    public void setType(String type) {\n+        this.type = type;\n+    }\n+\n+    public String getProcessDefinitionId() {\n+        return processDefinitionId;\n+    }\n+\n+    public void setProcessDefinitionId(String processDefinitionId) {\n+        this.processDefinitionId = processDefinitionId;\n+    }\n+\n+    public String getProcessInstanceId() {\n+        return processInstanceId;\n+    }\n+\n+    public void setProcessInstanceId(String processInstanceId) {\n+        this.processInstanceId = processInstanceId;\n+    }\n+\n+    public String getExecutionId() {\n+        return executionId;\n+    }\n+\n+    public void setExecutionId(String executionId) {\n+        this.executionId = executionId;\n+    }\n+\n+    public String getTaskId() {\n+        return taskId;\n+    }\n+\n+    public void setTaskId(String taskId) {\n+        this.taskId = taskId;\n+    }\n+\n+    public Date getTimeStamp() {\n+        return timeStamp;\n+    }\n+\n+    public void setTimeStamp(Date timeStamp) {\n+        this.timeStamp = timeStamp;\n+    }\n+\n+    public String getUserId() {\n+        return userId;\n+    }\n+\n+    public void setUserId(String userId) {\n+        this.userId = userId;\n+    }\n+\n+    public byte[] getData() {\n+        return data;\n+    }\n+\n+    public void setData(byte[] data) {\n+        this.data = data;\n+    }\n+\n+    public String getLockOwner() {\n+        return lockOwner;\n+    }\n+\n+    public void setLockOwner(String lockOwner) {\n+        this.lockOwner = lockOwner;\n+    }\n+\n+    public String getLockTime() {\n+        return lockTime;\n+    }\n+\n+    public void setLockTime(String lockTime) {\n+        this.lockTime = lockTime;\n+    }\n+\n+    public int getProcessed() {\n+        return isProcessed;\n+    }\n \n-  public void setProcessed(int isProcessed) {\n-    this.isProcessed = isProcessed;\n-  }\n-\n-  @Override\n-  public String toString() {\n-    return timeStamp.toString() + \" : \" + type;\n-  }\n+    public void setProcessed(int isProcessed) {\n+        this.isProcessed = isProcessed;\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return timeStamp.toString() + \" : \" + type;\n+    }\n \n }\n",
            "diff_size": 125
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "13",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "24",
                    "severity": "error",
                    "message": "'CLASS_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/195/EventLogEntryEntityImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/codebuff/195/EventLogEntryEntityImpl.java\nindex 356a6f1c6e7..9e5f99bac2c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/195/EventLogEntryEntityImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/codebuff/195/EventLogEntryEntityImpl.java\n@@ -19,6 +19,8 @@ import java.util.Date;\n  * \n \n  */\n+\n+\n public class EventLogEntryEntityImpl extends AbstractEntityNoRevision implements EventLogEntryEntity {\n \n   protected long logNumber; // cant use id here, it would clash with entity\n@@ -142,5 +144,4 @@ public class EventLogEntryEntityImpl extends AbstractEntityNoRevision implements\n   public String toString() {\n     return timeStamp.toString() + \" : \" + type;\n   }\n-\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/195/EventLogEntryEntityImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_random/195/EventLogEntryEntityImpl.java\nindex 356a6f1c6e7..81b58c7c0c5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/195/EventLogEntryEntityImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_random/195/EventLogEntryEntityImpl.java\n@@ -10,6 +10,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.engine.impl.persistence.entity;\n \n import java.util.Date;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/195/EventLogEntryEntityImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_three_grams/195/EventLogEntryEntityImpl.java\nindex 356a6f1c6e7..81b58c7c0c5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/195/EventLogEntryEntityImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_three_grams/195/EventLogEntryEntityImpl.java\n@@ -10,6 +10,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.engine.impl.persistence.entity;\n \n import java.util.Date;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
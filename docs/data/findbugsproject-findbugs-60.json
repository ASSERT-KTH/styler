{
    "project_name": "findbugsproject-findbugs",
    "error_id": "60",
    "information": {
        "errors": [
            {
                "line": "10",
                "column": "1",
                "severity": "error",
                "message": "File contains tab characters (this is the first instance).",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
            }
        ]
    },
    "source_code": "     * Benchmark tests for null pointer defect detectors This benchmark tests\n     * local variable tracking tracking tp1, tp2, tp3, tp4, tp5, tp6 : true\n\t * positive cases fp1, fp2, fp3, fp4 : false positives versions of the above\n     * ifp1, ifp2, ifp3 : interprocedural false positives itp1 : true versions\n     * of the ifp1\n     */",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "10",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/60/Test.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/intellij/60/Test.java\nindex cbb338ab59c..068c7aa7b92 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/60/Test.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/intellij/60/Test.java\n@@ -7,97 +7,116 @@ public class Test {\n     /**\n      * Benchmark tests for null pointer defect detectors This benchmark tests\n      * local variable tracking tracking tp1, tp2, tp3, tp4, tp5, tp6 : true\n-\t * positive cases fp1, fp2, fp3, fp4 : false positives versions of the above\n+     * positive cases fp1, fp2, fp3, fp4 : false positives versions of the above\n      * ifp1, ifp2, ifp3 : interprocedural false positives itp1 : true versions\n      * of the ifp1\n      */\n \n     int fp1(int level) {\n         Object x = null;\n-        if (level > 0)\n-\t\t\tx = new Object();\n-        if (level > 4)\n+        if (level > 0) {\n+            x = new Object();\n+        }\n+        if (level > 4) {\n             return x.hashCode();\n+        }\n         return 0;\n-\t}\n+    }\n \n     int tp1(int level) {\n         Object x = null;\n-        if (level > 0)\n-\t\t\tx = new Object();\n-        if (level < 4)\n+        if (level > 0) {\n+            x = new Object();\n+        }\n+        if (level < 4) {\n             return x.hashCode();\n+        }\n         return 0;\n-\t}\n+    }\n \n     int fp2(boolean b) {\n         Object x = null;\n-        if (b)\n-\t\t\tx = new Object();\n-        if (b)\n+        if (b) {\n+            x = new Object();\n+        }\n+        if (b) {\n             return x.hashCode();\n+        }\n         return 0;\n-\t}\n+    }\n \n     int tp2(boolean b) {\n         Object x = null;\n-        if (b)\n-\t\t\tx = new Object();\n-        if (!b)\n+        if (b) {\n+            x = new Object();\n+        }\n+        if (!b) {\n             return x.hashCode();\n+        }\n         return 0;\n-\t}\n+    }\n \n     int fp3(Object x) {\n         Object y = null;\n-        if (x != null)\n-\t\t\ty = new Object();\n-        if (y != null)\n+        if (x != null) {\n+            y = new Object();\n+        }\n+        if (y != null) {\n             return x.hashCode() + y.hashCode();\n-        else\n-\t\t\treturn 0;\n+        } else {\n+            return 0;\n+        }\n     }\n \n     @ExpectWarning(\"NP\")\n     int tp3(Object x) {\n         Object y = null;\n-\t\tif (x != null)\n+        if (x != null) {\n             y = new Object();\n-        if (y != null)\n+        }\n+        if (y != null) {\n             return x.hashCode() + y.hashCode();\n-\t\telse\n+        } else {\n             return x.hashCode();\n+        }\n     }\n \n     int tp4(boolean b) {\n         Object x = null;\n         Object y = null;\n-\t\tif (b)\n+        if (b) {\n             x = \"x\";\n-        if (x != null)\n+        }\n+        if (x != null) {\n             y = \"y\";\n-\t\tif (y != null)\n+        }\n+        if (y != null) {\n             return x.hashCode() + y.hashCode();\n-        else\n+        } else {\n             return x.hashCode();\n-\t}\n+        }\n+    }\n \n     int fp4(boolean b) {\n         Object x = null;\n         Object y = null;\n-\t\tif (b)\n+        if (b) {\n             x = \"x\";\n-        if (x != null)\n+        }\n+        if (x != null) {\n             y = \"y\";\n-\t\tif (y != null)\n+        }\n+        if (y != null) {\n             return x.hashCode() + y.hashCode();\n-        else\n+        } else {\n             return 0;\n-\t}\n+        }\n+    }\n+\n     @ExpectWarning(\"NP\")\n     int tp5(Object x) {\n         if (x == null) {\n-\t\t\treturn x.hashCode();\n+            return x.hashCode();\n         }\n         return 0;\n     }\n@@ -105,43 +124,47 @@ public class Test {\n     @ExpectWarning(\"NP\")\n     int tp6(Object x) {\n         if (x == null) {\n-\t\t\tObject y = x;\n+            Object y = x;\n             return y.hashCode();\n         }\n         return 0;\n-\t}\n+    }\n \n     int itp1(boolean b) {\n         Object x = null;\n-        if (b)\n-\t\t\tx = new Object();\n+        if (b) {\n+            x = new Object();\n+        }\n         return helper1(x, b);\n     }\n \n     int ifp1(boolean b) {\n         Object x = null;\n-        if (!b)\n-\t\t\tx = new Object();\n+        if (!b) {\n+            x = new Object();\n+        }\n         return helper1(x, b);\n     }\n \n     @ExpectWarning(\"NP\")\n     int itp2() {\n         return helper2(null);\n-\t}\n+    }\n \n     @ExpectWarning(\"NP\")\n     int itp3(boolean b) {\n         Object x = null;\n-\t\tif (b)\n+        if (b) {\n             x = \"x\";\n+        }\n         return helper3(x);\n     }\n \n     // Bug when x is null and b is false\n     private int helper1(Object x, boolean b) {\n-        if (b)\n-\t\t\treturn 0;\n+        if (b) {\n+            return 0;\n+        }\n         return x.hashCode();\n     }\n \n",
            "diff_size": 69
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "10",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/60/Test.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/naturalize/60/Test.java\nindex cbb338ab59c..e9c886af228 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/60/Test.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/naturalize/60/Test.java\n@@ -15,134 +15,135 @@ public class Test {\n     int fp1(int level) {\n         Object x = null;\n         if (level > 0)\n-\t\t\tx = new Object();\n-        if (level > 4)\n+    x = new Object();\n+if (level > 4)\n             return x.hashCode();\n         return 0;\n-\t}\n+    }\n \n-    int tp1(int level) {\n+int tp1(int level) {\n         Object x = null;\n         if (level > 0)\n-\t\t\tx = new Object();\n-        if (level < 4)\n+    x = new Object();\n+if (level < 4)\n             return x.hashCode();\n         return 0;\n-\t}\n+    }\n \n-    int fp2(boolean b) {\n+int fp2(boolean b) {\n         Object x = null;\n         if (b)\n-\t\t\tx = new Object();\n-        if (b)\n+    x = new Object();\n+if (b)\n             return x.hashCode();\n         return 0;\n-\t}\n+    }\n \n-    int tp2(boolean b) {\n+int tp2(boolean b) {\n         Object x = null;\n         if (b)\n-\t\t\tx = new Object();\n-        if (!b)\n+    x = new Object();\n+if (!b)\n             return x.hashCode();\n         return 0;\n-\t}\n+    }\n \n-    int fp3(Object x) {\n+int fp3(Object x) {\n         Object y = null;\n         if (x != null)\n-\t\t\ty = new Object();\n-        if (y != null)\n+    y = new Object();\n+if (y != null)\n             return x.hashCode() + y.hashCode();\n         else\n-\t\t\treturn 0;\n+    return 0;\n     }\n \n     @ExpectWarning(\"NP\")\n     int tp3(Object x) {\n         Object y = null;\n-\t\tif (x != null)\n-            y = new Object();\n+if (x != null)\n+    y = new Object();\n         if (y != null)\n             return x.hashCode() + y.hashCode();\n-\t\telse\n-            return x.hashCode();\n+    else\n+    return x.hashCode();\n     }\n \n     int tp4(boolean b) {\n         Object x = null;\n         Object y = null;\n-\t\tif (b)\n-            x = \"x\";\n+if (b)\n+    x = \"x\";\n         if (x != null)\n             y = \"y\";\n-\t\tif (y != null)\n-            return x.hashCode() + y.hashCode();\n+if (y != null)\n+    return x.hashCode() + y.hashCode();\n         else\n             return x.hashCode();\n-\t}\n+    }\n \n-    int fp4(boolean b) {\n+int fp4(boolean b) {\n         Object x = null;\n         Object y = null;\n-\t\tif (b)\n-            x = \"x\";\n+if (b)\n+    x = \"x\";\n         if (x != null)\n             y = \"y\";\n-\t\tif (y != null)\n-            return x.hashCode() + y.hashCode();\n+if (y != null)\n+    return x.hashCode() + y.hashCode();\n         else\n             return 0;\n-\t}\n-    @ExpectWarning(\"NP\")\n+    }\n+\n+@ExpectWarning(\"NP\")\n     int tp5(Object x) {\n         if (x == null) {\n-\t\t\treturn x.hashCode();\n-        }\n+    return x.hashCode();\n+    }\n         return 0;\n     }\n \n     @ExpectWarning(\"NP\")\n     int tp6(Object x) {\n         if (x == null) {\n-\t\t\tObject y = x;\n-            return y.hashCode();\n+    Object y = x;\n+    return y.hashCode();\n         }\n         return 0;\n-\t}\n+    }\n \n-    int itp1(boolean b) {\n+int itp1(boolean b) {\n         Object x = null;\n         if (b)\n-\t\t\tx = new Object();\n-        return helper1(x, b);\n+    x = new Object();\n+return helper1(x, b);\n     }\n \n     int ifp1(boolean b) {\n         Object x = null;\n         if (!b)\n-\t\t\tx = new Object();\n-        return helper1(x, b);\n+    x = new Object();\n+return helper1(x, b);\n     }\n \n     @ExpectWarning(\"NP\")\n     int itp2() {\n         return helper2(null);\n-\t}\n+    }\n \n-    @ExpectWarning(\"NP\")\n+@ExpectWarning(\"NP\")\n     int itp3(boolean b) {\n         Object x = null;\n-\t\tif (b)\n-            x = \"x\";\n+if (b)\n+    x = \"x\";\n         return helper3(x);\n     }\n \n     // Bug when x is null and b is false\n     private int helper1(Object x, boolean b) {\n         if (b)\n-\t\t\treturn 0;\n-        return x.hashCode();\n+    return 0;\n+    return x.hashCode();\n     }\n \n     private int helper2(Object x) {\n@@ -153,4 +154,4 @@ public class Test {\n         return x.hashCode();\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 53
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/60/Test.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/codebuff/60/Test.java\nindex cbb338ab59c..0f8d6f9a19f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/60/Test.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/codebuff/60/Test.java\n@@ -7,97 +7,97 @@ public class Test {\n     /**\n      * Benchmark tests for null pointer defect detectors This benchmark tests\n      * local variable tracking tracking tp1, tp2, tp3, tp4, tp5, tp6 : true\n-\t * positive cases fp1, fp2, fp3, fp4 : false positives versions of the above\n+     * positive cases fp1, fp2, fp3, fp4 : false positives versions of the above\n      * ifp1, ifp2, ifp3 : interprocedural false positives itp1 : true versions\n      * of the ifp1\n      */\n-\n     int fp1(int level) {\n         Object x = null;\n         if (level > 0)\n-\t\t\tx = new Object();\n+            x = new Object();\n         if (level > 4)\n             return x.hashCode();\n         return 0;\n-\t}\n+    }\n \n     int tp1(int level) {\n         Object x = null;\n         if (level > 0)\n-\t\t\tx = new Object();\n+            x = new Object();\n         if (level < 4)\n             return x.hashCode();\n         return 0;\n-\t}\n+    }\n \n     int fp2(boolean b) {\n         Object x = null;\n         if (b)\n-\t\t\tx = new Object();\n+            x = new Object();\n         if (b)\n             return x.hashCode();\n         return 0;\n-\t}\n+    }\n \n     int tp2(boolean b) {\n         Object x = null;\n         if (b)\n-\t\t\tx = new Object();\n+            x = new Object();\n         if (!b)\n             return x.hashCode();\n         return 0;\n-\t}\n+    }\n \n     int fp3(Object x) {\n         Object y = null;\n         if (x != null)\n-\t\t\ty = new Object();\n+            y = new Object();\n         if (y != null)\n             return x.hashCode() + y.hashCode();\n         else\n-\t\t\treturn 0;\n+            return 0;\n     }\n \n     @ExpectWarning(\"NP\")\n     int tp3(Object x) {\n         Object y = null;\n-\t\tif (x != null)\n+        if (x != null)\n             y = new Object();\n         if (y != null)\n             return x.hashCode() + y.hashCode();\n-\t\telse\n+        else\n             return x.hashCode();\n     }\n \n     int tp4(boolean b) {\n         Object x = null;\n         Object y = null;\n-\t\tif (b)\n+        if (b)\n             x = \"x\";\n         if (x != null)\n             y = \"y\";\n-\t\tif (y != null)\n+        if (y != null)\n             return x.hashCode() + y.hashCode();\n         else\n             return x.hashCode();\n-\t}\n+    }\n \n     int fp4(boolean b) {\n         Object x = null;\n         Object y = null;\n-\t\tif (b)\n+        if (b)\n             x = \"x\";\n         if (x != null)\n             y = \"y\";\n-\t\tif (y != null)\n+        if (y != null)\n             return x.hashCode() + y.hashCode();\n         else\n             return 0;\n-\t}\n+    }\n+\n     @ExpectWarning(\"NP\")\n     int tp5(Object x) {\n         if (x == null) {\n-\t\t\treturn x.hashCode();\n+            return x.hashCode();\n         }\n         return 0;\n     }\n@@ -105,52 +105,56 @@ public class Test {\n     @ExpectWarning(\"NP\")\n     int tp6(Object x) {\n         if (x == null) {\n-\t\t\tObject y = x;\n+            Object y = x;\n             return y.hashCode();\n         }\n         return 0;\n-\t}\n+    }\n \n     int itp1(boolean b) {\n         Object x = null;\n         if (b)\n-\t\t\tx = new Object();\n+            x = new Object();\n         return helper1(x, b);\n     }\n \n     int ifp1(boolean b) {\n         Object x = null;\n         if (!b)\n-\t\t\tx = new Object();\n+            x = new Object();\n         return helper1(x, b);\n     }\n \n     @ExpectWarning(\"NP\")\n     int itp2() {\n         return helper2(null);\n-\t}\n+    }\n \n     @ExpectWarning(\"NP\")\n     int itp3(boolean b) {\n         Object x = null;\n-\t\tif (b)\n+        if (b)\n             x = \"x\";\n         return helper3(x);\n     }\n \n     // Bug when x is null and b is false\n+\n+\n     private int helper1(Object x, boolean b) {\n         if (b)\n-\t\t\treturn 0;\n+            return 0;\n         return x.hashCode();\n     }\n \n+\n     private int helper2(Object x) {\n         return x.hashCode();\n     }\n \n+\n     private int helper3(Object x) {\n         return x.hashCode();\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 34
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "10",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": null,
            "diff": null
        }
    ],
    "repaired_by": [
        "intellij",
        "codebuff"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ]
}
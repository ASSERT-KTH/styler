{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2779",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "31",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "31",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2779/LogHeader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2779/LogHeader.java\nindex f0583176a0c..63345b25663 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2779/LogHeader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2779/LogHeader.java\n@@ -17,56 +17,57 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.transaction.log.entry;\n \n public class LogHeader\n {\n-    public static final int LOG_HEADER_SIZE = 16;\n+  public static final int LOG_HEADER_SIZE = 16;\n \n-    public final byte logFormatVersion;\n-    public final long logVersion;\n-    public final long lastCommittedTxId;\n+  public final byte logFormatVersion;\n+  public final long logVersion;\n+  public final long lastCommittedTxId;\n \n-    public LogHeader( byte logFormatVersion, long logVersion, long lastCommittedTxId )\n-    {\n-        this.logFormatVersion = logFormatVersion;\n-        this.logVersion = logVersion;\n-        this.lastCommittedTxId = lastCommittedTxId;\n-    }\n+  public LogHeader(byte logFormatVersion, long logVersion, long lastCommittedTxId)\n+  {\n+    this.logFormatVersion = logFormatVersion;\n+    this.logVersion = logVersion;\n+    this.lastCommittedTxId = lastCommittedTxId;\n+  }\n \n-    @Override\n-    public boolean equals( Object o )\n+  @Override\n+  public boolean equals(Object o)\n+  {\n+    if (this == o)\n     {\n-        if ( this == o )\n-        {\n-            return true;\n-        }\n-        if ( o == null || getClass() != o.getClass() )\n-        {\n-            return false;\n-        }\n-\n-        LogHeader logHeader = (LogHeader) o;\n-        return lastCommittedTxId == logHeader.lastCommittedTxId && logFormatVersion == logHeader.logFormatVersion &&\n-               logVersion == logHeader.logVersion;\n+      return true;\n     }\n-\n-    @Override\n-    public int hashCode()\n+    if (o == null || getClass() != o.getClass())\n     {\n-        int result = (int) logFormatVersion;\n-        result = 31 * result + (int) (logVersion ^ (logVersion >>> 32));\n-        result = 31 * result + (int) (lastCommittedTxId ^ (lastCommittedTxId >>> 32));\n-        return result;\n+      return false;\n     }\n \n-    @Override\n-    public String toString()\n-    {\n-        return \"LogHeader{\" +\n-                \"logFormatVersion=\" + logFormatVersion +\n-                \", logVersion=\" + logVersion +\n-                \", lastCommittedTxId=\" + lastCommittedTxId +\n-                '}';\n-    }\n+    LogHeader logHeader = (LogHeader) o;\n+    return lastCommittedTxId == logHeader.lastCommittedTxId && logFormatVersion == logHeader.logFormatVersion &&\n+        logVersion == logHeader.logVersion;\n+  }\n+\n+  @Override\n+  public int hashCode()\n+  {\n+    int result = (int) logFormatVersion;\n+    result = 31 * result + (int) (logVersion ^ (logVersion >>> 32));\n+    result = 31 * result + (int) (lastCommittedTxId ^ (lastCommittedTxId >>> 32));\n+    return result;\n+  }\n+\n+  @Override\n+  public String toString()\n+  {\n+    return \"LogHeader{\" +\n+        \"logFormatVersion=\" + logFormatVersion +\n+        \", logVersion=\" + logVersion +\n+        \", lastCommittedTxId=\" + lastCommittedTxId +\n+        '}';\n+  }\n }\n",
            "diff_size": 57
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "59",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2779/LogHeader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2779/LogHeader.java\nindex f0583176a0c..fe027a72c48 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2779/LogHeader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2779/LogHeader.java\n@@ -24,8 +24,10 @@ public class LogHeader\n     public static final int LOG_HEADER_SIZE = 16;\n \n     public final byte logFormatVersion;\n-    public final long logVersion;\n-    public final long lastCommittedTxId;\n+\n+public final long logVersion;\n+\n+public final long lastCommittedTxId;\n \n     public LogHeader( byte logFormatVersion, long logVersion, long lastCommittedTxId )\n     {\n@@ -41,32 +43,28 @@ public class LogHeader\n         {\n             return true;\n         }\n-        if ( o == null || getClass() != o.getClass() )\n+\n+if ( o == null || getClass() != o.getClass() )\n         {\n             return false;\n         }\n \n         LogHeader logHeader = (LogHeader) o;\n-        return lastCommittedTxId == logHeader.lastCommittedTxId && logFormatVersion == logHeader.logFormatVersion &&\n-               logVersion == logHeader.logVersion;\n+        return lastCommittedTxId == logHeader.lastCommittedTxId && logFormatVersion == logHeader.logFormatVersion && logVersion == logHeader.logVersion;\n     }\n \n     @Override\n     public int hashCode()\n     {\n-        int result = (int) logFormatVersion;\n-        result = 31 * result + (int) (logVersion ^ (logVersion >>> 32));\n-        result = 31 * result + (int) (lastCommittedTxId ^ (lastCommittedTxId >>> 32));\n+        int result = ( int) logFormatVersion;\n+        result = 31 * result + ( int) ( logVersion ^ ( logVersion >>> 32 ));\n+        result = 31 * result + ( int) ( lastCommittedTxId ^ ( lastCommittedTxId >>> 32 ));\n         return result;\n     }\n \n     @Override\n     public String toString()\n     {\n-        return \"LogHeader{\" +\n-                \"logFormatVersion=\" + logFormatVersion +\n-                \", logVersion=\" + logVersion +\n-                \", lastCommittedTxId=\" + lastCommittedTxId +\n-                '}';\n+        return \"LogHeader{\" + \"logFormatVersion=\" + logFormatVersion + \", logVersion=\" + logVersion + \", lastCommittedTxId=\" + lastCommittedTxId + '}';\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 17
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
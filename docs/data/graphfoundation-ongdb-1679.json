{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1679",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "73",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "7",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "116",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "136",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "150",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "150",
                    "column": "116",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "116",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "173",
                    "column": "109",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "184",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "184",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "195",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "195",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1679/Meta.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1679/Meta.java\nindex 82155bdf3b9..95e9875a660 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1679/Meta.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1679/Meta.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.index.internal.gbptree;\n \n import java.io.IOException;\n@@ -43,202 +44,201 @@ import static org.neo4j.index.internal.gbptree.PageCursorUtil.checkOutOfBounds;\n  *       \u2502    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 {@link #getUnusedVersionSlot3()}\n  *       \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 {@link #getUnusedVersionSlot4()}\n  * </pre>\n- *\n+ * <p>\n  * {@link #CURRENT_STATE_VERSION} and {@link #CURRENT_GBPTREE_VERSION} aren't used yet because they have\n  * never needed to be versioned yet, but remain reserved for future use. The are fixed at 0 a.t.m.\n  */\n class Meta\n {\n-    static final byte CURRENT_STATE_VERSION = 0;\n-    static final byte CURRENT_GBPTREE_VERSION = 0;\n-\n-    private static final int MASK_BYTE = 0xFF;\n-\n-    private static final int SHIFT_FORMAT_IDENTIFIER = Byte.SIZE * 0;\n-    private static final int SHIFT_FORMAT_VERSION = Byte.SIZE * 1;\n-    private static final int SHIFT_UNUSED_VERSION_SLOT_3 = Byte.SIZE * 2;\n-    private static final int SHIFT_UNUSED_VERSION_SLOT_4 = Byte.SIZE * 3;\n-    static final byte UNUSED_VERSION = 0;\n-\n-    private final byte formatIdentifier;\n-    private final byte formatVersion;\n-    private final byte unusedVersionSlot3;\n-    private final byte unusedVersionSlot4;\n-    private final int pageSize;\n-    private final long layoutIdentifier;\n-    private final int layoutMajorVersion;\n-    private final int layoutMinorVersion;\n-\n-    private Meta( byte formatIdentifier, byte formatVersion, byte unusedVersionSlot3, byte unusedVersionSlot4,\n-            int pageSize, long layoutIdentifier, int layoutMajorVersion, int layoutMinorVersion )\n-    {\n-        this.formatIdentifier = formatIdentifier;\n-        this.formatVersion = formatVersion;\n-        this.unusedVersionSlot3 = unusedVersionSlot3;\n-        this.unusedVersionSlot4 = unusedVersionSlot4;\n-        this.pageSize = pageSize;\n-        this.layoutIdentifier = layoutIdentifier;\n-        this.layoutMajorVersion = layoutMajorVersion;\n-        this.layoutMinorVersion = layoutMinorVersion;\n-    }\n-\n-    Meta( byte formatIdentifier, byte formatVersion, int pageSize, Layout<?,?> layout )\n-    {\n-        this( formatIdentifier, formatVersion, UNUSED_VERSION, UNUSED_VERSION,\n-                pageSize, layout.identifier(), layout.majorVersion(), layout.minorVersion() );\n-    }\n-\n-    private static Meta parseMeta( int format, int pageSize, long layoutIdentifier, int majorVersion, int minorVersion )\n-    {\n-        return new Meta( extractIndividualVersion( format, SHIFT_FORMAT_IDENTIFIER ),\n-                extractIndividualVersion( format, SHIFT_FORMAT_VERSION ),\n-                extractIndividualVersion( format, SHIFT_UNUSED_VERSION_SLOT_3 ),\n-                extractIndividualVersion( format, SHIFT_UNUSED_VERSION_SLOT_4 ),\n-                pageSize, layoutIdentifier, majorVersion, minorVersion );\n-    }\n-\n-    /**\n-     * Reads meta information from the meta page. Reading meta information also involves {@link Layout} in that\n-     * it can have written layout-specific information to this page too. The layout identifier and its version\n-     * that the returned {@link Meta} instance will have are the ones read from the page, not retrieved from {@link Layout}.\n-     *\n-     * @param cursor {@link PageCursor} to read meta information from.\n-     * @param layout {@link Layout} instance that will get the opportunity to read layout-specific data from the meta page.\n-     * {@code layout} is allowed to be {@code null} where it won't be told to read layout-specific data from the meta page.\n-     * @return {@link Meta} instance with all meta information.\n-     * @throws IOException on {@link PageCursor} I/O error.\n-     */\n-    static Meta read( PageCursor cursor, Layout<?,?> layout ) throws IOException\n-    {\n-        int format;\n-        int pageSize;\n-        long layoutIdentifier;\n-        int layoutMajorVersion;\n-        int layoutMinorVersion;\n-        try\n+  static final byte CURRENT_STATE_VERSION = 0;\n+  static final byte CURRENT_GBPTREE_VERSION = 0;\n+\n+  private static final int MASK_BYTE = 0xFF;\n+\n+  private static final int SHIFT_FORMAT_IDENTIFIER = Byte.SIZE * 0;\n+  private static final int SHIFT_FORMAT_VERSION = Byte.SIZE * 1;\n+  private static final int SHIFT_UNUSED_VERSION_SLOT_3 = Byte.SIZE * 2;\n+  private static final int SHIFT_UNUSED_VERSION_SLOT_4 = Byte.SIZE * 3;\n+  static final byte UNUSED_VERSION = 0;\n+\n+  private final byte formatIdentifier;\n+  private final byte formatVersion;\n+  private final byte unusedVersionSlot3;\n+  private final byte unusedVersionSlot4;\n+  private final int pageSize;\n+  private final long layoutIdentifier;\n+  private final int layoutMajorVersion;\n+  private final int layoutMinorVersion;\n+\n+  private Meta(byte formatIdentifier, byte formatVersion, byte unusedVersionSlot3, byte unusedVersionSlot4,\n+               int pageSize, long layoutIdentifier, int layoutMajorVersion, int layoutMinorVersion)\n+  {\n+    this.formatIdentifier = formatIdentifier;\n+    this.formatVersion = formatVersion;\n+    this.unusedVersionSlot3 = unusedVersionSlot3;\n+    this.unusedVersionSlot4 = unusedVersionSlot4;\n+    this.pageSize = pageSize;\n+    this.layoutIdentifier = layoutIdentifier;\n+    this.layoutMajorVersion = layoutMajorVersion;\n+    this.layoutMinorVersion = layoutMinorVersion;\n+  }\n+\n+  Meta(byte formatIdentifier, byte formatVersion, int pageSize, Layout<?, ?> layout)\n+  {\n+    this(formatIdentifier, formatVersion, UNUSED_VERSION, UNUSED_VERSION,\n+        pageSize, layout.identifier(), layout.majorVersion(), layout.minorVersion());\n+  }\n+\n+  private static Meta parseMeta(int format, int pageSize, long layoutIdentifier, int majorVersion, int minorVersion)\n+  {\n+    return new Meta(extractIndividualVersion(format, SHIFT_FORMAT_IDENTIFIER),\n+        extractIndividualVersion(format, SHIFT_FORMAT_VERSION),\n+        extractIndividualVersion(format, SHIFT_UNUSED_VERSION_SLOT_3),\n+        extractIndividualVersion(format, SHIFT_UNUSED_VERSION_SLOT_4),\n+        pageSize, layoutIdentifier, majorVersion, minorVersion);\n+  }\n+\n+  /**\n+   * Reads meta information from the meta page. Reading meta information also involves {@link Layout} in that\n+   * it can have written layout-specific information to this page too. The layout identifier and its version\n+   * that the returned {@link Meta} instance will have are the ones read from the page, not retrieved from {@link Layout}.\n+   *\n+   * @param cursor {@link PageCursor} to read meta information from.\n+   * @param layout {@link Layout} instance that will get the opportunity to read layout-specific data from the meta page.\n+   *               {@code layout} is allowed to be {@code null} where it won't be told to read layout-specific data from the meta page.\n+   * @return {@link Meta} instance with all meta information.\n+   * @throws IOException on {@link PageCursor} I/O error.\n+   */\n+  static Meta read(PageCursor cursor, Layout<?, ?> layout) throws IOException\n+  {\n+    int format;\n+    int pageSize;\n+    long layoutIdentifier;\n+    int layoutMajorVersion;\n+    int layoutMinorVersion;\n+    try\n+    {\n+      do\n+      {\n+        format = cursor.getInt();\n+        pageSize = cursor.getInt();\n+        layoutIdentifier = cursor.getLong();\n+        layoutMajorVersion = cursor.getInt();\n+        layoutMinorVersion = cursor.getInt();\n+        if (layout != null)\n         {\n-            do\n-            {\n-                format = cursor.getInt();\n-                pageSize = cursor.getInt();\n-                layoutIdentifier = cursor.getLong();\n-                layoutMajorVersion = cursor.getInt();\n-                layoutMinorVersion = cursor.getInt();\n-                if ( layout != null )\n-                {\n-                    layout.readMetaData( cursor );\n-                }\n-            }\n-            while ( cursor.shouldRetry() );\n-            checkOutOfBounds( cursor );\n-            cursor.checkAndClearCursorException();\n+          layout.readMetaData(cursor);\n         }\n-        catch ( CursorException e )\n-        {\n-            throw new MetadataMismatchException( e,\n-                    \"Tried to open, but caught an error while reading meta data. \" +\n-                    \"File is expected to be corrupt, try to rebuild.\" );\n-        }\n-\n-        return parseMeta( format, pageSize, layoutIdentifier, layoutMajorVersion, layoutMinorVersion );\n-    }\n-\n-    void verify( Layout<?,?> layout )\n-    {\n-        if ( unusedVersionSlot3 != Meta.UNUSED_VERSION )\n-        {\n-            throw new MetadataMismatchException( \"Unexpected version \" + unusedVersionSlot3 + \" for unused version slot 3\" );\n-        }\n-        if ( unusedVersionSlot4 != Meta.UNUSED_VERSION )\n-        {\n-            throw new MetadataMismatchException( \"Unexpected version \" + unusedVersionSlot4 + \" for unused version slot 4\" );\n-        }\n-\n-        if ( !layout.compatibleWith( layoutIdentifier, layoutMajorVersion, layoutMinorVersion ) )\n-        {\n-            throw new MetadataMismatchException(\n-                    \"Tried to open using layout not compatible with \" +\n-                    \"what the index was created with. Created with: layoutIdentifier=%d,majorVersion=%d,minorVersion=%d. \" +\n-                    \"Opened with layoutIdentifier=%d,majorVersion=%d,minorVersion=%d\",\n-                    layoutIdentifier, layoutMajorVersion, layoutMinorVersion,\n-                    layout.identifier(), layout.majorVersion(), layout.minorVersion() );\n-        }\n-\n-        Factory formatByLayout = TreeNodeSelector.selectByLayout( layout );\n-        if ( formatByLayout.formatIdentifier() != formatIdentifier ||\n-             formatByLayout.formatVersion() != formatVersion )\n-        {\n-            throw new MetadataMismatchException( \"Tried to open using layout not compatible with what index was created with. \" +\n-                    \"Created with formatIdentifier:%d,formatVersion:%d. Opened with formatIdentifier:%d,formatVersion%d\",\n-                    formatIdentifier, formatVersion, formatByLayout.formatIdentifier(), formatByLayout.formatVersion() );\n-        }\n-    }\n-\n-    /**\n-     * Writes meta information to the meta page. Writing meta information also involves {@link Layout} in that\n-     * it can write layout-specific information to this page too.\n-     *\n-     * @param cursor {@link PageCursor} to read meta information from.\n-     * @param layout {@link Layout} instance that will get the opportunity to write layout-specific data to the meta page.\n-     */\n-    void write( PageCursor cursor, Layout<?,?> layout )\n-    {\n-        cursor.putInt( allVersionsCombined() );\n-        cursor.putInt( getPageSize() );\n-        cursor.putLong( getLayoutIdentifier() );\n-        cursor.putInt( getLayoutMajorVersion() );\n-        cursor.putInt( getLayoutMinorVersion() );\n-        layout.writeMetaData( cursor );\n-        checkOutOfBounds( cursor );\n-    }\n-\n-    private static byte extractIndividualVersion( int format, int shift )\n-    {\n-        return (byte) ((format >>> shift) & MASK_BYTE);\n-    }\n-\n-    private int allVersionsCombined()\n-    {\n-        return formatIdentifier << SHIFT_FORMAT_IDENTIFIER | formatVersion << SHIFT_FORMAT_VERSION;\n-    }\n-\n-    int getPageSize()\n-    {\n-        return pageSize;\n-    }\n-\n-    byte getFormatIdentifier()\n-    {\n-        return formatIdentifier;\n-    }\n-\n-    byte getFormatVersion()\n-    {\n-        return formatVersion;\n-    }\n-\n-    byte getUnusedVersionSlot3()\n-    {\n-        return unusedVersionSlot3;\n-    }\n-\n-    byte getUnusedVersionSlot4()\n-    {\n-        return unusedVersionSlot4;\n-    }\n-\n-    long getLayoutIdentifier()\n-    {\n-        return layoutIdentifier;\n-    }\n-\n-    int getLayoutMajorVersion()\n-    {\n-        return layoutMajorVersion;\n-    }\n-\n-    int getLayoutMinorVersion()\n-    {\n-        return layoutMinorVersion;\n-    }\n+      }\n+      while (cursor.shouldRetry());\n+      checkOutOfBounds(cursor);\n+      cursor.checkAndClearCursorException();\n+    } catch (CursorException e)\n+    {\n+      throw new MetadataMismatchException(e,\n+          \"Tried to open, but caught an error while reading meta data. \" +\n+              \"File is expected to be corrupt, try to rebuild.\");\n+    }\n+\n+    return parseMeta(format, pageSize, layoutIdentifier, layoutMajorVersion, layoutMinorVersion);\n+  }\n+\n+  void verify(Layout<?, ?> layout)\n+  {\n+    if (unusedVersionSlot3 != Meta.UNUSED_VERSION)\n+    {\n+      throw new MetadataMismatchException(\"Unexpected version \" + unusedVersionSlot3 + \" for unused version slot 3\");\n+    }\n+    if (unusedVersionSlot4 != Meta.UNUSED_VERSION)\n+    {\n+      throw new MetadataMismatchException(\"Unexpected version \" + unusedVersionSlot4 + \" for unused version slot 4\");\n+    }\n+\n+    if (!layout.compatibleWith(layoutIdentifier, layoutMajorVersion, layoutMinorVersion))\n+    {\n+      throw new MetadataMismatchException(\n+          \"Tried to open using layout not compatible with \" +\n+              \"what the index was created with. Created with: layoutIdentifier=%d,majorVersion=%d,minorVersion=%d. \" +\n+              \"Opened with layoutIdentifier=%d,majorVersion=%d,minorVersion=%d\",\n+          layoutIdentifier, layoutMajorVersion, layoutMinorVersion,\n+          layout.identifier(), layout.majorVersion(), layout.minorVersion());\n+    }\n+\n+    Factory formatByLayout = TreeNodeSelector.selectByLayout(layout);\n+    if (formatByLayout.formatIdentifier() != formatIdentifier ||\n+        formatByLayout.formatVersion() != formatVersion)\n+    {\n+      throw new MetadataMismatchException(\"Tried to open using layout not compatible with what index was created with. \" +\n+          \"Created with formatIdentifier:%d,formatVersion:%d. Opened with formatIdentifier:%d,formatVersion%d\",\n+          formatIdentifier, formatVersion, formatByLayout.formatIdentifier(), formatByLayout.formatVersion());\n+    }\n+  }\n+\n+  /**\n+   * Writes meta information to the meta page. Writing meta information also involves {@link Layout} in that\n+   * it can write layout-specific information to this page too.\n+   *\n+   * @param cursor {@link PageCursor} to read meta information from.\n+   * @param layout {@link Layout} instance that will get the opportunity to write layout-specific data to the meta page.\n+   */\n+  void write(PageCursor cursor, Layout<?, ?> layout)\n+  {\n+    cursor.putInt(allVersionsCombined());\n+    cursor.putInt(getPageSize());\n+    cursor.putLong(getLayoutIdentifier());\n+    cursor.putInt(getLayoutMajorVersion());\n+    cursor.putInt(getLayoutMinorVersion());\n+    layout.writeMetaData(cursor);\n+    checkOutOfBounds(cursor);\n+  }\n+\n+  private static byte extractIndividualVersion(int format, int shift)\n+  {\n+    return (byte) ((format >>> shift) & MASK_BYTE);\n+  }\n+\n+  private int allVersionsCombined()\n+  {\n+    return formatIdentifier << SHIFT_FORMAT_IDENTIFIER | formatVersion << SHIFT_FORMAT_VERSION;\n+  }\n+\n+  int getPageSize()\n+  {\n+    return pageSize;\n+  }\n+\n+  byte getFormatIdentifier()\n+  {\n+    return formatIdentifier;\n+  }\n+\n+  byte getFormatVersion()\n+  {\n+    return formatVersion;\n+  }\n+\n+  byte getUnusedVersionSlot3()\n+  {\n+    return unusedVersionSlot3;\n+  }\n+\n+  byte getUnusedVersionSlot4()\n+  {\n+    return unusedVersionSlot4;\n+  }\n+\n+  long getLayoutIdentifier()\n+  {\n+    return layoutIdentifier;\n+  }\n+\n+  int getLayoutMajorVersion()\n+  {\n+    return layoutMajorVersion;\n+  }\n+\n+  int getLayoutMinorVersion()\n+  {\n+    return layoutMinorVersion;\n+  }\n }\n",
            "diff_size": 205
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "71",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 196).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "91",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 331).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "132",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 169).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "152",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 330).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "157",
                    "column": "68",
                    "severity": "error",
                    "message": "'||' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "159",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 333).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1679/Meta.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1679/Meta.java\nindex 82155bdf3b9..f3740755abb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1679/Meta.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1679/Meta.java\n@@ -59,8 +59,7 @@ class Meta\n     private static final int SHIFT_UNUSED_VERSION_SLOT_3 = Byte.SIZE * 2;\n     private static final int SHIFT_UNUSED_VERSION_SLOT_4 = Byte.SIZE * 3;\n     static final byte UNUSED_VERSION = 0;\n-\n-    private final byte formatIdentifier;\n+private final byte formatIdentifier;\n     private final byte formatVersion;\n     private final byte unusedVersionSlot3;\n     private final byte unusedVersionSlot4;\n@@ -69,8 +68,7 @@ class Meta\n     private final int layoutMajorVersion;\n     private final int layoutMinorVersion;\n \n-    private Meta( byte formatIdentifier, byte formatVersion, byte unusedVersionSlot3, byte unusedVersionSlot4,\n-            int pageSize, long layoutIdentifier, int layoutMajorVersion, int layoutMinorVersion )\n+    private Meta( byte formatIdentifier, byte formatVersion, byte unusedVersionSlot3, byte unusedVersionSlot4, int pageSize, long layoutIdentifier, int layoutMajorVersion, int layoutMinorVersion )\n     {\n         this.formatIdentifier = formatIdentifier;\n         this.formatVersion = formatVersion;\n@@ -82,7 +80,7 @@ class Meta\n         this.layoutMinorVersion = layoutMinorVersion;\n     }\n \n-    Meta( byte formatIdentifier, byte formatVersion, int pageSize, Layout<?,?> layout )\n+    Meta( byte formatIdentifier, byte formatVersion, int pageSize, Layout<?, ?> layout )\n     {\n         this( formatIdentifier, formatVersion, UNUSED_VERSION, UNUSED_VERSION,\n                 pageSize, layout.identifier(), layout.majorVersion(), layout.minorVersion() );\n@@ -90,11 +88,7 @@ class Meta\n \n     private static Meta parseMeta( int format, int pageSize, long layoutIdentifier, int majorVersion, int minorVersion )\n     {\n-        return new Meta( extractIndividualVersion( format, SHIFT_FORMAT_IDENTIFIER ),\n-                extractIndividualVersion( format, SHIFT_FORMAT_VERSION ),\n-                extractIndividualVersion( format, SHIFT_UNUSED_VERSION_SLOT_3 ),\n-                extractIndividualVersion( format, SHIFT_UNUSED_VERSION_SLOT_4 ),\n-                pageSize, layoutIdentifier, majorVersion, minorVersion );\n+        return new Meta( extractIndividualVersion( format, SHIFT_FORMAT_IDENTIFIER ), extractIndividualVersion( format, SHIFT_FORMAT_VERSION ), extractIndividualVersion( format, SHIFT_UNUSED_VERSION_SLOT_3 ), extractIndividualVersion( format, SHIFT_UNUSED_VERSION_SLOT_4 ), pageSize, layoutIdentifier, majorVersion, minorVersion );\n     }\n \n     /**\n@@ -108,7 +102,7 @@ class Meta\n      * @return {@link Meta} instance with all meta information.\n      * @throws IOException on {@link PageCursor} I/O error.\n      */\n-    static Meta read( PageCursor cursor, Layout<?,?> layout ) throws IOException\n+    static Meta read( PageCursor cursor, Layout<?, ?> layout ) throws IOException\n     {\n         int format;\n         int pageSize;\n@@ -135,43 +129,35 @@ class Meta\n         }\n         catch ( CursorException e )\n         {\n-            throw new MetadataMismatchException( e,\n-                    \"Tried to open, but caught an error while reading meta data. \" +\n-                    \"File is expected to be corrupt, try to rebuild.\" );\n+            throw new MetadataMismatchException( e, \"Tried to open, but caught an error while reading meta data. \" + \"File is expected to be corrupt, try to rebuild.\" );\n         }\n \n         return parseMeta( format, pageSize, layoutIdentifier, layoutMajorVersion, layoutMinorVersion );\n     }\n \n-    void verify( Layout<?,?> layout )\n+    void verify( Layout<?, ?> layout )\n     {\n         if ( unusedVersionSlot3 != Meta.UNUSED_VERSION )\n         {\n             throw new MetadataMismatchException( \"Unexpected version \" + unusedVersionSlot3 + \" for unused version slot 3\" );\n         }\n-        if ( unusedVersionSlot4 != Meta.UNUSED_VERSION )\n+\n+if ( unusedVersionSlot4 != Meta.UNUSED_VERSION )\n         {\n             throw new MetadataMismatchException( \"Unexpected version \" + unusedVersionSlot4 + \" for unused version slot 4\" );\n         }\n \n         if ( !layout.compatibleWith( layoutIdentifier, layoutMajorVersion, layoutMinorVersion ) )\n         {\n-            throw new MetadataMismatchException(\n-                    \"Tried to open using layout not compatible with \" +\n-                    \"what the index was created with. Created with: layoutIdentifier=%d,majorVersion=%d,minorVersion=%d. \" +\n-                    \"Opened with layoutIdentifier=%d,majorVersion=%d,minorVersion=%d\",\n-                    layoutIdentifier, layoutMajorVersion, layoutMinorVersion,\n+            throw new MetadataMismatchException( \"Tried to open using layout not compatible with \" + \"what the index was created with. Created with: layoutIdentifier=%d,majorVersion=%d,minorVersion=%d. \" + \"Opened with layoutIdentifier=%d,majorVersion=%d,minorVersion=%d\", layoutIdentifier, layoutMajorVersion, layoutMinorVersion,\n                     layout.identifier(), layout.majorVersion(), layout.minorVersion() );\n         }\n \n         Factory formatByLayout = TreeNodeSelector.selectByLayout( layout );\n-        if ( formatByLayout.formatIdentifier() != formatIdentifier ||\n-             formatByLayout.formatVersion() != formatVersion )\n-        {\n-            throw new MetadataMismatchException( \"Tried to open using layout not compatible with what index was created with. \" +\n-                    \"Created with formatIdentifier:%d,formatVersion:%d. Opened with formatIdentifier:%d,formatVersion%d\",\n-                    formatIdentifier, formatVersion, formatByLayout.formatIdentifier(), formatByLayout.formatVersion() );\n-        }\n+        if ( formatByLayout.formatIdentifier() != formatIdentifier ||formatByLayout.formatVersion() != formatVersion )\n+{\n+            throw new MetadataMismatchException( \"Tried to open using layout not compatible with what index was created with. \" + \"Created with formatIdentifier:%d,formatVersion:%d. Opened with formatIdentifier:%d,formatVersion%d\", formatIdentifier, formatVersion, formatByLayout.formatIdentifier(), formatByLayout.formatVersion() );\n+    }\n     }\n \n     /**\n@@ -181,7 +167,7 @@ class Meta\n      * @param cursor {@link PageCursor} to read meta information from.\n      * @param layout {@link Layout} instance that will get the opportunity to write layout-specific data to the meta page.\n      */\n-    void write( PageCursor cursor, Layout<?,?> layout )\n+    void write( PageCursor cursor, Layout<?, ?> layout )\n     {\n         cursor.putInt( allVersionsCombined() );\n         cursor.putInt( getPageSize() );\n@@ -241,4 +227,4 @@ class Meta\n     {\n         return layoutMinorVersion;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 31
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
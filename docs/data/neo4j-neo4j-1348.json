{
    "project_name": "neo4j-neo4j",
    "error_id": "1348",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "69",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "15",
                    "severity": "error",
                    "message": "'}' at column 15 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "153",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "66",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "175",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "175",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "177",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "177",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "185",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "185",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "188",
                    "column": "69",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "188",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "191",
                    "column": "23",
                    "severity": "error",
                    "message": "'}' at column 23 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "198",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "198",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "199",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "199",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "206",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "206",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "209",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "209",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "212",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "212",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "218",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "218",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "221",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "221",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "223",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "223",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "225",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "225",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "228",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "229",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "238",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "238",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "241",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "241",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "244",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "244",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "246",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "246",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "248",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "248",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "253",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "253",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "259",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "259",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "262",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "262",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "268",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "268",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "274",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "274",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "281",
                    "column": "15",
                    "severity": "error",
                    "message": "'}' at column 15 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "281",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "281",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "287",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "287",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "290",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "290",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "296",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "296",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "299",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "299",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "308",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "308",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "311",
                    "column": "15",
                    "severity": "error",
                    "message": "'}' at column 15 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "311",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "311",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "330",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "330",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "342",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "342",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "347",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "347",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "352",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "352",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "357",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "357",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "357",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "363",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "363",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "365",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "365",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "371",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "371",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "373",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "373",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1348/SystemDiagnostics.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1348/SystemDiagnostics.java\nindex c9f5658bd68..db4bb9934dd 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1348/SystemDiagnostics.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1348/SystemDiagnostics.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.diagnostics.providers;\n \n import java.io.File;\n@@ -65,272 +66,268 @@ import static org.neo4j.io.ByteUnit.bytesToString;\n \n public enum SystemDiagnostics implements DiagnosticsProvider\n {\n-    SYSTEM_MEMORY( \"System memory information\" )\n-    {\n-        @Override\n-        public void dump( DiagnosticsLogger logger )\n-        {\n-            logBytes( logger, \"Total Physical memory: \", OsBeanUtil.getTotalPhysicalMemory() );\n-            logBytes( logger, \"Free Physical memory: \", OsBeanUtil.getFreePhysicalMemory() );\n-            logBytes( logger, \"Committed virtual memory: \", OsBeanUtil.getCommittedVirtualMemory() );\n-            logBytes( logger, \"Total swap space: \", OsBeanUtil.getTotalSwapSpace() );\n-            logBytes( logger, \"Free swap space: \", OsBeanUtil.getFreeSwapSpace() );\n-        }\n-    },\n-    JAVA_MEMORY( \"JVM memory information\" )\n-    {\n-        @Override\n-        public void dump( DiagnosticsLogger logger )\n-        {\n-            logger.log( \"Free  memory: \" + bytesToString( Runtime.getRuntime().freeMemory() ) );\n-            logger.log( \"Total memory: \" + bytesToString( Runtime.getRuntime().totalMemory() ) );\n-            logger.log( \"Max   memory: \" + bytesToString( Runtime.getRuntime().maxMemory() ) );\n-            for ( GarbageCollectorMXBean gc : ManagementFactory.getGarbageCollectorMXBeans() )\n-            {\n-                logger.log( \"Garbage Collector: \" + gc.getName() + \": \" + Arrays.toString( gc.getMemoryPoolNames() ) );\n-            }\n-            for ( MemoryPoolMXBean pool : ManagementFactory.getMemoryPoolMXBeans() )\n-            {\n-                MemoryUsage usage = pool.getUsage();\n-                logger.log( format( \"Memory Pool: %s (%s): committed=%s, used=%s, max=%s, threshold=%s\",\n-                        pool.getName(), pool.getType(), usage == null ? \"?\" : bytesToString( usage.getCommitted() ),\n-                        usage == null ? \"?\" : bytesToString( usage.getUsed() ), usage == null ? \"?\" : bytesToString( usage.getMax() ),\n-                        pool.isUsageThresholdSupported() ? bytesToString( pool.getUsageThreshold() ) : \"?\" ) );\n-            }\n-        }\n-    },\n-    OPERATING_SYSTEM( \"Operating system information\" )\n-    {\n-        @Override\n-        public void dump( DiagnosticsLogger logger )\n-        {\n-            OperatingSystemMXBean os = ManagementFactory.getOperatingSystemMXBean();\n-            RuntimeMXBean runtime = ManagementFactory.getRuntimeMXBean();\n-            logger.log( format( \"Operating System: %s; version: %s; arch: %s; cpus: %s\", os.getName(),\n-                    os.getVersion(), os.getArch(), os.getAvailableProcessors() ) );\n-            logLong( logger, \"Max number of file descriptors: \", OsBeanUtil.getMaxFileDescriptors() );\n-            logLong( logger, \"Number of open file descriptors: \", OsBeanUtil.getOpenFileDescriptors() );\n-            logger.log( \"Process id: \" + runtime.getName() );\n-            logger.log( \"Byte order: \" + ByteOrder.nativeOrder() );\n-            logger.log( \"Local timezone: \" + getLocalTimeZone() );\n-        }\n+    SYSTEM_MEMORY(\"System memory information\")\n+      {\n+          @Override\n+          public void dump(DiagnosticsLogger logger)\n+          {\n+              logBytes(logger, \"Total Physical memory: \", OsBeanUtil.getTotalPhysicalMemory());\n+              logBytes(logger, \"Free Physical memory: \", OsBeanUtil.getFreePhysicalMemory());\n+              logBytes(logger, \"Committed virtual memory: \", OsBeanUtil.getCommittedVirtualMemory());\n+              logBytes(logger, \"Total swap space: \", OsBeanUtil.getTotalSwapSpace());\n+              logBytes(logger, \"Free swap space: \", OsBeanUtil.getFreeSwapSpace());\n+          }\n+      },\n+    JAVA_MEMORY(\"JVM memory information\")\n+      {\n+          @Override\n+          public void dump(DiagnosticsLogger logger)\n+          {\n+              logger.log(\"Free  memory: \" + bytesToString(Runtime.getRuntime().freeMemory()));\n+              logger.log(\"Total memory: \" + bytesToString(Runtime.getRuntime().totalMemory()));\n+              logger.log(\"Max   memory: \" + bytesToString(Runtime.getRuntime().maxMemory()));\n+              for (GarbageCollectorMXBean gc : ManagementFactory.getGarbageCollectorMXBeans())\n+              {\n+                  logger.log(\"Garbage Collector: \" + gc.getName() + \": \" + Arrays.toString(gc.getMemoryPoolNames()));\n+              }\n+              for (MemoryPoolMXBean pool : ManagementFactory.getMemoryPoolMXBeans())\n+              {\n+                  MemoryUsage usage = pool.getUsage();\n+                  logger.log(format(\"Memory Pool: %s (%s): committed=%s, used=%s, max=%s, threshold=%s\",\n+                    pool.getName(), pool.getType(), usage == null ? \"?\" : bytesToString(usage.getCommitted()),\n+                    usage == null ? \"?\" : bytesToString(usage.getUsed()), usage == null ? \"?\" : bytesToString(usage.getMax()),\n+                    pool.isUsageThresholdSupported() ? bytesToString(pool.getUsageThreshold()) : \"?\"));\n+              }\n+          }\n+      },\n+    OPERATING_SYSTEM(\"Operating system information\")\n+      {\n+          @Override\n+          public void dump(DiagnosticsLogger logger)\n+          {\n+              OperatingSystemMXBean os = ManagementFactory.getOperatingSystemMXBean();\n+              RuntimeMXBean runtime = ManagementFactory.getRuntimeMXBean();\n+              logger.log(format(\"Operating System: %s; version: %s; arch: %s; cpus: %s\", os.getName(),\n+                os.getVersion(), os.getArch(), os.getAvailableProcessors()));\n+              logLong(logger, \"Max number of file descriptors: \", OsBeanUtil.getMaxFileDescriptors());\n+              logLong(logger, \"Number of open file descriptors: \", OsBeanUtil.getOpenFileDescriptors());\n+              logger.log(\"Process id: \" + runtime.getName());\n+              logger.log(\"Byte order: \" + ByteOrder.nativeOrder());\n+              logger.log(\"Local timezone: \" + getLocalTimeZone());\n+          }\n \n-        private String getLocalTimeZone()\n-        {\n-            return ZoneId.systemDefault().getId();\n-        }\n-    },\n-    JAVA_VIRTUAL_MACHINE( \"JVM information\" )\n-    {\n-        @Override\n-        public void dump( DiagnosticsLogger logger )\n-        {\n-            RuntimeMXBean runtime = ManagementFactory.getRuntimeMXBean();\n-            logger.log( \"VM Name: \" + runtime.getVmName() );\n-            logger.log( \"VM Vendor: \" + runtime.getVmVendor() );\n-            logger.log( \"VM Version: \" + runtime.getVmVersion() );\n-            CompilationMXBean compiler = ManagementFactory.getCompilationMXBean();\n-            logger.log( \"JIT compiler: \" + ( ( compiler == null ) ? \"unknown\" : compiler.getName() ) );\n-            logger.log( \"VM Arguments: \" + runtime.getInputArguments() );\n-        }\n-    },\n-    CLASSPATH( \"Java classpath\" )\n-    {\n-        @Override\n-        public void dump( DiagnosticsLogger logger )\n-        {\n-            RuntimeMXBean runtime = ManagementFactory.getRuntimeMXBean();\n-            Collection<String> classpath;\n-            if ( runtime.isBootClassPathSupported() )\n-            {\n-                classpath = buildClassPath( getClass().getClassLoader(),\n-                        Map.of( \"bootstrap\", runtime.getBootClassPath(), \"classpath\", runtime.getClassPath() ) );\n-            }\n-            else\n-            {\n-                classpath = buildClassPath( getClass().getClassLoader(), Map.of( \"classpath\", runtime.getClassPath() ) );\n-            }\n-            for ( String path : classpath )\n-            {\n-                logger.log( path );\n-            }\n-        }\n+          private String getLocalTimeZone()\n+          {\n+              return ZoneId.systemDefault().getId();\n+          }\n+      },\n+    JAVA_VIRTUAL_MACHINE(\"JVM information\")\n+      {\n+          @Override\n+          public void dump(DiagnosticsLogger logger)\n+          {\n+              RuntimeMXBean runtime = ManagementFactory.getRuntimeMXBean();\n+              logger.log(\"VM Name: \" + runtime.getVmName());\n+              logger.log(\"VM Vendor: \" + runtime.getVmVendor());\n+              logger.log(\"VM Version: \" + runtime.getVmVersion());\n+              CompilationMXBean compiler = ManagementFactory.getCompilationMXBean();\n+              logger.log(\"JIT compiler: \" + ((compiler == null) ? \"unknown\" : compiler.getName()));\n+              logger.log(\"VM Arguments: \" + runtime.getInputArguments());\n+          }\n+      },\n+    CLASSPATH(\"Java classpath\")\n+      {\n+          @Override\n+          public void dump(DiagnosticsLogger logger)\n+          {\n+              RuntimeMXBean runtime = ManagementFactory.getRuntimeMXBean();\n+              Collection<String> classpath;\n+              if (runtime.isBootClassPathSupported())\n+              {\n+                  classpath = buildClassPath(getClass().getClassLoader(),\n+                    Map.of(\"bootstrap\", runtime.getBootClassPath(), \"classpath\", runtime.getClassPath()));\n+              } else\n+              {\n+                  classpath = buildClassPath(getClass().getClassLoader(), Map.of(\"classpath\", runtime.getClassPath()));\n+              }\n+              for (String path : classpath)\n+              {\n+                  logger.log(path);\n+              }\n+          }\n \n-        private Collection<String> buildClassPath( ClassLoader loader, Map<String, String> classPaths )\n-        {\n-            Map<String, String> paths = new HashMap<>();\n+          private Collection<String> buildClassPath(ClassLoader loader, Map<String, String> classPaths)\n+          {\n+              Map<String, String> paths = new HashMap<>();\n \n-            Set<Entry<String,String>> entries = classPaths.entrySet();\n-            for ( Entry<String,String> classPathEntry : entries )\n-            {\n-                String classPathType = classPathEntry.getKey();\n-                String[] splittedClassPath = classPathEntry.getValue().split( File.pathSeparator );\n-                for ( String entry : splittedClassPath )\n-                {\n-                    String canonicalEntry = canonicalize( entry );\n-                    paths.merge( canonicalEntry, classPathType, ( k, v ) -> v + \" + \" + classPathType );\n-                }\n-            }\n+              Set<Entry<String, String>> entries = classPaths.entrySet();\n+              for (Entry<String, String> classPathEntry : entries)\n+              {\n+                  String classPathType = classPathEntry.getKey();\n+                  String[] splittedClassPath = classPathEntry.getValue().split(File.pathSeparator);\n+                  for (String entry : splittedClassPath)\n+                  {\n+                      String canonicalEntry = canonicalize(entry);\n+                      paths.merge(canonicalEntry, classPathType, (k, v) -> v + \" + \" + classPathType);\n+                  }\n+              }\n \n-            for ( int level = 0; loader != null; level++ )\n-            {\n-                if ( loader instanceof URLClassLoader )\n-                {\n-                    URLClassLoader urls = (URLClassLoader) loader;\n-                    URL[] classLoaderUrls = urls.getURLs();\n-                    if ( classLoaderUrls != null )\n-                    {\n-                        for ( URL url : classLoaderUrls )\n-                        {\n-                            if ( \"file\".equalsIgnoreCase( url.getProtocol() ) )\n-                            {\n-                                String type = \"loader.\" + level;\n-                                paths.merge( url.toString(), type, ( k, v ) -> k + \" + \" + type );\n-                            }\n-                        }\n-                    }\n-                    else\n-                    {\n-                        paths.put( loader.toString(), \"<ClassLoader unexpectedly has null URL array>\" );\n-                    }\n-                }\n-                loader = loader.getParent();\n-            }\n-            List<String> result = new ArrayList<>( paths.size() );\n-            for ( Entry<String, String> path : paths.entrySet() )\n-            {\n-                result.add( \" [\" + path.getValue() + \"] \" + path.getKey() );\n-            }\n-            return result;\n-        }\n-    },\n-    LIBRARY_PATH( \"Library path\" )\n-    {\n-        @Override\n-        public void dump( DiagnosticsLogger logger )\n-        {\n-            RuntimeMXBean runtime = ManagementFactory.getRuntimeMXBean();\n-            for ( String path : runtime.getLibraryPath().split( File.pathSeparator ) )\n-            {\n-                logger.log( canonicalize( path ) );\n-            }\n-        }\n-    },\n-    SYSTEM_PROPERTIES( \"System properties\" )\n-    {\n-        @Override\n-        public void dump( DiagnosticsLogger logger )\n-        {\n-            for ( Object property : System.getProperties().keySet() )\n-            {\n-                if ( property instanceof String )\n-                {\n-                    String key = (String) property;\n-                    if ( key.startsWith( \"java.\" ) || key.startsWith( \"os.\" ) || key.endsWith( \".boot.class.path\" ) ||\n-                            key.equals( \"line.separator\" ) )\n-                    {\n-                        continue;\n-                    }\n-                    logger.log( key + \" = \" + System.getProperty( key ) );\n-                }\n-            }\n-        }\n-    },\n-    TIMEZONE_DATABASE( \"(IANA) TimeZone database version\" )\n-    {\n-        @Override\n-        public void dump( DiagnosticsLogger logger )\n-        {\n-            Map<String,Integer> versions = new HashMap<>();\n-            for ( String tz : ZoneRulesProvider.getAvailableZoneIds() )\n-            {\n-                for ( String version : ZoneRulesProvider.getVersions( tz ).keySet() )\n-                {\n-                    versions.compute( version, ( key, value ) -> value == null ? 1 : (value + 1) );\n-                }\n-            }\n-            String[] sorted = versions.keySet().toArray( new String[0] );\n-            Arrays.sort( sorted );\n-            for ( String tz : sorted )\n-            {\n-                logger.log( format( \"  TimeZone version: %s (available for %d zone identifiers)\", tz, versions.get( tz )  ) );\n-            }\n-        }\n-    },\n-    NETWORK( \"Network information\" )\n-    {\n-        @Override\n-        public void dump( DiagnosticsLogger logger )\n-        {\n-            try\n-            {\n-                Enumeration<NetworkInterface> networkInterfaces = getNetworkInterfaces();\n+              for (int level = 0; loader != null; level++)\n+              {\n+                  if (loader instanceof URLClassLoader)\n+                  {\n+                      URLClassLoader urls = (URLClassLoader) loader;\n+                      URL[] classLoaderUrls = urls.getURLs();\n+                      if (classLoaderUrls != null)\n+                      {\n+                          for (URL url : classLoaderUrls)\n+                          {\n+                              if (\"file\".equalsIgnoreCase(url.getProtocol()))\n+                              {\n+                                  String type = \"loader.\" + level;\n+                                  paths.merge(url.toString(), type, (k, v) -> k + \" + \" + type);\n+                              }\n+                          }\n+                      } else\n+                      {\n+                          paths.put(loader.toString(), \"<ClassLoader unexpectedly has null URL array>\");\n+                      }\n+                  }\n+                  loader = loader.getParent();\n+              }\n+              List<String> result = new ArrayList<>(paths.size());\n+              for (Entry<String, String> path : paths.entrySet())\n+              {\n+                  result.add(\" [\" + path.getValue() + \"] \" + path.getKey());\n+              }\n+              return result;\n+          }\n+      },\n+    LIBRARY_PATH(\"Library path\")\n+      {\n+          @Override\n+          public void dump(DiagnosticsLogger logger)\n+          {\n+              RuntimeMXBean runtime = ManagementFactory.getRuntimeMXBean();\n+              for (String path : runtime.getLibraryPath().split(File.pathSeparator))\n+              {\n+                  logger.log(canonicalize(path));\n+              }\n+          }\n+      },\n+    SYSTEM_PROPERTIES(\"System properties\")\n+      {\n+          @Override\n+          public void dump(DiagnosticsLogger logger)\n+          {\n+              for (Object property : System.getProperties().keySet())\n+              {\n+                  if (property instanceof String)\n+                  {\n+                      String key = (String) property;\n+                      if (key.startsWith(\"java.\") || key.startsWith(\"os.\") || key.endsWith(\".boot.class.path\") ||\n+                        key.equals(\"line.separator\"))\n+                      {\n+                          continue;\n+                      }\n+                      logger.log(key + \" = \" + System.getProperty(key));\n+                  }\n+              }\n+          }\n+      },\n+    TIMEZONE_DATABASE(\"(IANA) TimeZone database version\")\n+      {\n+          @Override\n+          public void dump(DiagnosticsLogger logger)\n+          {\n+              Map<String, Integer> versions = new HashMap<>();\n+              for (String tz : ZoneRulesProvider.getAvailableZoneIds())\n+              {\n+                  for (String version : ZoneRulesProvider.getVersions(tz).keySet())\n+                  {\n+                      versions.compute(version, (key, value) -> value == null ? 1 : (value + 1));\n+                  }\n+              }\n+              String[] sorted = versions.keySet().toArray(new String[0]);\n+              Arrays.sort(sorted);\n+              for (String tz : sorted)\n+              {\n+                  logger.log(format(\"  TimeZone version: %s (available for %d zone identifiers)\", tz, versions.get(tz)));\n+              }\n+          }\n+      },\n+    NETWORK(\"Network information\")\n+      {\n+          @Override\n+          public void dump(DiagnosticsLogger logger)\n+          {\n+              try\n+              {\n+                  Enumeration<NetworkInterface> networkInterfaces = getNetworkInterfaces();\n \n-                while ( networkInterfaces.hasMoreElements() )\n-                {\n-                    NetworkInterface iface = networkInterfaces.nextElement();\n-                    logger.log( format( \"Interface %s:\", iface.getDisplayName() ) );\n+                  while (networkInterfaces.hasMoreElements())\n+                  {\n+                      NetworkInterface iface = networkInterfaces.nextElement();\n+                      logger.log(format(\"Interface %s:\", iface.getDisplayName()));\n \n-                    Enumeration<InetAddress> addresses = iface.getInetAddresses();\n-                    while ( addresses.hasMoreElements() )\n-                    {\n-                        InetAddress address = addresses.nextElement();\n-                        String hostAddress = address.getHostAddress();\n-                        logger.log( format( \"    address: %s\", hostAddress ) );\n-                    }\n-                }\n-            }\n-            catch ( SocketException e )\n-            {\n-                logger.log( \"ERROR: failed to inspect network interfaces and addresses: \" + e.getMessage() );\n-            }\n-        }\n-    },\n-    NATIVE_ACCESSOR( \"Native access information\" )\n-    {\n-        @Override\n-        public void dump( DiagnosticsLogger logger )\n-        {\n-            NativeAccess nativeAccess = NativeAccessProvider.getNativeAccess();\n-            logger.log( \"Native access details: \" + nativeAccess.describe() );\n-        }\n-    },\n-    CONTAINER( \"Container heuristics\" )\n-    {\n-        @Override\n-        public void dump( DiagnosticsLogger logger )\n-        {\n-            logger.log( \"Docker: \" + isRunningInDocker() );\n-            logger.log( \"LXC: \" + isRunningInLxc() );\n-            logger.log( \"Kubernetes: \" + isRunningInKubernetes() );\n-        }\n+                      Enumeration<InetAddress> addresses = iface.getInetAddresses();\n+                      while (addresses.hasMoreElements())\n+                      {\n+                          InetAddress address = addresses.nextElement();\n+                          String hostAddress = address.getHostAddress();\n+                          logger.log(format(\"    address: %s\", hostAddress));\n+                      }\n+                  }\n+              } catch (SocketException e)\n+              {\n+                  logger.log(\"ERROR: failed to inspect network interfaces and addresses: \" + e.getMessage());\n+              }\n+          }\n+      },\n+    NATIVE_ACCESSOR(\"Native access information\")\n+      {\n+          @Override\n+          public void dump(DiagnosticsLogger logger)\n+          {\n+              NativeAccess nativeAccess = NativeAccessProvider.getNativeAccess();\n+              logger.log(\"Native access details: \" + nativeAccess.describe());\n+          }\n+      },\n+    CONTAINER(\"Container heuristics\")\n+      {\n+          @Override\n+          public void dump(DiagnosticsLogger logger)\n+          {\n+              logger.log(\"Docker: \" + isRunningInDocker());\n+              logger.log(\"LXC: \" + isRunningInLxc());\n+              logger.log(\"Kubernetes: \" + isRunningInKubernetes());\n+          }\n \n-        private boolean isRunningInDocker()\n-        {\n-            try ( Stream<String> stream = Files.lines( Paths.get( \"/proc/1/cgroup\" ) ) )\n-            {\n-                return stream.anyMatch( line -> line.contains( \"/docker\" ) );\n-            }\n-            catch ( IOException e )\n-            {\n-                return false;\n-            }\n-        }\n+          private boolean isRunningInDocker()\n+          {\n+              try (Stream<String> stream = Files.lines(Paths.get(\"/proc/1/cgroup\")))\n+              {\n+                  return stream.anyMatch(line -> line.contains(\"/docker\"));\n+              } catch (IOException e)\n+              {\n+                  return false;\n+              }\n+          }\n \n-        private boolean isRunningInLxc()\n-        {\n-            return \"lxc\".equals( System.getProperty( \"container\" ) );\n-        }\n+          private boolean isRunningInLxc()\n+          {\n+              return \"lxc\".equals(System.getProperty(\"container\"));\n+          }\n \n-        private boolean isRunningInKubernetes()\n-        {\n-            return System.getProperty( \"KUBERNETES_SERVICE_HOST\" ) != null;\n-        }\n-    };\n+          private boolean isRunningInKubernetes()\n+          {\n+              return System.getProperty(\"KUBERNETES_SERVICE_HOST\") != null;\n+          }\n+      };\n \n     private final String name;\n \n-    SystemDiagnostics( String name )\n+    SystemDiagnostics(String name)\n     {\n         this.name = name;\n     }\n@@ -342,41 +339,40 @@ public enum SystemDiagnostics implements DiagnosticsProvider\n     }\n \n     @VisibleForTesting\n-    static String canonicalize( String path )\n+    static String canonicalize(String path)\n     {\n         try\n         {\n-            boolean hasWildcard = path.endsWith( \"*\" );\n-            if ( hasWildcard )\n+            boolean hasWildcard = path.endsWith(\"*\");\n+            if (hasWildcard)\n             {\n-                path = path.substring( 0, path.length() - 1 );\n+                path = path.substring(0, path.length() - 1);\n             }\n-            String result = FileUtils.getCanonicalFile( Path.of( path ) ).toAbsolutePath().toString();\n-            if ( hasWildcard )\n+            String result = FileUtils.getCanonicalFile(Path.of(path)).toAbsolutePath().toString();\n+            if (hasWildcard)\n             {\n                 result += File.separator + \"*\";\n             }\n             return result;\n-        }\n-        catch ( UncheckedIOException e )\n+        } catch (UncheckedIOException e)\n         {\n-            return Path.of( path ).toAbsolutePath().toString();\n+            return Path.of(path).toAbsolutePath().toString();\n         }\n     }\n \n-    private static void logBytes( DiagnosticsLogger logger, String message, long value )\n+    private static void logBytes(DiagnosticsLogger logger, String message, long value)\n     {\n-        if ( value != OsBeanUtil.VALUE_UNAVAILABLE )\n+        if (value != OsBeanUtil.VALUE_UNAVAILABLE)\n         {\n-            logger.log( message + bytesToString( value ) );\n+            logger.log(message + bytesToString(value));\n         }\n     }\n \n-    private static void logLong( DiagnosticsLogger logger, String message, long value )\n+    private static void logLong(DiagnosticsLogger logger, String message, long value)\n     {\n-        if ( value != OsBeanUtil.VALUE_UNAVAILABLE )\n+        if (value != OsBeanUtil.VALUE_UNAVAILABLE)\n         {\n-            logger.log( message + value );\n+            logger.log(message + value);\n         }\n     }\n }\n",
            "diff_size": 270
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1348/SystemDiagnostics.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/1348/SystemDiagnostics.java\nindex c9f5658bd68..0176afa5cde 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1348/SystemDiagnostics.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/1348/SystemDiagnostics.java\n@@ -379,4 +379,4 @@ public enum SystemDiagnostics implements DiagnosticsProvider\n             logger.log( message + value );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
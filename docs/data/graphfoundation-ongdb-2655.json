{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2655",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "35",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "35",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2655/DoubleArray.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2655/DoubleArray.java\nindex 33d8f72c49b..0f86f18a2ac 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2655/DoubleArray.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2655/DoubleArray.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.values.storable;\n \n import java.util.Arrays;\n@@ -29,120 +30,120 @@ import static java.lang.String.format;\n \n public class DoubleArray extends FloatingPointArray\n {\n-    private final double[] value;\n-\n-    DoubleArray( double[] value )\n-    {\n-        assert value != null;\n-        this.value = value;\n-    }\n-\n-    @Override\n-    public int length()\n-    {\n-        return value.length;\n-    }\n-\n-    @Override\n-    public double doubleValue( int index )\n-    {\n-        return value[index];\n-    }\n-\n-    @Override\n-    public int computeHash()\n-    {\n-        return NumberValues.hash( value );\n-    }\n-\n-    @Override\n-    public <T> T map( ValueMapper<T> mapper )\n-    {\n-        return mapper.mapDoubleArray( this );\n-    }\n-\n-    @Override\n-    public boolean equals( Value other )\n-    {\n-        return other.equals( value );\n-    }\n-\n-    @Override\n-    public boolean equals( byte[] x )\n-    {\n-        return PrimitiveArrayValues.equals( x, value );\n-    }\n-\n-    @Override\n-    public boolean equals( short[] x )\n-    {\n-        return PrimitiveArrayValues.equals( x, value );\n-    }\n-\n-    @Override\n-    public boolean equals( int[] x )\n-    {\n-        return PrimitiveArrayValues.equals( x, value );\n-    }\n-\n-    @Override\n-    public boolean equals( long[] x )\n-    {\n-        return PrimitiveArrayValues.equals( x, value );\n-    }\n-\n-    @Override\n-    public boolean equals( float[] x )\n-    {\n-        return PrimitiveArrayValues.equals( x, value );\n-    }\n-\n-    @Override\n-    public boolean equals( double[] x )\n-    {\n-        return Arrays.equals( x, value );\n-    }\n-\n-    @Override\n-    public <E extends Exception> void writeTo( ValueWriter<E> writer ) throws E\n-    {\n-        PrimitiveArrayWriting.writeTo( writer, value );\n-    }\n-\n-    @Override\n-    public double[] asObjectCopy()\n-    {\n-        return value.clone();\n-    }\n-\n-    @Override\n-    @Deprecated\n-    public double[] asObject()\n-    {\n-        return value;\n-    }\n-\n-    @Override\n-    public String prettyPrint()\n-    {\n-        return Arrays.toString( value );\n-    }\n-\n-    @Override\n-    public AnyValue value( int position )\n-    {\n-        return Values.doubleValue( doubleValue( position ) );\n-    }\n-\n-    @Override\n-    public String toString()\n-    {\n-        return format( \"%s%s\", getTypeName(), Arrays.toString( value ) );\n-    }\n-\n-    @Override\n-    public String getTypeName()\n-    {\n-        return \"DoubleArray\";\n-    }\n+  private final double[] value;\n+\n+  DoubleArray(double[] value)\n+  {\n+    assert value != null;\n+    this.value = value;\n+  }\n+\n+  @Override\n+  public int length()\n+  {\n+    return value.length;\n+  }\n+\n+  @Override\n+  public double doubleValue(int index)\n+  {\n+    return value[index];\n+  }\n+\n+  @Override\n+  public int computeHash()\n+  {\n+    return NumberValues.hash(value);\n+  }\n+\n+  @Override\n+  public <T> T map(ValueMapper<T> mapper)\n+  {\n+    return mapper.mapDoubleArray(this);\n+  }\n+\n+  @Override\n+  public boolean equals(Value other)\n+  {\n+    return other.equals(value);\n+  }\n+\n+  @Override\n+  public boolean equals(byte[] x)\n+  {\n+    return PrimitiveArrayValues.equals(x, value);\n+  }\n+\n+  @Override\n+  public boolean equals(short[] x)\n+  {\n+    return PrimitiveArrayValues.equals(x, value);\n+  }\n+\n+  @Override\n+  public boolean equals(int[] x)\n+  {\n+    return PrimitiveArrayValues.equals(x, value);\n+  }\n+\n+  @Override\n+  public boolean equals(long[] x)\n+  {\n+    return PrimitiveArrayValues.equals(x, value);\n+  }\n+\n+  @Override\n+  public boolean equals(float[] x)\n+  {\n+    return PrimitiveArrayValues.equals(x, value);\n+  }\n+\n+  @Override\n+  public boolean equals(double[] x)\n+  {\n+    return Arrays.equals(x, value);\n+  }\n+\n+  @Override\n+  public <E extends Exception> void writeTo(ValueWriter<E> writer) throws E\n+  {\n+    PrimitiveArrayWriting.writeTo(writer, value);\n+  }\n+\n+  @Override\n+  public double[] asObjectCopy()\n+  {\n+    return value.clone();\n+  }\n+\n+  @Override\n+  @Deprecated\n+  public double[] asObject()\n+  {\n+    return value;\n+  }\n+\n+  @Override\n+  public String prettyPrint()\n+  {\n+    return Arrays.toString(value);\n+  }\n+\n+  @Override\n+  public AnyValue value(int position)\n+  {\n+    return Values.doubleValue(doubleValue(position));\n+  }\n+\n+  @Override\n+  public String toString()\n+  {\n+    return format(\"%s%s\", getTypeName(), Arrays.toString(value));\n+  }\n+\n+  @Override\n+  public String getTypeName()\n+  {\n+    return \"DoubleArray\";\n+  }\n }\n",
            "diff_size": 117
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2655/DoubleArray.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2655/DoubleArray.java\nindex 33d8f72c49b..6ed33e83e00 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2655/DoubleArray.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2655/DoubleArray.java\n@@ -145,4 +145,4 @@ public class DoubleArray extends FloatingPointArray\n     {\n         return \"DoubleArray\";\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2655/DoubleArray.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/2655/DoubleArray.java\nindex 33d8f72c49b..eae6528c220 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2655/DoubleArray.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/2655/DoubleArray.java\n@@ -20,11 +20,9 @@\n package org.neo4j.values.storable;\n \n import java.util.Arrays;\n-\n import org.neo4j.hashing.HashFunction;\n import org.neo4j.values.AnyValue;\n import org.neo4j.values.ValueMapper;\n-\n import static java.lang.String.format;\n \n public class DoubleArray extends FloatingPointArray\n@@ -46,7 +44,7 @@ public class DoubleArray extends FloatingPointArray\n     @Override\n     public double doubleValue( int index )\n     {\n-        return value[index];\n+        return value[ index];\n     }\n \n     @Override\n@@ -145,4 +143,4 @@ public class DoubleArray extends FloatingPointArray\n     {\n         return \"DoubleArray\";\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "neo4j-neo4j",
    "error_id": "1479",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "40",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "102",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "116",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "56",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1479/NodeLabelIndexCursorScan.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1479/NodeLabelIndexCursorScan.java\nindex 55b5dc8ced4..247b06f7487 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1479/NodeLabelIndexCursorScan.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1479/NodeLabelIndexCursorScan.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.newapi;\n \n import org.eclipse.collections.api.iterator.LongIterator;\n@@ -31,41 +32,39 @@ import org.neo4j.kernel.impl.index.schema.TokenScan;\n \n import static org.neo4j.collection.PrimitiveLongCollections.mergeToSet;\n \n-class NodeLabelIndexCursorScan extends BaseCursorScan<NodeLabelIndexCursor,TokenScan>\n+class NodeLabelIndexCursorScan extends BaseCursorScan<NodeLabelIndexCursor, TokenScan>\n {\n     private final LongSet removed;\n     private final int label;\n \n-    NodeLabelIndexCursorScan( Read read, int label, TokenScan tokenScan, PageCursorTracer cursorTracer )\n+    NodeLabelIndexCursorScan(Read read, int label, TokenScan tokenScan, PageCursorTracer cursorTracer)\n     {\n-        super( tokenScan, read, () -> read.txState().nodesWithLabelChanged( label ).getAdded().toArray(), cursorTracer );\n+        super(tokenScan, read, () -> read.txState().nodesWithLabelChanged(label).getAdded().toArray(), cursorTracer);\n         this.label = label;\n-        if ( hasChanges )\n+        if (hasChanges)\n         {\n             TransactionState txState = read.txState();\n-            this.removed = mergeToSet( txState.addedAndRemovedNodes().getRemoved(),\n-                    txState.nodesWithLabelChanged( label ).getRemoved() );\n-        }\n-        else\n+            this.removed = mergeToSet(txState.addedAndRemovedNodes().getRemoved(),\n+              txState.nodesWithLabelChanged(label).getRemoved());\n+        } else\n         {\n             this.removed = LongSets.immutable.empty();\n         }\n     }\n \n     @Override\n-    protected boolean scanStore( NodeLabelIndexCursor cursor, int sizeHint, LongIterator addedItems )\n+    protected boolean scanStore(NodeLabelIndexCursor cursor, int sizeHint, LongIterator addedItems)\n     {\n         DefaultNodeLabelIndexCursor indexCursor = (DefaultNodeLabelIndexCursor) cursor;\n-        indexCursor.setRead( read );\n-        IndexProgressor indexProgressor = storageScan.initializeBatch( indexCursor.entityTokenClient(), sizeHint, cursorTracer );\n+        indexCursor.setRead(read);\n+        IndexProgressor indexProgressor = storageScan.initializeBatch(indexCursor.entityTokenClient(), sizeHint, cursorTracer);\n \n-        if ( indexProgressor == IndexProgressor.EMPTY && !addedItems.hasNext() )\n+        if (indexProgressor == IndexProgressor.EMPTY && !addedItems.hasNext())\n         {\n             return false;\n-        }\n-        else\n+        } else\n         {\n-            indexCursor.scan( indexProgressor, addedItems, removed, label );\n+            indexCursor.scan(indexProgressor, addedItems, removed, label);\n             return true;\n         }\n     }\n",
            "diff_size": 16
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
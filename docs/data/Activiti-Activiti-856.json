{
    "project_name": "Activiti-Activiti",
    "error_id": "856",
    "information": {
        "errors": [
            {
                "line": "16",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * limitations under the License.\n */\npackage org.activiti.runtime.api.event.internal;\n\nimport java.util.List;\nimport java.util.Optional;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/856/MessageSubscriptionCancelledListenerDelegate.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler/856/MessageSubscriptionCancelledListenerDelegate.java\nindex 87caf290943..2931f16bb20 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/856/MessageSubscriptionCancelledListenerDelegate.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler/856/MessageSubscriptionCancelledListenerDelegate.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.runtime.api.event.internal;\n \n import java.util.List;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/856/MessageSubscriptionCancelledListenerDelegate.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/intellij/856/MessageSubscriptionCancelledListenerDelegate.java\nindex 87caf290943..acebc8b9bef 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/856/MessageSubscriptionCancelledListenerDelegate.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/intellij/856/MessageSubscriptionCancelledListenerDelegate.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.runtime.api.event.internal;\n \n import java.util.List;\n@@ -52,11 +53,11 @@ public class MessageSubscriptionCancelledListenerDelegate implements ActivitiEve\n     public boolean isFailOnException() {\n         return false;\n     }\n-    \n+\n     protected boolean isValidEvent(ActivitiEvent event) {\n         return Optional.ofNullable(event)\n-                       .filter(ActivitiEntityEvent.class::isInstance)\n-                       .map(e -> ((ActivitiEntityEvent) event).getEntity() instanceof MessageEventSubscriptionEntity)\n-                       .orElse(false);\n+                .filter(ActivitiEntityEvent.class::isInstance)\n+                .map(e -> ((ActivitiEntityEvent) event).getEntity() instanceof MessageEventSubscriptionEntity)\n+                .orElse(false);\n     }\n }\n",
            "diff_size": 5
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "16",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "29",
                    "severity": "error",
                    "message": "'CLASS_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/856/MessageSubscriptionCancelledListenerDelegate.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/codebuff/856/MessageSubscriptionCancelledListenerDelegate.java\nindex 87caf290943..59a6e469fd1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/856/MessageSubscriptionCancelledListenerDelegate.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/codebuff/856/MessageSubscriptionCancelledListenerDelegate.java\n@@ -17,7 +17,6 @@ package org.activiti.runtime.api.event.internal;\n \n import java.util.List;\n import java.util.Optional;\n-\n import org.activiti.api.process.model.events.MessageSubscriptionCancelledEvent;\n import org.activiti.api.process.runtime.events.listener.ProcessRuntimeEventListener;\n import org.activiti.engine.delegate.event.ActivitiEntityEvent;\n@@ -26,37 +25,33 @@ import org.activiti.engine.delegate.event.ActivitiEventListener;\n import org.activiti.engine.impl.persistence.entity.MessageEventSubscriptionEntity;\n import org.activiti.runtime.api.event.impl.ToMessageSubscriptionCancelledConverter;\n \n+\n public class MessageSubscriptionCancelledListenerDelegate implements ActivitiEventListener {\n \n-    private List<ProcessRuntimeEventListener<MessageSubscriptionCancelledEvent>> processRuntimeEventListeners;\n+  private List<ProcessRuntimeEventListener<MessageSubscriptionCancelledEvent>> processRuntimeEventListeners;\n \n-    private ToMessageSubscriptionCancelledConverter converter;\n+  private ToMessageSubscriptionCancelledConverter converter;\n \n-    public MessageSubscriptionCancelledListenerDelegate(List<ProcessRuntimeEventListener<MessageSubscriptionCancelledEvent>> processRuntimeEventListeners,\n-                                                        ToMessageSubscriptionCancelledConverter converter) {\n-        this.processRuntimeEventListeners = processRuntimeEventListeners;\n-        this.converter = converter;\n-    }\n+  public MessageSubscriptionCancelledListenerDelegate(List<ProcessRuntimeEventListener<MessageSubscriptionCancelledEvent>> processRuntimeEventListeners, ToMessageSubscriptionCancelledConverter converter) {\n+    this.processRuntimeEventListeners = processRuntimeEventListeners;\n+    this.converter = converter;\n+  }\n \n-    @Override\n-    public void onEvent(ActivitiEvent event) {\n-        if (isValidEvent(event)) {\n-            converter.from((ActivitiEntityEvent) event)\n-                    .ifPresent(convertedEvent -> {\n-                        processRuntimeEventListeners.forEach(listener -> listener.onEvent(convertedEvent));\n-                    });\n-        }\n+  @Override\n+  public void onEvent(ActivitiEvent event) {\n+    if (isValidEvent(event)) {\n+      converter.from((ActivitiEntityEvent) event).ifPresent(convertedEvent -> {\n+        processRuntimeEventListeners.forEach(listener -> listener.onEvent(convertedEvent));\n+                                                 });\n     }\n+  }\n \n-    @Override\n-    public boolean isFailOnException() {\n-        return false;\n-    }\n-    \n-    protected boolean isValidEvent(ActivitiEvent event) {\n-        return Optional.ofNullable(event)\n-                       .filter(ActivitiEntityEvent.class::isInstance)\n-                       .map(e -> ((ActivitiEntityEvent) event).getEntity() instanceof MessageEventSubscriptionEntity)\n-                       .orElse(false);\n-    }\n-}\n+  @Override\n+  public boolean isFailOnException() {\n+    return false;\n+  }\n+\n+  protected boolean isValidEvent(ActivitiEvent event) {\n+    return Optional.ofNullable(event).filter(ActivitiEntityEvent.class::isInstance).map(e -> ((ActivitiEntityEvent) event).getEntity() instanceof MessageEventSubscriptionEntity).orElse(false);\n+  }\n+}\n\\ No newline at end of file\n",
            "diff_size": 30
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/856/MessageSubscriptionCancelledListenerDelegate.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_random/856/MessageSubscriptionCancelledListenerDelegate.java\nindex 87caf290943..2931f16bb20 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/856/MessageSubscriptionCancelledListenerDelegate.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_random/856/MessageSubscriptionCancelledListenerDelegate.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.runtime.api.event.internal;\n \n import java.util.List;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/856/MessageSubscriptionCancelledListenerDelegate.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_three_grams/856/MessageSubscriptionCancelledListenerDelegate.java\nindex 87caf290943..2931f16bb20 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/856/MessageSubscriptionCancelledListenerDelegate.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_three_grams/856/MessageSubscriptionCancelledListenerDelegate.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.runtime.api.event.internal;\n \n import java.util.List;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
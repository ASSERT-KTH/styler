{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1985",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "71",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "90",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "93",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "106",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "83",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "162",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "162",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "167",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "167",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "172",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "172",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "179",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "179",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "179",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "184",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "184",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "190",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "196",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "196",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "202",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "202",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "204",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "204",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "206",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "206",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "216",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "216",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "225",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "225",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "227",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "227",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "231",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "231",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "233",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "233",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "240",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "240",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "251",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "251",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "253",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "253",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "258",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "258",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "264",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "264",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "275",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "275",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "277",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "277",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "283",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "283",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "289",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "289",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "291",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "291",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "294",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "294",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "294",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "297",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1985/DumpStoreChain.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1985/DumpStoreChain.java\nindex 8108630a093..38c48c94e8b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1985/DumpStoreChain.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1985/DumpStoreChain.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.tools.dump;\n \n import java.io.File;\n@@ -53,256 +54,250 @@ import static org.neo4j.kernel.impl.store.record.RecordLoad.FORCE;\n /**\n  * Tool to dump content of {@link StoreType#NODE}, {@link StoreType#PROPERTY}, {@link StoreType#RELATIONSHIP} stores\n  * into readable format.\n+ *\n  * @param <RECORD> record type to dump\n  */\n public abstract class DumpStoreChain<RECORD extends AbstractBaseRecord>\n {\n-    private static final String REVERSE = \"reverse\";\n-    private static final String NODE = \"node\";\n-    private static final String FIRST = \"first\";\n-    private static final String RELS = \"relationships\";\n-    private static final String PROPS = \"properties\";\n-    private static final String RELSTORE = \"neostore.relationshipstore.db\";\n-    private static final String PROPSTORE = \"neostore.propertystore.db\";\n-    private static final String NODESTORE = \"neostore.nodestore.db\";\n+  private static final String REVERSE = \"reverse\";\n+  private static final String NODE = \"node\";\n+  private static final String FIRST = \"first\";\n+  private static final String RELS = \"relationships\";\n+  private static final String PROPS = \"properties\";\n+  private static final String RELSTORE = \"neostore.relationshipstore.db\";\n+  private static final String PROPSTORE = \"neostore.propertystore.db\";\n+  private static final String NODESTORE = \"neostore.nodestore.db\";\n \n-    public static void main( String... args ) throws Exception\n+  public static void main(String... args) throws Exception\n+  {\n+    Args arguments = Args.withFlags(REVERSE, RELS, PROPS).parse(args);\n+    List<String> orphans = arguments.orphans();\n+    if (orphans.size() != 1)\n     {\n-        Args arguments = Args.withFlags( REVERSE, RELS, PROPS ).parse( args );\n-        List<String> orphans = arguments.orphans();\n-        if ( orphans.size() != 1 )\n-        {\n-            throw invalidUsage( \"no store file given\" );\n-        }\n-        File storeFile = new File( orphans.get( 0 ) );\n-        DumpStoreChain tool;\n-        if ( storeFile.isDirectory() )\n-        {\n-            verifyFilesExists( new File( storeFile, NODESTORE ),\n-                    new File( storeFile, RELSTORE ),\n-                    new File( storeFile, PROPSTORE ) );\n-            tool = chainForNode( arguments );\n-        }\n-        else\n-        {\n-            verifyFilesExists( storeFile );\n-            if ( RELSTORE.equals( storeFile.getName() ) )\n-            {\n-                tool = relationshipChain( arguments );\n-            }\n-            else if ( PROPSTORE.equals( storeFile.getName() ) )\n-            {\n-                tool = propertyChain( arguments );\n-            }\n-            else\n-            {\n-                throw invalidUsage( \"not a chain store: \" + storeFile.getName() );\n-            }\n-        }\n-        tool.dump( storeFile );\n+      throw invalidUsage(\"no store file given\");\n     }\n-\n-    long firstRecord;\n-\n-    private DumpStoreChain( long firstRecord )\n+    File storeFile = new File(orphans.get(0));\n+    DumpStoreChain tool;\n+    if (storeFile.isDirectory())\n     {\n-        this.firstRecord = firstRecord;\n-    }\n-\n-    private static LogProvider logProvider()\n+      verifyFilesExists(new File(storeFile, NODESTORE),\n+          new File(storeFile, RELSTORE),\n+          new File(storeFile, PROPSTORE));\n+      tool = chainForNode(arguments);\n+    } else\n     {\n-        return Boolean.getBoolean( \"logger\" ) ? FormattedLogProvider.toOutputStream( System.out ) : NullLogProvider.getInstance();\n+      verifyFilesExists(storeFile);\n+      if (RELSTORE.equals(storeFile.getName()))\n+      {\n+        tool = relationshipChain(arguments);\n+      } else if (PROPSTORE.equals(storeFile.getName()))\n+      {\n+        tool = propertyChain(arguments);\n+      } else\n+      {\n+        throw invalidUsage(\"not a chain store: \" + storeFile.getName());\n+      }\n     }\n+    tool.dump(storeFile);\n+  }\n+\n+  long firstRecord;\n \n-    void dump( File storeDir ) throws IOException\n+  private DumpStoreChain(long firstRecord)\n+  {\n+    this.firstRecord = firstRecord;\n+  }\n+\n+  private static LogProvider logProvider()\n+  {\n+    return Boolean.getBoolean(\"logger\") ? FormattedLogProvider.toOutputStream(System.out) : NullLogProvider.getInstance();\n+  }\n+\n+  void dump(File storeDir) throws IOException\n+  {\n+    try (DefaultFileSystemAbstraction fs = new DefaultFileSystemAbstraction();\n+         PageCache pageCache = createPageCache(fs))\n     {\n-        try ( DefaultFileSystemAbstraction fs = new DefaultFileSystemAbstraction();\n-              PageCache pageCache = createPageCache( fs ) )\n-        {\n-            DefaultIdGeneratorFactory idGeneratorFactory = new DefaultIdGeneratorFactory( fs );\n-            Config config = Config.defaults();\n-            StoreFactory storeFactory = new StoreFactory( storeDir, config, idGeneratorFactory, pageCache, fs,\n-                    logProvider(), EmptyVersionContextSupplier.EMPTY );\n+      DefaultIdGeneratorFactory idGeneratorFactory = new DefaultIdGeneratorFactory(fs);\n+      Config config = Config.defaults();\n+      StoreFactory storeFactory = new StoreFactory(storeDir, config, idGeneratorFactory, pageCache, fs,\n+          logProvider(), EmptyVersionContextSupplier.EMPTY);\n \n-            try ( NeoStores neoStores = storeFactory.openNeoStores( getStoreTypes() ) )\n-            {\n-                RecordStore<RECORD> store = store( neoStores );\n-                RECORD record = store.newRecord();\n-                for ( long next = firstRecord; next != -1; )\n-                {\n-                    store.getRecord( next, record, RecordLoad.FORCE );\n-                    System.out.println( record );\n-                    next = next( record );\n-                }\n-            }\n+      try (NeoStores neoStores = storeFactory.openNeoStores(getStoreTypes()))\n+      {\n+        RecordStore<RECORD> store = store(neoStores);\n+        RECORD record = store.newRecord();\n+        for (long next = firstRecord; next != -1; )\n+        {\n+          store.getRecord(next, record, RecordLoad.FORCE);\n+          System.out.println(record);\n+          next = next(record);\n         }\n+      }\n     }\n+  }\n \n-    private StoreType[] getStoreTypes()\n-    {\n-        return new StoreType[]{StoreType.NODE, StoreType.PROPERTY, StoreType.RELATIONSHIP};\n-    }\n+  private StoreType[] getStoreTypes()\n+  {\n+    return new StoreType[] {StoreType.NODE, StoreType.PROPERTY, StoreType.RELATIONSHIP};\n+  }\n \n-    abstract long next( RECORD record );\n+  abstract long next(RECORD record);\n \n-    abstract RecordStore<RECORD> store( NeoStores neoStores );\n+  abstract RecordStore<RECORD> store(NeoStores neoStores);\n \n-    private static DumpStoreChain propertyChain( Args args )\n-    {\n-        boolean reverse = verifyParametersAndCheckReverse( args, FIRST );\n-        return new DumpPropertyChain( Long.parseLong( args.get( FIRST, null ) ), reverse );\n-    }\n+  private static DumpStoreChain propertyChain(Args args)\n+  {\n+    boolean reverse = verifyParametersAndCheckReverse(args, FIRST);\n+    return new DumpPropertyChain(Long.parseLong(args.get(FIRST, null)), reverse);\n+  }\n \n-    private static DumpStoreChain relationshipChain( Args args )\n-    {\n-        boolean reverse = verifyParametersAndCheckReverse( args, FIRST, NODE );\n-        long node = Long.parseLong( args.get( NODE, null ) );\n-        return new DumpRelationshipChain( Long.parseLong( args.get( FIRST, null ) ), node, reverse );\n-    }\n+  private static DumpStoreChain relationshipChain(Args args)\n+  {\n+    boolean reverse = verifyParametersAndCheckReverse(args, FIRST, NODE);\n+    long node = Long.parseLong(args.get(NODE, null));\n+    return new DumpRelationshipChain(Long.parseLong(args.get(FIRST, null)), node, reverse);\n+  }\n \n-    private static DumpStoreChain chainForNode( Args args )\n+  private static DumpStoreChain chainForNode(Args args)\n+  {\n+    Set<String> kwArgs = args.asMap().keySet();\n+    verifyParameters(kwArgs, kwArgs.contains(RELS) ? RELS : PROPS, NODE);\n+    final long node = Long.parseLong(args.get(NODE, null));\n+    if (args.getBoolean(RELS, false, true))\n     {\n-        Set<String> kwArgs = args.asMap().keySet();\n-        verifyParameters( kwArgs, kwArgs.contains( RELS ) ? RELS : PROPS, NODE );\n-        final long node = Long.parseLong( args.get( NODE, null ) );\n-        if ( args.getBoolean( RELS, false, true ) )\n-        {\n-            return new DumpRelationshipChain( -1, node, false )\n-            {\n-                @Override\n-                RelationshipStore store( NeoStores neoStores )\n-                {\n-                    NodeRecord nodeRecord = nodeRecord( neoStores, node );\n-                    firstRecord = nodeRecord.isDense() ? -1 : nodeRecord.getNextRel();\n-                    return super.store( neoStores );\n-                }\n-            };\n-        }\n-        else if ( args.getBoolean( PROPS, false, true ) )\n+      return new DumpRelationshipChain(-1, node, false)\n+      {\n+        @Override\n+        RelationshipStore store(NeoStores neoStores)\n         {\n-            return new DumpPropertyChain( -1, false )\n-            {\n-                @Override\n-                PropertyStore store( NeoStores neoStores )\n-                {\n-                    firstRecord = nodeRecord( neoStores, node ).getNextProp();\n-                    return super.store( neoStores );\n-                }\n-            };\n+          NodeRecord nodeRecord = nodeRecord(neoStores, node);\n+          firstRecord = nodeRecord.isDense() ? -1 : nodeRecord.getNextRel();\n+          return super.store(neoStores);\n         }\n-        else\n+      };\n+    } else if (args.getBoolean(PROPS, false, true))\n+    {\n+      return new DumpPropertyChain(-1, false)\n+      {\n+        @Override\n+        PropertyStore store(NeoStores neoStores)\n         {\n-            throw invalidUsage( String.format( \"Must be either -%s or -%s\", RELS, PROPS ) );\n+          firstRecord = nodeRecord(neoStores, node).getNextProp();\n+          return super.store(neoStores);\n         }\n+      };\n+    } else\n+    {\n+      throw invalidUsage(String.format(\"Must be either -%s or -%s\", RELS, PROPS));\n     }\n+  }\n \n-    private static NodeRecord nodeRecord( NeoStores neoStores, long id )\n+  private static NodeRecord nodeRecord(NeoStores neoStores, long id)\n+  {\n+    NodeStore nodeStore = neoStores.getNodeStore();\n+    return nodeStore.getRecord(id, nodeStore.newRecord(), FORCE);\n+  }\n+\n+  private static void verifyFilesExists(File... files)\n+  {\n+    for (File file : files)\n     {\n-        NodeStore nodeStore = neoStores.getNodeStore();\n-        return nodeStore.getRecord( id, nodeStore.newRecord(), FORCE );\n+      if (!file.isFile())\n+      {\n+        throw invalidUsage(file + \" does not exist\");\n+      }\n     }\n+  }\n \n-    private static void verifyFilesExists( File... files )\n+  private static boolean verifyParametersAndCheckReverse(Args args, String... parameters)\n+  {\n+    Set<String> kwArgs = args.asMap().keySet();\n+    if (kwArgs.contains(REVERSE))\n     {\n-        for ( File file : files )\n-        {\n-            if ( !file.isFile() )\n-            {\n-                throw invalidUsage( file + \" does not exist\" );\n-            }\n-        }\n+      parameters = Arrays.copyOf(parameters, parameters.length + 1);\n+      parameters[parameters.length - 1] = REVERSE;\n     }\n+    verifyParameters(kwArgs, parameters);\n+    return args.getBoolean(REVERSE, false, true);\n+  }\n \n-    private static boolean verifyParametersAndCheckReverse( Args args, String... parameters )\n+  private static void verifyParameters(Set<String> args, String... parameters)\n+  {\n+    if (args.size() != parameters.length)\n     {\n-        Set<String> kwArgs = args.asMap().keySet();\n-        if ( kwArgs.contains( REVERSE ) )\n-        {\n-            parameters = Arrays.copyOf( parameters, parameters.length + 1 );\n-            parameters[parameters.length - 1] = REVERSE;\n-        }\n-        verifyParameters( kwArgs, parameters );\n-        return args.getBoolean( REVERSE, false, true );\n+      throw invalidUsage(\"accepted/required parameters: \" + Arrays.toString(parameters));\n     }\n-\n-    private static void verifyParameters( Set<String> args, String... parameters )\n+    for (String parameter : parameters)\n     {\n-        if ( args.size() != parameters.length )\n-        {\n-            throw invalidUsage( \"accepted/required parameters: \" + Arrays.toString( parameters ) );\n-        }\n-        for ( String parameter : parameters )\n-        {\n-            if ( !args.contains( parameter ) )\n-            {\n-                throw invalidUsage( \"accepted/required parameters: \" + Arrays.toString( parameters ) );\n-            }\n-        }\n+      if (!args.contains(parameter))\n+      {\n+        throw invalidUsage(\"accepted/required parameters: \" + Arrays.toString(parameters));\n+      }\n     }\n+  }\n+\n+  private static Error invalidUsage(String message)\n+  {\n+    System.err.println(\"invalid usage: \" + message);\n+    System.exit(1);\n+    return null;\n+  }\n+\n+  private static class DumpPropertyChain extends DumpStoreChain<PropertyRecord>\n+  {\n+    private final boolean reverse;\n \n-    private static Error invalidUsage( String message )\n+    DumpPropertyChain(long first, boolean reverse)\n     {\n-        System.err.println( \"invalid usage: \" + message );\n-        System.exit( 1 );\n-        return null;\n+      super(first);\n+      this.reverse = reverse;\n     }\n \n-    private static class DumpPropertyChain extends DumpStoreChain<PropertyRecord>\n+    @Override\n+    PropertyStore store(NeoStores neoStores)\n     {\n-        private final boolean reverse;\n+      return neoStores.getPropertyStore();\n+    }\n \n-        DumpPropertyChain( long first, boolean reverse )\n-        {\n-            super( first );\n-            this.reverse = reverse;\n-        }\n+    @Override\n+    long next(PropertyRecord record)\n+    {\n+      return reverse ? record.getPrevProp() : record.getNextProp();\n+    }\n+  }\n \n-        @Override\n-        PropertyStore store( NeoStores neoStores )\n-        {\n-            return neoStores.getPropertyStore();\n-        }\n+  private static class DumpRelationshipChain extends DumpStoreChain<RelationshipRecord>\n+  {\n+    private final long node;\n+    private final boolean reverse;\n \n-        @Override\n-        long next( PropertyRecord record )\n-        {\n-            return reverse ? record.getPrevProp() : record.getNextProp();\n-        }\n+    DumpRelationshipChain(long first, long node, boolean reverse)\n+    {\n+      super(first);\n+      this.node = node;\n+      this.reverse = reverse;\n     }\n \n-    private static class DumpRelationshipChain extends DumpStoreChain<RelationshipRecord>\n+    @Override\n+    RelationshipStore store(NeoStores neoStores)\n     {\n-        private final long node;\n-        private final boolean reverse;\n-\n-        DumpRelationshipChain( long first, long node, boolean reverse )\n-        {\n-            super( first );\n-            this.node = node;\n-            this.reverse = reverse;\n-        }\n-\n-        @Override\n-        RelationshipStore store( NeoStores neoStores )\n-        {\n-            return neoStores.getRelationshipStore();\n-        }\n+      return neoStores.getRelationshipStore();\n+    }\n \n-        @Override\n-        long next( RelationshipRecord record )\n-        {\n-            if ( record.getFirstNode() == node )\n-            {\n-                return reverse ? record.getFirstPrevRel() : record.getFirstNextRel();\n-            }\n-            else if ( record.getSecondNode() == node )\n-            {\n-                return reverse ? record.getSecondPrevRel() : record.getSecondNextRel();\n-            }\n-            else\n-            {\n-                return -1;\n-            }\n-        }\n+    @Override\n+    long next(RelationshipRecord record)\n+    {\n+      if (record.getFirstNode() == node)\n+      {\n+        return reverse ? record.getFirstPrevRel() : record.getFirstNextRel();\n+      } else if (record.getSecondNode() == node)\n+      {\n+        return reverse ? record.getSecondPrevRel() : record.getSecondNextRel();\n+      } else\n+      {\n+        return -1;\n+      }\n     }\n+  }\n }\n",
            "diff_size": 290
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1985/DumpStoreChain.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1985/DumpStoreChain.java\nindex 8108630a093..533575bef02 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1985/DumpStoreChain.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1985/DumpStoreChain.java\n@@ -74,14 +74,13 @@ public abstract class DumpStoreChain<RECORD extends AbstractBaseRecord>\n         {\n             throw invalidUsage( \"no store file given\" );\n         }\n-        File storeFile = new File( orphans.get( 0 ) );\n+\n+File storeFile = new File( orphans.get( 0 ) );\n         DumpStoreChain tool;\n         if ( storeFile.isDirectory() )\n         {\n-            verifyFilesExists( new File( storeFile, NODESTORE ),\n-                    new File( storeFile, RELSTORE ),\n-                    new File( storeFile, PROPSTORE ) );\n-            tool = chainForNode( arguments );\n+            verifyFilesExists( new File( storeFile, NODESTORE ), new File( storeFile, RELSTORE ), new File( storeFile, PROPSTORE ) );\n+tool = chainForNode( arguments );\n         }\n         else\n         {\n@@ -117,14 +116,14 @@ public abstract class DumpStoreChain<RECORD extends AbstractBaseRecord>\n     void dump( File storeDir ) throws IOException\n     {\n         try ( DefaultFileSystemAbstraction fs = new DefaultFileSystemAbstraction();\n-              PageCache pageCache = createPageCache( fs ) )\n-        {\n+PageCache pageCache = createPageCache( fs ) )\n+{\n             DefaultIdGeneratorFactory idGeneratorFactory = new DefaultIdGeneratorFactory( fs );\n             Config config = Config.defaults();\n             StoreFactory storeFactory = new StoreFactory( storeDir, config, idGeneratorFactory, pageCache, fs,\n                     logProvider(), EmptyVersionContextSupplier.EMPTY );\n \n-            try ( NeoStores neoStores = storeFactory.openNeoStores( getStoreTypes() ) )\n+try ( NeoStores neoStores = storeFactory.openNeoStores( getStoreTypes() ) )\n             {\n                 RecordStore<RECORD> store = store( neoStores );\n                 RECORD record = store.newRecord();\n@@ -221,7 +220,8 @@ public abstract class DumpStoreChain<RECORD extends AbstractBaseRecord>\n             parameters = Arrays.copyOf( parameters, parameters.length + 1 );\n             parameters[parameters.length - 1] = REVERSE;\n         }\n-        verifyParameters( kwArgs, parameters );\n+\n+verifyParameters( kwArgs, parameters );\n         return args.getBoolean( REVERSE, false, true );\n     }\n \n@@ -305,4 +305,4 @@ public abstract class DumpStoreChain<RECORD extends AbstractBaseRecord>\n             }\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 12
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "CONNECT-Solution-CONNECT",
    "error_id": "1482",
    "information": {
        "errors": [
            {
                "line": "27",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\npackage gov.hhs.fha.nhinc.docquery.nhin.proxy;\n\nimport gov.hhs.fha.nhinc.aspect.NwhinInvocationEvent;\nimport gov.hhs.fha.nhinc.common.nhinccommon.AssertionType;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1482/NhinDocQueryProxyNoOpImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler/1482/NhinDocQueryProxyNoOpImpl.java\nindex 69012f9ec14..27e78a5db5c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1482/NhinDocQueryProxyNoOpImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler/1482/NhinDocQueryProxyNoOpImpl.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.docquery.nhin.proxy;\n \n import gov.hhs.fha.nhinc.aspect.NwhinInvocationEvent;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1482/NhinDocQueryProxyNoOpImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/intellij/1482/NhinDocQueryProxyNoOpImpl.java\nindex 69012f9ec14..5dc2200d00e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1482/NhinDocQueryProxyNoOpImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/intellij/1482/NhinDocQueryProxyNoOpImpl.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.docquery.nhin.proxy;\n \n import gov.hhs.fha.nhinc.aspect.NwhinInvocationEvent;\n@@ -37,32 +38,28 @@ import oasis.names.tc.ebxml_regrep.xsd.query._3.AdhocQueryResponse;\n import oasis.names.tc.ebxml_regrep.xsd.rim._3.RegistryObjectListType;\n \n /**\n- *\n  * @author jhoppesc\n  */\n public class NhinDocQueryProxyNoOpImpl implements NhinDocQueryProxy {\n \n-    /**\n-     * Sends a document query to another Gateway. *\n-     *\n-     * @param request\n-     *            Document Query Request received.\n-     * @param assertion\n-     *            Assertion received.\n-     * @param target\n-     *            NhinTargetCommunities to send DocQueryRequest.\n-     * @return null AdhocQuery Response since this does not send Query request.\n-     */\n-    @NwhinInvocationEvent(beforeBuilder = AdhocQueryRequestDescriptionBuilder.class,\n-            afterReturningBuilder = AdhocQueryResponseDescriptionBuilder.class, serviceType = \"Document Query\",\n-            version = \"\")\n-    @Override\n-    public AdhocQueryResponse respondingGatewayCrossGatewayQuery(AdhocQueryRequest request, AssertionType assertion,\n-            NhinTargetSystemType target) {\n-        AdhocQueryResponse response = new AdhocQueryResponse();\n-        response.setRegistryObjectList(new RegistryObjectListType());\n-        response.setStatus(DocumentConstants.XDS_QUERY_RESPONSE_STATUS_SUCCESS);\n-        return response;\n-    }\n+  /**\n+   * Sends a document query to another Gateway. *\n+   *\n+   * @param request   Document Query Request received.\n+   * @param assertion Assertion received.\n+   * @param target    NhinTargetCommunities to send DocQueryRequest.\n+   * @return null AdhocQuery Response since this does not send Query request.\n+   */\n+  @NwhinInvocationEvent(beforeBuilder = AdhocQueryRequestDescriptionBuilder.class,\n+      afterReturningBuilder = AdhocQueryResponseDescriptionBuilder.class, serviceType = \"Document Query\",\n+      version = \"\")\n+  @Override\n+  public AdhocQueryResponse respondingGatewayCrossGatewayQuery(AdhocQueryRequest request, AssertionType assertion,\n+                                                               NhinTargetSystemType target) {\n+    AdhocQueryResponse response = new AdhocQueryResponse();\n+    response.setRegistryObjectList(new RegistryObjectListType());\n+    response.setStatus(DocumentConstants.XDS_QUERY_RESPONSE_STATUS_SUCCESS);\n+    return response;\n+  }\n \n }\n",
            "diff_size": 24
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "57",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 198).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "59",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 147).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1482/NhinDocQueryProxyNoOpImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/naturalize/1482/NhinDocQueryProxyNoOpImpl.java\nindex 69012f9ec14..b1dc4e1d4b1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1482/NhinDocQueryProxyNoOpImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/naturalize/1482/NhinDocQueryProxyNoOpImpl.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.docquery.nhin.proxy;\n \n import gov.hhs.fha.nhinc.aspect.NwhinInvocationEvent;\n@@ -53,16 +54,14 @@ public class NhinDocQueryProxyNoOpImpl implements NhinDocQueryProxy {\n      *            NhinTargetCommunities to send DocQueryRequest.\n      * @return null AdhocQuery Response since this does not send Query request.\n      */\n-    @NwhinInvocationEvent(beforeBuilder = AdhocQueryRequestDescriptionBuilder.class,\n-            afterReturningBuilder = AdhocQueryResponseDescriptionBuilder.class, serviceType = \"Document Query\",\n-            version = \"\")\n-    @Override\n-    public AdhocQueryResponse respondingGatewayCrossGatewayQuery(AdhocQueryRequest request, AssertionType assertion,\n-            NhinTargetSystemType target) {\n+    @NwhinInvocationEvent(beforeBuilder = AdhocQueryRequestDescriptionBuilder.class, afterReturningBuilder = AdhocQueryResponseDescriptionBuilder.class, serviceType = \"Document Query\", version = \"\")\n+@Override\n+    public AdhocQueryResponse respondingGatewayCrossGatewayQuery(AdhocQueryRequest request, AssertionType assertion, NhinTargetSystemType target) {\n         AdhocQueryResponse response = new AdhocQueryResponse();\n         response.setRegistryObjectList(new RegistryObjectListType());\n         response.setStatus(DocumentConstants.XDS_QUERY_RESPONSE_STATUS_SUCCESS);\n-        return response;\n+\n+return response;\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 10
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "60",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 198).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1482/NhinDocQueryProxyNoOpImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/codebuff/1482/NhinDocQueryProxyNoOpImpl.java\nindex 69012f9ec14..70e37b06354 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1482/NhinDocQueryProxyNoOpImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/codebuff/1482/NhinDocQueryProxyNoOpImpl.java\n@@ -40,6 +40,8 @@ import oasis.names.tc.ebxml_regrep.xsd.rim._3.RegistryObjectListType;\n  *\n  * @author jhoppesc\n  */\n+\n+\n public class NhinDocQueryProxyNoOpImpl implements NhinDocQueryProxy {\n \n     /**\n@@ -53,16 +55,15 @@ public class NhinDocQueryProxyNoOpImpl implements NhinDocQueryProxy {\n      *            NhinTargetCommunities to send DocQueryRequest.\n      * @return null AdhocQuery Response since this does not send Query request.\n      */\n-    @NwhinInvocationEvent(beforeBuilder = AdhocQueryRequestDescriptionBuilder.class,\n-            afterReturningBuilder = AdhocQueryResponseDescriptionBuilder.class, serviceType = \"Document Query\",\n-            version = \"\")\n+\n+\n+    @NwhinInvocationEvent(beforeBuilder = AdhocQueryRequestDescriptionBuilder.class, afterReturningBuilder = AdhocQueryResponseDescriptionBuilder.class, serviceType = \"Document Query\", version = \"\")\n     @Override\n-    public AdhocQueryResponse respondingGatewayCrossGatewayQuery(AdhocQueryRequest request, AssertionType assertion,\n-            NhinTargetSystemType target) {\n+    public AdhocQueryResponse respondingGatewayCrossGatewayQuery(AdhocQueryRequest request,\n+        AssertionType assertion, NhinTargetSystemType target) {\n         AdhocQueryResponse response = new AdhocQueryResponse();\n         response.setRegistryObjectList(new RegistryObjectListType());\n         response.setStatus(DocumentConstants.XDS_QUERY_RESPONSE_STATUS_SUCCESS);\n         return response;\n     }\n-\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "28",
                    "severity": "error",
                    "message": "'import' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1482/NhinDocQueryProxyNoOpImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_random/1482/NhinDocQueryProxyNoOpImpl.java\nindex 69012f9ec14..bb03681c24a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1482/NhinDocQueryProxyNoOpImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_random/1482/NhinDocQueryProxyNoOpImpl.java\n@@ -25,7 +25,6 @@\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n package gov.hhs.fha.nhinc.docquery.nhin.proxy;\n-\n import gov.hhs.fha.nhinc.aspect.NwhinInvocationEvent;\n import gov.hhs.fha.nhinc.common.nhinccommon.AssertionType;\n import gov.hhs.fha.nhinc.common.nhinccommon.NhinTargetSystemType;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1482/NhinDocQueryProxyNoOpImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_three_grams/1482/NhinDocQueryProxyNoOpImpl.java\nindex 69012f9ec14..27e78a5db5c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1482/NhinDocQueryProxyNoOpImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_three_grams/1482/NhinDocQueryProxyNoOpImpl.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.docquery.nhin.proxy;\n \n import gov.hhs.fha.nhinc.aspect.NwhinInvocationEvent;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff",
        "styler_random"
    ]
}
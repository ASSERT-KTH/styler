{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2787",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "31",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "31",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "34",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "34",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2787/Pair.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2787/Pair.java\nindex 335b74b924d..b40b33136a5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2787/Pair.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2787/Pair.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.helpers.collection;\n \n /**\n@@ -27,105 +28,106 @@ package org.neo4j.helpers.collection;\n  */\n public abstract class Pair<T1, T2>\n {\n-    @SuppressWarnings( \"rawtypes\" )\n-    private static final Pair EMPTY = Pair.of( null, null );\n+  @SuppressWarnings(\"rawtypes\")\n+  private static final Pair EMPTY = Pair.of(null, null);\n \n-    @SuppressWarnings( \"unchecked\" )\n-    public static <T1, T2> Pair<T1,T2> empty()\n-    {\n-        return EMPTY;\n-    }\n+  @SuppressWarnings(\"unchecked\")\n+  public static <T1, T2> Pair<T1, T2> empty()\n+  {\n+    return EMPTY;\n+  }\n \n-    /**\n-     * Create a new pair of objects.\n-     *\n-     * @param first the first object in the pair.\n-     * @param other the other object in the pair.\n-     * @param <T1> the type of the first object in the pair\n-     * @param <T2> the type of the second object in the pair\n-     * @return a new pair of the two parameters.\n-     */\n-    public static <T1, T2> Pair<T1,T2> pair( final T1 first, final T2 other )\n+  /**\n+   * Create a new pair of objects.\n+   *\n+   * @param first the first object in the pair.\n+   * @param other the other object in the pair.\n+   * @param <T1>  the type of the first object in the pair\n+   * @param <T2>  the type of the second object in the pair\n+   * @return a new pair of the two parameters.\n+   */\n+  public static <T1, T2> Pair<T1, T2> pair(final T1 first, final T2 other)\n+  {\n+    return new Pair<T1, T2>()\n     {\n-        return new Pair<T1,T2>()\n-        {\n-            @Override\n-            public T1 first()\n-            {\n-                return first;\n-            }\n+      @Override\n+      public T1 first()\n+      {\n+        return first;\n+      }\n \n-            @Override\n-            public T2 other()\n-            {\n-                return other;\n-            }\n-        };\n-    }\n+      @Override\n+      public T2 other()\n+      {\n+        return other;\n+      }\n+    };\n+  }\n \n-    /**\n-     * Alias of {@link #pair(Object, Object)}.\n-     * @param first the first object in the pair.\n-     * @param other the other object in the pair.\n-     * @param <T1> the type of the first object in the pair\n-     * @param <T2> the type of the second object in the pair\n-     * @return a new pair of the two parameters.\n-     */\n-    public static <T1, T2> Pair<T1, T2> of( final T1 first, final T2 other )\n-    {\n-        return pair( first, other );\n-    }\n+  /**\n+   * Alias of {@link #pair(Object, Object)}.\n+   *\n+   * @param first the first object in the pair.\n+   * @param other the other object in the pair.\n+   * @param <T1>  the type of the first object in the pair\n+   * @param <T2>  the type of the second object in the pair\n+   * @return a new pair of the two parameters.\n+   */\n+  public static <T1, T2> Pair<T1, T2> of(final T1 first, final T2 other)\n+  {\n+    return pair(first, other);\n+  }\n \n-    Pair()\n-    {\n-        // package private, limited number of subclasses\n-    }\n+  Pair()\n+  {\n+    // package private, limited number of subclasses\n+  }\n \n-    /**\n-     * @return the first object in the pair.\n-     */\n-    public abstract T1 first();\n+  /**\n+   * @return the first object in the pair.\n+   */\n+  public abstract T1 first();\n \n-    /**\n-     * @return the other object in the pair.\n-     */\n-    public abstract T2 other();\n+  /**\n+   * @return the other object in the pair.\n+   */\n+  public abstract T2 other();\n \n-    @Override\n-    public String toString()\n-    {\n-        return \"(\" + first() + \", \" + other() + \")\";\n-    }\n+  @Override\n+  public String toString()\n+  {\n+    return \"(\" + first() + \", \" + other() + \")\";\n+  }\n \n-    @Override\n-    public int hashCode()\n-    {\n-        return ( 31 * hashCode( first() ) ) | hashCode( other() );\n-    }\n+  @Override\n+  public int hashCode()\n+  {\n+    return (31 * hashCode(first())) | hashCode(other());\n+  }\n \n-    @Override\n-    public boolean equals( Object obj )\n+  @Override\n+  public boolean equals(Object obj)\n+  {\n+    if (this == obj)\n     {\n-        if ( this == obj )\n-        {\n-            return true;\n-        }\n-        if ( obj instanceof Pair )\n-        {\n-            @SuppressWarnings( \"rawtypes\" )\n-            Pair that = (Pair) obj;\n-            return equals( this.other(), that.other() ) && equals( this.first(), that.first() );\n-        }\n-        return false;\n+      return true;\n     }\n-\n-    static int hashCode( Object obj )\n+    if (obj instanceof Pair)\n     {\n-        return obj == null ? 0 : obj.hashCode();\n+      @SuppressWarnings(\"rawtypes\")\n+      Pair that = (Pair) obj;\n+      return equals(this.other(), that.other()) && equals(this.first(), that.first());\n     }\n+    return false;\n+  }\n \n-    static boolean equals( Object obj1, Object obj2 )\n-    {\n-        return ( obj1 == obj2 ) || ( obj1 != null && obj1.equals( obj2 ) );\n-    }\n+  static int hashCode(Object obj)\n+  {\n+    return obj == null ? 0 : obj.hashCode();\n+  }\n+\n+  static boolean equals(Object obj1, Object obj2)\n+  {\n+    return (obj1 == obj2) || (obj1 != null && obj1.equals(obj2));\n+  }\n }\n",
            "diff_size": 100
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2787/Pair.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2787/Pair.java\nindex 335b74b924d..64677b714a0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2787/Pair.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2787/Pair.java\n@@ -31,7 +31,7 @@ public abstract class Pair<T1, T2>\n     private static final Pair EMPTY = Pair.of( null, null );\n \n     @SuppressWarnings( \"unchecked\" )\n-    public static <T1, T2> Pair<T1,T2> empty()\n+    public static <T1,T2> Pair<T1,T2> empty()\n     {\n         return EMPTY;\n     }\n@@ -45,7 +45,7 @@ public abstract class Pair<T1, T2>\n      * @param <T2> the type of the second object in the pair\n      * @return a new pair of the two parameters.\n      */\n-    public static <T1, T2> Pair<T1,T2> pair( final T1 first, final T2 other )\n+    public static <T1,T2> Pair<T1,T2> pair( final T1 first, final T2 other )\n     {\n         return new Pair<T1,T2>()\n         {\n@@ -71,7 +71,7 @@ public abstract class Pair<T1, T2>\n      * @param <T2> the type of the second object in the pair\n      * @return a new pair of the two parameters.\n      */\n-    public static <T1, T2> Pair<T1, T2> of( final T1 first, final T2 other )\n+    public static <T1,T2> Pair<T1,T2> of( final T1 first, final T2 other )\n     {\n         return pair( first, other );\n     }\n@@ -110,7 +110,8 @@ public abstract class Pair<T1, T2>\n         {\n             return true;\n         }\n-        if ( obj instanceof Pair )\n+\n+if ( obj instanceof Pair )\n         {\n             @SuppressWarnings( \"rawtypes\" )\n             Pair that = (Pair) obj;\n@@ -128,4 +129,4 @@ public abstract class Pair<T1, T2>\n     {\n         return ( obj1 == obj2 ) || ( obj1 != null && obj1.equals( obj2 ) );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "29",
                    "column": "28",
                    "severity": "error",
                    "message": "'<' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "29",
                    "column": "28",
                    "severity": "error",
                    "message": "'<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "31",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "33",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "34",
                    "column": "19",
                    "severity": "error",
                    "message": "'<' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "49",
                    "column": "19",
                    "severity": "error",
                    "message": "'<' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "51",
                    "column": "25",
                    "severity": "error",
                    "message": "'<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "76",
                    "column": "19",
                    "severity": "error",
                    "message": "'<' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "109",
                    "column": "20",
                    "severity": "error",
                    "message": "'*' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "109",
                    "column": "42",
                    "severity": "error",
                    "message": "'|' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "122",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "56",
                    "severity": "error",
                    "message": "'&&' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "136",
                    "column": "31",
                    "severity": "error",
                    "message": "'||' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "136",
                    "column": "48",
                    "severity": "error",
                    "message": "'&&' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2787/Pair.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/2787/Pair.java\nindex 335b74b924d..a215239d373 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2787/Pair.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/2787/Pair.java\n@@ -25,13 +25,13 @@ package org.neo4j.helpers.collection;\n  * @param <T1> the type of the {@link #first() first value} of the pair.\n  * @param <T2> the type of the {@link #other() other value} of the pair.\n  */\n-public abstract class Pair<T1, T2>\n+\n+public abstract class Pair < T1, T2>\n {\n-    @SuppressWarnings( \"rawtypes\" )\n+    @ SuppressWarnings( \"rawtypes\")\n     private static final Pair EMPTY = Pair.of( null, null );\n-\n-    @SuppressWarnings( \"unchecked\" )\n-    public static <T1, T2> Pair<T1,T2> empty()\n+    @ SuppressWarnings( \"unchecked\")\n+    public static < T1, T2> Pair<T1,T2> empty()\n     {\n         return EMPTY;\n     }\n@@ -45,22 +45,23 @@ public abstract class Pair<T1, T2>\n      * @param <T2> the type of the second object in the pair\n      * @return a new pair of the two parameters.\n      */\n-    public static <T1, T2> Pair<T1,T2> pair( final T1 first, final T2 other )\n+\n+    public static < T1, T2> Pair<T1,T2> pair( final T1 first, final T2 other )\n     {\n-        return new Pair<T1,T2>()\n-        {\n-            @Override\n-            public T1 first()\n-            {\n-                return first;\n-            }\n-\n-            @Override\n-            public T2 other()\n-            {\n-                return other;\n-            }\n-        };\n+        return new Pair <T1,T2>()\n+{\n+    @Override\n+    public T1 first()\n+    {\n+        return first;\n+    }\n+\n+    @Override\n+    public T2 other()\n+    {\n+        return other;\n+    }\n+};\n     }\n \n     /**\n@@ -71,7 +72,8 @@ public abstract class Pair<T1, T2>\n      * @param <T2> the type of the second object in the pair\n      * @return a new pair of the two parameters.\n      */\n-    public static <T1, T2> Pair<T1, T2> of( final T1 first, final T2 other )\n+\n+    public static < T1, T2> Pair<T1,T2> of( final T1 first, final T2 other )\n     {\n         return pair( first, other );\n     }\n@@ -84,12 +86,16 @@ public abstract class Pair<T1, T2>\n     /**\n      * @return the first object in the pair.\n      */\n-    public abstract T1 first();\n+\n+    public abstract T1 first()\n+    ;\n \n     /**\n      * @return the other object in the pair.\n      */\n-    public abstract T2 other();\n+\n+    public abstract T2 other()\n+    ;\n \n     @Override\n     public String toString()\n@@ -100,7 +106,7 @@ public abstract class Pair<T1, T2>\n     @Override\n     public int hashCode()\n     {\n-        return ( 31 * hashCode( first() ) ) | hashCode( other() );\n+        return ( 31* hashCode( first() ))| hashCode( other() );\n     }\n \n     @Override\n@@ -110,12 +116,13 @@ public abstract class Pair<T1, T2>\n         {\n             return true;\n         }\n+\n         if ( obj instanceof Pair )\n         {\n-            @SuppressWarnings( \"rawtypes\" )\n-            Pair that = (Pair) obj;\n-            return equals( this.other(), that.other() ) && equals( this.first(), that.first() );\n+            @ SuppressWarnings( \"rawtypes\") Pair that = (Pair) obj;\n+            return equals( this.other(), that.other() )&& equals( this.first(), that.first() );\n         }\n+\n         return false;\n     }\n \n@@ -126,6 +133,6 @@ public abstract class Pair<T1, T2>\n \n     static boolean equals( Object obj1, Object obj2 )\n     {\n-        return ( obj1 == obj2 ) || ( obj1 != null && obj1.equals( obj2 ) );\n+        return ( obj1 == obj2)|| ( obj1 != null&& obj1.equals( obj2 ));\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 38
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "Activiti-Activiti",
    "error_id": "677",
    "information": {
        "errors": [
            {
                "line": "16",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * limitations under the License.\n */\npackage org.activiti.bpmn.model;\n\nimport java.util.ArrayList;\nimport java.util.List;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/677/IOSpecification.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler/677/IOSpecification.java\nindex 1c8c2a55ea1..c1f2005be9a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/677/IOSpecification.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler/677/IOSpecification.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.bpmn.model;\n \n import java.util.ArrayList;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/677/IOSpecification.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/intellij/677/IOSpecification.java\nindex 1c8c2a55ea1..1fc80d785be 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/677/IOSpecification.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/intellij/677/IOSpecification.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.bpmn.model;\n \n import java.util.ArrayList;\n@@ -20,65 +21,65 @@ import java.util.List;\n \n public class IOSpecification extends BaseElement {\n \n-  protected List<DataSpec> dataInputs = new ArrayList<DataSpec>();\n-  protected List<DataSpec> dataOutputs = new ArrayList<DataSpec>();\n-  protected List<String> dataInputRefs = new ArrayList<String>();\n-  protected List<String> dataOutputRefs = new ArrayList<String>();\n-\n-  public List<DataSpec> getDataInputs() {\n-    return dataInputs;\n-  }\n-\n-  public void setDataInputs(List<DataSpec> dataInputs) {\n-    this.dataInputs = dataInputs;\n-  }\n-\n-  public List<DataSpec> getDataOutputs() {\n-    return dataOutputs;\n-  }\n-\n-  public void setDataOutputs(List<DataSpec> dataOutputs) {\n-    this.dataOutputs = dataOutputs;\n-  }\n-\n-  public List<String> getDataInputRefs() {\n-    return dataInputRefs;\n-  }\n-\n-  public void setDataInputRefs(List<String> dataInputRefs) {\n-    this.dataInputRefs = dataInputRefs;\n-  }\n-\n-  public List<String> getDataOutputRefs() {\n-    return dataOutputRefs;\n-  }\n-\n-  public void setDataOutputRefs(List<String> dataOutputRefs) {\n-    this.dataOutputRefs = dataOutputRefs;\n-  }\n-\n-  public IOSpecification clone() {\n-    IOSpecification clone = new IOSpecification();\n-    clone.setValues(this);\n-    return clone;\n-  }\n-\n-  public void setValues(IOSpecification otherSpec) {\n-    dataInputs = new ArrayList<DataSpec>();\n-    if (otherSpec.getDataInputs() != null && !otherSpec.getDataInputs().isEmpty()) {\n-      for (DataSpec dataSpec : otherSpec.getDataInputs()) {\n-        dataInputs.add(dataSpec.clone());\n-      }\n+    protected List<DataSpec> dataInputs = new ArrayList<DataSpec>();\n+    protected List<DataSpec> dataOutputs = new ArrayList<DataSpec>();\n+    protected List<String> dataInputRefs = new ArrayList<String>();\n+    protected List<String> dataOutputRefs = new ArrayList<String>();\n+\n+    public List<DataSpec> getDataInputs() {\n+        return dataInputs;\n+    }\n+\n+    public void setDataInputs(List<DataSpec> dataInputs) {\n+        this.dataInputs = dataInputs;\n+    }\n+\n+    public List<DataSpec> getDataOutputs() {\n+        return dataOutputs;\n+    }\n+\n+    public void setDataOutputs(List<DataSpec> dataOutputs) {\n+        this.dataOutputs = dataOutputs;\n+    }\n+\n+    public List<String> getDataInputRefs() {\n+        return dataInputRefs;\n     }\n \n-    dataOutputs = new ArrayList<DataSpec>();\n-    if (otherSpec.getDataOutputs() != null && !otherSpec.getDataOutputs().isEmpty()) {\n-      for (DataSpec dataSpec : otherSpec.getDataOutputs()) {\n-        dataOutputs.add(dataSpec.clone());\n-      }\n+    public void setDataInputRefs(List<String> dataInputRefs) {\n+        this.dataInputRefs = dataInputRefs;\n     }\n \n-    dataInputRefs = new ArrayList<String>(otherSpec.getDataInputRefs());\n-    dataOutputRefs = new ArrayList<String>(otherSpec.getDataOutputRefs());\n-  }\n+    public List<String> getDataOutputRefs() {\n+        return dataOutputRefs;\n+    }\n+\n+    public void setDataOutputRefs(List<String> dataOutputRefs) {\n+        this.dataOutputRefs = dataOutputRefs;\n+    }\n+\n+    public IOSpecification clone() {\n+        IOSpecification clone = new IOSpecification();\n+        clone.setValues(this);\n+        return clone;\n+    }\n+\n+    public void setValues(IOSpecification otherSpec) {\n+        dataInputs = new ArrayList<DataSpec>();\n+        if (otherSpec.getDataInputs() != null && !otherSpec.getDataInputs().isEmpty()) {\n+            for (DataSpec dataSpec : otherSpec.getDataInputs()) {\n+                dataInputs.add(dataSpec.clone());\n+            }\n+        }\n+\n+        dataOutputs = new ArrayList<DataSpec>();\n+        if (otherSpec.getDataOutputs() != null && !otherSpec.getDataOutputs().isEmpty()) {\n+            for (DataSpec dataSpec : otherSpec.getDataOutputs()) {\n+                dataOutputs.add(dataSpec.clone());\n+            }\n+        }\n+\n+        dataInputRefs = new ArrayList<String>(otherSpec.getDataInputRefs());\n+        dataOutputRefs = new ArrayList<String>(otherSpec.getDataOutputRefs());\n+    }\n }\n",
            "diff_size": 87
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "16",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "22",
                    "severity": "error",
                    "message": "'CLASS_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "28",
                    "severity": "error",
                    "message": "'METHOD_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/677/IOSpecification.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/codebuff/677/IOSpecification.java\nindex 1c8c2a55ea1..db43572af09 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/677/IOSpecification.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/codebuff/677/IOSpecification.java\n@@ -18,13 +18,13 @@ package org.activiti.bpmn.model;\n import java.util.ArrayList;\n import java.util.List;\n \n+\n public class IOSpecification extends BaseElement {\n \n   protected List<DataSpec> dataInputs = new ArrayList<DataSpec>();\n   protected List<DataSpec> dataOutputs = new ArrayList<DataSpec>();\n   protected List<String> dataInputRefs = new ArrayList<String>();\n   protected List<String> dataOutputRefs = new ArrayList<String>();\n-\n   public List<DataSpec> getDataInputs() {\n     return dataInputs;\n   }\n@@ -66,19 +66,17 @@ public class IOSpecification extends BaseElement {\n   public void setValues(IOSpecification otherSpec) {\n     dataInputs = new ArrayList<DataSpec>();\n     if (otherSpec.getDataInputs() != null && !otherSpec.getDataInputs().isEmpty()) {\n-      for (DataSpec dataSpec : otherSpec.getDataInputs()) {\n-        dataInputs.add(dataSpec.clone());\n-      }\n+        for (DataSpec dataSpec : otherSpec.getDataInputs()) {\n+            dataInputs.add(dataSpec.clone());\n+        }\n     }\n-\n     dataOutputs = new ArrayList<DataSpec>();\n     if (otherSpec.getDataOutputs() != null && !otherSpec.getDataOutputs().isEmpty()) {\n-      for (DataSpec dataSpec : otherSpec.getDataOutputs()) {\n-        dataOutputs.add(dataSpec.clone());\n-      }\n+        for (DataSpec dataSpec : otherSpec.getDataOutputs()) {\n+            dataOutputs.add(dataSpec.clone());\n+        }\n     }\n-\n     dataInputRefs = new ArrayList<String>(otherSpec.getDataInputRefs());\n     dataOutputRefs = new ArrayList<String>(otherSpec.getDataOutputRefs());\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 11
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/677/IOSpecification.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_random/677/IOSpecification.java\nindex 1c8c2a55ea1..c1f2005be9a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/677/IOSpecification.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_random/677/IOSpecification.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.bpmn.model;\n \n import java.util.ArrayList;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/677/IOSpecification.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_three_grams/677/IOSpecification.java\nindex 1c8c2a55ea1..c1f2005be9a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/677/IOSpecification.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_three_grams/677/IOSpecification.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.bpmn.model;\n \n import java.util.ArrayList;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
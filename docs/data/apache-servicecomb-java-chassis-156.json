{
    "project_name": "apache-servicecomb-java-chassis",
    "error_id": "156",
    "information": {
        "errors": [
            {
                "line": "46",
                "severity": "warning",
                "message": "Line is longer than 120 characters (found 122).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "    MicroserviceDefinition microserviceDefinition = new MicroserviceDefinition(Collections.emptyList());\n\n    ServiceRegistry serviceRegistry = new RemoteServiceRegistry(eventBus, serviceRegistryConfig, microserviceDefinition) {\n      @Override\n      protected ServiceRegistryClient createServiceRegistryClient() {\n        return new ServiceRegistryClientImpl(ipPortManager) {",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "46",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 122).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/156/TestServiceRegistryFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/intellij/156/TestServiceRegistryFactory.java\nindex d6357a008c5..a812c3715ce 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/156/TestServiceRegistryFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/intellij/156/TestServiceRegistryFactory.java\n@@ -43,16 +43,17 @@ public class TestServiceRegistryFactory {\n     ServiceRegistryConfig serviceRegistryConfig = ServiceRegistryConfig.INSTANCE;\n     MicroserviceDefinition microserviceDefinition = new MicroserviceDefinition(Collections.emptyList());\n \n-    ServiceRegistry serviceRegistry = new RemoteServiceRegistry(eventBus, serviceRegistryConfig, microserviceDefinition) {\n-      @Override\n-      protected ServiceRegistryClient createServiceRegistryClient() {\n-        return new ServiceRegistryClientImpl(ipPortManager) {\n-          public ServiceCenterInfo getServiceCenterInfo() {\n-            return new ServiceCenterInfo();\n+    ServiceRegistry serviceRegistry =\n+        new RemoteServiceRegistry(eventBus, serviceRegistryConfig, microserviceDefinition) {\n+          @Override\n+          protected ServiceRegistryClient createServiceRegistryClient() {\n+            return new ServiceRegistryClientImpl(ipPortManager) {\n+              public ServiceCenterInfo getServiceCenterInfo() {\n+                return new ServiceCenterInfo();\n+              }\n+            };\n           }\n         };\n-      }\n-    };\n     serviceRegistry.init();\n     ServiceRegistryClient client = serviceRegistry.getServiceRegistryClient();\n     Assert.assertTrue(client instanceof ServiceRegistryClientImpl);\n",
            "diff_size": 11
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "46",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 122).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/156/TestServiceRegistryFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/naturalize/156/TestServiceRegistryFactory.java\nindex d6357a008c5..2927b48bbe3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/156/TestServiceRegistryFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/naturalize/156/TestServiceRegistryFactory.java\n@@ -75,4 +75,4 @@ public class TestServiceRegistryFactory {\n         microserviceDefinition) instanceof LocalServiceRegistry);\n     System.clearProperty(\"local.registry.file\");\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "46",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 122).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "46",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 129).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "46",
                    "column": "74",
                    "severity": "warning",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "46",
                    "column": "96",
                    "severity": "warning",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "46",
                    "column": "119",
                    "severity": "warning",
                    "message": "'{' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "46",
                    "column": "120",
                    "severity": "warning",
                    "message": "'{' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/156/TestServiceRegistryFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler_three_grams/156/TestServiceRegistryFactory.java\nindex d6357a008c5..a9529d2f946 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/156/TestServiceRegistryFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler_three_grams/156/TestServiceRegistryFactory.java\n@@ -43,8 +43,7 @@ public class TestServiceRegistryFactory {\n     ServiceRegistryConfig serviceRegistryConfig = ServiceRegistryConfig.INSTANCE;\n     MicroserviceDefinition microserviceDefinition = new MicroserviceDefinition(Collections.emptyList());\n \n-    ServiceRegistry serviceRegistry = new RemoteServiceRegistry(eventBus, serviceRegistryConfig, microserviceDefinition) {\n-      @Override\n+    ServiceRegistry serviceRegistry = new RemoteServiceRegistry(eventBus,serviceRegistryConfig,microserviceDefinition){@ Override\n       protected ServiceRegistryClient createServiceRegistryClient() {\n         return new ServiceRegistryClientImpl(ipPortManager) {\n           public ServiceCenterInfo getServiceCenterInfo() {\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
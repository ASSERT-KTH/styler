{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1951",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "34",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "35",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1951/ReadOnlyIndexReferenceFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1951/ReadOnlyIndexReferenceFactory.java\nindex 6b73faa2426..aa7794360d0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1951/ReadOnlyIndexReferenceFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1951/ReadOnlyIndexReferenceFactory.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.index.impl.lucene.explicit;\n \n import org.apache.lucene.index.DirectoryReader;\n@@ -30,24 +31,24 @@ import org.neo4j.internal.kernel.api.exceptions.explicitindex.ExplicitIndexNotFo\n \n public class ReadOnlyIndexReferenceFactory extends IndexReferenceFactory\n {\n-    public ReadOnlyIndexReferenceFactory( LuceneDataSource.LuceneFilesystemFacade filesystemFacade, File baseStorePath,\n-            IndexTypeCache typeCache )\n-    {\n-        super( filesystemFacade, baseStorePath, typeCache );\n-    }\n+  public ReadOnlyIndexReferenceFactory(LuceneDataSource.LuceneFilesystemFacade filesystemFacade, File baseStorePath,\n+                                       IndexTypeCache typeCache)\n+  {\n+    super(filesystemFacade, baseStorePath, typeCache);\n+  }\n \n-    @Override\n-    IndexReference createIndexReference( IndexIdentifier identifier )\n-            throws IOException, ExplicitIndexNotFoundKernelException\n-    {\n-        IndexReader reader = DirectoryReader.open( getIndexDirectory( identifier ) );\n-        IndexSearcher indexSearcher = newIndexSearcher( identifier, reader );\n-        return new ReadOnlyIndexReference( identifier, indexSearcher );\n-    }\n+  @Override\n+  IndexReference createIndexReference(IndexIdentifier identifier)\n+      throws IOException, ExplicitIndexNotFoundKernelException\n+  {\n+    IndexReader reader = DirectoryReader.open(getIndexDirectory(identifier));\n+    IndexSearcher indexSearcher = newIndexSearcher(identifier, reader);\n+    return new ReadOnlyIndexReference(identifier, indexSearcher);\n+  }\n \n-    @Override\n-    IndexReference refresh( IndexReference indexReference )\n-    {\n-        return indexReference;\n-    }\n+  @Override\n+  IndexReference refresh(IndexReference indexReference)\n+  {\n+    return indexReference;\n+  }\n }\n",
            "diff_size": 19
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1951/ReadOnlyIndexReferenceFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1951/ReadOnlyIndexReferenceFactory.java\nindex 6b73faa2426..024f9805a5a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1951/ReadOnlyIndexReferenceFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1951/ReadOnlyIndexReferenceFactory.java\n@@ -37,9 +37,8 @@ public class ReadOnlyIndexReferenceFactory extends IndexReferenceFactory\n     }\n \n     @Override\n-    IndexReference createIndexReference( IndexIdentifier identifier )\n-            throws IOException, ExplicitIndexNotFoundKernelException\n-    {\n+    IndexReference createIndexReference( IndexIdentifier identifier ) throws IOException, ExplicitIndexNotFoundKernelException\n+{\n         IndexReader reader = DirectoryReader.open( getIndexDirectory( identifier ) );\n         IndexSearcher indexSearcher = newIndexSearcher( identifier, reader );\n         return new ReadOnlyIndexReference( identifier, indexSearcher );\n@@ -50,4 +49,4 @@ public class ReadOnlyIndexReferenceFactory extends IndexReferenceFactory\n     {\n         return indexReference;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "griddynamics-jagger",
    "error_id": "204",
    "information": {
        "errors": [
            {
                "line": "14",
                "severity": "warning",
                "message": "Line is longer than 150 characters (found 188).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * @n\n * @par Details:\n * @details Test definition is the base component of the @ref section_writing_test_load_scenario \"load test description\". With the help of the internal Builder class it allows to setup: @n\n * @li source of the endpointsProvider (where to apply load)\n * @li source of queries (what parameters of the load to set)\n * @li what protocol to use for the communication with the system under test (SUT)",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "14",
                    "severity": "warning",
                    "message": "Line is longer than 150 characters (found 188).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "15",
                    "severity": "warning",
                    "message": "Line is longer than 150 characters (found 188).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/204/JTestDefinition.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/intellij/204/JTestDefinition.java\nindex 150e0502b0a..6f32d8a46df 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/204/JTestDefinition.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/intellij/204/JTestDefinition.java\n@@ -8,26 +8,26 @@ import com.griddynamics.jagger.user.test.configurations.auxiliary.Id;\n import java.util.Collections;\n import java.util.List;\n \n-/** @brief Definition of the load test - describes test data sources and the protocol, used during load test\n+/**\n+ * @brief Definition of the load test - describes test data sources and the protocol, used during load test\n  * @n\n  * @par Details:\n  * @details Test definition is the base component of the @ref section_writing_test_load_scenario \"load test description\". With the help of the internal Builder class it allows to setup: @n\n  * @li source of the endpointsProvider (where to apply load)\n  * @li source of queries (what parameters of the load to set)\n  * @li what protocol to use for the communication with the system under test (SUT)\n- *\n+ * <p>\n  * More information on the parameter of the test definition, you can find in the Builder documentation @n\n- * @n\n- * Code example:\n- * @dontinclude  ExampleSimpleJLoadScenarioProvider.java\n- * @skip  begin: following section is used for docu generation - Load test scenario configuration\n+ * @n Code example:\n+ * @dontinclude ExampleSimpleJLoadScenarioProvider.java\n+ * @skip begin: following section is used for docu generation - Load test scenario configuration\n  * @until end: following section is used for docu generation - Load test scenario configuration\n  */\n public class JTestDefinition {\n \n     private final String id;\n     private final Iterable endpoints;\n-    \n+\n     private String comment;\n     private Iterable queries;\n     private Class<? extends Invoker> invoker;\n@@ -36,19 +36,21 @@ public class JTestDefinition {\n     private JTestDefinition(Builder builder) {\n         this.id = builder.id.value();\n         this.endpoints = builder.endpointsProvider;\n-        \n+\n         this.comment = builder.comment;\n         this.queries = builder.queries;\n         this.invoker = builder.invoker;\n         this.validators = builder.validators;\n     }\n \n-    /** Builder of the JTestDefinition\n+    /**\n+     * Builder of the JTestDefinition\n+     *\n+     * @param id                - Unique id of the test definition\n+     * @param endpointsProvider - Source of the test data: endpoint - where load will be applied\n      * @n\n      * @details Constructor parameters are mandatory for the JTestDefinition. All parameters, set by setters are optional\n      * @n\n-     * @param id - Unique id of the test definition\n-     * @param endpointsProvider - Source of the test data: endpoint - where load will be applied\n      */\n     public static Builder builder(Id id, Iterable endpointsProvider) {\n         return new Builder(id, endpointsProvider);\n@@ -57,7 +59,7 @@ public class JTestDefinition {\n     public static class Builder {\n         private final Id id;\n         private final Iterable endpointsProvider;\n-        \n+\n         private String comment;\n         private Iterable queries;\n         private Class<? extends Invoker> invoker = DefaultHttpInvoker.class;\n@@ -68,7 +70,8 @@ public class JTestDefinition {\n             this.endpointsProvider = endpointsProvider;\n         }\n \n-        /** Optional: Sets human readable comment for the test definition\n+        /**\n+         * Optional: Sets human readable comment for the test definition\n          *\n          * @param comment the comment of the test definition\n          */\n@@ -90,24 +93,24 @@ public class JTestDefinition {\n \n         /**\n          * Optional: Sets subtypes of {@link com.griddynamics.jagger.invoker.Invoker}\n-         *\n+         * <p>\n          * Instances of this class will be used to during Jagger test execution to send requests to the System under test. @n\n          * Example:\n-         * @code\n-         * withInvoker(com.griddynamics.jagger.invoker.v2.DefaultHttpInvoker.class)\n+         *\n+         * @code withInvoker(com.griddynamics.jagger.invoker.v2.DefaultHttpInvoker.class)\n          * @endcode\n          */\n         public Builder withInvoker(Class<? extends Invoker> invoker) {\n             this.invoker = invoker;\n             return this;\n         }\n-    \n+\n         /**\n          * Optional: Sets a list of subtypes of {@link com.griddynamics.jagger.engine.e1.collector.ResponseValidator}\n          * Instances of those subtypes will be used to validate responses during Jagger test execution @n\n          * Example:\n-         * @code\n-         * withValidators(Arrays.asList(com.griddynamics.jagger.engine.e1.collector.NotNullResponseValidator.class))\n+         *\n+         * @code withValidators(Arrays.asList ( com.griddynamics.jagger.engine.e1.collector.NotNullResponseValidator.class))\n          * @endcode\n          * @see com.griddynamics.jagger.engine.e1.collector.NotNullResponseValidator for example\n          */\n@@ -141,15 +144,15 @@ public class JTestDefinition {\n     public Iterable getQueries() {\n         return queries;\n     }\n-    \n+\n     public Class<? extends Invoker> getInvoker() {\n         return invoker;\n     }\n-    \n+\n     public String getComment() {\n         return comment;\n     }\n-    \n+\n     public List<Class<? extends ResponseValidator>> getValidators() {\n         return validators;\n     }\n",
            "diff_size": 28
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "14",
                    "severity": "warning",
                    "message": "Line is longer than 150 characters (found 188).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "39",
                    "severity": "warning",
                    "message": "'ctor def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "40",
                    "severity": "warning",
                    "message": "'ctor def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "59",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "60",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "104",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 4, expected is 0, indentation should be the same level as line 113.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "113",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/204/JTestDefinition.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/naturalize/204/JTestDefinition.java\nindex 150e0502b0a..ce2714e1686 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/204/JTestDefinition.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/naturalize/204/JTestDefinition.java\n@@ -36,9 +36,8 @@ public class JTestDefinition {\n     private JTestDefinition(Builder builder) {\n         this.id = builder.id.value();\n         this.endpoints = builder.endpointsProvider;\n-        \n-        this.comment = builder.comment;\n-        this.queries = builder.queries;\n+this.comment = builder.comment;\n+this.queries = builder.queries;\n         this.invoker = builder.invoker;\n         this.validators = builder.validators;\n     }\n@@ -57,9 +56,8 @@ public class JTestDefinition {\n     public static class Builder {\n         private final Id id;\n         private final Iterable endpointsProvider;\n-        \n-        private String comment;\n-        private Iterable queries;\n+private String comment;\n+private Iterable queries;\n         private Class<? extends Invoker> invoker = DefaultHttpInvoker.class;\n         private List<Class<? extends ResponseValidator>> validators = Collections.emptyList();\n \n@@ -101,8 +99,9 @@ public class JTestDefinition {\n             this.invoker = invoker;\n             return this;\n         }\n-    \n-        /**\n+\n+\n+    /**\n          * Optional: Sets a list of subtypes of {@link com.griddynamics.jagger.engine.e1.collector.ResponseValidator}\n          * Instances of those subtypes will be used to validate responses during Jagger test execution @n\n          * Example:\n@@ -111,7 +110,7 @@ public class JTestDefinition {\n          * @endcode\n          * @see com.griddynamics.jagger.engine.e1.collector.NotNullResponseValidator for example\n          */\n-        public Builder withValidators(List<Class<? extends ResponseValidator>> validators) {\n+public Builder withValidators(List<Class<? extends ResponseValidator>> validators) {\n             this.validators = validators;\n             return this;\n         }\n@@ -153,4 +152,4 @@ public class JTestDefinition {\n     public List<Class<? extends ResponseValidator>> getValidators() {\n         return validators;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 11
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "14",
                    "severity": "warning",
                    "message": "Line is longer than 150 characters (found 188).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "14",
                    "severity": "warning",
                    "message": "Line is longer than 150 characters (found 188).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
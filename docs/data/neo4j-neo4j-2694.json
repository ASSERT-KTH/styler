{
    "project_name": "neo4j-neo4j",
    "error_id": "2694",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "29",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "29",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "32",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "33",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "36",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "109",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "145",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2694/ConsistencyCheckOptions.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2694/ConsistencyCheckOptions.java\nindex a6a8f09e2a1..7c2454cd4ef 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2694/ConsistencyCheckOptions.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2694/ConsistencyCheckOptions.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.consistency;\n \n import picocli.CommandLine.Option;\n@@ -25,35 +26,35 @@ import java.nio.file.Path;\n \n import static picocli.CommandLine.Help.Visibility.ALWAYS;\n \n-@SuppressWarnings( \"FieldMayBeFinal\" )\n+@SuppressWarnings(\"FieldMayBeFinal\")\n public class ConsistencyCheckOptions\n {\n-    @Option( names = \"--report-dir\", paramLabel = \"<path>\",\n-            description = \"Directory where consistency report will be written.\", defaultValue = \".\" )\n+    @Option(names = \"--report-dir\", paramLabel = \"<path>\",\n+      description = \"Directory where consistency report will be written.\", defaultValue = \".\")\n     private Path reportDir;\n \n-    @Option( names = \"--check-graph\", arity = \"1\", showDefaultValue = ALWAYS, paramLabel = \"<true/false>\",\n-            description = \"Perform consistency checks between nodes, relationships, properties, types and tokens.\" )\n+    @Option(names = \"--check-graph\", arity = \"1\", showDefaultValue = ALWAYS, paramLabel = \"<true/false>\",\n+      description = \"Perform consistency checks between nodes, relationships, properties, types and tokens.\")\n     private boolean checkGraph = true;\n \n-    @Option( names = \"--check-indexes\", arity = \"1\", showDefaultValue = ALWAYS, paramLabel = \"<true/false>\",\n-            description = \"Perform consistency checks on indexes.\" )\n+    @Option(names = \"--check-indexes\", arity = \"1\", showDefaultValue = ALWAYS, paramLabel = \"<true/false>\",\n+      description = \"Perform consistency checks on indexes.\")\n     private boolean checkIndexes = true;\n \n-    @Option( names = \"--check-index-structure\", arity = \"1\", showDefaultValue = ALWAYS, paramLabel = \"<true/false>\",\n-            description = \"Perform structure checks on indexes.\" )\n+    @Option(names = \"--check-index-structure\", arity = \"1\", showDefaultValue = ALWAYS, paramLabel = \"<true/false>\",\n+      description = \"Perform structure checks on indexes.\")\n     private boolean checkIndexStructure = true;\n \n-    @Option( names = \"--check-label-scan-store\", arity = \"1\", showDefaultValue = ALWAYS, paramLabel = \"<true/false>\",\n-            description = \"Perform consistency checks on the label scan store.\" )\n+    @Option(names = \"--check-label-scan-store\", arity = \"1\", showDefaultValue = ALWAYS, paramLabel = \"<true/false>\",\n+      description = \"Perform consistency checks on the label scan store.\")\n     private boolean checkLabelScanStore = true;\n \n-    @Option( names = \"--check-relationship-type-scan-store\", arity = \"1\", showDefaultValue = ALWAYS, paramLabel = \"<true/false>\",\n-            description = \"Perform consistency checks on the relationship type scan store.\" )\n+    @Option(names = \"--check-relationship-type-scan-store\", arity = \"1\", showDefaultValue = ALWAYS, paramLabel = \"<true/false>\",\n+      description = \"Perform consistency checks on the relationship type scan store.\")\n     private boolean checkRelationshipTypeScanStore;\n \n-    @Option( names = \"--check-property-owners\", arity = \"1\", showDefaultValue = ALWAYS, paramLabel = \"<true/false>\",\n-            description = \"Perform additional consistency checks on property ownership. This check is @|bold,red very|@ expensive in time and memory.\" )\n+    @Option(names = \"--check-property-owners\", arity = \"1\", showDefaultValue = ALWAYS, paramLabel = \"<true/false>\",\n+      description = \"Perform additional consistency checks on property ownership. This check is @|bold,red very|@ expensive in time and memory.\")\n     private boolean checkPropertyOwners;\n \n     public Path getReportDir()\n",
            "diff_size": 16
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2694/ConsistencyCheckOptions.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/2694/ConsistencyCheckOptions.java\nindex a6a8f09e2a1..7c60280601e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2694/ConsistencyCheckOptions.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/2694/ConsistencyCheckOptions.java\n@@ -90,4 +90,4 @@ public class ConsistencyCheckOptions\n     {\n         return checkPropertyOwners;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
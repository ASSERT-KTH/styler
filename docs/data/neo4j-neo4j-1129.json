{
    "project_name": "neo4j-neo4j",
    "error_id": "1129",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "47",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "119",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "65",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "131",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "84",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1129/ClientSideOnConnectSslHandler.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1129/ClientSideOnConnectSslHandler.java\nindex 6b31aa0d9fd..42bc15cf7f7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1129/ClientSideOnConnectSslHandler.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1129/ClientSideOnConnectSslHandler.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.ssl;\n \n import io.netty.channel.Channel;\n@@ -41,18 +42,18 @@ public class ClientSideOnConnectSslHandler extends ChannelDuplexHandler\n {\n     private final ChannelPipeline pipeline;\n     private final SslContext sslContext;\n-    private final Collection<Function<SSLEngine,SSLEngine>> engineModifications;\n+    private final Collection<Function<SSLEngine, SSLEngine>> engineModifications;\n \n-    ClientSideOnConnectSslHandler( Channel channel, SslContext sslContext, boolean verifyHostname, String[] tlsVersions )\n+    ClientSideOnConnectSslHandler(Channel channel, SslContext sslContext, boolean verifyHostname, String[] tlsVersions)\n     {\n         this.pipeline = channel.pipeline();\n         this.sslContext = sslContext;\n \n         this.engineModifications = new ArrayList<>();\n-        engineModifications.add( new EssentialEngineModifications( tlsVersions, true ) );\n-        if ( verifyHostname )\n+        engineModifications.add(new EssentialEngineModifications(tlsVersions, true));\n+        if (verifyHostname)\n         {\n-            engineModifications.add( new ClientSideHostnameVerificationEngineModification() );\n+            engineModifications.add(new ClientSideHostnameVerificationEngineModification());\n         }\n     }\n \n@@ -60,36 +61,36 @@ public class ClientSideOnConnectSslHandler extends ChannelDuplexHandler\n      * Main event that is triggered for connections and swapping out SslHandler for this handler. channelActive and handlerAdded handlers are\n      * secondary boundary cases to this.\n      *\n-     * @param ctx Context of the existing channel\n+     * @param ctx           Context of the existing channel\n      * @param remoteAddress the address used for initating a connection to a remote host (has type InetSocketAddress)\n-     * @param localAddress the local address that will be used for receiving responses from the remote host\n-     * @param promise the Channel promise to notify once the operation completes\n+     * @param localAddress  the local address that will be used for receiving responses from the remote host\n+     * @param promise       the Channel promise to notify once the operation completes\n      * @throws Exception when there is an error of any sort\n      */\n     @Override\n-    public void connect( ChannelHandlerContext ctx, SocketAddress remoteAddress, SocketAddress localAddress, ChannelPromise promise ) throws Exception\n+    public void connect(ChannelHandlerContext ctx, SocketAddress remoteAddress, SocketAddress localAddress, ChannelPromise promise) throws Exception\n     {\n-        SslHandler sslHandler = createSslHandler( ctx, (InetSocketAddress) remoteAddress );\n-        replaceSelfWith( sslHandler );\n-        ctx.connect( remoteAddress, localAddress, promise );\n+        SslHandler sslHandler = createSslHandler(ctx, (InetSocketAddress) remoteAddress);\n+        replaceSelfWith(sslHandler);\n+        ctx.connect(remoteAddress, localAddress, promise);\n     }\n \n     @Override\n-    public void handlerAdded( ChannelHandlerContext ctx ) throws Exception\n+    public void handlerAdded(ChannelHandlerContext ctx) throws Exception\n     {\n         // Sometimes the connect event will have happened before adding, the channel will be active then\n-        if ( ctx.channel().isActive() )\n+        if (ctx.channel().isActive())\n         {\n-            SslHandler sslHandler = createSslHandler( ctx, (InetSocketAddress) ctx.channel().remoteAddress() );\n-            replaceSelfWith( sslHandler );\n-            sslHandler.handlerAdded( ctx );\n+            SslHandler sslHandler = createSslHandler(ctx, (InetSocketAddress) ctx.channel().remoteAddress());\n+            replaceSelfWith(sslHandler);\n+            sslHandler.handlerAdded(ctx);\n         }\n     }\n \n     @Override\n-    public void write( ChannelHandlerContext ctx, Object msg, ChannelPromise promise ) throws Exception\n+    public void write(ChannelHandlerContext ctx, Object msg, ChannelPromise promise) throws Exception\n     {\n-        throw new RuntimeException( Thread.currentThread().getName() + \" - This handler does not write\" );\n+        throw new RuntimeException(Thread.currentThread().getName() + \" - This handler does not write\");\n     }\n \n     /**\n@@ -97,28 +98,28 @@ public class ClientSideOnConnectSslHandler extends ChannelDuplexHandler\n      *\n      * @param sslHandler configured netty handler that enables TLS\n      */\n-    private void replaceSelfWith( SslHandler sslHandler )\n+    private void replaceSelfWith(SslHandler sslHandler)\n     {\n         String myName = pipeline.toMap()\n-                .entrySet()\n-                .stream()\n-                .filter( entry -> this.equals( entry.getValue() ) )\n-                .map( Map.Entry::getKey )\n-                .findFirst()\n-                .orElseThrow( () -> new IllegalStateException( \"This handler has no name\" ) );\n-        pipeline.replace( this, myName, sslHandler );\n-        pipeline.addAfter( myName, \"handshakeCompletionSslDetailsHandler\", new HandshakeCompletionSslDetailsHandler() );\n+          .entrySet()\n+          .stream()\n+          .filter(entry -> this.equals(entry.getValue()))\n+          .map(Map.Entry::getKey)\n+          .findFirst()\n+          .orElseThrow(() -> new IllegalStateException(\"This handler has no name\"));\n+        pipeline.replace(this, myName, sslHandler);\n+        pipeline.addAfter(myName, \"handshakeCompletionSslDetailsHandler\", new HandshakeCompletionSslDetailsHandler());\n     }\n \n-    private SslHandler createSslHandler( ChannelHandlerContext ctx, InetSocketAddress inetSocketAddress )\n+    private SslHandler createSslHandler(ChannelHandlerContext ctx, InetSocketAddress inetSocketAddress)\n     {\n-        SSLEngine sslEngine = sslContext.newEngine( ctx.alloc(), inetSocketAddress.getHostName(), inetSocketAddress.getPort() );\n-        for ( Function<SSLEngine,SSLEngine> mod : engineModifications )\n+        SSLEngine sslEngine = sslContext.newEngine(ctx.alloc(), inetSocketAddress.getHostName(), inetSocketAddress.getPort());\n+        for (Function<SSLEngine, SSLEngine> mod : engineModifications)\n         {\n-            sslEngine = mod.apply( sslEngine );\n+            sslEngine = mod.apply(sslEngine);\n         }\n         // Don't need to set tls versions since that is set up from the context\n-        return new SslHandler( sslEngine );\n+        return new SslHandler(sslEngine);\n     }\n \n     /**\n@@ -129,21 +130,21 @@ public class ClientSideOnConnectSslHandler extends ChannelDuplexHandler\n     private static class HandshakeCompletionSslDetailsHandler extends ChannelInboundHandlerAdapter\n     {\n         @Override\n-        public void userEventTriggered( ChannelHandlerContext ctx, Object evt ) throws Exception\n+        public void userEventTriggered(ChannelHandlerContext ctx, Object evt) throws Exception\n         {\n-            if ( evt instanceof SslHandshakeCompletionEvent )\n+            if (evt instanceof SslHandshakeCompletionEvent)\n             {\n                 SslHandshakeCompletionEvent sslHandshakeEvent = (SslHandshakeCompletionEvent) evt;\n-                if ( sslHandshakeEvent.cause() == null )\n+                if (sslHandshakeEvent.cause() == null)\n                 {\n-                    SslHandler sslHandler = ctx.pipeline().get( SslHandler.class );\n+                    SslHandler sslHandler = ctx.pipeline().get(SslHandler.class);\n                     String ciphers = sslHandler.engine().getSession().getCipherSuite();\n                     String protocols = sslHandler.engine().getSession().getProtocol();\n \n-                    ctx.fireUserEventTriggered( new SslHandlerDetailsRegisteredEvent( ciphers, protocols ) );\n+                    ctx.fireUserEventTriggered(new SslHandlerDetailsRegisteredEvent(ciphers, protocols));\n                 }\n             }\n-            ctx.fireUserEventTriggered( evt );\n+            ctx.fireUserEventTriggered(evt);\n         }\n     }\n }\n",
            "diff_size": 40
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1129/ClientSideOnConnectSslHandler.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/1129/ClientSideOnConnectSslHandler.java\nindex 6b31aa0d9fd..fb23dfd4f61 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1129/ClientSideOnConnectSslHandler.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/1129/ClientSideOnConnectSslHandler.java\n@@ -146,4 +146,4 @@ public class ClientSideOnConnectSslHandler extends ChannelDuplexHandler\n             ctx.fireUserEventTriggered( evt );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
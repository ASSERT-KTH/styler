{
    "project_name": "kitodo-kitodo-production",
    "error_id": "39",
    "information": {
        "errors": [
            {
                "line": "262",
                "column": "21",
                "severity": "warning",
                "message": "'array initialization' child has incorrect indentation level 20, expected level should be one of the following: 16, 68, 71.",
                "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
            }
        ]
    },
    "source_code": "        } catch (DAOException e) {\n            Helper.setErrorMessage(ERROR_LOADING_ONE, new Object[] {ObjectType.PROCESS.getTranslationSingular(),\n                    processId}, logger, e);\n            return 0;\n        }\n    }",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/errored/1/39/DesktopForm.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/styler/39/DesktopForm.java\nindex 4abcec68790..a73a09da612 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/errored/1/39/DesktopForm.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/styler/39/DesktopForm.java\n@@ -259,7 +259,7 @@ public class DesktopForm extends BaseForm {\n             return ProcessService.hasCorrectionComment(processId).getValue();\n         } catch (DAOException e) {\n             Helper.setErrorMessage(ERROR_LOADING_ONE, new Object[] {ObjectType.PROCESS.getTranslationSingular(),\n-                    processId}, logger, e);\n+                processId}, logger, e);\n             return 0;\n         }\n     }\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/errored/1/39/DesktopForm.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/intellij/39/DesktopForm.java\nindex 4abcec68790..34c9174fd6e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/errored/1/39/DesktopForm.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/intellij/39/DesktopForm.java\n@@ -84,7 +84,7 @@ public class DesktopForm extends BaseForm {\n                 taskList = ServiceManager.getTaskService().loadData(0, 10, SORT_TITLE, SortOrder.ASCENDING, new HashMap<>());\n             }\n         } catch (DataException | JsonException e) {\n-            Helper.setErrorMessage(ERROR_LOADING_MANY, new Object[] {ObjectType.TASK.getTranslationPlural() }, logger,\n+            Helper.setErrorMessage(ERROR_LOADING_MANY, new Object[] {ObjectType.TASK.getTranslationPlural()}, logger,\n                 e);\n         }\n         return taskList;\n@@ -101,7 +101,7 @@ public class DesktopForm extends BaseForm {\n                 processList = ServiceManager.getProcessService().loadData(0, 10, SORT_ID, SortOrder.DESCENDING, null);\n             }\n         } catch (DataException | JsonException e) {\n-            Helper.setErrorMessage(ERROR_LOADING_MANY, new Object[] {ObjectType.PROCESS.getTranslationPlural() },\n+            Helper.setErrorMessage(ERROR_LOADING_MANY, new Object[] {ObjectType.PROCESS.getTranslationPlural()},\n                 logger, e);\n         }\n         return processList;\n@@ -118,7 +118,7 @@ public class DesktopForm extends BaseForm {\n                 projectList = ServiceManager.getProjectService().loadData(0, 10, SORT_TITLE, SortOrder.ASCENDING, null);\n             }\n         } catch (DataException | JsonException e) {\n-            Helper.setErrorMessage(ERROR_LOADING_MANY, new Object[] {ObjectType.PROJECT.getTranslationPlural() },\n+            Helper.setErrorMessage(ERROR_LOADING_MANY, new Object[] {ObjectType.PROJECT.getTranslationPlural()},\n                 logger, e);\n         }\n         return projectList;\n@@ -134,8 +134,8 @@ public class DesktopForm extends BaseForm {\n             ProcessService.deleteProcess(processID);\n             emptyCache();\n         } catch (DataException | DAOException | IOException e) {\n-            Helper.setErrorMessage(ERROR_DELETING, new Object[] {ObjectType.PROCESS.getTranslationSingular() },\n-                    logger, e);\n+            Helper.setErrorMessage(ERROR_DELETING, new Object[] {ObjectType.PROCESS.getTranslationSingular()},\n+                logger, e);\n         }\n     }\n \n@@ -149,8 +149,8 @@ public class DesktopForm extends BaseForm {\n             ProjectService.delete(projectID);\n             emptyCache();\n         } catch (DataException | DAOException e) {\n-            Helper.setErrorMessage(ERROR_DELETING, new Object[] {ObjectType.PROJECT.getTranslationSingular() }, logger,\n-                    e);\n+            Helper.setErrorMessage(ERROR_DELETING, new Object[] {ObjectType.PROJECT.getTranslationSingular()}, logger,\n+                e);\n         } catch (ProjectDeletionException e) {\n             Helper.setErrorMessage(e.getMessage());\n         }\n@@ -165,7 +165,7 @@ public class DesktopForm extends BaseForm {\n             Helper.setMessage(EXPORT_FINISHED);\n         } catch (DAOException | DataException | IOException e) {\n             Helper.setErrorMessage(\"An error occurred while trying to export METS file for process \"\n-                    + processId, logger, e);\n+                + processId, logger, e);\n         }\n     }\n \n@@ -185,8 +185,7 @@ public class DesktopForm extends BaseForm {\n     /**\n      * Get number of elements of given type 'objectType' in index.\n      *\n-     * @param objectType\n-     *            type of elements\n+     * @param objectType type of elements\n      * @return number of elements\n      */\n     public long getNumberOfElements(ObjectType objectType) {\n@@ -232,8 +231,7 @@ public class DesktopForm extends BaseForm {\n     /**\n      * Retrieve correction comments of given process and return them as a tooltip String.\n      *\n-     * @param processDTO\n-     *          process for which comment tooltip is created and returned\n+     * @param processDTO process for which comment tooltip is created and returned\n      * @return String containing correction comment messages for given process\n      */\n     public String getCorrectionMessages(ProcessDTO processDTO) {\n@@ -248,18 +246,17 @@ public class DesktopForm extends BaseForm {\n     /**\n      * Check and return whether the process with the ID 'processId' has any correction comments or not.\n      *\n-     * @param processId\n-     *          ID of process to check\n+     * @param processId ID of process to check\n      * @return 0, if process has no correction comment\n-     *         1, if process has correction comments that are all corrected\n-     *         2, if process has at least one open correction comment\n+     * 1, if process has correction comments that are all corrected\n+     * 2, if process has at least one open correction comment\n      */\n     public int hasCorrectionTask(int processId) {\n         try {\n             return ProcessService.hasCorrectionComment(processId).getValue();\n         } catch (DAOException e) {\n             Helper.setErrorMessage(ERROR_LOADING_ONE, new Object[] {ObjectType.PROCESS.getTranslationSingular(),\n-                    processId}, logger, e);\n+                processId}, logger, e);\n             return 0;\n         }\n     }\n",
            "diff_size": 17
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "262",
                    "column": "5",
                    "severity": "warning",
                    "message": "'processId' has incorrect indentation level 4, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/errored/1/39/DesktopForm.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/naturalize/39/DesktopForm.java\nindex 4abcec68790..328f88ed63f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/errored/1/39/DesktopForm.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/naturalize/39/DesktopForm.java\n@@ -259,8 +259,8 @@ public class DesktopForm extends BaseForm {\n             return ProcessService.hasCorrectionComment(processId).getValue();\n         } catch (DAOException e) {\n             Helper.setErrorMessage(ERROR_LOADING_ONE, new Object[] {ObjectType.PROCESS.getTranslationSingular(),\n-                    processId}, logger, e);\n+    processId}, logger, e);\n             return 0;\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/errored/1/39/DesktopForm.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/codebuff/39/DesktopForm.java\nindex 4abcec68790..9ec51032886 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/errored/1/39/DesktopForm.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/codebuff/39/DesktopForm.java\n@@ -15,11 +15,9 @@ import java.io.IOException;\n import java.util.ArrayList;\n import java.util.HashMap;\n import java.util.List;\n-\n import javax.faces.view.ViewScoped;\n import javax.inject.Named;\n import javax.json.JsonException;\n-\n import org.apache.logging.log4j.LogManager;\n import org.apache.logging.log4j.Logger;\n import org.elasticsearch.ElasticsearchStatusException;\n@@ -40,6 +38,7 @@ import org.primefaces.model.SortOrder;\n @Named(\"DesktopForm\")\n @ViewScoped\n public class DesktopForm extends BaseForm {\n+\n     private static final Logger logger = LogManager.getLogger(DesktopForm.class);\n     private static final String SORT_TITLE = \"title\";\n     private static final String SORT_ID = \"id\";\n@@ -50,6 +49,8 @@ public class DesktopForm extends BaseForm {\n     /**\n      * Default constructor.\n      */\n+\n+\n     public DesktopForm() {\n         super();\n     }\n@@ -59,6 +60,8 @@ public class DesktopForm extends BaseForm {\n      *\n      * @return array containing values of ObjectType enum\n      */\n+\n+\n     public List<ObjectType> getObjectTypes() {\n         ArrayList<ObjectType> objectTypes = new ArrayList<>();\n         objectTypes.add(ObjectType.TASK);\n@@ -78,14 +81,15 @@ public class DesktopForm extends BaseForm {\n      *\n      * @return task list\n      */\n+\n+\n     public List<TaskDTO> getTasks() {\n         try {\n             if (ServiceManager.getSecurityAccessService().hasAuthorityToViewTaskList() && taskList.isEmpty()) {\n                 taskList = ServiceManager.getTaskService().loadData(0, 10, SORT_TITLE, SortOrder.ASCENDING, new HashMap<>());\n             }\n         } catch (DataException | JsonException e) {\n-            Helper.setErrorMessage(ERROR_LOADING_MANY, new Object[] {ObjectType.TASK.getTranslationPlural() }, logger,\n-                e);\n+            Helper.setErrorMessage(ERROR_LOADING_MANY, new Object[] {ObjectType.TASK.getTranslationPlural() }, logger, e);\n         }\n         return taskList;\n     }\n@@ -95,14 +99,18 @@ public class DesktopForm extends BaseForm {\n      *\n      * @return process list\n      */\n+\n+\n     public List<ProcessDTO> getProcesses() {\n         try {\n             if (ServiceManager.getSecurityAccessService().hasAuthorityToViewProcessList() && processList.isEmpty()) {\n                 processList = ServiceManager.getProcessService().loadData(0, 10, SORT_ID, SortOrder.DESCENDING, null);\n             }\n         } catch (DataException | JsonException e) {\n-            Helper.setErrorMessage(ERROR_LOADING_MANY, new Object[] {ObjectType.PROCESS.getTranslationPlural() },\n-                logger, e);\n+            Helper.setErrorMessage(ERROR_LOADING_MANY,\n+                new Object[] {ObjectType.PROCESS.getTranslationPlural() },\n+                logger,\n+                e);\n         }\n         return processList;\n     }\n@@ -112,14 +120,18 @@ public class DesktopForm extends BaseForm {\n      *\n      * @return project list\n      */\n+\n+\n     public List<ProjectDTO> getProjects() {\n         try {\n             if (ServiceManager.getSecurityAccessService().hasAuthorityToViewProjectList() && projectList.isEmpty()) {\n                 projectList = ServiceManager.getProjectService().loadData(0, 10, SORT_TITLE, SortOrder.ASCENDING, null);\n             }\n         } catch (DataException | JsonException e) {\n-            Helper.setErrorMessage(ERROR_LOADING_MANY, new Object[] {ObjectType.PROJECT.getTranslationPlural() },\n-                logger, e);\n+            Helper.setErrorMessage(ERROR_LOADING_MANY,\n+                new Object[] {ObjectType.PROJECT.getTranslationPlural() },\n+                logger,\n+                e);\n         }\n         return projectList;\n     }\n@@ -129,13 +141,14 @@ public class DesktopForm extends BaseForm {\n      *\n      * @param processID ID of Process to delete\n      */\n+\n+\n     public void deleteProcess(int processID) {\n         try {\n             ProcessService.deleteProcess(processID);\n             emptyCache();\n         } catch (DataException | DAOException | IOException e) {\n-            Helper.setErrorMessage(ERROR_DELETING, new Object[] {ObjectType.PROCESS.getTranslationSingular() },\n-                    logger, e);\n+            Helper.setErrorMessage(ERROR_DELETING, new Object[] {ObjectType.PROCESS.getTranslationSingular() }, logger, e);\n         }\n     }\n \n@@ -144,13 +157,14 @@ public class DesktopForm extends BaseForm {\n      *\n      * @param projectID ID of project to be deleted\n      */\n+\n+\n     public void deleteProject(int projectID) {\n         try {\n             ProjectService.delete(projectID);\n             emptyCache();\n         } catch (DataException | DAOException e) {\n-            Helper.setErrorMessage(ERROR_DELETING, new Object[] {ObjectType.PROJECT.getTranslationSingular() }, logger,\n-                    e);\n+            Helper.setErrorMessage(ERROR_DELETING, new Object[] {ObjectType.PROJECT.getTranslationSingular() }, logger, e);\n         } catch (ProjectDeletionException e) {\n             Helper.setErrorMessage(e.getMessage());\n         }\n@@ -159,13 +173,16 @@ public class DesktopForm extends BaseForm {\n     /**\n      * Export METS.\n      */\n+\n+\n     public void exportMets(int processId) {\n         try {\n             ProcessService.exportMets(processId);\n             Helper.setMessage(EXPORT_FINISHED);\n         } catch (DAOException | DataException | IOException e) {\n-            Helper.setErrorMessage(\"An error occurred while trying to export METS file for process \"\n-                    + processId, logger, e);\n+            Helper.setErrorMessage(\"An error occurred while trying to export METS file for process \" + processId,\n+                logger,\n+                e);\n         }\n     }\n \n@@ -174,6 +191,8 @@ public class DesktopForm extends BaseForm {\n      * being edited by another user and placed in his home directory, otherwise\n      * download.\n      */\n+\n+\n     public void downloadToHome(int processId) {\n         try {\n             ProcessService.downloadToHome(new WebDav(), processId);\n@@ -189,6 +208,8 @@ public class DesktopForm extends BaseForm {\n      *            type of elements\n      * @return number of elements\n      */\n+\n+\n     public long getNumberOfElements(ObjectType objectType) {\n         try {\n             switch (objectType) {\n@@ -213,7 +234,6 @@ public class DesktopForm extends BaseForm {\n                 default:\n                     return 0L;\n             }\n-\n         } catch (DAOException | JsonException | ElasticsearchStatusException e) {\n             Helper.setErrorMessage(\"Unable to load number of elements\", logger, e);\n         }\n@@ -223,6 +243,8 @@ public class DesktopForm extends BaseForm {\n     /**\n      * Empties the lists for caching.\n      */\n+\n+\n     public void emptyCache() {\n         taskList.clear();\n         processList.clear();\n@@ -236,6 +258,8 @@ public class DesktopForm extends BaseForm {\n      *          process for which comment tooltip is created and returned\n      * @return String containing correction comment messages for given process\n      */\n+\n+\n     public String getCorrectionMessages(ProcessDTO processDTO) {\n         try {\n             return ServiceManager.getProcessService().createCorrectionMessagesTooltip(processDTO);\n@@ -254,13 +278,17 @@ public class DesktopForm extends BaseForm {\n      *         1, if process has correction comments that are all corrected\n      *         2, if process has at least one open correction comment\n      */\n+\n+\n     public int hasCorrectionTask(int processId) {\n         try {\n             return ProcessService.hasCorrectionComment(processId).getValue();\n         } catch (DAOException e) {\n-            Helper.setErrorMessage(ERROR_LOADING_ONE, new Object[] {ObjectType.PROCESS.getTranslationSingular(),\n-                    processId}, logger, e);\n+            Helper.setErrorMessage(ERROR_LOADING_ONE,\n+                new Object[] {ObjectType.PROCESS.getTranslationSingular(), processId },\n+                logger,\n+                e);\n             return 0;\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 52
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/errored/1/39/DesktopForm.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/styler_random/39/DesktopForm.java\nindex 4abcec68790..a73a09da612 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/errored/1/39/DesktopForm.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/styler_random/39/DesktopForm.java\n@@ -259,7 +259,7 @@ public class DesktopForm extends BaseForm {\n             return ProcessService.hasCorrectionComment(processId).getValue();\n         } catch (DAOException e) {\n             Helper.setErrorMessage(ERROR_LOADING_ONE, new Object[] {ObjectType.PROCESS.getTranslationSingular(),\n-                    processId}, logger, e);\n+                processId}, logger, e);\n             return 0;\n         }\n     }\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/errored/1/39/DesktopForm.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/styler_three_grams/39/DesktopForm.java\nindex 4abcec68790..779768b790f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/errored/1/39/DesktopForm.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/styler_three_grams/39/DesktopForm.java\n@@ -258,8 +258,7 @@ public class DesktopForm extends BaseForm {\n         try {\n             return ProcessService.hasCorrectionComment(processId).getValue();\n         } catch (DAOException e) {\n-            Helper.setErrorMessage(ERROR_LOADING_ONE, new Object[] {ObjectType.PROCESS.getTranslationSingular(),\n-                    processId}, logger, e);\n+            Helper.setErrorMessage(ERROR_LOADING_ONE, new Object[] {ObjectType.PROCESS.getTranslationSingular(),processId}, logger, e);\n             return 0;\n         }\n     }\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2609",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "34",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "34",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2609/LogPrinter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2609/LogPrinter.java\nindex daba89bc7be..4392afd35e2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2609/LogPrinter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2609/LogPrinter.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering.core.consensus.log.debug;\n \n import java.io.IOException;\n@@ -28,25 +29,25 @@ import org.neo4j.causalclustering.core.consensus.log.ReadableRaftLog;\n \n public class LogPrinter\n {\n-    private final ReadableRaftLog raftLog;\n+  private final ReadableRaftLog raftLog;\n \n-    public LogPrinter( ReadableRaftLog raftLog )\n-    {\n-        this.raftLog = raftLog;\n-    }\n+  public LogPrinter(ReadableRaftLog raftLog)\n+  {\n+    this.raftLog = raftLog;\n+  }\n \n-    public void print( PrintStream out ) throws IOException\n+  public void print(PrintStream out) throws IOException\n+  {\n+    out.println(String.format(\"%1$8s %2$5s  %3$2s %4$s\", \"Index\", \"Term\", \"C?\", \"Content\"));\n+    long index = 0L;\n+    try (RaftLogCursor cursor = raftLog.getEntryCursor(0))\n     {\n-        out.println( String.format( \"%1$8s %2$5s  %3$2s %4$s\", \"Index\", \"Term\", \"C?\", \"Content\"));\n-        long index = 0L;\n-        try ( RaftLogCursor cursor = raftLog.getEntryCursor( 0 ) )\n-        {\n-            while ( cursor.next() )\n-            {\n-                RaftLogEntry raftLogEntry = cursor.get();\n-                out.printf(\"%8d %5d %s\", index, raftLogEntry.term(), raftLogEntry.content());\n-                index++;\n-            }\n-        }\n+      while (cursor.next())\n+      {\n+        RaftLogEntry raftLogEntry = cursor.get();\n+        out.printf(\"%8d %5d %s\", index, raftLogEntry.term(), raftLogEntry.content());\n+        index++;\n+      }\n     }\n+  }\n }\n",
            "diff_size": 23
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2609/LogPrinter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2609/LogPrinter.java\nindex daba89bc7be..d0fd43801b0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2609/LogPrinter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2609/LogPrinter.java\n@@ -37,16 +37,16 @@ public class LogPrinter\n \n     public void print( PrintStream out ) throws IOException\n     {\n-        out.println( String.format( \"%1$8s %2$5s  %3$2s %4$s\", \"Index\", \"Term\", \"C?\", \"Content\"));\n+        out.println( String.format( \"%1$8s %2$5s  %3$2s %4$s\", \"Index\", \"Term\", \"C?\", \"Content\" ));\n         long index = 0L;\n         try ( RaftLogCursor cursor = raftLog.getEntryCursor( 0 ) )\n         {\n             while ( cursor.next() )\n             {\n                 RaftLogEntry raftLogEntry = cursor.get();\n-                out.printf(\"%8d %5d %s\", index, raftLogEntry.term(), raftLogEntry.content());\n+                out.printf( \"%8d %5d %s\", index, raftLogEntry.term(), raftLogEntry.content() );\n                 index++;\n             }\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "42",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "13",
                    "severity": "error",
                    "message": "'while' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "44",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2609/LogPrinter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/2609/LogPrinter.java\nindex daba89bc7be..0c5715f51c6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2609/LogPrinter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/2609/LogPrinter.java\n@@ -21,7 +21,6 @@ package org.neo4j.causalclustering.core.consensus.log.debug;\n \n import java.io.IOException;\n import java.io.PrintStream;\n-\n import org.neo4j.causalclustering.core.consensus.log.RaftLogCursor;\n import org.neo4j.causalclustering.core.consensus.log.RaftLogEntry;\n import org.neo4j.causalclustering.core.consensus.log.ReadableRaftLog;\n@@ -37,16 +36,17 @@ public class LogPrinter\n \n     public void print( PrintStream out ) throws IOException\n     {\n-        out.println( String.format( \"%1$8s %2$5s  %3$2s %4$s\", \"Index\", \"Term\", \"C?\", \"Content\"));\n+        out.println( String.format( \"%1$8s %2$5s  %3$2s %4$s\", \"Index\", \"Term\", \"C?\", \"Content\" ) );\n         long index = 0L;\n-        try ( RaftLogCursor cursor = raftLog.getEntryCursor( 0 ) )\n+        try\n+        ( RaftLogCursor cursor = raftLog.getEntryCursor( 0 ))\n         {\n-            while ( cursor.next() )\n+            while( cursor.next())\n             {\n                 RaftLogEntry raftLogEntry = cursor.get();\n-                out.printf(\"%8d %5d %s\", index, raftLogEntry.term(), raftLogEntry.content());\n+                out.printf( \"%8d %5d %s\", index, raftLogEntry.term(), raftLogEntry.content() );\n                 index++;\n             }\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1481",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "37",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "60",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "66",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1481/PortRangeSocketBinder.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1481/PortRangeSocketBinder.java\nindex b4e477abb8e..b01f38111ad 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1481/PortRangeSocketBinder.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1481/PortRangeSocketBinder.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.com;\n \n import org.jboss.netty.bootstrap.ServerBootstrap;\n@@ -30,50 +31,48 @@ import org.neo4j.helpers.HostnamePort;\n \n public class PortRangeSocketBinder\n {\n-    private ServerBootstrap bootstrap;\n-    private static final String ALL_INTERFACES_ADDRESS = \"0.0.0.0\";\n+  private ServerBootstrap bootstrap;\n+  private static final String ALL_INTERFACES_ADDRESS = \"0.0.0.0\";\n \n-    public PortRangeSocketBinder( ServerBootstrap bootstrap )\n-    {\n-        this.bootstrap = bootstrap;\n-    }\n+  public PortRangeSocketBinder(ServerBootstrap bootstrap)\n+  {\n+    this.bootstrap = bootstrap;\n+  }\n \n-    public Connection bindToFirstAvailablePortInRange( HostnamePort serverAddress ) throws ChannelException\n-    {\n-        int[] ports = serverAddress.getPorts();\n-        String host = serverAddress.getHost();\n+  public Connection bindToFirstAvailablePortInRange(HostnamePort serverAddress) throws ChannelException\n+  {\n+    int[] ports = serverAddress.getPorts();\n+    String host = serverAddress.getHost();\n \n-        Channel channel;\n-        InetSocketAddress socketAddress;\n-        ChannelException lastException = null;\n+    Channel channel;\n+    InetSocketAddress socketAddress;\n+    ChannelException lastException = null;\n \n-        PortIterator portIterator = new PortIterator( ports );\n-        while ( portIterator.hasNext() )\n+    PortIterator portIterator = new PortIterator(ports);\n+    while (portIterator.hasNext())\n+    {\n+      Integer port = portIterator.next();\n+      if (host == null || host.equals(ALL_INTERFACES_ADDRESS))\n+      {\n+        socketAddress = new InetSocketAddress(port);\n+      } else\n+      {\n+        socketAddress = new InetSocketAddress(host, port);\n+      }\n+      try\n+      {\n+        channel = bootstrap.bind(socketAddress);\n+        return new Connection(socketAddress, channel);\n+      } catch (ChannelException e)\n+      {\n+        if (lastException != null)\n         {\n-            Integer port = portIterator.next();\n-            if ( host == null || host.equals( ALL_INTERFACES_ADDRESS ) )\n-            {\n-                socketAddress = new InetSocketAddress( port );\n-            }\n-            else\n-            {\n-                socketAddress = new InetSocketAddress( host, port );\n-            }\n-            try\n-            {\n-                channel = bootstrap.bind( socketAddress );\n-                return new Connection( socketAddress, channel );\n-            }\n-            catch ( ChannelException e )\n-            {\n-                if ( lastException != null )\n-                {\n-                    e.addSuppressed( lastException );\n-                }\n-                lastException = e;\n-            }\n+          e.addSuppressed(lastException);\n         }\n-\n-        throw Objects.requireNonNull( lastException );\n+        lastException = e;\n+      }\n     }\n+\n+    throw Objects.requireNonNull(lastException);\n+  }\n }\n",
            "diff_size": 59
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1481/PortRangeSocketBinder.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1481/PortRangeSocketBinder.java\nindex b4e477abb8e..79c0cc2ff02 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1481/PortRangeSocketBinder.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1481/PortRangeSocketBinder.java\n@@ -59,7 +59,8 @@ public class PortRangeSocketBinder\n             {\n                 socketAddress = new InetSocketAddress( host, port );\n             }\n-            try\n+\n+try\n             {\n                 channel = bootstrap.bind( socketAddress );\n                 return new Connection( socketAddress, channel );\n@@ -70,10 +71,11 @@ public class PortRangeSocketBinder\n                 {\n                     e.addSuppressed( lastException );\n                 }\n-                lastException = e;\n+\n+lastException = e;\n             }\n         }\n \n         throw Objects.requireNonNull( lastException );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
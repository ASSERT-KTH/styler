{
    "project_name": "apache-servicecomb-java-chassis",
    "error_id": "218",
    "information": {
        "errors": [
            {
                "line": "288",
                "column": "87",
                "severity": "warning",
                "message": "'?' should be on a new line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
            }
        ]
    },
    "source_code": "            .build()\n    );\n    return MicroserviceCacheStatus.SERVICE_NOT_FOUND.equals(serviceCache.getStatus()) ?\n        null : serviceCache.getInstances();\n  }\n",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/218/RegistryUtils.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler/218/RegistryUtils.java\nindex 28e881dc6eb..2ccca8db0b4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/218/RegistryUtils.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler/218/RegistryUtils.java\n@@ -285,8 +285,8 @@ public final class RegistryUtils {\n             .appId(appId).serviceName(serviceName).env(getMicroservice().getEnvironment())\n             .build()\n     );\n-    return MicroserviceCacheStatus.SERVICE_NOT_FOUND.equals(serviceCache.getStatus()) ?\n-        null : serviceCache.getInstances();\n+    return MicroserviceCacheStatus.SERVICE_NOT_FOUND.equals(serviceCache.getStatus())\n+        ? null : serviceCache.getInstances();\n   }\n \n   // update microservice instance properties\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "288",
                    "column": "87",
                    "severity": "warning",
                    "message": "'?' should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/218/RegistryUtils.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/intellij/218/RegistryUtils.java\nindex 28e881dc6eb..5b61f9b64e1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/218/RegistryUtils.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/intellij/218/RegistryUtils.java\n@@ -279,7 +279,7 @@ public final class RegistryUtils {\n   }\n \n   public static List<MicroserviceInstance> findServiceInstance(String appId, String serviceName,\n-      String versionRule) {\n+                                                               String versionRule) {\n     MicroserviceCache serviceCache = aggregateServiceRegistryCache.findServiceCache(\n         MicroserviceCacheKey.builder()\n             .appId(appId).serviceName(serviceName).env(getMicroservice().getEnvironment())\n@@ -304,7 +304,7 @@ public final class RegistryUtils {\n   }\n \n   public static MicroserviceInstances findServiceInstances(String appId, String serviceName,\n-      String versionRule, String revision) {\n+                                                           String versionRule, String revision) {\n     MicroserviceCache serviceCache = aggregateServiceRegistryCache.findServiceCache(\n         MicroserviceCacheKey.builder().appId(appId).serviceName(serviceName).env(getMicroservice().getEnvironment())\n             .build());\n@@ -390,7 +390,7 @@ public final class RegistryUtils {\n   }\n \n   /**\n-   * @throws NullPointerException serviceRegistryConfig is null\n+   * @throws NullPointerException     serviceRegistryConfig is null\n    * @throws IllegalArgumentException config value is illegal\n    */\n   public static void validateRegistryConfig(ServiceRegistryConfig serviceRegistryConfig) {\n@@ -400,6 +400,7 @@ public final class RegistryUtils {\n \n   /**\n    * To validate whether the name is legal value.\n+   *\n    * @param name name of the {@link ServiceRegistry}\n    * @throws IllegalArgumentException the input value is illegal\n    */\n",
            "diff_size": 4
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "286",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 123).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/218/RegistryUtils.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/naturalize/218/RegistryUtils.java\nindex 28e881dc6eb..a93dce07225 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/218/RegistryUtils.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/naturalize/218/RegistryUtils.java\n@@ -110,8 +110,7 @@ public final class RegistryUtils {\n     aggregateServiceRegistryCache.setCacheRefreshedWatcher(refreshedCaches -> appManager.pullInstances());\n \n     executeOnEachServiceRegistry(\n-        serviceRegistry -> serviceRegistry\n-            .getEventBus()\n+        serviceRegistry -> serviceRegistry.getEventBus()\n             .register(aggregateServiceRegistryCache));\n   }\n \n@@ -274,7 +273,7 @@ public final class RegistryUtils {\n     int publishPortSetting = DynamicPropertyFactory.getInstance()\n         .getIntProperty(publishPortKey, 0)\n         .get();\n-    int publishPort = publishPortSetting == 0 ? ipPort.getPort() : publishPortSetting;\n+int publishPort = publishPortSetting == 0 ? ipPort.getPort() : publishPortSetting;\n     return new IpPort(publicAddressSetting, publishPort);\n   }\n \n@@ -283,10 +282,8 @@ public final class RegistryUtils {\n     MicroserviceCache serviceCache = aggregateServiceRegistryCache.findServiceCache(\n         MicroserviceCacheKey.builder()\n             .appId(appId).serviceName(serviceName).env(getMicroservice().getEnvironment())\n-            .build()\n-    );\n-    return MicroserviceCacheStatus.SERVICE_NOT_FOUND.equals(serviceCache.getStatus()) ?\n-        null : serviceCache.getInstances();\n+            .build());\n+    return MicroserviceCacheStatus.SERVICE_NOT_FOUND.equals(serviceCache.getStatus()) ? null : serviceCache.getInstances();\n   }\n \n   // update microservice instance properties\n@@ -338,7 +335,7 @@ public final class RegistryUtils {\n         return microserviceInstances;\n       default:\n         return null;\n-    }\n+  }\n   }\n \n   public static String calcSchemaSummary(String schemaContent) {\n@@ -439,4 +436,4 @@ public final class RegistryUtils {\n       EventManager.getEventBus().post(microserviceInstanceRegisterTask);\n     }\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "288",
                    "column": "87",
                    "severity": "warning",
                    "message": "'?' should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/218/RegistryUtils.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler_three_grams/218/RegistryUtils.java\nindex 28e881dc6eb..2ccca8db0b4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/218/RegistryUtils.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler_three_grams/218/RegistryUtils.java\n@@ -285,8 +285,8 @@ public final class RegistryUtils {\n             .appId(appId).serviceName(serviceName).env(getMicroservice().getEnvironment())\n             .build()\n     );\n-    return MicroserviceCacheStatus.SERVICE_NOT_FOUND.equals(serviceCache.getStatus()) ?\n-        null : serviceCache.getInstances();\n+    return MicroserviceCacheStatus.SERVICE_NOT_FOUND.equals(serviceCache.getStatus())\n+        ? null : serviceCache.getInstances();\n   }\n \n   // update microservice instance properties\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random"
    ]
}
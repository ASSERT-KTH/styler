{
    "project_name": "bakdata-conquery",
    "error_id": "292",
    "information": {
        "errors": [
            {
                "line": "15",
                "severity": "warning",
                "message": "trailing whitespaces",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
            }
        ]
    },
    "source_code": "public class DateParser extends Parser<Integer> {\n\n\tprivate VarIntParser subType = new VarIntParser(); \n\t\n\t@Override\n\tprotected Integer parseValue(@Nonnull String value) throws ParsingException {",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/292/DateParser.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler/292/DateParser.java\nindex 29fbe7d4753..9cd7fc329d3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/292/DateParser.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler/292/DateParser.java\n@@ -12,8 +12,8 @@ import com.bakdata.conquery.util.DateFormats;\n \n public class DateParser extends Parser<Integer> {\n \n-\tprivate VarIntParser subType = new VarIntParser(); \n-\t\n+\tprivate VarIntParser subType = new VarIntParser();\n+\n \t@Override\n \tprotected Integer parseValue(@Nonnull String value) throws ParsingException {\n \t\treturn CDate.ofLocalDate(DateFormats.parseToLocalDate(value));\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "15",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "17",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "18",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "19",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "20",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "22",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "23",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "24",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "25",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "26",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "28",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "29",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "30",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "31",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "32",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "33",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "34",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "35",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/292/DateParser.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/intellij/292/DateParser.java\nindex 29fbe7d4753..92d576a715b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/292/DateParser.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/intellij/292/DateParser.java\n@@ -12,25 +12,25 @@ import com.bakdata.conquery.util.DateFormats;\n \n public class DateParser extends Parser<Integer> {\n \n-\tprivate VarIntParser subType = new VarIntParser(); \n-\t\n-\t@Override\n-\tprotected Integer parseValue(@Nonnull String value) throws ParsingException {\n-\t\treturn CDate.ofLocalDate(DateFormats.parseToLocalDate(value));\n-\t}\n-\t\n-\t@Override\n-\tpublic Integer addLine(Integer v) {\n-\t\tsuper.addLine(v);\n-\t\treturn subType.addLine(v);\n-\t}\n+    private VarIntParser subType = new VarIntParser();\n \n-\t@Override\n-\tprotected Decision<Integer, ?, DateTypeVarInt> decideType() {\n-\t\tDecision<Integer, Number, VarIntType> subDecision = subType.findBestType();\n-\t\treturn new Decision<Integer, Number, DateTypeVarInt>(\n-\t\t\tsubDecision.getTransformer(),\n-\t\t\tnew DateTypeVarInt(subDecision.getType())\n-\t\t);\n-\t}\n+    @Override\n+    protected Integer parseValue(@Nonnull String value) throws ParsingException {\n+        return CDate.ofLocalDate(DateFormats.parseToLocalDate(value));\n+    }\n+\n+    @Override\n+    public Integer addLine(Integer v) {\n+        super.addLine(v);\n+        return subType.addLine(v);\n+    }\n+\n+    @Override\n+    protected Decision<Integer, ?, DateTypeVarInt> decideType() {\n+        Decision<Integer, Number, VarIntType> subDecision = subType.findBestType();\n+        return new Decision<Integer, Number, DateTypeVarInt>(\n+            subDecision.getTransformer(),\n+            new DateTypeVarInt(subDecision.getType())\n+        );\n+    }\n }\n",
            "diff_size": 31
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "16",
                    "column": "1",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/292/DateParser.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/naturalize/292/DateParser.java\nindex 29fbe7d4753..23d37ab93de 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/292/DateParser.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/naturalize/292/DateParser.java\n@@ -12,10 +12,9 @@ import com.bakdata.conquery.util.DateFormats;\n \n public class DateParser extends Parser<Integer> {\n \n-\tprivate VarIntParser subType = new VarIntParser(); \n-\t\n-\t@Override\n-\tprotected Integer parseValue(@Nonnull String value) throws ParsingException {\n+\tprivate VarIntParser subType = new VarIntParser();\n+@Override\n+protected Integer parseValue(@Nonnull String value) throws ParsingException {\n \t\treturn CDate.ofLocalDate(DateFormats.parseToLocalDate(value));\n \t}\n \t\n@@ -33,4 +32,4 @@ public class DateParser extends Parser<Integer> {\n \t\t\tnew DateTypeVarInt(subDecision.getType())\n \t\t);\n \t}\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "14",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "14",
                    "column": "2",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "16",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "16",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "17",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "18",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "18",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "19",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "19",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "21",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "21",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "22",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "23",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "23",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "24",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "24",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "25",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "25",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "27",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "27",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "28",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "29",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "29",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "30",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "30",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "31",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "31",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/292/DateParser.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/codebuff/292/DateParser.java\nindex 29fbe7d4753..af9ee38f4a0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/292/DateParser.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/codebuff/292/DateParser.java\n@@ -1,7 +1,6 @@\n package com.bakdata.conquery.models.types.parser.specific;\n \n import javax.annotation.Nonnull;\n-\n import com.bakdata.conquery.models.common.CDate;\n import com.bakdata.conquery.models.exceptions.ParsingException;\n import com.bakdata.conquery.models.types.parser.Decision;\n@@ -12,25 +11,22 @@ import com.bakdata.conquery.util.DateFormats;\n \n public class DateParser extends Parser<Integer> {\n \n-\tprivate VarIntParser subType = new VarIntParser(); \n-\t\n-\t@Override\n-\tprotected Integer parseValue(@Nonnull String value) throws ParsingException {\n-\t\treturn CDate.ofLocalDate(DateFormats.parseToLocalDate(value));\n-\t}\n-\t\n-\t@Override\n-\tpublic Integer addLine(Integer v) {\n-\t\tsuper.addLine(v);\n-\t\treturn subType.addLine(v);\n-\t}\n+ private VarIntParser subType = new VarIntParser();\n+\n+ @Override\n+ protected Integer parseValue(@Nonnull String value) throws ParsingException {\n+  return CDate.ofLocalDate(DateFormats.parseToLocalDate(value));\n+ }\n+\n+ @Override\n+ public Integer addLine(Integer v) {\n+  super.addLine(v);\n+  return subType.addLine(v);\n+ }\n \n-\t@Override\n-\tprotected Decision<Integer, ?, DateTypeVarInt> decideType() {\n-\t\tDecision<Integer, Number, VarIntType> subDecision = subType.findBestType();\n-\t\treturn new Decision<Integer, Number, DateTypeVarInt>(\n-\t\t\tsubDecision.getTransformer(),\n-\t\t\tnew DateTypeVarInt(subDecision.getType())\n-\t\t);\n-\t}\n-}\n+ @Override\n+ protected Decision<Integer, ?, DateTypeVarInt> decideType() {\n+  Decision<Integer, Number, VarIntType> subDecision = subType.findBestType();\n+  return new Decision<Integer, Number, DateTypeVarInt>(subDecision.getTransformer(), new DateTypeVarInt(subDecision.getType()));\n+ }\n+}\n\\ No newline at end of file\n",
            "diff_size": 22
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/292/DateParser.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler_random/292/DateParser.java\nindex 29fbe7d4753..9cd7fc329d3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/292/DateParser.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler_random/292/DateParser.java\n@@ -12,8 +12,8 @@ import com.bakdata.conquery.util.DateFormats;\n \n public class DateParser extends Parser<Integer> {\n \n-\tprivate VarIntParser subType = new VarIntParser(); \n-\t\n+\tprivate VarIntParser subType = new VarIntParser();\n+\n \t@Override\n \tprotected Integer parseValue(@Nonnull String value) throws ParsingException {\n \t\treturn CDate.ofLocalDate(DateFormats.parseToLocalDate(value));\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/292/DateParser.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler_three_grams/292/DateParser.java\nindex 29fbe7d4753..73d671958a6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/292/DateParser.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler_three_grams/292/DateParser.java\n@@ -12,9 +12,9 @@ import com.bakdata.conquery.util.DateFormats;\n \n public class DateParser extends Parser<Integer> {\n \n-\tprivate VarIntParser subType = new VarIntParser(); \n-\t\n-\t@Override\n+\tprivate VarIntParser subType = new VarIntParser ();@\n+\n+\tOverride\n \tprotected Integer parseValue(@Nonnull String value) throws ParsingException {\n \t\treturn CDate.ofLocalDate(DateFormats.parseToLocalDate(value));\n \t}\n",
            "diff_size": 3
        }
    ],
    "repaired_by": [
        "styler",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "intellij",
        "naturalize",
        "codebuff"
    ]
}
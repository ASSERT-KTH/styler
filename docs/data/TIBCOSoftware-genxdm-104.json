{
    "project_name": "TIBCOSoftware-genxdm",
    "error_id": "104",
    "information": {
        "errors": [
            {
                "line": "44",
                "column": "1",
                "severity": "warning",
                "message": "File contains tab characters (this is the first instance).",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
            }
        ]
    },
    "source_code": "    extends Function1\n{\n\tprivate static final <N> int count(final NodeIterator<N> iter) {\n\t\tint n = 0;\n\t\twhile (iter.next() != null)\n\t\t{",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "45",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/104/CountFunction.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler/104/CountFunction.java\nindex 5e57ea383ce..96068f581de 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/104/CountFunction.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler/104/CountFunction.java\n@@ -41,7 +41,7 @@ import org.genxdm.xpath.v10.extend.ConvertibleExpr;\n public final class CountFunction \r\n     extends Function1\r\n {\r\n-\tprivate static final <N> int count(final NodeIterator<N> iter) {\r\n+private static final <N> int count(final NodeIterator<N> iter) {\r\n \t\tint n = 0;\r\n \t\twhile (iter.next() != null)\r\n \t\t{\r\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/104/CountFunction.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/intellij/104/CountFunction.java\nindex 5e57ea383ce..faf03ec387d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/104/CountFunction.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/intellij/104/CountFunction.java\n@@ -3,7 +3,7 @@\n  * license details\r\n  * Portions copyright (c) 2002, Bill Lindsey : see copying.txt for license\r\n  * details\r\n- * \r\n+ *\r\n  * Portions copyright (c) 2009-2011 TIBCO Software Inc.\r\n  *\r\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n@@ -18,6 +18,7 @@\n  * See the License for the specific language governing permissions and\r\n  * limitations under the License.\r\n  */\r\n+\r\n package org.genxdm.processor.xpath.v10.functions;\r\n \r\n import org.genxdm.Model;\r\n@@ -35,47 +36,44 @@ import org.genxdm.xpath.v10.extend.ConvertibleExpr;\n \r\n /**\r\n  * Represents the XPath Function: number count(node-set)\r\n- * \r\n+ * <p>\r\n  * The count function returns the number of nodes in the argument node-set.\r\n  */\r\n-public final class CountFunction \r\n-    extends Function1\r\n-{\r\n-\tprivate static final <N> int count(final NodeIterator<N> iter) {\r\n-\t\tint n = 0;\r\n-\t\twhile (iter.next() != null)\r\n-\t\t{\r\n-\t\t\tn++;\r\n-\t\t}\r\n-\t\treturn n;\r\n-\t}\r\n+public final class CountFunction\r\n+    extends Function1 {\r\n+    private static final <N> int count(final NodeIterator<N> iter) {\r\n+        int n = 0;\r\n+        while (iter.next() != null) {\r\n+            n++;\r\n+        }\r\n+        return n;\r\n+    }\r\n \r\n     private static final <N> int count(final Traverser iter) {\r\n         int n = 0;\r\n-        while (iter.moveToNext())\r\n-        {\r\n+        while (iter.moveToNext()) {\r\n             n++;\r\n         }\r\n         return n;\r\n     }\r\n \r\n \r\n+    ConvertibleExprImpl makeCallExpr(final ConvertibleExpr e, final ExprContextStatic statEnv)\r\n+        throws ExprParseException {\r\n+        final NodeSetExpr nse = e.makeNodeSetExpr(statEnv);\r\n \r\n-\tConvertibleExprImpl makeCallExpr(final ConvertibleExpr e, final ExprContextStatic statEnv) throws ExprParseException\r\n-\t{\r\n-\t\tfinal NodeSetExpr nse = e.makeNodeSetExpr(statEnv);\r\n-\r\n-\t\treturn new ConvertibleNumberExpr()\r\n-\t\t{\r\n+        return new ConvertibleNumberExpr() {\r\n             @Override\r\n-\t\t\tpublic <N> double numberFunction(Model<N> model, final N contextNode, final ExprContextDynamic<N> dynEnv) {\r\n-\t\t\t\treturn count(nse.nodeIterator(model, contextNode, dynEnv));\r\n-\t\t\t}\r\n+            public <N> double numberFunction(Model<N> model, final N contextNode,\r\n+                                             final ExprContextDynamic<N> dynEnv) {\r\n+                return count(nse.nodeIterator(model, contextNode, dynEnv));\r\n+            }\r\n \r\n             @Override\r\n-            public double numberFunction(TraversingInformer contextNode, TraverserDynamicContext dynEnv) {\r\n+            public double numberFunction(TraversingInformer contextNode,\r\n+                                         TraverserDynamicContext dynEnv) {\r\n                 return count(nse.traverseNodes(contextNode, dynEnv));\r\n             }\r\n-\t\t};\r\n-\t}\r\n+        };\r\n+    }\r\n }\r\n",
            "diff_size": 33
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "46",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/104/CountFunction.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/naturalize/104/CountFunction.java\nindex 5e57ea383ce..af009bb640f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/104/CountFunction.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/naturalize/104/CountFunction.java\n@@ -39,43 +39,41 @@ import org.genxdm.xpath.v10.extend.ConvertibleExpr;\n  * The count function returns the number of nodes in the argument node-set.\r\n  */\r\n public final class CountFunction \r\n-    extends Function1\r\n-{\r\n-\tprivate static final <N> int count(final NodeIterator<N> iter) {\r\n-\t\tint n = 0;\r\n+    extends Function1\n+{\n+    private static final <N> int count(final NodeIterator<N> iter) {\n+    int n = 0;\r\n \t\twhile (iter.next() != null)\r\n-\t\t{\r\n-\t\t\tn++;\r\n-\t\t}\r\n-\t\treturn n;\r\n-\t}\r\n-\r\n-    private static final <N> int count(final Traverser iter) {\r\n+\t\t{\n+    n++;\n+    }\r\n+\t\treturn n;\n+    }\n+\n+private static final <N> int count(final Traverser iter)\n+{\r\n         int n = 0;\r\n         while (iter.moveToNext())\r\n         {\r\n             n++;\r\n         }\r\n         return n;\r\n-    }\r\n-\r\n-\r\n-\r\n-\tConvertibleExprImpl makeCallExpr(final ConvertibleExpr e, final ExprContextStatic statEnv) throws ExprParseException\r\n-\t{\r\n-\t\tfinal NodeSetExpr nse = e.makeNodeSetExpr(statEnv);\r\n+    }\n+ConvertibleExprImpl makeCallExpr(final ConvertibleExpr e, final ExprContextStatic statEnv) throws ExprParseException\r\n+\t{\n+    final NodeSetExpr nse = e.makeNodeSetExpr(statEnv);\r\n \r\n \t\treturn new ConvertibleNumberExpr()\r\n-\t\t{\r\n-            @Override\r\n-\t\t\tpublic <N> double numberFunction(Model<N> model, final N contextNode, final ExprContextDynamic<N> dynEnv) {\r\n-\t\t\t\treturn count(nse.nodeIterator(model, contextNode, dynEnv));\r\n-\t\t\t}\r\n-\r\n-            @Override\r\n+\t\t{\n+    @Override\n+public <N> double numberFunction(Model<N> model, final N contextNode, final ExprContextDynamic<N> dynEnv) {\n+    return count(nse.nodeIterator(model, contextNode, dynEnv));\n+    }\n+\n+@Override\r\n             public double numberFunction(TraversingInformer contextNode, TraverserDynamicContext dynEnv) {\r\n                 return count(nse.traverseNodes(contextNode, dynEnv));\r\n-            }\r\n-\t\t};\r\n-\t}\r\n-}\r\n+            }\n+    };\n+    }\n+    }\n\\ No newline at end of file\n",
            "diff_size": 30
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/104/CountFunction.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/codebuff/104/CountFunction.java\nindex 5e57ea383ce..c2671d7ebab 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/104/CountFunction.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/codebuff/104/CountFunction.java\n@@ -18,64 +18,67 @@\n  * See the License for the specific language governing permissions and\r\n  * limitations under the License.\r\n  */\r\n-package org.genxdm.processor.xpath.v10.functions;\r\n-\r\n-import org.genxdm.Model;\r\n-import org.genxdm.nodes.Traverser;\r\n-import org.genxdm.nodes.TraversingInformer;\r\n-import org.genxdm.processor.xpath.v10.expressions.ConvertibleExprImpl;\r\n-import org.genxdm.processor.xpath.v10.expressions.ConvertibleNumberExpr;\r\n-import org.genxdm.xpath.v10.TraverserDynamicContext;\r\n-import org.genxdm.xpath.v10.ExprContextDynamic;\r\n-import org.genxdm.xpath.v10.ExprContextStatic;\r\n-import org.genxdm.xpath.v10.ExprParseException;\r\n-import org.genxdm.xpath.v10.NodeIterator;\r\n-import org.genxdm.xpath.v10.NodeSetExpr;\r\n+package org.genxdm.processor.xpath.v10.functions;\n+\n+import org.genxdm.Model;\n+import org.genxdm.nodes.Traverser;\n+import org.genxdm.nodes.TraversingInformer;\n+import org.genxdm.processor.xpath.v10.expressions.ConvertibleExprImpl;\n+import org.genxdm.processor.xpath.v10.expressions.ConvertibleNumberExpr;\n+import org.genxdm.xpath.v10.TraverserDynamicContext;\n+import org.genxdm.xpath.v10.ExprContextDynamic;\n+import org.genxdm.xpath.v10.ExprContextStatic;\n+import org.genxdm.xpath.v10.ExprParseException;\n+import org.genxdm.xpath.v10.NodeIterator;\n+import org.genxdm.xpath.v10.NodeSetExpr;\n import org.genxdm.xpath.v10.extend.ConvertibleExpr;\r\n \r\n /**\r\n  * Represents the XPath Function: number count(node-set)\r\n  * \r\n  * The count function returns the number of nodes in the argument node-set.\r\n- */\r\n-public final class CountFunction \r\n-    extends Function1\r\n-{\r\n-\tprivate static final <N> int count(final NodeIterator<N> iter) {\r\n-\t\tint n = 0;\r\n-\t\twhile (iter.next() != null)\r\n-\t\t{\r\n-\t\t\tn++;\r\n-\t\t}\r\n-\t\treturn n;\r\n-\t}\r\n-\r\n-    private static final <N> int count(final Traverser iter) {\r\n-        int n = 0;\r\n-        while (iter.moveToNext())\r\n-        {\r\n-            n++;\r\n-        }\r\n-        return n;\r\n-    }\r\n-\r\n-\r\n-\r\n-\tConvertibleExprImpl makeCallExpr(final ConvertibleExpr e, final ExprContextStatic statEnv) throws ExprParseException\r\n-\t{\r\n-\t\tfinal NodeSetExpr nse = e.makeNodeSetExpr(statEnv);\r\n-\r\n-\t\treturn new ConvertibleNumberExpr()\r\n-\t\t{\r\n-            @Override\r\n-\t\t\tpublic <N> double numberFunction(Model<N> model, final N contextNode, final ExprContextDynamic<N> dynEnv) {\r\n-\t\t\t\treturn count(nse.nodeIterator(model, contextNode, dynEnv));\r\n-\t\t\t}\r\n-\r\n-            @Override\r\n-            public double numberFunction(TraversingInformer contextNode, TraverserDynamicContext dynEnv) {\r\n-                return count(nse.traverseNodes(contextNode, dynEnv));\r\n-            }\r\n-\t\t};\r\n-\t}\r\n-}\r\n+ */\n+\n+public final class CountFunction extends Function1\n+{\n+    private static final <N> int count(final NodeIterator<N> iter)\n+    {\n+        int n = 0;\n+        while (iter.next() != null)\n+        {\n+            n++;\n+        }\n+        return n;\n+    }\n+\n+    private static final <N> int count(final Traverser iter)\n+    {\n+        int n = 0;\n+        while (iter.moveToNext())\n+        {\n+            n++;\n+        }\n+        return n;\n+    }\n+\n+    ConvertibleExprImpl makeCallExpr(final ConvertibleExpr e, final ExprContextStatic statEnv)\n+        throws ExprParseException\n+    {\n+        final NodeSetExpr nse = e.makeNodeSetExpr(statEnv);\n+        return new ConvertibleNumberExpr()\n+        {\n+\n+            @Override\n+            public <N> double numberFunction(Model<N> model, final N contextNode, final ExprContextDynamic<N> dynEnv)\n+            {\n+                return count(nse.nodeIterator(model, contextNode, dynEnv));\n+            }\n+\n+            @Override\n+            public double numberFunction(TraversingInformer contextNode, TraverserDynamicContext dynEnv)\n+            {\n+                return count(nse.traverseNodes(contextNode, dynEnv));\n+            }\n+        };\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 58
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "45",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/104/CountFunction.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler_random/104/CountFunction.java\nindex 5e57ea383ce..96068f581de 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/104/CountFunction.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler_random/104/CountFunction.java\n@@ -41,7 +41,7 @@ import org.genxdm.xpath.v10.extend.ConvertibleExpr;\n public final class CountFunction \r\n     extends Function1\r\n {\r\n-\tprivate static final <N> int count(final NodeIterator<N> iter) {\r\n+private static final <N> int count(final NodeIterator<N> iter) {\r\n \t\tint n = 0;\r\n \t\twhile (iter.next() != null)\r\n \t\t{\r\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "45",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/104/CountFunction.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler_three_grams/104/CountFunction.java\nindex 5e57ea383ce..8f1ee065c30 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/104/CountFunction.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler_three_grams/104/CountFunction.java\n@@ -41,7 +41,7 @@ import org.genxdm.xpath.v10.extend.ConvertibleExpr;\n public final class CountFunction \r\n     extends Function1\r\n {\r\n-\tprivate static final <N> int count(final NodeIterator<N> iter) {\r\n+    private static final <N> int count(final NodeIterator<N> iter) {\r\n \t\tint n = 0;\r\n \t\twhile (iter.next() != null)\r\n \t\t{\r\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "intellij",
        "codebuff"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3747",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "39",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3747/AtomicBroadcastSerializer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3747/AtomicBroadcastSerializer.java\nindex 996582da83c..ab196dd1749 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3747/AtomicBroadcastSerializer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3747/AtomicBroadcastSerializer.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.cluster.protocol.atomicbroadcast;\n \n import java.io.ByteArrayInputStream;\n@@ -30,41 +31,41 @@ import java.io.ObjectOutputStream;\n  */\n public class AtomicBroadcastSerializer\n {\n-    private ObjectInputStreamFactory objectInputStreamFactory;\n-    private ObjectOutputStreamFactory objectOutputStreamFactory;\n+  private ObjectInputStreamFactory objectInputStreamFactory;\n+  private ObjectOutputStreamFactory objectOutputStreamFactory;\n \n-    public AtomicBroadcastSerializer()\n-    {\n-        this( new ObjectStreamFactory(), new ObjectStreamFactory() );\n-    }\n+  public AtomicBroadcastSerializer()\n+  {\n+    this(new ObjectStreamFactory(), new ObjectStreamFactory());\n+  }\n \n-    public AtomicBroadcastSerializer( ObjectInputStreamFactory objectInputStreamFactory,\n-            ObjectOutputStreamFactory objectOutputStreamFactory )\n-    {\n-        this.objectInputStreamFactory = objectInputStreamFactory;\n-        this.objectOutputStreamFactory = objectOutputStreamFactory;\n-    }\n+  public AtomicBroadcastSerializer(ObjectInputStreamFactory objectInputStreamFactory,\n+                                   ObjectOutputStreamFactory objectOutputStreamFactory)\n+  {\n+    this.objectInputStreamFactory = objectInputStreamFactory;\n+    this.objectOutputStreamFactory = objectOutputStreamFactory;\n+  }\n \n-    public Payload broadcast( Object value )\n-            throws IOException\n+  public Payload broadcast(Object value)\n+      throws IOException\n+  {\n+    ByteArrayOutputStream bout = new ByteArrayOutputStream();\n+    byte[] bytes;\n+    try (ObjectOutputStream oout = objectOutputStreamFactory.create(bout))\n     {\n-        ByteArrayOutputStream bout = new ByteArrayOutputStream();\n-        byte[] bytes;\n-        try ( ObjectOutputStream oout = objectOutputStreamFactory.create( bout ) )\n-        {\n-            oout.writeObject( value );\n-        }\n-        bytes = bout.toByteArray();\n-        return new Payload( bytes, bytes.length );\n+      oout.writeObject(value);\n     }\n+    bytes = bout.toByteArray();\n+    return new Payload(bytes, bytes.length);\n+  }\n \n-    public Object receive( Payload payload )\n-            throws IOException, ClassNotFoundException\n+  public Object receive(Payload payload)\n+      throws IOException, ClassNotFoundException\n+  {\n+    ByteArrayInputStream in = new ByteArrayInputStream(payload.getBuf(), 0, payload.getLen());\n+    try (ObjectInputStream oin = objectInputStreamFactory.create(in))\n     {\n-        ByteArrayInputStream in = new ByteArrayInputStream( payload.getBuf(), 0, payload.getLen() );\n-        try ( ObjectInputStream oin = objectInputStreamFactory.create( in ) )\n-        {\n-            return oin.readObject();\n-        }\n+      return oin.readObject();\n     }\n+  }\n }\n",
            "diff_size": 41
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3747/AtomicBroadcastSerializer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3747/AtomicBroadcastSerializer.java\nindex 996582da83c..7d188c5de58 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3747/AtomicBroadcastSerializer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3747/AtomicBroadcastSerializer.java\n@@ -45,26 +45,25 @@ public class AtomicBroadcastSerializer\n         this.objectOutputStreamFactory = objectOutputStreamFactory;\n     }\n \n-    public Payload broadcast( Object value )\n-            throws IOException\n-    {\n+    public Payload broadcast( Object value ) throws IOException\n+{\n         ByteArrayOutputStream bout = new ByteArrayOutputStream();\n         byte[] bytes;\n         try ( ObjectOutputStream oout = objectOutputStreamFactory.create( bout ) )\n         {\n             oout.writeObject( value );\n         }\n-        bytes = bout.toByteArray();\n+\n+bytes = bout.toByteArray();\n         return new Payload( bytes, bytes.length );\n     }\n \n-    public Object receive( Payload payload )\n-            throws IOException, ClassNotFoundException\n-    {\n+    public Object receive( Payload payload ) throws IOException, ClassNotFoundException\n+{\n         ByteArrayInputStream in = new ByteArrayInputStream( payload.getBuf(), 0, payload.getLen() );\n         try ( ObjectInputStream oin = objectInputStreamFactory.create( in ) )\n         {\n             return oin.readObject();\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
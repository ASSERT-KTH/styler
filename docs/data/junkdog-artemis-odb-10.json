{
    "project_name": "junkdog-artemis-odb",
    "error_id": "10",
    "information": {
        "errors": [
            {
                "line": "11",
                "severity": "error",
                "message": "Line is longer than 105 characters (found 112).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * Strategy for extending the fluid interface based on component fields.\n *\n * Extend this and put it as a dependency on the fluid grade or maven module. The fluid interface generator will\n * scan the classpath for strategies and automatically call them.\n *\n * @see com.artemis.generator.strategy.e.DefaultFieldProxyStrategy for example.",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 105 characters (found 112).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 105 characters (found 112).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/errored/1/10/FieldProxyStrategy.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/intellij/10/FieldProxyStrategy.java\nindex de4d65e6e02..6db0bc74fb7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/errored/1/10/FieldProxyStrategy.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/intellij/10/FieldProxyStrategy.java\n@@ -7,26 +7,27 @@ import java.lang.reflect.Field;\n \n /**\n  * Strategy for extending the fluid interface based on component fields.\n- *\n+ * <p>\n  * Extend this and put it as a dependency on the fluid grade or maven module. The fluid interface generator will\n  * scan the classpath for strategies and automatically call them.\n  *\n- * @see com.artemis.generator.strategy.e.DefaultFieldProxyStrategy for example.\n  * @author Daan van Yperen\n+ * @see com.artemis.generator.strategy.e.DefaultFieldProxyStrategy for example.\n  */\n public interface FieldProxyStrategy {\n \n     /**\n      * priority of this strategy compared to others.\n      * Higher priority strategies will get first chance to match fields. Use {@code 0} for default.\n+     *\n      * @return desired priority.\n      */\n     int priority();\n \n     /**\n      * @param component Artemis component.\n-     * @param field Field to be proxied.\n-     * @param model Type model to extend.\n+     * @param field     Field to be proxied.\n+     * @param model     Type model to extend.\n      * @return {@code true} if this strategy wants to handle the proxy.\n      */\n     boolean matches(ComponentDescriptor component, Field field, TypeModel model);\n@@ -35,8 +36,8 @@ public interface FieldProxyStrategy {\n      * Apply changes to model. Will be called only once per field.\n      *\n      * @param component Artemis component.\n-     * @param field Field to be proxied.\n-     * @param model Type model to extend.\n+     * @param field     Field to be proxied.\n+     * @param model     Type model to extend.\n      */\n     void execute(ComponentDescriptor component, Field field, TypeModel model);\n }\n",
            "diff_size": 8
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 105 characters (found 112).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/errored/1/10/FieldProxyStrategy.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/naturalize/10/FieldProxyStrategy.java\nindex de4d65e6e02..4e532556539 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/errored/1/10/FieldProxyStrategy.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/naturalize/10/FieldProxyStrategy.java\n@@ -16,7 +16,7 @@ import java.lang.reflect.Field;\n  */\n public interface FieldProxyStrategy {\n \n-    /**\n+\t/**\n      * priority of this strategy compared to others.\n      * Higher priority strategies will get first chance to match fields. Use {@code 0} for default.\n      * @return desired priority.\n@@ -39,4 +39,4 @@ public interface FieldProxyStrategy {\n      * @param model Type model to extend.\n      */\n     void execute(ComponentDescriptor component, Field field, TypeModel model);\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "10",
                    "severity": "error",
                    "message": "Line is longer than 105 characters (found 112).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/errored/1/10/FieldProxyStrategy.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/codebuff/10/FieldProxyStrategy.java\nindex de4d65e6e02..8c615e23780 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/errored/1/10/FieldProxyStrategy.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/codebuff/10/FieldProxyStrategy.java\n@@ -2,7 +2,6 @@ package com.artemis.generator.strategy.e;\n \n import com.artemis.generator.model.artemis.ComponentDescriptor;\n import com.artemis.generator.model.type.TypeModel;\n-\n import java.lang.reflect.Field;\n \n /**\n@@ -14,6 +13,7 @@ import java.lang.reflect.Field;\n  * @see com.artemis.generator.strategy.e.DefaultFieldProxyStrategy for example.\n  * @author Daan van Yperen\n  */\n+\n public interface FieldProxyStrategy {\n \n     /**\n@@ -21,7 +21,7 @@ public interface FieldProxyStrategy {\n      * Higher priority strategies will get first chance to match fields. Use {@code 0} for default.\n      * @return desired priority.\n      */\n-    int priority();\n+ int priority();\n \n     /**\n      * @param component Artemis component.\n@@ -29,7 +29,10 @@ public interface FieldProxyStrategy {\n      * @param model Type model to extend.\n      * @return {@code true} if this strategy wants to handle the proxy.\n      */\n-    boolean matches(ComponentDescriptor component, Field field, TypeModel model);\n+\n+\n+ boolean matches(ComponentDescriptor component,\n+                 Field field, TypeModel model);\n \n     /**\n      * Apply changes to model. Will be called only once per field.\n@@ -38,5 +41,8 @@ public interface FieldProxyStrategy {\n      * @param field Field to be proxied.\n      * @param model Type model to extend.\n      */\n-    void execute(ComponentDescriptor component, Field field, TypeModel model);\n-}\n+\n+\n+ void execute(ComponentDescriptor component,\n+              Field field, TypeModel model);\n+}\n\\ No newline at end of file\n",
            "diff_size": 12
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 105 characters (found 112).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": null,
            "diff": null
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
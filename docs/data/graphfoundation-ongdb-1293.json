{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1293",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "35",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "35",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1293/ThreadPoolManager.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1293/ThreadPoolManager.java\nindex 8cb7ccd0be5..df497282d17 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1293/ThreadPoolManager.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1293/ThreadPoolManager.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.scheduler;\n \n import java.util.concurrent.ConcurrentHashMap;\n@@ -28,32 +29,32 @@ import org.neo4j.scheduler.JobScheduler.JobHandle;\n \n final class ThreadPoolManager\n {\n-    private final ConcurrentHashMap<Group,ThreadPool> pools;\n-    private final Function<Group,ThreadPool> poolBuilder;\n-\n-    ThreadPoolManager( ThreadGroup topLevelGroup )\n-    {\n-        pools = new ConcurrentHashMap<>();\n-        poolBuilder = group -> new ThreadPool( group, topLevelGroup );\n-    }\n-\n-    ThreadPool getThreadPool( Group group )\n-    {\n-        return pools.computeIfAbsent( group, poolBuilder );\n-    }\n-\n-    JobHandle submit( Group group, Runnable job )\n-    {\n-        ThreadPool threadPool = getThreadPool( group );\n-        return threadPool.submit( job );\n-    }\n-\n-    public InterruptedException shutDownAll()\n-    {\n-        pools.forEach( ( group, pool ) -> pool.cancelAllJobs() );\n-        pools.forEach( ( group, pool ) -> pool.shutDown() );\n-        return pools.values().stream()\n-                    .map( ThreadPool::getShutdownException )\n-                    .reduce( null, Exceptions::chain );\n-    }\n+  private final ConcurrentHashMap<Group, ThreadPool> pools;\n+  private final Function<Group, ThreadPool> poolBuilder;\n+\n+  ThreadPoolManager(ThreadGroup topLevelGroup)\n+  {\n+    pools = new ConcurrentHashMap<>();\n+    poolBuilder = group -> new ThreadPool(group, topLevelGroup);\n+  }\n+\n+  ThreadPool getThreadPool(Group group)\n+  {\n+    return pools.computeIfAbsent(group, poolBuilder);\n+  }\n+\n+  JobHandle submit(Group group, Runnable job)\n+  {\n+    ThreadPool threadPool = getThreadPool(group);\n+    return threadPool.submit(job);\n+  }\n+\n+  public InterruptedException shutDownAll()\n+  {\n+    pools.forEach((group, pool) -> pool.cancelAllJobs());\n+    pools.forEach((group, pool) -> pool.shutDown());\n+    return pools.values().stream()\n+        .map(ThreadPool::getShutdownException)\n+        .reduce(null, Exceptions::chain);\n+  }\n }\n",
            "diff_size": 29
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1293/ThreadPoolManager.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1293/ThreadPoolManager.java\nindex 8cb7ccd0be5..65462a0a3c5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1293/ThreadPoolManager.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1293/ThreadPoolManager.java\n@@ -52,8 +52,6 @@ final class ThreadPoolManager\n     {\n         pools.forEach( ( group, pool ) -> pool.cancelAllJobs() );\n         pools.forEach( ( group, pool ) -> pool.shutDown() );\n-        return pools.values().stream()\n-                    .map( ThreadPool::getShutdownException )\n-                    .reduce( null, Exceptions::chain );\n+        return pools.values().stream().map( ThreadPool::getShutdownException ).reduce( null, Exceptions::chain );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1293/ThreadPoolManager.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/1293/ThreadPoolManager.java\nindex 8cb7ccd0be5..955b2ba3a89 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1293/ThreadPoolManager.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/1293/ThreadPoolManager.java\n@@ -21,7 +21,6 @@ package org.neo4j.kernel.impl.scheduler;\n \n import java.util.concurrent.ConcurrentHashMap;\n import java.util.function.Function;\n-\n import org.neo4j.helpers.Exceptions;\n import org.neo4j.scheduler.JobScheduler.Group;\n import org.neo4j.scheduler.JobScheduler.JobHandle;\n@@ -52,8 +51,6 @@ final class ThreadPoolManager\n     {\n         pools.forEach( ( group, pool ) -> pool.cancelAllJobs() );\n         pools.forEach( ( group, pool ) -> pool.shutDown() );\n-        return pools.values().stream()\n-                    .map( ThreadPool::getShutdownException )\n-                    .reduce( null, Exceptions::chain );\n+        return pools.values().stream().map( ThreadPool::getShutdownException ).reduce( null, Exceptions::chain );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "st-js-st-js",
    "error_id": "22",
    "information": {
        "errors": [
            {
                "line": "40",
                "column": "41",
                "severity": "error",
                "message": "'{' is not preceded with whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
            }
        ]
    },
    "source_code": "\n\t@Test\n\tpublic void testBridgeAsInnerClass(){\n\t\tassertCodeDoesNotContain(Bridge6.class, \"constructor.ActualBridge = function()\");\n\t}\n}",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/errored/1/22/BridgeGeneratorTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/styler/22/BridgeGeneratorTest.java\nindex b4ec3df1bce..cff336db3d1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/errored/1/22/BridgeGeneratorTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/styler/22/BridgeGeneratorTest.java\n@@ -37,7 +37,7 @@ public class BridgeGeneratorTest extends AbstractStjsTest {\n \t}\r\n \r\n \t@Test\r\n-\tpublic void testBridgeAsInnerClass(){\r\n+\tpublic void testBridgeAsInnerClass() {\r\n \t\tassertCodeDoesNotContain(Bridge6.class, \"constructor.ActualBridge = function()\");\r\n \t}\r\n }\r\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "9",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "10",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "12",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "14",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "15",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "16",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "17",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "19",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "20",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "21",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "23",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "24",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "26",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "27",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "28",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "30",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "31",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "33",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "34",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "35",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "36",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "37",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "39",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "40",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "41",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "42",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/errored/1/22/BridgeGeneratorTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/intellij/22/BridgeGeneratorTest.java\nindex b4ec3df1bce..daaa096d5cb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/errored/1/22/BridgeGeneratorTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/intellij/22/BridgeGeneratorTest.java\n@@ -6,38 +6,38 @@ import org.stjs.generator.JavascriptFileGenerationException;\n import org.stjs.generator.writer.bridge.pack.Bridge4;\r\n \r\n public class BridgeGeneratorTest extends AbstractStjsTest {\r\n-\t@Test\r\n-\tpublic void testBridgeWithNamespace() {\r\n-\t\tassertCodeContains(Bridge1.class, \"b=new test.BridgeClass()\");\r\n-\t}\r\n+    @Test\r\n+    public void testBridgeWithNamespace() {\r\n+        assertCodeContains(Bridge1.class, \"b=new test.BridgeClass()\");\r\n+    }\r\n \r\n-\t@Test\r\n-\tpublic void testBridgeSyntheticWithNamespace() {\r\n-\t\tassertCodeContains(Bridge2.class, \"b={}\");\r\n-\t}\r\n+    @Test\r\n+    public void testBridgeSyntheticWithNamespace() {\r\n+        assertCodeContains(Bridge2.class, \"b={}\");\r\n+    }\r\n \r\n-\t@Test(\r\n-\t\t\texpected = IndexOutOfBoundsException.class)\r\n-\tpublic void testBridge() {\r\n-\t\t// the class is a bridge so no code is actually generated\r\n-\t\tgenerate(Bridge3.class);\r\n-\t}\r\n+    @Test(\r\n+        expected = IndexOutOfBoundsException.class)\r\n+    public void testBridge() {\r\n+        // the class is a bridge so no code is actually generated\r\n+        generate(Bridge3.class);\r\n+    }\r\n \r\n-\t@Test(\r\n-\t\t\texpected = IndexOutOfBoundsException.class)\r\n-\tpublic void testBridgePackageAnnotation() {\r\n-\t\t// the class is a bridge so no code is actually generated\r\n-\t\tgenerate(Bridge4.class);\r\n-\t}\r\n+    @Test(\r\n+        expected = IndexOutOfBoundsException.class)\r\n+    public void testBridgePackageAnnotation() {\r\n+        // the class is a bridge so no code is actually generated\r\n+        generate(Bridge4.class);\r\n+    }\r\n \r\n-\t@Test(\r\n-\t\t\texpected = JavascriptFileGenerationException.class)\r\n-\tpublic void testTemplateOutsideBridge() {\r\n-\t\tgenerate(Bridge5.class);\r\n-\t}\r\n+    @Test(\r\n+        expected = JavascriptFileGenerationException.class)\r\n+    public void testTemplateOutsideBridge() {\r\n+        generate(Bridge5.class);\r\n+    }\r\n \r\n-\t@Test\r\n-\tpublic void testBridgeAsInnerClass(){\r\n-\t\tassertCodeDoesNotContain(Bridge6.class, \"constructor.ActualBridge = function()\");\r\n-\t}\r\n+    @Test\r\n+    public void testBridgeAsInnerClass() {\r\n+        assertCodeDoesNotContain(Bridge6.class, \"constructor.ActualBridge = function()\");\r\n+    }\r\n }\r\n",
            "diff_size": 29
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/errored/1/22/BridgeGeneratorTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/naturalize/22/BridgeGeneratorTest.java\nindex b4ec3df1bce..b2d0750460a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/errored/1/22/BridgeGeneratorTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/naturalize/22/BridgeGeneratorTest.java\n@@ -37,7 +37,7 @@ public class BridgeGeneratorTest extends AbstractStjsTest {\n \t}\r\n \r\n \t@Test\r\n-\tpublic void testBridgeAsInnerClass(){\r\n+\tpublic void testBridgeAsInnerClass() {\r\n \t\tassertCodeDoesNotContain(Bridge6.class, \"constructor.ActualBridge = function()\");\r\n \t}\r\n-}\r\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "12",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "13",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "14",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "16",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "17",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "18",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "19",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "21",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "22",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "23",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "25",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "26",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "28",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "29",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "30",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "32",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "33",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "35",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "36",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "37",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "38",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "39",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "41",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "42",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "43",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "44",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/errored/1/22/BridgeGeneratorTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/codebuff/22/BridgeGeneratorTest.java\nindex b4ec3df1bce..8b3b590e05d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/errored/1/22/BridgeGeneratorTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/codebuff/22/BridgeGeneratorTest.java\n@@ -1,43 +1,45 @@\n-package org.stjs.generator.writer.bridge;\r\n-\r\n-import org.junit.Test;\r\n-import org.stjs.generator.utils.AbstractStjsTest;\r\n-import org.stjs.generator.JavascriptFileGenerationException;\r\n-import org.stjs.generator.writer.bridge.pack.Bridge4;\r\n-\r\n-public class BridgeGeneratorTest extends AbstractStjsTest {\r\n-\t@Test\r\n-\tpublic void testBridgeWithNamespace() {\r\n-\t\tassertCodeContains(Bridge1.class, \"b=new test.BridgeClass()\");\r\n-\t}\r\n-\r\n-\t@Test\r\n-\tpublic void testBridgeSyntheticWithNamespace() {\r\n-\t\tassertCodeContains(Bridge2.class, \"b={}\");\r\n-\t}\r\n-\r\n-\t@Test(\r\n-\t\t\texpected = IndexOutOfBoundsException.class)\r\n-\tpublic void testBridge() {\r\n-\t\t// the class is a bridge so no code is actually generated\r\n-\t\tgenerate(Bridge3.class);\r\n-\t}\r\n-\r\n-\t@Test(\r\n-\t\t\texpected = IndexOutOfBoundsException.class)\r\n-\tpublic void testBridgePackageAnnotation() {\r\n-\t\t// the class is a bridge so no code is actually generated\r\n-\t\tgenerate(Bridge4.class);\r\n-\t}\r\n-\r\n-\t@Test(\r\n-\t\t\texpected = JavascriptFileGenerationException.class)\r\n-\tpublic void testTemplateOutsideBridge() {\r\n-\t\tgenerate(Bridge5.class);\r\n-\t}\r\n-\r\n-\t@Test\r\n-\tpublic void testBridgeAsInnerClass(){\r\n-\t\tassertCodeDoesNotContain(Bridge6.class, \"constructor.ActualBridge = function()\");\r\n-\t}\r\n-}\r\n+package org.stjs.generator.writer.bridge;\n+\n+import org.junit.Test;\n+import org.stjs.generator.utils.AbstractStjsTest;\n+import org.stjs.generator.JavascriptFileGenerationException;\n+import org.stjs.generator.writer.bridge.pack.Bridge4;\n+\n+\n+public class BridgeGeneratorTest extends AbstractStjsTest {\n+\n+ @Test\n+ public void testBridgeWithNamespace() {\n+  assertCodeContains(Bridge1.class, \"b=new test.BridgeClass()\");\n+ }\n+\n+ @Test\n+ public void testBridgeSyntheticWithNamespace() {\n+  assertCodeContains(Bridge2.class, \"b={}\");\n+ }\n+\n+ @Test(\n+   expected = IndexOutOfBoundsException.class)\n+ public void testBridge() {\r\n+  // the class is a bridge so no code is actually generated\n+  generate(Bridge3.class);\n+ }\n+\n+ @Test(\n+   expected = IndexOutOfBoundsException.class)\n+ public void testBridgePackageAnnotation() {\r\n+  // the class is a bridge so no code is actually generated\n+  generate(Bridge4.class);\n+ }\n+\n+ @Test(\n+   expected = JavascriptFileGenerationException.class)\n+ public void testTemplateOutsideBridge() {\n+  generate(Bridge5.class);\n+ }\n+\n+ @Test\n+ public void testBridgeAsInnerClass() {\n+  assertCodeDoesNotContain(Bridge6.class, \"constructor.ActualBridge = function()\");\n+ }\n+}\n\\ No newline at end of file\n",
            "diff_size": 45
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/errored/1/22/BridgeGeneratorTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/styler_random/22/BridgeGeneratorTest.java\nindex b4ec3df1bce..cff336db3d1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/errored/1/22/BridgeGeneratorTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/styler_random/22/BridgeGeneratorTest.java\n@@ -37,7 +37,7 @@ public class BridgeGeneratorTest extends AbstractStjsTest {\n \t}\r\n \r\n \t@Test\r\n-\tpublic void testBridgeAsInnerClass(){\r\n+\tpublic void testBridgeAsInnerClass() {\r\n \t\tassertCodeDoesNotContain(Bridge6.class, \"constructor.ActualBridge = function()\");\r\n \t}\r\n }\r\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/errored/1/22/BridgeGeneratorTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/styler_three_grams/22/BridgeGeneratorTest.java\nindex b4ec3df1bce..cff336db3d1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/errored/1/22/BridgeGeneratorTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/styler_three_grams/22/BridgeGeneratorTest.java\n@@ -37,7 +37,7 @@ public class BridgeGeneratorTest extends AbstractStjsTest {\n \t}\r\n \r\n \t@Test\r\n-\tpublic void testBridgeAsInnerClass(){\r\n+\tpublic void testBridgeAsInnerClass() {\r\n \t\tassertCodeDoesNotContain(Bridge6.class, \"constructor.ActualBridge = function()\");\r\n \t}\r\n }\r\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "intellij",
        "codebuff"
    ]
}
{
    "project_name": "intuit-Tank",
    "error_id": "122",
    "information": {
        "errors": [
            {
                "line": "195",
                "column": "41",
                "severity": "warning",
                "message": "'(' is followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
            }
        ]
    },
    "source_code": "\n            JButton doneButton = new JButton(\"Done\");\n            doneButton.addActionListener( (ActionEvent e) -> {\n                System.out.println(\"RuleEditorDialog.getOpsPanel().new ActionListener() {...}.actionPerformed()\");\n                cancelFlag = false;\n                processDoneAndClose();",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/122/RuleEditorDialog.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/styler/122/RuleEditorDialog.java\nindex 6d5d1aa5e96..a00e6042871 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/122/RuleEditorDialog.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/styler/122/RuleEditorDialog.java\n@@ -192,7 +192,7 @@ public class RuleEditorDialog extends JDialog {\n             opsPanel = new JPanel();\n \n             JButton doneButton = new JButton(\"Done\");\n-            doneButton.addActionListener( (ActionEvent e) -> {\n+            doneButton.addActionListener((ActionEvent e) -> {\n                 System.out.println(\"RuleEditorDialog.getOpsPanel().new ActionListener() {...}.actionPerformed()\");\n                 cancelFlag = false;\n                 processDoneAndClose();\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/122/RuleEditorDialog.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/intellij/122/RuleEditorDialog.java\nindex 6d5d1aa5e96..273b5a4d48a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/122/RuleEditorDialog.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/intellij/122/RuleEditorDialog.java\n@@ -34,251 +34,251 @@ import com.intuit.tank.proxy.config.TransactionPart;\n \n public class RuleEditorDialog extends JDialog {\n \n-    private ConfigInclusionExclusionRule rule;\n-\n-    private Component ruleLabel;\n-    private JLabel matchTypeLabel;\n-    private JLabel headerLabel;\n-    private JLabel transactionLabel;\n-    private JTextField ruleField;\n-    private JComboBox matchTypeField;\n-    private JComboBox headerField;\n-    private JComboBox transactionField;\n-    private JPanel opsPanel;\n-    private JPanel fillPanel;\n-\n-    private boolean cancelFlag = false;\n-\n-    /**\n-     * @return the cancelFlag\n-     */\n-    public boolean isCancelFlag() {\n-        return cancelFlag;\n+  private ConfigInclusionExclusionRule rule;\n+\n+  private Component ruleLabel;\n+  private JLabel matchTypeLabel;\n+  private JLabel headerLabel;\n+  private JLabel transactionLabel;\n+  private JTextField ruleField;\n+  private JComboBox matchTypeField;\n+  private JComboBox headerField;\n+  private JComboBox transactionField;\n+  private JPanel opsPanel;\n+  private JPanel fillPanel;\n+\n+  private boolean cancelFlag = false;\n+\n+  /**\n+   * @return the cancelFlag\n+   */\n+  public boolean isCancelFlag() {\n+    return cancelFlag;\n+  }\n+\n+  public RuleEditorDialog(JDialog parent) {\n+    this(parent, new ConfigInclusionExclusionRule(TransactionPart.both, \"\", MatchType.equals, \"rule\"));\n+  }\n+\n+  public RuleEditorDialog(JDialog parent, ConfigInclusionExclusionRule rule) {\n+    super(parent, \"Rule Editor\", true);\n+    this.rule = rule;\n+    initialize();\n+  }\n+\n+  private void initialize() {\n+    this.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);\n+    this.setPreferredSize(new Dimension(400, 300));\n+    this.getContentPane().setLayout(new GridBagLayout());\n+    this.setPreferredSize(new Dimension(400, 300));\n+    this.setMinimumSize(new Dimension(400, 300));\n+\n+    GridBagConstraints gbc = new GridBagConstraints();\n+    gbc.gridx = 0;\n+    gbc.gridy = 1;\n+    gbc.weightx = 0.0;\n+    gbc.weighty = 0.0;\n+    gbc.insets = new Insets(5, 5, 5, 5);\n+    gbc.fill = GridBagConstraints.NONE;\n+    gbc.anchor = GridBagConstraints.WEST;\n+\n+    this.getContentPane().add(getTransactionLabel(), gbc);\n+\n+    gbc.gridx = 1;\n+    gbc.gridy = 1;\n+    gbc.weightx = 0.0;\n+    gbc.weighty = 0.0;\n+    gbc.insets = new Insets(5, 5, 5, 5);\n+    gbc.fill = GridBagConstraints.NONE;\n+    gbc.anchor = GridBagConstraints.WEST;\n+\n+    this.getContentPane().add(getTransactionField(), gbc);\n+    gbc.gridx = 0;\n+    gbc.gridy = 2;\n+    gbc.weightx = 0.0;\n+    gbc.weighty = 0.0;\n+    gbc.insets = new Insets(5, 5, 5, 5);\n+    gbc.fill = GridBagConstraints.NONE;\n+    gbc.anchor = GridBagConstraints.WEST;\n+    this.getContentPane().add(getHeaderLabel(), gbc);\n+    gbc.gridx = 1;\n+    gbc.gridy = 2;\n+    gbc.weightx = 0.0;\n+    gbc.weighty = 0.0;\n+    gbc.insets = new Insets(5, 5, 5, 5);\n+    gbc.fill = GridBagConstraints.NONE;\n+    gbc.anchor = GridBagConstraints.WEST;\n+    this.getContentPane().add(getHeaderField(), gbc);\n+    gbc.gridx = 0;\n+    gbc.gridy = 3;\n+    gbc.weightx = 0.0;\n+    gbc.weighty = 0.0;\n+    gbc.insets = new Insets(5, 5, 5, 5);\n+    gbc.fill = GridBagConstraints.NONE;\n+    gbc.anchor = GridBagConstraints.WEST;\n+    this.getContentPane().add(getMatchTypeLabel(), gbc);\n+    gbc.gridx = 1;\n+    gbc.gridy = 3;\n+    gbc.weightx = 0.0;\n+    gbc.weighty = 0.0;\n+    gbc.insets = new Insets(5, 5, 5, 5);\n+    gbc.fill = GridBagConstraints.NONE;\n+    gbc.anchor = GridBagConstraints.WEST;\n+    this.getContentPane().add(getMatchTypeField(), gbc);\n+    gbc.gridx = 0;\n+    gbc.gridy = 4;\n+    gbc.weightx = 0.0;\n+    gbc.weighty = 0.0;\n+    gbc.insets = new Insets(5, 5, 5, 5);\n+    gbc.fill = GridBagConstraints.NONE;\n+    gbc.anchor = GridBagConstraints.WEST;\n+    this.getContentPane().add(getRuleLabel(), gbc);\n+    gbc.gridx = 1;\n+    gbc.gridy = 4;\n+    gbc.weightx = 0.0;\n+    gbc.weighty = 0.0;\n+    gbc.insets = new Insets(5, 5, 5, 5);\n+    gbc.fill = GridBagConstraints.NONE;\n+    gbc.anchor = GridBagConstraints.WEST;\n+    this.getContentPane().add(getRuleField(), gbc);\n+    gbc.gridx = 0;\n+    gbc.gridy = 5;\n+    gbc.gridwidth = 2;\n+    gbc.weightx = 0.0;\n+    gbc.weighty = 0.0;\n+    gbc.insets = new Insets(5, 5, 5, 5);\n+    gbc.fill = GridBagConstraints.NONE;\n+    gbc.anchor = GridBagConstraints.WEST;\n+    this.getContentPane().add(getOpsPanel(), gbc);\n+    gbc.gridx = 0;\n+    gbc.gridy = 6;\n+    gbc.weightx = 1.0;\n+    gbc.weighty = 1.0;\n+    gbc.insets = new Insets(5, 5, 5, 5);\n+    gbc.fill = GridBagConstraints.BOTH;\n+    gbc.anchor = GridBagConstraints.WEST;\n+    this.getContentPane().add(getFillPanel(), gbc);\n+\n+  }\n+\n+  private JPanel getFillPanel() {\n+    if (fillPanel == null) {\n+      fillPanel = new JPanel();\n     }\n-\n-    public RuleEditorDialog(JDialog parent) {\n-        this(parent, new ConfigInclusionExclusionRule(TransactionPart.both, \"\", MatchType.equals, \"rule\"));\n-    }\n-\n-    public RuleEditorDialog(JDialog parent, ConfigInclusionExclusionRule rule) {\n-        super(parent, \"Rule Editor\", true);\n-        this.rule = rule;\n-        initialize();\n-    }\n-\n-    private void initialize() {\n-        this.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);\n-        this.setPreferredSize(new Dimension(400, 300));\n-        this.getContentPane().setLayout(new GridBagLayout());\n-        this.setPreferredSize(new Dimension(400, 300));\n-        this.setMinimumSize(new Dimension(400, 300));\n-\n-        GridBagConstraints gbc = new GridBagConstraints();\n-        gbc.gridx = 0;\n-        gbc.gridy = 1;\n-        gbc.weightx = 0.0;\n-        gbc.weighty = 0.0;\n-        gbc.insets = new Insets(5, 5, 5, 5);\n-        gbc.fill = GridBagConstraints.NONE;\n-        gbc.anchor = GridBagConstraints.WEST;\n-\n-        this.getContentPane().add(getTransactionLabel(), gbc);\n-\n-        gbc.gridx = 1;\n-        gbc.gridy = 1;\n-        gbc.weightx = 0.0;\n-        gbc.weighty = 0.0;\n-        gbc.insets = new Insets(5, 5, 5, 5);\n-        gbc.fill = GridBagConstraints.NONE;\n-        gbc.anchor = GridBagConstraints.WEST;\n-\n-        this.getContentPane().add(getTransactionField(), gbc);\n-        gbc.gridx = 0;\n-        gbc.gridy = 2;\n-        gbc.weightx = 0.0;\n-        gbc.weighty = 0.0;\n-        gbc.insets = new Insets(5, 5, 5, 5);\n-        gbc.fill = GridBagConstraints.NONE;\n-        gbc.anchor = GridBagConstraints.WEST;\n-        this.getContentPane().add(getHeaderLabel(), gbc);\n-        gbc.gridx = 1;\n-        gbc.gridy = 2;\n-        gbc.weightx = 0.0;\n-        gbc.weighty = 0.0;\n-        gbc.insets = new Insets(5, 5, 5, 5);\n-        gbc.fill = GridBagConstraints.NONE;\n-        gbc.anchor = GridBagConstraints.WEST;\n-        this.getContentPane().add(getHeaderField(), gbc);\n-        gbc.gridx = 0;\n-        gbc.gridy = 3;\n-        gbc.weightx = 0.0;\n-        gbc.weighty = 0.0;\n-        gbc.insets = new Insets(5, 5, 5, 5);\n-        gbc.fill = GridBagConstraints.NONE;\n-        gbc.anchor = GridBagConstraints.WEST;\n-        this.getContentPane().add(getMatchTypeLabel(), gbc);\n-        gbc.gridx = 1;\n-        gbc.gridy = 3;\n-        gbc.weightx = 0.0;\n-        gbc.weighty = 0.0;\n-        gbc.insets = new Insets(5, 5, 5, 5);\n-        gbc.fill = GridBagConstraints.NONE;\n-        gbc.anchor = GridBagConstraints.WEST;\n-        this.getContentPane().add(getMatchTypeField(), gbc);\n-        gbc.gridx = 0;\n-        gbc.gridy = 4;\n-        gbc.weightx = 0.0;\n-        gbc.weighty = 0.0;\n-        gbc.insets = new Insets(5, 5, 5, 5);\n-        gbc.fill = GridBagConstraints.NONE;\n-        gbc.anchor = GridBagConstraints.WEST;\n-        this.getContentPane().add(getRuleLabel(), gbc);\n-        gbc.gridx = 1;\n-        gbc.gridy = 4;\n-        gbc.weightx = 0.0;\n-        gbc.weighty = 0.0;\n-        gbc.insets = new Insets(5, 5, 5, 5);\n-        gbc.fill = GridBagConstraints.NONE;\n-        gbc.anchor = GridBagConstraints.WEST;\n-        this.getContentPane().add(getRuleField(), gbc);\n-        gbc.gridx = 0;\n-        gbc.gridy = 5;\n-        gbc.gridwidth = 2;\n-        gbc.weightx = 0.0;\n-        gbc.weighty = 0.0;\n-        gbc.insets = new Insets(5, 5, 5, 5);\n-        gbc.fill = GridBagConstraints.NONE;\n-        gbc.anchor = GridBagConstraints.WEST;\n-        this.getContentPane().add(getOpsPanel(), gbc);\n-        gbc.gridx = 0;\n-        gbc.gridy = 6;\n-        gbc.weightx = 1.0;\n-        gbc.weighty = 1.0;\n-        gbc.insets = new Insets(5, 5, 5, 5);\n-        gbc.fill = GridBagConstraints.BOTH;\n-        gbc.anchor = GridBagConstraints.WEST;\n-        this.getContentPane().add(getFillPanel(), gbc);\n-\n-    }\n-\n-    private JPanel getFillPanel() {\n-        if (fillPanel == null) {\n-            fillPanel = new JPanel();\n-        }\n-        return fillPanel;\n-    }\n-\n-    private void setRule(ConfigInclusionExclusionRule rule) {\n-        this.rule = rule;\n-    }\n-\n-    public ConfigInclusionExclusionRule getRule() {\n-        return rule;\n-    }\n-\n-    private void processDoneAndClose() {\n-        TransactionPart part = (TransactionPart) getTransactionField().getSelectedItem();\n-        String header = getHeaderField().getSelectedItem().toString();\n-        MatchType match = (MatchType) getMatchTypeField().getSelectedItem();\n-        String value = getRuleField().getText();\n-        ConfigInclusionExclusionRule rule = new ConfigInclusionExclusionRule(part, header, match, value);\n-        setRule(rule);\n-        setVisible(false);\n-    }\n-\n-    private JPanel getOpsPanel() {\n+    return fillPanel;\n+  }\n+\n+  private void setRule(ConfigInclusionExclusionRule rule) {\n+    this.rule = rule;\n+  }\n+\n+  public ConfigInclusionExclusionRule getRule() {\n+    return rule;\n+  }\n+\n+  private void processDoneAndClose() {\n+    TransactionPart part = (TransactionPart) getTransactionField().getSelectedItem();\n+    String header = getHeaderField().getSelectedItem().toString();\n+    MatchType match = (MatchType) getMatchTypeField().getSelectedItem();\n+    String value = getRuleField().getText();\n+    ConfigInclusionExclusionRule rule = new ConfigInclusionExclusionRule(part, header, match, value);\n+    setRule(rule);\n+    setVisible(false);\n+  }\n+\n+  private JPanel getOpsPanel() {\n+    // TODO Auto-generated method stub\n+    if (opsPanel == null) {\n+      opsPanel = new JPanel();\n+\n+      JButton doneButton = new JButton(\"Done\");\n+      doneButton.addActionListener((ActionEvent e) -> {\n+        System.out.println(\"RuleEditorDialog.getOpsPanel().new ActionListener() {...}.actionPerformed()\");\n+        cancelFlag = false;\n+        processDoneAndClose();\n+      });\n+      JButton cancelButton = new JButton(\"Cancel\");\n+      cancelButton.addActionListener((ActionEvent e) -> {\n         // TODO Auto-generated method stub\n-        if (opsPanel == null) {\n-            opsPanel = new JPanel();\n-\n-            JButton doneButton = new JButton(\"Done\");\n-            doneButton.addActionListener( (ActionEvent e) -> {\n-                System.out.println(\"RuleEditorDialog.getOpsPanel().new ActionListener() {...}.actionPerformed()\");\n-                cancelFlag = false;\n-                processDoneAndClose();\n-            });\n-            JButton cancelButton = new JButton(\"Cancel\");\n-            cancelButton.addActionListener((ActionEvent e) -> {\n-                // TODO Auto-generated method stub\n-                System.out.println(\"RuleEditorDialog.getOpsPanel().new ActionListener() {...}.actionPerformed()\");\n-                cancelFlag = true;\n-                setVisible(false);\n-            });\n-            opsPanel.add(doneButton);\n-            opsPanel.add(cancelButton);\n-        }\n-        return opsPanel;\n-    }\n-\n-    private JTextField getRuleField() {\n-        if (ruleField == null) {\n-            ruleField = new JTextField();\n-            ruleField.setPreferredSize(new Dimension(200, 30));\n-            ruleField.setText(rule.getValue());\n-        }\n-        return ruleField;\n+        System.out.println(\"RuleEditorDialog.getOpsPanel().new ActionListener() {...}.actionPerformed()\");\n+        cancelFlag = true;\n+        setVisible(false);\n+      });\n+      opsPanel.add(doneButton);\n+      opsPanel.add(cancelButton);\n     }\n-\n-    private Component getRuleLabel() {\n-        if (ruleLabel == null) {\n-            ruleLabel = new JLabel(\"Rule :\");\n-        }\n-        return ruleLabel;\n+    return opsPanel;\n+  }\n+\n+  private JTextField getRuleField() {\n+    if (ruleField == null) {\n+      ruleField = new JTextField();\n+      ruleField.setPreferredSize(new Dimension(200, 30));\n+      ruleField.setText(rule.getValue());\n     }\n+    return ruleField;\n+  }\n \n-    private JComboBox getMatchTypeField() {\n-        if (matchTypeField == null) {\n-            matchTypeField = new JComboBox(MatchType.values());\n-            matchTypeField.setPreferredSize(new Dimension(200, 30));\n-            matchTypeField.setSelectedItem(rule.getMatch());\n-        }\n-        return matchTypeField;\n+  private Component getRuleLabel() {\n+    if (ruleLabel == null) {\n+      ruleLabel = new JLabel(\"Rule :\");\n     }\n-\n-    private JLabel getMatchTypeLabel() {\n-        if (matchTypeLabel == null) {\n-            matchTypeLabel = new JLabel(\"Match :\");\n-        }\n-        return matchTypeLabel;\n+    return ruleLabel;\n+  }\n+\n+  private JComboBox getMatchTypeField() {\n+    if (matchTypeField == null) {\n+      matchTypeField = new JComboBox(MatchType.values());\n+      matchTypeField.setPreferredSize(new Dimension(200, 30));\n+      matchTypeField.setSelectedItem(rule.getMatch());\n     }\n+    return matchTypeField;\n+  }\n \n-    private JComboBox getHeaderField() {\n-        if (headerField == null) {\n-            headerField = new JComboBox(CommonHeaders.values());\n-            headerField.setEditable(true);\n-            headerField.setPreferredSize(new Dimension(200, 30));\n-            headerField.setSelectedItem(rule.getHeader());\n-        }\n-        return headerField;\n+  private JLabel getMatchTypeLabel() {\n+    if (matchTypeLabel == null) {\n+      matchTypeLabel = new JLabel(\"Match :\");\n     }\n-\n-    private JLabel getHeaderLabel() {\n-        if (headerLabel == null) {\n-            headerLabel = new JLabel(\"Header :\");\n-        }\n-        return headerLabel;\n+    return matchTypeLabel;\n+  }\n+\n+  private JComboBox getHeaderField() {\n+    if (headerField == null) {\n+      headerField = new JComboBox(CommonHeaders.values());\n+      headerField.setEditable(true);\n+      headerField.setPreferredSize(new Dimension(200, 30));\n+      headerField.setSelectedItem(rule.getHeader());\n     }\n+    return headerField;\n+  }\n \n-    private JComboBox getTransactionField() {\n-        if (transactionField == null) {\n-            transactionField = new JComboBox(TransactionPart.values());\n-            transactionField.setPreferredSize(new Dimension(200, 30));\n-            transactionField.setSelectedItem(rule.getTransactionPart());\n-        }\n-        return transactionField;\n+  private JLabel getHeaderLabel() {\n+    if (headerLabel == null) {\n+      headerLabel = new JLabel(\"Header :\");\n     }\n-\n-    private JLabel getTransactionLabel() {\n-        if (transactionLabel == null) {\n-            transactionLabel = new JLabel(\"Transaction :\");\n-        }\n-        return transactionLabel;\n+    return headerLabel;\n+  }\n+\n+  private JComboBox getTransactionField() {\n+    if (transactionField == null) {\n+      transactionField = new JComboBox(TransactionPart.values());\n+      transactionField.setPreferredSize(new Dimension(200, 30));\n+      transactionField.setSelectedItem(rule.getTransactionPart());\n     }\n+    return transactionField;\n+  }\n \n-    public static void main(String[] args) {\n-        RuleEditorDialog pcd = new RuleEditorDialog(null);\n-        pcd.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);\n-        pcd.setVisible(true);\n+  private JLabel getTransactionLabel() {\n+    if (transactionLabel == null) {\n+      transactionLabel = new JLabel(\"Transaction :\");\n     }\n+    return transactionLabel;\n+  }\n+\n+  public static void main(String[] args) {\n+    RuleEditorDialog pcd = new RuleEditorDialog(null);\n+    pcd.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);\n+    pcd.setVisible(true);\n+  }\n \n }\n",
            "diff_size": 366
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/122/RuleEditorDialog.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/naturalize/122/RuleEditorDialog.java\nindex 6d5d1aa5e96..862cf93b596 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/122/RuleEditorDialog.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/naturalize/122/RuleEditorDialog.java\n@@ -192,7 +192,7 @@ public class RuleEditorDialog extends JDialog {\n             opsPanel = new JPanel();\n \n             JButton doneButton = new JButton(\"Done\");\n-            doneButton.addActionListener( (ActionEvent e) -> {\n+            doneButton.addActionListener((ActionEvent e) -> {\n                 System.out.println(\"RuleEditorDialog.getOpsPanel().new ActionListener() {...}.actionPerformed()\");\n                 cancelFlag = false;\n                 processDoneAndClose();\n@@ -281,4 +281,4 @@ public class RuleEditorDialog extends JDialog {\n         pcd.setVisible(true);\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "193",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 143).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "200",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 145).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/122/RuleEditorDialog.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/codebuff/122/RuleEditorDialog.java\nindex 6d5d1aa5e96..0ac7e515cd1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/122/RuleEditorDialog.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/codebuff/122/RuleEditorDialog.java\n@@ -13,29 +13,29 @@ package com.intuit.tank.proxy.settings.ui;\n  * #L%\n  */\n \n+\n+\n import java.awt.Component;\n import java.awt.Dimension;\n import java.awt.GridBagConstraints;\n import java.awt.GridBagLayout;\n import java.awt.Insets;\n import java.awt.event.ActionEvent;\n-\n import javax.swing.JButton;\n import javax.swing.JComboBox;\n import javax.swing.JDialog;\n import javax.swing.JLabel;\n import javax.swing.JPanel;\n import javax.swing.JTextField;\n-\n import com.intuit.tank.proxy.config.CommonHeaders;\n import com.intuit.tank.proxy.config.ConfigInclusionExclusionRule;\n import com.intuit.tank.proxy.config.MatchType;\n import com.intuit.tank.proxy.config.TransactionPart;\n \n+\n public class RuleEditorDialog extends JDialog {\n \n     private ConfigInclusionExclusionRule rule;\n-\n     private Component ruleLabel;\n     private JLabel matchTypeLabel;\n     private JLabel headerLabel;\n@@ -46,12 +46,13 @@ public class RuleEditorDialog extends JDialog {\n     private JComboBox transactionField;\n     private JPanel opsPanel;\n     private JPanel fillPanel;\n-\n     private boolean cancelFlag = false;\n \n     /**\n      * @return the cancelFlag\n      */\n+\n+\n     public boolean isCancelFlag() {\n         return cancelFlag;\n     }\n@@ -60,6 +61,7 @@ public class RuleEditorDialog extends JDialog {\n         this(parent, new ConfigInclusionExclusionRule(TransactionPart.both, \"\", MatchType.equals, \"rule\"));\n     }\n \n+\n     public RuleEditorDialog(JDialog parent, ConfigInclusionExclusionRule rule) {\n         super(parent, \"Rule Editor\", true);\n         this.rule = rule;\n@@ -72,7 +74,6 @@ public class RuleEditorDialog extends JDialog {\n         this.getContentPane().setLayout(new GridBagLayout());\n         this.setPreferredSize(new Dimension(400, 300));\n         this.setMinimumSize(new Dimension(400, 300));\n-\n         GridBagConstraints gbc = new GridBagConstraints();\n         gbc.gridx = 0;\n         gbc.gridy = 1;\n@@ -81,9 +82,7 @@ public class RuleEditorDialog extends JDialog {\n         gbc.insets = new Insets(5, 5, 5, 5);\n         gbc.fill = GridBagConstraints.NONE;\n         gbc.anchor = GridBagConstraints.WEST;\n-\n         this.getContentPane().add(getTransactionLabel(), gbc);\n-\n         gbc.gridx = 1;\n         gbc.gridy = 1;\n         gbc.weightx = 0.0;\n@@ -91,7 +90,6 @@ public class RuleEditorDialog extends JDialog {\n         gbc.insets = new Insets(5, 5, 5, 5);\n         gbc.fill = GridBagConstraints.NONE;\n         gbc.anchor = GridBagConstraints.WEST;\n-\n         this.getContentPane().add(getTransactionField(), gbc);\n         gbc.gridx = 0;\n         gbc.gridy = 2;\n@@ -158,7 +156,6 @@ public class RuleEditorDialog extends JDialog {\n         gbc.fill = GridBagConstraints.BOTH;\n         gbc.anchor = GridBagConstraints.WEST;\n         this.getContentPane().add(getFillPanel(), gbc);\n-\n     }\n \n     private JPanel getFillPanel() {\n@@ -172,6 +169,7 @@ public class RuleEditorDialog extends JDialog {\n         this.rule = rule;\n     }\n \n+\n     public ConfigInclusionExclusionRule getRule() {\n         return rule;\n     }\n@@ -190,20 +188,19 @@ public class RuleEditorDialog extends JDialog {\n         // TODO Auto-generated method stub\n         if (opsPanel == null) {\n             opsPanel = new JPanel();\n-\n             JButton doneButton = new JButton(\"Done\");\n-            doneButton.addActionListener( (ActionEvent e) -> {\n-                System.out.println(\"RuleEditorDialog.getOpsPanel().new ActionListener() {...}.actionPerformed()\");\n-                cancelFlag = false;\n-                processDoneAndClose();\n-            });\n+            doneButton.addActionListener((ActionEvent e)-> {\n+                                             System.out.println(\"RuleEditorDialog.getOpsPanel().new ActionListener() {...}.actionPerformed()\");\n+                                             cancelFlag = false;\n+                                             processDoneAndClose();\n+                                         });\n             JButton cancelButton = new JButton(\"Cancel\");\n-            cancelButton.addActionListener((ActionEvent e) -> {\n+            cancelButton.addActionListener((ActionEvent e)-> {\n                 // TODO Auto-generated method stub\n-                System.out.println(\"RuleEditorDialog.getOpsPanel().new ActionListener() {...}.actionPerformed()\");\n-                cancelFlag = true;\n-                setVisible(false);\n-            });\n+                                               System.out.println(\"RuleEditorDialog.getOpsPanel().new ActionListener() {...}.actionPerformed()\");\n+                                               cancelFlag = true;\n+                                               setVisible(false);\n+                                           });\n             opsPanel.add(doneButton);\n             opsPanel.add(cancelButton);\n         }\n@@ -275,10 +272,11 @@ public class RuleEditorDialog extends JDialog {\n         return transactionLabel;\n     }\n \n+\n     public static void main(String[] args) {\n         RuleEditorDialog pcd = new RuleEditorDialog(null);\n         pcd.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);\n         pcd.setVisible(true);\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 29
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/122/RuleEditorDialog.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/styler_random/122/RuleEditorDialog.java\nindex 6d5d1aa5e96..a00e6042871 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/122/RuleEditorDialog.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/styler_random/122/RuleEditorDialog.java\n@@ -192,7 +192,7 @@ public class RuleEditorDialog extends JDialog {\n             opsPanel = new JPanel();\n \n             JButton doneButton = new JButton(\"Done\");\n-            doneButton.addActionListener( (ActionEvent e) -> {\n+            doneButton.addActionListener((ActionEvent e) -> {\n                 System.out.println(\"RuleEditorDialog.getOpsPanel().new ActionListener() {...}.actionPerformed()\");\n                 cancelFlag = false;\n                 processDoneAndClose();\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/122/RuleEditorDialog.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/styler_three_grams/122/RuleEditorDialog.java\nindex 6d5d1aa5e96..a00e6042871 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/122/RuleEditorDialog.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/styler_three_grams/122/RuleEditorDialog.java\n@@ -192,7 +192,7 @@ public class RuleEditorDialog extends JDialog {\n             opsPanel = new JPanel();\n \n             JButton doneButton = new JButton(\"Done\");\n-            doneButton.addActionListener( (ActionEvent e) -> {\n+            doneButton.addActionListener((ActionEvent e) -> {\n                 System.out.println(\"RuleEditorDialog.getOpsPanel().new ActionListener() {...}.actionPerformed()\");\n                 cancelFlag = false;\n                 processDoneAndClose();\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "codebuff"
    ]
}
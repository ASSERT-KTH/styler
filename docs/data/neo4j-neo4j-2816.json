{
    "project_name": "neo4j-neo4j",
    "error_id": "2816",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "31",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "32",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "38",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "52",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "119",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "104",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2816/MethodReference.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2816/MethodReference.java\nindex 57b9ad6620b..44fc9a6b684 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2816/MethodReference.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2816/MethodReference.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.codegen;\n \n import java.lang.reflect.Method;\n@@ -27,72 +28,70 @@ import static org.neo4j.codegen.TypeReference.typeReferences;\n \n public class MethodReference\n {\n-    public static MethodReference methodReference( Class<?> owner, Class<?> returns, String name,\n-            Class<?>... parameters )\n+    public static MethodReference methodReference(Class<?> owner, Class<?> returns, String name,\n+                                                  Class<?>... parameters)\n     {\n         try\n         {\n-            int modifiers = owner.getMethod( name, parameters ).getModifiers();\n-            return methodReference( typeReference( owner ), typeReference( returns ), name, modifiers, typeReferences( parameters ) );\n-        }\n-        catch ( NoSuchMethodException e )\n+            int modifiers = owner.getMethod(name, parameters).getModifiers();\n+            return methodReference(typeReference(owner), typeReference(returns), name, modifiers, typeReferences(parameters));\n+        } catch (NoSuchMethodException e)\n         {\n-            throw new IllegalArgumentException( \"No method with name \" + name, e );\n+            throw new IllegalArgumentException(\"No method with name \" + name, e);\n         }\n \n     }\n \n-    public static MethodReference methodReference( Class<?> owner, TypeReference returns, String name,\n-            Class<?>... parameters )\n+    public static MethodReference methodReference(Class<?> owner, TypeReference returns, String name,\n+                                                  Class<?>... parameters)\n     {\n         try\n         {\n-            int modifiers = owner.getMethod( name, parameters ).getModifiers();\n-            return methodReference( owner, returns, name, modifiers, typeReferences( parameters ) );\n-        }\n-        catch ( NoSuchMethodException e )\n+            int modifiers = owner.getMethod(name, parameters).getModifiers();\n+            return methodReference(owner, returns, name, modifiers, typeReferences(parameters));\n+        } catch (NoSuchMethodException e)\n         {\n-            throw new IllegalArgumentException( \"No method with name \" + name, e );\n+            throw new IllegalArgumentException(\"No method with name \" + name, e);\n         }\n \n     }\n \n-    private static MethodReference methodReference( Class<?> owner, TypeReference returns, String name, int modifiers,\n-            TypeReference... parameters )\n+    private static MethodReference methodReference(Class<?> owner, TypeReference returns, String name, int modifiers,\n+                                                   TypeReference... parameters)\n     {\n-        return methodReference( typeReference( owner ), returns, name, modifiers, parameters );\n+        return methodReference(typeReference(owner), returns, name, modifiers, parameters);\n     }\n \n-    public static MethodReference methodReference( TypeReference owner, TypeReference returns, String name,\n-            TypeReference... parameters )\n+    public static MethodReference methodReference(TypeReference owner, TypeReference returns, String name,\n+                                                  TypeReference... parameters)\n     {\n-        return new MethodReference( owner, name, returns, Modifier.PUBLIC, parameters );\n+        return new MethodReference(owner, name, returns, Modifier.PUBLIC, parameters);\n     }\n \n-    public static MethodReference methodReference( TypeReference owner, TypeReference returns, String name,\n-            int modifiers, TypeReference... parameters )\n+    public static MethodReference methodReference(TypeReference owner, TypeReference returns, String name,\n+                                                  int modifiers, TypeReference... parameters)\n     {\n-        return new MethodReference( owner, name, returns, modifiers, parameters );\n+        return new MethodReference(owner, name, returns, modifiers, parameters);\n     }\n \n-    public static MethodReference methodReference( Method method )\n+    public static MethodReference methodReference(Method method)\n     {\n-        return methodReference( method.getDeclaringClass(), method.getReturnType(), method.getName(), method.getParameterTypes() );\n+        return methodReference(method.getDeclaringClass(), method.getReturnType(), method.getName(), method.getParameterTypes());\n     }\n \n-    public static MethodReference constructorReference( Class<?> owner, Class<?> firstParameter, Class<?>... parameters )\n+    public static MethodReference constructorReference(Class<?> owner, Class<?> firstParameter, Class<?>... parameters)\n     {\n-        return constructorReference( typeReference( owner ), typeReferences( firstParameter, parameters ) );\n+        return constructorReference(typeReference(owner), typeReferences(firstParameter, parameters));\n     }\n \n-    public static MethodReference constructorReference( Class<?> owner, TypeReference... parameters )\n+    public static MethodReference constructorReference(Class<?> owner, TypeReference... parameters)\n     {\n-        return constructorReference( typeReference( owner ), parameters );\n+        return constructorReference(typeReference(owner), parameters);\n     }\n \n-    public static MethodReference constructorReference( TypeReference owner, TypeReference... parameters )\n+    public static MethodReference constructorReference(TypeReference owner, TypeReference... parameters)\n     {\n-        return new MethodReference( owner, \"<init>\", TypeReference.VOID,  Modifier.PUBLIC, parameters );\n+        return new MethodReference(owner, \"<init>\", TypeReference.VOID, Modifier.PUBLIC, parameters);\n     }\n \n     private final TypeReference owner;\n@@ -101,8 +100,8 @@ public class MethodReference\n     private final TypeReference[] parameters;\n     private final int modifiers;\n \n-    MethodReference( TypeReference owner, String name, TypeReference returns, int modifiers,\n-            TypeReference[] parameters )\n+    MethodReference(TypeReference owner, String name, TypeReference returns, int modifiers,\n+                    TypeReference[] parameters)\n     {\n         this.owner = owner;\n \n@@ -134,7 +133,7 @@ public class MethodReference\n \n     public boolean isConstructor()\n     {\n-        return \"<init>\".equals( name );\n+        return \"<init>\".equals(name);\n     }\n \n     public int modifiers()\n@@ -145,14 +144,14 @@ public class MethodReference\n     @Override\n     public String toString()\n     {\n-        StringBuilder result = new StringBuilder().append( \"MethodReference[\" );\n-        writeTo( result );\n-        return result.append( ']' ).toString();\n+        StringBuilder result = new StringBuilder().append(\"MethodReference[\");\n+        writeTo(result);\n+        return result.append(']').toString();\n     }\n \n-    void writeTo( StringBuilder result )\n+    void writeTo(StringBuilder result)\n     {\n-        owner.writeTo( result );\n-        result.append( '#' ).append( name ).append( \"(...)\" );\n+        owner.writeTo(result);\n+        result.append('#').append(name).append(\"(...)\");\n     }\n }\n",
            "diff_size": 41
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2816/MethodReference.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/2816/MethodReference.java\nindex 57b9ad6620b..f92c1fd8f8d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2816/MethodReference.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/2816/MethodReference.java\n@@ -155,4 +155,4 @@ public class MethodReference\n         owner.writeTo( result );\n         result.append( '#' ).append( name ).append( \"(...)\" );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
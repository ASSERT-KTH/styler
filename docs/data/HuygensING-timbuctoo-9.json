{
    "project_name": "HuygensING-timbuctoo",
    "error_id": "9",
    "information": {
        "errors": [
            {
                "line": "190",
                "column": "57",
                "severity": "error",
                "message": "'{' at column 57 should be on the previous line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
            }
        ]
    },
    "source_code": "                                                        .stream()\n                                                        .filter(dataSet ->\n                                                        {\n                                                          try {\n                                                            return\n                                                              vreAuthorizationCrud",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/errored/1/9/DataSetFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/styler/9/DataSetFactory.java\nindex 1f4e2c68ed6..e5fb32e4a67 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/errored/1/9/DataSetFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/styler/9/DataSetFactory.java\n@@ -186,8 +186,7 @@ public class DataSetFactory implements DataFetcherFactoryFactory, SchemaStoreFac\n       Set<DataSetWithRoles> dataSetWithRoles = new HashSet<>();\n       Set<PromotedDataSet> mappedUserSets = userDataSets.getValue()\n                                                         .stream()\n-                                                        .filter(dataSet ->\n-                                                        {\n+                                                        .filter(dataSet -> {\n                                                           try {\n                                                             return\n                                                               vreAuthorizationCrud\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "190",
                    "column": "9",
                    "severity": "error",
                    "message": "'{' at column 9 should be on the previous line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/errored/1/9/DataSetFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/intellij/9/DataSetFactory.java\nindex 1f4e2c68ed6..e58ca9d85f9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/errored/1/9/DataSetFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/intellij/9/DataSetFactory.java\n@@ -169,9 +169,9 @@ public class DataSetFactory implements DataFetcherFactoryFactory, SchemaStoreFac\n \n     for (Map.Entry<String, Set<PromotedDataSet>> userDataSets : dataSets.entrySet()) {\n       Set<PromotedDataSet> mappedUserSets = userDataSets.getValue()\n-                                                        .stream()\n-                                                        .filter(dataSet -> dataSet.isPromoted())\n-                                                        .collect(Collectors.toSet());\n+        .stream()\n+        .filter(dataSet -> dataSet.isPromoted())\n+        .collect(Collectors.toSet());\n       promotedDataSets.put(userDataSets.getKey(), mappedUserSets);\n     }\n     return promotedDataSets;\n@@ -185,21 +185,21 @@ public class DataSetFactory implements DataFetcherFactoryFactory, SchemaStoreFac\n     for (Map.Entry<String, Set<PromotedDataSet>> userDataSets : dataSets.entrySet()) {\n       Set<DataSetWithRoles> dataSetWithRoles = new HashSet<>();\n       Set<PromotedDataSet> mappedUserSets = userDataSets.getValue()\n-                                                        .stream()\n-                                                        .filter(dataSet ->\n-                                                        {\n-                                                          try {\n-                                                            return\n-                                                              vreAuthorizationCrud\n-                                                                .getAuthorization(\n-                                                                  userDataSets.getKey() + \"_\" + dataSet.getName(),\n-                                                                  userId)\n-                                                                .isPresent();\n-                                                          } catch (AuthorizationUnavailableException e) {\n-                                                            return false;\n-                                                          }\n-                                                        })\n-                                                        .collect(Collectors.toSet());\n+        .stream()\n+        .filter(dataSet ->\n+        {\n+          try {\n+            return\n+              vreAuthorizationCrud\n+                .getAuthorization(\n+                  userDataSets.getKey() + \"_\" + dataSet.getName(),\n+                  userId)\n+                .isPresent();\n+          } catch (AuthorizationUnavailableException e) {\n+            return false;\n+          }\n+        })\n+        .collect(Collectors.toSet());\n \n \n       userDataSets.getValue().forEach((dataSet) -> {\n@@ -249,7 +249,7 @@ public class DataSetFactory implements DataFetcherFactoryFactory, SchemaStoreFac\n     storedDataSets.updateData(dataSets -> {\n       Set<PromotedDataSet>\n         dataSetsToKeep = dataSets.get(ownerId).stream().filter(dataSet -> !dataSet.getName().equals(dataSetName))\n-                                 .collect(Collectors.toSet());\n+        .collect(Collectors.toSet());\n       dataSets.put(ownerId, dataSetsToKeep);\n       return dataSets;\n     });\n",
            "diff_size": 19
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "174",
                    "severity": "error",
                    "message": "'for' child has incorrect indentation level 0, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "198",
                    "severity": "error",
                    "message": "'for' child has incorrect indentation level 0, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "199",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 8, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "200",
                    "severity": "error",
                    "message": "'try' has incorrect indentation level 8, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "201",
                    "severity": "error",
                    "message": "'try' child has incorrect indentation level 10, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "205",
                    "severity": "error",
                    "message": "'try rcurly' has incorrect indentation level 8, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "206",
                    "severity": "error",
                    "message": "'catch' child has incorrect indentation level 10, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "207",
                    "severity": "error",
                    "message": "'catch rcurly' has incorrect indentation level 8, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "208",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 8, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "212",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 8, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "213",
                    "severity": "error",
                    "message": "'block rcurly' has incorrect indentation level 6, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "242",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 132).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "244",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 0, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/errored/1/9/DataSetFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/naturalize/9/DataSetFactory.java\nindex 1f4e2c68ed6..6b164ca177e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/errored/1/9/DataSetFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/naturalize/9/DataSetFactory.java\n@@ -168,11 +168,10 @@ public class DataSetFactory implements DataFetcherFactoryFactory, SchemaStoreFac\n     Map<String, Set<PromotedDataSet>> promotedDataSets = new HashMap<>();\n \n     for (Map.Entry<String, Set<PromotedDataSet>> userDataSets : dataSets.entrySet()) {\n-      Set<PromotedDataSet> mappedUserSets = userDataSets.getValue()\n-                                                        .stream()\n+      Set<PromotedDataSet> mappedUserSets = userDataSets.getValue().stream()\n                                                         .filter(dataSet -> dataSet.isPromoted())\n                                                         .collect(Collectors.toSet());\n-      promotedDataSets.put(userDataSets.getKey(), mappedUserSets);\n+promotedDataSets.put(userDataSets.getKey(), mappedUserSets);\n     }\n     return promotedDataSets;\n   }\n@@ -184,14 +183,10 @@ public class DataSetFactory implements DataFetcherFactoryFactory, SchemaStoreFac\n \n     for (Map.Entry<String, Set<PromotedDataSet>> userDataSets : dataSets.entrySet()) {\n       Set<DataSetWithRoles> dataSetWithRoles = new HashSet<>();\n-      Set<PromotedDataSet> mappedUserSets = userDataSets.getValue()\n-                                                        .stream()\n-                                                        .filter(dataSet ->\n-                                                        {\n+      Set<PromotedDataSet> mappedUserSets = userDataSets.getValue().stream()\n+                                                        .filter(dataSet -> {\n                                                           try {\n-                                                            return\n-                                                              vreAuthorizationCrud\n-                                                                .getAuthorization(\n+                                                            return vreAuthorizationCrud.getAuthorization(\n                                                                   userDataSets.getKey() + \"_\" + dataSet.getName(),\n                                                                   userId)\n                                                                 .isPresent();\n@@ -200,9 +195,7 @@ public class DataSetFactory implements DataFetcherFactoryFactory, SchemaStoreFac\n                                                           }\n                                                         })\n                                                         .collect(Collectors.toSet());\n-\n-\n-      userDataSets.getValue().forEach((dataSet) -> {\n+userDataSets.getValue().forEach((dataSet) -> {\n         List<String> roles;\n         try {\n           roles = vreAuthorizationCrud\n@@ -215,8 +208,7 @@ public class DataSetFactory implements DataFetcherFactoryFactory, SchemaStoreFac\n         DataSetWithRoles dataSetWithWriteAccess = new DataSetWithRoles(\n           dataSet.getName(),\n           dataSet.isPromoted(),\n-          roles, null\n-        );\n+          roles, null);\n         dataSetWithRoles.add(dataSetWithWriteAccess);\n       });\n \n@@ -247,10 +239,9 @@ public class DataSetFactory implements DataFetcherFactoryFactory, SchemaStoreFac\n     dataStoreFactory.removeDataStoresFor(ownerId, dataSetName);\n     // remove from datasets.json\n     storedDataSets.updateData(dataSets -> {\n-      Set<PromotedDataSet>\n-        dataSetsToKeep = dataSets.get(ownerId).stream().filter(dataSet -> !dataSet.getName().equals(dataSetName))\n+      Set<PromotedDataSet> dataSetsToKeep = dataSets.get(ownerId).stream().filter(dataSet -> !dataSet.getName().equals(dataSetName))\n                                  .collect(Collectors.toSet());\n-      dataSets.put(ownerId, dataSetsToKeep);\n+dataSets.put(ownerId, dataSetsToKeep);\n       return dataSets;\n     });\n     dataSetMap.get(ownerId).remove(dataSetName);\n@@ -280,4 +271,4 @@ public class DataSetFactory implements DataFetcherFactoryFactory, SchemaStoreFac\n       return new DataStoreDataFetcherFactory(quadStore, collectionIndex);\n     }\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 19
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "53",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 191).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "60",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 196).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "65",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "108",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 128).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "111",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 361).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "117",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 136).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "118",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 130).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "120",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 126).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "156",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 185).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "166",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 124).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "171",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 125).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "189",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 30, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "190",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 30, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "191",
                    "severity": "error",
                    "message": "'block rcurly' has incorrect indentation level 28, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "200",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 123).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/errored/1/9/DataSetFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/codebuff/9/DataSetFactory.java\nindex 1f4e2c68ed6..1108b10c9e0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/errored/1/9/DataSetFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/codebuff/9/DataSetFactory.java\n@@ -19,7 +19,6 @@ import nl.knaw.huygens.timbuctoo.v5.filestorage.implementations.filesystem.DataS\n import nl.knaw.huygens.timbuctoo.v5.graphql.datafetchers.DataFetcherFactory;\n import nl.knaw.huygens.timbuctoo.v5.rml.RdfDataSourceFactory;\n import org.apache.commons.io.FileUtils;\n-\n import java.io.File;\n import java.io.IOException;\n import java.util.Collections;\n@@ -40,8 +39,8 @@ import java.util.stream.Collectors;\n  * - makes CreateDataSet a singleton\n  * - keeps track of all created dataSets across restarts (stores them in a file)\n  */\n-public class DataSetFactory implements DataFetcherFactoryFactory, SchemaStoreFactory, TypeNameStoreFactory {\n \n+public class DataSetFactory implements DataFetcherFactoryFactory, SchemaStoreFactory, TypeNameStoreFactory {\n   private final ExecutorService executorService;\n   private final VreAuthorizationCrud vreAuthorizationCrud;\n   private final DataSetConfiguration configuration;\n@@ -51,29 +50,19 @@ public class DataSetFactory implements DataFetcherFactoryFactory, SchemaStoreFac\n   private final HashMap<UUID, StringBuffer> statusMap;\n   private final DataSetPathHelper dataSetPathHelper;\n \n-\n-  public DataSetFactory(ExecutorService executorService, VreAuthorizationCrud vreAuthorizationCrud,\n-                        DataSetConfiguration configuration,\n-                        DataStoreFactory dataStoreFactory) throws IOException {\n+  public DataSetFactory(ExecutorService executorService, VreAuthorizationCrud vreAuthorizationCrud, DataSetConfiguration configuration, DataStoreFactory dataStoreFactory) throws IOException {\n     this.executorService = executorService;\n     this.vreAuthorizationCrud = vreAuthorizationCrud;\n     this.configuration = configuration;\n     this.dataStoreFactory = dataStoreFactory;\n-\n     dataSetMap = new HashMap<>();\n     dataSetPathHelper = new DataSetPathHelper(configuration.getDataSetMetadataLocation());\n-    storedDataSets = JsonFileBackedData.getOrCreate(\n-      new File(configuration.getDataSetMetadataLocation(), \"dataSets.json\"),\n-      HashMap::new,\n-      new TypeReference<Map<String, Set<PromotedDataSet>>>() {\n-      }\n-    );\n+    storedDataSets = JsonFileBackedData.getOrCreate(new File(configuration.getDataSetMetadataLocation(), \"dataSets.json\"), HashMap::new, new TypeReference<Map<String, Set<PromotedDataSet>>>() {});\n     statusMap = new HashMap<>();\n   }\n \n   @Override\n-  public DataFetcherFactory createDataFetcherFactory(String userId, String dataSetId)\n-    throws DataStoreCreationException {\n+  public DataFetcherFactory createDataFetcherFactory(String userId, String dataSetId) throws DataStoreCreationException {\n     return make(userId, dataSetId).createDataFetcherFactory();\n   }\n \n@@ -89,7 +78,6 @@ public class DataSetFactory implements DataFetcherFactoryFactory, SchemaStoreFac\n \n   public ImportManager createImportManager(String userId, String dataSetId) throws DataStoreCreationException {\n     return make(userId, dataSetId).importManager;\n-\n   }\n \n   public RdfDataSourceFactory createDataSource(String userId, String dataSetId) throws DataStoreCreationException {\n@@ -100,11 +88,9 @@ public class DataSetFactory implements DataFetcherFactoryFactory, SchemaStoreFac\n     String authorizationKey = userId + \"_\" + dataSetId;\n     synchronized (dataSetMap) {\n       Map<String, DataSet> userDataSets = dataSetMap.computeIfAbsent(userId, key -> new HashMap<>());\n-\n       if (!userDataSets.containsKey(dataSetId)) {\n         DataSet dataSet = createNewDataSet(userId, dataSetId, authorizationKey);\n         userDataSets.put(dataSetId, dataSet);\n-\n         try {\n           PromotedDataSet promotedDataSet = PromotedDataSet.create(dataSetId, false);\n           storedDataSets.updateData(dataSets -> {\n@@ -119,36 +105,19 @@ public class DataSetFactory implements DataFetcherFactoryFactory, SchemaStoreFac\n     }\n   }\n \n-  private DataSet createNewDataSet(String userId, String dataSetId, String authorizationKey)\n-    throws DataStoreCreationException {\n+  private DataSet createNewDataSet(String userId, String dataSetId, String authorizationKey) throws DataStoreCreationException {\n     try {\n       vreAuthorizationCrud.createAuthorization(authorizationKey, userId, \"ADMIN\");\n-      ImportManager importManager = new ImportManager(\n-        dataSetPathHelper.fileInDataSet(userId, dataSetId, \"log.json\"),\n-        configuration.getFileStorage().makeFileStorage(userId, dataSetId),\n-        configuration.getFileStorage().makeFileStorage(userId, dataSetId),\n-        configuration.getFileStorage().makeLogStorage(userId, dataSetId),\n-        executorService,\n-        configuration.getRdfIo()\n-      );\n-\n+      ImportManager importManager = new ImportManager(dataSetPathHelper.fileInDataSet(userId, dataSetId, \"log.json\"), configuration.getFileStorage().makeFileStorage(userId, dataSetId), configuration.getFileStorage().makeFileStorage(userId, dataSetId), configuration.getFileStorage().makeLogStorage(userId, dataSetId), executorService, configuration.getRdfIo());\n       DataSet dataSet = new DataSet();\n       QuadStore quadStore = dataStoreFactory.createQuadStore(importManager, userId, dataSetId);\n       CollectionIndex collectionIndex = dataStoreFactory.createCollectionIndex(importManager, userId, dataSetId);\n       dataSet.quadStore = quadStore;\n       dataSet.collectionIndex = collectionIndex;\n-      dataSet.typeNameStore = new JsonTypeNameStore(\n-        dataSetPathHelper.fileInDataSet(userId, dataSetId, \"prefixes.json\"),\n-        importManager\n-      );\n-      dataSet.schemaStore = new JsonSchemaStore(\n-        importManager,\n-        dataSetPathHelper.fileInDataSet(userId, dataSetId, \"schema.json\")\n-      );\n+      dataSet.typeNameStore = new JsonTypeNameStore(dataSetPathHelper.fileInDataSet(userId, dataSetId, \"prefixes.json\"), importManager);\n+      dataSet.schemaStore = new JsonSchemaStore(importManager, dataSetPathHelper.fileInDataSet(userId, dataSetId, \"schema.json\"));\n       dataSet.importManager = importManager;\n-      dataSet.dataSource = new RdfDataSourceFactory(\n-        dataStoreFactory.createDataSourceStore(importManager, userId, dataSetId)\n-      );\n+      dataSet.dataSource = new RdfDataSourceFactory(dataStoreFactory.createDataSourceStore(importManager, userId, dataSetId));\n       return dataSet;\n     } catch (AuthorizationCreationException | IOException e) {\n       throw new DataStoreCreationException(e);\n@@ -166,12 +135,10 @@ public class DataSetFactory implements DataFetcherFactoryFactory, SchemaStoreFac\n   public Map<String, Set<PromotedDataSet>> getPromotedDataSets() {\n     Map<String, Set<PromotedDataSet>> dataSets = storedDataSets.getData();\n     Map<String, Set<PromotedDataSet>> promotedDataSets = new HashMap<>();\n-\n     for (Map.Entry<String, Set<PromotedDataSet>> userDataSets : dataSets.entrySet()) {\n-      Set<PromotedDataSet> mappedUserSets = userDataSets.getValue()\n-                                                        .stream()\n-                                                        .filter(dataSet -> dataSet.isPromoted())\n-                                                        .collect(Collectors.toSet());\n+      Set<PromotedDataSet> mappedUserSets = userDataSets.getValue().stream()\n+                                                                   .filter(dataSet -> dataSet.isPromoted())\n+                                                                   .collect(Collectors.toSet());\n       promotedDataSets.put(userDataSets.getKey(), mappedUserSets);\n     }\n     return promotedDataSets;\n@@ -181,45 +148,29 @@ public class DataSetFactory implements DataFetcherFactoryFactory, SchemaStoreFac\n     Map<String, Set<PromotedDataSet>> dataSets = storedDataSets.getData();\n     Map<String, Set<PromotedDataSet>> promotedDataSets = new HashMap<>();\n     Map<String, Set<DataSetWithRoles>> dataSetsWithWriteAccess = new HashMap<>();\n-\n     for (Map.Entry<String, Set<PromotedDataSet>> userDataSets : dataSets.entrySet()) {\n       Set<DataSetWithRoles> dataSetWithRoles = new HashSet<>();\n-      Set<PromotedDataSet> mappedUserSets = userDataSets.getValue()\n-                                                        .stream()\n-                                                        .filter(dataSet ->\n-                                                        {\n-                                                          try {\n-                                                            return\n-                                                              vreAuthorizationCrud\n-                                                                .getAuthorization(\n-                                                                  userDataSets.getKey() + \"_\" + dataSet.getName(),\n-                                                                  userId)\n-                                                                .isPresent();\n-                                                          } catch (AuthorizationUnavailableException e) {\n-                                                            return false;\n-                                                          }\n-                                                        })\n-                                                        .collect(Collectors.toSet());\n-\n-\n+      Set<PromotedDataSet> mappedUserSets = userDataSets.getValue().stream()\n+                                                                   .filter(dataSet -> {\n+                                                                     try {\n+                                                                       return vreAuthorizationCrud.getAuthorization(userDataSets.getKey() + \"_\" + dataSet.getName(), userId).isPresent();\n+                                                                     } catch (AuthorizationUnavailableException e) {\n+                                                                       return false;\n+                                                                     }\n+                                                                   })\n+                                                                   .collect(Collectors.toSet());\n       userDataSets.getValue().forEach((dataSet) -> {\n         List<String> roles;\n         try {\n-          roles = vreAuthorizationCrud\n-            .getAuthorization(\n-              userDataSets.getKey() + \"_\" + dataSet.getName(),\n-              userId).get().getRoles();\n+          roles = vreAuthorizationCrud.getAuthorization(userDataSets.getKey() + \"_\" + dataSet.getName(), userId).get()\n+                                                                                                                .getRoles();\n         } catch (AuthorizationUnavailableException e) {\n           roles = Collections.emptyList();\n         }\n-        DataSetWithRoles dataSetWithWriteAccess = new DataSetWithRoles(\n-          dataSet.getName(),\n-          dataSet.isPromoted(),\n-          roles, null\n-        );\n+\n+        DataSetWithRoles dataSetWithWriteAccess = new DataSetWithRoles(dataSet.getName(), dataSet.isPromoted(), roles, null);\n         dataSetWithRoles.add(dataSetWithWriteAccess);\n       });\n-\n       dataSetsWithWriteAccess.put(userDataSets.getKey(), dataSetWithRoles);\n       promotedDataSets.put(userDataSets.getKey(), mappedUserSets);\n     }\n@@ -234,12 +185,10 @@ public class DataSetFactory implements DataFetcherFactoryFactory, SchemaStoreFac\n     StringBuffer stringBuffer = new StringBuffer();\n     UUID uuid = UUID.randomUUID();\n     statusMap.put(uuid, stringBuffer);\n-\n     RdfCreator rdfCreator = rdfCreatorBuilder.apply((str) -> {\n-      stringBuffer.setLength(0);\n-      stringBuffer.append(str);\n-    });\n-\n+                              stringBuffer.setLength(0);\n+                              stringBuffer.append(str);\n+                            });\n     return Tuple.tuple(uuid, rdfCreator);\n   }\n \n@@ -247,9 +196,9 @@ public class DataSetFactory implements DataFetcherFactoryFactory, SchemaStoreFac\n     dataStoreFactory.removeDataStoresFor(ownerId, dataSetName);\n     // remove from datasets.json\n     storedDataSets.updateData(dataSets -> {\n-      Set<PromotedDataSet>\n-        dataSetsToKeep = dataSets.get(ownerId).stream().filter(dataSet -> !dataSet.getName().equals(dataSetName))\n-                                 .collect(Collectors.toSet());\n+      Set<PromotedDataSet> dataSetsToKeep = dataSets.get(ownerId).stream()\n+                                                                 .filter(dataSet -> !dataSet.getName().equals(dataSetName))\n+                                                                 .collect(Collectors.toSet());\n       dataSets.put(ownerId, dataSetsToKeep);\n       return dataSets;\n     });\n@@ -280,4 +229,4 @@ public class DataSetFactory implements DataFetcherFactoryFactory, SchemaStoreFac\n       return new DataStoreDataFetcherFactory(quadStore, collectionIndex);\n     }\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 84
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/errored/1/9/DataSetFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/styler_random/9/DataSetFactory.java\nindex 1f4e2c68ed6..e5fb32e4a67 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/errored/1/9/DataSetFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/styler_random/9/DataSetFactory.java\n@@ -186,8 +186,7 @@ public class DataSetFactory implements DataFetcherFactoryFactory, SchemaStoreFac\n       Set<DataSetWithRoles> dataSetWithRoles = new HashSet<>();\n       Set<PromotedDataSet> mappedUserSets = userDataSets.getValue()\n                                                         .stream()\n-                                                        .filter(dataSet ->\n-                                                        {\n+                                                        .filter(dataSet -> {\n                                                           try {\n                                                             return\n                                                               vreAuthorizationCrud\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "190",
                    "severity": "error",
                    "message": "'block lcurly' has incorrect indentation level 58, expected level should be 56.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "190",
                    "column": "59",
                    "severity": "error",
                    "message": "'{' at column 59 should be on the previous line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
                },
                {
                    "line": "190",
                    "column": "59",
                    "severity": "error",
                    "message": "'{' at column 59 should have line break after.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/errored/1/9/DataSetFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/styler_three_grams/9/DataSetFactory.java\nindex 1f4e2c68ed6..c26f6372e61 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/errored/1/9/DataSetFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/styler_three_grams/9/DataSetFactory.java\n@@ -187,8 +187,7 @@ public class DataSetFactory implements DataFetcherFactoryFactory, SchemaStoreFac\n       Set<PromotedDataSet> mappedUserSets = userDataSets.getValue()\n                                                         .stream()\n                                                         .filter(dataSet ->\n-                                                        {\n-                                                          try {\n+                                                          { try {\n                                                             return\n                                                               vreAuthorizationCrud\n                                                                 .getAuthorization(\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "styler_random"
    ],
    "not_repaired_by": [
        "intellij",
        "naturalize",
        "codebuff",
        "styler_three_grams"
    ]
}
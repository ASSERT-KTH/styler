{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3339",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "34",
                    "column": "67",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "34",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3339/ReadReplicaTopology.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3339/ReadReplicaTopology.java\nindex 2304227674e..43b3a13921f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3339/ReadReplicaTopology.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3339/ReadReplicaTopology.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering.discovery;\n \n import java.util.Collection;\n@@ -30,46 +31,46 @@ import static java.util.Collections.emptyMap;\n \n public class ReadReplicaTopology implements Topology<ReadReplicaInfo>\n {\n-    static final ReadReplicaTopology EMPTY = new ReadReplicaTopology( emptyMap() );\n+  static final ReadReplicaTopology EMPTY = new ReadReplicaTopology(emptyMap());\n \n-    private final Map<MemberId,ReadReplicaInfo> readReplicaMembers;\n+  private final Map<MemberId, ReadReplicaInfo> readReplicaMembers;\n \n-    public ReadReplicaTopology( Map<MemberId,ReadReplicaInfo> readReplicaMembers )\n-    {\n-        this.readReplicaMembers = readReplicaMembers;\n-    }\n+  public ReadReplicaTopology(Map<MemberId, ReadReplicaInfo> readReplicaMembers)\n+  {\n+    this.readReplicaMembers = readReplicaMembers;\n+  }\n \n-    public Collection<ReadReplicaInfo> allMemberInfo()\n-    {\n-        return readReplicaMembers.values();\n-    }\n+  public Collection<ReadReplicaInfo> allMemberInfo()\n+  {\n+    return readReplicaMembers.values();\n+  }\n \n-    @Override\n-    public Map<MemberId, ReadReplicaInfo> members()\n-    {\n-        return readReplicaMembers;\n-    }\n+  @Override\n+  public Map<MemberId, ReadReplicaInfo> members()\n+  {\n+    return readReplicaMembers;\n+  }\n \n-    @Override\n-    public String toString()\n-    {\n-        return String.format( \"{readReplicas=%s}\", readReplicaMembers );\n-    }\n+  @Override\n+  public String toString()\n+  {\n+    return String.format(\"{readReplicas=%s}\", readReplicaMembers);\n+  }\n \n-    public Optional<MemberId> randomReadReplicaMemberId()\n+  public Optional<MemberId> randomReadReplicaMemberId()\n+  {\n+    if (readReplicaMembers.isEmpty())\n     {\n-        if ( readReplicaMembers.isEmpty() )\n-        {\n-            return Optional.empty();\n-        }\n-        return readReplicaMembers.keySet().stream().skip( ThreadLocalRandom.current().nextInt( readReplicaMembers.size() ) ).findFirst();\n+      return Optional.empty();\n     }\n+    return readReplicaMembers.keySet().stream().skip(ThreadLocalRandom.current().nextInt(readReplicaMembers.size())).findFirst();\n+  }\n \n-    @Override\n-    public ReadReplicaTopology filterTopologyByDb( String dbName )\n-    {\n-        Map<MemberId, ReadReplicaInfo> filteredMembers = filterHostsByDb( members(), dbName );\n+  @Override\n+  public ReadReplicaTopology filterTopologyByDb(String dbName)\n+  {\n+    Map<MemberId, ReadReplicaInfo> filteredMembers = filterHostsByDb(members(), dbName);\n \n-        return new ReadReplicaTopology( filteredMembers );\n-    }\n+    return new ReadReplicaTopology(filteredMembers);\n+  }\n }\n",
            "diff_size": 37
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3339/ReadReplicaTopology.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3339/ReadReplicaTopology.java\nindex 2304227674e..407b8c067d8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3339/ReadReplicaTopology.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3339/ReadReplicaTopology.java\n@@ -45,7 +45,7 @@ public class ReadReplicaTopology implements Topology<ReadReplicaInfo>\n     }\n \n     @Override\n-    public Map<MemberId, ReadReplicaInfo> members()\n+    public Map<MemberId,ReadReplicaInfo> members()\n     {\n         return readReplicaMembers;\n     }\n@@ -62,14 +62,14 @@ public class ReadReplicaTopology implements Topology<ReadReplicaInfo>\n         {\n             return Optional.empty();\n         }\n-        return readReplicaMembers.keySet().stream().skip( ThreadLocalRandom.current().nextInt( readReplicaMembers.size() ) ).findFirst();\n+\n+return readReplicaMembers.keySet().stream().skip( ThreadLocalRandom.current().nextInt( readReplicaMembers.size() ) ).findFirst();\n     }\n \n     @Override\n     public ReadReplicaTopology filterTopologyByDb( String dbName )\n     {\n-        Map<MemberId, ReadReplicaInfo> filteredMembers = filterHostsByDb( members(), dbName );\n-\n-        return new ReadReplicaTopology( filteredMembers );\n+        Map<MemberId,ReadReplicaInfo> filteredMembers = filterHostsByDb( members(), dbName );\n+return new ReadReplicaTopology( filteredMembers );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
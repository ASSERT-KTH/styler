{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4069",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "57",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "107",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "112",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "59",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "172",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "172",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "210",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "211",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "256",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "256",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "274",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "274",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "276",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "276",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "284",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "284",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "286",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "286",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "289",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "289",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "292",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "292",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "292",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "297",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "307",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "307",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "309",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "309",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "312",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "312",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "315",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "330",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "330",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "332",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "332",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "374",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "385",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "385",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4069/InternalJettyServletRequest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4069/InternalJettyServletRequest.java\nindex 157386e83f4..b3b3b34ece2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4069/InternalJettyServletRequest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4069/InternalJettyServletRequest.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.server.rest.web;\n \n import org.eclipse.jetty.http.HttpFields;\n@@ -46,354 +47,352 @@ import org.neo4j.string.UTF8;\n \n public class InternalJettyServletRequest extends Request\n {\n-    private class Input extends ServletInputStream\n-    {\n-\n-        private final byte[] bytes;\n-        private int position;\n-        private ReadListener readListener;\n-\n-        Input( String data )\n-        {\n-            bytes = UTF8.encode( data );\n-        }\n-\n-        @Override\n-        public int read() throws IOException\n-        {\n-            if ( bytes.length > position )\n-            {\n-                return (int) bytes[position++];\n-            }\n-\n-            if ( readListener != null )\n-            {\n-                readListener.onAllDataRead();\n-            }\n-\n-            return -1;\n-        }\n-\n-        public int length()\n-        {\n-            return bytes.length;\n-        }\n-\n-        public long contentRead()\n-        {\n-            return (long) position;\n-        }\n-\n-        @Override\n-        public boolean isFinished()\n-        {\n-            return bytes.length == position;\n-        }\n-\n-        @Override\n-        public boolean isReady()\n-        {\n-            return true;\n-        }\n-\n-        @Override\n-        public void setReadListener( ReadListener readListener )\n-        {\n-            this.readListener = readListener;\n-            try\n-            {\n-                readListener.onDataAvailable();\n-            }\n-            catch ( IOException e )\n-            {\n-                // Ignore\n-            }\n-        }\n-    }\n-\n-    private final Map<String, Object> headers;\n-    private final Cookie[] cookies;\n-    private final Input input;\n-    private final BufferedReader inputReader;\n-    private String contentType;\n-    private final String method;\n-    private final InternalJettyServletResponse response;\n-\n-    /** Contains metadata for the request, for example remote address and port. */\n-    private final RequestData requestData;\n-\n-    public InternalJettyServletRequest( String method, String uri, String body, InternalJettyServletResponse res,\n-            RequestData requestData ) throws UnsupportedEncodingException\n-    {\n-        this( method, new HttpURI( uri ), body, new Cookie[] {}, MediaType.APPLICATION_JSON,\n-                StandardCharsets.UTF_8.name(), res, requestData );\n-    }\n-\n-    public InternalJettyServletRequest( String method, HttpURI uri, String body, Cookie[] cookies, String contentType,\n-            String encoding, InternalJettyServletResponse res, RequestData requestData ) throws UnsupportedEncodingException\n-    {\n-        super( null, null );\n-\n-        this.input = new Input( body );\n-        this.inputReader = new BufferedReader( new StringReader( body ) );\n-\n-        this.contentType = contentType;\n-        this.cookies = cookies;\n-        this.method = method;\n-        this.response = res;\n-        this.requestData = requestData;\n-\n-        this.headers = new HashMap<>();\n-\n-        setCharacterEncoding( encoding );\n-        setDispatcherType( DispatcherType.REQUEST );\n-\n-        MetaData.Request request = new MetaData.Request( new HttpFields() );\n-        request.setMethod( method );\n-        request.setURI( uri );\n-        setMetaData( request );\n-    }\n-\n-    @Override\n-    public int getContentLength()\n-    {\n-        return input.length();\n-    }\n+  private class Input extends ServletInputStream\n+  {\n \n-    @Override\n-    public String getContentType()\n-    {\n-        return contentType;\n-    }\n+    private final byte[] bytes;\n+    private int position;\n+    private ReadListener readListener;\n \n-    @Override\n-    public void setContentType( String contentType )\n+    Input(String data)\n     {\n-        this.contentType = contentType;\n+      bytes = UTF8.encode(data);\n     }\n \n     @Override\n-    public long getContentRead()\n+    public int read() throws IOException\n     {\n-        return input.contentRead();\n-    }\n+      if (bytes.length > position)\n+      {\n+        return (int) bytes[position++];\n+      }\n \n-    @Override\n-    public ServletInputStream getInputStream()\n-    {\n-        return input;\n-    }\n+      if (readListener != null)\n+      {\n+        readListener.onAllDataRead();\n+      }\n \n-    @Override\n-    public String getProtocol()\n-    {\n-        return \"HTTP/1.1\";\n+      return -1;\n     }\n \n-    @Override\n-    public BufferedReader getReader()\n+    public int length()\n     {\n-        return inputReader;\n+      return bytes.length;\n     }\n \n-    @Override\n-    public String getRemoteAddr()\n+    public long contentRead()\n     {\n-        return requestData.remoteAddress;\n+      return (long) position;\n     }\n \n     @Override\n-    public String getRemoteHost()\n+    public boolean isFinished()\n     {\n-        throw new UnsupportedOperationException( \"Remote host-name lookup might prove expensive, \" +\n-                \"this should be explicitly considered.\" );\n+      return bytes.length == position;\n     }\n \n     @Override\n-    public boolean isSecure()\n+    public boolean isReady()\n     {\n-        return requestData.isSecure;\n+      return true;\n     }\n \n     @Override\n-    public int getRemotePort()\n+    public void setReadListener(ReadListener readListener)\n     {\n-        return requestData.remotePort;\n+      this.readListener = readListener;\n+      try\n+      {\n+        readListener.onDataAvailable();\n+      } catch (IOException e)\n+      {\n+        // Ignore\n+      }\n     }\n-\n-    @Override\n-    public String getLocalName()\n+  }\n+\n+  private final Map<String, Object> headers;\n+  private final Cookie[] cookies;\n+  private final Input input;\n+  private final BufferedReader inputReader;\n+  private String contentType;\n+  private final String method;\n+  private final InternalJettyServletResponse response;\n+\n+  /**\n+   * Contains metadata for the request, for example remote address and port.\n+   */\n+  private final RequestData requestData;\n+\n+  public InternalJettyServletRequest(String method, String uri, String body, InternalJettyServletResponse res,\n+                                     RequestData requestData) throws UnsupportedEncodingException\n+  {\n+    this(method, new HttpURI(uri), body, new Cookie[] {}, MediaType.APPLICATION_JSON,\n+        StandardCharsets.UTF_8.name(), res, requestData);\n+  }\n+\n+  public InternalJettyServletRequest(String method, HttpURI uri, String body, Cookie[] cookies, String contentType,\n+                                     String encoding, InternalJettyServletResponse res, RequestData requestData) throws UnsupportedEncodingException\n+  {\n+    super(null, null);\n+\n+    this.input = new Input(body);\n+    this.inputReader = new BufferedReader(new StringReader(body));\n+\n+    this.contentType = contentType;\n+    this.cookies = cookies;\n+    this.method = method;\n+    this.response = res;\n+    this.requestData = requestData;\n+\n+    this.headers = new HashMap<>();\n+\n+    setCharacterEncoding(encoding);\n+    setDispatcherType(DispatcherType.REQUEST);\n+\n+    MetaData.Request request = new MetaData.Request(new HttpFields());\n+    request.setMethod(method);\n+    request.setURI(uri);\n+    setMetaData(request);\n+  }\n+\n+  @Override\n+  public int getContentLength()\n+  {\n+    return input.length();\n+  }\n+\n+  @Override\n+  public String getContentType()\n+  {\n+    return contentType;\n+  }\n+\n+  @Override\n+  public void setContentType(String contentType)\n+  {\n+    this.contentType = contentType;\n+  }\n+\n+  @Override\n+  public long getContentRead()\n+  {\n+    return input.contentRead();\n+  }\n+\n+  @Override\n+  public ServletInputStream getInputStream()\n+  {\n+    return input;\n+  }\n+\n+  @Override\n+  public String getProtocol()\n+  {\n+    return \"HTTP/1.1\";\n+  }\n+\n+  @Override\n+  public BufferedReader getReader()\n+  {\n+    return inputReader;\n+  }\n+\n+  @Override\n+  public String getRemoteAddr()\n+  {\n+    return requestData.remoteAddress;\n+  }\n+\n+  @Override\n+  public String getRemoteHost()\n+  {\n+    throw new UnsupportedOperationException(\"Remote host-name lookup might prove expensive, \" +\n+        \"this should be explicitly considered.\");\n+  }\n+\n+  @Override\n+  public boolean isSecure()\n+  {\n+    return requestData.isSecure;\n+  }\n+\n+  @Override\n+  public int getRemotePort()\n+  {\n+    return requestData.remotePort;\n+  }\n+\n+  @Override\n+  public String getLocalName()\n+  {\n+    return requestData.localName;\n+  }\n+\n+  @Override\n+  public String getLocalAddr()\n+  {\n+    return requestData.localAddress;\n+  }\n+\n+  @Override\n+  public int getLocalPort()\n+  {\n+    return requestData.localPort;\n+  }\n+\n+  @Override\n+  public String getAuthType()\n+  {\n+    return requestData.authType;\n+  }\n+\n+  @Override\n+  public Cookie[] getCookies()\n+  {\n+    return cookies;\n+  }\n+\n+  public void addHeader(String header, String value)\n+  {\n+    headers.put(header, value);\n+  }\n+\n+  @Override\n+  public boolean isAsyncSupported()\n+  {\n+    return false;\n+  }\n+\n+  @Override\n+  public boolean isAsyncStarted()\n+  {\n+    return false;\n+  }\n+\n+  @Override\n+  public long getDateHeader(String name)\n+  {\n+    if (headers.containsKey(name))\n     {\n-        return requestData.localName;\n+      return (Long) headers.get(name);\n     }\n+    return -1;\n+  }\n \n-    @Override\n-    public String getLocalAddr()\n+  @Override\n+  public String getHeader(String name)\n+  {\n+    if (headers.containsKey(name))\n     {\n-        return requestData.localAddress;\n+      Object value = headers.get(name);\n+      if (value instanceof String)\n+      {\n+        return (String) value;\n+      } else if (value instanceof Collection)\n+      {\n+        return ((Collection<?>) value).iterator()\n+            .next()\n+            .toString();\n+      } else\n+      {\n+        return value.toString();\n+      }\n     }\n \n-    @Override\n-    public int getLocalPort()\n-    {\n-        return requestData.localPort;\n-    }\n+    return null;\n+  }\n \n-    @Override\n-    public String getAuthType()\n+  @Override\n+  public Enumeration<String> getHeaders(String name)\n+  {\n+    if (headers.containsKey(name))\n     {\n-        return requestData.authType;\n+      Object value = headers.get(name);\n+      if (value instanceof Collection)\n+      {\n+        return Collections.enumeration((Collection<String>) value);\n+      } else\n+      {\n+        return Collections.enumeration(Collections.singleton((String) value));\n+      }\n     }\n-\n-    @Override\n-    public Cookie[] getCookies()\n+    return null;\n+  }\n+\n+  @Override\n+  public Enumeration<String> getHeaderNames()\n+  {\n+    return Collections.enumeration(headers.keySet());\n+  }\n+\n+  @Override\n+  public int getIntHeader(String name)\n+  {\n+    if (headers.containsKey(name))\n     {\n-        return cookies;\n+      return (Integer) headers.get(name);\n     }\n-\n-    public void addHeader( String header, String value )\n-    {\n-        headers.put( header, value );\n-    }\n-\n-    @Override\n-    public boolean isAsyncSupported()\n-    {\n-        return false;\n-    }\n-\n-    @Override\n-    public boolean isAsyncStarted()\n-    {\n-        return false;\n-    }\n-\n-    @Override\n-    public long getDateHeader( String name )\n-    {\n-        if ( headers.containsKey( name ) )\n-        {\n-            return (Long) headers.get( name );\n-        }\n-        return -1;\n-    }\n-\n-    @Override\n-    public String getHeader( String name )\n-    {\n-        if ( headers.containsKey( name ) )\n-        {\n-            Object value = headers.get( name );\n-            if ( value instanceof String )\n-            {\n-                return (String) value;\n-            }\n-            else if ( value instanceof Collection )\n-            {\n-                return ( (Collection<?>) value ).iterator()\n-                        .next()\n-                        .toString();\n-            }\n-            else\n-            {\n-                return value.toString();\n-            }\n-        }\n-\n-        return null;\n-    }\n-\n-    @Override\n-    public Enumeration<String> getHeaders( String name )\n-    {\n-        if ( headers.containsKey( name ) )\n-        {\n-            Object value = headers.get( name );\n-            if ( value instanceof Collection )\n-            {\n-                return Collections.enumeration( (Collection<String>) value );\n-            }\n-            else\n-            {\n-                return Collections.enumeration( Collections.singleton( (String) value ) );\n-            }\n-        }\n-        return null;\n-    }\n-\n-    @Override\n-    public Enumeration<String> getHeaderNames()\n-    {\n-        return Collections.enumeration( headers.keySet() );\n-    }\n-\n-    @Override\n-    public int getIntHeader( String name )\n-    {\n-        if ( headers.containsKey( name ) )\n-        {\n-            return (Integer) headers.get( name );\n-        }\n-        return -1;\n-    }\n-\n-    @Override\n-    public String getMethod()\n-    {\n-        return method;\n-    }\n-\n-    @Override\n-    public Response getResponse()\n-    {\n-        return response;\n-    }\n-\n-    @Override\n-    public String toString()\n+    return -1;\n+  }\n+\n+  @Override\n+  public String getMethod()\n+  {\n+    return method;\n+  }\n+\n+  @Override\n+  public Response getResponse()\n+  {\n+    return response;\n+  }\n+\n+  @Override\n+  public String toString()\n+  {\n+    return String.format(\"%s %s %s\\n%s\", getMethod(), this.getHttpURI(), getProtocol(), getHttpFields());\n+  }\n+\n+  public static class RequestData\n+  {\n+    public final String remoteAddress;\n+    public final boolean isSecure;\n+    public final int remotePort;\n+    public final String localName;\n+    public final String localAddress;\n+    public final int localPort;\n+    public final String authType;\n+\n+    public RequestData(\n+        String remoteAddress,\n+        boolean isSecure,\n+        int remotePort,\n+        String localName,\n+        String localAddress,\n+        int localPort,\n+        String authType)\n     {\n-        return String.format( \"%s %s %s\\n%s\", getMethod(), this.getHttpURI(), getProtocol(), getHttpFields() );\n+      this.remoteAddress = remoteAddress;\n+      this.isSecure = isSecure;\n+      this.remotePort = remotePort;\n+      this.localName = localName;\n+      this.localAddress = localAddress;\n+      this.localPort = localPort;\n+      this.authType = authType;\n     }\n \n-    public static class RequestData\n+    public static RequestData from(HttpServletRequest req)\n     {\n-        public final String remoteAddress;\n-        public final boolean isSecure;\n-        public final int remotePort;\n-        public final String localName;\n-        public final String localAddress;\n-        public final int localPort;\n-        public final String authType;\n-\n-        public RequestData(\n-                String remoteAddress,\n-                boolean isSecure,\n-                int remotePort,\n-                String localName,\n-                String localAddress,\n-                int localPort,\n-                String authType )\n-        {\n-            this.remoteAddress = remoteAddress;\n-            this.isSecure = isSecure;\n-            this.remotePort = remotePort;\n-            this.localName = localName;\n-            this.localAddress = localAddress;\n-            this.localPort = localPort;\n-            this.authType = authType;\n-        }\n-\n-        public static RequestData from( HttpServletRequest req )\n-        {\n-            return new RequestData(\n-                    req.getRemoteAddr(),\n-                    req.isSecure(),\n-                    req.getRemotePort(),\n-                    req.getLocalName(),\n-                    req.getLocalAddr(),\n-                    req.getLocalPort(),\n-                    req.getAuthType() == null ? \"\" : req.getAuthType()\n-                );\n-        }\n+      return new RequestData(\n+          req.getRemoteAddr(),\n+          req.isSecure(),\n+          req.getRemotePort(),\n+          req.getLocalName(),\n+          req.getLocalAddr(),\n+          req.getLocalPort(),\n+          req.getAuthType() == null ? \"\" : req.getAuthType()\n+      );\n     }\n+  }\n }\n",
            "diff_size": 520
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "63",
                    "column": "30",
                    "severity": "error",
                    "message": "'>' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "65",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck"
                },
                {
                    "line": "384",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 207).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4069/InternalJettyServletRequest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4069/InternalJettyServletRequest.java\nindex 157386e83f4..de0a6cf7fbb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4069/InternalJettyServletRequest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4069/InternalJettyServletRequest.java\n@@ -48,8 +48,7 @@ public class InternalJettyServletRequest extends Request\n {\n     private class Input extends ServletInputStream\n     {\n-\n-        private final byte[] bytes;\n+    private final byte[] bytes;\n         private int position;\n         private ReadListener readListener;\n \n@@ -61,9 +60,9 @@ public class InternalJettyServletRequest extends Request\n         @Override\n         public int read() throws IOException\n         {\n-            if ( bytes.length > position )\n+            if ( bytes.length> position )\n             {\n-                return (int) bytes[position++];\n+                return ( int) bytes[position++];\n             }\n \n             if ( readListener != null )\n@@ -111,7 +110,7 @@ public class InternalJettyServletRequest extends Request\n         }\n     }\n \n-    private final Map<String, Object> headers;\n+    private final Map<String,Object> headers;\n     private final Cookie[] cookies;\n     private final Input input;\n     private final BufferedReader inputReader;\n@@ -124,31 +123,28 @@ public class InternalJettyServletRequest extends Request\n \n     public InternalJettyServletRequest( String method, String uri, String body, InternalJettyServletResponse res,\n             RequestData requestData ) throws UnsupportedEncodingException\n-    {\n-        this( method, new HttpURI( uri ), body, new Cookie[] {}, MediaType.APPLICATION_JSON,\n+{\n+        this( method, new HttpURI( uri ), body, new Cookie[]{\n+}, MediaType.APPLICATION_JSON,\n                 StandardCharsets.UTF_8.name(), res, requestData );\n     }\n \n     public InternalJettyServletRequest( String method, HttpURI uri, String body, Cookie[] cookies, String contentType,\n             String encoding, InternalJettyServletResponse res, RequestData requestData ) throws UnsupportedEncodingException\n-    {\n+{\n         super( null, null );\n-\n-        this.input = new Input( body );\n+this.input = new Input( body );\n         this.inputReader = new BufferedReader( new StringReader( body ) );\n-\n-        this.contentType = contentType;\n+this.contentType = contentType;\n         this.cookies = cookies;\n         this.method = method;\n         this.response = res;\n         this.requestData = requestData;\n-\n-        this.headers = new HashMap<>();\n+this.headers = new HashMap<>();\n \n         setCharacterEncoding( encoding );\n         setDispatcherType( DispatcherType.REQUEST );\n-\n-        MetaData.Request request = new MetaData.Request( new HttpFields() );\n+MetaData.Request request = new MetaData.Request( new HttpFields() );\n         request.setMethod( method );\n         request.setURI( uri );\n         setMetaData( request );\n@@ -205,8 +201,7 @@ public class InternalJettyServletRequest extends Request\n     @Override\n     public String getRemoteHost()\n     {\n-        throw new UnsupportedOperationException( \"Remote host-name lookup might prove expensive, \" +\n-                \"this should be explicitly considered.\" );\n+        throw new UnsupportedOperationException( \"Remote host-name lookup might prove expensive, \" + \"this should be explicitly considered.\" );\n     }\n \n     @Override\n@@ -290,9 +285,7 @@ public class InternalJettyServletRequest extends Request\n             }\n             else if ( value instanceof Collection )\n             {\n-                return ( (Collection<?>) value ).iterator()\n-                        .next()\n-                        .toString();\n+                return ( (Collection<?>) value).iterator().next().toString();\n             }\n             else\n             {\n@@ -358,20 +351,23 @@ public class InternalJettyServletRequest extends Request\n     public static class RequestData\n     {\n         public final String remoteAddress;\n-        public final boolean isSecure;\n-        public final int remotePort;\n-        public final String localName;\n-        public final String localAddress;\n-        public final int localPort;\n-        public final String authType;\n-\n-        public RequestData(\n-                String remoteAddress,\n-                boolean isSecure,\n-                int remotePort,\n+\n+public final boolean isSecure;\n+\n+public final int remotePort;\n+\n+public final String localName;\n+\n+public final String localAddress;\n+\n+public final int localPort;\n+\n+public final String authType;\n+\n+        public RequestData( String remoteAddress,\n+                boolean isSecure, int remotePort,\n                 String localName,\n-                String localAddress,\n-                int localPort,\n+                String localAddress, int localPort,\n                 String authType )\n         {\n             this.remoteAddress = remoteAddress;\n@@ -385,15 +381,7 @@ public class InternalJettyServletRequest extends Request\n \n         public static RequestData from( HttpServletRequest req )\n         {\n-            return new RequestData(\n-                    req.getRemoteAddr(),\n-                    req.isSecure(),\n-                    req.getRemotePort(),\n-                    req.getLocalName(),\n-                    req.getLocalAddr(),\n-                    req.getLocalPort(),\n-                    req.getAuthType() == null ? \"\" : req.getAuthType()\n-                );\n-        }\n+            return new RequestData( req.getRemoteAddr(), req.isSecure(), req.getRemotePort(), req.getLocalName(), req.getLocalAddr(), req.getLocalPort(), req.getAuthType() == null ? \"\" : req.getAuthType() );\n+    }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 50
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "128",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 195).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "379",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 207).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4069/InternalJettyServletRequest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/4069/InternalJettyServletRequest.java\nindex 157386e83f4..fd04c0d0486 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4069/InternalJettyServletRequest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/4069/InternalJettyServletRequest.java\n@@ -24,7 +24,6 @@ import org.eclipse.jetty.http.HttpURI;\n import org.eclipse.jetty.http.MetaData;\n import org.eclipse.jetty.server.Request;\n import org.eclipse.jetty.server.Response;\n-\n import java.io.BufferedReader;\n import java.io.IOException;\n import java.io.StringReader;\n@@ -41,14 +40,12 @@ import javax.servlet.ServletInputStream;\n import javax.servlet.http.Cookie;\n import javax.servlet.http.HttpServletRequest;\n import javax.ws.rs.core.MediaType;\n-\n import org.neo4j.string.UTF8;\n \n public class InternalJettyServletRequest extends Request\n {\n     private class Input extends ServletInputStream\n     {\n-\n         private final byte[] bytes;\n         private int position;\n         private ReadListener readListener;\n@@ -63,7 +60,7 @@ public class InternalJettyServletRequest extends Request\n         {\n             if ( bytes.length > position )\n             {\n-                return (int) bytes[position++];\n+                return (int) bytes[ position ++];\n             }\n \n             if ( readListener != null )\n@@ -71,7 +68,7 @@ public class InternalJettyServletRequest extends Request\n                 readListener.onAllDataRead();\n             }\n \n-            return -1;\n+            return - 1;\n         }\n \n         public int length()\n@@ -111,7 +108,7 @@ public class InternalJettyServletRequest extends Request\n         }\n     }\n \n-    private final Map<String, Object> headers;\n+    private final Map<String,Object> headers;\n     private final Cookie[] cookies;\n     private final Input input;\n     private final BufferedReader inputReader;\n@@ -122,33 +119,27 @@ public class InternalJettyServletRequest extends Request\n     /** Contains metadata for the request, for example remote address and port. */\n     private final RequestData requestData;\n \n-    public InternalJettyServletRequest( String method, String uri, String body, InternalJettyServletResponse res,\n-            RequestData requestData ) throws UnsupportedEncodingException\n+    public InternalJettyServletRequest( String method, String uri, String body, InternalJettyServletResponse res, RequestData requestData )\n+    throws UnsupportedEncodingException\n     {\n-        this( method, new HttpURI( uri ), body, new Cookie[] {}, MediaType.APPLICATION_JSON,\n-                StandardCharsets.UTF_8.name(), res, requestData );\n+        this( method, new HttpURI( uri ), body, new Cookie[]{}, MediaType.APPLICATION_JSON, StandardCharsets.UTF_8.name(), res, requestData );\n     }\n \n-    public InternalJettyServletRequest( String method, HttpURI uri, String body, Cookie[] cookies, String contentType,\n-            String encoding, InternalJettyServletResponse res, RequestData requestData ) throws UnsupportedEncodingException\n+    public InternalJettyServletRequest( String method, HttpURI uri, String body, Cookie[] cookies, String contentType, String encoding, InternalJettyServletResponse res, RequestData requestData )\n+    throws UnsupportedEncodingException\n     {\n         super( null, null );\n-\n         this.input = new Input( body );\n         this.inputReader = new BufferedReader( new StringReader( body ) );\n-\n         this.contentType = contentType;\n         this.cookies = cookies;\n         this.method = method;\n         this.response = res;\n         this.requestData = requestData;\n-\n         this.headers = new HashMap<>();\n-\n         setCharacterEncoding( encoding );\n         setDispatcherType( DispatcherType.REQUEST );\n-\n-        MetaData.Request request = new MetaData.Request( new HttpFields() );\n+        MetaData.Request request = new MetaData. Request( new HttpFields() );\n         request.setMethod( method );\n         request.setURI( uri );\n         setMetaData( request );\n@@ -205,8 +196,7 @@ public class InternalJettyServletRequest extends Request\n     @Override\n     public String getRemoteHost()\n     {\n-        throw new UnsupportedOperationException( \"Remote host-name lookup might prove expensive, \" +\n-                \"this should be explicitly considered.\" );\n+        throw new UnsupportedOperationException( \"Remote host-name lookup might prove expensive, \" + \"this should be explicitly considered.\" );\n     }\n \n     @Override\n@@ -275,7 +265,8 @@ public class InternalJettyServletRequest extends Request\n         {\n             return (Long) headers.get( name );\n         }\n-        return -1;\n+\n+        return - 1;\n     }\n \n     @Override\n@@ -288,16 +279,15 @@ public class InternalJettyServletRequest extends Request\n             {\n                 return (String) value;\n             }\n-            else if ( value instanceof Collection )\n-            {\n-                return ( (Collection<?>) value ).iterator()\n-                        .next()\n-                        .toString();\n-            }\n             else\n+            if ( value instanceof Collection )\n             {\n-                return value.toString();\n+                return ((Collection<?>) value).iterator().next().toString();\n             }\n+            else\n+                {\n+                    return value.toString();\n+                }\n         }\n \n         return null;\n@@ -318,6 +308,7 @@ public class InternalJettyServletRequest extends Request\n                 return Collections.enumeration( Collections.singleton( (String) value ) );\n             }\n         }\n+\n         return null;\n     }\n \n@@ -334,7 +325,8 @@ public class InternalJettyServletRequest extends Request\n         {\n             return (Integer) headers.get( name );\n         }\n-        return -1;\n+\n+        return - 1;\n     }\n \n     @Override\n@@ -358,21 +350,20 @@ public class InternalJettyServletRequest extends Request\n     public static class RequestData\n     {\n         public final String remoteAddress;\n+\n         public final boolean isSecure;\n+\n         public final int remotePort;\n+\n         public final String localName;\n+\n         public final String localAddress;\n+\n         public final int localPort;\n+\n         public final String authType;\n \n-        public RequestData(\n-                String remoteAddress,\n-                boolean isSecure,\n-                int remotePort,\n-                String localName,\n-                String localAddress,\n-                int localPort,\n-                String authType )\n+        public RequestData( String remoteAddress, boolean isSecure, int remotePort, String localName, String localAddress, int localPort, String authType )\n         {\n             this.remoteAddress = remoteAddress;\n             this.isSecure = isSecure;\n@@ -385,15 +376,7 @@ public class InternalJettyServletRequest extends Request\n \n         public static RequestData from( HttpServletRequest req )\n         {\n-            return new RequestData(\n-                    req.getRemoteAddr(),\n-                    req.isSecure(),\n-                    req.getRemotePort(),\n-                    req.getLocalName(),\n-                    req.getLocalAddr(),\n-                    req.getLocalPort(),\n-                    req.getAuthType() == null ? \"\" : req.getAuthType()\n-                );\n+            return new RequestData( req.getRemoteAddr(), req.isSecure(), req.getRemotePort(), req.getLocalName(), req.getLocalAddr(), req.getLocalPort(), req.getAuthType() == null ? \"\" : req.getAuthType() );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 61
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
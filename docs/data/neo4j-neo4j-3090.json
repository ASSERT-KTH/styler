{
    "project_name": "neo4j-neo4j",
    "error_id": "3090",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "56",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "79",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "107",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "102",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "117",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "151",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "155",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "159",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "165",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "166",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "177",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "177",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "182",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "182",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "189",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "189",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "197",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "197",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "206",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "206",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "211",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "211",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "224",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "224",
                    "column": "115",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "232",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "233",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "242",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "243",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "252",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "252",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/3090/GraphDbStructureGuide.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/3090/GraphDbStructureGuide.java\nindex b8c06248970..385d159ae6b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/3090/GraphDbStructureGuide.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/3090/GraphDbStructureGuide.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.util.dbstructure;\n \n import java.util.Iterator;\n@@ -52,208 +53,204 @@ public class GraphDbStructureGuide implements Visitable<DbStructureVisitor>\n \n     private final GraphDatabaseAPI db;\n \n-    public GraphDbStructureGuide( GraphDatabaseService graph )\n+    public GraphDbStructureGuide(GraphDatabaseService graph)\n     {\n         this.db = (GraphDatabaseAPI) graph;\n     }\n \n     @Override\n-    public void accept( DbStructureVisitor visitor )\n+    public void accept(DbStructureVisitor visitor)\n     {\n-        try ( Transaction tx = db.beginTx() )\n+        try (Transaction tx = db.beginTx())\n         {\n-            showStructure( (InternalTransaction) tx, visitor );\n+            showStructure((InternalTransaction) tx, visitor);\n             tx.commit();\n         }\n     }\n \n-    private void showStructure( InternalTransaction transaction, DbStructureVisitor visitor )\n+    private void showStructure(InternalTransaction transaction, DbStructureVisitor visitor)\n     {\n \n         try\n         {\n-            showTokens( visitor, transaction );\n-            showSchema( visitor, transaction.kernelTransaction() );\n-            showStatistics( visitor, transaction );\n-        }\n-        catch ( KernelException e )\n+            showTokens(visitor, transaction);\n+            showSchema(visitor, transaction.kernelTransaction());\n+            showStatistics(visitor, transaction);\n+        } catch (KernelException e)\n         {\n-            throw new IllegalStateException( \"Kernel exception when traversing database schema structure and statistics. \" +\n-                    \"This is not expected to happen.\", e );\n+            throw new IllegalStateException(\"Kernel exception when traversing database schema structure and statistics. \" +\n+              \"This is not expected to happen.\", e);\n         }\n     }\n \n-    private void showTokens( DbStructureVisitor visitor, InternalTransaction transaction )\n+    private void showTokens(DbStructureVisitor visitor, InternalTransaction transaction)\n     {\n-        showLabels( transaction, visitor );\n-        showPropertyKeys( transaction, visitor );\n-        showRelTypes( transaction, visitor );\n+        showLabels(transaction, visitor);\n+        showPropertyKeys(transaction, visitor);\n+        showRelTypes(transaction, visitor);\n     }\n \n-    private void showLabels( InternalTransaction transaction, DbStructureVisitor visitor )\n+    private void showLabels(InternalTransaction transaction, DbStructureVisitor visitor)\n     {\n-        for ( Label label : transaction.getAllLabels() )\n+        for (Label label : transaction.getAllLabels())\n         {\n-            int labelId = transaction.kernelTransaction().tokenRead().nodeLabel( label.name() );\n-            visitor.visitLabel( labelId, label.name() );\n+            int labelId = transaction.kernelTransaction().tokenRead().nodeLabel(label.name());\n+            visitor.visitLabel(labelId, label.name());\n         }\n     }\n \n-    private void showPropertyKeys( InternalTransaction transaction, DbStructureVisitor visitor )\n+    private void showPropertyKeys(InternalTransaction transaction, DbStructureVisitor visitor)\n     {\n-        for ( String propertyKeyName : transaction.getAllPropertyKeys() )\n+        for (String propertyKeyName : transaction.getAllPropertyKeys())\n         {\n-            int propertyKeyId = transaction.kernelTransaction().tokenRead().propertyKey( propertyKeyName );\n-            visitor.visitPropertyKey( propertyKeyId, propertyKeyName );\n+            int propertyKeyId = transaction.kernelTransaction().tokenRead().propertyKey(propertyKeyName);\n+            visitor.visitPropertyKey(propertyKeyId, propertyKeyName);\n         }\n     }\n \n-    private void showRelTypes( InternalTransaction transaction, DbStructureVisitor visitor )\n+    private void showRelTypes(InternalTransaction transaction, DbStructureVisitor visitor)\n     {\n-        for ( RelationshipType relType : transaction.getAllRelationshipTypes() )\n+        for (RelationshipType relType : transaction.getAllRelationshipTypes())\n         {\n-            int relTypeId = transaction.kernelTransaction().tokenRead().relationshipType( relType.name() );\n-            visitor.visitRelationshipType( relTypeId, relType.name() );\n+            int relTypeId = transaction.kernelTransaction().tokenRead().relationshipType(relType.name());\n+            visitor.visitRelationshipType(relTypeId, relType.name());\n         }\n     }\n \n-    private void showSchema( DbStructureVisitor visitor, KernelTransaction ktx ) throws IndexNotFoundKernelException\n+    private void showSchema(DbStructureVisitor visitor, KernelTransaction ktx) throws IndexNotFoundKernelException\n     {\n         TokenNameLookup nameLookup = ktx.tokenRead();\n-        showIndices( visitor, ktx, nameLookup );\n-        showUniqueConstraints( visitor, ktx, nameLookup );\n+        showIndices(visitor, ktx, nameLookup);\n+        showUniqueConstraints(visitor, ktx, nameLookup);\n     }\n \n-    private void showIndices( DbStructureVisitor visitor, KernelTransaction ktx, TokenNameLookup nameLookup )\n-            throws IndexNotFoundKernelException\n+    private void showIndices(DbStructureVisitor visitor, KernelTransaction ktx, TokenNameLookup nameLookup)\n+      throws IndexNotFoundKernelException\n     {\n         SchemaRead schemaRead = ktx.schemaRead();\n-        for ( IndexDescriptor reference : loop( IndexDescriptor.sortByType( schemaRead.indexesGetAll() ) ) )\n+        for (IndexDescriptor reference : loop(IndexDescriptor.sortByType(schemaRead.indexesGetAll())))\n         {\n-            String userDescription = reference.schema().userDescription( nameLookup );\n-            double uniqueValuesPercentage = schemaRead.indexUniqueValuesSelectivity( reference );\n-            long size = schemaRead.indexSize( reference );\n-            visitor.visitIndex( reference, userDescription, uniqueValuesPercentage, size );\n+            String userDescription = reference.schema().userDescription(nameLookup);\n+            double uniqueValuesPercentage = schemaRead.indexUniqueValuesSelectivity(reference);\n+            long size = schemaRead.indexSize(reference);\n+            visitor.visitIndex(reference, userDescription, uniqueValuesPercentage, size);\n         }\n     }\n \n-    private void showUniqueConstraints( DbStructureVisitor visitor, KernelTransaction ktx, TokenNameLookup nameLookup )\n+    private void showUniqueConstraints(DbStructureVisitor visitor, KernelTransaction ktx, TokenNameLookup nameLookup)\n     {\n         Iterator<ConstraintDescriptor> constraints = ktx.schemaRead().constraintsGetAll();\n-        while ( constraints.hasNext() )\n+        while (constraints.hasNext())\n         {\n             ConstraintDescriptor constraint = constraints.next();\n-            String userDescription = constraint.userDescription( nameLookup );\n+            String userDescription = constraint.userDescription(nameLookup);\n \n-            if ( constraint.isUniquenessConstraint() )\n+            if (constraint.isUniquenessConstraint())\n             {\n-                visitor.visitUniqueConstraint( constraint.asUniquenessConstraint(), userDescription );\n-            }\n-            else if ( constraint.isNodePropertyExistenceConstraint() )\n+                visitor.visitUniqueConstraint(constraint.asUniquenessConstraint(), userDescription);\n+            } else if (constraint.isNodePropertyExistenceConstraint())\n             {\n                 NodeExistenceConstraintDescriptor existenceConstraint = constraint.asNodePropertyExistenceConstraint();\n-                visitor.visitNodePropertyExistenceConstraint( existenceConstraint, userDescription );\n-            }\n-            else if ( constraint.isRelationshipPropertyExistenceConstraint() )\n+                visitor.visitNodePropertyExistenceConstraint(existenceConstraint, userDescription);\n+            } else if (constraint.isRelationshipPropertyExistenceConstraint())\n             {\n                 RelExistenceConstraintDescriptor existenceConstraint = constraint.asRelationshipPropertyExistenceConstraint();\n-                visitor.visitRelationshipPropertyExistenceConstraint( existenceConstraint, userDescription );\n-            }\n-            else if ( constraint.isNodeKeyConstraint() )\n+                visitor.visitRelationshipPropertyExistenceConstraint(existenceConstraint, userDescription);\n+            } else if (constraint.isNodeKeyConstraint())\n             {\n                 NodeKeyConstraintDescriptor nodeKeyConstraint = constraint.asNodeKeyConstraint();\n-                visitor.visitNodeKeyConstraint( nodeKeyConstraint, userDescription );\n-            }\n-            else\n+                visitor.visitNodeKeyConstraint(nodeKeyConstraint, userDescription);\n+            } else\n             {\n-                throw new IllegalArgumentException( \"Unknown constraint type: \" + constraint.getClass() + \", \" +\n-                                                    \"constraint: \" + constraint );\n+                throw new IllegalArgumentException(\"Unknown constraint type: \" + constraint.getClass() + \", \" +\n+                  \"constraint: \" + constraint);\n             }\n         }\n     }\n \n-    private void showStatistics( DbStructureVisitor visitor, InternalTransaction transaction )\n+    private void showStatistics(DbStructureVisitor visitor, InternalTransaction transaction)\n     {\n-        showNodeCounts( transaction, visitor );\n-        showRelCounts( transaction, visitor );\n+        showNodeCounts(transaction, visitor);\n+        showRelCounts(transaction, visitor);\n     }\n \n-    private void showNodeCounts( InternalTransaction transaction, DbStructureVisitor visitor )\n+    private void showNodeCounts(InternalTransaction transaction, DbStructureVisitor visitor)\n     {\n         var kernelTransaction = transaction.kernelTransaction();\n         Read read = kernelTransaction.dataRead();\n-        visitor.visitAllNodesCount( read.countsForNode( ANY_LABEL ) );\n-        for ( Label label : transaction.getAllLabels() )\n+        visitor.visitAllNodesCount(read.countsForNode(ANY_LABEL));\n+        for (Label label : transaction.getAllLabels())\n         {\n-            int labelId = kernelTransaction.tokenRead().nodeLabel( label.name() );\n-            visitor.visitNodeCount( labelId, label.name(), read.countsForNode( labelId ) );\n+            int labelId = kernelTransaction.tokenRead().nodeLabel(label.name());\n+            visitor.visitNodeCount(labelId, label.name(), read.countsForNode(labelId));\n         }\n     }\n-    private void showRelCounts( InternalTransaction transaction, DbStructureVisitor visitor )\n+\n+    private void showRelCounts(InternalTransaction transaction, DbStructureVisitor visitor)\n     {\n         // all wildcards\n         KernelTransaction ktx = transaction.kernelTransaction();\n-        noSide( ktx, visitor, WILDCARD_REL_TYPE, ANY_RELATIONSHIP_TYPE );\n+        noSide(ktx, visitor, WILDCARD_REL_TYPE, ANY_RELATIONSHIP_TYPE);\n \n         TokenRead tokenRead = ktx.tokenRead();\n         // one label only\n-        for ( Label label : transaction.getAllLabels() )\n+        for (Label label : transaction.getAllLabels())\n         {\n-            int labelId = tokenRead.nodeLabel( label.name() );\n+            int labelId = tokenRead.nodeLabel(label.name());\n \n-            leftSide( ktx, visitor, label, labelId, WILDCARD_REL_TYPE, ANY_RELATIONSHIP_TYPE );\n-            rightSide( ktx, visitor, label, labelId, WILDCARD_REL_TYPE, ANY_RELATIONSHIP_TYPE );\n+            leftSide(ktx, visitor, label, labelId, WILDCARD_REL_TYPE, ANY_RELATIONSHIP_TYPE);\n+            rightSide(ktx, visitor, label, labelId, WILDCARD_REL_TYPE, ANY_RELATIONSHIP_TYPE);\n         }\n \n         // fixed rel type\n-        for ( RelationshipType relType : transaction.getAllRelationshipTypes() )\n+        for (RelationshipType relType : transaction.getAllRelationshipTypes())\n         {\n-            int relTypeId = tokenRead.relationshipType( relType.name() );\n-            noSide( ktx, visitor, relType, relTypeId );\n+            int relTypeId = tokenRead.relationshipType(relType.name());\n+            noSide(ktx, visitor, relType, relTypeId);\n \n-            for ( Label label : transaction.getAllLabels() )\n+            for (Label label : transaction.getAllLabels())\n             {\n-                int labelId = tokenRead.nodeLabel( label.name() );\n+                int labelId = tokenRead.nodeLabel(label.name());\n \n                 // wildcard on right\n-                leftSide( ktx, visitor, label, labelId, relType, relTypeId );\n+                leftSide(ktx, visitor, label, labelId, relType, relTypeId);\n \n                 // wildcard on left\n-                rightSide( ktx, visitor, label, labelId, relType, relTypeId );\n+                rightSide(ktx, visitor, label, labelId, relType, relTypeId);\n             }\n         }\n     }\n \n-    private void noSide( KernelTransaction ktx, DbStructureVisitor visitor, RelationshipType relType, int relTypeId )\n+    private void noSide(KernelTransaction ktx, DbStructureVisitor visitor, RelationshipType relType, int relTypeId)\n     {\n-        String userDescription = format(\"MATCH ()-[%s]->() RETURN count(*)\", colon( relType.name() ));\n-        long amount = ktx.dataRead().countsForRelationship( ANY_LABEL, relTypeId, ANY_LABEL );\n+        String userDescription = format(\"MATCH ()-[%s]->() RETURN count(*)\", colon(relType.name()));\n+        long amount = ktx.dataRead().countsForRelationship(ANY_LABEL, relTypeId, ANY_LABEL);\n \n-        visitor.visitRelCount( ANY_LABEL, relTypeId, ANY_LABEL, userDescription, amount );\n+        visitor.visitRelCount(ANY_LABEL, relTypeId, ANY_LABEL, userDescription, amount);\n     }\n \n-    private void leftSide( KernelTransaction ktx, DbStructureVisitor visitor, Label label, int labelId,\n-            RelationshipType relType, int relTypeId )\n+    private void leftSide(KernelTransaction ktx, DbStructureVisitor visitor, Label label, int labelId,\n+                          RelationshipType relType, int relTypeId)\n     {\n         String userDescription =\n-                format( \"MATCH (%s)-[%s]->() RETURN count(*)\", colon( label.name() ), colon( relType.name() ) );\n-        long amount = ktx.dataRead().countsForRelationship( labelId, relTypeId, ANY_LABEL );\n+          format(\"MATCH (%s)-[%s]->() RETURN count(*)\", colon(label.name()), colon(relType.name()));\n+        long amount = ktx.dataRead().countsForRelationship(labelId, relTypeId, ANY_LABEL);\n \n-        visitor.visitRelCount( labelId, relTypeId, ANY_LABEL, userDescription, amount );\n+        visitor.visitRelCount(labelId, relTypeId, ANY_LABEL, userDescription, amount);\n     }\n \n-    private void rightSide( KernelTransaction ktx, DbStructureVisitor visitor, Label label, int labelId,\n-            RelationshipType relType, int relTypeId )\n+    private void rightSide(KernelTransaction ktx, DbStructureVisitor visitor, Label label, int labelId,\n+                           RelationshipType relType, int relTypeId)\n     {\n         String userDescription =\n-                format( \"MATCH ()-[%s]->(%s) RETURN count(*)\", colon( relType.name() ), colon( label.name() ) );\n-        long amount = ktx.dataRead().countsForRelationship( ANY_LABEL, relTypeId, labelId );\n+          format(\"MATCH ()-[%s]->(%s) RETURN count(*)\", colon(relType.name()), colon(label.name()));\n+        long amount = ktx.dataRead().countsForRelationship(ANY_LABEL, relTypeId, labelId);\n \n-        visitor.visitRelCount( ANY_LABEL, relTypeId, labelId, userDescription, amount );\n+        visitor.visitRelCount(ANY_LABEL, relTypeId, labelId, userDescription, amount);\n     }\n \n-    private String colon( String name )\n+    private String colon(String name)\n     {\n-        return  name.isEmpty() ? name : (\":\" + name);\n+        return name.isEmpty() ? name : (\":\" + name);\n     }\n }\n",
            "diff_size": 95
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4063",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "35",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "36",
                    "column": "131",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4063/RelationshipLinkforwardStep.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4063/RelationshipLinkforwardStep.java\nindex 7a6e79f2936..58fa969ce9f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4063/RelationshipLinkforwardStep.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4063/RelationshipLinkforwardStep.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.unsafe.impl.batchimport;\n \n import java.util.function.Predicate;\n@@ -31,34 +32,34 @@ import static org.neo4j.graphdb.Direction.BOTH;\n \n public class RelationshipLinkforwardStep extends RelationshipLinkStep\n {\n-    public RelationshipLinkforwardStep( StageControl control, Configuration config, NodeRelationshipCache cache,\n-            Predicate<RelationshipRecord> filter, int nodeTypes, StatsProvider... additionalStatsProvider )\n-    {\n-        super( control, config, cache, filter, nodeTypes, true, additionalStatsProvider );\n-    }\n+  public RelationshipLinkforwardStep(StageControl control, Configuration config, NodeRelationshipCache cache,\n+                                     Predicate<RelationshipRecord> filter, int nodeTypes, StatsProvider... additionalStatsProvider)\n+  {\n+    super(control, config, cache, filter, nodeTypes, true, additionalStatsProvider);\n+  }\n \n-    @Override\n-    protected void linkStart( RelationshipRecord record )\n-    {\n-        long firstNextRel = cache.getAndPutRelationship( record.getFirstNode(),\n-                record.getType(), Direction.OUTGOING, record.getId(), true );\n-        record.setFirstNextRel( firstNextRel );\n-    }\n+  @Override\n+  protected void linkStart(RelationshipRecord record)\n+  {\n+    long firstNextRel = cache.getAndPutRelationship(record.getFirstNode(),\n+        record.getType(), Direction.OUTGOING, record.getId(), true);\n+    record.setFirstNextRel(firstNextRel);\n+  }\n \n-    @Override\n-    protected void linkEnd( RelationshipRecord record )\n-    {\n-        long secondNextRel = cache.getAndPutRelationship( record.getSecondNode(),\n-                record.getType(), Direction.INCOMING, record.getId(), true );\n-        record.setSecondNextRel( secondNextRel );\n-    }\n+  @Override\n+  protected void linkEnd(RelationshipRecord record)\n+  {\n+    long secondNextRel = cache.getAndPutRelationship(record.getSecondNode(),\n+        record.getType(), Direction.INCOMING, record.getId(), true);\n+    record.setSecondNextRel(secondNextRel);\n+  }\n \n-    @Override\n-    protected void linkLoop( RelationshipRecord record )\n-    {\n-        long firstNextRel = cache.getAndPutRelationship(\n-                record.getFirstNode(), record.getType(), BOTH, record.getId(), true );\n-        record.setFirstNextRel( firstNextRel );\n-        record.setSecondNextRel( firstNextRel );\n-    }\n+  @Override\n+  protected void linkLoop(RelationshipRecord record)\n+  {\n+    long firstNextRel = cache.getAndPutRelationship(\n+        record.getFirstNode(), record.getType(), BOTH, record.getId(), true);\n+    record.setFirstNextRel(firstNextRel);\n+    record.setSecondNextRel(firstNextRel);\n+  }\n }\n",
            "diff_size": 28
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "34",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 208).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4063/RelationshipLinkforwardStep.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4063/RelationshipLinkforwardStep.java\nindex 7a6e79f2936..d98b74af69f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4063/RelationshipLinkforwardStep.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4063/RelationshipLinkforwardStep.java\n@@ -31,8 +31,7 @@ import static org.neo4j.graphdb.Direction.BOTH;\n \n public class RelationshipLinkforwardStep extends RelationshipLinkStep\n {\n-    public RelationshipLinkforwardStep( StageControl control, Configuration config, NodeRelationshipCache cache,\n-            Predicate<RelationshipRecord> filter, int nodeTypes, StatsProvider... additionalStatsProvider )\n+    public RelationshipLinkforwardStep( StageControl control, Configuration config, NodeRelationshipCache cache, Predicate<RelationshipRecord> filter, int nodeTypes, StatsProvider... additionalStatsProvider )\n     {\n         super( control, config, cache, filter, nodeTypes, true, additionalStatsProvider );\n     }\n@@ -40,25 +39,22 @@ public class RelationshipLinkforwardStep extends RelationshipLinkStep\n     @Override\n     protected void linkStart( RelationshipRecord record )\n     {\n-        long firstNextRel = cache.getAndPutRelationship( record.getFirstNode(),\n-                record.getType(), Direction.OUTGOING, record.getId(), true );\n-        record.setFirstNextRel( firstNextRel );\n+        long firstNextRel = cache.getAndPutRelationship( record.getFirstNode(), record.getType(), Direction.OUTGOING, record.getId(), true );\n+record.setFirstNextRel( firstNextRel );\n     }\n \n     @Override\n     protected void linkEnd( RelationshipRecord record )\n     {\n-        long secondNextRel = cache.getAndPutRelationship( record.getSecondNode(),\n-                record.getType(), Direction.INCOMING, record.getId(), true );\n-        record.setSecondNextRel( secondNextRel );\n+        long secondNextRel = cache.getAndPutRelationship( record.getSecondNode(), record.getType(), Direction.INCOMING, record.getId(), true );\n+record.setSecondNextRel( secondNextRel );\n     }\n \n     @Override\n     protected void linkLoop( RelationshipRecord record )\n     {\n-        long firstNextRel = cache.getAndPutRelationship(\n-                record.getFirstNode(), record.getType(), BOTH, record.getId(), true );\n-        record.setFirstNextRel( firstNextRel );\n+        long firstNextRel = cache.getAndPutRelationship( record.getFirstNode(), record.getType(), BOTH, record.getId(), true );\n+record.setFirstNextRel( firstNextRel );\n         record.setSecondNextRel( firstNextRel );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 12
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4487",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "40",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4487/DatabaseSchemaState.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4487/DatabaseSchemaState.java\nindex 49dca246aed..ec4a6dbc106 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4487/DatabaseSchemaState.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4487/DatabaseSchemaState.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.api;\n \n import java.util.Map;\n@@ -33,39 +34,39 @@ import org.neo4j.logging.LogProvider;\n  */\n public class DatabaseSchemaState implements SchemaState\n {\n-    private Map<Object, Object> state;\n-    private final Log log;\n+  private Map<Object, Object> state;\n+  private final Log log;\n \n-    public DatabaseSchemaState( LogProvider logProvider )\n-    {\n-        this.state = new ConcurrentHashMap<>(  );\n-        this.log = logProvider.getLog( getClass() );\n-    }\n+  public DatabaseSchemaState(LogProvider logProvider)\n+  {\n+    this.state = new ConcurrentHashMap<>();\n+    this.log = logProvider.getLog(getClass());\n+  }\n \n-    @SuppressWarnings( \"unchecked\" )\n-    @Override\n-    public <K, V> V get( K key )\n-    {\n-        return (V) state.get( key );\n-    }\n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n+  public <K, V> V get(K key)\n+  {\n+    return (V) state.get(key);\n+  }\n \n-    @SuppressWarnings( \"unchecked\" )\n-    @Override\n-    public <K, V> V getOrCreate( K key, Function<K,V> creator )\n-    {\n-        return (V) state.computeIfAbsent( key, (Function<Object, Object>) creator );\n-    }\n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n+  public <K, V> V getOrCreate(K key, Function<K, V> creator)\n+  {\n+    return (V) state.computeIfAbsent(key, (Function<Object, Object>) creator);\n+  }\n \n-    @Override\n-    public <K, V> void put( K key, V value )\n-    {\n-        state.put( key, value );\n-    }\n+  @Override\n+  public <K, V> void put(K key, V value)\n+  {\n+    state.put(key, value);\n+  }\n \n-    @Override\n-    public void clear()\n-    {\n-        state.clear();\n-        log.debug( \"Schema state store has been cleared.\" );\n-    }\n+  @Override\n+  public void clear()\n+  {\n+    state.clear();\n+    log.debug(\"Schema state store has been cleared.\");\n+  }\n }\n",
            "diff_size": 31
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4487/DatabaseSchemaState.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4487/DatabaseSchemaState.java\nindex 49dca246aed..92c76bd3e67 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4487/DatabaseSchemaState.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4487/DatabaseSchemaState.java\n@@ -33,31 +33,31 @@ import org.neo4j.logging.LogProvider;\n  */\n public class DatabaseSchemaState implements SchemaState\n {\n-    private Map<Object, Object> state;\n+    private Map<Object,Object> state;\n     private final Log log;\n \n     public DatabaseSchemaState( LogProvider logProvider )\n     {\n-        this.state = new ConcurrentHashMap<>(  );\n+        this.state = new ConcurrentHashMap<>();\n         this.log = logProvider.getLog( getClass() );\n     }\n \n     @SuppressWarnings( \"unchecked\" )\n     @Override\n-    public <K, V> V get( K key )\n+    public <K,V> V get( K key )\n     {\n         return (V) state.get( key );\n     }\n \n     @SuppressWarnings( \"unchecked\" )\n     @Override\n-    public <K, V> V getOrCreate( K key, Function<K,V> creator )\n+    public <K,V> V getOrCreate( K key, Function<K,V> creator )\n     {\n         return (V) state.computeIfAbsent( key, (Function<Object, Object>) creator );\n     }\n \n     @Override\n-    public <K, V> void put( K key, V value )\n+    public <K,V> void put( K key, V value )\n     {\n         state.put( key, value );\n     }\n@@ -68,4 +68,4 @@ public class DatabaseSchemaState implements SchemaState\n         state.clear();\n         log.debug( \"Schema state store has been cleared.\" );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "neo4j-neo4j",
    "error_id": "1702",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "74",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "120",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "118",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "102",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "125",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "143",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "141",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "165",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "165",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "174",
                    "column": "59",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "176",
                    "column": "113",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "179",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "180",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "195",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "195",
                    "column": "133",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "201",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "201",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "201",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "203",
                    "column": "68",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "203",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1702/GraphDatabaseFacade.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1702/GraphDatabaseFacade.java\nindex f99417c1f8e..93fd160a10b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1702/GraphDatabaseFacade.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1702/GraphDatabaseFacade.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.factory;\n \n import java.time.Duration;\n@@ -70,27 +71,27 @@ public class GraphDatabaseFacade implements GraphDatabaseAPI\n     private final DbmsInfo dbmsInfo;\n     private Function<LoginContext, LoginContext> loginContextTransformer = Function.identity();\n \n-    public GraphDatabaseFacade( GraphDatabaseFacade facade, Function<LoginContext,LoginContext> loginContextTransformer )\n+    public GraphDatabaseFacade(GraphDatabaseFacade facade, Function<LoginContext, LoginContext> loginContextTransformer)\n     {\n-        this( facade.database, facade.config, facade.dbmsInfo, facade.availabilityGuard );\n-        this.loginContextTransformer = requireNonNull( loginContextTransformer );\n+        this(facade.database, facade.config, facade.dbmsInfo, facade.availabilityGuard);\n+        this.loginContextTransformer = requireNonNull(loginContextTransformer);\n     }\n \n-    public GraphDatabaseFacade( Database database, Config config, DbmsInfo dbmsInfo,\n-            DatabaseAvailabilityGuard availabilityGuard )\n+    public GraphDatabaseFacade(Database database, Config config, DbmsInfo dbmsInfo,\n+                               DatabaseAvailabilityGuard availabilityGuard)\n     {\n-        this.database = requireNonNull( database );\n-        this.config = requireNonNull( config );\n-        this.availabilityGuard = requireNonNull( availabilityGuard );\n-        this.dbmsInfo = requireNonNull( dbmsInfo );\n-        this.contextFactory = Neo4jTransactionalContextFactory.create( () -> getDependencyResolver().resolveDependency( GraphDatabaseQueryService.class ),\n-                new FacadeKernelTransactionFactory( config, this ) );\n+        this.database = requireNonNull(database);\n+        this.config = requireNonNull(config);\n+        this.availabilityGuard = requireNonNull(availabilityGuard);\n+        this.dbmsInfo = requireNonNull(dbmsInfo);\n+        this.contextFactory = Neo4jTransactionalContextFactory.create(() -> getDependencyResolver().resolveDependency(GraphDatabaseQueryService.class),\n+          new FacadeKernelTransactionFactory(config, this));\n     }\n \n     @Override\n-    public boolean isAvailable( long timeoutMillis )\n+    public boolean isAvailable(long timeoutMillis)\n     {\n-        return database.getDatabaseAvailabilityGuard().isAvailable( timeoutMillis );\n+        return database.getDatabaseAvailabilityGuard().isAvailable(timeoutMillis);\n     }\n \n     @Override\n@@ -101,81 +102,82 @@ public class GraphDatabaseFacade implements GraphDatabaseAPI\n \n     protected InternalTransaction beginTransaction()\n     {\n-        return beginTransaction( Type.EXPLICIT, AUTH_DISABLED );\n+        return beginTransaction(Type.EXPLICIT, AUTH_DISABLED);\n     }\n \n     @Override\n-    public Transaction beginTx( long timeout, TimeUnit unit )\n+    public Transaction beginTx(long timeout, TimeUnit unit)\n     {\n-        return beginTransaction( Type.EXPLICIT, AUTH_DISABLED, EMBEDDED_CONNECTION, timeout, unit );\n+        return beginTransaction(Type.EXPLICIT, AUTH_DISABLED, EMBEDDED_CONNECTION, timeout, unit);\n     }\n \n     @Override\n-    public InternalTransaction beginTransaction( Type type, LoginContext loginContext )\n+    public InternalTransaction beginTransaction(Type type, LoginContext loginContext)\n     {\n-        return beginTransaction( type, loginContext, EMBEDDED_CONNECTION );\n+        return beginTransaction(type, loginContext, EMBEDDED_CONNECTION);\n     }\n \n     @Override\n-    public InternalTransaction beginTransaction( Type type, LoginContext loginContext, ClientConnectionInfo clientInfo )\n+    public InternalTransaction beginTransaction(Type type, LoginContext loginContext, ClientConnectionInfo clientInfo)\n     {\n-        return beginTransactionInternal( type, loginContext, clientInfo, config.get( transaction_timeout ).toMillis(), null, INSTANCE );\n+        return beginTransactionInternal(type, loginContext, clientInfo, config.get(transaction_timeout).toMillis(), null, INSTANCE);\n     }\n \n     @Override\n-    public InternalTransaction beginTransaction( Type type, LoginContext loginContext, ClientConnectionInfo clientInfo, long timeout,\n-            TimeUnit unit )\n+    public InternalTransaction beginTransaction(Type type, LoginContext loginContext, ClientConnectionInfo clientInfo, long timeout,\n+                                                TimeUnit unit)\n     {\n-        return beginTransactionInternal( type, loginContext, clientInfo, unit.toMillis( timeout ), null, INSTANCE );\n+        return beginTransactionInternal(type, loginContext, clientInfo, unit.toMillis(timeout), null, INSTANCE);\n     }\n \n-    public InternalTransaction beginTransaction( Type type, LoginContext loginContext, ClientConnectionInfo clientInfo, Consumer<Status> terminationCallback,\n-            TransactionExceptionMapper transactionExceptionMapper )\n+    public InternalTransaction beginTransaction(Type type, LoginContext loginContext, ClientConnectionInfo clientInfo, Consumer<Status> terminationCallback,\n+                                                TransactionExceptionMapper transactionExceptionMapper)\n     {\n-        return beginTransactionInternal( type, loginContext, clientInfo, config.get( transaction_timeout ).toMillis(), terminationCallback,\n-                transactionExceptionMapper );\n+        return beginTransactionInternal(type, loginContext, clientInfo, config.get(transaction_timeout).toMillis(), terminationCallback,\n+          transactionExceptionMapper);\n     }\n \n     @Override\n-    public void executeTransactionally( String query ) throws QueryExecutionException\n+    public void executeTransactionally(String query) throws QueryExecutionException\n     {\n-        executeTransactionally( query, emptyMap(), EMPTY_TRANSFORMER );\n+        executeTransactionally(query, emptyMap(), EMPTY_TRANSFORMER);\n     }\n \n     @Override\n-    public void executeTransactionally( String query, Map<String,Object> parameters ) throws QueryExecutionException\n+    public void executeTransactionally(String query, Map<String, Object> parameters) throws QueryExecutionException\n     {\n-        executeTransactionally( query, parameters, EMPTY_TRANSFORMER );\n+        executeTransactionally(query, parameters, EMPTY_TRANSFORMER);\n     }\n \n     @Override\n-    public <T> T executeTransactionally( String query, Map<String,Object> parameters, ResultTransformer<T> resultTransformer ) throws QueryExecutionException\n+    public <T> T executeTransactionally(String query, Map<String, Object> parameters, ResultTransformer<T> resultTransformer) throws QueryExecutionException\n     {\n-        return executeTransactionally( query, parameters, resultTransformer, config.get( transaction_timeout ) );\n+        return executeTransactionally(query, parameters, resultTransformer, config.get(transaction_timeout));\n     }\n \n     @Override\n-    public <T> T executeTransactionally( String query, Map<String,Object> parameters, ResultTransformer<T> resultTransformer, Duration timeout )\n-            throws QueryExecutionException\n+    public <T> T executeTransactionally(String query, Map<String, Object> parameters, ResultTransformer<T> resultTransformer, Duration timeout)\n+      throws QueryExecutionException\n     {\n         T transformedResult;\n-        try ( var internalTransaction = beginTransaction( Type.IMPLICIT, AUTH_DISABLED, EMBEDDED_CONNECTION, timeout.toMillis(), MILLISECONDS ) )\n+        try (var internalTransaction = beginTransaction(Type.IMPLICIT, AUTH_DISABLED, EMBEDDED_CONNECTION, timeout.toMillis(), MILLISECONDS))\n         {\n-            try ( var result = internalTransaction.execute( query, parameters ) )\n+            try (var result = internalTransaction.execute(query, parameters))\n             {\n-                transformedResult = resultTransformer.apply( result );\n+                transformedResult = resultTransformer.apply(result);\n             }\n             internalTransaction.commit();\n         }\n         return transformedResult;\n     }\n \n-    protected InternalTransaction beginTransactionInternal( Type type, LoginContext loginContext, ClientConnectionInfo connectionInfo,\n-            long timeoutMillis, Consumer<Status> terminationCallback, TransactionExceptionMapper transactionExceptionMapper )\n+    protected InternalTransaction beginTransactionInternal(Type type, LoginContext loginContext, ClientConnectionInfo connectionInfo,\n+                                                           long timeoutMillis, Consumer<Status> terminationCallback,\n+                                                           TransactionExceptionMapper transactionExceptionMapper)\n     {\n-        var kernelTransaction = beginKernelTransaction( type, loginContext, connectionInfo, timeoutMillis );\n-        return new TransactionImpl( database.getTokenHolders(), contextFactory, availabilityGuard, database.getExecutionEngine(), kernelTransaction,\n-                terminationCallback, transactionExceptionMapper );\n+        var kernelTransaction = beginKernelTransaction(type, loginContext, connectionInfo, timeoutMillis);\n+        return new TransactionImpl(database.getTokenHolders(), contextFactory, availabilityGuard, database.getExecutionEngine(), kernelTransaction,\n+          terminationCallback, transactionExceptionMapper);\n     }\n \n     @Override\n@@ -190,16 +192,15 @@ public class GraphDatabaseFacade implements GraphDatabaseAPI\n         return dbmsInfo;\n     }\n \n-    KernelTransaction beginKernelTransaction( Type type, LoginContext loginContext, ClientConnectionInfo connectionInfo, long timeout )\n+    KernelTransaction beginKernelTransaction(Type type, LoginContext loginContext, ClientConnectionInfo connectionInfo, long timeout)\n     {\n         try\n         {\n             availabilityGuard.assertDatabaseAvailable();\n-            return database.getKernel().beginTransaction( type, loginContextTransformer.apply( loginContext ), connectionInfo, timeout );\n-        }\n-        catch ( UnavailableException | TransactionFailureException e )\n+            return database.getKernel().beginTransaction(type, loginContextTransformer.apply(loginContext), connectionInfo, timeout);\n+        } catch (UnavailableException | TransactionFailureException e)\n         {\n-            throw new org.neo4j.graphdb.TransactionFailureException( e.getMessage(), e );\n+            throw new org.neo4j.graphdb.TransactionFailureException(e.getMessage(), e);\n         }\n     }\n \n",
            "diff_size": 50
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
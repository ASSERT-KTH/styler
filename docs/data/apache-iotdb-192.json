{
    "project_name": "apache-iotdb",
    "error_id": "192",
    "information": {
        "errors": [
            {
                "line": "19",
                "severity": "warning",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * under the License.\n */\npackage org.apache.iotdb.web.grafana.dao.impl;\n\nimport org.apache.iotdb.tsfile.utils.Pair;\nimport org.apache.iotdb.web.grafana.bean.TimeValues;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/192/BasicDaoImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler/192/BasicDaoImpl.java\nindex de3bd1c9d02..50a27ce47c0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/192/BasicDaoImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler/192/BasicDaoImpl.java\n@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n package org.apache.iotdb.web.grafana.dao.impl;\n \n import org.apache.iotdb.tsfile.utils.Pair;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/192/BasicDaoImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/intellij/192/BasicDaoImpl.java\nindex de3bd1c9d02..854c9a7c2c3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/192/BasicDaoImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/intellij/192/BasicDaoImpl.java\n@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n package org.apache.iotdb.web.grafana.dao.impl;\n \n import org.apache.iotdb.tsfile.utils.Pair;\n@@ -42,7 +43,9 @@ import java.util.ArrayList;\n import java.util.Collections;\n import java.util.List;\n \n-/** Created by dell on 2017/7/17. */\n+/**\n+ * Created by dell on 2017/7/17.\n+ */\n @Repository\n @PropertySource(\"classpath:application.properties\")\n public class BasicDaoImpl implements BasicDao {\n",
            "diff_size": 4
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "19",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "76",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 54, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "77",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 127).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "78",
                    "severity": "warning",
                    "message": "'try' has incorrect indentation level 56, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "78",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 114).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "79",
                    "severity": "warning",
                    "message": "'try' child has incorrect indentation level 58, expected level should be one of the following: 10, 12, 14.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "79",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "80",
                    "severity": "warning",
                    "message": "'try' has incorrect indentation level 58, expected level should be one of the following: 10, 12, 14.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "80",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 112).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "81",
                    "severity": "warning",
                    "message": "'try' child has incorrect indentation level 60, expected level should be one of the following: 12, 14, 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "82",
                    "severity": "warning",
                    "message": "'try' child has incorrect indentation level 60, expected level should be one of the following: 12, 14, 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "82",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 105).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "83",
                    "severity": "warning",
                    "message": "'while' has incorrect indentation level 60, expected level should be one of the following: 12, 14, 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "84",
                    "severity": "warning",
                    "message": "'while' child has incorrect indentation level 62, expected level should be one of the following: 14, 16, 18.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "84",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 105).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "85",
                    "severity": "warning",
                    "message": "'while' child has incorrect indentation level 62, expected level should be one of the following: 14, 16, 18.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "85",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "86",
                    "severity": "warning",
                    "message": "'while rcurly' has incorrect indentation level 60, expected level should be one of the following: 12, 14, 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "87",
                    "severity": "warning",
                    "message": "'try' child has incorrect indentation level 60, expected level should be one of the following: 12, 14, 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "88",
                    "severity": "warning",
                    "message": "'try rcurly' has incorrect indentation level 58, expected level should be one of the following: 10, 12, 14.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "89",
                    "severity": "warning",
                    "message": "'try rcurly' has incorrect indentation level 56, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "90",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 54, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "91",
                    "severity": "warning",
                    "message": "'object def rcurly' has incorrect indentation level 52, expected level should be one of the following: 4, 6, 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "133",
                    "severity": "warning",
                    "message": "'String' has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "137",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 206).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "141",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 303).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "143",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 6, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/192/BasicDaoImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/codebuff/192/BasicDaoImpl.java\nindex de3bd1c9d02..86c9792aea4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/192/BasicDaoImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/codebuff/192/BasicDaoImpl.java\n@@ -21,7 +21,6 @@ package org.apache.iotdb.web.grafana.dao.impl;\n import org.apache.iotdb.tsfile.utils.Pair;\n import org.apache.iotdb.web.grafana.bean.TimeValues;\n import org.apache.iotdb.web.grafana.dao.BasicDao;\n-\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.springframework.beans.factory.annotation.Autowired;\n@@ -31,7 +30,6 @@ import org.springframework.jdbc.core.ConnectionCallback;\n import org.springframework.jdbc.core.JdbcTemplate;\n import org.springframework.jdbc.core.RowMapper;\n import org.springframework.stereotype.Repository;\n-\n import java.sql.Connection;\n import java.sql.ResultSet;\n import java.sql.SQLException;\n@@ -43,14 +41,12 @@ import java.util.Collections;\n import java.util.List;\n \n /** Created by dell on 2017/7/17. */\n-@Repository\n-@PropertySource(\"classpath:application.properties\")\n+\n+@Repository @PropertySource(\"classpath:application.properties\")\n public class BasicDaoImpl implements BasicDao {\n \n   private static final Logger logger = LoggerFactory.getLogger(BasicDaoImpl.class);\n-\n   private final JdbcTemplate jdbcTemplate;\n-\n   private static long timestampRadioX = -1L;\n \n   @Value(\"${timestamp_precision}\")\n@@ -75,24 +71,24 @@ public class BasicDaoImpl implements BasicDao {\n \n   @Override\n   public List<String> getMetaData() {\n-    ConnectionCallback<Object> connectionCallback =\n-        new ConnectionCallback<Object>() {\n-          @Override\n-          public Object doInConnection(Connection connection) throws SQLException {\n-            try (Statement statement = connection.createStatement()) {\n-              statement.execute(\"show timeseries root.*\");\n-              try (ResultSet resultSet = statement.getResultSet()) {\n-                logger.info(\"Start to get timeseries\");\n-                List<String> columnsName = new ArrayList<>();\n-                while (resultSet.next()) {\n-                  String timeseries = resultSet.getString(1);\n-                  columnsName.add(timeseries.substring(5));\n-                }\n-                return columnsName;\n-              }\n-            }\n-          }\n-        };\n+    ConnectionCallback<Object> connectionCallback = new ConnectionCallback<Object>() {\n+\n+                                                      @Override\n+                                                      public Object doInConnection(Connection connection) throws SQLException {\n+                                                        try (Statement statement = connection.createStatement()) {\n+                                                          statement.execute(\"show timeseries root.*\");\n+                                                          try (ResultSet resultSet = statement.getResultSet()) {\n+                                                            logger.info(\"Start to get timeseries\");\n+                                                            List<String> columnsName = new ArrayList<>();\n+                                                            while (resultSet.next()) {\n+                                                              String timeseries = resultSet.getString(1);\n+                                                              columnsName.add(timeseries.substring(5));\n+                                                            }\n+                                                            return columnsName;\n+                                                          }\n+                                                        }\n+                                                      }\n+                                                    };\n     return (List<String>) jdbcTemplate.execute(connectionCallback);\n   }\n \n@@ -114,6 +110,7 @@ public class BasicDaoImpl implements BasicDao {\n    * Note: If the query fails this could be due to AGGREGATIION like AVG on booleayn field. Thus, we\n    * then do a retry with FIRST aggregation. This should be solved better in the long run.\n    */\n+\n   @Override\n   public List<TimeValues> querySeries(String s, Pair<ZonedDateTime, ZonedDateTime> timeRange) {\n     if (timestampRadioX == -1) {\n@@ -133,37 +130,18 @@ public class BasicDaoImpl implements BasicDao {\n   }\n \n   public List<TimeValues> querySeriesInternal(\n-      String s, Pair<ZonedDateTime, ZonedDateTime> timeRange, String function) {\n+    String s, Pair<ZonedDateTime, ZonedDateTime> timeRange, String function) {\n     Long from = zonedCovertToLong(timeRange.left);\n     Long to = zonedCovertToLong(timeRange.right);\n     final long hours = Duration.between(timeRange.left, timeRange.right).toHours();\n-\n-    String sql =\n-        String.format(\n-            \"SELECT %s FROM root.%s WHERE time > %d and time < %d\",\n-            s.substring(s.lastIndexOf('.') + 1),\n-            s.substring(0, s.lastIndexOf('.')),\n-            from * timestampRadioX,\n-            to * timestampRadioX);\n+    String sql = String.format(\"SELECT %s FROM root.%s WHERE time > %d and time < %d\", s.substring(s.lastIndexOf('.') + 1), s.substring(0, s.lastIndexOf('.')), from * timestampRadioX, to * timestampRadioX);\n     String columnName = \"root.\" + s;\n-\n     String intervalLocal = getInterval(hours);\n     if (!intervalLocal.equals(\"\")) {\n-      sql =\n-          String.format(\n-              \"SELECT \"\n-                  + function\n-                  + \"(%s) FROM root.%s WHERE time > %d and time < %d group by ([%d, %d),%s)\",\n-              s.substring(s.lastIndexOf('.') + 1),\n-              s.substring(0, s.lastIndexOf('.')),\n-              from * timestampRadioX,\n-              to * timestampRadioX,\n-              from * timestampRadioX,\n-              to * timestampRadioX,\n-              intervalLocal);\n-      columnName = function + \"(root.\" + s + \")\";\n+      sql = String.format(\"SELECT \" + function + \"(%s) FROM root.%s WHERE time > %d and time < %d group by ([%d, %d),%s)\", s.substring(s.lastIndexOf('.') + 1), s.substring(0, s.lastIndexOf('.')), from * timestampRadioX, to * timestampRadioX, from * timestampRadioX, to * timestampRadioX, intervalLocal);\n+      columnName = function + \"(root.\"\n+      + s + \")\";\n     }\n-\n     logger.info(sql);\n     return jdbcTemplate.query(sql, new TimeValuesRowMapper(columnName));\n   }\n@@ -172,13 +150,11 @@ public class BasicDaoImpl implements BasicDao {\n     if (!isDownSampling || !(hours > 1)) {\n       return \"\";\n     }\n-\n     if (hours < 30 * 24 && hours > 24) {\n       return \"1h\";\n     } else if (hours > 30 * 24) {\n       return \"1d\";\n     }\n-\n     return this.interval;\n   }\n \n@@ -209,4 +185,4 @@ public class BasicDaoImpl implements BasicDao {\n       return tv;\n     }\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 52
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/192/BasicDaoImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler_random/192/BasicDaoImpl.java\nindex de3bd1c9d02..50a27ce47c0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/192/BasicDaoImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler_random/192/BasicDaoImpl.java\n@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n package org.apache.iotdb.web.grafana.dao.impl;\n \n import org.apache.iotdb.tsfile.utils.Pair;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/192/BasicDaoImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler_three_grams/192/BasicDaoImpl.java\nindex de3bd1c9d02..50a27ce47c0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/192/BasicDaoImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler_three_grams/192/BasicDaoImpl.java\n@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n package org.apache.iotdb.web.grafana.dao.impl;\n \n import org.apache.iotdb.tsfile.utils.Pair;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
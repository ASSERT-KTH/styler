{
    "project_name": "apache-crunch",
    "error_id": "0",
    "information": {
        "errors": [
            {
                "line": "176",
                "column": "1",
                "severity": "warning",
                "message": "File contains tab characters (this is the first instance).",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
            }
        ]
    },
    "source_code": "    if (testBigDecimal) {\n      String decimalInputPath = tmpDir.copyResourceFileName(\"bigdecimal.txt\");\n\t  PCollection<String> testBd = pipeline.read(At.textFile(decimalInputPath, typeFamily.strings()));\n      bd = convDecimal(testBd).groupByKey().combineValues(Aggregators.SUM_BIGDECIMALS());\n    }\n    ",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-crunch/errored/1/0/WordCountIT.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-crunch/styler/0/WordCountIT.java\nindex 4c77c415ec0..da5a7c9f095 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-crunch/errored/1/0/WordCountIT.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-crunch/styler/0/WordCountIT.java\n@@ -173,7 +173,7 @@ public class WordCountIT {\n     PTable<String, BigDecimal> bd = null;\n     if (testBigDecimal) {\n       String decimalInputPath = tmpDir.copyResourceFileName(\"bigdecimal.txt\");\n-\t  PCollection<String> testBd = pipeline.read(At.textFile(decimalInputPath, typeFamily.strings()));\n+      PCollection<String> testBd = pipeline.read(At.textFile(decimalInputPath, typeFamily.strings()));\n       bd = convDecimal(testBd).groupByKey().combineValues(Aggregators.SUM_BIGDECIMALS());\n     }\n     \n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-crunch/errored/1/0/WordCountIT.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-crunch/intellij/0/WordCountIT.java\nindex 4c77c415ec0..6755acfa576 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-crunch/errored/1/0/WordCountIT.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-crunch/intellij/0/WordCountIT.java\n@@ -6,15 +6,16 @@\n  * to you under the Apache License, Version 2.0 (the\n  * \"License\"); you may not use this file except in compliance\n  * with the License.  You may obtain a copy of the License at\n- *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n- *\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.apache.crunch;\n \n import static org.junit.Assert.assertEquals;\n@@ -79,7 +80,7 @@ public class WordCountIT {\n       }\n     }, ptable.getPTableType());\n   }\n-  \n+\n   public static PTable<String, BigDecimal> convDecimal(PCollection<String> ptable) {\n     return ptable.parallelDo(new DoFn<String, Pair<String, BigDecimal>>() {\n       @Override\n@@ -110,7 +111,7 @@ public class WordCountIT {\n     useToOutput = true;\n     run(new MRPipeline(WordCountIT.class, tmpDir.getDefaultConfiguration()), WritableTypeFamily.getInstance());\n   }\n-  \n+\n   @Test\n   public void testWritablesForBigDecimal() throws IOException {\n     runSecond = false;\n@@ -169,14 +170,14 @@ public class WordCountIT {\n       PTable<String, Long> we = substr(wordCount).groupByKey().combineValues(Aggregators.SUM_LONGS());\n       pipeline.writeTextFile(we, substrPath);\n     }\n-    \n+\n     PTable<String, BigDecimal> bd = null;\n     if (testBigDecimal) {\n       String decimalInputPath = tmpDir.copyResourceFileName(\"bigdecimal.txt\");\n-\t  PCollection<String> testBd = pipeline.read(At.textFile(decimalInputPath, typeFamily.strings()));\n+      PCollection<String> testBd = pipeline.read(At.textFile(decimalInputPath, typeFamily.strings()));\n       bd = convDecimal(testBd).groupByKey().combineValues(Aggregators.SUM_BIGDECIMALS());\n     }\n-    \n+\n     PipelineResult res = pipeline.done();\n     assertTrue(res.succeeded());\n     List<PipelineResult.StageResult> stageResults = res.getStageResults();\n@@ -184,7 +185,7 @@ public class WordCountIT {\n       assertEquals(1, stageResults.size());\n       assertEquals(\n           ImmutableList.of(Pair.of(\"A\", bigDecimal(\"3.579\")), Pair.of(\"B\", bigDecimal(\"11.579\")),\n-          Pair.of(\"C\", bigDecimal(\"15.642\"))), Lists.newArrayList(bd.materialize()));\n+              Pair.of(\"C\", bigDecimal(\"15.642\"))), Lists.newArrayList(bd.materialize()));\n     } else if (runSecond) {\n       assertEquals(2, stageResults.size());\n     } else {\n@@ -203,7 +204,7 @@ public class WordCountIT {\n     }\n     assertTrue(passed);\n   }\n-  \n+\n   private static BigDecimal bigDecimal(String value) {\n     return new BigDecimal(value);\n   }\n",
            "diff_size": 11
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "174",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "176",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 0, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "177",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 0, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-crunch/errored/1/0/WordCountIT.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-crunch/naturalize/0/WordCountIT.java\nindex 4c77c415ec0..cc78fc5b7b2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-crunch/errored/1/0/WordCountIT.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-crunch/naturalize/0/WordCountIT.java\n@@ -171,10 +171,10 @@ public class WordCountIT {\n     }\n     \n     PTable<String, BigDecimal> bd = null;\n-    if (testBigDecimal) {\n+if (testBigDecimal) {\n       String decimalInputPath = tmpDir.copyResourceFileName(\"bigdecimal.txt\");\n-\t  PCollection<String> testBd = pipeline.read(At.textFile(decimalInputPath, typeFamily.strings()));\n-      bd = convDecimal(testBd).groupByKey().combineValues(Aggregators.SUM_BIGDECIMALS());\n+PCollection<String> testBd = pipeline.read(At.textFile(decimalInputPath, typeFamily.strings()));\n+bd = convDecimal(testBd).groupByKey().combineValues(Aggregators.SUM_BIGDECIMALS());\n     }\n     \n     PipelineResult res = pipeline.done();\n@@ -207,4 +207,4 @@ public class WordCountIT {\n   private static BigDecimal bigDecimal(String value) {\n     return new BigDecimal(value);\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "57",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 13, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "59",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 15, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "60",
                    "severity": "warning",
                    "message": "'for' has incorrect indentation level 15, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "61",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 17, expected level should be one of the following: 10, 12, 14.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "62",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 19, expected level should be one of the following: 12, 14, 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "63",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 17, expected level should be one of the following: 10, 12, 14.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "64",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 17, expected level should be one of the following: 10, 12, 14.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "65",
                    "severity": "warning",
                    "message": "'for rcurly' has incorrect indentation level 15, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "66",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 13, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "67",
                    "severity": "warning",
                    "message": "'object def rcurly' has incorrect indentation level 11, expected level should be one of the following: 4, 6, 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "154",
                    "severity": "warning",
                    "message": "'Pair' has incorrect indentation level 6, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "187",
                    "severity": "warning",
                    "message": "'Pair' has incorrect indentation level 8, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-crunch/errored/1/0/WordCountIT.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-crunch/codebuff/0/WordCountIT.java\nindex 4c77c415ec0..a726ee20d2a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-crunch/errored/1/0/WordCountIT.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-crunch/codebuff/0/WordCountIT.java\n@@ -26,7 +26,6 @@ import java.math.BigDecimal;\n import java.nio.charset.Charset;\n import java.util.Arrays;\n import java.util.List;\n-\n import org.apache.crunch.fn.Aggregators;\n import org.apache.crunch.impl.mr.MRPipeline;\n import org.apache.crunch.io.At;\n@@ -41,7 +40,6 @@ import org.apache.crunch.types.writable.WritableTypeFamily;\n import org.apache.crunch.types.writable.Writables;\n import org.junit.Rule;\n import org.junit.Test;\n-\n import com.google.common.collect.ImmutableList;\n import com.google.common.collect.Lists;\n import com.google.common.io.Files;\n@@ -56,17 +54,17 @@ public class WordCountIT {\n \n   public static PTable<String, Long> wordCount(PCollection<String> words, PTypeFamily typeFamily) {\n     return Aggregate.count(words.parallelDo(new IDoFn<String, String>() {\n-      @Override\n-      public void process(Context<String, String> context) {\n-        List<String> words = Arrays.asList(context.element().split(\"\\\\s+\"));\n-        for (String word : words) {\n-          if (\"and\".equals(word)) {\n-            context.increment(WordCountStats.ANDS);\n-          }\n-          context.emit(word);\n-        }\n-      }\n-    }, typeFamily.strings()));\n+             @Override\n+             public void process(Context<String, String> context) {\n+               List<String> words = Arrays.asList(context.element().split(\"\\\\s+\"));\n+               for (String word : words) {\n+                 if (\"and\".equals(word)) {\n+                   context.increment(WordCountStats.ANDS);\n+                 }\n+                 context.emit(word);\n+               }\n+             }\n+           }, typeFamily.strings()));\n   }\n \n   public static PTable<String, Long> substr(PTable<String, Long> ptable) {\n@@ -79,7 +77,7 @@ public class WordCountIT {\n       }\n     }, ptable.getPTableType());\n   }\n-  \n+\n   public static PTable<String, BigDecimal> convDecimal(PCollection<String> ptable) {\n     return ptable.parallelDo(new DoFn<String, Pair<String, BigDecimal>>() {\n       @Override\n@@ -95,39 +93,45 @@ public class WordCountIT {\n \n   @Test\n   public void testWritables() throws IOException {\n-    run(new MRPipeline(WordCountIT.class, tmpDir.getDefaultConfiguration()), WritableTypeFamily.getInstance());\n+    run(new MRPipeline(WordCountIT.class, tmpDir.getDefaultConfiguration()),\n+        WritableTypeFamily.getInstance());\n   }\n \n   @Test\n   public void testWritablesWithSecond() throws IOException {\n     runSecond = true;\n-    run(new MRPipeline(WordCountIT.class, tmpDir.getDefaultConfiguration()), WritableTypeFamily.getInstance());\n+    run(new MRPipeline(WordCountIT.class, tmpDir.getDefaultConfiguration()),\n+        WritableTypeFamily.getInstance());\n   }\n \n   @Test\n   public void testWritablesWithSecondUseToOutput() throws IOException {\n     runSecond = true;\n     useToOutput = true;\n-    run(new MRPipeline(WordCountIT.class, tmpDir.getDefaultConfiguration()), WritableTypeFamily.getInstance());\n+    run(new MRPipeline(WordCountIT.class, tmpDir.getDefaultConfiguration()),\n+        WritableTypeFamily.getInstance());\n   }\n-  \n+\n   @Test\n   public void testWritablesForBigDecimal() throws IOException {\n     runSecond = false;\n     useToOutput = true;\n     testBigDecimal = true;\n-    run(new MRPipeline(WordCountIT.class, tmpDir.getDefaultConfiguration()), WritableTypeFamily.getInstance());\n+    run(new MRPipeline(WordCountIT.class, tmpDir.getDefaultConfiguration()),\n+        WritableTypeFamily.getInstance());\n   }\n \n   @Test\n   public void testAvro() throws IOException {\n-    run(new MRPipeline(WordCountIT.class, tmpDir.getDefaultConfiguration()), AvroTypeFamily.getInstance());\n+    run(new MRPipeline(WordCountIT.class, tmpDir.getDefaultConfiguration()),\n+        AvroTypeFamily.getInstance());\n   }\n \n   @Test\n   public void testAvroWithSecond() throws IOException {\n     runSecond = true;\n-    run(new MRPipeline(WordCountIT.class, tmpDir.getDefaultConfiguration()), AvroTypeFamily.getInstance());\n+    run(new MRPipeline(WordCountIT.class, tmpDir.getDefaultConfiguration()),\n+        AvroTypeFamily.getInstance());\n   }\n \n   @Test\n@@ -143,19 +147,19 @@ public class WordCountIT {\n   public void runWithTop(PTypeFamily tf) throws IOException {\n     Pipeline pipeline = new MRPipeline(WordCountIT.class, tmpDir.getDefaultConfiguration());\n     String inputPath = tmpDir.copyResourceFileName(\"shakes.txt\");\n-\n     PCollection<String> shakespeare = pipeline.read(At.textFile(inputPath, tf.strings()));\n     PTable<String, Long> wordCount = wordCount(shakespeare, tf);\n     List<Pair<String, Long>> top5 = Lists.newArrayList(Aggregate.top(wordCount, 5, true).materialize());\n-    assertEquals(\n-        ImmutableList.of(Pair.of(\"\", 1470L), Pair.of(\"the\", 620L), Pair.of(\"and\", 427L), Pair.of(\"of\", 396L),\n+    assertEquals(ImmutableList.of(Pair.of(\"\", 1470L),\n+      Pair.of(\"the\", 620L),\n+        Pair.of(\"and\", 427L),\n+          Pair.of(\"of\", 396L),\n             Pair.of(\"to\", 367L)), top5);\n   }\n \n   public void run(Pipeline pipeline, PTypeFamily typeFamily) throws IOException {\n     String inputPath = tmpDir.copyResourceFileName(\"shakes.txt\");\n     String outputPath = tmpDir.getFileName(\"output\");\n-\n     PCollection<String> shakespeare = pipeline.read(At.textFile(inputPath, typeFamily.strings()));\n     PTable<String, Long> wordCount = wordCount(shakespeare, typeFamily);\n     if (useToOutput) {\n@@ -163,27 +167,24 @@ public class WordCountIT {\n     } else {\n       pipeline.writeTextFile(wordCount, outputPath);\n     }\n-\n     if (runSecond) {\n       String substrPath = tmpDir.getFileName(\"substr\");\n       PTable<String, Long> we = substr(wordCount).groupByKey().combineValues(Aggregators.SUM_LONGS());\n       pipeline.writeTextFile(we, substrPath);\n     }\n-    \n     PTable<String, BigDecimal> bd = null;\n     if (testBigDecimal) {\n       String decimalInputPath = tmpDir.copyResourceFileName(\"bigdecimal.txt\");\n-\t  PCollection<String> testBd = pipeline.read(At.textFile(decimalInputPath, typeFamily.strings()));\n+      PCollection<String> testBd = pipeline.read(At.textFile(decimalInputPath, typeFamily.strings()));\n       bd = convDecimal(testBd).groupByKey().combineValues(Aggregators.SUM_BIGDECIMALS());\n     }\n-    \n     PipelineResult res = pipeline.done();\n     assertTrue(res.succeeded());\n     List<PipelineResult.StageResult> stageResults = res.getStageResults();\n     if (testBigDecimal) {\n       assertEquals(1, stageResults.size());\n-      assertEquals(\n-          ImmutableList.of(Pair.of(\"A\", bigDecimal(\"3.579\")), Pair.of(\"B\", bigDecimal(\"11.579\")),\n+      assertEquals(ImmutableList.of(Pair.of(\"A\", bigDecimal(\"3.579\")),\n+        Pair.of(\"B\", bigDecimal(\"11.579\")),\n           Pair.of(\"C\", bigDecimal(\"15.642\"))), Lists.newArrayList(bd.materialize()));\n     } else if (runSecond) {\n       assertEquals(2, stageResults.size());\n@@ -191,7 +192,6 @@ public class WordCountIT {\n       assertEquals(1, stageResults.size());\n       assertEquals(427, stageResults.get(0).getCounterValue(WordCountStats.ANDS));\n     }\n-\n     File outputFile = new File(outputPath, \"part-r-00000\");\n     List<String> lines = Files.readLines(outputFile, Charset.defaultCharset());\n     boolean passed = false;\n@@ -203,8 +203,8 @@ public class WordCountIT {\n     }\n     assertTrue(passed);\n   }\n-  \n+\n   private static BigDecimal bigDecimal(String value) {\n     return new BigDecimal(value);\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 42
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "176",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-crunch/errored/1/0/WordCountIT.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-crunch/styler_random/0/WordCountIT.java\nindex 4c77c415ec0..81311974f32 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-crunch/errored/1/0/WordCountIT.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-crunch/styler_random/0/WordCountIT.java\n@@ -173,7 +173,7 @@ public class WordCountIT {\n     PTable<String, BigDecimal> bd = null;\n     if (testBigDecimal) {\n       String decimalInputPath = tmpDir.copyResourceFileName(\"bigdecimal.txt\");\n-\t  PCollection<String> testBd = pipeline.read(At.textFile(decimalInputPath, typeFamily.strings()));\n+    PCollection<String> testBd = pipeline.read(At.textFile(decimalInputPath, typeFamily.strings()));\n       bd = convDecimal(testBd).groupByKey().combineValues(Aggregators.SUM_BIGDECIMALS());\n     }\n     \n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-crunch/errored/1/0/WordCountIT.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-crunch/styler_three_grams/0/WordCountIT.java\nindex 4c77c415ec0..da5a7c9f095 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-crunch/errored/1/0/WordCountIT.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-crunch/styler_three_grams/0/WordCountIT.java\n@@ -173,7 +173,7 @@ public class WordCountIT {\n     PTable<String, BigDecimal> bd = null;\n     if (testBigDecimal) {\n       String decimalInputPath = tmpDir.copyResourceFileName(\"bigdecimal.txt\");\n-\t  PCollection<String> testBd = pipeline.read(At.textFile(decimalInputPath, typeFamily.strings()));\n+      PCollection<String> testBd = pipeline.read(At.textFile(decimalInputPath, typeFamily.strings()));\n       bd = convDecimal(testBd).groupByKey().combineValues(Aggregators.SUM_BIGDECIMALS());\n     }\n     \n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff",
        "styler_random"
    ]
}
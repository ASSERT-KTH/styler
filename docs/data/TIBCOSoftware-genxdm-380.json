{
    "project_name": "TIBCOSoftware-genxdm",
    "error_id": "380",
    "information": {
        "errors": [
            {
                "line": "39",
                "column": "1",
                "severity": "warning",
                "message": "File contains tab characters (this is the first instance).",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
            }
        ]
    },
    "source_code": "    extends ConvertibleNodeSetExprImpl\n{\n\tprivate final ConvertibleNodeSetExpr expr1;\n\tprivate final ConvertibleNodeSetExpr expr2;\n\n\tSequenceComposeExpr(final ConvertibleNodeSetExpr expr1, final ConvertibleNodeSetExpr expr2)",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "40",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/380/SequenceComposeExpr.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler/380/SequenceComposeExpr.java\nindex abab57dfcfc..b3e7ec4bcc2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/380/SequenceComposeExpr.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler/380/SequenceComposeExpr.java\n@@ -36,7 +36,7 @@ import org.genxdm.xpath.v10.extend.ConvertibleNodeSetExpr;\n final class SequenceComposeExpr \r\n     extends ConvertibleNodeSetExprImpl\r\n {\r\n-\tprivate final ConvertibleNodeSetExpr expr1;\r\n+private final ConvertibleNodeSetExpr expr1;\r\n \tprivate final ConvertibleNodeSetExpr expr2;\r\n \r\n \tSequenceComposeExpr(final ConvertibleNodeSetExpr expr1, final ConvertibleNodeSetExpr expr2)\r\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/380/SequenceComposeExpr.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/intellij/380/SequenceComposeExpr.java\nindex abab57dfcfc..abad15ac546 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/380/SequenceComposeExpr.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/intellij/380/SequenceComposeExpr.java\n@@ -3,7 +3,7 @@\n  * license details\r\n  * Portions copyright (c) 2002, Bill Lindsey : see copying.txt for license\r\n  * details\r\n- * \r\n+ *\r\n  * Portions copyright (c) 2009-2011 TIBCO Software Inc.\r\n  *\r\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n@@ -18,6 +18,7 @@\n  * See the License for the specific language governing permissions and\r\n  * limitations under the License.\r\n  */\r\n+\r\n package org.genxdm.processor.xpath.v10.expressions;\r\n \r\n import org.genxdm.Model;\r\n@@ -33,34 +34,35 @@ import org.genxdm.xpath.v10.extend.ConvertibleNodeSetExpr;\n /**\r\n  * Composition when expr1 is SINGLE_LEVEL and expr2 is STAYS_IN_SUBTREE.\r\n  */\r\n-final class SequenceComposeExpr \r\n-    extends ConvertibleNodeSetExprImpl\r\n-{\r\n-\tprivate final ConvertibleNodeSetExpr expr1;\r\n-\tprivate final ConvertibleNodeSetExpr expr2;\r\n+final class SequenceComposeExpr\r\n+    extends ConvertibleNodeSetExprImpl {\r\n+    private final ConvertibleNodeSetExpr expr1;\r\n+\r\n+    private final ConvertibleNodeSetExpr expr2;\r\n \r\n-\tSequenceComposeExpr(final ConvertibleNodeSetExpr expr1, final ConvertibleNodeSetExpr expr2)\r\n-\t{\r\n-\t\tsuper();\r\n-\t\tthis.expr1 = expr1;\r\n-\t\tthis.expr2 = expr2;\r\n-\t}\r\n+    SequenceComposeExpr(final ConvertibleNodeSetExpr expr1, final ConvertibleNodeSetExpr expr2) {\r\n+        super();\r\n+        this.expr1 = expr1;\r\n+        this.expr2 = expr2;\r\n+    }\r\n \r\n     @Override\r\n-\tpublic <N> NodeIterator<N> nodeIterator(Model<N> model, final N contextNode, final NodeDynamicContext<N> dynEnv) {\r\n-\t\treturn new SequenceComposeNodeIterator<N>(model, expr1.nodeIterator(model, contextNode, dynEnv), expr2, dynEnv);\r\n-\t}\r\n+    public <N> NodeIterator<N> nodeIterator(Model<N> model, final N contextNode,\r\n+                                            final NodeDynamicContext<N> dynEnv) {\r\n+        return new SequenceComposeNodeIterator<N>(model,\r\n+            expr1.nodeIterator(model, contextNode, dynEnv), expr2, dynEnv);\r\n+    }\r\n \r\n     @Override\r\n     public Traverser traverseNodes(TraversingInformer contextNode, TraverserDynamicContext dynEnv) {\r\n-        return new SequenceComposeTraverser(expr1.traverseNodes(contextNode, dynEnv), expr2, dynEnv);\r\n+        return new SequenceComposeTraverser(expr1.traverseNodes(contextNode, dynEnv), expr2,\r\n+            dynEnv);\r\n     }\r\n \r\n     @Override\r\n-\tpublic int getOptimizeFlags()\r\n-\t{\r\n-\t\t// if expr2 is SINGLE_LEVEL then this will be too\r\n-\t\treturn expr2.getOptimizeFlags();\r\n-\t}\r\n+    public int getOptimizeFlags() {\r\n+        // if expr2 is SINGLE_LEVEL then this will be too\r\n+        return expr2.getOptimizeFlags();\r\n+    }\r\n \r\n }\r\n",
            "diff_size": 25
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "40",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/380/SequenceComposeExpr.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/naturalize/380/SequenceComposeExpr.java\nindex abab57dfcfc..6cc4a53fc34 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/380/SequenceComposeExpr.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/naturalize/380/SequenceComposeExpr.java\n@@ -34,33 +34,32 @@ import org.genxdm.xpath.v10.extend.ConvertibleNodeSetExpr;\n  * Composition when expr1 is SINGLE_LEVEL and expr2 is STAYS_IN_SUBTREE.\r\n  */\r\n final class SequenceComposeExpr \r\n-    extends ConvertibleNodeSetExprImpl\r\n-{\r\n-\tprivate final ConvertibleNodeSetExpr expr1;\r\n+    extends ConvertibleNodeSetExprImpl\n+{\n+    private final ConvertibleNodeSetExpr expr1;\r\n \tprivate final ConvertibleNodeSetExpr expr2;\r\n \r\n \tSequenceComposeExpr(final ConvertibleNodeSetExpr expr1, final ConvertibleNodeSetExpr expr2)\r\n-\t{\r\n-\t\tsuper();\r\n+\t{\n+    super();\r\n \t\tthis.expr1 = expr1;\r\n-\t\tthis.expr2 = expr2;\r\n-\t}\r\n-\r\n-    @Override\r\n-\tpublic <N> NodeIterator<N> nodeIterator(Model<N> model, final N contextNode, final NodeDynamicContext<N> dynEnv) {\r\n-\t\treturn new SequenceComposeNodeIterator<N>(model, expr1.nodeIterator(model, contextNode, dynEnv), expr2, dynEnv);\r\n-\t}\r\n-\r\n-    @Override\r\n+\t\tthis.expr2 = expr2;\n+    }\n+\n+@Override\n+public <N> NodeIterator<N> nodeIterator(Model<N> model, final N contextNode, final NodeDynamicContext<N> dynEnv) {\n+return new SequenceComposeNodeIterator<N>(model, expr1.nodeIterator(model, contextNode, dynEnv), expr2, dynEnv);\n+    }\n+\n+@Override\r\n     public Traverser traverseNodes(TraversingInformer contextNode, TraverserDynamicContext dynEnv) {\r\n         return new SequenceComposeTraverser(expr1.traverseNodes(contextNode, dynEnv), expr2, dynEnv);\r\n     }\r\n \r\n-    @Override\r\n-\tpublic int getOptimizeFlags()\r\n-\t{\r\n-\t\t// if expr2 is SINGLE_LEVEL then this will be too\r\n-\t\treturn expr2.getOptimizeFlags();\r\n-\t}\r\n-\r\n-}\r\n+    @Override\n+public int getOptimizeFlags()\r\n+\t{\n+    // if expr2 is SINGLE_LEVEL then this will be too\r\n+\t\treturn expr2.getOptimizeFlags();\n+    }\n+    }\n\\ No newline at end of file\n",
            "diff_size": 22
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/380/SequenceComposeExpr.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/codebuff/380/SequenceComposeExpr.java\nindex abab57dfcfc..a7bd3db5a56 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/380/SequenceComposeExpr.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/codebuff/380/SequenceComposeExpr.java\n@@ -18,49 +18,53 @@\n  * See the License for the specific language governing permissions and\r\n  * limitations under the License.\r\n  */\r\n-package org.genxdm.processor.xpath.v10.expressions;\r\n-\r\n-import org.genxdm.Model;\r\n-import org.genxdm.nodes.Traverser;\r\n-import org.genxdm.nodes.TraversingInformer;\r\n-import org.genxdm.processor.xpath.v10.iterators.SequenceComposeNodeIterator;\r\n-import org.genxdm.processor.xpath.v10.iterators.SequenceComposeTraverser;\r\n-import org.genxdm.xpath.v10.TraverserDynamicContext;\r\n-import org.genxdm.xpath.v10.NodeDynamicContext;\r\n-import org.genxdm.xpath.v10.NodeIterator;\r\n+package org.genxdm.processor.xpath.v10.expressions;\n+\n+import org.genxdm.Model;\n+import org.genxdm.nodes.Traverser;\n+import org.genxdm.nodes.TraversingInformer;\n+import org.genxdm.processor.xpath.v10.iterators.SequenceComposeNodeIterator;\n+import org.genxdm.processor.xpath.v10.iterators.SequenceComposeTraverser;\n+import org.genxdm.xpath.v10.TraverserDynamicContext;\n+import org.genxdm.xpath.v10.NodeDynamicContext;\n+import org.genxdm.xpath.v10.NodeIterator;\n import org.genxdm.xpath.v10.extend.ConvertibleNodeSetExpr;\r\n \r\n /**\r\n  * Composition when expr1 is SINGLE_LEVEL and expr2 is STAYS_IN_SUBTREE.\r\n- */\r\n-final class SequenceComposeExpr \r\n-    extends ConvertibleNodeSetExprImpl\r\n-{\r\n-\tprivate final ConvertibleNodeSetExpr expr1;\r\n-\tprivate final ConvertibleNodeSetExpr expr2;\r\n-\r\n-\tSequenceComposeExpr(final ConvertibleNodeSetExpr expr1, final ConvertibleNodeSetExpr expr2)\r\n-\t{\r\n-\t\tsuper();\r\n-\t\tthis.expr1 = expr1;\r\n-\t\tthis.expr2 = expr2;\r\n-\t}\r\n-\r\n-    @Override\r\n-\tpublic <N> NodeIterator<N> nodeIterator(Model<N> model, final N contextNode, final NodeDynamicContext<N> dynEnv) {\r\n-\t\treturn new SequenceComposeNodeIterator<N>(model, expr1.nodeIterator(model, contextNode, dynEnv), expr2, dynEnv);\r\n-\t}\r\n-\r\n-    @Override\r\n-    public Traverser traverseNodes(TraversingInformer contextNode, TraverserDynamicContext dynEnv) {\r\n-        return new SequenceComposeTraverser(expr1.traverseNodes(contextNode, dynEnv), expr2, dynEnv);\r\n-    }\r\n-\r\n-    @Override\r\n-\tpublic int getOptimizeFlags()\r\n-\t{\r\n-\t\t// if expr2 is SINGLE_LEVEL then this will be too\r\n-\t\treturn expr2.getOptimizeFlags();\r\n-\t}\r\n-\r\n-}\r\n+ */\n+\n+final class SequenceComposeExpr extends ConvertibleNodeSetExprImpl\n+{\n+    private final ConvertibleNodeSetExpr expr1;\n+    private final ConvertibleNodeSetExpr expr2;\n+\n+    SequenceComposeExpr(final ConvertibleNodeSetExpr expr1, final ConvertibleNodeSetExpr expr2)\n+    {\n+        super();\n+        this.expr1 = expr1;\n+        this.expr2 = expr2;\n+    }\n+\n+    @Override\n+    public <N> NodeIterator<N> nodeIterator(Model<N> model, final N contextNode, final NodeDynamicContext<N> dynEnv)\n+    {\n+        return new SequenceComposeNodeIterator<N>(model,\n+            expr1.nodeIterator(model, contextNode, dynEnv),\n+                expr2,\n+                    dynEnv);\n+    }\n+\n+    @Override\n+    public Traverser traverseNodes(TraversingInformer contextNode, TraverserDynamicContext dynEnv)\n+    {\n+        return new SequenceComposeTraverser(expr1.traverseNodes(contextNode, dynEnv), expr2, dynEnv);\n+    }\n+\n+    @Override\n+    public int getOptimizeFlags()\n+    {\r\n+        // if expr2 is SINGLE_LEVEL then this will be too\n+        return expr2.getOptimizeFlags();\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 46
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "40",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/380/SequenceComposeExpr.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler_random/380/SequenceComposeExpr.java\nindex abab57dfcfc..b3e7ec4bcc2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/380/SequenceComposeExpr.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler_random/380/SequenceComposeExpr.java\n@@ -36,7 +36,7 @@ import org.genxdm.xpath.v10.extend.ConvertibleNodeSetExpr;\n final class SequenceComposeExpr \r\n     extends ConvertibleNodeSetExprImpl\r\n {\r\n-\tprivate final ConvertibleNodeSetExpr expr1;\r\n+private final ConvertibleNodeSetExpr expr1;\r\n \tprivate final ConvertibleNodeSetExpr expr2;\r\n \r\n \tSequenceComposeExpr(final ConvertibleNodeSetExpr expr1, final ConvertibleNodeSetExpr expr2)\r\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "40",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/380/SequenceComposeExpr.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler_three_grams/380/SequenceComposeExpr.java\nindex abab57dfcfc..72e8e7c393f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/380/SequenceComposeExpr.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler_three_grams/380/SequenceComposeExpr.java\n@@ -36,7 +36,7 @@ import org.genxdm.xpath.v10.extend.ConvertibleNodeSetExpr;\n final class SequenceComposeExpr \r\n     extends ConvertibleNodeSetExprImpl\r\n {\r\n-\tprivate final ConvertibleNodeSetExpr expr1;\r\n+    private final ConvertibleNodeSetExpr expr1;\r\n \tprivate final ConvertibleNodeSetExpr expr2;\r\n \r\n \tSequenceComposeExpr(final ConvertibleNodeSetExpr expr1, final ConvertibleNodeSetExpr expr2)\r\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "intellij",
        "codebuff"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ]
}
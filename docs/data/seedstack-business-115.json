{
    "project_name": "seedstack-business",
    "error_id": "115",
    "information": {
        "errors": [
            {
                "line": "8",
                "column": "1",
                "severity": "warning",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\npackage org.seedstack.business.internal.specification;\n\nimport static com.google.common.base.Preconditions.checkArgument;\nimport static com.google.common.base.Preconditions.checkNotNull;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/115/SpecificationBuilderContext.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/styler/115/SpecificationBuilderContext.java\nindex 23aeb899291..702ec252233 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/115/SpecificationBuilderContext.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/styler/115/SpecificationBuilderContext.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.business.internal.specification;\n \n import static com.google.common.base.Preconditions.checkArgument;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/115/SpecificationBuilderContext.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/intellij/115/SpecificationBuilderContext.java\nindex 23aeb899291..702ec252233 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/115/SpecificationBuilderContext.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/intellij/115/SpecificationBuilderContext.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.business.internal.specification;\n \n import static com.google.common.base.Preconditions.checkArgument;\n",
            "diff_size": 1
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "8",
                    "column": "1",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "96",
                    "column": "5",
                    "severity": "warning",
                    "message": "'else rcurly' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "121",
                    "column": "1",
                    "severity": "warning",
                    "message": "'CTOR_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "121",
                    "column": "1",
                    "severity": "warning",
                    "message": "'ctor def modifier' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/115/SpecificationBuilderContext.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/naturalize/115/SpecificationBuilderContext.java\nindex 23aeb899291..549165df267 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/115/SpecificationBuilderContext.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/naturalize/115/SpecificationBuilderContext.java\n@@ -63,8 +63,7 @@ class SpecificationBuilderContext<T, S extends BaseSelector<T, S>> {\n     String pickProperty() {\n         if (this.path == null) {\n             throw new IllegalStateException(\"No property has been set\");\n-        }\n-        String ret = this.path;\n+        } String ret = this.path;\n         this.path = null;\n         return ret;\n     }\n@@ -94,7 +93,7 @@ class SpecificationBuilderContext<T, S extends BaseSelector<T, S>> {\n             return new OrSpecification<>(disjunction.stream()\n                     .map(this::buildAndSpecification)\n                     .toArray(this::createSpecificationArray));\n-        }\n+    }\n     }\n \n     private Specification<T> buildAndSpecification(List<Specification<T>> conjunction) {\n@@ -119,8 +118,7 @@ class SpecificationBuilderContext<T, S extends BaseSelector<T, S>> {\n \n         private final Class<C> targetClass;\n         private final Specification<C> delegate;\n-\n-        private ClassSpecification(Class<C> targetClass, Specification<C> delegate) {\n+private ClassSpecification(Class<C> targetClass, Specification<C> delegate) {\n             this.targetClass = targetClass;\n             this.delegate = delegate;\n         }\n@@ -139,4 +137,4 @@ class SpecificationBuilderContext<T, S extends BaseSelector<T, S>> {\n             return targetClass.getSimpleName() + \"[\" + String.valueOf(delegate) + \"]\";\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "8",
                    "column": "1",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "41",
                    "column": "17",
                    "severity": "warning",
                    "message": "'.' has incorrect indentation level 16, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "42",
                    "column": "40",
                    "severity": "warning",
                    "message": "WhitespaceAround: '-' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "45",
                    "column": "16",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'if' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "46",
                    "column": "20",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 19, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "47",
                    "column": "20",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 19, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "48",
                    "column": "20",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 19, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "49",
                    "column": "20",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 19, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "50",
                    "column": "16",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 15, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "51",
                    "column": "20",
                    "severity": "warning",
                    "message": "'else' child has incorrect indentation level 19, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "51",
                    "column": "93",
                    "severity": "warning",
                    "message": "WhitespaceAround: '+' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "52",
                    "column": "16",
                    "severity": "warning",
                    "message": "'else rcurly' has incorrect indentation level 15, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "57",
                    "column": "9",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'if' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "58",
                    "column": "13",
                    "severity": "warning",
                    "message": "'.' has incorrect indentation level 12, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "59",
                    "column": "32",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 31, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "70",
                    "column": "9",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'if' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "71",
                    "column": "13",
                    "severity": "warning",
                    "message": "'.' has incorrect indentation level 12, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "72",
                    "column": "32",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 31, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "73",
                    "column": "30",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 27, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "74",
                    "column": "32",
                    "severity": "warning",
                    "message": "'.' has incorrect indentation level 31, expected level should be 35.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "81",
                    "column": "13",
                    "severity": "warning",
                    "message": "'.' has incorrect indentation level 12, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "123",
                    "column": "15",
                    "severity": "warning",
                    "message": "WhitespaceAround: '{' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "123",
                    "column": "46",
                    "severity": "warning",
                    "message": "WhitespaceAround: '}' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "127",
                    "column": "1",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "128",
                    "column": "1",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "129",
                    "column": "1",
                    "severity": "warning",
                    "message": "'CTOR_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "129",
                    "column": "1",
                    "severity": "warning",
                    "message": "'ctor def modifier' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "130",
                    "column": "4",
                    "severity": "warning",
                    "message": "'ctor def' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "131",
                    "column": "4",
                    "severity": "warning",
                    "message": "'ctor def' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "132",
                    "column": "1",
                    "severity": "warning",
                    "message": "'ctor def rcurly' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "134",
                    "column": "1",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "135",
                    "column": "4",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "136",
                    "column": "1",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "138",
                    "column": "1",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "140",
                    "column": "4",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "141",
                    "column": "1",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "143",
                    "column": "1",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "145",
                    "column": "4",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "145",
                    "column": "38",
                    "severity": "warning",
                    "message": "WhitespaceAround: '+' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "145",
                    "column": "43",
                    "severity": "warning",
                    "message": "WhitespaceAround: '+' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "145",
                    "column": "69",
                    "severity": "warning",
                    "message": "WhitespaceAround: '+' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "146",
                    "column": "1",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/115/SpecificationBuilderContext.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/codebuff/115/SpecificationBuilderContext.java\nindex 23aeb899291..c057c3d50ef 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/115/SpecificationBuilderContext.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/codebuff/115/SpecificationBuilderContext.java\n@@ -8,9 +8,10 @@\n package org.seedstack.business.internal.specification;\n \n import static com.google.common.base.Preconditions.checkArgument;\n+\n import static com.google.common.base.Preconditions.checkNotNull;\n-import static com.google.common.base.Preconditions.checkState;\n \n+import static com.google.common.base.Preconditions.checkState;\n import java.util.ArrayList;\n import java.util.List;\n import org.seedstack.business.specification.AndSpecification;\n@@ -19,6 +20,7 @@ import org.seedstack.business.specification.Specification;\n import org.seedstack.business.specification.SubstitutableSpecification;\n import org.seedstack.business.specification.dsl.BaseSelector;\n \n+\n class SpecificationBuilderContext<T, S extends BaseSelector<T, S>> {\n \n     private final Class<T> targetClass;\n@@ -34,43 +36,49 @@ class SpecificationBuilderContext<T, S extends BaseSelector<T, S>> {\n     void addSpecification(Specification<T> specification) {\n         checkNotNull(specification, \"Specification cannot be null\");\n         if (mode == Mode.CONJUNCTION) {\n-            checkArgument(!disjunction.isEmpty(), \"Cannot add a conjunction without an existing disjunction\");\n-            List<Specification<T>> lastConjunction = this.disjunction.get(this.disjunction.size() - 1);\n+            checkArgument(! disjunction.isEmpty(), \"Cannot add a conjunction without an existing disjunction\");\n+            List<Specification<T>> lastConjunction = this\n+                .disjunction.get(this\n+                    .disjunction.size()- 1);\n             lastConjunction.add(specification);\n             mode = Mode.NONE;\n-        } else if (mode == Mode.DISJUNCTION) {\n-            List<Specification<T>> newConjunction = new ArrayList<>();\n-            newConjunction.add(specification);\n-            disjunction.add(newConjunction);\n-            mode = Mode.NONE;\n-        } else {\n-            throw new IllegalStateException(\"Cannot add specification, invalid mode \" + mode);\n-        }\n+        } else if(mode == Mode.DISJUNCTION) {\n+                   List<Specification<T>> newConjunction = new ArrayList<>();\n+                   newConjunction.add(specification);\n+                   disjunction.add(newConjunction);\n+                   mode = Mode.NONE;\n+               } else {\n+                   throw new IllegalStateException(\"Cannot add specification, invalid mode \"+ mode);\n+               }\n     }\n \n     void setProperty(String path) {\n         checkNotNull(path, \"Property cannot be null\");\n-        if (this.path != null) {\n-            throw new IllegalStateException(\"A property is already set\");\n+        if(this\n+            .path != null) {\n+                               throw new IllegalStateException(\"A property is already set\");\n         }\n         this.path = path;\n     }\n \n     boolean hasProperty() {\n-        return this.path != null;\n+        return this\n+            .path != null;\n     }\n \n     String pickProperty() {\n-        if (this.path == null) {\n-            throw new IllegalStateException(\"No property has been set\");\n-        }\n-        String ret = this.path;\n+        if(this\n+            .path == null) {\n+                               throw new IllegalStateException(\"No property has been set\");\n+                           } String ret = this\n+                               .path;\n         this.path = null;\n         return ret;\n     }\n \n     void setMode(Mode mode) {\n-        checkState(this.mode == Mode.NONE, \"Cannot change specification mode, it is already set\");\n+        checkState(this\n+            .mode == Mode.NONE, \"Cannot change specification mode, it is already set\");\n         this.mode = mode;\n     }\n \n@@ -87,18 +95,20 @@ class SpecificationBuilderContext<T, S extends BaseSelector<T, S>> {\n     }\n \n     private Specification<T> buildOrSpecification() {\n-        checkState(!disjunction.isEmpty(), \"Illegal empty specification\");\n+        checkState(! disjunction.isEmpty(), \"Illegal empty specification\");\n         if (disjunction.size() == 1) {\n             return buildAndSpecification(disjunction.get(0));\n         } else {\n             return new OrSpecification<>(disjunction.stream()\n-                    .map(this::buildAndSpecification)\n-                    .toArray(this::createSpecificationArray));\n+                .map(this\n+                    :: buildAndSpecification)\n+                .toArray(this\n+                    :: createSpecificationArray));\n         }\n     }\n \n     private Specification<T> buildAndSpecification(List<Specification<T>> conjunction) {\n-        checkState(!conjunction.isEmpty(), \"Illegal empty conjunction\");\n+        checkState(! conjunction.isEmpty(), \"Illegal empty conjunction\");\n         if (conjunction.size() == 1) {\n             return conjunction.get(0);\n         } else {\n@@ -106,37 +116,33 @@ class SpecificationBuilderContext<T, S extends BaseSelector<T, S>> {\n         }\n     }\n \n-    @SuppressWarnings(\"unchecked\")\n-    Specification<T>[] createSpecificationArray(int size) {\n+    @SuppressWarnings(\"unchecked\") Specification<T>[] createSpecificationArray(int size) {\n         return new Specification[size];\n     }\n \n-    enum Mode {\n-        DISJUNCTION, CONJUNCTION, NONE\n-    }\n+    enum Mode {DISJUNCTION, CONJUNCTION, NONE}\n \n     static class ClassSpecification<C> implements SubstitutableSpecification<C> {\n \n-        private final Class<C> targetClass;\n-        private final Specification<C> delegate;\n-\n-        private ClassSpecification(Class<C> targetClass, Specification<C> delegate) {\n-            this.targetClass = targetClass;\n-            this.delegate = delegate;\n-        }\n+private final Class<C> targetClass;\n+private final Specification<C> delegate;\n+private ClassSpecification(Class<C> targetClass, Specification<C> delegate) {\n+   this.targetClass = targetClass;\n+   this.delegate = delegate;\n+}\n \n-        Class<C> getTargetClass() {\n-            return targetClass;\n-        }\n+Class<C> getTargetClass() {\n+   return targetClass;\n+}\n \n-        @Override\n-        public Specification<C> getSubstitute() {\n-            return delegate;\n-        }\n+@Override\n+public Specification<C> getSubstitute() {\n+   return delegate;\n+}\n \n-        @Override\n-        public String toString() {\n-            return targetClass.getSimpleName() + \"[\" + String.valueOf(delegate) + \"]\";\n-        }\n-    }\n+@Override\n+public String toString() {\n+   return targetClass.getSimpleName()+ \"[\"+ String.valueOf(delegate)+ \"]\";\n }\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 60
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/115/SpecificationBuilderContext.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/styler_random/115/SpecificationBuilderContext.java\nindex 23aeb899291..702ec252233 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/115/SpecificationBuilderContext.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/styler_random/115/SpecificationBuilderContext.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.business.internal.specification;\n \n import static com.google.common.base.Preconditions.checkArgument;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/115/SpecificationBuilderContext.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/styler_three_grams/115/SpecificationBuilderContext.java\nindex 23aeb899291..702ec252233 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/115/SpecificationBuilderContext.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/styler_three_grams/115/SpecificationBuilderContext.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.business.internal.specification;\n \n import static com.google.common.base.Preconditions.checkArgument;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
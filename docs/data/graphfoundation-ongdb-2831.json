{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2831",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "96",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "13",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "14",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "144",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2831/SafeLifecycle.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2831/SafeLifecycle.java\nindex f144e90255a..00600fb6205 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2831/SafeLifecycle.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2831/SafeLifecycle.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.lifecycle;\n \n import static org.neo4j.kernel.lifecycle.SafeLifecycle.State.HALT;\n@@ -88,108 +89,107 @@ import static org.neo4j.kernel.lifecycle.SafeLifecycle.State.RUN;\n  */\n public abstract class SafeLifecycle implements Lifecycle\n {\n-    private State state;\n-\n-    protected SafeLifecycle()\n-    {\n-        this( PRE );\n-    }\n-\n-    SafeLifecycle( State state )\n-    {\n-        this.state = state;\n-    }\n-\n-    /**\n-     * @param expected The expected from state.\n-     * @param to The to state.\n-     * @param op The state transition operation.\n-     * @param force Causes the state to be updated regardless of if the operation throws.\n-     * @throws Throwable Issues.\n-     */\n-    private void transition( State expected, State to, Operation op, boolean force ) throws Throwable\n-    {\n-        if ( state != expected )\n-        {\n-            throw new IllegalStateException( String.format( \"Expected %s but was %s\", expected, state ) );\n-        }\n-\n-        if ( force )\n-        {\n-            state = to;\n-            op.run();\n-        }\n-        else\n-        {\n-            op.run();\n-            state = to;\n-        }\n-    }\n-\n-    @Override\n-    public final synchronized void init() throws Throwable\n-    {\n-        transition( PRE, IDLE, this::init0, false );\n-    }\n-\n-    @Override\n-    public final synchronized void start() throws Throwable\n-    {\n-        transition( IDLE, RUN, this::start0, false );\n-    }\n-\n-    @Override\n-    public final synchronized void stop() throws Throwable\n-    {\n-        if ( state == IDLE )\n-        {\n-            return;\n-        }\n-        transition( RUN, IDLE, this::stop0, true );\n-    }\n-\n-    @Override\n-    public final synchronized void shutdown() throws Throwable\n-    {\n-        if ( state == PRE )\n-        {\n-            state = HALT;\n-            return;\n-        }\n-        transition( IDLE, HALT, this::shutdown0, true );\n-    }\n-\n-    public void init0() throws Throwable\n-    {\n-    }\n-\n-    public void start0() throws Throwable\n-    {\n-    }\n-\n-    public void stop0() throws Throwable\n+  private State state;\n+\n+  protected SafeLifecycle()\n+  {\n+    this(PRE);\n+  }\n+\n+  SafeLifecycle(State state)\n+  {\n+    this.state = state;\n+  }\n+\n+  /**\n+   * @param expected The expected from state.\n+   * @param to       The to state.\n+   * @param op       The state transition operation.\n+   * @param force    Causes the state to be updated regardless of if the operation throws.\n+   * @throws Throwable Issues.\n+   */\n+  private void transition(State expected, State to, Operation op, boolean force) throws Throwable\n+  {\n+    if (state != expected)\n     {\n+      throw new IllegalStateException(String.format(\"Expected %s but was %s\", expected, state));\n     }\n \n-    public void shutdown0() throws Throwable\n+    if (force)\n     {\n-    }\n-\n-    public State state()\n+      state = to;\n+      op.run();\n+    } else\n     {\n-        return state;\n+      op.run();\n+      state = to;\n     }\n-\n-    enum State\n+  }\n+\n+  @Override\n+  public final synchronized void init() throws Throwable\n+  {\n+    transition(PRE, IDLE, this::init0, false);\n+  }\n+\n+  @Override\n+  public final synchronized void start() throws Throwable\n+  {\n+    transition(IDLE, RUN, this::start0, false);\n+  }\n+\n+  @Override\n+  public final synchronized void stop() throws Throwable\n+  {\n+    if (state == IDLE)\n     {\n-        PRE,\n-        IDLE,\n-        RUN,\n-        HALT\n+      return;\n     }\n+    transition(RUN, IDLE, this::stop0, true);\n+  }\n \n-    interface Operation\n+  @Override\n+  public final synchronized void shutdown() throws Throwable\n+  {\n+    if (state == PRE)\n     {\n-        void run() throws Throwable;\n+      state = HALT;\n+      return;\n     }\n+    transition(IDLE, HALT, this::shutdown0, true);\n+  }\n+\n+  public void init0() throws Throwable\n+  {\n+  }\n+\n+  public void start0() throws Throwable\n+  {\n+  }\n+\n+  public void stop0() throws Throwable\n+  {\n+  }\n+\n+  public void shutdown0() throws Throwable\n+  {\n+  }\n+\n+  public State state()\n+  {\n+    return state;\n+  }\n+\n+  enum State\n+  {\n+    PRE,\n+    IDLE,\n+    RUN,\n+    HALT\n+  }\n+\n+  interface Operation\n+  {\n+    void run() throws Throwable;\n+  }\n }\n",
            "diff_size": 154
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2831/SafeLifecycle.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2831/SafeLifecycle.java\nindex f144e90255a..8544b71c3d1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2831/SafeLifecycle.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2831/SafeLifecycle.java\n@@ -145,7 +145,8 @@ public abstract class SafeLifecycle implements Lifecycle\n         {\n             return;\n         }\n-        transition( RUN, IDLE, this::stop0, true );\n+\n+transition( RUN, IDLE, this::stop0, true );\n     }\n \n     @Override\n@@ -156,7 +157,8 @@ public abstract class SafeLifecycle implements Lifecycle\n             state = HALT;\n             return;\n         }\n-        transition( IDLE, HALT, this::shutdown0, true );\n+\n+transition( IDLE, HALT, this::shutdown0, true );\n     }\n \n     public void init0() throws Throwable\n@@ -182,9 +184,7 @@ public abstract class SafeLifecycle implements Lifecycle\n \n     enum State\n     {\n-        PRE,\n-        IDLE,\n-        RUN,\n+        PRE, IDLE, RUN,\n         HALT\n     }\n \n@@ -192,4 +192,4 @@ public abstract class SafeLifecycle implements Lifecycle\n     {\n         void run() throws Throwable;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
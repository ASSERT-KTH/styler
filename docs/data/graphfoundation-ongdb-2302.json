{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2302",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "32",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "32",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2302/DurationArray.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2302/DurationArray.java\nindex fcfe46c4591..dfa3ad18491 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2302/DurationArray.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2302/DurationArray.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.values.storable;\n \n import java.util.Arrays;\n@@ -26,70 +27,70 @@ import org.neo4j.values.ValueMapper;\n \n public class DurationArray extends NonPrimitiveArray<DurationValue>\n {\n-    private final DurationValue[] value;\n+  private final DurationValue[] value;\n \n-    DurationArray( DurationValue[] value )\n-    {\n-        assert value != null;\n-        this.value = value;\n-    }\n+  DurationArray(DurationValue[] value)\n+  {\n+    assert value != null;\n+    this.value = value;\n+  }\n \n-    @Override\n-    protected DurationValue[] value()\n-    {\n-        return value;\n-    }\n+  @Override\n+  protected DurationValue[] value()\n+  {\n+    return value;\n+  }\n \n-    @Override\n-    public <T> T map( ValueMapper<T> mapper )\n-    {\n-        return mapper.mapDurationArray( this );\n-    }\n+  @Override\n+  public <T> T map(ValueMapper<T> mapper)\n+  {\n+    return mapper.mapDurationArray(this);\n+  }\n \n-    @Override\n-    public boolean equals( Value other )\n-    {\n-        return other.equals( value );\n-    }\n+  @Override\n+  public boolean equals(Value other)\n+  {\n+    return other.equals(value);\n+  }\n \n-    @Override\n-    public boolean equals( DurationValue[] x )\n-    {\n-        return Arrays.equals( value, x);\n-    }\n+  @Override\n+  public boolean equals(DurationValue[] x)\n+  {\n+    return Arrays.equals(value, x);\n+  }\n \n-    @Override\n-    public <E extends Exception> void writeTo( ValueWriter<E> writer ) throws E\n+  @Override\n+  public <E extends Exception> void writeTo(ValueWriter<E> writer) throws E\n+  {\n+    writer.beginArray(value.length, ValueWriter.ArrayType.DURATION);\n+    for (DurationValue x : value)\n     {\n-        writer.beginArray( value.length, ValueWriter.ArrayType.DURATION );\n-        for ( DurationValue x : value )\n-        {\n-            x.writeTo( writer );\n-        }\n-        writer.endArray();\n+      x.writeTo(writer);\n     }\n+    writer.endArray();\n+  }\n \n-    @Override\n-    public AnyValue value( int offset )\n-    {\n-        return Values.durationValue( value[offset] );\n-    }\n+  @Override\n+  public AnyValue value(int offset)\n+  {\n+    return Values.durationValue(value[offset]);\n+  }\n \n-    @Override\n-    public ValueGroup valueGroup()\n-    {\n-        return ValueGroup.DURATION_ARRAY;\n-    }\n+  @Override\n+  public ValueGroup valueGroup()\n+  {\n+    return ValueGroup.DURATION_ARRAY;\n+  }\n \n-    @Override\n-    int unsafeCompareTo( Value otherValue )\n-    {\n-        return compareToNonPrimitiveArray( (DurationArray) otherValue );\n-    }\n+  @Override\n+  int unsafeCompareTo(Value otherValue)\n+  {\n+    return compareToNonPrimitiveArray((DurationArray) otherValue);\n+  }\n \n-    @Override\n-    public String getTypeName()\n-    {\n-        return \"DurationArray\";\n-    }\n+  @Override\n+  public String getTypeName()\n+  {\n+    return \"DurationArray\";\n+  }\n }\n",
            "diff_size": 60
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2302/DurationArray.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2302/DurationArray.java\nindex fcfe46c4591..3e59cb1beff 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2302/DurationArray.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2302/DurationArray.java\n@@ -55,7 +55,7 @@ public class DurationArray extends NonPrimitiveArray<DurationValue>\n     @Override\n     public boolean equals( DurationValue[] x )\n     {\n-        return Arrays.equals( value, x);\n+        return Arrays.equals( value, x );\n     }\n \n     @Override\n@@ -92,4 +92,4 @@ public class DurationArray extends NonPrimitiveArray<DurationValue>\n     {\n         return \"DurationArray\";\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "64",
                    "column": "9",
                    "severity": "error",
                    "message": "'for' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "64",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2302/DurationArray.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/2302/DurationArray.java\nindex fcfe46c4591..269ff29b9df 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2302/DurationArray.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/2302/DurationArray.java\n@@ -20,7 +20,6 @@\n package org.neo4j.values.storable;\n \n import java.util.Arrays;\n-\n import org.neo4j.values.AnyValue;\n import org.neo4j.values.ValueMapper;\n \n@@ -55,24 +54,25 @@ public class DurationArray extends NonPrimitiveArray<DurationValue>\n     @Override\n     public boolean equals( DurationValue[] x )\n     {\n-        return Arrays.equals( value, x);\n+        return Arrays.equals( value, x );\n     }\n \n     @Override\n     public <E extends Exception> void writeTo( ValueWriter<E> writer ) throws E\n     {\n         writer.beginArray( value.length, ValueWriter.ArrayType.DURATION );\n-        for ( DurationValue x : value )\n+        for( DurationValue x : value)\n         {\n             x.writeTo( writer );\n         }\n+\n         writer.endArray();\n     }\n \n     @Override\n     public AnyValue value( int offset )\n     {\n-        return Values.durationValue( value[offset] );\n+        return Values.durationValue( value[ offset] );\n     }\n \n     @Override\n@@ -92,4 +92,4 @@ public class DurationArray extends NonPrimitiveArray<DurationValue>\n     {\n         return \"DurationArray\";\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3112",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "47",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3112/OptionalNamedArgWithMetadata.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3112/OptionalNamedArgWithMetadata.java\nindex adef2949b79..1aaabaed9aa 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3112/OptionalNamedArgWithMetadata.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3112/OptionalNamedArgWithMetadata.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.commandline.arguments;\n \n import java.util.Collection;\n@@ -30,51 +31,51 @@ import static org.neo4j.kernel.impl.util.Converters.withDefault;\n /**\n  * Some arguments can have a variable name, such as in neo4j-admin import where the `--relationships` argument may\n  * have the following form:\n- *\n+ * <p>\n  * --relationships:MYTYPE=file.csv\n- *\n+ * <p>\n  * or the `--nodes` argument which can be\n- *\n+ * <p>\n  * --nodes:TYPE1:TYPE2=file.csv\n- *\n+ * <p>\n  * This is only used for validation, not to actually read the metadata. See ImportCommand.java.\n  */\n public class OptionalNamedArgWithMetadata extends OptionalNamedArg implements NamedArgument\n {\n-    protected final String exampleMetaData;\n+  protected final String exampleMetaData;\n \n-    public OptionalNamedArgWithMetadata( String name, String exampleMetaData, String exampleValue, String defaultValue,\n-            String description )\n-    {\n-        super( name, exampleValue, defaultValue, description );\n-        this.exampleMetaData = exampleMetaData;\n-    }\n+  public OptionalNamedArgWithMetadata(String name, String exampleMetaData, String exampleValue, String defaultValue,\n+                                      String description)\n+  {\n+    super(name, exampleValue, defaultValue, description);\n+    this.exampleMetaData = exampleMetaData;\n+  }\n \n-    @Override\n-    public String optionsListing()\n-    {\n-        return String.format( \"--%s[%s]=<%s>\", name, exampleMetaData, exampleValue );\n-    }\n+  @Override\n+  public String optionsListing()\n+  {\n+    return String.format(\"--%s[%s]=<%s>\", name, exampleMetaData, exampleValue);\n+  }\n \n-    @Override\n-    public String usage()\n-    {\n-        return String.format( \"[--%s[%s]=<%s>]\", name, exampleMetaData, exampleValue );\n-    }\n+  @Override\n+  public String usage()\n+  {\n+    return String.format(\"[--%s[%s]=<%s>]\", name, exampleMetaData, exampleValue);\n+  }\n \n-    @Override\n-    public String parse( Args parsedArgs )\n-    {\n-        throw new RuntimeException( \"Arguments with metadata only support multiple value parsing\" );\n-    }\n+  @Override\n+  public String parse(Args parsedArgs)\n+  {\n+    throw new RuntimeException(\"Arguments with metadata only support multiple value parsing\");\n+  }\n \n-    @Override\n-    public Collection<String> parseMultiple( Args parsedArgs )\n-    {\n-        Collection<Args.Option<String>> vals =\n-                parsedArgs.interpretOptionsWithMetadata( name, withDefault( defaultValue ), identity() );\n+  @Override\n+  public Collection<String> parseMultiple(Args parsedArgs)\n+  {\n+    Collection<Args.Option<String>> vals =\n+        parsedArgs.interpretOptionsWithMetadata(name, withDefault(defaultValue), identity());\n \n-        return vals.stream().map( Args.Option::value ).collect( Collectors.toList() );\n-    }\n+    return vals.stream().map(Args.Option::value).collect(Collectors.toList());\n+  }\n }\n \n",
            "diff_size": 34
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3112/OptionalNamedArgWithMetadata.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3112/OptionalNamedArgWithMetadata.java\nindex adef2949b79..ba2bbe185fe 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3112/OptionalNamedArgWithMetadata.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3112/OptionalNamedArgWithMetadata.java\n@@ -71,10 +71,7 @@ public class OptionalNamedArgWithMetadata extends OptionalNamedArg implements Na\n     @Override\n     public Collection<String> parseMultiple( Args parsedArgs )\n     {\n-        Collection<Args.Option<String>> vals =\n-                parsedArgs.interpretOptionsWithMetadata( name, withDefault( defaultValue ), identity() );\n-\n-        return vals.stream().map( Args.Option::value ).collect( Collectors.toList() );\n+        Collection<Args.Option<String>> vals = parsedArgs.interpretOptionsWithMetadata( name, withDefault( defaultValue ), identity() );\n+return vals.stream().map( Args.Option::value ).collect( Collectors.toList() );\n     }\n-}\n-\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
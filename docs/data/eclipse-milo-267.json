{
    "project_name": "eclipse-milo",
    "error_id": "267",
    "information": {
        "errors": [
            {
                "line": "1556",
                "column": "32",
                "severity": "error",
                "message": "'}' at column 32 should be alone on a line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
            }
        ]
    },
    "source_code": "            private UInteger nodeClassMask = uint(0xFF);\n\n            private Builder() {}\n\n            private Builder(BrowseOptions browseOptions) {\n                this.browseDirection = browseOptions.getBrowseDirection();",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1556",
                    "column": "32",
                    "severity": "error",
                    "message": "'}' at column 32 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/267/AddressSpace.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/intellij/267/AddressSpace.java\nindex fc62ccec8f1..82de9499bf3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/267/AddressSpace.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/intellij/267/AddressSpace.java\n@@ -1553,7 +1553,8 @@ public class AddressSpace {\n             private boolean includeSubtypes = true;\n             private UInteger nodeClassMask = uint(0xFF);\n \n-            private Builder() {}\n+            private Builder() {\n+            }\n \n             private Builder(BrowseOptions browseOptions) {\n                 this.browseDirection = browseOptions.getBrowseDirection();\n",
            "diff_size": 2
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1556",
                    "column": "32",
                    "severity": "error",
                    "message": "'}' at column 32 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/267/AddressSpace.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/naturalize/267/AddressSpace.java\nindex fc62ccec8f1..fadaad12881 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/267/AddressSpace.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/naturalize/267/AddressSpace.java\n@@ -1602,4 +1602,4 @@ public class AddressSpace {\n \n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "114",
                    "severity": "error",
                    "message": "'lambda arguments' has incorrect indentation level 23, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "115",
                    "severity": "error",
                    "message": "'if' has incorrect indentation level 16, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "116",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 20, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "117",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 16, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "118",
                    "severity": "error",
                    "message": "'block rcurly' has incorrect indentation level 12, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "619",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 83, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "619",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 130).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "621",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 83, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "621",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 130).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "623",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 83, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "623",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 148).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "625",
                    "severity": "error",
                    "message": "'switch' has incorrect indentation level 83, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "626",
                    "severity": "error",
                    "message": "'case' child has incorrect indentation level 87, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "627",
                    "severity": "error",
                    "message": "'case' child has incorrect indentation level 87, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "628",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 91, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "628",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 186).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "629",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 128).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "630",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 132).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "631",
                    "severity": "error",
                    "message": "'if' has incorrect indentation level 95, expected level should be 99.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "631",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 131).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "632",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 99, expected level should be 103.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "632",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 157).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "633",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 95, expected level should be 99.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "634",
                    "severity": "error",
                    "message": "'else' child has incorrect indentation level 99, expected level should be 103.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "634",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 159).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "635",
                    "severity": "error",
                    "message": "'else rcurly' has incorrect indentation level 95, expected level should be 99.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "636",
                    "severity": "error",
                    "message": "'block rcurly' has incorrect indentation level 151, expected level should be 95.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "636",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 152).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "638",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 91, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "638",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 130).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "639",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 112, expected level should be 95.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "639",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 197).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "640",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 112, expected level should be 95.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "640",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 124).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "642",
                    "severity": "error",
                    "message": "'block rcurly' has incorrect indentation level 87, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "644",
                    "severity": "error",
                    "message": "'case' child has incorrect indentation level 87, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "645",
                    "severity": "error",
                    "message": "Comment has incorrect indentation level 28, expected is 91, indentation should be the same level as line 646.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "646",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 91, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "646",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 152).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "647",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 142).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "648",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 209).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "649",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 136).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "650",
                    "severity": "error",
                    "message": "'block rcurly' has incorrect indentation level 91, expected level should be 120.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "651",
                    "severity": "error",
                    "message": "'block rcurly' has incorrect indentation level 87, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "652",
                    "severity": "error",
                    "message": "'switch rcurly' has incorrect indentation level 83, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "653",
                    "severity": "error",
                    "message": "'block rcurly' has incorrect indentation level 60, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "667",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 46, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "669",
                    "severity": "error",
                    "message": "'for' has incorrect indentation level 46, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "670",
                    "severity": "error",
                    "message": "'for' child has incorrect indentation level 50, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "672",
                    "severity": "error",
                    "message": "'if' has incorrect indentation level 50, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "673",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 54, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "674",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 50, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "675",
                    "severity": "error",
                    "message": "'for rcurly' has incorrect indentation level 46, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "677",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 46, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "681",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 126).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "719",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 207).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "720",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 144).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "788",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 133).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "792",
                    "severity": "error",
                    "message": "'if' has incorrect indentation level 19, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "793",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 23, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "794",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 175).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "795",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 129).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "797",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 23, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "798",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 19, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "799",
                    "severity": "error",
                    "message": "'else' child has incorrect indentation level 23, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "800",
                    "severity": "error",
                    "message": "'else rcurly' has incorrect indentation level 19, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "820",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 130).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "863",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 136).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "864",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 126).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "883",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 132).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "884",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 123).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "903",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 132).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "904",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 123).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "910",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 82, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "910",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 130).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "912",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 82, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "912",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 136).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "914",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 82, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "914",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 153).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "916",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 82, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "916",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 141).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "918",
                    "severity": "error",
                    "message": "'try' has incorrect indentation level 82, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "919",
                    "severity": "error",
                    "message": "'try' child has incorrect indentation level 86, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "919",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 163).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "921",
                    "severity": "error",
                    "message": "'try' child has incorrect indentation level 86, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "921",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 124).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "922",
                    "severity": "error",
                    "message": "'try' child has incorrect indentation level 86, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "923",
                    "severity": "error",
                    "message": "'try rcurly' has incorrect indentation level 82, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "924",
                    "severity": "error",
                    "message": "'catch' child has incorrect indentation level 86, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "925",
                    "severity": "error",
                    "message": "'catch rcurly' has incorrect indentation level 82, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "929",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 140).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "930",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 128).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "949",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 146).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "950",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 131).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "969",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 136).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "970",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 125).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "976",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 82, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "976",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 130).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "978",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 82, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "978",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 136).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "980",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 82, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "980",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 153).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "982",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 82, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "982",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 141).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "984",
                    "severity": "error",
                    "message": "'try' has incorrect indentation level 82, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "985",
                    "severity": "error",
                    "message": "'try' child has incorrect indentation level 86, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "985",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 167).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "987",
                    "severity": "error",
                    "message": "'try' child has incorrect indentation level 86, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "987",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 124).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "988",
                    "severity": "error",
                    "message": "'try' child has incorrect indentation level 86, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "989",
                    "severity": "error",
                    "message": "'try rcurly' has incorrect indentation level 82, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "990",
                    "severity": "error",
                    "message": "'catch' child has incorrect indentation level 86, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "991",
                    "severity": "error",
                    "message": "'catch rcurly' has incorrect indentation level 82, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "995",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 144).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "996",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 130).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "1015",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 128).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "1016",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "1036",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 139).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "1054",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 132).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "1070",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 141).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "1089",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 128).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "1125",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 132).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "1138",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 128).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "1157",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 143).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "1176",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 136).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "1192",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 143).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "1198",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "1211",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 142).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "1250",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 136).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "1263",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 132).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "1298",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 138).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "1299",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 130).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "1336",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 140).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "1395",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 124).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/267/AddressSpace.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/codebuff/267/AddressSpace.java\nindex fc62ccec8f1..b5a9e6ca9bb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/267/AddressSpace.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/codebuff/267/AddressSpace.java\n@@ -21,7 +21,6 @@ import java.util.concurrent.ExecutionException;\n import java.util.function.Consumer;\n import java.util.stream.Collectors;\n import javax.annotation.Nullable;\n-\n import com.google.common.base.Preconditions;\n import com.google.common.collect.Sets;\n import org.eclipse.milo.opcua.sdk.client.ObjectTypeManager.ObjectNodeConstructor;\n@@ -86,12 +85,12 @@ public class AddressSpace {\n      * @return a {@link UaNode} instance for the Node identified by {@code nodeId}.\n      * @throws UaException if an error occurs while creating the Node.\n      */\n+\n     public UaNode getNode(NodeId nodeId) throws UaException {\n         try {\n             return getNodeAsync(nodeId).get();\n         } catch (ExecutionException | InterruptedException e) {\n-            throw UaException.extract(e)\n-                .orElse(new UaException(StatusCodes.Bad_UnexpectedError, e));\n+            throw UaException.extract(e).orElse(new UaException(StatusCodes.Bad_UnexpectedError, e));\n         }\n     }\n \n@@ -104,13 +103,15 @@ public class AddressSpace {\n      * @return a CompletableFuture that completes successfully with the UaNode instance or\n      * completes exceptionally if a service-level error occurs.\n      */\n+\n     public CompletableFuture<? extends UaNode> getNodeAsync(NodeId nodeId) {\n         UaNode cachedNode = nodeCache.getIfPresent(nodeId);\n \n         if (cachedNode != null) {\n             return completedFuture(cachedNode);\n         } else {\n-            return createNode(nodeId).whenComplete((node, ex) -> {\n+            return createNode(nodeId).whenComplete(\n+                       (node, ex) -> {\n                 if (node != null) {\n                     nodeCache.put(nodeId, node);\n                 }\n@@ -129,12 +130,12 @@ public class AddressSpace {\n      * @return a {@link UaObjectNode} instance for the ObjectNode identified by {@code nodeId}.\n      * @throws UaException if an error occurs while creating the ObjectNode.\n      */\n+\n     public UaObjectNode getObjectNode(NodeId nodeId) throws UaException {\n         try {\n             return getObjectNodeAsync(nodeId).get();\n         } catch (ExecutionException | InterruptedException e) {\n-            throw UaException.extract(e)\n-                .orElse(new UaException(StatusCodes.Bad_UnexpectedError, e));\n+            throw UaException.extract(e).orElse(new UaException(StatusCodes.Bad_UnexpectedError, e));\n         }\n     }\n \n@@ -150,12 +151,12 @@ public class AddressSpace {\n      * @return a {@link UaObjectNode} instance for the ObjectNode identified by {@code nodeId}.\n      * @throws UaException if an error occurs while creating the ObjectNode.\n      */\n+\n     public UaObjectNode getObjectNode(NodeId nodeId, NodeId typeDefinitionId) throws UaException {\n         try {\n             return getObjectNodeAsync(nodeId, typeDefinitionId).get();\n         } catch (ExecutionException | InterruptedException e) {\n-            throw UaException.extract(e)\n-                .orElse(new UaException(StatusCodes.Bad_UnexpectedError, e));\n+            throw UaException.extract(e).orElse(new UaException(StatusCodes.Bad_UnexpectedError, e));\n         }\n     }\n \n@@ -173,6 +174,7 @@ public class AddressSpace {\n      * for the ObjectNode identified by {@code nodeId} or completes exceptionally if an error\n      * occurs creating the ObjectNode.\n      */\n+\n     public CompletableFuture<UaObjectNode> getObjectNodeAsync(NodeId nodeId) {\n         UaNode cachedNode = nodeCache.getIfPresent(nodeId);\n \n@@ -180,7 +182,6 @@ public class AddressSpace {\n             return completedFuture((UaObjectNode) cachedNode);\n         } else {\n             CompletableFuture<NodeId> typeDefinitionFuture = readTypeDefinition(nodeId);\n-\n             return typeDefinitionFuture.thenCompose(typeDefinitionId -> getObjectNodeAsync(nodeId, typeDefinitionId));\n         }\n     }\n@@ -200,6 +201,7 @@ public class AddressSpace {\n      * for the ObjectNode identified by {@code nodeId} or completes exceptionally if an error\n      * occurs creating the ObjectNode.\n      */\n+\n     public CompletableFuture<UaObjectNode> getObjectNodeAsync(NodeId nodeId, NodeId typeDefinitionId) {\n         UaNode cachedNode = nodeCache.getIfPresent(nodeId);\n \n@@ -207,7 +209,6 @@ public class AddressSpace {\n             return completedFuture((UaObjectNode) cachedNode);\n         } else {\n             CompletableFuture<ReadResponse> future = readAttributes(nodeId, AttributeId.OBJECT_ATTRIBUTES);\n-\n             return future.thenCompose(response -> {\n                 List<DataValue> attributeValues = l(response.getResults());\n \n@@ -215,7 +216,6 @@ public class AddressSpace {\n                     UaObjectNode node = newObjectNode(nodeId, typeDefinitionId, attributeValues);\n \n                     nodeCache.put(node.getNodeId(), node);\n-\n                     return completedFuture(node);\n                 } catch (UaException e) {\n                     return failedFuture(e);\n@@ -235,12 +235,12 @@ public class AddressSpace {\n      * @return a {@link UaVariableNode} instance for the VariableNode identified by {@code nodeId}.\n      * @throws UaException if an error occurs while creating the VariableNode.\n      */\n+\n     public UaVariableNode getVariableNode(NodeId nodeId) throws UaException {\n         try {\n             return getVariableNodeAsync(nodeId).get();\n         } catch (ExecutionException | InterruptedException e) {\n-            throw UaException.extract(e)\n-                .orElse(new UaException(StatusCodes.Bad_UnexpectedError, e));\n+            throw UaException.extract(e).orElse(new UaException(StatusCodes.Bad_UnexpectedError, e));\n         }\n     }\n \n@@ -256,12 +256,12 @@ public class AddressSpace {\n      * @return a {@link UaVariableNode} instance for the VariableNode identified by {@code nodeId}.\n      * @throws UaException if an error occurs while creating the VariableNode.\n      */\n+\n     public UaVariableNode getVariableNode(NodeId nodeId, NodeId typeDefinitionId) throws UaException {\n         try {\n             return getVariableNodeAsync(nodeId, typeDefinitionId).get();\n         } catch (ExecutionException | InterruptedException e) {\n-            throw UaException.extract(e)\n-                .orElse(new UaException(StatusCodes.Bad_UnexpectedError, e));\n+            throw UaException.extract(e).orElse(new UaException(StatusCodes.Bad_UnexpectedError, e));\n         }\n     }\n \n@@ -279,6 +279,7 @@ public class AddressSpace {\n      * instance for the VariableNode identified by {@code nodeId} or completes exceptionally if an\n      * error occurs while creating the VariableNode.\n      */\n+\n     public CompletableFuture<UaVariableNode> getVariableNodeAsync(NodeId nodeId) {\n         UaNode cachedNode = nodeCache.getIfPresent(nodeId);\n \n@@ -286,7 +287,6 @@ public class AddressSpace {\n             return completedFuture((UaVariableNode) cachedNode);\n         } else {\n             CompletableFuture<NodeId> typeDefinitionFuture = readTypeDefinition(nodeId);\n-\n             return typeDefinitionFuture.thenCompose(typeDefinitionId -> getVariableNodeAsync(nodeId, typeDefinitionId));\n         }\n     }\n@@ -306,6 +306,7 @@ public class AddressSpace {\n      * instance for the VariableNode identified by {@code nodeId} or completes exceptionally if an\n      * error occurs while creating the VariableNode.\n      */\n+\n     public CompletableFuture<UaVariableNode> getVariableNodeAsync(NodeId nodeId, NodeId typeDefinitionId) {\n         UaNode cachedNode = nodeCache.getIfPresent(nodeId);\n \n@@ -313,7 +314,6 @@ public class AddressSpace {\n             return completedFuture((UaVariableNode) cachedNode);\n         } else {\n             CompletableFuture<ReadResponse> future = readAttributes(nodeId, AttributeId.VARIABLE_ATTRIBUTES);\n-\n             return future.thenCompose(response -> {\n                 List<DataValue> attributeValues = l(response.getResults());\n \n@@ -321,7 +321,6 @@ public class AddressSpace {\n                     UaVariableNode node = newVariableNode(nodeId, typeDefinitionId, attributeValues);\n \n                     nodeCache.put(node.getNodeId(), node);\n-\n                     return completedFuture(node);\n                 } catch (UaException e) {\n                     return failedFuture(e);\n@@ -341,6 +340,7 @@ public class AddressSpace {\n      * @see #modifyBrowseOptions(Consumer)\n      * @see #setBrowseOptions(BrowseOptions)\n      */\n+\n     public List<ReferenceDescription> browse(UaNode node) throws UaException {\n         return browse(node, getBrowseOptions());\n     }\n@@ -353,12 +353,12 @@ public class AddressSpace {\n      * @return a List of {@link ReferenceDescription}s.\n      * @throws UaException if a service-level error occurs.\n      */\n+\n     public List<ReferenceDescription> browse(UaNode node, BrowseOptions browseOptions) throws UaException {\n         try {\n             return browseAsync(node, browseOptions).get();\n         } catch (ExecutionException | InterruptedException e) {\n-            throw UaException.extract(e)\n-                .orElse(new UaException(StatusCodes.Bad_UnexpectedError, e));\n+            throw UaException.extract(e).orElse(new UaException(StatusCodes.Bad_UnexpectedError, e));\n         }\n     }\n \n@@ -373,6 +373,7 @@ public class AddressSpace {\n      * @see #modifyBrowseOptions(Consumer)\n      * @see #setBrowseOptions(BrowseOptions)\n      */\n+\n     public List<ReferenceDescription> browse(NodeId nodeId) throws UaException {\n         return browse(nodeId, getBrowseOptions());\n     }\n@@ -385,12 +386,12 @@ public class AddressSpace {\n      * @return a List of {@link ReferenceDescription}s.\n      * @throws UaException if a service-level error occurs.\n      */\n+\n     public List<ReferenceDescription> browse(NodeId nodeId, BrowseOptions browseOptions) throws UaException {\n         try {\n             return browseAsync(nodeId, browseOptions).get();\n         } catch (ExecutionException | InterruptedException e) {\n-            throw UaException.extract(e)\n-                .orElse(new UaException(StatusCodes.Bad_UnexpectedError, e));\n+            throw UaException.extract(e).orElse(new UaException(StatusCodes.Bad_UnexpectedError, e));\n         }\n     }\n \n@@ -407,6 +408,7 @@ public class AddressSpace {\n      * @see #modifyBrowseOptions(Consumer)\n      * @see #setBrowseOptions(BrowseOptions)\n      */\n+\n     public CompletableFuture<List<ReferenceDescription>> browseAsync(UaNode node) {\n         return browseAsync(node.getNodeId(), getBrowseOptions());\n     }\n@@ -421,6 +423,7 @@ public class AddressSpace {\n      * @return a CompletableFuture that completes successfully with the List of references or\n      * completes exceptionally if a service-level error occurs.\n      */\n+\n     public CompletableFuture<List<ReferenceDescription>> browseAsync(UaNode node, BrowseOptions browseOptions) {\n         return browseAsync(node.getNodeId(), browseOptions);\n     }\n@@ -438,6 +441,7 @@ public class AddressSpace {\n      * @see #modifyBrowseOptions(Consumer)\n      * @see #setBrowseOptions(BrowseOptions)\n      */\n+\n     public CompletableFuture<List<ReferenceDescription>> browseAsync(NodeId nodeId) {\n         return browseAsync(nodeId, getBrowseOptions());\n     }\n@@ -452,6 +456,7 @@ public class AddressSpace {\n      * @return a CompletableFuture that completes successfully with the List of references or\n      * completes exceptionally if a service-level error occurs.\n      */\n+\n     public CompletableFuture<List<ReferenceDescription>> browseAsync(NodeId nodeId, BrowseOptions browseOptions) {\n         BrowseDescription browseDescription = new BrowseDescription(\n             nodeId,\n@@ -461,7 +466,6 @@ public class AddressSpace {\n             browseOptions.getNodeClassMask(),\n             uint(BrowseResultMask.All.getValue())\n         );\n-\n         return BrowseHelper.browse(client, browseDescription);\n     }\n \n@@ -477,6 +481,7 @@ public class AddressSpace {\n      * @see #modifyBrowseOptions(Consumer)\n      * @see #setBrowseOptions(BrowseOptions)\n      */\n+\n     public List<? extends UaNode> browseNodes(UaNode node) throws UaException {\n         return browseNodes(node, getBrowseOptions());\n     }\n@@ -489,12 +494,12 @@ public class AddressSpace {\n      * @return a List of {@link UaNode}s referenced by {@code node} given {@code browseOptions}.\n      * @throws UaException if an error occurs while browsing or creating Nodes.\n      */\n+\n     public List<? extends UaNode> browseNodes(UaNode node, BrowseOptions browseOptions) throws UaException {\n         try {\n             return browseNodesAsync(node, browseOptions).get();\n         } catch (ExecutionException | InterruptedException e) {\n-            throw UaException.extract(e)\n-                .orElse(new UaException(StatusCodes.Bad_UnexpectedError, e));\n+            throw UaException.extract(e).orElse(new UaException(StatusCodes.Bad_UnexpectedError, e));\n         }\n     }\n \n@@ -510,6 +515,7 @@ public class AddressSpace {\n      * @see #modifyBrowseOptions(Consumer)\n      * @see #setBrowseOptions(BrowseOptions)\n      */\n+\n     public List<? extends UaNode> browseNodes(NodeId nodeId) throws UaException {\n         return browseNodes(nodeId, getBrowseOptions());\n     }\n@@ -522,12 +528,12 @@ public class AddressSpace {\n      * @return a List of {@link UaNode}s referenced by {@code nodeId} given {@code browseOptions}.\n      * @throws UaException if an error occurs while browsing or creating Nodes.\n      */\n+\n     public List<? extends UaNode> browseNodes(NodeId nodeId, BrowseOptions browseOptions) throws UaException {\n         try {\n             return browseNodesAsync(nodeId, browseOptions).get();\n         } catch (ExecutionException | InterruptedException e) {\n-            throw UaException.extract(e)\n-                .orElse(new UaException(StatusCodes.Bad_UnexpectedError, e));\n+            throw UaException.extract(e).orElse(new UaException(StatusCodes.Bad_UnexpectedError, e));\n         }\n     }\n \n@@ -545,6 +551,7 @@ public class AddressSpace {\n      * @see #modifyBrowseOptions(Consumer)\n      * @see #setBrowseOptions(BrowseOptions)\n      */\n+\n     public CompletableFuture<List<? extends UaNode>> browseNodesAsync(UaNode node) {\n         return browseNodesAsync(node.getNodeId());\n     }\n@@ -560,6 +567,7 @@ public class AddressSpace {\n      * referenced by {@code node} given the currently configured {@link BrowseOptions} or completes\n      * exceptionally if a service-level error occurs.\n      */\n+\n     public CompletableFuture<List<? extends UaNode>> browseNodesAsync(UaNode node, BrowseOptions browseOptions) {\n         return browseNodesAsync(node.getNodeId(), browseOptions);\n     }\n@@ -578,6 +586,7 @@ public class AddressSpace {\n      * @see #modifyBrowseOptions(Consumer)\n      * @see #setBrowseOptions(BrowseOptions)\n      */\n+\n     public CompletableFuture<List<? extends UaNode>> browseNodesAsync(NodeId nodeId) {\n         return browseNodesAsync(nodeId, getBrowseOptions());\n     }\n@@ -593,6 +602,7 @@ public class AddressSpace {\n      * referenced by {@code node} given the currently configured {@link BrowseOptions} or completes\n      * exceptionally if a service-level error occurs.\n      */\n+\n     public CompletableFuture<List<? extends UaNode>> browseNodesAsync(NodeId nodeId, BrowseOptions browseOptions) {\n         BrowseDescription browseDescription = new BrowseDescription(\n             nodeId,\n@@ -604,78 +614,71 @@ public class AddressSpace {\n         );\n \n         CompletableFuture<List<ReferenceDescription>> browse = BrowseHelper.browse(client, browseDescription);\n-\n         return browse.thenCompose(references -> {\n-            List<CompletableFuture<? extends UaNode>> cfs = references.stream()\n-                .map(reference -> {\n-                    NodeClass nodeClass = reference.getNodeClass();\n-                    ExpandedNodeId xNodeId = reference.getNodeId();\n-                    ExpandedNodeId xTypeDefinitionId = reference.getTypeDefinition();\n-\n-                    switch (nodeClass) {\n-                        case Object:\n-                        case Variable: {\n-                            CompletableFuture<CompletableFuture<? extends UaNode>> ff =\n-                                toNodeIdAsync(xNodeId).thenCombine(\n-                                    toNodeIdAsync(xTypeDefinitionId),\n-                                    (targetNodeId, typeDefinitionId) -> {\n-                                        if (nodeClass == NodeClass.Object) {\n-                                            return getObjectNodeAsync(targetNodeId, typeDefinitionId);\n-                                        } else {\n-                                            return getVariableNodeAsync(targetNodeId, typeDefinitionId);\n-                                        }\n-                                    }\n-                                );\n-\n-                            return unwrap(ff).exceptionally(ex -> {\n-                                logger.warn(\"Failed to create Node from Reference to {}\", reference.getNodeId(), ex);\n-                                return null;\n-                            });\n-                        }\n-                        default: {\n+            List<CompletableFuture<? extends UaNode>> cfs = references.stream().map(reference -> {\n+                                                                                   NodeClass nodeClass = reference.getNodeClass();\n+\n+                                                                                   ExpandedNodeId xNodeId = reference.getNodeId();\n+\n+                                                                                   ExpandedNodeId xTypeDefinitionId = reference.getTypeDefinition();\n+\n+                                                                                   switch (nodeClass) {\n+                                                                                       case Object:\n+                                                                                       case Variable: {\n+                                                                                           CompletableFuture<CompletableFuture<? extends UaNode>> ff = toNodeIdAsync(xNodeId).thenCombine(\n+                                                                                               toNodeIdAsync(xTypeDefinitionId),\n+                                                                                               (targetNodeId, typeDefinitionId) -> {\n+                                                                                               if (nodeClass == NodeClass.Object) {\n+                                                                                                   return getObjectNodeAsync(targetNodeId, typeDefinitionId);\n+                                                                                               } else {\n+                                                                                                   return getVariableNodeAsync(targetNodeId, typeDefinitionId);\n+                                                                                               }\n+                                                                                                                                                       }\n+                                                                                           );\n+                                                                                           return unwrap(ff).exceptionally(ex -> {\n+                                                                                                                logger.warn(\"Failed to create Node from Reference to {}\", reference.getNodeId(), ex);\n+                                                                                                                return null;\n+                                                                                           });\n+                                                                                       }\n+\n+                                                                                       default: {\n                             // TODO specialized getNode for other NodeClasses?\n-                            return toNodeIdAsync(xNodeId).thenCompose(this::getNodeAsync).exceptionally(ex -> {\n-                                logger.warn(\"Failed to create Node from Reference to {}\", reference.getNodeId(), ex);\n-                                return null;\n-                            });\n-                        }\n-                    }\n-                })\n-                .collect(Collectors.toList());\n-\n+                                                                                           return toNodeIdAsync(xNodeId).thenCompose(this::getNodeAsync)\n+                                                                                                                        .exceptionally(ex -> {\n+                                                                                                                            logger.warn(\"Failed to create Node from Reference to {}\", reference.getNodeId(), ex);\n+                                                                                                                            return null;\n+                                                                                           });\n+                                                                                       }\n+                                                                                   }\n+                                                            })\n+                                                                               .collect(Collectors.toList());\n             return sequence(cfs);\n         });\n     }\n \n-    private static CompletableFuture<List<? extends UaNode>> sequence(\n-        List<CompletableFuture<? extends UaNode>> cfs\n-    ) {\n-\n+    private static CompletableFuture<List<? extends UaNode>> sequence(List<CompletableFuture<? extends UaNode>> cfs) {\n         if (cfs.isEmpty()) {\n             return completedFuture(Collections.emptyList());\n         }\n \n         @SuppressWarnings(\"rawtypes\")\n         CompletableFuture[] fa = cfs.toArray(new CompletableFuture[0]);\n-\n         return CompletableFuture.allOf(fa).thenApply(v -> {\n-            List<UaNode> results = new ArrayList<>(cfs.size());\n+                                              List<UaNode> results = new ArrayList<>(cfs.size());\n \n-            for (CompletableFuture<? extends UaNode> cf : cfs) {\n-                UaNode node = cf.join();\n-                if (node != null) {\n-                    results.add(node);\n-                }\n-            }\n+                                              for (CompletableFuture<? extends UaNode> cf : cfs) {\n+                                                  UaNode node = cf.join();\n \n-            return results;\n+                                                  if (node != null) {\n+                                                      results.add(node);\n+                                                  }\n+                                              }\n+\n+                                              return results;\n         });\n     }\n \n-    private static CompletableFuture<? extends UaNode> unwrap(\n-        CompletableFuture<CompletableFuture<? extends UaNode>> future\n-    ) {\n-\n+    private static CompletableFuture<? extends UaNode> unwrap(CompletableFuture<CompletableFuture<? extends UaNode>> future) {\n         return future.thenCompose(node -> node);\n     }\n \n@@ -689,6 +692,7 @@ public class AddressSpace {\n      * @return a {@link NodeId} local to the server, or {@link NodeId#NULL_VALUE} if conversion\n      * could not be completed for any reason.\n      */\n+\n     public NodeId toNodeId(ExpandedNodeId xni) {\n         try {\n             return toNodeIdAsync(xni).get();\n@@ -707,19 +711,13 @@ public class AddressSpace {\n      * @return a {@link NodeId} local to the server, or {@link NodeId#NULL_VALUE} if conversion\n      * could not be completed for any reason.\n      */\n+\n     public CompletableFuture<NodeId> toNodeIdAsync(ExpandedNodeId xni) {\n         // TODO should this fail with Bad_NodeIdUnknown instead of returning NodeId.NULL_VALUE?\n         if (xni.isLocal()) {\n             Optional<NodeId> local = xni.toNodeId(client.getNamespaceTable());\n-\n-            return local.map(CompletableFuture::completedFuture).orElse(\n-                client.readNamespaceTableAsync()\n-                    .thenCompose(\n-                        namespaceTable ->\n-                            completedFuture(xni.toNodeId(namespaceTable).orElse(NodeId.NULL_VALUE))\n-                    )\n-                    .exceptionally(e -> NodeId.NULL_VALUE)\n-            );\n+            return local.map(CompletableFuture::completedFuture).orElse(client.readNamespaceTableAsync().thenCompose(namespaceTable -> completedFuture(xni.toNodeId(namespaceTable).orElse(NodeId.NULL_VALUE)))\n+                                                                                                        .exceptionally(e -> NodeId.NULL_VALUE));\n         } else {\n             return completedFuture(NodeId.NULL_VALUE);\n         }\n@@ -731,6 +729,7 @@ public class AddressSpace {\n      *\n      * @return the default {@link BrowseOptions}.\n      */\n+\n     public synchronized BrowseOptions getBrowseOptions() {\n         return browseOptions;\n     }\n@@ -741,11 +740,11 @@ public class AddressSpace {\n      *\n      * @param builderConsumer a {@link Consumer} that receives a {@link BrowseOptions.Builder}.\n      */\n+\n     public synchronized void modifyBrowseOptions(Consumer<BrowseOptions.Builder> builderConsumer) {\n         BrowseOptions.Builder builder = new BrowseOptions.Builder(browseOptions);\n \n         builderConsumer.accept(builder);\n-\n         setBrowseOptions(builder.build());\n     }\n \n@@ -755,6 +754,7 @@ public class AddressSpace {\n      *\n      * @param browseOptions the new default {@link BrowseOptions}.\n      */\n+\n     public synchronized void setBrowseOptions(BrowseOptions browseOptions) {\n         this.browseOptions = browseOptions;\n     }\n@@ -764,6 +764,7 @@ public class AddressSpace {\n      *\n      * @return the current {@link NodeCache}.\n      */\n+\n     public synchronized NodeCache getNodeCache() {\n         return nodeCache;\n     }\n@@ -773,33 +774,30 @@ public class AddressSpace {\n      *\n      * @param nodeCache a new {@link NodeCache}.\n      */\n+\n     public synchronized void setNodeCache(NodeCache nodeCache) {\n         this.nodeCache = nodeCache;\n     }\n \n     private CompletableFuture<NodeId> readTypeDefinition(NodeId nodeId) {\n         CompletableFuture<BrowseResult> browseFuture = client.browse(new BrowseDescription(\n-            nodeId,\n-            BrowseDirection.Forward,\n-            Identifiers.HasTypeDefinition,\n-            false,\n-            uint(NodeClass.ObjectType.getValue() | NodeClass.VariableType.getValue()),\n-            uint(BrowseResultMask.All.getValue())\n-        ));\n-\n+                                                           nodeId,\n+                                                           BrowseDirection.Forward,\n+                                                           Identifiers.HasTypeDefinition,\n+                                                           false,\n+                                                           uint(NodeClass.ObjectType.getValue() | NodeClass.VariableType.getValue()),\n+                                                           uint(BrowseResultMask.All.getValue())\n+                                                       ));\n         return browseFuture.thenCompose(result -> {\n-            if (result.getStatusCode().isGood()) {\n-                Optional<ExpandedNodeId> typeDefinitionId = l(result.getReferences())\n-                    .stream()\n-                    .filter(r -> Objects.equals(Identifiers.HasTypeDefinition, r.getReferenceTypeId()))\n-                    .map(ReferenceDescription::getNodeId)\n-                    .findFirst();\n-\n-                return typeDefinitionId.map(this::toNodeIdAsync)\n-                    .orElse(completedFuture(NodeId.NULL_VALUE));\n-            } else {\n-                return completedFuture(NodeId.NULL_VALUE);\n-            }\n+                   if (result.getStatusCode().isGood()) {\n+                       Optional<ExpandedNodeId> typeDefinitionId = l(result.getReferences()).stream()\n+                                                                                            .filter(r -> Objects.equals(Identifiers.HasTypeDefinition, r.getReferenceTypeId()))\n+                                                                                            .map(ReferenceDescription::getNodeId)\n+                                                                                            .findFirst();\n+                       return typeDefinitionId.map(this::toNodeIdAsync).orElse(completedFuture(NodeId.NULL_VALUE));\n+                   } else {\n+                       return completedFuture(NodeId.NULL_VALUE);\n+                   }\n         });\n     }\n \n@@ -810,26 +808,25 @@ public class AddressSpace {\n      * @param nodeId the {@link NodeId} of the Node to create.\n      * @return a {@link UaNode} instance for the Node identified by {@code nodeId}.\n      */\n+\n     private CompletableFuture<? extends UaNode> createNode(NodeId nodeId) {\n         CompletableFuture<ReadResponse> future = readAttributes(nodeId, AttributeId.BASE_ATTRIBUTES);\n-\n         return future.thenCompose(response -> {\n             List<DataValue> results = l(response.getResults());\n-\n             return createNodeFromBaseAttributes(nodeId, results);\n         });\n     }\n \n-    private CompletableFuture<? extends UaNode> createNodeFromBaseAttributes(\n-        NodeId nodeId,\n-        List<DataValue> baseAttributeValues\n-    ) {\n+    private CompletableFuture<? extends UaNode> createNodeFromBaseAttributes(NodeId nodeId, List<DataValue> baseAttributeValues) {\n+        Integer nodeClassValue = (Integer) baseAttributeValues.get(1).getValue()\n+                                                                     .getValue();\n \n-        Integer nodeClassValue = (Integer) baseAttributeValues.get(1).getValue().getValue();\n         if (nodeClassValue == null) {\n             return failedUaFuture(StatusCodes.Bad_NodeClassInvalid);\n         }\n+\n         NodeClass nodeClass = NodeClass.from(nodeClassValue);\n+\n         if (nodeClass == null) {\n             return failedUaFuture(StatusCodes.Bad_NodeClassInvalid);\n         }\n@@ -837,18 +834,25 @@ public class AddressSpace {\n         switch (nodeClass) {\n             case DataType:\n                 return createDataTypeNodeFromBaseAttributes(nodeId, baseAttributeValues);\n+\n             case Method:\n                 return createMethodNodeFromBaseAttributes(nodeId, baseAttributeValues);\n+\n             case Object:\n                 return createObjectNodeFromBaseAttributes(nodeId, baseAttributeValues);\n+\n             case ObjectType:\n                 return createObjectTypeNodeFromBaseAttributes(nodeId, baseAttributeValues);\n+\n             case ReferenceType:\n                 return createReferenceTypeNodeFromBaseAttributes(nodeId, baseAttributeValues);\n+\n             case Variable:\n                 return createVariableNodeFromBaseAttributes(nodeId, baseAttributeValues);\n+\n             case VariableType:\n                 return createVariableTypeNodeFromBaseAttributes(nodeId, baseAttributeValues);\n+\n             case View:\n                 return createViewNodeFromBaseAttributes(nodeId, baseAttributeValues);\n             default:\n@@ -856,27 +860,19 @@ public class AddressSpace {\n         }\n     }\n \n-    private CompletableFuture<UaDataTypeNode> createDataTypeNodeFromBaseAttributes(\n-        NodeId nodeId,\n-        List<DataValue> baseAttributeValues\n-    ) {\n-\n-        Set<AttributeId> remainingAttributes = Sets.difference(\n-            AttributeId.DATA_TYPE_ATTRIBUTES,\n-            AttributeId.BASE_ATTRIBUTES\n-        );\n+    private CompletableFuture<UaDataTypeNode> createDataTypeNodeFromBaseAttributes(NodeId nodeId, List<DataValue> baseAttributeValues) {\n+        Set<AttributeId> remainingAttributes = Sets.difference(AttributeId.DATA_TYPE_ATTRIBUTES, AttributeId.BASE_ATTRIBUTES);\n \n         CompletableFuture<ReadResponse> attributesFuture = readAttributes(nodeId, remainingAttributes);\n-\n         return attributesFuture.thenCompose(response -> {\n             List<DataValue> attributeValues = new ArrayList<>(baseAttributeValues);\n+\n             Collections.addAll(attributeValues, response.getResults());\n \n             try {\n                 UaDataTypeNode node = newDataTypeNode(nodeId, attributeValues);\n \n                 nodeCache.put(node.getNodeId(), node);\n-\n                 return completedFuture(node);\n             } catch (UaException e) {\n                 return failedFuture(e);\n@@ -884,27 +880,19 @@ public class AddressSpace {\n         });\n     }\n \n-    private CompletableFuture<UaMethodNode> createMethodNodeFromBaseAttributes(\n-        NodeId nodeId,\n-        List<DataValue> baseAttributeValues\n-    ) {\n-\n-        Set<AttributeId> remainingAttributes = Sets.difference(\n-            AttributeId.METHOD_ATTRIBUTES,\n-            AttributeId.BASE_ATTRIBUTES\n-        );\n+    private CompletableFuture<UaMethodNode> createMethodNodeFromBaseAttributes(NodeId nodeId, List<DataValue> baseAttributeValues) {\n+        Set<AttributeId> remainingAttributes = Sets.difference(AttributeId.METHOD_ATTRIBUTES, AttributeId.BASE_ATTRIBUTES);\n \n         CompletableFuture<ReadResponse> attributesFuture = readAttributes(nodeId, remainingAttributes);\n-\n         return attributesFuture.thenCompose(response -> {\n             List<DataValue> attributeValues = new ArrayList<>(baseAttributeValues);\n+\n             Collections.addAll(attributeValues, response.getResults());\n \n             try {\n                 UaMethodNode node = newMethodNode(nodeId, attributeValues);\n \n                 nodeCache.put(node.getNodeId(), node);\n-\n                 return completedFuture(node);\n             } catch (UaException e) {\n                 return failedFuture(e);\n@@ -912,60 +900,45 @@ public class AddressSpace {\n         });\n     }\n \n-    private CompletableFuture<UaObjectNode> createObjectNodeFromBaseAttributes(\n-        NodeId nodeId,\n-        List<DataValue> baseAttributeValues\n-    ) {\n-\n-        Set<AttributeId> remainingAttributes = Sets.difference(\n-            AttributeId.OBJECT_ATTRIBUTES,\n-            AttributeId.BASE_ATTRIBUTES\n-        );\n+    private CompletableFuture<UaObjectNode> createObjectNodeFromBaseAttributes(NodeId nodeId, List<DataValue> baseAttributeValues) {\n+        Set<AttributeId> remainingAttributes = Sets.difference(AttributeId.OBJECT_ATTRIBUTES, AttributeId.BASE_ATTRIBUTES);\n \n         CompletableFuture<ReadResponse> attributesFuture = readAttributes(nodeId, remainingAttributes);\n+\n         CompletableFuture<NodeId> typeDefinitionFuture = readTypeDefinition(nodeId);\n+        return CompletableFuture.allOf(attributesFuture, typeDefinitionFuture).thenCompose(ignored -> {\n+                                                                                  ReadResponse response = attributesFuture.join();\n \n-        return CompletableFuture.allOf(attributesFuture, typeDefinitionFuture)\n-            .thenCompose(ignored -> {\n-                ReadResponse response = attributesFuture.join();\n-                NodeId typeDefinitionId = typeDefinitionFuture.join();\n+                                                                                  NodeId typeDefinitionId = typeDefinitionFuture.join();\n \n-                List<DataValue> attributeValues = new ArrayList<>(baseAttributeValues);\n-                Collections.addAll(attributeValues, response.getResults());\n+                                                                                  List<DataValue> attributeValues = new ArrayList<>(baseAttributeValues);\n \n-                try {\n-                    UaObjectNode node = newObjectNode(nodeId, typeDefinitionId, attributeValues);\n+                                                                                  Collections.addAll(attributeValues, response.getResults());\n \n-                    nodeCache.put(node.getNodeId(), node);\n+                                                                                  try {\n+                                                                                      UaObjectNode node = newObjectNode(nodeId, typeDefinitionId, attributeValues);\n \n-                    return completedFuture(node);\n-                } catch (UaException e) {\n-                    return failedFuture(e);\n-                }\n-            });\n+                                                                                      nodeCache.put(node.getNodeId(), node);\n+                                                                                      return completedFuture(node);\n+                                                                                  } catch (UaException e) {\n+                                                                                      return failedFuture(e);\n+                                                                                  }\n+        });\n     }\n \n-    private CompletableFuture<UaObjectTypeNode> createObjectTypeNodeFromBaseAttributes(\n-        NodeId nodeId,\n-        List<DataValue> baseAttributeValues\n-    ) {\n-\n-        Set<AttributeId> remainingAttributes = Sets.difference(\n-            AttributeId.OBJECT_TYPE_ATTRIBUTES,\n-            AttributeId.BASE_ATTRIBUTES\n-        );\n+    private CompletableFuture<UaObjectTypeNode> createObjectTypeNodeFromBaseAttributes(NodeId nodeId, List<DataValue> baseAttributeValues) {\n+        Set<AttributeId> remainingAttributes = Sets.difference(AttributeId.OBJECT_TYPE_ATTRIBUTES, AttributeId.BASE_ATTRIBUTES);\n \n         CompletableFuture<ReadResponse> attributesFuture = readAttributes(nodeId, remainingAttributes);\n-\n         return attributesFuture.thenCompose(response -> {\n             List<DataValue> attributeValues = new ArrayList<>(baseAttributeValues);\n+\n             Collections.addAll(attributeValues, response.getResults());\n \n             try {\n                 UaObjectTypeNode node = newObjectTypeNode(nodeId, attributeValues);\n \n                 nodeCache.put(node.getNodeId(), node);\n-\n                 return completedFuture(node);\n             } catch (UaException e) {\n                 return failedFuture(e);\n@@ -973,27 +946,19 @@ public class AddressSpace {\n         });\n     }\n \n-    private CompletableFuture<UaReferenceTypeNode> createReferenceTypeNodeFromBaseAttributes(\n-        NodeId nodeId,\n-        List<DataValue> baseAttributeValues\n-    ) {\n-\n-        Set<AttributeId> remainingAttributes = Sets.difference(\n-            AttributeId.REFERENCE_TYPE_ATTRIBUTES,\n-            AttributeId.BASE_ATTRIBUTES\n-        );\n+    private CompletableFuture<UaReferenceTypeNode> createReferenceTypeNodeFromBaseAttributes(NodeId nodeId, List<DataValue> baseAttributeValues) {\n+        Set<AttributeId> remainingAttributes = Sets.difference(AttributeId.REFERENCE_TYPE_ATTRIBUTES, AttributeId.BASE_ATTRIBUTES);\n \n         CompletableFuture<ReadResponse> attributesFuture = readAttributes(nodeId, remainingAttributes);\n-\n         return attributesFuture.thenCompose(response -> {\n             List<DataValue> attributeValues = new ArrayList<>(baseAttributeValues);\n+\n             Collections.addAll(attributeValues, response.getResults());\n \n             try {\n                 UaReferenceTypeNode node = newReferenceTypeNode(nodeId, attributeValues);\n \n                 nodeCache.put(node.getNodeId(), node);\n-\n                 return completedFuture(node);\n             } catch (UaException e) {\n                 return failedFuture(e);\n@@ -1001,60 +966,45 @@ public class AddressSpace {\n         });\n     }\n \n-    private CompletableFuture<UaVariableNode> createVariableNodeFromBaseAttributes(\n-        NodeId nodeId,\n-        List<DataValue> baseAttributeValues\n-    ) {\n-\n-        Set<AttributeId> remainingAttributes = Sets.difference(\n-            AttributeId.VARIABLE_ATTRIBUTES,\n-            AttributeId.BASE_ATTRIBUTES\n-        );\n+    private CompletableFuture<UaVariableNode> createVariableNodeFromBaseAttributes(NodeId nodeId, List<DataValue> baseAttributeValues) {\n+        Set<AttributeId> remainingAttributes = Sets.difference(AttributeId.VARIABLE_ATTRIBUTES, AttributeId.BASE_ATTRIBUTES);\n \n         CompletableFuture<ReadResponse> attributesFuture = readAttributes(nodeId, remainingAttributes);\n+\n         CompletableFuture<NodeId> typeDefinitionFuture = readTypeDefinition(nodeId);\n+        return CompletableFuture.allOf(attributesFuture, typeDefinitionFuture).thenCompose(ignored -> {\n+                                                                                  ReadResponse response = attributesFuture.join();\n \n-        return CompletableFuture.allOf(attributesFuture, typeDefinitionFuture)\n-            .thenCompose(ignored -> {\n-                ReadResponse response = attributesFuture.join();\n-                NodeId typeDefinitionId = typeDefinitionFuture.join();\n+                                                                                  NodeId typeDefinitionId = typeDefinitionFuture.join();\n \n-                List<DataValue> attributeValues = new ArrayList<>(baseAttributeValues);\n-                Collections.addAll(attributeValues, response.getResults());\n+                                                                                  List<DataValue> attributeValues = new ArrayList<>(baseAttributeValues);\n \n-                try {\n-                    UaVariableNode node = newVariableNode(nodeId, typeDefinitionId, attributeValues);\n+                                                                                  Collections.addAll(attributeValues, response.getResults());\n \n-                    nodeCache.put(node.getNodeId(), node);\n+                                                                                  try {\n+                                                                                      UaVariableNode node = newVariableNode(nodeId, typeDefinitionId, attributeValues);\n \n-                    return completedFuture(node);\n-                } catch (UaException e) {\n-                    return failedFuture(e);\n-                }\n-            });\n+                                                                                      nodeCache.put(node.getNodeId(), node);\n+                                                                                      return completedFuture(node);\n+                                                                                  } catch (UaException e) {\n+                                                                                      return failedFuture(e);\n+                                                                                  }\n+        });\n     }\n \n-    private CompletableFuture<UaVariableTypeNode> createVariableTypeNodeFromBaseAttributes(\n-        NodeId nodeId,\n-        List<DataValue> baseAttributeValues\n-    ) {\n-\n-        Set<AttributeId> remainingAttributes = Sets.difference(\n-            AttributeId.VARIABLE_TYPE_ATTRIBUTES,\n-            AttributeId.BASE_ATTRIBUTES\n-        );\n+    private CompletableFuture<UaVariableTypeNode> createVariableTypeNodeFromBaseAttributes(NodeId nodeId, List<DataValue> baseAttributeValues) {\n+        Set<AttributeId> remainingAttributes = Sets.difference(AttributeId.VARIABLE_TYPE_ATTRIBUTES, AttributeId.BASE_ATTRIBUTES);\n \n         CompletableFuture<ReadResponse> attributesFuture = readAttributes(nodeId, remainingAttributes);\n-\n         return attributesFuture.thenCompose(response -> {\n             List<DataValue> attributeValues = new ArrayList<>(baseAttributeValues);\n+\n             Collections.addAll(attributeValues, response.getResults());\n \n             try {\n                 UaVariableTypeNode node = newVariableTypeNode(nodeId, attributeValues);\n \n                 nodeCache.put(node.getNodeId(), node);\n-\n                 return completedFuture(node);\n             } catch (UaException e) {\n                 return failedFuture(e);\n@@ -1062,27 +1012,19 @@ public class AddressSpace {\n         });\n     }\n \n-    private CompletableFuture<UaViewNode> createViewNodeFromBaseAttributes(\n-        NodeId nodeId,\n-        List<DataValue> baseAttributeValues\n-    ) {\n-\n-        Set<AttributeId> remainingAttributes = Sets.difference(\n-            AttributeId.VIEW_ATTRIBUTES,\n-            AttributeId.BASE_ATTRIBUTES\n-        );\n+    private CompletableFuture<UaViewNode> createViewNodeFromBaseAttributes(NodeId nodeId, List<DataValue> baseAttributeValues) {\n+        Set<AttributeId> remainingAttributes = Sets.difference(AttributeId.VIEW_ATTRIBUTES, AttributeId.BASE_ATTRIBUTES);\n \n         CompletableFuture<ReadResponse> attributesFuture = readAttributes(nodeId, remainingAttributes);\n-\n         return attributesFuture.thenCompose(response -> {\n             List<DataValue> attributeValues = new ArrayList<>(baseAttributeValues);\n+\n             Collections.addAll(attributeValues, response.getResults());\n \n             try {\n                 UaViewNode node = newViewNode(nodeId, attributeValues);\n \n                 nodeCache.put(node.getNodeId(), node);\n-\n                 return completedFuture(node);\n             } catch (UaException e) {\n                 return failedFuture(e);\n@@ -1091,84 +1033,78 @@ public class AddressSpace {\n     }\n \n     private CompletableFuture<ReadResponse> readAttributes(NodeId nodeId, Set<AttributeId> attributeIds) {\n-        List<ReadValueId> readValueIds = attributeIds.stream()\n-            .map(id ->\n-                new ReadValueId(\n-                    nodeId,\n-                    id.uid(),\n-                    null,\n-                    QualifiedName.NULL_VALUE\n-                )\n-            )\n-            .collect(Collectors.toList());\n-\n+        List<ReadValueId> readValueIds = attributeIds.stream().map(id -> new ReadValueId(nodeId, id.uid(), null, QualifiedName.NULL_VALUE))\n+                                                              .collect(Collectors.toList());\n         return client.read(0.0, TimestampsToReturn.Neither, readValueIds);\n     }\n \n     private UaDataTypeNode newDataTypeNode(NodeId nodeId, List<DataValue> attributeValues) throws UaException {\n         DataValue nodeIdDataValue = attributeValues.get(0);\n+\n         StatusCode nodeIdStatusCode = nodeIdDataValue.getStatusCode();\n+\n         if (nodeIdStatusCode != null && nodeIdStatusCode.isBad()) {\n             throw new UaException(nodeIdStatusCode);\n         }\n \n         try {\n-            NodeClass nodeClass = NodeClass.from((Integer) attributeValues.get(1).getValue().getValue());\n+            NodeClass nodeClass = NodeClass.from((Integer) attributeValues.get(1).getValue()\n+                                                                                 .getValue());\n \n-            Preconditions.checkArgument(\n-                nodeClass == NodeClass.DataType,\n-                \"expected NodeClass.DataType, got NodeClass.\" + nodeClass\n-            );\n+            Preconditions.checkArgument(nodeClass == NodeClass.DataType, \"expected NodeClass.DataType, got NodeClass.\" + nodeClass);\n+\n+            QualifiedName browseName = (QualifiedName) attributeValues.get(2).getValue()\n+                                                                             .getValue();\n+\n+            LocalizedText displayName = (LocalizedText) attributeValues.get(3).getValue()\n+                                                                              .getValue();\n \n-            QualifiedName browseName = (QualifiedName) attributeValues.get(2).getValue().getValue();\n-            LocalizedText displayName = (LocalizedText) attributeValues.get(3).getValue().getValue();\n             LocalizedText description = getAttributeOrNull(attributeValues.get(4), LocalizedText.class);\n+\n             UInteger writeMask = getAttributeOrNull(attributeValues.get(5), UInteger.class);\n-            UInteger userWriteMask = getAttributeOrNull(attributeValues.get(6), UInteger.class);\n \n-            Boolean isAbstract = (Boolean) attributeValues.get(7).getValue().getValue();\n+            UInteger userWriteMask = getAttributeOrNull(attributeValues.get(6), UInteger.class);\n \n-            return new UaDataTypeNode(\n-                client,\n-                nodeId,\n-                nodeClass,\n-                browseName,\n-                displayName,\n-                description,\n-                writeMask,\n-                userWriteMask,\n-                isAbstract\n-            );\n+            Boolean isAbstract = (Boolean) attributeValues.get(7).getValue()\n+                                                                 .getValue();\n+            return new UaDataTypeNode(client, nodeId, nodeClass, browseName, displayName, description, writeMask, userWriteMask, isAbstract);\n         } catch (Throwable t) {\n-            throw UaException.extract(t)\n-                .orElse(new UaException(StatusCodes.Bad_UnexpectedError, t));\n+            throw UaException.extract(t).orElse(new UaException(StatusCodes.Bad_UnexpectedError, t));\n         }\n     }\n \n     private UaMethodNode newMethodNode(NodeId nodeId, List<DataValue> attributeValues) throws UaException {\n         DataValue nodeIdDataValue = attributeValues.get(0);\n+\n         StatusCode nodeIdStatusCode = nodeIdDataValue.getStatusCode();\n+\n         if (nodeIdStatusCode != null && nodeIdStatusCode.isBad()) {\n             throw new UaException(nodeIdStatusCode);\n         }\n \n         try {\n-            NodeClass nodeClass = NodeClass.from((Integer) attributeValues.get(1).getValue().getValue());\n+            NodeClass nodeClass = NodeClass.from((Integer) attributeValues.get(1).getValue()\n+                                                                                 .getValue());\n \n-            Preconditions.checkArgument(\n-                nodeClass == NodeClass.Method,\n-                \"expected NodeClass.Method, got NodeClass.\" + nodeClass\n-            );\n+            Preconditions.checkArgument(nodeClass == NodeClass.Method, \"expected NodeClass.Method, got NodeClass.\" + nodeClass);\n+\n+            QualifiedName browseName = (QualifiedName) attributeValues.get(2).getValue()\n+                                                                             .getValue();\n+\n+            LocalizedText displayName = (LocalizedText) attributeValues.get(3).getValue()\n+                                                                              .getValue();\n \n-            QualifiedName browseName = (QualifiedName) attributeValues.get(2).getValue().getValue();\n-            LocalizedText displayName = (LocalizedText) attributeValues.get(3).getValue().getValue();\n             LocalizedText description = getAttributeOrNull(attributeValues.get(4), LocalizedText.class);\n+\n             UInteger writeMask = getAttributeOrNull(attributeValues.get(5), UInteger.class);\n+\n             UInteger userWriteMask = getAttributeOrNull(attributeValues.get(6), UInteger.class);\n \n-            Boolean executable = (Boolean) attributeValues.get(7).getValue().getValue();\n-            Boolean userExecutable = (Boolean) attributeValues.get(8).getValue().getValue();\n+            Boolean executable = (Boolean) attributeValues.get(7).getValue()\n+                                                                 .getValue();\n \n+            Boolean userExecutable = (Boolean) attributeValues.get(8).getValue()\n+                                                                     .getValue();\n             return new UaMethodNode(\n                 client,\n                 nodeId,\n@@ -1182,129 +1118,117 @@ public class AddressSpace {\n                 userExecutable\n             );\n         } catch (Throwable t) {\n-            throw UaException.extract(t)\n-                .orElse(new UaException(StatusCodes.Bad_UnexpectedError, t));\n+            throw UaException.extract(t).orElse(new UaException(StatusCodes.Bad_UnexpectedError, t));\n         }\n     }\n \n-    private UaObjectNode newObjectNode(\n-        NodeId nodeId,\n-        NodeId typeDefinitionId,\n-        List<DataValue> attributeValues\n-    ) throws UaException {\n-\n+    private UaObjectNode newObjectNode(NodeId nodeId, NodeId typeDefinitionId, List<DataValue> attributeValues) throws UaException {\n         DataValue nodeIdDataValue = attributeValues.get(0);\n+\n         StatusCode nodeIdStatusCode = nodeIdDataValue.getStatusCode();\n+\n         if (nodeIdStatusCode != null && nodeIdStatusCode.isBad()) {\n             throw new UaException(nodeIdStatusCode);\n         }\n \n         try {\n-            NodeClass nodeClass = NodeClass.from((Integer) attributeValues.get(1).getValue().getValue());\n+            NodeClass nodeClass = NodeClass.from((Integer) attributeValues.get(1).getValue()\n+                                                                                 .getValue());\n \n-            Preconditions.checkArgument(\n-                nodeClass == NodeClass.Object,\n-                \"expected NodeClass.Object, got NodeClass.\" + nodeClass\n-            );\n+            Preconditions.checkArgument(nodeClass == NodeClass.Object, \"expected NodeClass.Object, got NodeClass.\" + nodeClass);\n+\n+            QualifiedName browseName = (QualifiedName) attributeValues.get(2).getValue()\n+                                                                             .getValue();\n+\n+            LocalizedText displayName = (LocalizedText) attributeValues.get(3).getValue()\n+                                                                              .getValue();\n \n-            QualifiedName browseName = (QualifiedName) attributeValues.get(2).getValue().getValue();\n-            LocalizedText displayName = (LocalizedText) attributeValues.get(3).getValue().getValue();\n             LocalizedText description = getAttributeOrNull(attributeValues.get(4), LocalizedText.class);\n+\n             UInteger writeMask = getAttributeOrNull(attributeValues.get(5), UInteger.class);\n-            UInteger userWriteMask = getAttributeOrNull(attributeValues.get(6), UInteger.class);\n \n-            UByte eventNotifier = (UByte) attributeValues.get(7).getValue().getValue();\n+            UInteger userWriteMask = getAttributeOrNull(attributeValues.get(6), UInteger.class);\n \n-            ObjectNodeConstructor constructor = client.getObjectTypeManager()\n-                .getNodeConstructor(typeDefinitionId)\n-                .orElse(UaObjectNode::new);\n+            UByte eventNotifier = (UByte) attributeValues.get(7).getValue()\n+                                                                .getValue();\n \n-            return constructor.apply(\n-                client,\n-                nodeId,\n-                nodeClass,\n-                browseName,\n-                displayName,\n-                description,\n-                writeMask,\n-                userWriteMask,\n-                eventNotifier\n-            );\n+            ObjectNodeConstructor constructor = client.getObjectTypeManager().getNodeConstructor(typeDefinitionId)\n+                                                                             .orElse(UaObjectNode::new);\n+            return constructor.apply(client, nodeId, nodeClass, browseName, displayName, description, writeMask, userWriteMask, eventNotifier);\n         } catch (Throwable t) {\n-            throw UaException.extract(t)\n-                .orElse(new UaException(StatusCodes.Bad_UnexpectedError, t));\n+            throw UaException.extract(t).orElse(new UaException(StatusCodes.Bad_UnexpectedError, t));\n         }\n     }\n \n     private UaObjectTypeNode newObjectTypeNode(NodeId nodeId, List<DataValue> attributeValues) throws UaException {\n         DataValue nodeIdDataValue = attributeValues.get(0);\n+\n         StatusCode nodeIdStatusCode = nodeIdDataValue.getStatusCode();\n+\n         if (nodeIdStatusCode != null && nodeIdStatusCode.isBad()) {\n             throw new UaException(nodeIdStatusCode);\n         }\n \n         try {\n-            NodeClass nodeClass = NodeClass.from((Integer) attributeValues.get(1).getValue().getValue());\n+            NodeClass nodeClass = NodeClass.from((Integer) attributeValues.get(1).getValue()\n+                                                                                 .getValue());\n \n-            Preconditions.checkArgument(\n-                nodeClass == NodeClass.ObjectType,\n-                \"expected NodeClass.ObjectType, got NodeClass.\" + nodeClass\n-            );\n+            Preconditions.checkArgument(nodeClass == NodeClass.ObjectType, \"expected NodeClass.ObjectType, got NodeClass.\" + nodeClass);\n+\n+            QualifiedName browseName = (QualifiedName) attributeValues.get(2).getValue()\n+                                                                             .getValue();\n+\n+            LocalizedText displayName = (LocalizedText) attributeValues.get(3).getValue()\n+                                                                              .getValue();\n \n-            QualifiedName browseName = (QualifiedName) attributeValues.get(2).getValue().getValue();\n-            LocalizedText displayName = (LocalizedText) attributeValues.get(3).getValue().getValue();\n             LocalizedText description = getAttributeOrNull(attributeValues.get(4), LocalizedText.class);\n+\n             UInteger writeMask = getAttributeOrNull(attributeValues.get(5), UInteger.class);\n-            UInteger userWriteMask = getAttributeOrNull(attributeValues.get(6), UInteger.class);\n \n-            Boolean isAbstract = (Boolean) attributeValues.get(7).getValue().getValue();\n+            UInteger userWriteMask = getAttributeOrNull(attributeValues.get(6), UInteger.class);\n \n-            return new UaObjectTypeNode(\n-                client,\n-                nodeId,\n-                nodeClass,\n-                browseName,\n-                displayName,\n-                description,\n-                writeMask,\n-                userWriteMask,\n-                isAbstract\n-            );\n+            Boolean isAbstract = (Boolean) attributeValues.get(7).getValue()\n+                                                                 .getValue();\n+            return new UaObjectTypeNode(client, nodeId, nodeClass, browseName, displayName, description, writeMask, userWriteMask, isAbstract);\n         } catch (Throwable t) {\n-            throw UaException.extract(t)\n-                .orElse(new UaException(StatusCodes.Bad_UnexpectedError, t));\n+            throw UaException.extract(t).orElse(new UaException(StatusCodes.Bad_UnexpectedError, t));\n         }\n     }\n \n-    private UaReferenceTypeNode newReferenceTypeNode(\n-        NodeId nodeId,\n-        List<DataValue> attributeValues\n-    ) throws UaException {\n-\n+    private UaReferenceTypeNode newReferenceTypeNode(NodeId nodeId, List<DataValue> attributeValues) throws UaException {\n         DataValue nodeIdDataValue = attributeValues.get(0);\n+\n         StatusCode nodeIdStatusCode = nodeIdDataValue.getStatusCode();\n+\n         if (nodeIdStatusCode != null && nodeIdStatusCode.isBad()) {\n             throw new UaException(nodeIdStatusCode);\n         }\n \n         try {\n-            NodeClass nodeClass = NodeClass.from((Integer) attributeValues.get(1).getValue().getValue());\n+            NodeClass nodeClass = NodeClass.from((Integer) attributeValues.get(1).getValue()\n+                                                                                 .getValue());\n \n-            Preconditions.checkArgument(\n-                nodeClass == NodeClass.ReferenceType,\n-                \"expected NodeClass.ReferenceType, got NodeClass.\" + nodeClass\n-            );\n+            Preconditions.checkArgument(nodeClass == NodeClass.ReferenceType, \"expected NodeClass.ReferenceType, got NodeClass.\" + nodeClass);\n+\n+            QualifiedName browseName = (QualifiedName) attributeValues.get(2).getValue()\n+                                                                             .getValue();\n+\n+            LocalizedText displayName = (LocalizedText) attributeValues.get(3).getValue()\n+                                                                              .getValue();\n \n-            QualifiedName browseName = (QualifiedName) attributeValues.get(2).getValue().getValue();\n-            LocalizedText displayName = (LocalizedText) attributeValues.get(3).getValue().getValue();\n             LocalizedText description = getAttributeOrNull(attributeValues.get(4), LocalizedText.class);\n+\n             UInteger writeMask = getAttributeOrNull(attributeValues.get(5), UInteger.class);\n+\n             UInteger userWriteMask = getAttributeOrNull(attributeValues.get(6), UInteger.class);\n \n-            Boolean isAbstract = (Boolean) attributeValues.get(7).getValue().getValue();\n-            Boolean symmetric = (Boolean) attributeValues.get(8).getValue().getValue();\n-            LocalizedText inverseName = getAttributeOrNull(attributeValues.get(9), LocalizedText.class);\n+            Boolean isAbstract = (Boolean) attributeValues.get(7).getValue()\n+                                                                 .getValue();\n \n+            Boolean symmetric = (Boolean) attributeValues.get(8).getValue()\n+                                                                .getValue();\n+\n+            LocalizedText inverseName = getAttributeOrNull(attributeValues.get(9), LocalizedText.class);\n             return new UaReferenceTypeNode(\n                 client,\n                 nodeId,\n@@ -1319,50 +1243,60 @@ public class AddressSpace {\n                 inverseName\n             );\n         } catch (Throwable t) {\n-            throw UaException.extract(t)\n-                .orElse(new UaException(StatusCodes.Bad_UnexpectedError, t));\n+            throw UaException.extract(t).orElse(new UaException(StatusCodes.Bad_UnexpectedError, t));\n         }\n     }\n \n-    private UaVariableNode newVariableNode(\n-        NodeId nodeId,\n-        NodeId typeDefinitionId,\n-        List<DataValue> attributeValues\n-    ) throws UaException {\n-\n+    private UaVariableNode newVariableNode(NodeId nodeId, NodeId typeDefinitionId, List<DataValue> attributeValues) throws UaException {\n         DataValue nodeIdDataValue = attributeValues.get(0);\n+\n         StatusCode nodeIdStatusCode = nodeIdDataValue.getStatusCode();\n+\n         if (nodeIdStatusCode != null && nodeIdStatusCode.isBad()) {\n             throw new UaException(nodeIdStatusCode);\n         }\n \n         try {\n-            NodeClass nodeClass = NodeClass.from((Integer) attributeValues.get(1).getValue().getValue());\n+            NodeClass nodeClass = NodeClass.from((Integer) attributeValues.get(1).getValue()\n+                                                                                 .getValue());\n \n-            Preconditions.checkArgument(\n-                nodeClass == NodeClass.Variable,\n-                \"expected NodeClass.Variable, got NodeClass.\" + nodeClass\n-            );\n+            Preconditions.checkArgument(nodeClass == NodeClass.Variable, \"expected NodeClass.Variable, got NodeClass.\" + nodeClass);\n+\n+            QualifiedName browseName = (QualifiedName) attributeValues.get(2).getValue()\n+                                                                             .getValue();\n+\n+            LocalizedText displayName = (LocalizedText) attributeValues.get(3).getValue()\n+                                                                              .getValue();\n \n-            QualifiedName browseName = (QualifiedName) attributeValues.get(2).getValue().getValue();\n-            LocalizedText displayName = (LocalizedText) attributeValues.get(3).getValue().getValue();\n             LocalizedText description = getAttributeOrNull(attributeValues.get(4), LocalizedText.class);\n+\n             UInteger writeMask = getAttributeOrNull(attributeValues.get(5), UInteger.class);\n+\n             UInteger userWriteMask = getAttributeOrNull(attributeValues.get(6), UInteger.class);\n \n             DataValue value = attributeValues.get(7);\n-            NodeId dataType = (NodeId) attributeValues.get(8).getValue().getValue();\n-            Integer valueRank = (Integer) attributeValues.get(9).getValue().getValue();\n+\n+            NodeId dataType = (NodeId) attributeValues.get(8).getValue()\n+                                                             .getValue();\n+\n+            Integer valueRank = (Integer) attributeValues.get(9).getValue()\n+                                                                .getValue();\n+\n             UInteger[] arrayDimensions = getAttributeOrNull(attributeValues.get(10), UInteger[].class);\n-            UByte accessLevel = (UByte) attributeValues.get(11).getValue().getValue();\n-            UByte userAccessLevel = (UByte) attributeValues.get(12).getValue().getValue();\n+\n+            UByte accessLevel = (UByte) attributeValues.get(11).getValue()\n+                                                               .getValue();\n+\n+            UByte userAccessLevel = (UByte) attributeValues.get(12).getValue()\n+                                                                   .getValue();\n+\n             Double minimumSamplingInterval = getAttributeOrNull(attributeValues.get(13), Double.class);\n-            Boolean historizing = (Boolean) attributeValues.get(14).getValue().getValue();\n \n-            VariableTypeManager.VariableNodeConstructor constructor = client.getVariableTypeManager()\n-                .getNodeConstructor(typeDefinitionId)\n-                .orElse(UaVariableNode::new);\n+            Boolean historizing = (Boolean) attributeValues.get(14).getValue()\n+                                                                   .getValue();\n \n+            VariableTypeManager.VariableNodeConstructor constructor = client.getVariableTypeManager().getNodeConstructor(typeDefinitionId)\n+                                                                                                     .orElse(UaVariableNode::new);\n             return constructor.apply(\n                 client,\n                 nodeId,\n@@ -1382,38 +1316,49 @@ public class AddressSpace {\n                 historizing\n             );\n         } catch (Throwable t) {\n-            throw UaException.extract(t)\n-                .orElse(new UaException(StatusCodes.Bad_UnexpectedError, t));\n+            throw UaException.extract(t).orElse(new UaException(StatusCodes.Bad_UnexpectedError, t));\n         }\n     }\n \n     private UaVariableTypeNode newVariableTypeNode(NodeId nodeId, List<DataValue> attributeValues) throws UaException {\n         DataValue nodeIdDataValue = attributeValues.get(0);\n+\n         StatusCode nodeIdStatusCode = nodeIdDataValue.getStatusCode();\n+\n         if (nodeIdStatusCode != null && nodeIdStatusCode.isBad()) {\n             throw new UaException(nodeIdStatusCode);\n         }\n \n         try {\n-            NodeClass nodeClass = NodeClass.from((Integer) attributeValues.get(1).getValue().getValue());\n+            NodeClass nodeClass = NodeClass.from((Integer) attributeValues.get(1).getValue()\n+                                                                                 .getValue());\n \n-            Preconditions.checkArgument(\n-                nodeClass == NodeClass.VariableType,\n-                \"expected NodeClass.VariableType, got NodeClass.\" + nodeClass\n-            );\n+            Preconditions.checkArgument(nodeClass == NodeClass.VariableType, \"expected NodeClass.VariableType, got NodeClass.\" + nodeClass);\n+\n+            QualifiedName browseName = (QualifiedName) attributeValues.get(2).getValue()\n+                                                                             .getValue();\n+\n+            LocalizedText displayName = (LocalizedText) attributeValues.get(3).getValue()\n+                                                                              .getValue();\n \n-            QualifiedName browseName = (QualifiedName) attributeValues.get(2).getValue().getValue();\n-            LocalizedText displayName = (LocalizedText) attributeValues.get(3).getValue().getValue();\n             LocalizedText description = getAttributeOrNull(attributeValues.get(4), LocalizedText.class);\n+\n             UInteger writeMask = getAttributeOrNull(attributeValues.get(5), UInteger.class);\n+\n             UInteger userWriteMask = getAttributeOrNull(attributeValues.get(6), UInteger.class);\n \n             DataValue value = attributeValues.get(7);\n-            NodeId dataType = (NodeId) attributeValues.get(8).getValue().getValue();\n-            Integer valueRank = (Integer) attributeValues.get(9).getValue().getValue();\n+\n+            NodeId dataType = (NodeId) attributeValues.get(8).getValue()\n+                                                             .getValue();\n+\n+            Integer valueRank = (Integer) attributeValues.get(9).getValue()\n+                                                                .getValue();\n+\n             UInteger[] arrayDimensions = getAttributeOrNull(attributeValues.get(10), UInteger[].class);\n-            Boolean isAbstract = (Boolean) attributeValues.get(11).getValue().getValue();\n \n+            Boolean isAbstract = (Boolean) attributeValues.get(11).getValue()\n+                                                                  .getValue();\n             return new UaVariableTypeNode(\n                 client,\n                 nodeId,\n@@ -1430,35 +1375,42 @@ public class AddressSpace {\n                 isAbstract\n             );\n         } catch (Throwable t) {\n-            throw UaException.extract(t)\n-                .orElse(new UaException(StatusCodes.Bad_UnexpectedError, t));\n+            throw UaException.extract(t).orElse(new UaException(StatusCodes.Bad_UnexpectedError, t));\n         }\n     }\n \n     private UaViewNode newViewNode(NodeId nodeId, List<DataValue> attributeValues) throws UaException {\n         DataValue nodeIdDataValue = attributeValues.get(0);\n+\n         StatusCode nodeIdStatusCode = nodeIdDataValue.getStatusCode();\n+\n         if (nodeIdStatusCode != null && nodeIdStatusCode.isBad()) {\n             throw new UaException(nodeIdStatusCode);\n         }\n \n         try {\n-            NodeClass nodeClass = NodeClass.from((Integer) attributeValues.get(1).getValue().getValue());\n+            NodeClass nodeClass = NodeClass.from((Integer) attributeValues.get(1).getValue()\n+                                                                                 .getValue());\n \n-            Preconditions.checkArgument(\n-                nodeClass == NodeClass.View,\n-                \"expected NodeClass.View, got NodeClass.\" + nodeClass\n-            );\n+            Preconditions.checkArgument(nodeClass == NodeClass.View, \"expected NodeClass.View, got NodeClass.\" + nodeClass);\n+\n+            QualifiedName browseName = (QualifiedName) attributeValues.get(2).getValue()\n+                                                                             .getValue();\n+\n+            LocalizedText displayName = (LocalizedText) attributeValues.get(3).getValue()\n+                                                                              .getValue();\n \n-            QualifiedName browseName = (QualifiedName) attributeValues.get(2).getValue().getValue();\n-            LocalizedText displayName = (LocalizedText) attributeValues.get(3).getValue().getValue();\n             LocalizedText description = getAttributeOrNull(attributeValues.get(4), LocalizedText.class);\n+\n             UInteger writeMask = getAttributeOrNull(attributeValues.get(5), UInteger.class);\n+\n             UInteger userWriteMask = getAttributeOrNull(attributeValues.get(6), UInteger.class);\n \n-            Boolean containsNoLoops = (Boolean) attributeValues.get(7).getValue().getValue();\n-            UByte eventNotifier = (UByte) attributeValues.get(8).getValue().getValue();\n+            Boolean containsNoLoops = (Boolean) attributeValues.get(7).getValue()\n+                                                                      .getValue();\n \n+            UByte eventNotifier = (UByte) attributeValues.get(8).getValue()\n+                                                                .getValue();\n             return new UaViewNode(\n                 client,\n                 nodeId,\n@@ -1472,8 +1424,7 @@ public class AddressSpace {\n                 eventNotifier\n             );\n         } catch (Throwable t) {\n-            throw UaException.extract(t)\n-                .orElse(new UaException(StatusCodes.Bad_UnexpectedError, t));\n+            throw UaException.extract(t).orElse(new UaException(StatusCodes.Bad_UnexpectedError, t));\n         }\n     }\n \n@@ -1497,8 +1448,11 @@ public class AddressSpace {\n     public static class BrowseOptions {\n \n         private final BrowseDirection browseDirection;\n+\n         private final NodeId referenceTypeId;\n+\n         private final boolean includeSubtypes;\n+\n         private final UInteger nodeClassMask;\n \n         public BrowseOptions() {\n@@ -1508,10 +1462,7 @@ public class AddressSpace {\n         public BrowseOptions(\n             BrowseDirection browseDirection,\n             NodeId referenceTypeId,\n-            boolean includeSubtypes,\n-            UInteger nodeClassMask\n-        ) {\n-\n+            boolean includeSubtypes, UInteger nodeClassMask) {\n             this.browseDirection = browseDirection;\n             this.referenceTypeId = referenceTypeId;\n             this.includeSubtypes = includeSubtypes;\n@@ -1538,7 +1489,6 @@ public class AddressSpace {\n             Builder builder = new Builder(this);\n \n             builderConsumer.accept(builder);\n-\n             return builder.build();\n         }\n \n@@ -1549,11 +1499,16 @@ public class AddressSpace {\n         public static class Builder {\n \n             private BrowseDirection browseDirection = BrowseDirection.Forward;\n+\n             private NodeId referenceTypeId = Identifiers.HierarchicalReferences;\n+\n             private boolean includeSubtypes = true;\n+\n             private UInteger nodeClassMask = uint(0xFF);\n \n-            private Builder() {}\n+            private Builder() {\n+            }\n+\n \n             private Builder(BrowseOptions browseOptions) {\n                 this.browseDirection = browseOptions.getBrowseDirection();\n@@ -1588,9 +1543,11 @@ public class AddressSpace {\n \n             public Builder setNodeClassMask(Set<NodeClass> nodeClasses) {\n                 int mask = 0;\n+\n                 for (NodeClass nodeClass : nodeClasses) {\n                     mask |= nodeClass.getValue();\n                 }\n+\n                 return setNodeClassMask(uint(mask));\n             }\n \n@@ -1602,4 +1559,4 @@ public class AddressSpace {\n \n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 560
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1556",
                    "column": "32",
                    "severity": "error",
                    "message": "'}' at column 32 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1558",
                    "severity": "error",
                    "message": "'CTOR_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "1558",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/267/AddressSpace.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/styler_three_grams/267/AddressSpace.java\nindex fc62ccec8f1..965f2b4c115 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/267/AddressSpace.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/styler_three_grams/267/AddressSpace.java\n@@ -1553,9 +1553,9 @@ public class AddressSpace {\n             private boolean includeSubtypes = true;\n             private UInteger nodeClassMask = uint(0xFF);\n \n-            private Builder() {}\n+            private Builder() {\n \n-            private Builder(BrowseOptions browseOptions) {\n+            } private Builder(BrowseOptions browseOptions) {\n                 this.browseDirection = browseOptions.getBrowseDirection();\n                 this.referenceTypeId = browseOptions.getReferenceTypeId();\n                 this.includeSubtypes = browseOptions.isIncludeSubtypes();\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "couchbase-couchbase-jvm-core",
    "error_id": "7",
    "information": {
        "errors": [
            {
                "line": "47",
                "severity": "warning",
                "message": "Line is longer than 120 characters (found 142).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "    public void shouldQueryNonExistentView() {\n        ViewQueryResponse single = cluster()\n            .<ViewQueryResponse>send(new ViewQueryRequest(\"designdoc\", \"foobar\", false, \"debug=true\", null, bucket(), username(), password()))\n            .toBlocking()\n            .single();\n        assertEquals(ResponseStatus.NOT_EXISTS, single.status());",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "48",
                    "column": "17",
                    "severity": "warning",
                    "message": "',' should be on the previous line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.SeparatorWrapCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/7/ViewMessageTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/styler/7/ViewMessageTest.java\nindex 313da00d78d..9b1be367f0d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/7/ViewMessageTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/styler/7/ViewMessageTest.java\n@@ -44,7 +44,8 @@ public class ViewMessageTest extends ClusterDependentTest {\n     @Test\n     public void shouldQueryNonExistentView() {\n         ViewQueryResponse single = cluster()\n-            .<ViewQueryResponse>send(new ViewQueryRequest(\"designdoc\", \"foobar\", false, \"debug=true\", null, bucket(), username(), password()))\n+            .<ViewQueryResponse>send(new ViewQueryRequest(\"designdoc\", \"foobar\"\n+                , false, \"debug=true\", null, bucket(), username(), password()))\n             .toBlocking()\n             .single();\n         assertEquals(ResponseStatus.NOT_EXISTS, single.status());\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/7/ViewMessageTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/intellij/7/ViewMessageTest.java\nindex 313da00d78d..d51dc241b4a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/7/ViewMessageTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/intellij/7/ViewMessageTest.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package com.couchbase.client.core.cluster;\n \n import com.couchbase.client.core.message.ResponseStatus;\n@@ -44,7 +45,9 @@ public class ViewMessageTest extends ClusterDependentTest {\n     @Test\n     public void shouldQueryNonExistentView() {\n         ViewQueryResponse single = cluster()\n-            .<ViewQueryResponse>send(new ViewQueryRequest(\"designdoc\", \"foobar\", false, \"debug=true\", null, bucket(), username(), password()))\n+            .<ViewQueryResponse>send(\n+                new ViewQueryRequest(\"designdoc\", \"foobar\", false, \"debug=true\", null, bucket(), username(),\n+                    password()))\n             .toBlocking()\n             .single();\n         assertEquals(ResponseStatus.NOT_EXISTS, single.status());\n",
            "diff_size": 4
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "47",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 142).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/7/ViewMessageTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/naturalize/7/ViewMessageTest.java\nindex 313da00d78d..1b15b248dde 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/7/ViewMessageTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/naturalize/7/ViewMessageTest.java\n@@ -59,4 +59,4 @@ public class ViewMessageTest extends ClusterDependentTest {\n         });\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "27",
                    "severity": "warning",
                    "message": "'import' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "47",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 197).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/7/ViewMessageTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/codebuff/7/ViewMessageTest.java\nindex 313da00d78d..1bbceeae0f1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/7/ViewMessageTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/codebuff/7/ViewMessageTest.java\n@@ -24,8 +24,8 @@ import io.netty.util.ReferenceCountUtil;\n import org.junit.BeforeClass;\n import org.junit.Test;\n import rx.functions.Action1;\n-\n import static org.junit.Assert.assertEquals;\n+\n import static org.junit.Assert.assertNotNull;\n \n /**\n@@ -34,23 +34,20 @@ import static org.junit.Assert.assertNotNull;\n  * @author Michael Nitschinger\n  * @since 1.0\n  */\n-public class ViewMessageTest extends ClusterDependentTest {\n \n+public class ViewMessageTest extends ClusterDependentTest {\n     @BeforeClass\n     public static void setup() throws Exception {\n         connect();\n     }\n \n+\n     @Test\n     public void shouldQueryNonExistentView() {\n-        ViewQueryResponse single = cluster()\n-            .<ViewQueryResponse>send(new ViewQueryRequest(\"designdoc\", \"foobar\", false, \"debug=true\", null, bucket(), username(), password()))\n-            .toBlocking()\n-            .single();\n+        ViewQueryResponse single = cluster().<ViewQueryResponse>send(new ViewQueryRequest(\"designdoc\", \"foobar\", false, \"debug=true\", null, bucket(), username(), password())).toBlocking().single();\n         assertEquals(ResponseStatus.NOT_EXISTS, single.status());\n         String error = single.error().toBlocking().singleOrDefault(null);\n         assertNotNull(error);\n-\n         single.rows().toBlocking().forEach(new Action1<ByteBuf>() {\n             @Override\n             public void call(ByteBuf byteBuf) {\n@@ -58,5 +55,4 @@ public class ViewMessageTest extends ClusterDependentTest {\n             }\n         });\n     }\n-\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 12
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "47",
                    "severity": "warning",
                    "message": "'.' has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "47",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 135).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "49",
                    "severity": "warning",
                    "message": "'.' has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/7/ViewMessageTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/styler_random/7/ViewMessageTest.java\nindex 313da00d78d..3f7d5e73d4e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/7/ViewMessageTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/styler_random/7/ViewMessageTest.java\n@@ -44,8 +44,9 @@ public class ViewMessageTest extends ClusterDependentTest {\n     @Test\n     public void shouldQueryNonExistentView() {\n         ViewQueryResponse single = cluster()\n-            .<ViewQueryResponse>send(new ViewQueryRequest(\"designdoc\", \"foobar\", false, \"debug=true\", null, bucket(), username(), password()))\n-            .toBlocking()\n+        .<ViewQueryResponse>send(new ViewQueryRequest(\"designdoc\" ,\"foobar\" ,false ,\"debug=true\",null ,bucket(),username(),password()))\n+\n+        . toBlocking()\n             .single();\n         assertEquals(ResponseStatus.NOT_EXISTS, single.status());\n         String error = single.error().toBlocking().singleOrDefault(null);\n",
            "diff_size": 3
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "48",
                    "column": "17",
                    "severity": "warning",
                    "message": "',' should be on the previous line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.SeparatorWrapCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/7/ViewMessageTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/styler_three_grams/7/ViewMessageTest.java\nindex 313da00d78d..9b1be367f0d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/7/ViewMessageTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/styler_three_grams/7/ViewMessageTest.java\n@@ -44,7 +44,8 @@ public class ViewMessageTest extends ClusterDependentTest {\n     @Test\n     public void shouldQueryNonExistentView() {\n         ViewQueryResponse single = cluster()\n-            .<ViewQueryResponse>send(new ViewQueryRequest(\"designdoc\", \"foobar\", false, \"debug=true\", null, bucket(), username(), password()))\n+            .<ViewQueryResponse>send(new ViewQueryRequest(\"designdoc\", \"foobar\"\n+                , false, \"debug=true\", null, bucket(), username(), password()))\n             .toBlocking()\n             .single();\n         assertEquals(ResponseStatus.NOT_EXISTS, single.status());\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
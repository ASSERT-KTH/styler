{
    "project_name": "vassalengine-vassal",
    "error_id": "26",
    "information": {
        "errors": [
            {
                "line": "555",
                "column": "7",
                "severity": "error",
                "message": "WhitespaceAround: 'switch' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
            }
        ]
    },
    "source_code": "      }\n      s += ';';\n      switch(stackOption.getValueString()) {\n      case NORMAL:\n        s += STACK_NORMAL;\n        break;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/vassalengine-vassal/errored/1/26/Immobilized.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/vassalengine-vassal/styler/26/Immobilized.java\nindex 36a0904ec29..6bc1a4c88c2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/vassalengine-vassal/errored/1/26/Immobilized.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/vassalengine-vassal/styler/26/Immobilized.java\n@@ -552,7 +552,7 @@ public class Immobilized extends Decorator implements EditablePiece {\n         break;\n       }\n       s += ';';\n-      switch(stackOption.getValueString()) {\n+      switch (stackOption.getValueString()) {\n       case NORMAL:\n         s += STACK_NORMAL;\n         break;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/vassalengine-vassal/errored/1/26/Immobilized.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/vassalengine-vassal/intellij/26/Immobilized.java\nindex 36a0904ec29..0945f0d8e51 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/vassalengine-vassal/errored/1/26/Immobilized.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/vassalengine-vassal/intellij/26/Immobilized.java\n@@ -15,6 +15,7 @@\n  * License along with this library; if not, copies are available\n  * at http://www.opensource.org.\n  */\n+\n package VASSAL.counters;\n \n import VASSAL.build.module.documentation.HelpFile;\n@@ -38,11 +39,10 @@ import javax.swing.KeyStroke;\n /**\n  * Decorator that filters events to prevent a GamePiece from\n  * being selected and/or moved.\n- *\n+ * <p>\n  * Note: The Alt selection filter was originally implemented\n  * as a ctl-shift filter, but this conflicts with the standard counter\n  * selection interface and has not worked since v3.0.\n- *\n  */\n public class Immobilized extends Decorator implements EditablePiece {\n \n@@ -108,7 +108,9 @@ public class Immobilized extends Decorator implements EditablePiece {\n     this(Immobilized.ID, null);\n   }\n \n-  /** @deprecated Use {@link #Immobilized(String, GamePiece)} instead. */\n+  /**\n+   * @deprecated Use {@link #Immobilized(String, GamePiece)} instead.\n+   */\n   @Deprecated\n   public Immobilized(GamePiece p, String type) {\n     this(type, p);\n@@ -170,43 +172,35 @@ public class Immobilized extends Decorator implements EditablePiece {\n         neverMove = false;\n         moveIfSelected = true;\n         break;\n-      default :\n+      default:\n         neverMove = false;\n         moveIfSelected = false;\n       }\n     }\n     if (neverSelect) {\n       selectFilter = NEVER;\n-    }\n-    else if (shiftToSelect) {\n+    } else if (shiftToSelect) {\n       selectFilter = new UseShift();\n-    }\n-    else if (altToSelect) {\n+    } else if (altToSelect) {\n       selectFilter = new UseAlt();\n-    }\n-    else {\n+    } else {\n       selectFilter = null;\n     }\n     if (neverMove) {\n       moveFilter = NEVER;\n-    }\n-    else if (moveIfSelected) {\n+    } else if (moveIfSelected) {\n       moveFilter = new MoveIfSelected();\n-    }\n-    else {\n+    } else {\n       moveFilter = null;\n     }\n \n     if (neverBandSelect) {\n       bandselectFilter = NEVER;\n-    }\n-    else if (altToBandSelect) {\n+    } else if (altToBandSelect) {\n       bandselectFilter = new UseAlt();\n-    }\n-    else if (altShiftToBandSelect) {\n+    } else if (altShiftToBandSelect) {\n       bandselectFilter = new UseAltShift();\n-    }\n-    else {\n+    } else {\n       bandselectFilter = null;\n     }\n \n@@ -235,26 +229,19 @@ public class Immobilized extends Decorator implements EditablePiece {\n   public Object getLocalizedProperty(Object key) {\n     if (Properties.NO_STACK.equals(key)) {\n       return canStack ? null : Boolean.TRUE; // Note for compatibility, return null if stacking allowed, not Boolean.FALSE.\n-    }\n-    else if (Properties.TERRAIN.equals(key)) {\n+    } else if (Properties.TERRAIN.equals(key)) {\n       return moveIfSelected || neverMove;\n-    }\n-    else if (Properties.IGNORE_GRID.equals(key)) {\n+    } else if (Properties.IGNORE_GRID.equals(key)) {\n       return ignoreGrid;\n-    }\n-    else if (Properties.SELECT_EVENT_FILTER.equals(key)) {\n+    } else if (Properties.SELECT_EVENT_FILTER.equals(key)) {\n       return selectFilter;\n-    }\n-    else if (Properties.MOVE_EVENT_FILTER.equals(key)) {\n+    } else if (Properties.MOVE_EVENT_FILTER.equals(key)) {\n       return moveFilter;\n-    }\n-    else if (Properties.NON_MOVABLE.equals(key)) {\n+    } else if (Properties.NON_MOVABLE.equals(key)) {\n       return neverMove;\n-    }\n-    else if (Properties.BAND_SELECT_EVENT_FILTER.equals(key)) {\n+    } else if (Properties.BAND_SELECT_EVENT_FILTER.equals(key)) {\n       return bandselectFilter;\n-    }\n-    else {\n+    } else {\n       return super.getLocalizedProperty(key);\n     }\n   }\n@@ -263,26 +250,19 @@ public class Immobilized extends Decorator implements EditablePiece {\n   public Object getProperty(Object key) {\n     if (Properties.NO_STACK.equals(key)) {\n       return canStack ? null : Boolean.TRUE; // Note for compatibility, return null if stacking allowed, not Boolean.FALSE.\n-    }\n-    else if (Properties.TERRAIN.equals(key)) {\n+    } else if (Properties.TERRAIN.equals(key)) {\n       return moveIfSelected || neverMove;\n-    }\n-    else if (Properties.IGNORE_GRID.equals(key)) {\n+    } else if (Properties.IGNORE_GRID.equals(key)) {\n       return ignoreGrid;\n-    }\n-    else if (Properties.SELECT_EVENT_FILTER.equals(key)) {\n+    } else if (Properties.SELECT_EVENT_FILTER.equals(key)) {\n       return selectFilter;\n-    }\n-    else if (Properties.MOVE_EVENT_FILTER.equals(key)) {\n+    } else if (Properties.MOVE_EVENT_FILTER.equals(key)) {\n       return moveFilter;\n-    }\n-    else if (Properties.NON_MOVABLE.equals(key)) {\n+    } else if (Properties.NON_MOVABLE.equals(key)) {\n       return neverMove;\n-    }\n-    else if (Properties.BAND_SELECT_EVENT_FILTER.equals(key)) {\n+    } else if (Properties.BAND_SELECT_EVENT_FILTER.equals(key)) {\n       return bandselectFilter;\n-    }\n-    else {\n+    } else {\n       return super.getProperty(key);\n     }\n   }\n@@ -307,11 +287,9 @@ public class Immobilized extends Decorator implements EditablePiece {\n     final StringBuilder buffer = new StringBuilder(ID);\n     if (neverSelect) {\n       buffer.append(NEVER_SELECT);\n-    }\n-    else if (shiftToSelect) {\n+    } else if (shiftToSelect) {\n       buffer.append(SHIFT_SELECT);\n-    }\n-    else if (altToSelect) {\n+    } else if (altToSelect) {\n       buffer.append(ALT_SELECT);\n     }\n     if (ignoreGrid) {\n@@ -319,29 +297,24 @@ public class Immobilized extends Decorator implements EditablePiece {\n     }\n     if (neverBandSelect) {\n       buffer.append(NEVER_BAND_SELECT);\n-    }\n-    else if (altToBandSelect) {\n+    } else if (altToBandSelect) {\n       buffer.append(ALT_BAND_SELECT);\n-    }\n-    else if (altShiftToBandSelect) {\n+    } else if (altShiftToBandSelect) {\n       buffer.append(ALT_SHIFT_BAND_SELECT);\n     }\n \n     buffer.append(';');\n     if (neverMove) {\n       buffer.append(NEVER_MOVE);\n-    }\n-    else if (moveIfSelected) {\n+    } else if (moveIfSelected) {\n       buffer.append(MOVE_SELECTED);\n-    }\n-    else {\n+    } else {\n       buffer.append(MOVE_NORMAL);\n     }\n     buffer.append(';');\n     if (canStack) {\n       buffer.append(STACK_NORMAL);\n-    }\n-    else {\n+    } else {\n       buffer.append(NEVER_STACK);\n     }\n     return buffer.toString();\n@@ -385,18 +358,38 @@ public class Immobilized extends Decorator implements EditablePiece {\n \n   @Override\n   public boolean testEquals(Object o) {\n-    if (! (o instanceof Immobilized)) return false;\n+    if (!(o instanceof Immobilized)) {\n+      return false;\n+    }\n     final Immobilized c = (Immobilized) o;\n \n-    if (! Objects.equals(shiftToSelect, c.shiftToSelect)) return false;\n-    if (! Objects.equals(altToSelect, c.altToSelect)) return false;\n-    if (! Objects.equals(neverSelect, c.neverSelect)) return false;\n-    if (! Objects.equals(ignoreGrid, c.ignoreGrid)) return false;\n-    if (! Objects.equals(neverMove, c.neverMove)) return false;\n-    if (! Objects.equals(moveIfSelected, c.moveIfSelected)) return false;\n-    if (! Objects.equals(neverBandSelect, c.neverBandSelect)) return false;\n-    if (! Objects.equals(altShiftToBandSelect, c.altShiftToBandSelect)) return false;\n-    if (! Objects.equals(canStack, c.canStack)) return false;\n+    if (!Objects.equals(shiftToSelect, c.shiftToSelect)) {\n+      return false;\n+    }\n+    if (!Objects.equals(altToSelect, c.altToSelect)) {\n+      return false;\n+    }\n+    if (!Objects.equals(neverSelect, c.neverSelect)) {\n+      return false;\n+    }\n+    if (!Objects.equals(ignoreGrid, c.ignoreGrid)) {\n+      return false;\n+    }\n+    if (!Objects.equals(neverMove, c.neverMove)) {\n+      return false;\n+    }\n+    if (!Objects.equals(moveIfSelected, c.moveIfSelected)) {\n+      return false;\n+    }\n+    if (!Objects.equals(neverBandSelect, c.neverBandSelect)) {\n+      return false;\n+    }\n+    if (!Objects.equals(altShiftToBandSelect, c.altShiftToBandSelect)) {\n+      return false;\n+    }\n+    if (!Objects.equals(canStack, c.canStack)) {\n+      return false;\n+    }\n \n     return Objects.equals(altToBandSelect, c.altToBandSelect);\n   }\n@@ -416,7 +409,7 @@ public class Immobilized extends Decorator implements EditablePiece {\n     private static final String NEVER = \"never\"; // NON-NLS\n     private static final String SELECTED = \"only if selected\"; // NON-NLS\n \n-    private static final String[] SELECT_OPTIONS = { NORMAL, SHIFT, ALT, NEVER}; // NON-NLS\n+    private static final String[] SELECT_OPTIONS = {NORMAL, SHIFT, ALT, NEVER}; // NON-NLS\n \n     private static final String[] SELECT_KEYS = {\n       \"Editor.Immobilized.normally\",\n@@ -425,7 +418,7 @@ public class Immobilized extends Decorator implements EditablePiece {\n       \"Editor.Immobilized.never\"\n     };\n \n-    private static final String[] BAND_SELECT_OPTIONS = { NORMAL, ALT, ALT_SHIFT, NEVER}; // NON-NLS\n+    private static final String[] BAND_SELECT_OPTIONS = {NORMAL, ALT, ALT_SHIFT, NEVER}; // NON-NLS\n \n     private static final String[] BAND_SELECT_KEYS = {\n       \"Editor.Immobilized.normally\",\n@@ -434,7 +427,7 @@ public class Immobilized extends Decorator implements EditablePiece {\n       \"Editor.Immobilized.never\"\n     };\n \n-    private static final String[] MOVE_OPTIONS = { NORMAL, SELECTED, NEVER }; // NON-NLS\n+    private static final String[] MOVE_OPTIONS = {NORMAL, SELECTED, NEVER}; // NON-NLS\n \n     private static final String[] MOVE_KEYS = {\n       \"Editor.Immobilized.normally\",\n@@ -442,7 +435,7 @@ public class Immobilized extends Decorator implements EditablePiece {\n       \"Editor.Immobilized.never\"\n     };\n \n-    private static final String[] STACK_OPTIONS = { NORMAL, NEVER }; // NON-NLS\n+    private static final String[] STACK_OPTIONS = {NORMAL, NEVER}; // NON-NLS\n \n     private static final String[] STACK_KEYS = {\n       \"Editor.Immobilized.normally\",\n@@ -455,14 +448,11 @@ public class Immobilized extends Decorator implements EditablePiece {\n       selectionOption = new TranslatingStringEnumConfigurer(SELECT_OPTIONS, SELECT_KEYS);\n       if (p.neverSelect) {\n         selectionOption.setValue(NEVER);\n-      }\n-      else if (p.altToSelect) {\n+      } else if (p.altToSelect) {\n         selectionOption.setValue(ALT);\n-      }\n-      else if (p.shiftToSelect) {\n+      } else if (p.shiftToSelect) {\n         selectionOption.setValue(SHIFT);\n-      }\n-      else {\n+      } else {\n         selectionOption.setValue(NORMAL);\n       }\n       controls.add(\"Editor.Immobilized.select_piece\", selectionOption);\n@@ -470,14 +460,11 @@ public class Immobilized extends Decorator implements EditablePiece {\n       bandSelectOption = new TranslatingStringEnumConfigurer(BAND_SELECT_OPTIONS, BAND_SELECT_KEYS);\n       if (p.neverBandSelect) {\n         bandSelectOption.setValue(NEVER);\n-      }\n-      else if (p.altToBandSelect) {\n+      } else if (p.altToBandSelect) {\n         bandSelectOption.setValue(ALT);\n-      }\n-      else if (p.altShiftToBandSelect) {\n+      } else if (p.altShiftToBandSelect) {\n         bandSelectOption.setValue(ALT_SHIFT);\n-      }\n-      else {\n+      } else {\n         bandSelectOption.setValue(NORMAL);\n       }\n       controls.add(\"Editor.Immobilized.band_select_piece\", bandSelectOption);\n@@ -485,11 +472,9 @@ public class Immobilized extends Decorator implements EditablePiece {\n       movementOption = new TranslatingStringEnumConfigurer(MOVE_OPTIONS, MOVE_KEYS);\n       if (p.neverMove) {\n         movementOption.setValue(NEVER);\n-      }\n-      else if (p.moveIfSelected) {\n+      } else if (p.moveIfSelected) {\n         movementOption.setValue(SELECTED);\n-      }\n-      else {\n+      } else {\n         movementOption.setValue(NORMAL);\n       }\n       controls.add(\"Editor.Immobilized.move_piece\", movementOption);\n@@ -497,8 +482,7 @@ public class Immobilized extends Decorator implements EditablePiece {\n       stackOption = new TranslatingStringEnumConfigurer(STACK_OPTIONS, STACK_KEYS);\n       if (p.canStack) {\n         stackOption.setValue(NORMAL);\n-      }\n-      else {\n+      } else {\n         stackOption.setValue(NEVER);\n       }\n       controls.add(\"Editor.Immobilized.stack_piece\", stackOption);\n@@ -552,7 +536,7 @@ public class Immobilized extends Decorator implements EditablePiece {\n         break;\n       }\n       s += ';';\n-      switch(stackOption.getValueString()) {\n+      switch (stackOption.getValueString()) {\n       case NORMAL:\n         s += STACK_NORMAL;\n         break;\n",
            "diff_size": 118
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/vassalengine-vassal/errored/1/26/Immobilized.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/vassalengine-vassal/styler_random/26/Immobilized.java\nindex 36a0904ec29..6bc1a4c88c2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/vassalengine-vassal/errored/1/26/Immobilized.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/vassalengine-vassal/styler_random/26/Immobilized.java\n@@ -552,7 +552,7 @@ public class Immobilized extends Decorator implements EditablePiece {\n         break;\n       }\n       s += ';';\n-      switch(stackOption.getValueString()) {\n+      switch (stackOption.getValueString()) {\n       case NORMAL:\n         s += STACK_NORMAL;\n         break;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/vassalengine-vassal/errored/1/26/Immobilized.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/vassalengine-vassal/styler_three_grams/26/Immobilized.java\nindex 36a0904ec29..6bc1a4c88c2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/vassalengine-vassal/errored/1/26/Immobilized.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/vassalengine-vassal/styler_three_grams/26/Immobilized.java\n@@ -552,7 +552,7 @@ public class Immobilized extends Decorator implements EditablePiece {\n         break;\n       }\n       s += ';';\n-      switch(stackOption.getValueString()) {\n+      switch (stackOption.getValueString()) {\n       case NORMAL:\n         s += STACK_NORMAL;\n         break;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
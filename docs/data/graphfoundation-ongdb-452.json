{
    "project_name": "graphfoundation-ongdb",
    "error_id": "452",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "52",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "111",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "175",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "175",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/452/DirectRecordAccessSet.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/452/DirectRecordAccessSet.java\nindex 62691cb48ff..083de236385 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/452/DirectRecordAccessSet.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/452/DirectRecordAccessSet.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.unsafe.batchinsert.internal;\n \n import org.neo4j.kernel.impl.store.NeoStores;\n@@ -39,142 +40,142 @@ import org.neo4j.storageengine.api.schema.SchemaRule;\n \n public class DirectRecordAccessSet implements RecordAccessSet\n {\n-    private final DirectRecordAccess<NodeRecord, Void> nodeRecords;\n-    private final DirectRecordAccess<PropertyRecord, PrimitiveRecord> propertyRecords;\n-    private final DirectRecordAccess<RelationshipRecord, Void> relationshipRecords;\n-    private final DirectRecordAccess<RelationshipGroupRecord, Integer> relationshipGroupRecords;\n-    private final DirectRecordAccess<PropertyKeyTokenRecord, Void> propertyKeyTokenRecords;\n-    private final DirectRecordAccess<RelationshipTypeTokenRecord, Void> relationshipTypeTokenRecords;\n-    private final DirectRecordAccess<LabelTokenRecord, Void> labelTokenRecords;\n-    private final DirectRecordAccess[] all;\n-\n-    public DirectRecordAccessSet( NeoStores neoStores )\n-    {\n-        this(\n-                neoStores.getNodeStore(),\n-                neoStores.getPropertyStore(),\n-                neoStores.getRelationshipStore(),\n-                neoStores.getRelationshipGroupStore(),\n-                neoStores.getPropertyKeyTokenStore(),\n-                neoStores.getRelationshipTypeTokenStore(),\n-                neoStores.getLabelTokenStore(),\n-                neoStores.getSchemaStore() );\n-    }\n-\n-    public DirectRecordAccessSet(\n-            RecordStore<NodeRecord> nodeStore,\n-            PropertyStore propertyStore,\n-            RecordStore<RelationshipRecord> relationshipStore,\n-            RecordStore<RelationshipGroupRecord> relationshipGroupStore,\n-            RecordStore<PropertyKeyTokenRecord> propertyKeyTokenStore,\n-            RecordStore<RelationshipTypeTokenRecord> relationshipTypeTokenStore,\n-            RecordStore<LabelTokenRecord> labelTokenStore,\n-            SchemaStore schemaStore )\n-    {\n-        Loaders loaders = new Loaders( nodeStore, propertyStore, relationshipStore, relationshipGroupStore,\n-                propertyKeyTokenStore, relationshipTypeTokenStore, labelTokenStore, schemaStore );\n-        nodeRecords = new DirectRecordAccess<>( nodeStore, loaders.nodeLoader() );\n-        propertyRecords = new DirectRecordAccess<>( propertyStore, loaders.propertyLoader() );\n-        relationshipRecords = new DirectRecordAccess<>( relationshipStore, loaders.relationshipLoader() );\n-        relationshipGroupRecords = new DirectRecordAccess<>(\n-                relationshipGroupStore, loaders.relationshipGroupLoader() );\n-        propertyKeyTokenRecords = new DirectRecordAccess<>( propertyKeyTokenStore, loaders.propertyKeyTokenLoader() );\n-        relationshipTypeTokenRecords = new DirectRecordAccess<>(\n-                relationshipTypeTokenStore, loaders.relationshipTypeTokenLoader() );\n-        labelTokenRecords = new DirectRecordAccess<>( labelTokenStore, loaders.labelTokenLoader() );\n-        all = new DirectRecordAccess[] {\n-                nodeRecords, propertyRecords, relationshipRecords, relationshipGroupRecords,\n-                propertyKeyTokenRecords, relationshipTypeTokenRecords, labelTokenRecords\n-        };\n-    }\n-\n-    @Override\n-    public RecordAccess<NodeRecord, Void> getNodeRecords()\n-    {\n-        return nodeRecords;\n-    }\n-\n-    @Override\n-    public RecordAccess<PropertyRecord, PrimitiveRecord> getPropertyRecords()\n-    {\n-        return propertyRecords;\n-    }\n-\n-    @Override\n-    public RecordAccess<RelationshipRecord, Void> getRelRecords()\n-    {\n-        return relationshipRecords;\n-    }\n-\n-    @Override\n-    public RecordAccess<RelationshipGroupRecord, Integer> getRelGroupRecords()\n+  private final DirectRecordAccess<NodeRecord, Void> nodeRecords;\n+  private final DirectRecordAccess<PropertyRecord, PrimitiveRecord> propertyRecords;\n+  private final DirectRecordAccess<RelationshipRecord, Void> relationshipRecords;\n+  private final DirectRecordAccess<RelationshipGroupRecord, Integer> relationshipGroupRecords;\n+  private final DirectRecordAccess<PropertyKeyTokenRecord, Void> propertyKeyTokenRecords;\n+  private final DirectRecordAccess<RelationshipTypeTokenRecord, Void> relationshipTypeTokenRecords;\n+  private final DirectRecordAccess<LabelTokenRecord, Void> labelTokenRecords;\n+  private final DirectRecordAccess[] all;\n+\n+  public DirectRecordAccessSet(NeoStores neoStores)\n+  {\n+    this(\n+        neoStores.getNodeStore(),\n+        neoStores.getPropertyStore(),\n+        neoStores.getRelationshipStore(),\n+        neoStores.getRelationshipGroupStore(),\n+        neoStores.getPropertyKeyTokenStore(),\n+        neoStores.getRelationshipTypeTokenStore(),\n+        neoStores.getLabelTokenStore(),\n+        neoStores.getSchemaStore());\n+  }\n+\n+  public DirectRecordAccessSet(\n+      RecordStore<NodeRecord> nodeStore,\n+      PropertyStore propertyStore,\n+      RecordStore<RelationshipRecord> relationshipStore,\n+      RecordStore<RelationshipGroupRecord> relationshipGroupStore,\n+      RecordStore<PropertyKeyTokenRecord> propertyKeyTokenStore,\n+      RecordStore<RelationshipTypeTokenRecord> relationshipTypeTokenStore,\n+      RecordStore<LabelTokenRecord> labelTokenStore,\n+      SchemaStore schemaStore)\n+  {\n+    Loaders loaders = new Loaders(nodeStore, propertyStore, relationshipStore, relationshipGroupStore,\n+        propertyKeyTokenStore, relationshipTypeTokenStore, labelTokenStore, schemaStore);\n+    nodeRecords = new DirectRecordAccess<>(nodeStore, loaders.nodeLoader());\n+    propertyRecords = new DirectRecordAccess<>(propertyStore, loaders.propertyLoader());\n+    relationshipRecords = new DirectRecordAccess<>(relationshipStore, loaders.relationshipLoader());\n+    relationshipGroupRecords = new DirectRecordAccess<>(\n+        relationshipGroupStore, loaders.relationshipGroupLoader());\n+    propertyKeyTokenRecords = new DirectRecordAccess<>(propertyKeyTokenStore, loaders.propertyKeyTokenLoader());\n+    relationshipTypeTokenRecords = new DirectRecordAccess<>(\n+        relationshipTypeTokenStore, loaders.relationshipTypeTokenLoader());\n+    labelTokenRecords = new DirectRecordAccess<>(labelTokenStore, loaders.labelTokenLoader());\n+    all = new DirectRecordAccess[] {\n+        nodeRecords, propertyRecords, relationshipRecords, relationshipGroupRecords,\n+        propertyKeyTokenRecords, relationshipTypeTokenRecords, labelTokenRecords\n+    };\n+  }\n+\n+  @Override\n+  public RecordAccess<NodeRecord, Void> getNodeRecords()\n+  {\n+    return nodeRecords;\n+  }\n+\n+  @Override\n+  public RecordAccess<PropertyRecord, PrimitiveRecord> getPropertyRecords()\n+  {\n+    return propertyRecords;\n+  }\n+\n+  @Override\n+  public RecordAccess<RelationshipRecord, Void> getRelRecords()\n+  {\n+    return relationshipRecords;\n+  }\n+\n+  @Override\n+  public RecordAccess<RelationshipGroupRecord, Integer> getRelGroupRecords()\n+  {\n+    return relationshipGroupRecords;\n+  }\n+\n+  @Override\n+  public RecordAccess<SchemaRecord, SchemaRule> getSchemaRuleChanges()\n+  {\n+    throw new UnsupportedOperationException(\"Not needed. Implement if needed\");\n+  }\n+\n+  @Override\n+  public RecordAccess<PropertyKeyTokenRecord, Void> getPropertyKeyTokenChanges()\n+  {\n+    return propertyKeyTokenRecords;\n+  }\n+\n+  @Override\n+  public RecordAccess<LabelTokenRecord, Void> getLabelTokenChanges()\n+  {\n+    return labelTokenRecords;\n+  }\n+\n+  @Override\n+  public RecordAccess<RelationshipTypeTokenRecord, Void> getRelationshipTypeTokenChanges()\n+  {\n+    return relationshipTypeTokenRecords;\n+  }\n+\n+  @Override\n+  public void close()\n+  {\n+    commit();\n+    for (DirectRecordAccess access : all)\n     {\n-        return relationshipGroupRecords;\n+      access.close();\n     }\n+  }\n \n-    @Override\n-    public RecordAccess<SchemaRecord, SchemaRule> getSchemaRuleChanges()\n+  public void commit()\n+  {\n+    for (DirectRecordAccess access : all)\n     {\n-        throw new UnsupportedOperationException( \"Not needed. Implement if needed\" );\n+      access.commit();\n     }\n+  }\n \n-    @Override\n-    public RecordAccess<PropertyKeyTokenRecord, Void> getPropertyKeyTokenChanges()\n+  @Override\n+  public boolean hasChanges()\n+  {\n+    for (DirectRecordAccess access : all)\n     {\n-        return propertyKeyTokenRecords;\n+      if (access.changeSize() > 0)\n+      {\n+        return true;\n+      }\n     }\n-\n-    @Override\n-    public RecordAccess<LabelTokenRecord, Void> getLabelTokenChanges()\n-    {\n-        return labelTokenRecords;\n-    }\n-\n-    @Override\n-    public RecordAccess<RelationshipTypeTokenRecord, Void> getRelationshipTypeTokenChanges()\n-    {\n-        return relationshipTypeTokenRecords;\n-    }\n-\n-    @Override\n-    public void close()\n-    {\n-        commit();\n-        for ( DirectRecordAccess access : all )\n-        {\n-            access.close();\n-        }\n-    }\n-\n-    public void commit()\n-    {\n-        for ( DirectRecordAccess access : all )\n-        {\n-            access.commit();\n-        }\n-    }\n-\n-    @Override\n-    public boolean hasChanges()\n-    {\n-        for ( DirectRecordAccess access : all )\n-        {\n-            if ( access.changeSize() > 0 )\n-            {\n-                return true;\n-            }\n-        }\n-        return false;\n-    }\n-\n-    @Override\n-    public int changeSize()\n+    return false;\n+  }\n+\n+  @Override\n+  public int changeSize()\n+  {\n+    int total = 0;\n+    for (DirectRecordAccess access : all)\n     {\n-        int total = 0;\n-        for ( DirectRecordAccess access : all )\n-        {\n-            total += access.changeSize();\n-        }\n-        return total;\n+      total += access.changeSize();\n     }\n+    return total;\n+  }\n }\n",
            "diff_size": 172
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 285).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "57",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 327).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "70",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 168).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/452/DirectRecordAccessSet.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/452/DirectRecordAccessSet.java\nindex 62691cb48ff..73bd12ea806 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/452/DirectRecordAccessSet.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/452/DirectRecordAccessSet.java\n@@ -39,99 +39,81 @@ import org.neo4j.storageengine.api.schema.SchemaRule;\n \n public class DirectRecordAccessSet implements RecordAccessSet\n {\n-    private final DirectRecordAccess<NodeRecord, Void> nodeRecords;\n-    private final DirectRecordAccess<PropertyRecord, PrimitiveRecord> propertyRecords;\n-    private final DirectRecordAccess<RelationshipRecord, Void> relationshipRecords;\n-    private final DirectRecordAccess<RelationshipGroupRecord, Integer> relationshipGroupRecords;\n-    private final DirectRecordAccess<PropertyKeyTokenRecord, Void> propertyKeyTokenRecords;\n-    private final DirectRecordAccess<RelationshipTypeTokenRecord, Void> relationshipTypeTokenRecords;\n-    private final DirectRecordAccess<LabelTokenRecord, Void> labelTokenRecords;\n+    private final DirectRecordAccess<NodeRecord,Void> nodeRecords;\n+    private final DirectRecordAccess<PropertyRecord,PrimitiveRecord> propertyRecords;\n+    private final DirectRecordAccess<RelationshipRecord,Void> relationshipRecords;\n+    private final DirectRecordAccess<RelationshipGroupRecord,Integer> relationshipGroupRecords;\n+    private final DirectRecordAccess<PropertyKeyTokenRecord,Void> propertyKeyTokenRecords;\n+    private final DirectRecordAccess<RelationshipTypeTokenRecord,Void> relationshipTypeTokenRecords;\n+    private final DirectRecordAccess<LabelTokenRecord,Void> labelTokenRecords;\n     private final DirectRecordAccess[] all;\n \n     public DirectRecordAccessSet( NeoStores neoStores )\n     {\n-        this(\n-                neoStores.getNodeStore(),\n-                neoStores.getPropertyStore(),\n-                neoStores.getRelationshipStore(),\n-                neoStores.getRelationshipGroupStore(),\n-                neoStores.getPropertyKeyTokenStore(),\n-                neoStores.getRelationshipTypeTokenStore(),\n-                neoStores.getLabelTokenStore(),\n-                neoStores.getSchemaStore() );\n+        this( neoStores.getNodeStore(), neoStores.getPropertyStore(), neoStores.getRelationshipStore(), neoStores.getRelationshipGroupStore(), neoStores.getPropertyKeyTokenStore(), neoStores.getRelationshipTypeTokenStore(), neoStores.getLabelTokenStore(), neoStores.getSchemaStore() );\n     }\n \n-    public DirectRecordAccessSet(\n-            RecordStore<NodeRecord> nodeStore,\n-            PropertyStore propertyStore,\n-            RecordStore<RelationshipRecord> relationshipStore,\n-            RecordStore<RelationshipGroupRecord> relationshipGroupStore,\n-            RecordStore<PropertyKeyTokenRecord> propertyKeyTokenStore,\n-            RecordStore<RelationshipTypeTokenRecord> relationshipTypeTokenStore,\n-            RecordStore<LabelTokenRecord> labelTokenStore,\n+    public DirectRecordAccessSet( RecordStore<NodeRecord> nodeStore,\n+            PropertyStore propertyStore, RecordStore<RelationshipRecord> relationshipStore, RecordStore<RelationshipGroupRecord> relationshipGroupStore, RecordStore<PropertyKeyTokenRecord> propertyKeyTokenStore, RecordStore<RelationshipTypeTokenRecord> relationshipTypeTokenStore, RecordStore<LabelTokenRecord> labelTokenStore,\n             SchemaStore schemaStore )\n     {\n         Loaders loaders = new Loaders( nodeStore, propertyStore, relationshipStore, relationshipGroupStore,\n                 propertyKeyTokenStore, relationshipTypeTokenStore, labelTokenStore, schemaStore );\n-        nodeRecords = new DirectRecordAccess<>( nodeStore, loaders.nodeLoader() );\n+nodeRecords = new DirectRecordAccess<>( nodeStore, loaders.nodeLoader() );\n         propertyRecords = new DirectRecordAccess<>( propertyStore, loaders.propertyLoader() );\n         relationshipRecords = new DirectRecordAccess<>( relationshipStore, loaders.relationshipLoader() );\n-        relationshipGroupRecords = new DirectRecordAccess<>(\n-                relationshipGroupStore, loaders.relationshipGroupLoader() );\n-        propertyKeyTokenRecords = new DirectRecordAccess<>( propertyKeyTokenStore, loaders.propertyKeyTokenLoader() );\n-        relationshipTypeTokenRecords = new DirectRecordAccess<>(\n-                relationshipTypeTokenStore, loaders.relationshipTypeTokenLoader() );\n-        labelTokenRecords = new DirectRecordAccess<>( labelTokenStore, loaders.labelTokenLoader() );\n+        relationshipGroupRecords = new DirectRecordAccess<>( relationshipGroupStore, loaders.relationshipGroupLoader() );\n+propertyKeyTokenRecords = new DirectRecordAccess<>( propertyKeyTokenStore, loaders.propertyKeyTokenLoader() );\n+        relationshipTypeTokenRecords = new DirectRecordAccess<>( relationshipTypeTokenStore, loaders.relationshipTypeTokenLoader() );\n+labelTokenRecords = new DirectRecordAccess<>( labelTokenStore, loaders.labelTokenLoader() );\n         all = new DirectRecordAccess[] {\n-                nodeRecords, propertyRecords, relationshipRecords, relationshipGroupRecords,\n-                propertyKeyTokenRecords, relationshipTypeTokenRecords, labelTokenRecords\n-        };\n+                nodeRecords, propertyRecords, relationshipRecords, relationshipGroupRecords, propertyKeyTokenRecords, relationshipTypeTokenRecords, labelTokenRecords };\n     }\n \n     @Override\n-    public RecordAccess<NodeRecord, Void> getNodeRecords()\n+    public RecordAccess<NodeRecord,Void> getNodeRecords()\n     {\n         return nodeRecords;\n     }\n \n     @Override\n-    public RecordAccess<PropertyRecord, PrimitiveRecord> getPropertyRecords()\n+    public RecordAccess<PropertyRecord,PrimitiveRecord> getPropertyRecords()\n     {\n         return propertyRecords;\n     }\n \n     @Override\n-    public RecordAccess<RelationshipRecord, Void> getRelRecords()\n+    public RecordAccess<RelationshipRecord,Void> getRelRecords()\n     {\n         return relationshipRecords;\n     }\n \n     @Override\n-    public RecordAccess<RelationshipGroupRecord, Integer> getRelGroupRecords()\n+    public RecordAccess<RelationshipGroupRecord,Integer> getRelGroupRecords()\n     {\n         return relationshipGroupRecords;\n     }\n \n     @Override\n-    public RecordAccess<SchemaRecord, SchemaRule> getSchemaRuleChanges()\n+    public RecordAccess<SchemaRecord,SchemaRule> getSchemaRuleChanges()\n     {\n         throw new UnsupportedOperationException( \"Not needed. Implement if needed\" );\n     }\n \n     @Override\n-    public RecordAccess<PropertyKeyTokenRecord, Void> getPropertyKeyTokenChanges()\n+    public RecordAccess<PropertyKeyTokenRecord,Void> getPropertyKeyTokenChanges()\n     {\n         return propertyKeyTokenRecords;\n     }\n \n     @Override\n-    public RecordAccess<LabelTokenRecord, Void> getLabelTokenChanges()\n+    public RecordAccess<LabelTokenRecord,Void> getLabelTokenChanges()\n     {\n         return labelTokenRecords;\n     }\n \n     @Override\n-    public RecordAccess<RelationshipTypeTokenRecord, Void> getRelationshipTypeTokenChanges()\n+    public RecordAccess<RelationshipTypeTokenRecord,Void> getRelationshipTypeTokenChanges()\n     {\n         return relationshipTypeTokenRecords;\n     }\n@@ -175,6 +157,7 @@ public class DirectRecordAccessSet implements RecordAccessSet\n         {\n             total += access.changeSize();\n         }\n-        return total;\n+\n+return total;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 45
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 285).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "56",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 410).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "58",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 190).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "66",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 193).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "121",
                    "column": "9",
                    "severity": "error",
                    "message": "'for' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "121",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "9",
                    "severity": "error",
                    "message": "'for' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "129",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "9",
                    "severity": "error",
                    "message": "'for' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "138",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "9",
                    "severity": "error",
                    "message": "'for' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "153",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/452/DirectRecordAccessSet.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/452/DirectRecordAccessSet.java\nindex 62691cb48ff..1aa7f72f577 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/452/DirectRecordAccessSet.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/452/DirectRecordAccessSet.java\n@@ -39,99 +39,77 @@ import org.neo4j.storageengine.api.schema.SchemaRule;\n \n public class DirectRecordAccessSet implements RecordAccessSet\n {\n-    private final DirectRecordAccess<NodeRecord, Void> nodeRecords;\n-    private final DirectRecordAccess<PropertyRecord, PrimitiveRecord> propertyRecords;\n-    private final DirectRecordAccess<RelationshipRecord, Void> relationshipRecords;\n-    private final DirectRecordAccess<RelationshipGroupRecord, Integer> relationshipGroupRecords;\n-    private final DirectRecordAccess<PropertyKeyTokenRecord, Void> propertyKeyTokenRecords;\n-    private final DirectRecordAccess<RelationshipTypeTokenRecord, Void> relationshipTypeTokenRecords;\n-    private final DirectRecordAccess<LabelTokenRecord, Void> labelTokenRecords;\n+    private final DirectRecordAccess<NodeRecord,Void> nodeRecords;\n+    private final DirectRecordAccess<PropertyRecord,PrimitiveRecord> propertyRecords;\n+    private final DirectRecordAccess<RelationshipRecord,Void> relationshipRecords;\n+    private final DirectRecordAccess<RelationshipGroupRecord,Integer> relationshipGroupRecords;\n+    private final DirectRecordAccess<PropertyKeyTokenRecord,Void> propertyKeyTokenRecords;\n+    private final DirectRecordAccess<RelationshipTypeTokenRecord,Void> relationshipTypeTokenRecords;\n+    private final DirectRecordAccess<LabelTokenRecord,Void> labelTokenRecords;\n     private final DirectRecordAccess[] all;\n \n     public DirectRecordAccessSet( NeoStores neoStores )\n     {\n-        this(\n-                neoStores.getNodeStore(),\n-                neoStores.getPropertyStore(),\n-                neoStores.getRelationshipStore(),\n-                neoStores.getRelationshipGroupStore(),\n-                neoStores.getPropertyKeyTokenStore(),\n-                neoStores.getRelationshipTypeTokenStore(),\n-                neoStores.getLabelTokenStore(),\n-                neoStores.getSchemaStore() );\n+        this( neoStores.getNodeStore(), neoStores.getPropertyStore(), neoStores.getRelationshipStore(), neoStores.getRelationshipGroupStore(), neoStores.getPropertyKeyTokenStore(), neoStores.getRelationshipTypeTokenStore(), neoStores.getLabelTokenStore(), neoStores.getSchemaStore() );\n     }\n \n-    public DirectRecordAccessSet(\n-            RecordStore<NodeRecord> nodeStore,\n-            PropertyStore propertyStore,\n-            RecordStore<RelationshipRecord> relationshipStore,\n-            RecordStore<RelationshipGroupRecord> relationshipGroupStore,\n-            RecordStore<PropertyKeyTokenRecord> propertyKeyTokenStore,\n-            RecordStore<RelationshipTypeTokenRecord> relationshipTypeTokenStore,\n-            RecordStore<LabelTokenRecord> labelTokenStore,\n-            SchemaStore schemaStore )\n+    public DirectRecordAccessSet( RecordStore<NodeRecord> nodeStore, PropertyStore propertyStore, RecordStore<RelationshipRecord> relationshipStore, RecordStore<RelationshipGroupRecord> relationshipGroupStore, RecordStore<PropertyKeyTokenRecord> propertyKeyTokenStore, RecordStore<RelationshipTypeTokenRecord> relationshipTypeTokenStore, RecordStore<LabelTokenRecord> labelTokenStore, SchemaStore schemaStore )\n     {\n-        Loaders loaders = new Loaders( nodeStore, propertyStore, relationshipStore, relationshipGroupStore,\n-                propertyKeyTokenStore, relationshipTypeTokenStore, labelTokenStore, schemaStore );\n+        Loaders loaders = new Loaders( nodeStore, propertyStore, relationshipStore, relationshipGroupStore, propertyKeyTokenStore, relationshipTypeTokenStore, labelTokenStore, schemaStore );\n         nodeRecords = new DirectRecordAccess<>( nodeStore, loaders.nodeLoader() );\n         propertyRecords = new DirectRecordAccess<>( propertyStore, loaders.propertyLoader() );\n         relationshipRecords = new DirectRecordAccess<>( relationshipStore, loaders.relationshipLoader() );\n-        relationshipGroupRecords = new DirectRecordAccess<>(\n-                relationshipGroupStore, loaders.relationshipGroupLoader() );\n+        relationshipGroupRecords = new DirectRecordAccess<>( relationshipGroupStore, loaders.relationshipGroupLoader() );\n         propertyKeyTokenRecords = new DirectRecordAccess<>( propertyKeyTokenStore, loaders.propertyKeyTokenLoader() );\n-        relationshipTypeTokenRecords = new DirectRecordAccess<>(\n-                relationshipTypeTokenStore, loaders.relationshipTypeTokenLoader() );\n+        relationshipTypeTokenRecords = new DirectRecordAccess<>( relationshipTypeTokenStore, loaders.relationshipTypeTokenLoader() );\n         labelTokenRecords = new DirectRecordAccess<>( labelTokenStore, loaders.labelTokenLoader() );\n-        all = new DirectRecordAccess[] {\n-                nodeRecords, propertyRecords, relationshipRecords, relationshipGroupRecords,\n-                propertyKeyTokenRecords, relationshipTypeTokenRecords, labelTokenRecords\n-        };\n+        all = new DirectRecordAccess[] { nodeRecords, propertyRecords, relationshipRecords, relationshipGroupRecords, propertyKeyTokenRecords, relationshipTypeTokenRecords, labelTokenRecords };\n     }\n \n     @Override\n-    public RecordAccess<NodeRecord, Void> getNodeRecords()\n+    public RecordAccess<NodeRecord,Void> getNodeRecords()\n     {\n         return nodeRecords;\n     }\n \n     @Override\n-    public RecordAccess<PropertyRecord, PrimitiveRecord> getPropertyRecords()\n+    public RecordAccess<PropertyRecord,PrimitiveRecord> getPropertyRecords()\n     {\n         return propertyRecords;\n     }\n \n     @Override\n-    public RecordAccess<RelationshipRecord, Void> getRelRecords()\n+    public RecordAccess<RelationshipRecord,Void> getRelRecords()\n     {\n         return relationshipRecords;\n     }\n \n     @Override\n-    public RecordAccess<RelationshipGroupRecord, Integer> getRelGroupRecords()\n+    public RecordAccess<RelationshipGroupRecord,Integer> getRelGroupRecords()\n     {\n         return relationshipGroupRecords;\n     }\n \n     @Override\n-    public RecordAccess<SchemaRecord, SchemaRule> getSchemaRuleChanges()\n+    public RecordAccess<SchemaRecord,SchemaRule> getSchemaRuleChanges()\n     {\n         throw new UnsupportedOperationException( \"Not needed. Implement if needed\" );\n     }\n \n     @Override\n-    public RecordAccess<PropertyKeyTokenRecord, Void> getPropertyKeyTokenChanges()\n+    public RecordAccess<PropertyKeyTokenRecord,Void> getPropertyKeyTokenChanges()\n     {\n         return propertyKeyTokenRecords;\n     }\n \n     @Override\n-    public RecordAccess<LabelTokenRecord, Void> getLabelTokenChanges()\n+    public RecordAccess<LabelTokenRecord,Void> getLabelTokenChanges()\n     {\n         return labelTokenRecords;\n     }\n \n     @Override\n-    public RecordAccess<RelationshipTypeTokenRecord, Void> getRelationshipTypeTokenChanges()\n+    public RecordAccess<RelationshipTypeTokenRecord,Void> getRelationshipTypeTokenChanges()\n     {\n         return relationshipTypeTokenRecords;\n     }\n@@ -140,7 +118,7 @@ public class DirectRecordAccessSet implements RecordAccessSet\n     public void close()\n     {\n         commit();\n-        for ( DirectRecordAccess access : all )\n+        for( DirectRecordAccess access : all)\n         {\n             access.close();\n         }\n@@ -148,7 +126,7 @@ public class DirectRecordAccessSet implements RecordAccessSet\n \n     public void commit()\n     {\n-        for ( DirectRecordAccess access : all )\n+        for( DirectRecordAccess access : all)\n         {\n             access.commit();\n         }\n@@ -157,13 +135,14 @@ public class DirectRecordAccessSet implements RecordAccessSet\n     @Override\n     public boolean hasChanges()\n     {\n-        for ( DirectRecordAccess access : all )\n+        for( DirectRecordAccess access : all)\n         {\n             if ( access.changeSize() > 0 )\n             {\n                 return true;\n             }\n         }\n+\n         return false;\n     }\n \n@@ -171,10 +150,11 @@ public class DirectRecordAccessSet implements RecordAccessSet\n     public int changeSize()\n     {\n         int total = 0;\n-        for ( DirectRecordAccess access : all )\n+        for( DirectRecordAccess access : all)\n         {\n             total += access.changeSize();\n         }\n+\n         return total;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 50
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
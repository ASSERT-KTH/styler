{
    "project_name": "neo4j-neo4j",
    "error_id": "3228",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "92",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "126",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "144",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "139",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "142",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "142",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "142",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "209",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "209",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/3228/Neo4jLayout.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/3228/Neo4jLayout.java\nindex ef58a119a09..288a9755f77 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/3228/Neo4jLayout.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/3228/Neo4jLayout.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.io.layout;\n \n import java.io.IOException;\n@@ -88,40 +89,40 @@ public final class Neo4jLayout\n     private final Path txLogsRootDirectory;\n     private final Path scriptRootDirectory;\n \n-    public static Neo4jLayout of( Path homeDirectory )\n+    public static Neo4jLayout of(Path homeDirectory)\n     {\n-        return of( Config.defaults( GraphDatabaseSettings.neo4j_home, FileUtils.getCanonicalFile( homeDirectory ).toAbsolutePath() ) );\n+        return of(Config.defaults(GraphDatabaseSettings.neo4j_home, FileUtils.getCanonicalFile(homeDirectory).toAbsolutePath()));\n     }\n \n-    public static Neo4jLayout of( Config config )\n+    public static Neo4jLayout of(Config config)\n     {\n-        var homeDirectory = config.get( GraphDatabaseSettings.neo4j_home );\n-        var dataDirectory = config.get( GraphDatabaseSettings.data_directory );\n-        var databasesRootDirectory = config.get( GraphDatabaseInternalSettings.databases_root_path );\n-        var txLogsRootDirectory = config.get( GraphDatabaseSettings.transaction_logs_root_path );\n-        var scriptRootDirectory = config.get( GraphDatabaseSettings.script_root_path );\n-        return new Neo4jLayout( homeDirectory, dataDirectory, databasesRootDirectory, txLogsRootDirectory, scriptRootDirectory );\n+        var homeDirectory = config.get(GraphDatabaseSettings.neo4j_home);\n+        var dataDirectory = config.get(GraphDatabaseSettings.data_directory);\n+        var databasesRootDirectory = config.get(GraphDatabaseInternalSettings.databases_root_path);\n+        var txLogsRootDirectory = config.get(GraphDatabaseSettings.transaction_logs_root_path);\n+        var scriptRootDirectory = config.get(GraphDatabaseSettings.script_root_path);\n+        return new Neo4jLayout(homeDirectory, dataDirectory, databasesRootDirectory, txLogsRootDirectory, scriptRootDirectory);\n     }\n \n-    public static Neo4jLayout ofFlat( Path homeDirectory )\n+    public static Neo4jLayout ofFlat(Path homeDirectory)\n     {\n         var home = homeDirectory.toAbsolutePath();\n         var config = Config.newBuilder()\n-                .set( GraphDatabaseSettings.neo4j_home, home )\n-                .set( GraphDatabaseSettings.data_directory, home )\n-                .set( GraphDatabaseSettings.transaction_logs_root_path, home )\n-                .set( GraphDatabaseInternalSettings.databases_root_path, home )\n-                .build();\n-        return of( config );\n+          .set(GraphDatabaseSettings.neo4j_home, home)\n+          .set(GraphDatabaseSettings.data_directory, home)\n+          .set(GraphDatabaseSettings.transaction_logs_root_path, home)\n+          .set(GraphDatabaseInternalSettings.databases_root_path, home)\n+          .build();\n+        return of(config);\n     }\n \n-    private Neo4jLayout( Path homeDirectory, Path dataDirectory, Path databasesRootDirectory, Path txLogsRootDirectory, Path scriptRootDirectory )\n+    private Neo4jLayout(Path homeDirectory, Path dataDirectory, Path databasesRootDirectory, Path txLogsRootDirectory, Path scriptRootDirectory)\n     {\n-        this.homeDirectory = FileUtils.getCanonicalFile( homeDirectory );\n-        this.dataDirectory = FileUtils.getCanonicalFile( dataDirectory );\n-        this.databasesRootDirectory = FileUtils.getCanonicalFile( databasesRootDirectory );\n-        this.txLogsRootDirectory = FileUtils.getCanonicalFile( txLogsRootDirectory );\n-        this.scriptRootDirectory = FileUtils.getCanonicalFile( scriptRootDirectory );\n+        this.homeDirectory = FileUtils.getCanonicalFile(homeDirectory);\n+        this.dataDirectory = FileUtils.getCanonicalFile(dataDirectory);\n+        this.databasesRootDirectory = FileUtils.getCanonicalFile(databasesRootDirectory);\n+        this.txLogsRootDirectory = FileUtils.getCanonicalFile(txLogsRootDirectory);\n+        this.scriptRootDirectory = FileUtils.getCanonicalFile(scriptRootDirectory);\n     }\n \n     /**\n@@ -132,17 +133,15 @@ public final class Neo4jLayout\n      */\n     public Collection<DatabaseLayout> databaseLayouts()\n     {\n-        try ( Stream<Path> list = Files.list( databasesRootDirectory) )\n+        try (Stream<Path> list = Files.list(databasesRootDirectory))\n         {\n-            return list.filter( Files::isDirectory ).map( directory -> DatabaseLayout.of( this, directory.getFileName().toString() ) ).collect( toList() );\n-        }\n-        catch ( NoSuchFileException e )\n+            return list.filter(Files::isDirectory).map(directory -> DatabaseLayout.of(this, directory.getFileName().toString())).collect(toList());\n+        } catch (NoSuchFileException e)\n         {\n             return emptyList();\n-        }\n-        catch ( IOException e )\n+        } catch (IOException e)\n         {\n-            throw new UncheckedIOException( e );\n+            throw new UncheckedIOException(e);\n         }\n     }\n \n@@ -150,16 +149,18 @@ public final class Neo4jLayout\n      * Provide layout for a database with provided name.\n      * No assumptions whatsoever should be taken in regards of database location.\n      * Newly created layout should be used to any kind of file related requests in scope of a database.\n+     *\n      * @param databaseName database name to provide layout for\n      * @return requested database layout\n      */\n-    public DatabaseLayout databaseLayout( String databaseName )\n+    public DatabaseLayout databaseLayout(String databaseName)\n     {\n-        return DatabaseLayout.of( this, databaseName );\n+        return DatabaseLayout.of(this, databaseName);\n     }\n \n     /**\n      * Databases root directory where all databases are located.\n+     *\n      * @return all databases root directory\n      */\n     public Path databasesDirectory()\n@@ -169,6 +170,7 @@ public final class Neo4jLayout\n \n     /**\n      * Neo4J root directory.\n+     *\n      * @return the root of the Neo4j instance\n      */\n     public Path homeDirectory()\n@@ -193,40 +195,40 @@ public final class Neo4jLayout\n \n     public Path storeLockFile()\n     {\n-        return databasesRootDirectory.resolve( STORE_LOCK_FILENAME );\n+        return databasesRootDirectory.resolve(STORE_LOCK_FILENAME);\n     }\n \n     public Path serverIdFile()\n     {\n-        return dataDirectory.resolve( SERVER_ID_FILENAME );\n+        return dataDirectory.resolve(SERVER_ID_FILENAME);\n     }\n \n     @Override\n-    public boolean equals( Object o )\n+    public boolean equals(Object o)\n     {\n-        if ( this == o )\n+        if (this == o)\n         {\n             return true;\n         }\n-        if ( o == null || getClass() != o.getClass() )\n+        if (o == null || getClass() != o.getClass())\n         {\n             return false;\n         }\n         var that = (Neo4jLayout) o;\n-        return Objects.equals( homeDirectory, that.homeDirectory ) && Objects.equals( dataDirectory, that.dataDirectory ) &&\n-               Objects.equals( databasesRootDirectory, that.databasesRootDirectory ) && Objects.equals( txLogsRootDirectory, that.txLogsRootDirectory );\n+        return Objects.equals(homeDirectory, that.homeDirectory) && Objects.equals(dataDirectory, that.dataDirectory) &&\n+          Objects.equals(databasesRootDirectory, that.databasesRootDirectory) && Objects.equals(txLogsRootDirectory, that.txLogsRootDirectory);\n     }\n \n     @Override\n     public int hashCode()\n     {\n-        return Objects.hash( homeDirectory, dataDirectory, databasesRootDirectory, txLogsRootDirectory );\n+        return Objects.hash(homeDirectory, dataDirectory, databasesRootDirectory, txLogsRootDirectory);\n     }\n \n     @Override\n     public String toString()\n     {\n-        return String.format( \"Neo4JLayout{ homeDir=%s, dataDir=%s, databasesDir=%s, txLogsRootDir=%s}\",\n-                homeDirectory.toString(), dataDirectory.toString(), databasesRootDirectory.toString(), txLogsRootDirectory.toString() );\n+        return String.format(\"Neo4JLayout{ homeDir=%s, dataDir=%s, databasesDir=%s, txLogsRootDir=%s}\",\n+          homeDirectory.toString(), dataDirectory.toString(), databasesRootDirectory.toString(), txLogsRootDirectory.toString());\n     }\n }\n",
            "diff_size": 45
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
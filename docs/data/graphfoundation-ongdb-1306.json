{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1306",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "40",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1306/BaseConfigurationMigrator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1306/BaseConfigurationMigrator.java\nindex 69043660336..ee2ce4841a3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1306/BaseConfigurationMigrator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1306/BaseConfigurationMigrator.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.configuration;\n \n import java.util.ArrayList;\n@@ -34,81 +35,81 @@ import org.neo4j.logging.Log;\n  */\n public class BaseConfigurationMigrator implements ConfigurationMigrator\n {\n-    public interface Migration\n-    {\n-        boolean appliesTo( Map<String,String> rawConfiguration );\n-\n-        Map<String,String> apply( Map<String,String> rawConfiguration );\n-\n-        String getDeprecationMessage();\n-    }\n-\n-    /**\n-     * Base class for implementing a migration that applies to a specific config property key.\n-     *\n-     * By default, this class will print a  deprecation message and run {@link #setValueWithOldSetting(String, Map)}\n-     * if the specified property key has been set by the user. Override {@link #appliesTo(Map)} if you want to\n-     * trigger on more specific reasons than that.\n-     */\n-    public abstract static class SpecificPropertyMigration implements Migration\n-    {\n-        private final String propertyKey;\n-        private final String deprecationMessage;\n+  public interface Migration\n+  {\n+    boolean appliesTo(Map<String, String> rawConfiguration);\n \n-        SpecificPropertyMigration( String propertyKey, String deprecationMessage )\n-        {\n-            this.propertyKey = propertyKey;\n-            this.deprecationMessage = deprecationMessage;\n-        }\n+    Map<String, String> apply(Map<String, String> rawConfiguration);\n \n-        @Override\n-        public boolean appliesTo( Map<String,String> rawConfiguration )\n-        {\n-            return rawConfiguration.containsKey( propertyKey );\n-        }\n+    String getDeprecationMessage();\n+  }\n \n-        @Override\n-        public Map<String,String> apply( Map<String,String> rawConfiguration )\n-        {\n-            String value = rawConfiguration.remove( propertyKey );\n-            setValueWithOldSetting( value, rawConfiguration );\n-            return rawConfiguration;\n-        }\n+  /**\n+   * Base class for implementing a migration that applies to a specific config property key.\n+   * <p>\n+   * By default, this class will print a  deprecation message and run {@link #setValueWithOldSetting(String, Map)}\n+   * if the specified property key has been set by the user. Override {@link #appliesTo(Map)} if you want to\n+   * trigger on more specific reasons than that.\n+   */\n+  public abstract static class SpecificPropertyMigration implements Migration\n+  {\n+    private final String propertyKey;\n+    private final String deprecationMessage;\n \n-        @Override\n-        public String getDeprecationMessage()\n-        {\n-            return deprecationMessage;\n-        }\n-\n-        public abstract void setValueWithOldSetting( String value, Map<String,String> rawConfiguration );\n+    SpecificPropertyMigration(String propertyKey, String deprecationMessage)\n+    {\n+      this.propertyKey = propertyKey;\n+      this.deprecationMessage = deprecationMessage;\n     }\n \n-    private final List<Migration> migrations = new ArrayList<>();\n+    @Override\n+    public boolean appliesTo(Map<String, String> rawConfiguration)\n+    {\n+      return rawConfiguration.containsKey(propertyKey);\n+    }\n \n-    public void add( Migration migration )\n+    @Override\n+    public Map<String, String> apply(Map<String, String> rawConfiguration)\n     {\n-        migrations.add( migration );\n+      String value = rawConfiguration.remove(propertyKey);\n+      setValueWithOldSetting(value, rawConfiguration);\n+      return rawConfiguration;\n     }\n \n     @Override\n-    @Nonnull\n-    public Map<String,String> apply( @Nonnull Map<String,String> rawConfiguration, @Nonnull Log log )\n+    public String getDeprecationMessage()\n+    {\n+      return deprecationMessage;\n+    }\n+\n+    public abstract void setValueWithOldSetting(String value, Map<String, String> rawConfiguration);\n+  }\n+\n+  private final List<Migration> migrations = new ArrayList<>();\n+\n+  public void add(Migration migration)\n+  {\n+    migrations.add(migration);\n+  }\n+\n+  @Override\n+  @Nonnull\n+  public Map<String, String> apply(@Nonnull Map<String, String> rawConfiguration, @Nonnull Log log)\n+  {\n+    boolean printedDeprecationMessage = false;\n+    for (Migration migration : migrations)\n     {\n-        boolean printedDeprecationMessage = false;\n-        for ( Migration migration : migrations )\n+      if (migration.appliesTo(rawConfiguration))\n+      {\n+        if (!printedDeprecationMessage)\n         {\n-            if ( migration.appliesTo( rawConfiguration ) )\n-            {\n-                if ( !printedDeprecationMessage )\n-                {\n-                    printedDeprecationMessage = true;\n-                    log.warn( \"WARNING! Deprecated configuration options used. See manual for details\" );\n-                }\n-                rawConfiguration = migration.apply( rawConfiguration );\n-                log.warn( migration.getDeprecationMessage() );\n-            }\n+          printedDeprecationMessage = true;\n+          log.warn(\"WARNING! Deprecated configuration options used. See manual for details\");\n         }\n-        return rawConfiguration;\n+        rawConfiguration = migration.apply(rawConfiguration);\n+        log.warn(migration.getDeprecationMessage());\n+      }\n     }\n+    return rawConfiguration;\n+  }\n }\n",
            "diff_size": 98
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1306/BaseConfigurationMigrator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1306/BaseConfigurationMigrator.java\nindex 69043660336..f695d7e63a2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1306/BaseConfigurationMigrator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1306/BaseConfigurationMigrator.java\n@@ -39,8 +39,7 @@ public class BaseConfigurationMigrator implements ConfigurationMigrator\n         boolean appliesTo( Map<String,String> rawConfiguration );\n \n         Map<String,String> apply( Map<String,String> rawConfiguration );\n-\n-        String getDeprecationMessage();\n+String getDeprecationMessage();\n     }\n \n     /**\n@@ -105,10 +104,11 @@ public class BaseConfigurationMigrator implements ConfigurationMigrator\n                     printedDeprecationMessage = true;\n                     log.warn( \"WARNING! Deprecated configuration options used. See manual for details\" );\n                 }\n-                rawConfiguration = migration.apply( rawConfiguration );\n+\n+rawConfiguration = migration.apply( rawConfiguration );\n                 log.warn( migration.getDeprecationMessage() );\n             }\n         }\n         return rawConfiguration;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
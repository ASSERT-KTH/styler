{
    "project_name": "neo4j-neo4j",
    "error_id": "3043",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "48",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "71",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/3043/ReentrantLockService.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/3043/ReentrantLockService.java\nindex eaa17f11e48..2c934589014 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/3043/ReentrantLockService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/3043/ReentrantLockService.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.lock;\n \n import java.util.concurrent.ConcurrentHashMap;\n@@ -44,28 +45,28 @@ public final class ReentrantLockService extends AbstractLockService<ReentrantLoc\n \n     public ReentrantLockService()\n     {\n-        this( 1, TimeUnit.MILLISECONDS );\n+        this(1, TimeUnit.MILLISECONDS);\n     }\n \n-    private ReentrantLockService( long maxParkTime, TimeUnit unit )\n+    private ReentrantLockService(long maxParkTime, TimeUnit unit)\n     {\n-        this.maxParkNanos = unit.toNanos( maxParkTime );\n+        this.maxParkNanos = unit.toNanos(maxParkTime);\n     }\n \n     @Override\n-    protected OwnerQueueElement<Thread> acquire( LockedEntity key )\n+    protected OwnerQueueElement<Thread> acquire(LockedEntity key)\n     {\n-        OwnerQueueElement<Thread> suggestion = new OwnerQueueElement<>( currentThread() );\n-        for ( ; ; )\n+        OwnerQueueElement<Thread> suggestion = new OwnerQueueElement<>(currentThread());\n+        for (; ; )\n         {\n-            OwnerQueueElement<Thread> owner = locks.putIfAbsent( key, suggestion );\n-            if ( owner == null )\n+            OwnerQueueElement<Thread> owner = locks.putIfAbsent(key, suggestion);\n+            if (owner == null)\n             { // Our suggestion was accepted, we got the lock\n                 return suggestion;\n             }\n \n             Thread other = owner.owner;\n-            if ( other == currentThread() )\n+            if (other == currentThread())\n             { // the lock has been handed to us (or we are re-entering), claim it!\n                 owner.count++;\n                 return owner;\n@@ -73,40 +74,40 @@ public final class ReentrantLockService extends AbstractLockService<ReentrantLoc\n \n             // Make sure that we only add to the queue once, and if that addition fails (because the queue is dead\n             // - i.e. has been removed from the map), retry form the top of the loop immediately.\n-            if ( suggestion.head == suggestion ) // true if enqueue() has not been invoked (i.e. first time around)\n+            if (suggestion.head == suggestion) // true if enqueue() has not been invoked (i.e. first time around)\n             { // otherwise it has already been enqueued, and we are in a spurious (or timed) wake up\n-                if ( !owner.enqueue( suggestion ) )\n+                if (!owner.enqueue(suggestion))\n                 {\n                     continue; // the lock has already been released, the queue is dead, retry!\n                 }\n             }\n-            parkNanos( key, maxParkNanos );\n+            parkNanos(key, maxParkNanos);\n         }\n     }\n \n     @Override\n-    @SuppressWarnings( \"SynchronizationOnLocalVariableOrMethodParameter\" )\n-    protected void release( LockedEntity key, OwnerQueueElement<Thread> ownerQueueElement )\n+    @SuppressWarnings(\"SynchronizationOnLocalVariableOrMethodParameter\")\n+    protected void release(LockedEntity key, OwnerQueueElement<Thread> ownerQueueElement)\n     {\n-        if ( 0 == --ownerQueueElement.count )\n+        if (0 == --ownerQueueElement.count)\n         {\n             Thread nextThread;\n-            synchronized ( ownerQueueElement )\n+            synchronized (ownerQueueElement)\n             {\n                 nextThread = ownerQueueElement.dequeue();\n-                if ( nextThread == currentThread() )\n+                if (nextThread == currentThread())\n                 { // no more threads in the queue, remove this list\n-                    locks.remove( key, ownerQueueElement ); // done under synchronization to honour definition of 'dead'\n+                    locks.remove(key, ownerQueueElement); // done under synchronization to honour definition of 'dead'\n                     nextThread = null; // to make unpark() a no-op.\n                 }\n             }\n-            unpark( nextThread );\n+            unpark(nextThread);\n         }\n     }\n \n     /**\n      * Element in a queue of owners. Contains two fields {@link #head} and {@link #tail} which form the queue.\n-     *\n+     * <p>\n      * Example queue with 3 members:\n      *\n      * <pre>\n@@ -120,15 +121,16 @@ public final class ReentrantLockService extends AbstractLockService<ReentrantLoc\n      *          |+->[H]-+\n      *          +---[T]\n      * </pre>\n+     *\n      * @param <OWNER> Type of the object that owns (or wishes to own) the lock.\n-     *               In practice this is always {@link Thread}, only a parameter for testing purposes.\n+     *                In practice this is always {@link Thread}, only a parameter for testing purposes.\n      */\n     static final class OwnerQueueElement<OWNER>\n     {\n         volatile OWNER owner;\n         int count = 1; // does not need to be volatile, only updated by the owning thread.\n \n-        OwnerQueueElement( OWNER owner )\n+        OwnerQueueElement(OWNER owner)\n         {\n             this.owner = owner;\n         }\n@@ -144,9 +146,9 @@ public final class ReentrantLockService extends AbstractLockService<ReentrantLoc\n          * Return true if the item was enqueued, or false if this LockOwner is dead.\n          * A dead LockOwner is no longer reachable from the map, and so no longer participates in the lock.\n          */\n-        synchronized boolean enqueue( OwnerQueueElement<OWNER> last )\n+        synchronized boolean enqueue(OwnerQueueElement<OWNER> last)\n         {\n-            if ( owner == null )\n+            if (owner == null)\n             {\n                 return false; // don't enqueue into a dead queue\n             }\n@@ -154,7 +156,7 @@ public final class ReentrantLockService extends AbstractLockService<ReentrantLoc\n             last.tail = this;\n             tail.tail = last;\n             this.tail = last;\n-            if ( head == this )\n+            if (head == this)\n             {\n                 head = last;\n             }\n@@ -166,15 +168,14 @@ public final class ReentrantLockService extends AbstractLockService<ReentrantLoc\n             OwnerQueueElement<OWNER> first = this.head;\n             (this.head = first.tail).head = this;\n             first.tail = this;\n-            if ( this.head == this )\n+            if (this.head == this)\n             {\n                 this.tail = this; // don't leave junk references around!\n             }\n             try\n             {\n                 return this.owner = first.owner;\n-            }\n-            finally\n+            } finally\n             {\n                 first.owner = null; // mark 'first' as dead.\n             }\n@@ -183,7 +184,7 @@ public final class ReentrantLockService extends AbstractLockService<ReentrantLoc\n         @Override\n         public String toString()\n         {\n-            return String.format( \"%s*%s\", count, owner );\n+            return String.format(\"%s*%s\", count, owner);\n         }\n     }\n }\n",
            "diff_size": 31
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "660",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "34",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "34",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/660/NettyPipelineBuilderFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/660/NettyPipelineBuilderFactory.java\nindex 917bad531bb..eb776f1f7fb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/660/NettyPipelineBuilderFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/660/NettyPipelineBuilderFactory.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering.protocol;\n \n import io.netty.channel.Channel;\n@@ -28,32 +29,32 @@ import org.neo4j.logging.Log;\n \n public class NettyPipelineBuilderFactory\n {\n-    private final PipelineWrapper wrapper;\n+  private final PipelineWrapper wrapper;\n \n-    public NettyPipelineBuilderFactory( PipelineWrapper wrapper )\n-    {\n-        this.wrapper = wrapper;\n-    }\n+  public NettyPipelineBuilderFactory(PipelineWrapper wrapper)\n+  {\n+    this.wrapper = wrapper;\n+  }\n \n-    public ClientNettyPipelineBuilder client( Channel channel, Log log ) throws Exception\n-    {\n-        return create( channel, NettyPipelineBuilder.client( channel.pipeline(), log ) );\n-    }\n+  public ClientNettyPipelineBuilder client(Channel channel, Log log) throws Exception\n+  {\n+    return create(channel, NettyPipelineBuilder.client(channel.pipeline(), log));\n+  }\n \n-    public ServerNettyPipelineBuilder server( Channel channel, Log log ) throws Exception\n-    {\n-        return create( channel, NettyPipelineBuilder.server( channel.pipeline(), log ) );\n-    }\n+  public ServerNettyPipelineBuilder server(Channel channel, Log log) throws Exception\n+  {\n+    return create(channel, NettyPipelineBuilder.server(channel.pipeline(), log));\n+  }\n \n-    private <O extends Orientation, BUILDER extends NettyPipelineBuilder<O,BUILDER>> BUILDER create(\n-            Channel channel, BUILDER nettyPipelineBuilder ) throws Exception\n+  private <O extends Orientation, BUILDER extends NettyPipelineBuilder<O, BUILDER>> BUILDER create(\n+      Channel channel, BUILDER nettyPipelineBuilder) throws Exception\n+  {\n+    int i = 0;\n+    for (ChannelHandler handler : wrapper.handlersFor(channel))\n     {\n-        int i = 0;\n-        for ( ChannelHandler handler : wrapper.handlersFor( channel ) )\n-        {\n-            nettyPipelineBuilder.add( String.format( \"%s_%d\", wrapper.name(), i ), handler );\n-            i++;\n-        }\n-        return nettyPipelineBuilder;\n+      nettyPipelineBuilder.add(String.format(\"%s_%d\", wrapper.name(), i), handler);\n+      i++;\n     }\n+    return nettyPipelineBuilder;\n+  }\n }\n",
            "diff_size": 28
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "48",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 165).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/660/NettyPipelineBuilderFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/660/NettyPipelineBuilderFactory.java\nindex 917bad531bb..98e9b17822a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/660/NettyPipelineBuilderFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/660/NettyPipelineBuilderFactory.java\n@@ -45,15 +45,15 @@ public class NettyPipelineBuilderFactory\n         return create( channel, NettyPipelineBuilder.server( channel.pipeline(), log ) );\n     }\n \n-    private <O extends Orientation, BUILDER extends NettyPipelineBuilder<O,BUILDER>> BUILDER create(\n-            Channel channel, BUILDER nettyPipelineBuilder ) throws Exception\n-    {\n+    private <O extends Orientation, BUILDER extends NettyPipelineBuilder<O,BUILDER>> BUILDER create( Channel channel, BUILDER nettyPipelineBuilder ) throws Exception\n+{\n         int i = 0;\n         for ( ChannelHandler handler : wrapper.handlersFor( channel ) )\n         {\n             nettyPipelineBuilder.add( String.format( \"%s_%d\", wrapper.name(), i ), handler );\n             i++;\n         }\n-        return nettyPipelineBuilder;\n+\n+return nettyPipelineBuilder;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "aspose-words-cloud-aspose-words-cloud-java",
    "error_id": "308",
    "information": {
        "errors": [
            {
                "line": "289",
                "column": "5",
                "severity": "error",
                "message": "'{' at column 5 should be on the previous line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
            }
        ]
    },
    "source_code": "     */\n    public Request buildHttpRequest(ApiClient apiClient, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener, Boolean addAuthHeaders) throws ApiException, IOException\n    {\n        // verify the required parameter 'Name' is set\n        if (getName() == null) {\n            throw new ApiException(apiClient.getBadRequestCode(), \"Missing the required parameter 'Name' when calling executeMailMerge\");",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/errored/1/308/ExecuteMailMergeRequest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/styler/308/ExecuteMailMergeRequest.java\nindex 50e12224774..51ad5b09585 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/errored/1/308/ExecuteMailMergeRequest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/styler/308/ExecuteMailMergeRequest.java\n@@ -285,8 +285,7 @@ public class ExecuteMailMergeRequest implements RequestIfc {\n      * @throws ApiException If fail to serialize the request body object\n      * @throws IOException If fail to serialize the request body object\n      */\n-    public Request buildHttpRequest(ApiClient apiClient, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener, Boolean addAuthHeaders) throws ApiException, IOException\n-    {\n+    public Request buildHttpRequest(ApiClient apiClient, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener, Boolean addAuthHeaders) throws ApiException, IOException {\n         // verify the required parameter 'Name' is set\n         if (getName() == null) {\n             throw new ApiException(apiClient.getBadRequestCode(), \"Missing the required parameter 'Name' when calling executeMailMerge\");\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/errored/1/308/ExecuteMailMergeRequest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/intellij/308/ExecuteMailMergeRequest.java\nindex 50e12224774..0c4660874a1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/errored/1/308/ExecuteMailMergeRequest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/intellij/308/ExecuteMailMergeRequest.java\n@@ -10,10 +10,10 @@\n  *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n  *  copies of the Software, and to permit persons to whom the Software is\n  *  furnished to do so, subject to the following conditions:\n- * \n+ *\n  *  The above copyright notice and this permission notice shall be included in all\n  *  copies or substantial portions of the Software.\n- * \n+ *\n  *  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n@@ -30,6 +30,7 @@ package com.aspose.words.cloud.model.requests;\n import com.aspose.words.cloud.*;\n import com.aspose.words.cloud.model.*;\n import com.squareup.okhttp.*;\n+\n import java.io.*;\n import java.lang.reflect.Type;\n import java.util.*;\n@@ -285,8 +286,7 @@ public class ExecuteMailMergeRequest implements RequestIfc {\n      * @throws ApiException If fail to serialize the request body object\n      * @throws IOException If fail to serialize the request body object\n      */\n-    public Request buildHttpRequest(ApiClient apiClient, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener, Boolean addAuthHeaders) throws ApiException, IOException\n-    {\n+    public Request buildHttpRequest(ApiClient apiClient, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener, Boolean addAuthHeaders) throws ApiException, IOException {\n         // verify the required parameter 'Name' is set\n         if (getName() == null) {\n             throw new ApiException(apiClient.getBadRequestCode(), \"Missing the required parameter 'Name' when calling executeMailMerge\");\n@@ -314,8 +314,9 @@ public class ExecuteMailMergeRequest implements RequestIfc {\n         Map<String, String> localVarHeaderParams = new HashMap<String, String>();\n \n         Map<String, Object> localVarFormParams = new LinkedHashMap<String, Object>();\n-        if (getData() != null)\n+        if (getData() != null) {\n             localVarFormParams.put(\"Data\", getData());\n+        }\n \n         final String[] localVarAccepts = {\n             \"application/xml\", \"application/json\"\n@@ -335,8 +336,8 @@ public class ExecuteMailMergeRequest implements RequestIfc {\n                 public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {\n                     com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());\n                     return originalResponse.newBuilder()\n-                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))\n-                    .build();\n+                        .body(new ProgressResponseBody(originalResponse.body(), progressListener))\n+                        .build();\n                 }\n             });\n         }\n",
            "diff_size": 9
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/errored/1/308/ExecuteMailMergeRequest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/codebuff/308/ExecuteMailMergeRequest.java\nindex 50e12224774..7f1e9da9e2e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/errored/1/308/ExecuteMailMergeRequest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/codebuff/308/ExecuteMailMergeRequest.java\n@@ -26,7 +26,6 @@\n  */\n \n package com.aspose.words.cloud.model.requests;\n-\n import com.aspose.words.cloud.*;\n import com.aspose.words.cloud.model.*;\n import com.squareup.okhttp.*;\n@@ -37,63 +36,86 @@ import java.util.*;\n /*\n  * Request model for executeMailMerge operation.\n  */\n+\n+\n public class ExecuteMailMergeRequest implements RequestIfc {\n     /*\n      * The template name.\n      */\n-    private String name;\n+\n+  private String name;\n \n     /*\n      * Mail merge data.\n      */\n-    private String data;\n+\n+\n+  private String data;\n \n     /*\n      * Original document folder.\n      */\n-    private String folder;\n+\n+\n+  private String folder;\n \n     /*\n      * Original document storage.\n      */\n-    private String storage;\n+\n+\n+  private String storage;\n \n     /*\n      * Encoding that will be used to load an HTML (or TXT) document if the encoding is not specified in HTML.\n      */\n-    private String loadEncoding;\n+\n+\n+  private String loadEncoding;\n \n     /*\n      * Password for opening an encrypted document.\n      */\n-    private String password;\n+\n+\n+  private String password;\n \n     /*\n      * With regions flag.\n      */\n-    private Boolean withRegions;\n+\n+\n+  private Boolean withRegions;\n \n     /*\n      * Mail merge data file.\n      */\n-    private String mailMergeDataFile;\n+\n+\n+  private String mailMergeDataFile;\n \n     /*\n      * Clean up options.\n      */\n-    private String cleanup;\n+\n+\n+  private String cleanup;\n \n     /*\n      * Gets or sets a value indicating whether paragraph with TableStart or.\n      * TableEnd field should be fully included into mail merge region or particular range between TableStart and TableEnd fields.\n      * The default value is true.\n      */\n-    private Boolean useWholeParagraphAsRegion;\n+\n+\n+  private Boolean useWholeParagraphAsRegion;\n \n     /*\n      * Result name of the document after the operation. If this parameter is omitted then result of the operation will be saved with autogenerated name.\n      */\n-    private String destFileName;\n+\n+\n+  private String destFileName;\n \n     /*\n      * Initializes a new instance of the ExecuteMailMergeRequest class.\n@@ -110,173 +132,198 @@ public class ExecuteMailMergeRequest implements RequestIfc {\n      * @param Boolean useWholeParagraphAsRegion Gets or sets a value indicating whether paragraph with TableStart or. TableEnd field should be fully included into mail merge region or particular range between TableStart and TableEnd fields. The default value is true.\n      * @param String destFileName Result name of the document after the operation. If this parameter is omitted then result of the operation will be saved with autogenerated name.\n      */\n-    public ExecuteMailMergeRequest(String name, String data, String folder, String storage, String loadEncoding, String password, Boolean withRegions, String mailMergeDataFile, String cleanup, Boolean useWholeParagraphAsRegion, String destFileName) {\n-        this.name = name;\n-        this.data = data;\n-        this.folder = folder;\n-        this.storage = storage;\n-        this.loadEncoding = loadEncoding;\n-        this.password = password;\n-        this.withRegions = withRegions;\n-        this.mailMergeDataFile = mailMergeDataFile;\n-        this.cleanup = cleanup;\n-        this.useWholeParagraphAsRegion = useWholeParagraphAsRegion;\n-        this.destFileName = destFileName;\n-    }\n+\n+\n+  public ExecuteMailMergeRequest(String name,  String data,  String folder,  String storage,  String loadEncoding,  String password,  Boolean withRegions,  String mailMergeDataFile,  String cleanup,  Boolean useWholeParagraphAsRegion,  String destFileName) {\n+    this.name = name;\n+    this.data = data;\n+    this.folder = folder;\n+    this.storage = storage;\n+    this.loadEncoding = loadEncoding;\n+    this.password = password;\n+    this.withRegions = withRegions;\n+    this.mailMergeDataFile = mailMergeDataFile;\n+    this.cleanup = cleanup;\n+    this.useWholeParagraphAsRegion = useWholeParagraphAsRegion;\n+    this.destFileName = destFileName;\n+  }\n \n     /*\n      * Gets The template name.\n      */\n-    public String getName() {\n-        return this.name;\n-    }\n+\n+\n+  public String getName() {\n+    return this.name;\n+  }\n \n     /*\n      * Sets The template name.\n      */\n-    public void setName(String value) {\n-        this.name = value;\n-    }\n+\n+  public void setName(String value) {\n+    this.name = value;\n+  }\n \n     /*\n      * Gets Mail merge data.\n      */\n-    public String getData() {\n-        return this.data;\n-    }\n+\n+  public String getData() {\n+    return this.data;\n+  }\n \n     /*\n      * Sets Mail merge data.\n      */\n-    public void setData(String value) {\n-        this.data = value;\n-    }\n+\n+  public void setData(String value) {\n+    this.data = value;\n+  }\n \n     /*\n      * Gets Original document folder.\n      */\n-    public String getFolder() {\n-        return this.folder;\n-    }\n+\n+  public String getFolder() {\n+    return this.folder;\n+  }\n \n     /*\n      * Sets Original document folder.\n      */\n-    public void setFolder(String value) {\n-        this.folder = value;\n-    }\n+\n+  public void setFolder(String value) {\n+    this.folder = value;\n+  }\n \n     /*\n      * Gets Original document storage.\n      */\n-    public String getStorage() {\n-        return this.storage;\n-    }\n+\n+  public String getStorage() {\n+    return this.storage;\n+  }\n \n     /*\n      * Sets Original document storage.\n      */\n-    public void setStorage(String value) {\n-        this.storage = value;\n-    }\n+\n+  public void setStorage(String value) {\n+    this.storage = value;\n+  }\n \n     /*\n      * Gets Encoding that will be used to load an HTML (or TXT) document if the encoding is not specified in HTML.\n      */\n-    public String getLoadEncoding() {\n-        return this.loadEncoding;\n-    }\n+\n+  public String getLoadEncoding() {\n+    return this.loadEncoding;\n+  }\n \n     /*\n      * Sets Encoding that will be used to load an HTML (or TXT) document if the encoding is not specified in HTML.\n      */\n-    public void setLoadEncoding(String value) {\n-        this.loadEncoding = value;\n-    }\n+\n+  public void setLoadEncoding(String value) {\n+    this.loadEncoding = value;\n+  }\n \n     /*\n      * Gets Password for opening an encrypted document.\n      */\n-    public String getPassword() {\n-        return this.password;\n-    }\n+\n+  public String getPassword() {\n+    return this.password;\n+  }\n \n     /*\n      * Sets Password for opening an encrypted document.\n      */\n-    public void setPassword(String value) {\n-        this.password = value;\n-    }\n+\n+  public void setPassword(String value) {\n+    this.password = value;\n+  }\n \n     /*\n      * Gets With regions flag.\n      */\n-    public Boolean getWithRegions() {\n-        return this.withRegions;\n-    }\n+\n+  public Boolean getWithRegions() {\n+    return this.withRegions;\n+  }\n \n     /*\n      * Sets With regions flag.\n      */\n-    public void setWithRegions(Boolean value) {\n-        this.withRegions = value;\n-    }\n+\n+  public void setWithRegions(Boolean value) {\n+    this.withRegions = value;\n+  }\n \n     /*\n      * Gets Mail merge data file.\n      */\n-    public String getMailMergeDataFile() {\n-        return this.mailMergeDataFile;\n-    }\n+\n+  public String getMailMergeDataFile() {\n+    return this.mailMergeDataFile;\n+  }\n \n     /*\n      * Sets Mail merge data file.\n      */\n-    public void setMailMergeDataFile(String value) {\n-        this.mailMergeDataFile = value;\n-    }\n+\n+  public void setMailMergeDataFile(String value) {\n+    this.mailMergeDataFile = value;\n+  }\n \n     /*\n      * Gets Clean up options.\n      */\n-    public String getCleanup() {\n-        return this.cleanup;\n-    }\n+\n+  public String getCleanup() {\n+    return this.cleanup;\n+  }\n \n     /*\n      * Sets Clean up options.\n      */\n-    public void setCleanup(String value) {\n-        this.cleanup = value;\n-    }\n+\n+  public void setCleanup(String value) {\n+    this.cleanup = value;\n+  }\n \n     /*\n      * Gets Gets or sets a value indicating whether paragraph with TableStart or. TableEnd field should be fully included into mail merge region or particular range between TableStart and TableEnd fields. The default value is true.\n      */\n-    public Boolean getUseWholeParagraphAsRegion() {\n-        return this.useWholeParagraphAsRegion;\n-    }\n+\n+  public Boolean getUseWholeParagraphAsRegion() {\n+    return this.useWholeParagraphAsRegion;\n+  }\n \n     /*\n      * Sets Gets or sets a value indicating whether paragraph with TableStart or. TableEnd field should be fully included into mail merge region or particular range between TableStart and TableEnd fields. The default value is true.\n      */\n-    public void setUseWholeParagraphAsRegion(Boolean value) {\n-        this.useWholeParagraphAsRegion = value;\n-    }\n+\n+  public void setUseWholeParagraphAsRegion(Boolean value) {\n+    this.useWholeParagraphAsRegion = value;\n+  }\n \n     /*\n      * Gets Result name of the document after the operation. If this parameter is omitted then result of the operation will be saved with autogenerated name.\n      */\n-    public String getDestFileName() {\n-        return this.destFileName;\n-    }\n+\n+  public String getDestFileName() {\n+    return this.destFileName;\n+  }\n \n     /*\n      * Sets Result name of the document after the operation. If this parameter is omitted then result of the operation will be saved with autogenerated name.\n      */\n-    public void setDestFileName(String value) {\n-        this.destFileName = value;\n-    }\n+\n+  public void setDestFileName(String value) {\n+    this.destFileName = value;\n+  }\n \n     /*\n      * Creates the http request based on this request model.\n@@ -285,69 +332,67 @@ public class ExecuteMailMergeRequest implements RequestIfc {\n      * @throws ApiException If fail to serialize the request body object\n      * @throws IOException If fail to serialize the request body object\n      */\n-    public Request buildHttpRequest(ApiClient apiClient, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener, Boolean addAuthHeaders) throws ApiException, IOException\n-    {\n+\n+  public Request buildHttpRequest(ApiClient apiClient, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener,  Boolean addAuthHeaders) throws ApiException, IOException {\n         // verify the required parameter 'Name' is set\n-        if (getName() == null) {\n-            throw new ApiException(apiClient.getBadRequestCode(), \"Missing the required parameter 'Name' when calling executeMailMerge\");\n-        }\n+    if (getName() == null) {\n+      throw new ApiException(apiClient.getBadRequestCode(), \"Missing the required parameter 'Name' when calling executeMailMerge\");\n+    }\n \n-        Object localVarPostBody = null;\n+    Object localVarPostBody = null;\n \n         // create path and map variables\n-        String localVarPath = \"/words/{name}/MailMerge\";\n-        localVarPath = apiClient.addParameterToPath(localVarPath, \"name\", getName());\n-        localVarPath = localVarPath.replaceAll(\"//\", \"/\");\n-\n-        List<Pair> localVarQueryParams = new ArrayList<Pair>();\n-        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();\n-        apiClient.addParameterToQuery(localVarQueryParams, \"folder\", getFolder());\n-        apiClient.addParameterToQuery(localVarQueryParams, \"storage\", getStorage());\n-        apiClient.addParameterToQuery(localVarQueryParams, \"loadEncoding\", getLoadEncoding());\n-        apiClient.addParameterToQuery(localVarQueryParams, \"password\", getPassword());\n-        apiClient.addParameterToQuery(localVarQueryParams, \"withRegions\", getWithRegions());\n-        apiClient.addParameterToQuery(localVarQueryParams, \"mailMergeDataFile\", getMailMergeDataFile());\n-        apiClient.addParameterToQuery(localVarQueryParams, \"cleanup\", getCleanup());\n-        apiClient.addParameterToQuery(localVarQueryParams, \"useWholeParagraphAsRegion\", getUseWholeParagraphAsRegion());\n-        apiClient.addParameterToQuery(localVarQueryParams, \"destFileName\", getDestFileName());\n-\n-        Map<String, String> localVarHeaderParams = new HashMap<String, String>();\n-\n-        Map<String, Object> localVarFormParams = new LinkedHashMap<String, Object>();\n-        if (getData() != null)\n-            localVarFormParams.put(\"Data\", getData());\n-\n-        final String[] localVarAccepts = {\n-            \"application/xml\", \"application/json\"\n-        };\n-        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);\n-        if (localVarAccept != null) localVarHeaderParams.put(\"Accept\", localVarAccept);\n-\n-        final String[] localVarContentTypes = {\n-            \"multipart/form-data\"\n-        };\n-        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);\n-        localVarHeaderParams.put(\"Content-Type\", localVarContentType);\n-\n-        if (progressListener != null) {\n-            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {\n-                @Override\n-                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {\n-                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());\n-                    return originalResponse.newBuilder()\n-                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))\n-                    .build();\n-                }\n-            });\n-        }\n-\n-        return apiClient.buildRequest(localVarPath, \"PUT\", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, addAuthHeaders, progressRequestListener);\n+    String localVarPath = \"/words/{name}/MailMerge\";\n+    localVarPath = apiClient.addParameterToPath(localVarPath, \"name\", getName());\n+    localVarPath = localVarPath.replaceAll(\"//\", \"/\");\n+\n+    List<Pair> localVarQueryParams = new ArrayList<Pair>();\n+    List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();\n+    apiClient.addParameterToQuery(localVarQueryParams, \"folder\", getFolder());\n+    apiClient.addParameterToQuery(localVarQueryParams, \"storage\", getStorage());\n+    apiClient.addParameterToQuery(localVarQueryParams, \"loadEncoding\", getLoadEncoding());\n+    apiClient.addParameterToQuery(localVarQueryParams, \"password\", getPassword());\n+    apiClient.addParameterToQuery(localVarQueryParams, \"withRegions\", getWithRegions());\n+    apiClient.addParameterToQuery(localVarQueryParams, \"mailMergeDataFile\", getMailMergeDataFile());\n+    apiClient.addParameterToQuery(localVarQueryParams, \"cleanup\", getCleanup());\n+    apiClient.addParameterToQuery(localVarQueryParams, \"useWholeParagraphAsRegion\", getUseWholeParagraphAsRegion());\n+    apiClient.addParameterToQuery(localVarQueryParams, \"destFileName\", getDestFileName());\n+\n+    Map<String, String> localVarHeaderParams = new HashMap<String, String>();\n+    Map<String, Object> localVarFormParams = new LinkedHashMap<String, Object>();\n+    if (getData() != null) localVarFormParams.put(\"Data\", getData());\n+\n+    final String[] localVarAccepts = {\n+         \"application/xml\", \"application/json\"\n+    };\n+    final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);\n+    if (localVarAccept != null) localVarHeaderParams.put(\"Accept\", localVarAccept);\n+\n+    final String[] localVarContentTypes = {\n+         \"multipart/form-data\"\n+    };\n+    final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);\n+    localVarHeaderParams.put(\"Content-Type\", localVarContentType);\n+\n+    if (progressListener != null) {\n+        apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {\n+          @Override\n+          public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {\n+            com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());\n+            return originalResponse.newBuilder().body(new ProgressResponseBody(originalResponse.body(), progressListener))\n+                                                .build();\n+          }\n+        });\n     }\n+    return apiClient.buildRequest(localVarPath, \"PUT\", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, addAuthHeaders, progressRequestListener);\n+  }\n \n     /*\n      * Gets response type for this request.\n      */\n-    public Type getResponseType() {\n-        return DocumentResponse.class;\n-    }\n-}\n+\n+  public Type getResponseType() {\n+    return DocumentResponse.class;\n+  }\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 200
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/errored/1/308/ExecuteMailMergeRequest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/styler_random/308/ExecuteMailMergeRequest.java\nindex 50e12224774..51ad5b09585 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/errored/1/308/ExecuteMailMergeRequest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/styler_random/308/ExecuteMailMergeRequest.java\n@@ -285,8 +285,7 @@ public class ExecuteMailMergeRequest implements RequestIfc {\n      * @throws ApiException If fail to serialize the request body object\n      * @throws IOException If fail to serialize the request body object\n      */\n-    public Request buildHttpRequest(ApiClient apiClient, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener, Boolean addAuthHeaders) throws ApiException, IOException\n-    {\n+    public Request buildHttpRequest(ApiClient apiClient, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener, Boolean addAuthHeaders) throws ApiException, IOException {\n         // verify the required parameter 'Name' is set\n         if (getName() == null) {\n             throw new ApiException(apiClient.getBadRequestCode(), \"Missing the required parameter 'Name' when calling executeMailMerge\");\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/errored/1/308/ExecuteMailMergeRequest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/styler_three_grams/308/ExecuteMailMergeRequest.java\nindex 50e12224774..51ad5b09585 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/errored/1/308/ExecuteMailMergeRequest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/styler_three_grams/308/ExecuteMailMergeRequest.java\n@@ -285,8 +285,7 @@ public class ExecuteMailMergeRequest implements RequestIfc {\n      * @throws ApiException If fail to serialize the request body object\n      * @throws IOException If fail to serialize the request body object\n      */\n-    public Request buildHttpRequest(ApiClient apiClient, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener, Boolean addAuthHeaders) throws ApiException, IOException\n-    {\n+    public Request buildHttpRequest(ApiClient apiClient, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener, Boolean addAuthHeaders) throws ApiException, IOException {\n         // verify the required parameter 'Name' is set\n         if (getName() == null) {\n             throw new ApiException(apiClient.getBadRequestCode(), \"Missing the required parameter 'Name' when calling executeMailMerge\");\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize"
    ]
}
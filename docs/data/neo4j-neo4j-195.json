{
    "project_name": "neo4j-neo4j",
    "error_id": "195",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "55",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "80",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "108",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "143",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "165",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "165",
                    "column": "108",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "172",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "178",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "106",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "184",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "184",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "190",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "190",
                    "column": "19",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "198",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "198",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "204",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "204",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "209",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "209",
                    "column": "19",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "217",
                    "column": "54",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "217",
                    "column": "127",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "222",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "222",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "227",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "227",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "235",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "235",
                    "column": "124",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "241",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "241",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "246",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "246",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "254",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "254",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "258",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "258",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "261",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/195/SequenceValue.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/195/SequenceValue.java\nindex 8a83f8aeed8..94ea5243a76 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/195/SequenceValue.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/195/SequenceValue.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.values;\n \n import java.util.Comparator;\n@@ -28,7 +29,7 @@ import static org.neo4j.values.SequenceValue.IterationPreference.RANDOM_ACCESS;\n  * Values that represent sequences of values (such as Lists or Arrays) need to implement this interface.\n  * Thus we can get an equality check that is based on the values (e.g. List.equals(ArrayValue) )\n  * Values that implement this interface also need to overwrite isSequence() to return true!\n- *\n+ * <p>\n  * Note that even though SequenceValue extends Iterable iterating over the sequence using iterator() might not be the\n  * most performant method. Branch using iterationPreference() in performance critical code paths.\n  */\n@@ -51,62 +52,60 @@ public interface SequenceValue extends Iterable<AnyValue>\n         return length() == 0;\n     }\n \n-    AnyValue value( int offset );\n+    AnyValue value(int offset);\n \n     @Override\n     Iterator<AnyValue> iterator();\n \n     IterationPreference iterationPreference();\n \n-    default boolean equals( SequenceValue other )\n+    default boolean equals(SequenceValue other)\n     {\n-        if ( other == null )\n+        if (other == null)\n         {\n             return false;\n         }\n \n         IterationPreference pref = iterationPreference();\n         IterationPreference otherPref = other.iterationPreference();\n-        if ( pref == RANDOM_ACCESS && otherPref == RANDOM_ACCESS )\n+        if (pref == RANDOM_ACCESS && otherPref == RANDOM_ACCESS)\n         {\n-            return equalsUsingRandomAccess( this, other );\n-        }\n-        else\n+            return equalsUsingRandomAccess(this, other);\n+        } else\n         {\n-            return equalsUsingIterators( this, other );\n+            return equalsUsingIterators(this, other);\n         }\n     }\n \n-    static boolean equalsUsingRandomAccess( SequenceValue a, SequenceValue b )\n+    static boolean equalsUsingRandomAccess(SequenceValue a, SequenceValue b)\n     {\n         int i = 0;\n         boolean areEqual = a.length() == b.length();\n \n-        while ( areEqual && i < a.length() )\n+        while (areEqual && i < a.length())\n         {\n-            areEqual = a.value( i ).equals( b.value( i ) );\n+            areEqual = a.value(i).equals(b.value(i));\n             i++;\n         }\n         return areEqual;\n     }\n \n-    static Equality ternaryEqualsUsingRandomAccess( SequenceValue a, SequenceValue b )\n+    static Equality ternaryEqualsUsingRandomAccess(SequenceValue a, SequenceValue b)\n     {\n         int length = a.length();\n-        if ( length != b.length() )\n+        if (length != b.length())\n         {\n             return Equality.FALSE;\n         }\n         int i = 0;\n         Equality equivalenceResult = Equality.TRUE;\n-        while ( i < length )\n+        while (i < length)\n         {\n-            Equality areEqual = a.value( i ).ternaryEquals( b.value( i ) );\n-            if ( areEqual == Equality.UNDEFINED )\n+            Equality areEqual = a.value(i).ternaryEquals(b.value(i));\n+            if (areEqual == Equality.UNDEFINED)\n             {\n                 equivalenceResult = Equality.UNDEFINED;\n-            }\n-            else if ( areEqual == Equality.FALSE )\n+            } else if (areEqual == Equality.FALSE)\n             {\n                 return Equality.FALSE;\n             }\n@@ -116,33 +115,32 @@ public interface SequenceValue extends Iterable<AnyValue>\n         return equivalenceResult;\n     }\n \n-    static boolean equalsUsingIterators( SequenceValue a, SequenceValue b )\n+    static boolean equalsUsingIterators(SequenceValue a, SequenceValue b)\n     {\n         boolean areEqual = true;\n         Iterator<AnyValue> aIterator = a.iterator();\n         Iterator<AnyValue> bIterator = b.iterator();\n \n-        while ( areEqual && aIterator.hasNext() && bIterator.hasNext() )\n+        while (areEqual && aIterator.hasNext() && bIterator.hasNext())\n         {\n-            areEqual = aIterator.next().equals( bIterator.next() );\n+            areEqual = aIterator.next().equals(bIterator.next());\n         }\n \n         return areEqual && aIterator.hasNext() == bIterator.hasNext();\n     }\n \n-    static Equality ternaryEqualsUsingIterators( SequenceValue a, SequenceValue b )\n+    static Equality ternaryEqualsUsingIterators(SequenceValue a, SequenceValue b)\n     {\n         Equality equivalenceResult = Equality.TRUE;\n         Iterator<AnyValue> aIterator = a.iterator();\n         Iterator<AnyValue> bIterator = b.iterator();\n-        while ( aIterator.hasNext() && bIterator.hasNext() )\n+        while (aIterator.hasNext() && bIterator.hasNext())\n         {\n-            Equality areEqual = aIterator.next().ternaryEquals( bIterator.next() );\n-            if ( areEqual == Equality.UNDEFINED )\n+            Equality areEqual = aIterator.next().ternaryEquals(bIterator.next());\n+            if (areEqual == Equality.UNDEFINED)\n             {\n                 equivalenceResult = Equality.UNDEFINED;\n-            }\n-            else if ( areEqual == Equality.FALSE )\n+            } else if (areEqual == Equality.FALSE)\n             {\n                 return Equality.FALSE;\n             }\n@@ -151,47 +149,45 @@ public interface SequenceValue extends Iterable<AnyValue>\n         return !aIterator.hasNext() && !bIterator.hasNext() ? equivalenceResult : Equality.FALSE;\n     }\n \n-    default int compareToSequence( SequenceValue other, Comparator<AnyValue> comparator )\n+    default int compareToSequence(SequenceValue other, Comparator<AnyValue> comparator)\n     {\n         IterationPreference pref = iterationPreference();\n         IterationPreference otherPref = other.iterationPreference();\n-        if ( pref == RANDOM_ACCESS && otherPref == RANDOM_ACCESS )\n+        if (pref == RANDOM_ACCESS && otherPref == RANDOM_ACCESS)\n         {\n-            return compareUsingRandomAccess( this, other, comparator );\n-        }\n-        else\n+            return compareUsingRandomAccess(this, other, comparator);\n+        } else\n         {\n-            return compareUsingIterators( this, other, comparator );\n+            return compareUsingIterators(this, other, comparator);\n         }\n     }\n \n-    default Comparison ternaryCompareToSequence( SequenceValue other, TernaryComparator<AnyValue> comparator )\n+    default Comparison ternaryCompareToSequence(SequenceValue other, TernaryComparator<AnyValue> comparator)\n     {\n         IterationPreference pref = iterationPreference();\n         IterationPreference otherPref = other.iterationPreference();\n-        if ( pref == RANDOM_ACCESS && otherPref == RANDOM_ACCESS )\n+        if (pref == RANDOM_ACCESS && otherPref == RANDOM_ACCESS)\n         {\n-            return ternaryCompareUsingRandomAccess( this, other, comparator );\n-        }\n-        else\n+            return ternaryCompareUsingRandomAccess(this, other, comparator);\n+        } else\n         {\n-            return ternaryCompareUsingIterators( this, other, comparator );\n+            return ternaryCompareUsingIterators(this, other, comparator);\n         }\n     }\n \n-    static int compareUsingRandomAccess( SequenceValue a, SequenceValue b, Comparator<AnyValue> comparator )\n+    static int compareUsingRandomAccess(SequenceValue a, SequenceValue b, Comparator<AnyValue> comparator)\n     {\n         int i = 0;\n         int x = 0;\n-        int length = Math.min( a.length(), b.length() );\n+        int length = Math.min(a.length(), b.length());\n \n-        while ( x == 0 && i < length )\n+        while (x == 0 && i < length)\n         {\n-            x = comparator.compare( a.value( i ), b.value( i ) );\n+            x = comparator.compare(a.value(i), b.value(i));\n             i++;\n         }\n \n-        if ( x == 0 )\n+        if (x == 0)\n         {\n             x = a.length() - b.length();\n         }\n@@ -199,73 +195,72 @@ public interface SequenceValue extends Iterable<AnyValue>\n         return x;\n     }\n \n-    static int compareUsingIterators( SequenceValue a, SequenceValue b, Comparator<AnyValue> comparator )\n+    static int compareUsingIterators(SequenceValue a, SequenceValue b, Comparator<AnyValue> comparator)\n     {\n         int x = 0;\n         Iterator<AnyValue> aIterator = a.iterator();\n         Iterator<AnyValue> bIterator = b.iterator();\n \n-        while ( x == 0 && aIterator.hasNext() && bIterator.hasNext() )\n+        while (x == 0 && aIterator.hasNext() && bIterator.hasNext())\n         {\n-            x = comparator.compare( aIterator.next(), bIterator.next() );\n+            x = comparator.compare(aIterator.next(), bIterator.next());\n         }\n \n-        if ( x == 0 )\n+        if (x == 0)\n         {\n-            x = Boolean.compare( aIterator.hasNext(), bIterator.hasNext() );\n+            x = Boolean.compare(aIterator.hasNext(), bIterator.hasNext());\n         }\n \n         return x;\n     }\n \n-    static Comparison ternaryCompareUsingRandomAccess( SequenceValue a, SequenceValue b, TernaryComparator<AnyValue> comparator )\n+    static Comparison ternaryCompareUsingRandomAccess(SequenceValue a, SequenceValue b, TernaryComparator<AnyValue> comparator)\n     {\n         Comparison cmp = Comparison.EQUAL;\n         int i = 0;\n-        int length = Math.min( a.length(), b.length() );\n-        while ( cmp == Comparison.EQUAL && i < length )\n+        int length = Math.min(a.length(), b.length());\n+        while (cmp == Comparison.EQUAL && i < length)\n         {\n-            cmp = comparator.ternaryCompare( a.value( i ), b.value( i ) );\n+            cmp = comparator.ternaryCompare(a.value(i), b.value(i));\n             i++;\n         }\n-        if ( cmp == Comparison.EQUAL )\n+        if (cmp == Comparison.EQUAL)\n         {\n-            cmp = Comparison.from( a.length() - b.length() );\n+            cmp = Comparison.from(a.length() - b.length());\n         }\n \n         return cmp;\n     }\n \n-    static Comparison ternaryCompareUsingIterators( SequenceValue a, SequenceValue b, TernaryComparator<AnyValue> comparator )\n+    static Comparison ternaryCompareUsingIterators(SequenceValue a, SequenceValue b, TernaryComparator<AnyValue> comparator)\n     {\n         Comparison cmp = Comparison.EQUAL;\n         Iterator<AnyValue> aIterator = a.iterator();\n         Iterator<AnyValue> bIterator = b.iterator();\n \n-        while ( cmp == Comparison.EQUAL && aIterator.hasNext() && bIterator.hasNext() )\n+        while (cmp == Comparison.EQUAL && aIterator.hasNext() && bIterator.hasNext())\n         {\n-            cmp = comparator.ternaryCompare( aIterator.next(), bIterator.next() );\n+            cmp = comparator.ternaryCompare(aIterator.next(), bIterator.next());\n         }\n \n-        if ( cmp == Comparison.EQUAL )\n+        if (cmp == Comparison.EQUAL)\n         {\n-            cmp = Comparison.from( Boolean.compare( aIterator.hasNext(), bIterator.hasNext() ) );\n+            cmp = Comparison.from(Boolean.compare(aIterator.hasNext(), bIterator.hasNext()));\n         }\n \n         return cmp;\n     }\n \n-    default Equality ternaryEquality( SequenceValue other )\n+    default Equality ternaryEquality(SequenceValue other)\n     {\n         IterationPreference pref = iterationPreference();\n         IterationPreference otherPref = other.iterationPreference();\n-        if ( pref == RANDOM_ACCESS && otherPref == RANDOM_ACCESS )\n+        if (pref == RANDOM_ACCESS && otherPref == RANDOM_ACCESS)\n         {\n-            return ternaryEqualsUsingRandomAccess(this, other );\n-        }\n-        else\n+            return ternaryEqualsUsingRandomAccess(this, other);\n+        } else\n         {\n-            return ternaryEqualsUsingIterators( this, other );\n+            return ternaryEqualsUsingIterators(this, other);\n         }\n     }\n }\n",
            "diff_size": 68
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "32",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "38",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "113",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "79",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/32/CommonContextState.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/32/CommonContextState.java\nindex 1245113cc71..6e724f1bc7c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/32/CommonContextState.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/32/CommonContextState.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.cluster.protocol.atomicbroadcast.multipaxos.context;\n \n import java.net.URI;\n@@ -27,139 +28,138 @@ import org.neo4j.logging.Log;\n \n class CommonContextState\n {\n-    private URI boundAt;\n-    private long lastKnownLearnedInstanceInCluster = -1;\n-    private org.neo4j.cluster.InstanceId lastKnownAliveUpToDateInstance;\n-    private long nextInstanceId;\n-    private ClusterConfiguration configuration;\n-    private final int maxAcceptors;\n-\n-    CommonContextState( ClusterConfiguration configuration, int maxAcceptors )\n-    {\n-        this.configuration = configuration;\n-        this.maxAcceptors = maxAcceptors;\n-    }\n-\n-    private CommonContextState( URI boundAt, long lastKnownLearnedInstanceInCluster, long nextInstanceId,\n-                        ClusterConfiguration configuration, int maxAcceptors )\n-    {\n-        this.boundAt = boundAt;\n-        this.lastKnownLearnedInstanceInCluster = lastKnownLearnedInstanceInCluster;\n-        this.nextInstanceId = nextInstanceId;\n-        this.configuration = configuration;\n-        this.maxAcceptors = maxAcceptors;\n-    }\n+  private URI boundAt;\n+  private long lastKnownLearnedInstanceInCluster = -1;\n+  private org.neo4j.cluster.InstanceId lastKnownAliveUpToDateInstance;\n+  private long nextInstanceId;\n+  private ClusterConfiguration configuration;\n+  private final int maxAcceptors;\n+\n+  CommonContextState(ClusterConfiguration configuration, int maxAcceptors)\n+  {\n+    this.configuration = configuration;\n+    this.maxAcceptors = maxAcceptors;\n+  }\n+\n+  private CommonContextState(URI boundAt, long lastKnownLearnedInstanceInCluster, long nextInstanceId,\n+                             ClusterConfiguration configuration, int maxAcceptors)\n+  {\n+    this.boundAt = boundAt;\n+    this.lastKnownLearnedInstanceInCluster = lastKnownLearnedInstanceInCluster;\n+    this.nextInstanceId = nextInstanceId;\n+    this.configuration = configuration;\n+    this.maxAcceptors = maxAcceptors;\n+  }\n \n-    public URI boundAt()\n+  public URI boundAt()\n+  {\n+    return boundAt;\n+  }\n+\n+  public void setBoundAt(InstanceId me, URI boundAt)\n+  {\n+    this.boundAt = boundAt;\n+    configuration.getMembers().put(me, boundAt);\n+  }\n+\n+  public long lastKnownLearnedInstanceInCluster()\n+  {\n+    return lastKnownLearnedInstanceInCluster;\n+  }\n+\n+  public void setLastKnownLearnedInstanceInCluster(long lastKnownLearnedInstanceInCluster, InstanceId instanceId)\n+  {\n+    if (this.lastKnownLearnedInstanceInCluster <= lastKnownLearnedInstanceInCluster)\n+    {\n+      this.lastKnownLearnedInstanceInCluster = lastKnownLearnedInstanceInCluster;\n+      if (instanceId != null)\n+      {\n+        this.lastKnownAliveUpToDateInstance = instanceId;\n+      }\n+    } else if (lastKnownLearnedInstanceInCluster == -1)\n+    {\n+      // Special case for clearing the state\n+      this.lastKnownLearnedInstanceInCluster = -1;\n+    }\n+  }\n+\n+  public org.neo4j.cluster.InstanceId getLastKnownAliveUpToDateInstance()\n+  {\n+    return this.lastKnownAliveUpToDateInstance;\n+  }\n+\n+  public long nextInstanceId()\n+  {\n+    return nextInstanceId;\n+  }\n+\n+  public void setNextInstanceId(long nextInstanceId)\n+  {\n+    this.nextInstanceId = nextInstanceId;\n+  }\n+\n+  public long getAndIncrementInstanceId()\n+  {\n+    return nextInstanceId++;\n+  }\n+\n+  public ClusterConfiguration configuration()\n+  {\n+    return configuration;\n+  }\n+\n+  public void setConfiguration(ClusterConfiguration configuration)\n+  {\n+    this.configuration = configuration;\n+  }\n+\n+  public int getMaxAcceptors()\n+  {\n+    return maxAcceptors;\n+  }\n+\n+  public CommonContextState snapshot(Log log)\n+  {\n+    return new CommonContextState(boundAt, lastKnownLearnedInstanceInCluster, nextInstanceId,\n+        configuration.snapshot(log), maxAcceptors);\n+  }\n+\n+  @Override\n+  public boolean equals(Object o)\n+  {\n+    if (this == o)\n+    {\n+      return true;\n+    }\n+    if (o == null || getClass() != o.getClass())\n+    {\n+      return false;\n+    }\n+\n+    CommonContextState that = (CommonContextState) o;\n+\n+    if (lastKnownLearnedInstanceInCluster != that.lastKnownLearnedInstanceInCluster)\n     {\n-        return boundAt;\n-    }\n-\n-    public void setBoundAt( InstanceId me, URI boundAt )\n-    {\n-        this.boundAt = boundAt;\n-        configuration.getMembers().put( me, boundAt );\n-    }\n-\n-    public long lastKnownLearnedInstanceInCluster()\n+      return false;\n+    }\n+    if (nextInstanceId != that.nextInstanceId)\n     {\n-        return lastKnownLearnedInstanceInCluster;\n+      return false;\n     }\n-\n-    public void setLastKnownLearnedInstanceInCluster( long lastKnownLearnedInstanceInCluster, InstanceId instanceId )\n-    {\n-        if ( this.lastKnownLearnedInstanceInCluster <= lastKnownLearnedInstanceInCluster )\n-        {\n-            this.lastKnownLearnedInstanceInCluster = lastKnownLearnedInstanceInCluster;\n-            if ( instanceId != null )\n-            {\n-                this.lastKnownAliveUpToDateInstance = instanceId;\n-            }\n-        }\n-        else if ( lastKnownLearnedInstanceInCluster == -1 )\n-        {\n-            // Special case for clearing the state\n-            this.lastKnownLearnedInstanceInCluster = -1;\n-        }\n-    }\n-\n-    public org.neo4j.cluster.InstanceId getLastKnownAliveUpToDateInstance()\n-    {\n-        return this.lastKnownAliveUpToDateInstance;\n-    }\n-\n-    public long nextInstanceId()\n-    {\n-        return nextInstanceId;\n-    }\n-\n-    public void setNextInstanceId( long nextInstanceId )\n+    if (boundAt != null ? !boundAt.equals(that.boundAt) : that.boundAt != null)\n     {\n-        this.nextInstanceId = nextInstanceId;\n+      return false;\n     }\n+    return configuration != null ? configuration.equals(that.configuration) : that.configuration == null;\n+  }\n \n-    public long getAndIncrementInstanceId()\n-    {\n-        return nextInstanceId++;\n-    }\n-\n-    public ClusterConfiguration configuration()\n-    {\n-        return configuration;\n-    }\n-\n-    public void setConfiguration( ClusterConfiguration configuration )\n-    {\n-        this.configuration = configuration;\n-    }\n-\n-    public int getMaxAcceptors()\n-    {\n-        return maxAcceptors;\n-    }\n-\n-    public CommonContextState snapshot( Log log )\n-    {\n-        return new CommonContextState( boundAt, lastKnownLearnedInstanceInCluster, nextInstanceId,\n-                configuration.snapshot(log), maxAcceptors );\n-    }\n-\n-    @Override\n-    public boolean equals( Object o )\n-    {\n-        if ( this == o )\n-        {\n-            return true;\n-        }\n-        if ( o == null || getClass() != o.getClass() )\n-        {\n-            return false;\n-        }\n-\n-        CommonContextState that = (CommonContextState) o;\n-\n-        if ( lastKnownLearnedInstanceInCluster != that.lastKnownLearnedInstanceInCluster )\n-        {\n-            return false;\n-        }\n-        if ( nextInstanceId != that.nextInstanceId )\n-        {\n-            return false;\n-        }\n-        if ( boundAt != null ? !boundAt.equals( that.boundAt ) : that.boundAt != null )\n-        {\n-            return false;\n-        }\n-        return configuration != null ? configuration.equals( that.configuration ) : that.configuration == null;\n-    }\n-\n-    @Override\n-    public int hashCode()\n-    {\n-        int result = boundAt != null ? boundAt.hashCode() : 0;\n-        result = 31 * result + (int) (lastKnownLearnedInstanceInCluster ^ (lastKnownLearnedInstanceInCluster >>> 32));\n-        result = 31 * result + (int) (nextInstanceId ^ (nextInstanceId >>> 32));\n-        result = 31 * result + (configuration != null ? configuration.hashCode() : 0);\n-        return result;\n-    }\n+  @Override\n+  public int hashCode()\n+  {\n+    int result = boundAt != null ? boundAt.hashCode() : 0;\n+    result = 31 * result + (int) (lastKnownLearnedInstanceInCluster ^ (lastKnownLearnedInstanceInCluster >>> 32));\n+    result = 31 * result + (int) (nextInstanceId ^ (nextInstanceId >>> 32));\n+    result = 31 * result + (configuration != null ? configuration.hashCode() : 0);\n+    return result;\n+  }\n }\n",
            "diff_size": 218
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "163",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/32/CommonContextState.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/32/CommonContextState.java\nindex 1245113cc71..1252923a913 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/32/CommonContextState.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/32/CommonContextState.java\n@@ -40,9 +40,8 @@ class CommonContextState\n         this.maxAcceptors = maxAcceptors;\n     }\n \n-    private CommonContextState( URI boundAt, long lastKnownLearnedInstanceInCluster, long nextInstanceId,\n-                        ClusterConfiguration configuration, int maxAcceptors )\n-    {\n+    private CommonContextState( URI boundAt, long lastKnownLearnedInstanceInCluster, long nextInstanceId, ClusterConfiguration configuration, int maxAcceptors )\n+{\n         this.boundAt = boundAt;\n         this.lastKnownLearnedInstanceInCluster = lastKnownLearnedInstanceInCluster;\n         this.nextInstanceId = nextInstanceId;\n@@ -131,7 +130,8 @@ class CommonContextState\n         {\n             return true;\n         }\n-        if ( o == null || getClass() != o.getClass() )\n+\n+if ( o == null || getClass() != o.getClass() )\n         {\n             return false;\n         }\n@@ -142,24 +142,27 @@ class CommonContextState\n         {\n             return false;\n         }\n-        if ( nextInstanceId != that.nextInstanceId )\n+\n+if ( nextInstanceId != that.nextInstanceId )\n         {\n             return false;\n         }\n-        if ( boundAt != null ? !boundAt.equals( that.boundAt ) : that.boundAt != null )\n+\n+if ( boundAt != null ? !boundAt.equals( that.boundAt ) : that.boundAt != null )\n         {\n             return false;\n         }\n-        return configuration != null ? configuration.equals( that.configuration ) : that.configuration == null;\n+\n+return configuration != null ? configuration.equals( that.configuration ) : that.configuration == null;\n     }\n \n     @Override\n     public int hashCode()\n     {\n         int result = boundAt != null ? boundAt.hashCode() : 0;\n-        result = 31 * result + (int) (lastKnownLearnedInstanceInCluster ^ (lastKnownLearnedInstanceInCluster >>> 32));\n-        result = 31 * result + (int) (nextInstanceId ^ (nextInstanceId >>> 32));\n-        result = 31 * result + (configuration != null ? configuration.hashCode() : 0);\n+        result = 31 * result + ( int) ( lastKnownLearnedInstanceInCluster ^ ( lastKnownLearnedInstanceInCluster >>> 32 ));\n+        result = 31 * result + ( int) ( nextInstanceId ^ ( nextInstanceId >>> 32 ));\n+        result = 31 * result + (configuration != null ? configuration.hashCode() : 0 );\n         return result;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 15
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
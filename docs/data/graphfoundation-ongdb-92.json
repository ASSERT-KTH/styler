{
    "project_name": "graphfoundation-ongdb",
    "error_id": "92",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "37",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/92/MovingAverage.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/92/MovingAverage.java\nindex fe388185f5a..a47f1556487 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/92/MovingAverage.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/92/MovingAverage.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.util;\n \n import java.util.concurrent.atomic.AtomicLong;\n@@ -29,45 +30,45 @@ import static java.lang.Math.min;\n  */\n public class MovingAverage\n {\n-    private final AtomicLongArray values;\n-    private final AtomicLong total = new AtomicLong();\n-    private final AtomicLong valueCursor = new AtomicLong();\n+  private final AtomicLongArray values;\n+  private final AtomicLong total = new AtomicLong();\n+  private final AtomicLong valueCursor = new AtomicLong();\n \n-    public MovingAverage( int numberOfTrackedValues )\n-    {\n-        this.values = new AtomicLongArray( numberOfTrackedValues );\n-    }\n+  public MovingAverage(int numberOfTrackedValues)\n+  {\n+    this.values = new AtomicLongArray(numberOfTrackedValues);\n+  }\n \n-    public void add( long value )\n-    {\n-        long cursor = valueCursor.getAndIncrement();\n-        long prevValue = values.getAndSet( (int) (cursor % values.length()), value );\n-        total.addAndGet( value - prevValue );\n-    }\n+  public void add(long value)\n+  {\n+    long cursor = valueCursor.getAndIncrement();\n+    long prevValue = values.getAndSet((int) (cursor % values.length()), value);\n+    total.addAndGet(value - prevValue);\n+  }\n \n-    private int numberOfCurrentlyTrackedValues()\n-    {\n-        return (int) min( valueCursor.get(), values.length() );\n-    }\n+  private int numberOfCurrentlyTrackedValues()\n+  {\n+    return (int) min(valueCursor.get(), values.length());\n+  }\n \n-    public long total()\n-    {\n-        return total.get();\n-    }\n+  public long total()\n+  {\n+    return total.get();\n+  }\n \n-    public long average()\n-    {\n-        int trackedValues = numberOfCurrentlyTrackedValues();\n-        return trackedValues > 0 ? total.get() / trackedValues : 0;\n-    }\n+  public long average()\n+  {\n+    int trackedValues = numberOfCurrentlyTrackedValues();\n+    return trackedValues > 0 ? total.get() / trackedValues : 0;\n+  }\n \n-    public void reset()\n+  public void reset()\n+  {\n+    for (int i = 0; i < values.length(); i++)\n     {\n-        for ( int i = 0; i < values.length(); i++ )\n-        {\n-            values.set( i, 0 );\n-        }\n-        total.set( 0 );\n-        valueCursor.set( 0 );\n+      values.set(i, 0);\n     }\n+    total.set(0);\n+    valueCursor.set(0);\n+  }\n }\n",
            "diff_size": 39
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "44",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "29",
                    "severity": "error",
                    "message": "'>' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/92/MovingAverage.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/92/MovingAverage.java\nindex fe388185f5a..b09c4e940ba 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/92/MovingAverage.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/92/MovingAverage.java\n@@ -41,13 +41,13 @@ public class MovingAverage\n     public void add( long value )\n     {\n         long cursor = valueCursor.getAndIncrement();\n-        long prevValue = values.getAndSet( (int) (cursor % values.length()), value );\n+        long prevValue = values.getAndSet( ( int) ( cursor % values.length()), value );\n         total.addAndGet( value - prevValue );\n     }\n \n     private int numberOfCurrentlyTrackedValues()\n     {\n-        return (int) min( valueCursor.get(), values.length() );\n+        return ( int) min( valueCursor.get(), values.length() );\n     }\n \n     public long total()\n@@ -58,7 +58,7 @@ public class MovingAverage\n     public long average()\n     {\n         int trackedValues = numberOfCurrentlyTrackedValues();\n-        return trackedValues > 0 ? total.get() / trackedValues : 0;\n+        return trackedValues> 0 ? total.get() / trackedValues : 0;\n     }\n \n     public void reset()\n@@ -70,4 +70,4 @@ public class MovingAverage\n         total.set( 0 );\n         valueCursor.set( 0 );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
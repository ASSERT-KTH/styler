{
    "project_name": "delight-im-NationSoccer",
    "error_id": "3",
    "information": {
        "errors": [
            {
                "line": "33",
                "column": "25",
                "severity": "error",
                "message": "'...' is preceded with whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
            }
        ]
    },
    "source_code": "\t// ===========================================================\n\n\tpublic V get(final K ... pKeys) {\n\t\tfinal int hashCode = MultiKey.hash(pKeys);\n\n\t\tfinal Iterator<Map.Entry<MultiKey<K>, V>> it = this.entrySet().iterator();",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/delight-im-NationSoccer/errored/1/3/MultiKeyHashMap.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/delight-im-NationSoccer/styler/3/MultiKeyHashMap.java\nindex 7a5bb517f9c..8cf077da80e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/delight-im-NationSoccer/errored/1/3/MultiKeyHashMap.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/delight-im-NationSoccer/styler/3/MultiKeyHashMap.java\n@@ -30,7 +30,7 @@ public class MultiKeyHashMap<K, V> extends HashMap<MultiKey<K>, V> {\n \t// Getter & Setter\n \t// ===========================================================\n \n-\tpublic V get(final K ... pKeys) {\n+\tpublic V get(final K... pKeys) {\n \t\tfinal int hashCode = MultiKey.hash(pKeys);\n \n \t\tfinal Iterator<Map.Entry<MultiKey<K>, V>> it = this.entrySet().iterator();\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/delight-im-NationSoccer/errored/1/3/MultiKeyHashMap.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/delight-im-NationSoccer/intellij/3/MultiKeyHashMap.java\nindex 7a5bb517f9c..748c05e1dc9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/delight-im-NationSoccer/errored/1/3/MultiKeyHashMap.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/delight-im-NationSoccer/intellij/3/MultiKeyHashMap.java\n@@ -12,68 +12,70 @@ import java.util.Map;\n  * @since 16:54:24 - 07.11.2010\n  */\n public class MultiKeyHashMap<K, V> extends HashMap<MultiKey<K>, V> {\n-\t// ===========================================================\n-\t// Constants\n-\t// ==========================================================\n+    // ===========================================================\n+    // Constants\n+    // ==========================================================\n \n-\tprivate static final long serialVersionUID = -6262447639526561122L;\n+    private static final long serialVersionUID = -6262447639526561122L;\n \n-\t// ===========================================================\n-\t// Fields\n-\t// ===========================================================\n+    // ===========================================================\n+    // Fields\n+    // ===========================================================\n \n-\t// ===========================================================\n-\t// Constructors\n-\t// ===========================================================\n+    // ===========================================================\n+    // Constructors\n+    // ===========================================================\n \n-\t// ===========================================================\n-\t// Getter & Setter\n-\t// ===========================================================\n+    // ===========================================================\n+    // Getter & Setter\n+    // ===========================================================\n \n-\tpublic V get(final K ... pKeys) {\n-\t\tfinal int hashCode = MultiKey.hash(pKeys);\n+    public V get(final K... pKeys) {\n+        final int hashCode = MultiKey.hash(pKeys);\n \n-\t\tfinal Iterator<Map.Entry<MultiKey<K>, V>> it = this.entrySet().iterator();\n-\t\twhile (it.hasNext()) {\n-\t\t\tfinal Map.Entry<MultiKey<K>, V> entry = it.next();\n-\t\t\tfinal MultiKey<K> entryKey = entry.getKey();\n-\t\t\tif (entryKey.hashCode() == hashCode && this.isEqualKey(entryKey.getKeys(), pKeys)) {\n-\t\t\t\treturn entry.getValue();\n-\t\t\t}\n-\t\t}\n-\t\treturn null;\n-\t}\n+        final Iterator<Map.Entry<MultiKey<K>, V>> it =\n+            this.entrySet().iterator();\n+        while (it.hasNext()) {\n+            final Map.Entry<MultiKey<K>, V> entry = it.next();\n+            final MultiKey<K> entryKey = entry.getKey();\n+            if (entryKey.hashCode() == hashCode &&\n+                this.isEqualKey(entryKey.getKeys(), pKeys)) {\n+                return entry.getValue();\n+            }\n+        }\n+        return null;\n+    }\n \n-\t// ===========================================================\n-\t// Methods for/from SuperClass/Interfaces\n-\t// ===========================================================\n+    // ===========================================================\n+    // Methods for/from SuperClass/Interfaces\n+    // ===========================================================\n \n-\t// ===========================================================\n-\t// Methods\n-\t// ===========================================================\n+    // ===========================================================\n+    // Methods\n+    // ===========================================================\n \n-\tprivate boolean isEqualKey(final K[] pKeysA, final K[] pKeysB) {\n-\t\tif (pKeysA.length != pKeysB.length) {\n-\t\t\treturn false;\n-\t\t} else {\n-\t\t\tfor (int i = 0; i < pKeysA.length; i++) {\n-\t\t\t\tfinal K keyA = pKeysA[i];\n-\t\t\t\tfinal K keyB = pKeysB[i];\n-\t\t\t\tif (keyA == null) {\n-\t\t\t\t\tif (keyB != null) {\n-\t\t\t\t\t\treturn false;\n-\t\t\t\t\t}\n-\t\t\t\t} else {\n-\t\t\t\t\tif (!keyA.equals(keyB)) {\n-\t\t\t\t\t\treturn false;\n-\t\t\t\t\t}\n-\t\t\t\t}\n-\t\t\t}\n-\t\t}\n-\t\treturn true;\n-\t}\n+    private boolean isEqualKey(final K[] pKeysA, final K[] pKeysB) {\n+        if (pKeysA.length != pKeysB.length) {\n+            return false;\n+        } else {\n+            for (int i = 0; i < pKeysA.length; i++) {\n+                final K keyA = pKeysA[i];\n+                final K keyB = pKeysB[i];\n+                if (keyA == null) {\n+                    if (keyB != null) {\n+                        return false;\n+                    }\n+                } else {\n+                    if (!keyA.equals(keyB)) {\n+                        return false;\n+                    }\n+                }\n+            }\n+        }\n+        return true;\n+    }\n \n-\t// ===========================================================\n-\t// Inner and Anonymous Classes\n-\t// ===========================================================\n+    // ===========================================================\n+    // Inner and Anonymous Classes\n+    // ===========================================================\n }\n",
            "diff_size": 56
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/delight-im-NationSoccer/errored/1/3/MultiKeyHashMap.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/delight-im-NationSoccer/naturalize/3/MultiKeyHashMap.java\nindex 7a5bb517f9c..b3e917403c4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/delight-im-NationSoccer/errored/1/3/MultiKeyHashMap.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/delight-im-NationSoccer/naturalize/3/MultiKeyHashMap.java\n@@ -30,7 +30,7 @@ public class MultiKeyHashMap<K, V> extends HashMap<MultiKey<K>, V> {\n \t// Getter & Setter\n \t// ===========================================================\n \n-\tpublic V get(final K ... pKeys) {\n+\tpublic V get(final K... pKeys) {\n \t\tfinal int hashCode = MultiKey.hash(pKeys);\n \n \t\tfinal Iterator<Map.Entry<MultiKey<K>, V>> it = this.entrySet().iterator();\n@@ -76,4 +76,4 @@ public class MultiKeyHashMap<K, V> extends HashMap<MultiKey<K>, V> {\n \t// ===========================================================\n \t// Inner and Anonymous Classes\n \t// ===========================================================\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/delight-im-NationSoccer/errored/1/3/MultiKeyHashMap.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/delight-im-NationSoccer/codebuff/3/MultiKeyHashMap.java\nindex 7a5bb517f9c..92adddca4a2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/delight-im-NationSoccer/errored/1/3/MultiKeyHashMap.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/delight-im-NationSoccer/codebuff/3/MultiKeyHashMap.java\n@@ -11,69 +11,82 @@ import java.util.Map;\n  * @author Nicolas Gramlich\n  * @since 16:54:24 - 07.11.2010\n  */\n+\n+\n public class MultiKeyHashMap<K, V> extends HashMap<MultiKey<K>, V> {\n-\t// ===========================================================\n-\t// Constants\n-\t// ==========================================================\n-\n-\tprivate static final long serialVersionUID = -6262447639526561122L;\n-\n-\t// ===========================================================\n-\t// Fields\n-\t// ===========================================================\n-\n-\t// ===========================================================\n-\t// Constructors\n-\t// ===========================================================\n-\n-\t// ===========================================================\n-\t// Getter & Setter\n-\t// ===========================================================\n-\n-\tpublic V get(final K ... pKeys) {\n-\t\tfinal int hashCode = MultiKey.hash(pKeys);\n-\n-\t\tfinal Iterator<Map.Entry<MultiKey<K>, V>> it = this.entrySet().iterator();\n-\t\twhile (it.hasNext()) {\n-\t\t\tfinal Map.Entry<MultiKey<K>, V> entry = it.next();\n-\t\t\tfinal MultiKey<K> entryKey = entry.getKey();\n-\t\t\tif (entryKey.hashCode() == hashCode && this.isEqualKey(entryKey.getKeys(), pKeys)) {\n-\t\t\t\treturn entry.getValue();\n-\t\t\t}\n-\t\t}\n-\t\treturn null;\n-\t}\n-\n-\t// ===========================================================\n-\t// Methods for/from SuperClass/Interfaces\n-\t// ===========================================================\n-\n-\t// ===========================================================\n-\t// Methods\n-\t// ===========================================================\n-\n-\tprivate boolean isEqualKey(final K[] pKeysA, final K[] pKeysB) {\n-\t\tif (pKeysA.length != pKeysB.length) {\n-\t\t\treturn false;\n-\t\t} else {\n-\t\t\tfor (int i = 0; i < pKeysA.length; i++) {\n-\t\t\t\tfinal K keyA = pKeysA[i];\n-\t\t\t\tfinal K keyB = pKeysB[i];\n-\t\t\t\tif (keyA == null) {\n-\t\t\t\t\tif (keyB != null) {\n-\t\t\t\t\t\treturn false;\n-\t\t\t\t\t}\n-\t\t\t\t} else {\n-\t\t\t\t\tif (!keyA.equals(keyB)) {\n-\t\t\t\t\t\treturn false;\n-\t\t\t\t\t}\n-\t\t\t\t}\n-\t\t\t}\n-\t\t}\n-\t\treturn true;\n-\t}\n-\n-\t// ===========================================================\n-\t// Inner and Anonymous Classes\n-\t// ===========================================================\n-}\n+ // ===========================================================\n+ // Constants\n+ // ==========================================================\n+\n+\n+\n+\n+ private static final long serialVersionUID = -6262447639526561122L;\n+\n+ // ===========================================================\n+ // Fields\n+ // ===========================================================\n+\n+ // ===========================================================\n+ // Constructors\n+ // ===========================================================\n+\n+ // ===========================================================\n+ // Getter & Setter\n+ // ===========================================================\n+\n+\n+ public V get(final K... pKeys) {\n+  final int hashCode = MultiKey.hash(pKeys);\n+  final Iterator<Map.Entry<MultiKey<K>, V>> it = this.entrySet().iterator();\n+  while (it.hasNext()) {\n+   final Map.Entry<MultiKey<K>, V> entry = it.next();\n+   final MultiKey<K> entryKey = entry.getKey();\n+   if (entryKey.hashCode() == hashCode && this.isEqualKey(entryKey.getKeys(), pKeys)) {\n+       return entry.getValue();\n+   }\n+  }\n+  return null;\n+ }\n+\n+ // ===========================================================\n+ // Methods for/from SuperClass/Interfaces\n+ // ===========================================================\n+\n+ // ===========================================================\n+ // Methods\n+ // ===========================================================\n+\n+ private boolean isEqualKey(final K[] pKeysA, final K[] pKeysB) {\n+  if (pKeysA.length != pKeysB.length) {\n+   return false;\n+  } else {\n+   for (int i = 0; i < pKeysA.length; i++) {\n+    final K keyA = pKeysA[i];\n+    final K keyB = pKeysB[i];\n+    if (keyA == null) {\n+     if (keyB != null) {\n+         return false;\n+     }\n+    } else {\n+     if (!keyA.equals(keyB)) {\n+         return false;\n+     }\n+    }\n+   }\n+  }\n+  return true;\n+ }\n+\n+ // ===========================================================\n+ // Inner and Anonymous Classes\n+ // ===========================================================\n+\n+\n+\n+\n+\n+\n+\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 78
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/delight-im-NationSoccer/errored/1/3/MultiKeyHashMap.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/delight-im-NationSoccer/styler_random/3/MultiKeyHashMap.java\nindex 7a5bb517f9c..8cf077da80e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/delight-im-NationSoccer/errored/1/3/MultiKeyHashMap.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/delight-im-NationSoccer/styler_random/3/MultiKeyHashMap.java\n@@ -30,7 +30,7 @@ public class MultiKeyHashMap<K, V> extends HashMap<MultiKey<K>, V> {\n \t// Getter & Setter\n \t// ===========================================================\n \n-\tpublic V get(final K ... pKeys) {\n+\tpublic V get(final K... pKeys) {\n \t\tfinal int hashCode = MultiKey.hash(pKeys);\n \n \t\tfinal Iterator<Map.Entry<MultiKey<K>, V>> it = this.entrySet().iterator();\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/delight-im-NationSoccer/errored/1/3/MultiKeyHashMap.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/delight-im-NationSoccer/styler_three_grams/3/MultiKeyHashMap.java\nindex 7a5bb517f9c..8cf077da80e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/delight-im-NationSoccer/errored/1/3/MultiKeyHashMap.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/delight-im-NationSoccer/styler_three_grams/3/MultiKeyHashMap.java\n@@ -30,7 +30,7 @@ public class MultiKeyHashMap<K, V> extends HashMap<MultiKey<K>, V> {\n \t// Getter & Setter\n \t// ===========================================================\n \n-\tpublic V get(final K ... pKeys) {\n+\tpublic V get(final K... pKeys) {\n \t\tfinal int hashCode = MultiKey.hash(pKeys);\n \n \t\tfinal Iterator<Map.Entry<MultiKey<K>, V>> it = this.entrySet().iterator();\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": []
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1741",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "47",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "102",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "73",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "120",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "19",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "204",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "204",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "231",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "231",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "236",
                    "column": "66",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "236",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "237",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "237",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "238",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "238",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1741/DirectRecordAccess.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1741/DirectRecordAccess.java\nindex 4215bcd677b..3f943f222ef 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1741/DirectRecordAccess.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1741/DirectRecordAccess.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.unsafe.batchinsert.internal;\n \n import java.util.ArrayList;\n@@ -34,211 +35,211 @@ import org.neo4j.kernel.impl.util.statistics.IntCounter;\n  * Provides direct access to records in a store. Changes are batched up and written whenever {@link #commit()}\n  * is called, or {@link #close()} for that matter.\n  */\n-public class DirectRecordAccess<RECORD extends AbstractBaseRecord,ADDITIONAL>\n-        implements RecordAccess<RECORD,ADDITIONAL>\n+public class DirectRecordAccess<RECORD extends AbstractBaseRecord, ADDITIONAL>\n+    implements RecordAccess<RECORD, ADDITIONAL>\n {\n-    private final RecordStore<RECORD> store;\n-    private final Loader<RECORD, ADDITIONAL> loader;\n-    private final Map<Long,DirectRecordProxy> batch = new HashMap<>();\n-\n-    private final IntCounter changeCounter = new IntCounter();\n+  private final RecordStore<RECORD> store;\n+  private final Loader<RECORD, ADDITIONAL> loader;\n+  private final Map<Long, DirectRecordProxy> batch = new HashMap<>();\n+\n+  private final IntCounter changeCounter = new IntCounter();\n+\n+  public DirectRecordAccess(RecordStore<RECORD> store, Loader<RECORD, ADDITIONAL> loader)\n+  {\n+    this.store = store;\n+    this.loader = loader;\n+  }\n+\n+  @Override\n+  public RecordProxy<RECORD, ADDITIONAL> getOrLoad(long key, ADDITIONAL additionalData)\n+  {\n+    DirectRecordProxy loaded = batch.get(key);\n+    if (loaded != null)\n+    {\n+      return loaded;\n+    }\n+    return proxy(key, loader.load(key, additionalData), additionalData, false);\n+  }\n+\n+  private RecordProxy<RECORD, ADDITIONAL> putInBatch(long key, DirectRecordProxy proxy)\n+  {\n+    DirectRecordProxy previous = batch.put(key, proxy);\n+    assert previous == null;\n+    return proxy;\n+  }\n+\n+  @Override\n+  public RecordProxy<RECORD, ADDITIONAL> create(long key, ADDITIONAL additionalData)\n+  {\n+    return proxy(key, loader.newUnused(key, additionalData), additionalData, true);\n+  }\n+\n+  @Override\n+  public RecordProxy<RECORD, ADDITIONAL> getIfLoaded(long key)\n+  {\n+    return batch.get(key);\n+  }\n+\n+  @Override\n+  public void setTo(long key, RECORD newRecord, ADDITIONAL additionalData)\n+  {\n+    throw new UnsupportedOperationException(\"Not supported\");\n+  }\n+\n+  @Override\n+  public RecordProxy<RECORD, ADDITIONAL> setRecord(long key, RECORD record, ADDITIONAL additionalData)\n+  {\n+    throw new UnsupportedOperationException(\"Not supported\");\n+  }\n+\n+  @Override\n+  public int changeSize()\n+  {\n+    return changeCounter.value();\n+  }\n+\n+  @Override\n+  public Iterable<RecordProxy<RECORD, ADDITIONAL>> changes()\n+  {\n+    return new IterableWrapper<RecordProxy<RECORD, ADDITIONAL>, DirectRecordProxy>(\n+        batch.values())\n+    {\n+      @Override\n+      protected RecordProxy<RECORD, ADDITIONAL> underlyingObjectToObject(DirectRecordProxy object)\n+      {\n+        return object;\n+      }\n+    };\n+  }\n+\n+  private DirectRecordProxy proxy(final long key, final RECORD record, final ADDITIONAL additionalData, boolean created)\n+  {\n+    return new DirectRecordProxy(key, record, additionalData, created);\n+  }\n+\n+  private class DirectRecordProxy implements RecordProxy<RECORD, ADDITIONAL>\n+  {\n+    private final long key;\n+    private final RECORD record;\n+    private final ADDITIONAL additionalData;\n+    private boolean changed;\n+    private final boolean created;\n+\n+    DirectRecordProxy(long key, RECORD record, ADDITIONAL additionalData, boolean created)\n+    {\n+      this.key = key;\n+      this.record = record;\n+      this.additionalData = additionalData;\n+      if (created)\n+      {\n+        prepareChange();\n+      }\n+      this.created = created;\n+    }\n \n-    public DirectRecordAccess( RecordStore<RECORD> store, Loader<RECORD, ADDITIONAL> loader )\n+    @Override\n+    public long getKey()\n     {\n-        this.store = store;\n-        this.loader = loader;\n+      return key;\n     }\n \n     @Override\n-    public RecordProxy<RECORD, ADDITIONAL> getOrLoad( long key, ADDITIONAL additionalData )\n+    public RECORD forChangingLinkage()\n     {\n-        DirectRecordProxy loaded = batch.get( key );\n-        if ( loaded != null )\n-        {\n-            return loaded;\n-        }\n-        return proxy( key, loader.load( key, additionalData ), additionalData, false );\n+      prepareChange();\n+      return record;\n     }\n \n-    private RecordProxy<RECORD, ADDITIONAL> putInBatch( long key, DirectRecordProxy proxy )\n+    private void prepareChange()\n     {\n-        DirectRecordProxy previous = batch.put( key, proxy );\n-        assert previous == null;\n-        return proxy;\n+      if (!changed)\n+      {\n+        changed = true;\n+        putInBatch(key, this);\n+        changeCounter.increment();\n+      }\n     }\n \n     @Override\n-    public RecordProxy<RECORD, ADDITIONAL> create( long key, ADDITIONAL additionalData )\n+    public RECORD forChangingData()\n     {\n-        return proxy( key, loader.newUnused( key, additionalData ), additionalData, true );\n+      loader.ensureHeavy(record);\n+      prepareChange();\n+      return record;\n     }\n \n     @Override\n-    public RecordProxy<RECORD,ADDITIONAL> getIfLoaded( long key )\n+    public RECORD forReadingLinkage()\n     {\n-        return batch.get( key );\n+      return record;\n     }\n \n     @Override\n-    public void setTo( long key, RECORD newRecord, ADDITIONAL additionalData )\n+    public RECORD forReadingData()\n     {\n-        throw new UnsupportedOperationException( \"Not supported\" );\n+      loader.ensureHeavy(record);\n+      return record;\n     }\n \n     @Override\n-    public RecordProxy<RECORD,ADDITIONAL> setRecord( long key, RECORD record, ADDITIONAL additionalData )\n+    public ADDITIONAL getAdditionalData()\n     {\n-        throw new UnsupportedOperationException( \"Not supported\" );\n+      return additionalData;\n     }\n \n     @Override\n-    public int changeSize()\n+    public RECORD getBefore()\n     {\n-        return changeCounter.value();\n+      return loader.load(key, additionalData);\n     }\n \n     @Override\n-    public Iterable<RecordProxy<RECORD,ADDITIONAL>> changes()\n-    {\n-        return new IterableWrapper<RecordProxy<RECORD,ADDITIONAL>,DirectRecordProxy>(\n-                batch.values() )\n-        {\n-            @Override\n-            protected RecordProxy<RECORD,ADDITIONAL> underlyingObjectToObject( DirectRecordProxy object )\n-            {\n-                return object;\n-            }\n-        };\n-    }\n-\n-    private DirectRecordProxy proxy( final long key, final RECORD record, final ADDITIONAL additionalData, boolean created )\n-    {\n-        return new DirectRecordProxy( key, record, additionalData, created );\n-    }\n-\n-    private class DirectRecordProxy implements RecordProxy<RECORD,ADDITIONAL>\n-    {\n-        private final long key;\n-        private final RECORD record;\n-        private final ADDITIONAL additionalData;\n-        private boolean changed;\n-        private final boolean created;\n-\n-        DirectRecordProxy( long key, RECORD record, ADDITIONAL additionalData, boolean created )\n-        {\n-            this.key = key;\n-            this.record = record;\n-            this.additionalData = additionalData;\n-            if ( created )\n-            {\n-                prepareChange();\n-            }\n-            this.created = created;\n-        }\n-\n-        @Override\n-        public long getKey()\n-        {\n-            return key;\n-        }\n-\n-        @Override\n-        public RECORD forChangingLinkage()\n-        {\n-            prepareChange();\n-            return record;\n-        }\n-\n-        private void prepareChange()\n-        {\n-            if ( !changed )\n-            {\n-                changed = true;\n-                putInBatch( key, this );\n-                changeCounter.increment();\n-            }\n-        }\n-\n-        @Override\n-        public RECORD forChangingData()\n-        {\n-            loader.ensureHeavy( record );\n-            prepareChange();\n-            return record;\n-        }\n-\n-        @Override\n-        public RECORD forReadingLinkage()\n-        {\n-            return record;\n-        }\n-\n-        @Override\n-        public RECORD forReadingData()\n-        {\n-            loader.ensureHeavy( record );\n-            return record;\n-        }\n-\n-        @Override\n-        public ADDITIONAL getAdditionalData()\n-        {\n-            return additionalData;\n-        }\n-\n-        @Override\n-        public RECORD getBefore()\n-        {\n-            return loader.load( key, additionalData );\n-        }\n-\n-        @Override\n-        public String toString()\n-        {\n-            return record.toString();\n-        }\n-\n-        public void store()\n-        {\n-            if ( changed )\n-            {\n-                store.updateRecord( record );\n-            }\n-        }\n-\n-        @Override\n-        public boolean isChanged()\n-        {\n-            return changed;\n-        }\n-\n-        @Override\n-        public boolean isCreated()\n-        {\n-            return created;\n-        }\n+    public String toString()\n+    {\n+      return record.toString();\n+    }\n+\n+    public void store()\n+    {\n+      if (changed)\n+      {\n+        store.updateRecord(record);\n+      }\n     }\n \n     @Override\n-    public void close()\n+    public boolean isChanged()\n     {\n-        commit();\n+      return changed;\n     }\n \n-    public void commit()\n+    @Override\n+    public boolean isCreated()\n     {\n-        if ( changeCounter.value() == 0 )\n-        {\n-            return;\n-        }\n+      return created;\n+    }\n+  }\n+\n+  @Override\n+  public void close()\n+  {\n+    commit();\n+  }\n \n-        List<DirectRecordProxy> directRecordProxies = new ArrayList<>( batch.values() );\n-        directRecordProxies.sort( ( o1, o2 ) -> Long.compare( -o1.getKey(), o2.getKey() ) );\n-        for ( DirectRecordProxy proxy : directRecordProxies )\n-        {\n-            proxy.store();\n-        }\n-        changeCounter.clear();\n-        batch.clear();\n+  public void commit()\n+  {\n+    if (changeCounter.value() == 0)\n+    {\n+      return;\n+    }\n+\n+    List<DirectRecordProxy> directRecordProxies = new ArrayList<>(batch.values());\n+    directRecordProxies.sort((o1, o2) -> Long.compare(-o1.getKey(), o2.getKey()));\n+    for (DirectRecordProxy proxy : directRecordProxies)\n+    {\n+      proxy.store();\n     }\n+    changeCounter.clear();\n+    batch.clear();\n+  }\n }\n",
            "diff_size": 279
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1741/DirectRecordAccess.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1741/DirectRecordAccess.java\nindex 4215bcd677b..4a7cb60e2c0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1741/DirectRecordAccess.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1741/DirectRecordAccess.java\n@@ -34,33 +34,33 @@ import org.neo4j.kernel.impl.util.statistics.IntCounter;\n  * Provides direct access to records in a store. Changes are batched up and written whenever {@link #commit()}\n  * is called, or {@link #close()} for that matter.\n  */\n-public class DirectRecordAccess<RECORD extends AbstractBaseRecord,ADDITIONAL>\n-        implements RecordAccess<RECORD,ADDITIONAL>\n+public class DirectRecordAccess<RECORD extends AbstractBaseRecord,ADDITIONAL> implements RecordAccess<RECORD,ADDITIONAL>\n {\n     private final RecordStore<RECORD> store;\n-    private final Loader<RECORD, ADDITIONAL> loader;\n+    private final Loader<RECORD,ADDITIONAL> loader;\n     private final Map<Long,DirectRecordProxy> batch = new HashMap<>();\n \n     private final IntCounter changeCounter = new IntCounter();\n \n-    public DirectRecordAccess( RecordStore<RECORD> store, Loader<RECORD, ADDITIONAL> loader )\n+    public DirectRecordAccess( RecordStore<RECORD> store, Loader<RECORD,ADDITIONAL> loader )\n     {\n         this.store = store;\n         this.loader = loader;\n     }\n \n     @Override\n-    public RecordProxy<RECORD, ADDITIONAL> getOrLoad( long key, ADDITIONAL additionalData )\n+    public RecordProxy<RECORD,ADDITIONAL> getOrLoad( long key, ADDITIONAL additionalData )\n     {\n         DirectRecordProxy loaded = batch.get( key );\n         if ( loaded != null )\n         {\n             return loaded;\n         }\n-        return proxy( key, loader.load( key, additionalData ), additionalData, false );\n+\n+return proxy( key, loader.load( key, additionalData ), additionalData, false );\n     }\n \n-    private RecordProxy<RECORD, ADDITIONAL> putInBatch( long key, DirectRecordProxy proxy )\n+    private RecordProxy<RECORD,ADDITIONAL> putInBatch( long key, DirectRecordProxy proxy )\n     {\n         DirectRecordProxy previous = batch.put( key, proxy );\n         assert previous == null;\n@@ -68,7 +68,7 @@ public class DirectRecordAccess<RECORD extends AbstractBaseRecord,ADDITIONAL>\n     }\n \n     @Override\n-    public RecordProxy<RECORD, ADDITIONAL> create( long key, ADDITIONAL additionalData )\n+    public RecordProxy<RECORD,ADDITIONAL> create( long key, ADDITIONAL additionalData )\n     {\n         return proxy( key, loader.newUnused( key, additionalData ), additionalData, true );\n     }\n@@ -100,8 +100,7 @@ public class DirectRecordAccess<RECORD extends AbstractBaseRecord,ADDITIONAL>\n     @Override\n     public Iterable<RecordProxy<RECORD,ADDITIONAL>> changes()\n     {\n-        return new IterableWrapper<RecordProxy<RECORD,ADDITIONAL>,DirectRecordProxy>(\n-                batch.values() )\n+        return new IterableWrapper<RecordProxy<RECORD,ADDITIONAL>,DirectRecordProxy>( batch.values() )\n         {\n             @Override\n             protected RecordProxy<RECORD,ADDITIONAL> underlyingObjectToObject( DirectRecordProxy object )\n@@ -241,4 +240,4 @@ public class DirectRecordAccess<RECORD extends AbstractBaseRecord,ADDITIONAL>\n         changeCounter.clear();\n         batch.clear();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 12
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
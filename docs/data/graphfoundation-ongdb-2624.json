{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2624",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "46",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "15",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "19",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2624/IdValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2624/IdValidator.java\nindex 3e3de58478f..53701fcadb9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2624/IdValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2624/IdValidator.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.store.id.validation;\n \n import org.neo4j.kernel.impl.store.id.IdGenerator;\n@@ -30,70 +31,70 @@ import org.neo4j.kernel.impl.store.record.AbstractBaseRecord;\n  */\n public final class IdValidator\n {\n-    private IdValidator()\n-    {\n-    }\n+  private IdValidator()\n+  {\n+  }\n \n-    /**\n-     * Checks if the given id is reserved, i.e. {@link IdGeneratorImpl#INTEGER_MINUS_ONE}.\n-     *\n-     * @param id the id to check.\n-     * @return <code>true</code> if the given id is {@link IdGeneratorImpl#INTEGER_MINUS_ONE}, <code>false</code>\n-     * otherwise.\n-     * @see IdGeneratorImpl#INTEGER_MINUS_ONE\n-     */\n-    public static boolean isReservedId( long id )\n-    {\n-        return id == IdGeneratorImpl.INTEGER_MINUS_ONE;\n-    }\n+  /**\n+   * Checks if the given id is reserved, i.e. {@link IdGeneratorImpl#INTEGER_MINUS_ONE}.\n+   *\n+   * @param id the id to check.\n+   * @return <code>true</code> if the given id is {@link IdGeneratorImpl#INTEGER_MINUS_ONE}, <code>false</code>\n+   * otherwise.\n+   * @see IdGeneratorImpl#INTEGER_MINUS_ONE\n+   */\n+  public static boolean isReservedId(long id)\n+  {\n+    return id == IdGeneratorImpl.INTEGER_MINUS_ONE;\n+  }\n \n-    /**\n-     * Asserts that the given id is valid:\n-     * <ul>\n-     * <li>non-negative\n-     * <li>less than the given max id\n-     * <li>not equal to {@link IdGeneratorImpl#INTEGER_MINUS_ONE}\n-     * </ul>\n-     *\n-     * @param id the id to check.\n-     * @param maxId the max allowed id.\n-     * @see IdGeneratorImpl#INTEGER_MINUS_ONE\n-     */\n-    public static void assertValidId( IdType idType, long id, long maxId )\n+  /**\n+   * Asserts that the given id is valid:\n+   * <ul>\n+   * <li>non-negative\n+   * <li>less than the given max id\n+   * <li>not equal to {@link IdGeneratorImpl#INTEGER_MINUS_ONE}\n+   * </ul>\n+   *\n+   * @param id    the id to check.\n+   * @param maxId the max allowed id.\n+   * @see IdGeneratorImpl#INTEGER_MINUS_ONE\n+   */\n+  public static void assertValidId(IdType idType, long id, long maxId)\n+  {\n+    if (isReservedId(id))\n     {\n-        if ( isReservedId( id ) )\n-        {\n-            throw new ReservedIdException( id );\n-        }\n-        assertIdWithinCapacity( idType, id, maxId );\n+      throw new ReservedIdException(id);\n     }\n+    assertIdWithinCapacity(idType, id, maxId);\n+  }\n \n-    /**\n-     * Asserts that the given id is valid with respect to given max id:\n-     * <ul>\n-     * <li>non-negative\n-     * <li>less than the given max id\n-     * </ul>\n-     *\n-     * @param idType\n-     * @param id the id to check.\n-     * @param maxId the max allowed id.\n-     */\n-    public static void assertIdWithinCapacity( IdType idType, long id, long maxId )\n+  /**\n+   * Asserts that the given id is valid with respect to given max id:\n+   * <ul>\n+   * <li>non-negative\n+   * <li>less than the given max id\n+   * </ul>\n+   *\n+   * @param idType\n+   * @param id     the id to check.\n+   * @param maxId  the max allowed id.\n+   */\n+  public static void assertIdWithinCapacity(IdType idType, long id, long maxId)\n+  {\n+    if (id < 0)\n     {\n-        if ( id < 0 )\n-        {\n-            throw new NegativeIdException( id );\n-        }\n-        if ( id > maxId )\n-        {\n-            throw new IdCapacityExceededException( idType, id, maxId );\n-        }\n+      throw new NegativeIdException(id);\n     }\n-\n-    public static boolean hasReservedIdInRange( long startIdInclusive, long endIdExclusive )\n+    if (id > maxId)\n     {\n-        return startIdInclusive <= IdGeneratorImpl.INTEGER_MINUS_ONE &&\n-                endIdExclusive > IdGeneratorImpl.INTEGER_MINUS_ONE;\n+      throw new IdCapacityExceededException(idType, id, maxId);\n     }\n+  }\n+\n+  public static boolean hasReservedIdInRange(long startIdInclusive, long endIdExclusive)\n+  {\n+    return startIdInclusive <= IdGeneratorImpl.INTEGER_MINUS_ONE &&\n+        endIdExclusive > IdGeneratorImpl.INTEGER_MINUS_ONE;\n+  }\n }\n",
            "diff_size": 71
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "90",
                    "column": "8",
                    "severity": "error",
                    "message": "'>' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2624/IdValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2624/IdValidator.java\nindex 3e3de58478f..99823717332 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2624/IdValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2624/IdValidator.java\n@@ -65,7 +65,8 @@ public final class IdValidator\n         {\n             throw new ReservedIdException( id );\n         }\n-        assertIdWithinCapacity( idType, id, maxId );\n+\n+assertIdWithinCapacity( idType, id, maxId );\n     }\n \n     /**\n@@ -85,7 +86,8 @@ public final class IdValidator\n         {\n             throw new NegativeIdException( id );\n         }\n-        if ( id > maxId )\n+\n+if ( id> maxId )\n         {\n             throw new IdCapacityExceededException( idType, id, maxId );\n         }\n@@ -96,4 +98,4 @@ public final class IdValidator\n         return startIdInclusive <= IdGeneratorImpl.INTEGER_MINUS_ONE &&\n                 endIdExclusive > IdGeneratorImpl.INTEGER_MINUS_ONE;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
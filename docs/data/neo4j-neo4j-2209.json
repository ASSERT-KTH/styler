{
    "project_name": "neo4j-neo4j",
    "error_id": "2209",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "40",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2209/Dependencies.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2209/Dependencies.java\nindex 9141810c90d..fac88cba41d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2209/Dependencies.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2209/Dependencies.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.collection;\n \n import org.eclipse.collections.api.RichIterable;\n@@ -36,7 +37,7 @@ import org.neo4j.exceptions.UnsatisfiedDependencyException;\n import static org.apache.commons.lang3.ClassUtils.getAllInterfaces;\n import static org.apache.commons.lang3.ClassUtils.getAllSuperclasses;\n \n-@SuppressWarnings( \"unchecked\" )\n+@SuppressWarnings(\"unchecked\")\n public class Dependencies extends DependencyResolver.Adapter implements DependencySatisfier\n {\n     private final DependencyResolver parent;\n@@ -47,112 +48,112 @@ public class Dependencies extends DependencyResolver.Adapter implements Dependen\n         parent = null;\n     }\n \n-    public Dependencies( DependencyResolver parent )\n+    public Dependencies(DependencyResolver parent)\n     {\n-        Objects.requireNonNull( parent );\n+        Objects.requireNonNull(parent);\n         this.parent = parent;\n     }\n \n     @Override\n-    public <T> T resolveDependency( Class<T> type, SelectionStrategy selector )\n+    public <T> T resolveDependency(Class<T> type, SelectionStrategy selector)\n     {\n-        RichIterable<Object> options = typeDependencies.get( type );\n-        if ( options.notEmpty() )\n+        RichIterable<Object> options = typeDependencies.get(type);\n+        if (options.notEmpty())\n         {\n-            return selector.select( type, (Iterable<T>) options );\n+            return selector.select(type, (Iterable<T>) options);\n         }\n \n         // Try parent\n-        if ( parent != null )\n+        if (parent != null)\n         {\n-            return parent.resolveDependency( type, selector );\n+            return parent.resolveDependency(type, selector);\n         }\n \n         // Out of options\n-        throw new UnsatisfiedDependencyException( type );\n+        throw new UnsatisfiedDependencyException(type);\n     }\n \n     @Override\n-    public <T> Iterable<T> resolveTypeDependencies( Class<T> type )\n+    public <T> Iterable<T> resolveTypeDependencies(Class<T> type)\n     {\n-        MutableSet<T> options = (MutableSet<T>) typeDependencies.get( type );\n-        if ( parent != null )\n+        MutableSet<T> options = (MutableSet<T>) typeDependencies.get(type);\n+        if (parent != null)\n         {\n-            options = Sets.mutable.ofAll( options );\n-            parent.resolveTypeDependencies( type ).forEach( options::add );\n+            options = Sets.mutable.ofAll(options);\n+            parent.resolveTypeDependencies(type).forEach(options::add);\n         }\n         return options;\n     }\n \n     @Override\n-    public <T> Supplier<T> provideDependency( final Class<T> type, final SelectionStrategy selector )\n+    public <T> Supplier<T> provideDependency(final Class<T> type, final SelectionStrategy selector)\n     {\n-        return () -> resolveDependency( type, selector );\n+        return () -> resolveDependency(type, selector);\n     }\n \n     @Override\n-    public <T> Supplier<T> provideDependency( final Class<T> type )\n+    public <T> Supplier<T> provideDependency(final Class<T> type)\n     {\n-        return () -> resolveDependency( type );\n+        return () -> resolveDependency(type);\n     }\n \n     @Override\n-    public <T> T satisfyDependency( T dependency )\n+    public <T> T satisfyDependency(T dependency)\n     {\n         // File this object under all its possible types\n         Class<?> type = dependency.getClass();\n-        typeDependencies.put( type, dependency );\n+        typeDependencies.put(type, dependency);\n \n-        addSuperclasses( type, dependency );\n-        addInterfaces( type, dependency );\n+        addSuperclasses(type, dependency);\n+        addInterfaces(type, dependency);\n \n         return dependency;\n     }\n \n     @Override\n-    public boolean containsDependency( Class<?> type )\n+    public boolean containsDependency(Class<?> type)\n     {\n-        if ( typeDependencies.containsKey( type ) )\n+        if (typeDependencies.containsKey(type))\n         {\n             return true;\n         }\n-        if ( parent != null )\n+        if (parent != null)\n         {\n-            return parent.containsDependency( type );\n+            return parent.containsDependency(type);\n         }\n         return false;\n     }\n \n-    private <T> void addInterfaces( Class<?> type, T dependency )\n+    private <T> void addInterfaces(Class<?> type, T dependency)\n     {\n-        List<Class<?>> interfaces = getAllInterfaces( type );\n-        if ( interfaces != null )\n+        List<Class<?>> interfaces = getAllInterfaces(type);\n+        if (interfaces != null)\n         {\n-            interfaces.remove( type );\n-            for ( Class<?> iType : interfaces )\n+            interfaces.remove(type);\n+            for (Class<?> iType : interfaces)\n             {\n-                typeDependencies.put( iType, dependency );\n+                typeDependencies.put(iType, dependency);\n             }\n         }\n     }\n \n-    private <T> void addSuperclasses( Class<?> type, T dependency )\n+    private <T> void addSuperclasses(Class<?> type, T dependency)\n     {\n-        List<Class<?>> allSuperclasses = getAllSuperclasses( type );\n-        if ( allSuperclasses != null )\n+        List<Class<?>> allSuperclasses = getAllSuperclasses(type);\n+        if (allSuperclasses != null)\n         {\n-            for ( Class<?> aClass : allSuperclasses )\n+            for (Class<?> aClass : allSuperclasses)\n             {\n-                typeDependencies.put( aClass, dependency );\n+                typeDependencies.put(aClass, dependency);\n             }\n         }\n     }\n \n-    public void satisfyDependencies( Object... dependencies )\n+    public void satisfyDependencies(Object... dependencies)\n     {\n-        for ( Object dependency : dependencies )\n+        for (Object dependency : dependencies)\n         {\n-            satisfyDependency( dependency );\n+            satisfyDependency(dependency);\n         }\n     }\n }\n",
            "diff_size": 42
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
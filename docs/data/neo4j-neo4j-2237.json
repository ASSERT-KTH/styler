{
    "project_name": "neo4j-neo4j",
    "error_id": "2237",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "34",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "34",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "105",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "95",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "130",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2237/InconsistencyMessageLogger.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2237/InconsistencyMessageLogger.java\nindex 34f81ec938f..b25e8dcbeb6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2237/InconsistencyMessageLogger.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2237/InconsistencyMessageLogger.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.consistency.report;\n \n import org.neo4j.consistency.RecordType;\n@@ -30,115 +31,114 @@ public class InconsistencyMessageLogger implements InconsistencyLogger\n {\n     private final Log log;\n \n-    public InconsistencyMessageLogger( Log log )\n+    public InconsistencyMessageLogger(Log log)\n     {\n         this.log = log;\n     }\n \n     @Override\n-    public void error( RecordType recordType, AbstractBaseRecord record, String message, Object... args )\n+    public void error(RecordType recordType, AbstractBaseRecord record, String message, Object... args)\n     {\n-        log.error( buildMessage( message, record, args ) );\n+        log.error(buildMessage(message, record, args));\n     }\n \n     @Override\n-    public void error( RecordType recordType, AbstractBaseRecord oldRecord, AbstractBaseRecord newRecord,\n-                       String message, Object... args )\n+    public void error(RecordType recordType, AbstractBaseRecord oldRecord, AbstractBaseRecord newRecord,\n+                      String message, Object... args)\n     {\n-        log.error( buildMessage( message, oldRecord, newRecord, args ) );\n+        log.error(buildMessage(message, oldRecord, newRecord, args));\n     }\n \n     @Override\n-    public void error( String message )\n+    public void error(String message)\n     {\n-        log.error( buildMessage( message ) );\n+        log.error(buildMessage(message));\n     }\n \n     @Override\n-    public void warning( RecordType recordType, AbstractBaseRecord record, String message, Object... args )\n+    public void warning(RecordType recordType, AbstractBaseRecord record, String message, Object... args)\n     {\n-        log.warn( buildMessage( message, record, args ) );\n+        log.warn(buildMessage(message, record, args));\n     }\n \n     @Override\n-    public void warning( RecordType recordType, AbstractBaseRecord oldRecord, AbstractBaseRecord newRecord,\n-                         String message, Object... args )\n+    public void warning(RecordType recordType, AbstractBaseRecord oldRecord, AbstractBaseRecord newRecord,\n+                        String message, Object... args)\n     {\n-        log.warn( buildMessage( message, oldRecord, newRecord, args ) );\n+        log.warn(buildMessage(message, oldRecord, newRecord, args));\n     }\n \n     @Override\n-    public void warning( String message )\n+    public void warning(String message)\n     {\n-        log.warn( buildMessage( message ) );\n+        log.warn(buildMessage(message));\n     }\n \n-    private static String buildMessage( String message )\n+    private static String buildMessage(String message)\n     {\n-        StringBuilder builder = tabAfterLinebreak( message );\n+        StringBuilder builder = tabAfterLinebreak(message);\n         return builder.toString();\n     }\n \n-    private static String buildMessage( String message, AbstractBaseRecord record, Object... args )\n+    private static String buildMessage(String message, AbstractBaseRecord record, Object... args)\n     {\n-        StringBuilder builder = joinLines( message ).append( System.lineSeparator() ).append( TAB ).append( safeToString( record ) );\n-        appendArgs( builder, args );\n+        StringBuilder builder = joinLines(message).append(System.lineSeparator()).append(TAB).append(safeToString(record));\n+        appendArgs(builder, args);\n         return builder.toString();\n     }\n \n-    private static String safeToString( AbstractBaseRecord record )\n+    private static String safeToString(AbstractBaseRecord record)\n     {\n         try\n         {\n             return record.toString();\n-        }\n-        catch ( Exception e )\n+        } catch (Exception e)\n         {\n-            return String.format( \"%s[%d,Error generating toString: %s]\", record.getClass().getSimpleName(), record.getId(), e );\n+            return String.format(\"%s[%d,Error generating toString: %s]\", record.getClass().getSimpleName(), record.getId(), e);\n         }\n     }\n \n-    private static String buildMessage( String message, AbstractBaseRecord oldRecord, AbstractBaseRecord newRecord, Object... args )\n+    private static String buildMessage(String message, AbstractBaseRecord oldRecord, AbstractBaseRecord newRecord, Object... args)\n     {\n-        StringBuilder builder = joinLines( message );\n-        builder.append( System.lineSeparator() ).append( TAB ).append( \"- \" ).append( oldRecord );\n-        builder.append( System.lineSeparator() ).append( TAB ).append( \"+ \" ).append( newRecord );\n-        appendArgs( builder, args );\n+        StringBuilder builder = joinLines(message);\n+        builder.append(System.lineSeparator()).append(TAB).append(\"- \").append(oldRecord);\n+        builder.append(System.lineSeparator()).append(TAB).append(\"+ \").append(newRecord);\n+        appendArgs(builder, args);\n         return builder.toString();\n     }\n \n-    private static StringBuilder tabAfterLinebreak( String message )\n+    private static StringBuilder tabAfterLinebreak(String message)\n     {\n-        String[] lines = message.split( \"\\n\" );\n-        StringBuilder builder = new StringBuilder( lines[0].trim() );\n-        for ( int i = 1; i < lines.length; i++ )\n+        String[] lines = message.split(\"\\n\");\n+        StringBuilder builder = new StringBuilder(lines[0].trim());\n+        for (int i = 1; i < lines.length; i++)\n         {\n-            builder.append( System.lineSeparator() ).append( TAB ).append( lines[i].trim() );\n+            builder.append(System.lineSeparator()).append(TAB).append(lines[i].trim());\n         }\n         return builder;\n     }\n \n-    private static StringBuilder joinLines( String message )\n+    private static StringBuilder joinLines(String message)\n     {\n-        String[] lines = message.split( \"\\n\" );\n-        StringBuilder builder = new StringBuilder( lines[0].trim() );\n-        for ( int i = 1; i < lines.length; i++ )\n+        String[] lines = message.split(\"\\n\");\n+        StringBuilder builder = new StringBuilder(lines[0].trim());\n+        for (int i = 1; i < lines.length; i++)\n         {\n-            builder.append( ' ' ).append( lines[i].trim() );\n+            builder.append(' ').append(lines[i].trim());\n         }\n         return builder;\n     }\n \n-    private static StringBuilder appendArgs( StringBuilder builder, Object[] args )\n+    private static StringBuilder appendArgs(StringBuilder builder, Object[] args)\n     {\n-        if ( args == null || args.length == 0 )\n+        if (args == null || args.length == 0)\n         {\n             return builder;\n         }\n-        builder.append( System.lineSeparator() ).append( TAB ).append( \"Inconsistent with:\" );\n-        for ( Object arg : args )\n+        builder.append(System.lineSeparator()).append(TAB).append(\"Inconsistent with:\");\n+        for (Object arg : args)\n         {\n-            builder.append( ' ' ).append( Strings.prettyPrint( arg ) );\n+            builder.append(' ').append(Strings.prettyPrint(arg));\n         }\n         return builder;\n     }\n",
            "diff_size": 45
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2237/InconsistencyMessageLogger.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/2237/InconsistencyMessageLogger.java\nindex 34f81ec938f..cabfaee9d03 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2237/InconsistencyMessageLogger.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/2237/InconsistencyMessageLogger.java\n@@ -44,7 +44,7 @@ public class InconsistencyMessageLogger implements InconsistencyLogger\n     @Override\n     public void error( RecordType recordType, AbstractBaseRecord oldRecord, AbstractBaseRecord newRecord,\n                        String message, Object... args )\n-    {\n+{\n         log.error( buildMessage( message, oldRecord, newRecord, args ) );\n     }\n \n@@ -61,9 +61,8 @@ public class InconsistencyMessageLogger implements InconsistencyLogger\n     }\n \n     @Override\n-    public void warning( RecordType recordType, AbstractBaseRecord oldRecord, AbstractBaseRecord newRecord,\n-                         String message, Object... args )\n-    {\n+    public void warning( RecordType recordType, AbstractBaseRecord oldRecord, AbstractBaseRecord newRecord, String message, Object... args )\n+{\n         log.warn( buildMessage( message, oldRecord, newRecord, args ) );\n     }\n \n@@ -142,4 +141,4 @@ public class InconsistencyMessageLogger implements InconsistencyLogger\n         }\n         return builder;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
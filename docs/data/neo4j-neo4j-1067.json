{
    "project_name": "neo4j-neo4j",
    "error_id": "1067",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "149",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "174",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "174",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "189",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "189",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "194",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "194",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "204",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "204",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "230",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "243",
                    "column": "72",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "243",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "262",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "262",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "266",
                    "column": "90",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "266",
                    "column": "115",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "267",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "267",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "275",
                    "column": "126",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "275",
                    "column": "137",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "278",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "278",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "295",
                    "column": "63",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "295",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "309",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "309",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "311",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "313",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "330",
                    "column": "86",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "330",
                    "column": "111",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "334",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "334",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "339",
                    "column": "67",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "339",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "345",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "345",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "356",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "356",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "379",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "379",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "381",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "381",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "391",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "391",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "391",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "393",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "393",
                    "column": "133",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "396",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "396",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "410",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "410",
                    "column": "110",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "412",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "412",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "419",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "423",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "423",
                    "column": "122",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "425",
                    "column": "107",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "425",
                    "column": "124",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "426",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "426",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "432",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "432",
                    "column": "136",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "439",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "439",
                    "column": "139",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "441",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "441",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "458",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "458",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "460",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "460",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "462",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "462",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "481",
                    "column": "21",
                    "severity": "error",
                    "message": "'}' at column 21 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "481",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "481",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "483",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "483",
                    "column": "112",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "487",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "487",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "513",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "513",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "519",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "519",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "538",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "538",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "544",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "544",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "557",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "557",
                    "column": "112",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "559",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "559",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "564",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "564",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "564",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "567",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "570",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "574",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "574",
                    "column": "134",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "576",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "576",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "578",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "578",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "599",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "599",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "614",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "614",
                    "column": "102",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "616",
                    "column": "78",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "616",
                    "column": "115",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "621",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "622",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "625",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "625",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "632",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "632",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "640",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "640",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "644",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "644",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "644",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "649",
                    "column": "17",
                    "severity": "error",
                    "message": "'}' at column 17 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "649",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "649",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "653",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "653",
                    "column": "116",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "656",
                    "column": "21",
                    "severity": "error",
                    "message": "'}' at column 21 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "656",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "656",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "666",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "666",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "673",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "673",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "680",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "680",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "691",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "691",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "696",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "696",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "703",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "703",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "703",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "706",
                    "column": "59",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "706",
                    "column": "114",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "710",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "710",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "716",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "716",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "722",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "722",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "729",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "729",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "735",
                    "column": "64",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "735",
                    "column": "127",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "737",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "737",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "742",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "742",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "742",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "747",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "747",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "748",
                    "column": "17",
                    "severity": "error",
                    "message": "'}' at column 17 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "748",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "748",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "758",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "758",
                    "column": "104",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "763",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "763",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "768",
                    "column": "21",
                    "severity": "error",
                    "message": "'}' at column 21 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "768",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "768",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "783",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "783",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "794",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "794",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "801",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "801",
                    "column": "116",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "803",
                    "column": "75",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "804",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "805",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "805",
                    "column": "153",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "808",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "808",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "810",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "810",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "815",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "821",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "821",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "827",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "827",
                    "column": "111",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "829",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "829",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "835",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "835",
                    "column": "106",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "837",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "837",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "844",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "844",
                    "column": "106",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "848",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "848",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "856",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "856",
                    "column": "107",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "862",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "863",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "865",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "865",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "867",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "867",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "874",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "874",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "888",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "888",
                    "column": "108",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "896",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "896",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "898",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "898",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "901",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "901",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "907",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "907",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "909",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "909",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "916",
                    "column": "21",
                    "severity": "error",
                    "message": "'}' at column 21 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "924",
                    "column": "17",
                    "severity": "error",
                    "message": "'}' at column 17 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "936",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "936",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "940",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "940",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "951",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "951",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1067/IndexingService.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1067/IndexingService.java\nindex d3587fbeba2..e39cda03769 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1067/IndexingService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1067/IndexingService.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.api.index;\n \n import org.apache.commons.lang3.mutable.MutableBoolean;\n@@ -145,32 +146,32 @@ public class IndexingService extends LifecycleAdapter implements IndexUpdateList\n \n     public interface Monitor\n     {\n-        void initialState( IndexDescriptor descriptor, InternalIndexState state );\n+        void initialState(IndexDescriptor descriptor, InternalIndexState state);\n \n-        void populationCompleteOn( IndexDescriptor descriptor );\n+        void populationCompleteOn(IndexDescriptor descriptor);\n \n         void indexPopulationScanStarting();\n \n         void indexPopulationScanComplete();\n \n-        void awaitingPopulationOfRecoveredIndex( IndexDescriptor descriptor );\n+        void awaitingPopulationOfRecoveredIndex(IndexDescriptor descriptor);\n \n-        void indexSamplingTriggered( IndexSamplingMode mode );\n+        void indexSamplingTriggered(IndexSamplingMode mode);\n \n         void populationCancelled();\n \n-        void populationJobCompleted( long peakDirectMemoryUsage );\n+        void populationJobCompleted(long peakDirectMemoryUsage);\n     }\n \n     public static class MonitorAdapter implements Monitor\n     {\n         @Override\n-        public void initialState( IndexDescriptor descriptor, InternalIndexState state )\n+        public void initialState(IndexDescriptor descriptor, InternalIndexState state)\n         {   // Do nothing\n         }\n \n         @Override\n-        public void populationCompleteOn( IndexDescriptor descriptor )\n+        public void populationCompleteOn(IndexDescriptor descriptor)\n         {   // Do nothing\n         }\n \n@@ -185,12 +186,12 @@ public class IndexingService extends LifecycleAdapter implements IndexUpdateList\n         }\n \n         @Override\n-        public void awaitingPopulationOfRecoveredIndex( IndexDescriptor descriptor )\n+        public void awaitingPopulationOfRecoveredIndex(IndexDescriptor descriptor)\n         {   // Do nothing\n         }\n \n         @Override\n-        public void indexSamplingTriggered( IndexSamplingMode mode )\n+        public void indexSamplingTriggered(IndexSamplingMode mode)\n         {   // Do nothing\n         }\n \n@@ -200,7 +201,7 @@ public class IndexingService extends LifecycleAdapter implements IndexUpdateList\n         }\n \n         @Override\n-        public void populationJobCompleted( long peakDirectMemoryUsage )\n+        public void populationJobCompleted(long peakDirectMemoryUsage)\n         {   // Do nothing\n         }\n     }\n@@ -209,24 +210,24 @@ public class IndexingService extends LifecycleAdapter implements IndexUpdateList\n \n     private volatile State state = State.NOT_STARTED;\n \n-    IndexingService( IndexProxyCreator indexProxyCreator,\n-            IndexProviderMap providerMap,\n-            IndexMapReference indexMapRef,\n-            IndexStoreView storeView,\n-            Iterable<IndexDescriptor> indexDescriptors,\n-            IndexSamplingController samplingController,\n-            TokenNameLookup tokenNameLookup,\n-            JobScheduler scheduler,\n-            SchemaState schemaState,\n-            LogProvider internalLogProvider,\n-            LogProvider userLogProvider,\n-            Monitor monitor,\n-            IndexStatisticsStore indexStatisticsStore,\n-            PageCacheTracer pageCacheTracer,\n-            MemoryTracker memoryTracker,\n-            String databaseName,\n-            boolean readOnly,\n-            Config config )\n+    IndexingService(IndexProxyCreator indexProxyCreator,\n+                    IndexProviderMap providerMap,\n+                    IndexMapReference indexMapRef,\n+                    IndexStoreView storeView,\n+                    Iterable<IndexDescriptor> indexDescriptors,\n+                    IndexSamplingController samplingController,\n+                    TokenNameLookup tokenNameLookup,\n+                    JobScheduler scheduler,\n+                    SchemaState schemaState,\n+                    LogProvider internalLogProvider,\n+                    LogProvider userLogProvider,\n+                    Monitor monitor,\n+                    IndexStatisticsStore indexStatisticsStore,\n+                    PageCacheTracer pageCacheTracer,\n+                    MemoryTracker memoryTracker,\n+                    String databaseName,\n+                    boolean readOnly,\n+                    Config config)\n     {\n         this.indexProxyCreator = indexProxyCreator;\n         this.providerMap = providerMap;\n@@ -239,9 +240,9 @@ public class IndexingService extends LifecycleAdapter implements IndexUpdateList\n         this.schemaState = schemaState;\n         this.internalLogProvider = internalLogProvider;\n         this.monitor = monitor;\n-        this.populationJobController = new IndexPopulationJobController( scheduler );\n-        this.internalLog = internalLogProvider.getLog( getClass() );\n-        this.userLog = userLogProvider.getLog( getClass() );\n+        this.populationJobController = new IndexPopulationJobController(scheduler);\n+        this.internalLog = internalLogProvider.getLog(getClass());\n+        this.userLog = userLogProvider.getLog(getClass());\n         this.indexStatisticsStore = indexStatisticsStore;\n         this.pageCacheTracer = pageCacheTracer;\n         this.memoryTracker = memoryTracker;\n@@ -258,46 +259,46 @@ public class IndexingService extends LifecycleAdapter implements IndexUpdateList\n     {\n         validateDefaultProviderExisting();\n \n-        try ( var cursorTracer = pageCacheTracer.createPageCursorTracer( INIT_TAG ) )\n+        try (var cursorTracer = pageCacheTracer.createPageCursorTracer(INIT_TAG))\n         {\n-            indexMapRef.modify( indexMap ->\n+            indexMapRef.modify(indexMap ->\n             {\n-                Map<InternalIndexState,List<IndexLogRecord>> indexStates = new EnumMap<>( InternalIndexState.class );\n-                for ( IndexDescriptor descriptor : indexDescriptors )\n+                Map<InternalIndexState, List<IndexLogRecord>> indexStates = new EnumMap<>(InternalIndexState.class);\n+                for (IndexDescriptor descriptor : indexDescriptors)\n                 {\n                     IndexProxy indexProxy;\n \n                     IndexProviderDescriptor providerDescriptor = descriptor.getIndexProvider();\n-                    IndexProvider provider = providerMap.lookup( providerDescriptor );\n-                    InternalIndexState initialState = provider.getInitialState( descriptor, cursorTracer );\n+                    IndexProvider provider = providerMap.lookup(providerDescriptor);\n+                    InternalIndexState initialState = provider.getInitialState(descriptor, cursorTracer);\n \n-                    indexStates.computeIfAbsent( initialState, internalIndexState -> new ArrayList<>() ).add( new IndexLogRecord( descriptor ) );\n+                    indexStates.computeIfAbsent(initialState, internalIndexState -> new ArrayList<>()).add(new IndexLogRecord(descriptor));\n \n-                    internalLog.debug( indexStateInfo( \"init\", initialState, descriptor ) );\n-                    switch ( initialState )\n+                    internalLog.debug(indexStateInfo(\"init\", initialState, descriptor));\n+                    switch (initialState)\n                     {\n-                    case ONLINE:\n-                        monitor.initialState( descriptor, ONLINE );\n-                        indexProxy = indexProxyCreator.createOnlineIndexProxy( descriptor );\n-                        break;\n-                    case POPULATING:\n-                        // The database was shut down during population, or a crash has occurred, or some other sad thing.\n-                        monitor.initialState( descriptor, POPULATING );\n-                        indexProxy = indexProxyCreator.createRecoveringIndexProxy( descriptor );\n-                        break;\n-                    case FAILED:\n-                        monitor.initialState( descriptor, FAILED );\n-                        IndexPopulationFailure failure = failure( provider.getPopulationFailure( descriptor, cursorTracer ) );\n-                        indexProxy = indexProxyCreator.createFailedIndexProxy( descriptor, failure );\n-                        break;\n-                    default:\n-                        throw new IllegalArgumentException( \"\" + initialState );\n+                        case ONLINE:\n+                            monitor.initialState(descriptor, ONLINE);\n+                            indexProxy = indexProxyCreator.createOnlineIndexProxy(descriptor);\n+                            break;\n+                        case POPULATING:\n+                            // The database was shut down during population, or a crash has occurred, or some other sad thing.\n+                            monitor.initialState(descriptor, POPULATING);\n+                            indexProxy = indexProxyCreator.createRecoveringIndexProxy(descriptor);\n+                            break;\n+                        case FAILED:\n+                            monitor.initialState(descriptor, FAILED);\n+                            IndexPopulationFailure failure = failure(provider.getPopulationFailure(descriptor, cursorTracer));\n+                            indexProxy = indexProxyCreator.createFailedIndexProxy(descriptor, failure);\n+                            break;\n+                        default:\n+                            throw new IllegalArgumentException(\"\" + initialState);\n                     }\n-                    indexMap.putIndexProxy( indexProxy );\n+                    indexMap.putIndexProxy(indexProxy);\n                 }\n-                logIndexStateSummary( \"init\", indexStates );\n+                logIndexStateSummary(\"init\", indexStates);\n                 return indexMap;\n-            } );\n+            });\n         }\n \n         indexStatisticsStore.init();\n@@ -305,11 +306,11 @@ public class IndexingService extends LifecycleAdapter implements IndexUpdateList\n \n     private void validateDefaultProviderExisting()\n     {\n-        if ( providerMap == null || providerMap.getDefaultProvider() == null )\n+        if (providerMap == null || providerMap.getDefaultProvider() == null)\n         {\n-            throw new IllegalStateException( \"You cannot run the database without an index provider, \" +\n-                    \"please make sure that a valid provider (subclass of \" + IndexProvider.class.getName() +\n-                    \") is on your classpath.\" );\n+            throw new IllegalStateException(\"You cannot run the database without an index provider, \" +\n+              \"please make sure that a valid provider (subclass of \" + IndexProvider.class.getName() +\n+              \") is on your classpath.\");\n         }\n     }\n \n@@ -321,51 +322,51 @@ public class IndexingService extends LifecycleAdapter implements IndexUpdateList\n \n         // Recovery will not do refresh (update read views) while applying recovered transactions and instead\n         // do it at one point after recovery... i.e. here\n-        indexMapRef.indexMapSnapshot().forEachIndexProxy( indexProxyOperation( \"refresh\", IndexProxy::refresh ) );\n+        indexMapRef.indexMapSnapshot().forEachIndexProxy(indexProxyOperation(\"refresh\", IndexProxy::refresh));\n \n         final MutableLongObjectMap<IndexDescriptor> rebuildingDescriptors = new LongObjectHashMap<>();\n-        indexMapRef.modify( indexMap ->\n+        indexMapRef.modify(indexMap ->\n         {\n-            Map<InternalIndexState, List<IndexLogRecord>> indexStates = new EnumMap<>( InternalIndexState.class );\n-            Map<IndexProviderDescriptor,List<IndexLogRecord>> indexProviders = new HashMap<>();\n+            Map<InternalIndexState, List<IndexLogRecord>> indexStates = new EnumMap<>(InternalIndexState.class);\n+            Map<IndexProviderDescriptor, List<IndexLogRecord>> indexProviders = new HashMap<>();\n \n             // Find all indexes that are not already online, do not require rebuilding, and create them\n-            indexMap.forEachIndexProxy( ( indexId, proxy ) ->\n+            indexMap.forEachIndexProxy((indexId, proxy) ->\n             {\n                 InternalIndexState state = proxy.getState();\n                 IndexDescriptor descriptor = proxy.getDescriptor();\n                 IndexProviderDescriptor providerDescriptor = descriptor.getIndexProvider();\n-                IndexLogRecord indexLogRecord = new IndexLogRecord( descriptor );\n-                indexStates.computeIfAbsent( state, internalIndexState -> new ArrayList<>() )\n-                        .add( indexLogRecord );\n-                indexProviders.computeIfAbsent( providerDescriptor, indexProviderDescriptor -> new ArrayList<>() )\n-                        .add( indexLogRecord );\n-                internalLog.debug( indexStateInfo( \"start\", state, descriptor ) );\n-                switch ( state )\n+                IndexLogRecord indexLogRecord = new IndexLogRecord(descriptor);\n+                indexStates.computeIfAbsent(state, internalIndexState -> new ArrayList<>())\n+                  .add(indexLogRecord);\n+                indexProviders.computeIfAbsent(providerDescriptor, indexProviderDescriptor -> new ArrayList<>())\n+                  .add(indexLogRecord);\n+                internalLog.debug(indexStateInfo(\"start\", state, descriptor));\n+                switch (state)\n                 {\n-                case ONLINE:\n-                case FAILED:\n-                    proxy.start();\n-                    break;\n-                case POPULATING:\n-                    // Remember for rebuilding right below in this method\n-                    rebuildingDescriptors.put( indexId, descriptor );\n-                    break;\n-                default:\n-                    throw new IllegalStateException( \"Unknown state: \" + state );\n+                    case ONLINE:\n+                    case FAILED:\n+                        proxy.start();\n+                        break;\n+                    case POPULATING:\n+                        // Remember for rebuilding right below in this method\n+                        rebuildingDescriptors.put(indexId, descriptor);\n+                        break;\n+                    default:\n+                        throw new IllegalStateException(\"Unknown state: \" + state);\n                 }\n-            } );\n-            logIndexStateSummary( \"start\", indexStates );\n-            logIndexProviderSummary( indexProviders );\n+            });\n+            logIndexStateSummary(\"start\", indexStates);\n+            logIndexProviderSummary(indexProviders);\n \n-            dontRebuildIndexesInReadOnlyMode( rebuildingDescriptors );\n+            dontRebuildIndexesInReadOnlyMode(rebuildingDescriptors);\n             // Drop placeholder proxies for indexes that need to be rebuilt\n-            dropRecoveringIndexes( indexMap, rebuildingDescriptors.keySet() );\n+            dropRecoveringIndexes(indexMap, rebuildingDescriptors.keySet());\n             // Rebuild indexes by recreating and repopulating them\n-            populateIndexesOfAllTypes( rebuildingDescriptors, indexMap );\n+            populateIndexesOfAllTypes(rebuildingDescriptors, indexMap);\n \n             return indexMap;\n-        } );\n+        });\n \n         indexStatisticsStore.start();\n         samplingController.recoverIndexSamples();\n@@ -375,117 +376,115 @@ public class IndexingService extends LifecycleAdapter implements IndexUpdateList\n         // Indexes backing uniqueness constraints are normally built within the transaction creating the constraint\n         // and so we shouldn't leave such indexes in a populating state after recovery.\n         // This is why we now go and wait for those indexes to be fully populated.\n-        rebuildingDescriptors.forEachKeyValue( ( indexId, index ) ->\n-                {\n-                    if ( !index.isUnique() )\n-                    {\n-                        // It's not a uniqueness constraint, so don't wait for it to be rebuilt\n-                        return;\n-                    }\n+        rebuildingDescriptors.forEachKeyValue((indexId, index) ->\n+        {\n+            if (!index.isUnique())\n+            {\n+                // It's not a uniqueness constraint, so don't wait for it to be rebuilt\n+                return;\n+            }\n \n-                    IndexProxy proxy;\n-                    try\n-                    {\n-                        proxy = getIndexProxy( index );\n-                    }\n-                    catch ( IndexNotFoundKernelException e )\n-                    {\n-                        throw new IllegalStateException( \"What? This index was seen during recovery just now, why isn't it available now?\", e );\n-                    }\n+            IndexProxy proxy;\n+            try\n+            {\n+                proxy = getIndexProxy(index);\n+            } catch (IndexNotFoundKernelException e)\n+            {\n+                throw new IllegalStateException(\"What? This index was seen during recovery just now, why isn't it available now?\", e);\n+            }\n \n-                    if ( proxy.getDescriptor().getOwningConstraintId().isEmpty() )\n-                    {\n-                        // Even though this is an index backing a uniqueness constraint, the uniqueness constraint wasn't created\n-                        // so there's no gain in waiting for this index.\n-                        return;\n-                    }\n+            if (proxy.getDescriptor().getOwningConstraintId().isEmpty())\n+            {\n+                // Even though this is an index backing a uniqueness constraint, the uniqueness constraint wasn't created\n+                // so there's no gain in waiting for this index.\n+                return;\n+            }\n \n-                    monitor.awaitingPopulationOfRecoveredIndex( index );\n-                    awaitOnlineAfterRecovery( proxy );\n-                } );\n+            monitor.awaitingPopulationOfRecoveredIndex(index);\n+            awaitOnlineAfterRecovery(proxy);\n+        });\n \n         state = State.RUNNING;\n     }\n \n-    private void dontRebuildIndexesInReadOnlyMode( MutableLongObjectMap<IndexDescriptor> rebuildingDescriptors )\n+    private void dontRebuildIndexesInReadOnlyMode(MutableLongObjectMap<IndexDescriptor> rebuildingDescriptors)\n     {\n-        if ( readOnly && rebuildingDescriptors.notEmpty() )\n+        if (readOnly && rebuildingDescriptors.notEmpty())\n         {\n             String indexString = rebuildingDescriptors.values().stream()\n-                    .map( String::valueOf )\n-                    .collect( Collectors.joining( \", \", \"{\", \"}\" ) );\n+              .map(String::valueOf)\n+              .collect(Collectors.joining(\", \", \"{\", \"}\"));\n             throw new IllegalStateException(\n-                    \"Some indexes need to be rebuilt. This is not allowed in read only mode. Please start db in writable mode to rebuild indexes. \" +\n-                            \"Indexes needing rebuild: \" + indexString );\n+              \"Some indexes need to be rebuilt. This is not allowed in read only mode. Please start db in writable mode to rebuild indexes. \" +\n+                \"Indexes needing rebuild: \" + indexString);\n         }\n     }\n \n-    private void populateIndexesOfAllTypes( MutableLongObjectMap<IndexDescriptor> rebuildingDescriptors, IndexMap indexMap )\n+    private void populateIndexesOfAllTypes(MutableLongObjectMap<IndexDescriptor> rebuildingDescriptors, IndexMap indexMap)\n     {\n-        Map<EntityType,MutableLongObjectMap<IndexDescriptor>> rebuildingDescriptorsByType = new EnumMap<>( EntityType.class );\n-        for ( IndexDescriptor descriptor : rebuildingDescriptors )\n+        Map<EntityType, MutableLongObjectMap<IndexDescriptor>> rebuildingDescriptorsByType = new EnumMap<>(EntityType.class);\n+        for (IndexDescriptor descriptor : rebuildingDescriptors)\n         {\n-            rebuildingDescriptorsByType.computeIfAbsent( descriptor.schema().entityType(), type -> new LongObjectHashMap<>() )\n-                    .put( descriptor.getId(), descriptor );\n+            rebuildingDescriptorsByType.computeIfAbsent(descriptor.schema().entityType(), type -> new LongObjectHashMap<>())\n+              .put(descriptor.getId(), descriptor);\n         }\n \n-        for ( Map.Entry<EntityType,MutableLongObjectMap<IndexDescriptor>> descriptorToPopulate : rebuildingDescriptorsByType.entrySet() )\n+        for (Map.Entry<EntityType, MutableLongObjectMap<IndexDescriptor>> descriptorToPopulate : rebuildingDescriptorsByType.entrySet())\n         {\n-            IndexPopulationJob populationJob = newIndexPopulationJob( descriptorToPopulate.getKey(), false, SYSTEM );\n-            populate( descriptorToPopulate.getValue(), indexMap, populationJob );\n+            IndexPopulationJob populationJob = newIndexPopulationJob(descriptorToPopulate.getKey(), false, SYSTEM);\n+            populate(descriptorToPopulate.getValue(), indexMap, populationJob);\n         }\n     }\n \n-    private void populate( MutableLongObjectMap<IndexDescriptor> rebuildingDescriptors, IndexMap indexMap, IndexPopulationJob populationJob )\n+    private void populate(MutableLongObjectMap<IndexDescriptor> rebuildingDescriptors, IndexMap indexMap, IndexPopulationJob populationJob)\n     {\n-        rebuildingDescriptors.forEachKeyValue( ( indexId, descriptor ) ->\n+        rebuildingDescriptors.forEachKeyValue((indexId, descriptor) ->\n         {\n             boolean flipToTentative = false; // Never pass through a tentative online state during recovery.\n-            IndexProxy proxy = indexProxyCreator.createPopulatingIndexProxy( descriptor, flipToTentative, monitor, populationJob );\n+            IndexProxy proxy = indexProxyCreator.createPopulatingIndexProxy(descriptor, flipToTentative, monitor, populationJob);\n             proxy.start();\n-            indexMap.putIndexProxy( proxy );\n-        } );\n-        startIndexPopulation( populationJob );\n+            indexMap.putIndexProxy(proxy);\n+        });\n+        startIndexPopulation(populationJob);\n     }\n \n     /**\n      * Polls the {@link IndexProxy#getState() state of the index} and waits for it to be either {@link InternalIndexState#ONLINE},\n      * in which case the wait is over, or {@link InternalIndexState#FAILED}, in which an exception is logged.\n-     *\n+     * <p>\n      * This method is only called during startup, and might be called as part of recovery. If we threw an exception here, it could\n      * render the database unrecoverable. That's why we only log a message about failed indexes.\n      */\n-    private void awaitOnlineAfterRecovery( IndexProxy proxy )\n+    private void awaitOnlineAfterRecovery(IndexProxy proxy)\n     {\n-        while ( true )\n+        while (true)\n         {\n-            switch ( proxy.getState() )\n+            switch (proxy.getState())\n             {\n-            case ONLINE:\n-                return;\n-            case FAILED:\n-                String message =\n-                        String.format( \"Index %s entered %s state while recovery waited for it to be fully populated.\", proxy.getDescriptor(), FAILED );\n-                IndexPopulationFailure populationFailure = proxy.getPopulationFailure();\n-                String causeOfFailure = populationFailure.asString();\n-                // Log as INFO because at this point we don't know if the constraint index was ever bound to a constraint or not.\n-                // If it was really bound to a constraint, then we actually ought to log as WARN or ERROR, I suppose.\n-                // But by far the most likely scenario is that the constraint itself was never created.\n-                internalLog.info( IndexPopulationFailure.appendCauseOfFailure( message, causeOfFailure ) );\n-                return;\n-            case POPULATING:\n-                // Sleep a short while and look at state again the next loop iteration\n-                try\n-                {\n-                    Thread.sleep( 10 );\n-                }\n-                catch ( InterruptedException e )\n-                {\n-                    throw new IllegalStateException( \"Waiting for index to become ONLINE was interrupted\", e );\n-                }\n-                break;\n-            default:\n-                throw new IllegalStateException( proxy.getState().name() );\n+                case ONLINE:\n+                    return;\n+                case FAILED:\n+                    String message =\n+                      String.format(\"Index %s entered %s state while recovery waited for it to be fully populated.\", proxy.getDescriptor(), FAILED);\n+                    IndexPopulationFailure populationFailure = proxy.getPopulationFailure();\n+                    String causeOfFailure = populationFailure.asString();\n+                    // Log as INFO because at this point we don't know if the constraint index was ever bound to a constraint or not.\n+                    // If it was really bound to a constraint, then we actually ought to log as WARN or ERROR, I suppose.\n+                    // But by far the most likely scenario is that the constraint itself was never created.\n+                    internalLog.info(IndexPopulationFailure.appendCauseOfFailure(message, causeOfFailure));\n+                    return;\n+                case POPULATING:\n+                    // Sleep a short while and look at state again the next loop iteration\n+                    try\n+                    {\n+                        Thread.sleep(10);\n+                    } catch (InterruptedException e)\n+                    {\n+                        throw new IllegalStateException(\"Waiting for index to become ONLINE was interrupted\", e);\n+                    }\n+                    break;\n+                default:\n+                    throw new IllegalStateException(proxy.getState().name());\n             }\n         }\n     }\n@@ -511,16 +510,16 @@ public class IndexingService extends LifecycleAdapter implements IndexUpdateList\n     }\n \n     @Override\n-    public void validateBeforeCommit( IndexDescriptor index, Value[] tuple, long entityId )\n+    public void validateBeforeCommit(IndexDescriptor index, Value[] tuple, long entityId)\n     {\n-        indexMapRef.validateBeforeCommit( index, tuple, entityId );\n+        indexMapRef.validateBeforeCommit(index, tuple, entityId);\n     }\n \n     @Override\n-    public void validateIndexPrototype( IndexPrototype prototype )\n+    public void validateIndexPrototype(IndexPrototype prototype)\n     {\n-        IndexProvider provider = providerMap.lookup( prototype.getIndexProvider() );\n-        provider.validatePrototype( prototype );\n+        IndexProvider provider = providerMap.lookup(prototype.getIndexProvider());\n+        provider.validatePrototype(prototype);\n     }\n \n     @Override\n@@ -536,15 +535,15 @@ public class IndexingService extends LifecycleAdapter implements IndexUpdateList\n     }\n \n     @Override\n-    public IndexDescriptor completeConfiguration( IndexDescriptor index )\n+    public IndexDescriptor completeConfiguration(IndexDescriptor index)\n     {\n-        return providerMap.completeConfiguration( index );\n+        return providerMap.completeConfiguration(index);\n     }\n \n     @Override\n-    public IndexProviderDescriptor indexProviderByName( String providerName )\n+    public IndexProviderDescriptor indexProviderByName(String providerName)\n     {\n-        return providerMap.lookup( providerName ).getProviderDescriptor();\n+        return providerMap.lookup(providerName).getProviderDescriptor();\n     }\n \n     /**\n@@ -552,209 +551,201 @@ public class IndexingService extends LifecycleAdapter implements IndexUpdateList\n      *\n      * @param updates {@link IndexEntryUpdate updates} to apply.\n      * @throws UncheckedIOException potentially thrown from index updating.\n-     * @throws KernelException potentially thrown from index updating.\n+     * @throws KernelException      potentially thrown from index updating.\n      */\n     @Override\n-    public void applyUpdates( Iterable<IndexEntryUpdate<IndexDescriptor>> updates, PageCursorTracer cursorTracer ) throws KernelException\n+    public void applyUpdates(Iterable<IndexEntryUpdate<IndexDescriptor>> updates, PageCursorTracer cursorTracer) throws KernelException\n     {\n-        if ( state == State.NOT_STARTED )\n+        if (state == State.NOT_STARTED)\n         {\n             // We're in recovery, which means we'll be telling indexes to apply with additional care for making\n             // idempotent changes.\n-            apply( updates, IndexUpdateMode.RECOVERY, cursorTracer );\n-        }\n-        else if ( state == State.RUNNING || state == State.STARTING )\n+            apply(updates, IndexUpdateMode.RECOVERY, cursorTracer);\n+        } else if (state == State.RUNNING || state == State.STARTING)\n         {\n-            apply( updates, IndexUpdateMode.ONLINE, cursorTracer );\n-        }\n-        else\n+            apply(updates, IndexUpdateMode.ONLINE, cursorTracer);\n+        } else\n         {\n             throw new IllegalStateException(\n-                    \"Can't apply index updates \" + asList( updates ) + \" while indexing service is \" + state );\n+              \"Can't apply index updates \" + asList(updates) + \" while indexing service is \" + state);\n         }\n     }\n \n-    private void apply( Iterable<IndexEntryUpdate<IndexDescriptor>> updates, IndexUpdateMode updateMode, PageCursorTracer cursorTracer ) throws KernelException\n+    private void apply(Iterable<IndexEntryUpdate<IndexDescriptor>> updates, IndexUpdateMode updateMode, PageCursorTracer cursorTracer) throws KernelException\n     {\n-        try ( IndexUpdaterMap updaterMap = indexMapRef.createIndexUpdaterMap( updateMode ) )\n+        try (IndexUpdaterMap updaterMap = indexMapRef.createIndexUpdaterMap(updateMode))\n         {\n-            for ( IndexEntryUpdate<IndexDescriptor> indexUpdate : updates )\n+            for (IndexEntryUpdate<IndexDescriptor> indexUpdate : updates)\n             {\n-                processUpdate( updaterMap, indexUpdate, cursorTracer );\n+                processUpdate(updaterMap, indexUpdate, cursorTracer);\n             }\n         }\n     }\n \n     /**\n      * Creates one or more indexes. They will all be populated by one and the same store scan.\n-     *\n+     * <p>\n      * This code is called from the transaction infrastructure during transaction commits, which means that\n      * it is *vital* that it is stable, and handles errors very well. Failing here means that the entire db\n      * will shut down.\n-     *\n+     * <p>\n      * {@link IndexPopulator#verifyDeferredConstraints(NodePropertyAccessor)} will not be called as part of populating these indexes,\n      * instead that will be done by code that activates the indexes later.\n      *\n      * @param subject subject that triggered the index creation.\n-     * This is used for monitoring purposes, so work related to index creation and population can be linked to its originator.\n+     *                This is used for monitoring purposes, so work related to index creation and population can be linked to its originator.\n      */\n     @Override\n-    public void createIndexes( Subject subject, IndexDescriptor... rules )\n+    public void createIndexes(Subject subject, IndexDescriptor... rules)\n     {\n-        createIndexes( false, subject, rules );\n+        createIndexes(false, subject, rules);\n     }\n \n     /**\n      * Creates one or more indexes. They will all be populated by one and the same store scan.\n-     *\n+     * <p>\n      * This code is called from the transaction infrastructure during transaction commits, which means that\n      * it is *vital* that it is stable, and handles errors very well. Failing here means that the entire db\n      * will shut down.\n      *\n      * @param verifyBeforeFlipping whether or not to call {@link IndexPopulator#verifyDeferredConstraints(NodePropertyAccessor)}\n-     * as part of population, before flipping to a successful state.\n+     *                             as part of population, before flipping to a successful state.\n      */\n-    public void createIndexes( boolean verifyBeforeFlipping, Subject subject, IndexDescriptor... rules )\n+    public void createIndexes(boolean verifyBeforeFlipping, Subject subject, IndexDescriptor... rules)\n     {\n-        IndexPopulationStarter populationStarter = new IndexPopulationStarter( verifyBeforeFlipping, subject, rules );\n-        indexMapRef.modify( populationStarter );\n+        IndexPopulationStarter populationStarter = new IndexPopulationStarter(verifyBeforeFlipping, subject, rules);\n+        indexMapRef.modify(populationStarter);\n         populationStarter.startPopulation();\n     }\n \n-    private void processUpdate( IndexUpdaterMap updaterMap, IndexEntryUpdate<IndexDescriptor> indexUpdate,\n-            PageCursorTracer cursorTracer ) throws IndexEntryConflictException\n+    private void processUpdate(IndexUpdaterMap updaterMap, IndexEntryUpdate<IndexDescriptor> indexUpdate,\n+                               PageCursorTracer cursorTracer) throws IndexEntryConflictException\n     {\n-        IndexUpdater updater = updaterMap.getUpdater( indexUpdate.indexKey(), cursorTracer );\n-        if ( updater != null )\n+        IndexUpdater updater = updaterMap.getUpdater(indexUpdate.indexKey(), cursorTracer);\n+        if (updater != null)\n         {\n-            updater.process( indexUpdate );\n+            updater.process(indexUpdate);\n         }\n     }\n \n     @Override\n-    public void dropIndex( IndexDescriptor rule )\n+    public void dropIndex(IndexDescriptor rule)\n     {\n-        Preconditions.checkState( state == State.RUNNING || state == State.NOT_STARTED, \"Dropping index in unexpected state %s\", state.name() );\n-        indexMapRef.modify( indexMap ->\n+        Preconditions.checkState(state == State.RUNNING || state == State.NOT_STARTED, \"Dropping index in unexpected state %s\", state.name());\n+        indexMapRef.modify(indexMap ->\n         {\n             long indexId = rule.getId();\n-            IndexProxy index = indexMap.removeIndexProxy( indexId );\n+            IndexProxy index = indexMap.removeIndexProxy(indexId);\n \n-            if ( state == State.RUNNING )\n+            if (state == State.RUNNING)\n             {\n-                Preconditions.checkState( index != null, \"Index %s doesn't exists\", rule );\n+                Preconditions.checkState(index != null, \"Index %s doesn't exists\", rule);\n                 index.drop();\n-            }\n-            else if ( index != null )\n+            } else if (index != null)\n             {\n                 try\n                 {\n                     index.drop();\n-                }\n-                catch ( Exception e )\n+                } catch (Exception e)\n                 {\n                     // This is OK to get during recovery because the underlying index can be in any unknown state\n                     // while we're recovering. Let's just move on to closing it instead.\n-                    try ( var cursorTracer = pageCacheTracer.createPageCursorTracer( INDEX_SERVICE_INDEX_CLOSING_TAG ) )\n+                    try (var cursorTracer = pageCacheTracer.createPageCursorTracer(INDEX_SERVICE_INDEX_CLOSING_TAG))\n                     {\n-                        index.close( cursorTracer );\n-                    }\n-                    catch ( IOException closeException )\n+                        index.close(cursorTracer);\n+                    } catch (IOException closeException)\n                     {\n                         // This is OK for the same reason as above\n                     }\n                 }\n             }\n             return indexMap;\n-        } );\n+        });\n     }\n \n-    public void triggerIndexSampling( IndexSamplingMode mode )\n+    public void triggerIndexSampling(IndexSamplingMode mode)\n     {\n-        internalLog.info( \"Manual trigger for sampling all indexes [\" + mode + \"]\" );\n-        monitor.indexSamplingTriggered( mode );\n-        samplingController.sampleIndexes( mode );\n+        internalLog.info(\"Manual trigger for sampling all indexes [\" + mode + \"]\");\n+        monitor.indexSamplingTriggered(mode);\n+        samplingController.sampleIndexes(mode);\n     }\n \n-    public void triggerIndexSampling( IndexDescriptor index, IndexSamplingMode mode )\n+    public void triggerIndexSampling(IndexDescriptor index, IndexSamplingMode mode)\n     {\n-        String description = index.userDescription( tokenNameLookup );\n-        internalLog.info( \"Manual trigger for sampling index \" + description + \" [\" + mode + \"]\" );\n-        samplingController.sampleIndex( index.getId(), mode );\n+        String description = index.userDescription(tokenNameLookup);\n+        internalLog.info(\"Manual trigger for sampling index \" + description + \" [\" + mode + \"]\");\n+        samplingController.sampleIndex(index.getId(), mode);\n     }\n \n-    private static void dropRecoveringIndexes( IndexMap indexMap, LongIterable indexesToRebuild )\n+    private static void dropRecoveringIndexes(IndexMap indexMap, LongIterable indexesToRebuild)\n     {\n-        indexesToRebuild.forEach( idx ->\n+        indexesToRebuild.forEach(idx ->\n         {\n-            IndexProxy indexProxy = indexMap.removeIndexProxy( idx );\n+            IndexProxy indexProxy = indexMap.removeIndexProxy(idx);\n             assert indexProxy != null;\n             indexProxy.drop();\n-        } );\n+        });\n     }\n \n     @Override\n-    public void activateIndex( IndexDescriptor descriptor ) throws\n-            IndexNotFoundKernelException, IndexActivationFailedKernelException, IndexPopulationFailedKernelException\n+    public void activateIndex(IndexDescriptor descriptor) throws\n+      IndexNotFoundKernelException, IndexActivationFailedKernelException, IndexPopulationFailedKernelException\n     {\n         try\n         {\n-            if ( state == State.RUNNING ) // don't do this during recovery.\n+            if (state == State.RUNNING) // don't do this during recovery.\n             {\n-                IndexProxy index = getIndexProxy( descriptor );\n-                index.awaitStoreScanCompleted( 0, TimeUnit.MILLISECONDS );\n+                IndexProxy index = getIndexProxy(descriptor);\n+                index.awaitStoreScanCompleted(0, TimeUnit.MILLISECONDS);\n                 index.activate();\n-                internalLog.info( \"Constraint %s is %s.\", index.getDescriptor(), ONLINE.name() );\n+                internalLog.info(\"Constraint %s is %s.\", index.getDescriptor(), ONLINE.name());\n             }\n-        }\n-        catch ( InterruptedException e )\n+        } catch (InterruptedException e)\n         {\n             Thread.interrupted();\n-            throw new IndexActivationFailedKernelException( e, \"Unable to activate index, thread was interrupted.\" );\n+            throw new IndexActivationFailedKernelException(e, \"Unable to activate index, thread was interrupted.\");\n         }\n     }\n \n-    public IndexProxy getIndexProxy( IndexDescriptor index ) throws IndexNotFoundKernelException\n+    public IndexProxy getIndexProxy(IndexDescriptor index) throws IndexNotFoundKernelException\n     {\n-        return indexMapRef.getIndexProxy( index.getId() );\n+        return indexMapRef.getIndexProxy(index.getId());\n     }\n \n     @Deprecated\n-    public IndexProxy getIndexProxy( long indexId ) throws IndexNotFoundKernelException\n+    public IndexProxy getIndexProxy(long indexId) throws IndexNotFoundKernelException\n     {\n-        return indexMapRef.getIndexProxy( indexId );\n+        return indexMapRef.getIndexProxy(indexId);\n     }\n \n     @Override\n-    public void validateIndex( long indexId )\n-            throws IndexNotFoundKernelException, IndexPopulationFailedKernelException,\n-            UniquePropertyValueValidationException\n+    public void validateIndex(long indexId)\n+      throws IndexNotFoundKernelException, IndexPopulationFailedKernelException,\n+      UniquePropertyValueValidationException\n     {\n-        indexMapRef.getIndexProxy( indexId ).validate();\n+        indexMapRef.getIndexProxy(indexId).validate();\n     }\n \n-    public void forceAll( IOLimiter limiter, PageCursorTracer cursorTracer ) throws IOException\n+    public void forceAll(IOLimiter limiter, PageCursorTracer cursorTracer) throws IOException\n     {\n-        indexStatisticsStore.checkpoint( limiter, cursorTracer );\n-        indexMapRef.indexMapSnapshot().forEachIndexProxy( indexProxyOperation( \"force\", proxy -> proxy.force( limiter, cursorTracer ) ) );\n+        indexStatisticsStore.checkpoint(limiter, cursorTracer);\n+        indexMapRef.indexMapSnapshot().forEachIndexProxy(indexProxyOperation(\"force\", proxy -> proxy.force(limiter, cursorTracer)));\n     }\n \n-    private LongObjectProcedure<IndexProxy> indexProxyOperation( String name, ThrowingConsumer<IndexProxy, Exception> operation )\n+    private LongObjectProcedure<IndexProxy> indexProxyOperation(String name, ThrowingConsumer<IndexProxy, Exception> operation)\n     {\n-        return ( id, indexProxy ) ->\n+        return (id, indexProxy) ->\n         {\n             try\n             {\n-                operation.accept( indexProxy );\n-            }\n-            catch ( Exception e )\n+                operation.accept(indexProxy);\n+            } catch (Exception e)\n             {\n                 try\n                 {\n-                    IndexProxy proxy = indexMapRef.getIndexProxy( id );\n-                    throw new UnderlyingStorageException( \"Unable to \" + name + \" \" + proxy, e );\n-                }\n-                catch ( IndexNotFoundKernelException infe )\n+                    IndexProxy proxy = indexMapRef.getIndexProxy(id);\n+                    throw new UnderlyingStorageException(\"Unable to \" + name + \" \" + proxy, e);\n+                } catch (IndexNotFoundKernelException infe)\n                 {\n                     // index was dropped while trying to operate on it, we can continue to other indexes\n                 }\n@@ -764,25 +755,24 @@ public class IndexingService extends LifecycleAdapter implements IndexUpdateList\n \n     private void closeAllIndexes()\n     {\n-        try ( var cursorTracer = pageCacheTracer.createPageCursorTracer( INDEX_SERVICE_INDEX_CLOSING_TAG ) )\n+        try (var cursorTracer = pageCacheTracer.createPageCursorTracer(INDEX_SERVICE_INDEX_CLOSING_TAG))\n         {\n-            indexMapRef.modify( indexMap ->\n+            indexMapRef.modify(indexMap ->\n             {\n                 Iterable<IndexProxy> indexesToStop = indexMap.getAllIndexProxies();\n-                for ( IndexProxy index : indexesToStop )\n+                for (IndexProxy index : indexesToStop)\n                 {\n                     try\n                     {\n-                        index.close( cursorTracer );\n-                    }\n-                    catch ( Exception e )\n+                        index.close(cursorTracer);\n+                    } catch (Exception e)\n                     {\n-                        internalLog.error( \"Unable to close index\", e );\n+                        internalLog.error(\"Unable to close index\", e);\n                     }\n                 }\n                 // Effectively clearing it\n                 return new IndexMap();\n-            } );\n+            });\n         }\n     }\n \n@@ -790,9 +780,9 @@ public class IndexingService extends LifecycleAdapter implements IndexUpdateList\n     {\n         Iterable<IndexProxy> indexProxies = indexMapRef.getAllIndexProxies();\n         MutableLongSet indexIds = new LongHashSet();\n-        for ( IndexProxy indexProxy : indexProxies )\n+        for (IndexProxy indexProxy : indexProxies)\n         {\n-            indexIds.add( indexProxy.getDescriptor().getId() );\n+            indexIds.add(indexProxy.getDescriptor().getId());\n         }\n         return indexIds;\n     }\n@@ -800,91 +790,90 @@ public class IndexingService extends LifecycleAdapter implements IndexUpdateList\n     public ResourceIterator<Path> snapshotIndexFiles() throws IOException\n     {\n         Collection<ResourceIterator<Path>> snapshots = new ArrayList<>();\n-        snapshots.add( asResourceIterator( iterator( indexStatisticsStore.storeFile() ) ) );\n-        for ( IndexProxy indexProxy : indexMapRef.getAllIndexProxies() )\n+        snapshots.add(asResourceIterator(iterator(indexStatisticsStore.storeFile())));\n+        for (IndexProxy indexProxy : indexMapRef.getAllIndexProxies())\n         {\n-            snapshots.add( indexProxy.snapshotFiles() );\n+            snapshots.add(indexProxy.snapshotFiles());\n         }\n-        return Iterators.concatResourceIterators( snapshots.iterator() );\n+        return Iterators.concatResourceIterators(snapshots.iterator());\n     }\n \n-    private IndexPopulationJob newIndexPopulationJob( EntityType type, boolean verifyBeforeFlipping, Subject subject )\n+    private IndexPopulationJob newIndexPopulationJob(EntityType type, boolean verifyBeforeFlipping, Subject subject)\n     {\n-        MultipleIndexPopulator multiPopulator = new MultipleIndexPopulator( storeView, internalLogProvider, type, schemaState, indexStatisticsStore,\n-                jobScheduler, tokenNameLookup, pageCacheTracer, memoryTracker, databaseName, subject, config );\n-        return new IndexPopulationJob( multiPopulator, monitor, verifyBeforeFlipping, pageCacheTracer, memoryTracker, databaseName, subject, NODE, config );\n+        MultipleIndexPopulator multiPopulator = new MultipleIndexPopulator(storeView, internalLogProvider, type, schemaState, indexStatisticsStore,\n+          jobScheduler, tokenNameLookup, pageCacheTracer, memoryTracker, databaseName, subject, config);\n+        return new IndexPopulationJob(multiPopulator, monitor, verifyBeforeFlipping, pageCacheTracer, memoryTracker, databaseName, subject, NODE, config);\n     }\n \n-    private void startIndexPopulation( IndexPopulationJob job )\n+    private void startIndexPopulation(IndexPopulationJob job)\n     {\n-        if ( storeView.isEmpty() )\n+        if (storeView.isEmpty())\n         {\n             // Creating indexes and constraints on an empty database, before ingesting data doesn't need to do unnecessary scheduling juggling,\n             // instead just run it on the caller thread.\n             job.run();\n-        }\n-        else\n+        } else\n         {\n-            populationJobController.startIndexPopulation( job );\n+            populationJobController.startIndexPopulation(job);\n         }\n     }\n \n-    private String indexStateInfo( String tag, InternalIndexState state, IndexDescriptor descriptor )\n+    private String indexStateInfo(String tag, InternalIndexState state, IndexDescriptor descriptor)\n     {\n-        return format( \"IndexingService.%s: index %d on %s is %s\", tag, descriptor.getId(),\n-                descriptor.schema().userDescription( tokenNameLookup ), state.name() );\n+        return format(\"IndexingService.%s: index %d on %s is %s\", tag, descriptor.getId(),\n+          descriptor.schema().userDescription(tokenNameLookup), state.name());\n     }\n \n-    private void logIndexStateSummary( String method, Map<InternalIndexState,List<IndexLogRecord>> indexStates )\n+    private void logIndexStateSummary(String method, Map<InternalIndexState, List<IndexLogRecord>> indexStates)\n     {\n-        if ( indexStates.isEmpty() )\n+        if (indexStates.isEmpty())\n         {\n             return;\n         }\n         int mostPopularStateCount = Integer.MIN_VALUE;\n         InternalIndexState mostPopularState = null;\n-        for ( Map.Entry<InternalIndexState,List<IndexLogRecord>> indexStateEntry : indexStates.entrySet() )\n+        for (Map.Entry<InternalIndexState, List<IndexLogRecord>> indexStateEntry : indexStates.entrySet())\n         {\n-            if ( indexStateEntry.getValue().size() > mostPopularStateCount )\n+            if (indexStateEntry.getValue().size() > mostPopularStateCount)\n             {\n                 mostPopularState = indexStateEntry.getKey();\n                 mostPopularStateCount = indexStateEntry.getValue().size();\n             }\n         }\n-        indexStates.remove( mostPopularState );\n-        for ( Map.Entry<InternalIndexState,List<IndexLogRecord>> indexStateEntry : indexStates.entrySet() )\n+        indexStates.remove(mostPopularState);\n+        for (Map.Entry<InternalIndexState, List<IndexLogRecord>> indexStateEntry : indexStates.entrySet())\n         {\n             InternalIndexState state = indexStateEntry.getKey();\n             List<IndexLogRecord> logRecords = indexStateEntry.getValue();\n-            for ( IndexLogRecord logRecord : logRecords )\n+            for (IndexLogRecord logRecord : logRecords)\n             {\n-                internalLog.info( indexStateInfo( method, state, logRecord.getDescriptor() ) );\n+                internalLog.info(indexStateInfo(method, state, logRecord.getDescriptor()));\n             }\n         }\n-        internalLog.info( format( \"IndexingService.%s: indexes not specifically mentioned above are %s\", method, mostPopularState ) );\n+        internalLog.info(format(\"IndexingService.%s: indexes not specifically mentioned above are %s\", method, mostPopularState));\n     }\n \n-    private void logIndexProviderSummary( Map<IndexProviderDescriptor,List<IndexLogRecord>> indexProviders )\n+    private void logIndexProviderSummary(Map<IndexProviderDescriptor, List<IndexLogRecord>> indexProviders)\n     {\n-        Set<String> deprecatedIndexProviders = Arrays.stream( GraphDatabaseSettings.SchemaIndex.values() )\n-                .filter( GraphDatabaseSettings.SchemaIndex::deprecated )\n-                .map( GraphDatabaseSettings.SchemaIndex::providerName )\n-                .collect( Collectors.toSet() );\n-        StringJoiner joiner = new StringJoiner( \", \", \"Deprecated index providers in use: \",\n-                \". Use procedure 'db.indexes()' to see what indexes use which index provider.\" );\n+        Set<String> deprecatedIndexProviders = Arrays.stream(GraphDatabaseSettings.SchemaIndex.values())\n+          .filter(GraphDatabaseSettings.SchemaIndex::deprecated)\n+          .map(GraphDatabaseSettings.SchemaIndex::providerName)\n+          .collect(Collectors.toSet());\n+        StringJoiner joiner = new StringJoiner(\", \", \"Deprecated index providers in use: \",\n+          \". Use procedure 'db.indexes()' to see what indexes use which index provider.\");\n         MutableBoolean anyDeprecated = new MutableBoolean();\n-        indexProviders.forEach( ( indexProviderDescriptor, indexLogRecords ) ->\n+        indexProviders.forEach((indexProviderDescriptor, indexLogRecords) ->\n         {\n-            if ( deprecatedIndexProviders.contains( indexProviderDescriptor.name() ) )\n+            if (deprecatedIndexProviders.contains(indexProviderDescriptor.name()))\n             {\n                 anyDeprecated.setTrue();\n                 int numberOfIndexes = indexLogRecords.size();\n-                joiner.add( indexProviderDescriptor.name() + \" (\" + numberOfIndexes + (numberOfIndexes == 1 ? \" index\" : \" indexes\") + \")\" );\n+                joiner.add(indexProviderDescriptor.name() + \" (\" + numberOfIndexes + (numberOfIndexes == 1 ? \" index\" : \" indexes\") + \")\");\n             }\n-        } );\n-        if ( anyDeprecated.getValue() )\n+        });\n+        if (anyDeprecated.getValue())\n         {\n-            userLog.info( joiner.toString() );\n+            userLog.info(joiner.toString());\n         }\n     }\n \n@@ -896,7 +885,7 @@ public class IndexingService extends LifecycleAdapter implements IndexUpdateList\n         private IndexPopulationJob nodePopulationJob;\n         private IndexPopulationJob relationshipPopulationJob;\n \n-        IndexPopulationStarter( boolean verifyBeforeFlipping, Subject subject, IndexDescriptor[] descriptors )\n+        IndexPopulationStarter(boolean verifyBeforeFlipping, Subject subject, IndexDescriptor[] descriptors)\n         {\n             this.verifyBeforeFlipping = verifyBeforeFlipping;\n             this.subject = subject;\n@@ -904,55 +893,53 @@ public class IndexingService extends LifecycleAdapter implements IndexUpdateList\n         }\n \n         @Override\n-        public IndexMap apply( IndexMap indexMap )\n+        public IndexMap apply(IndexMap indexMap)\n         {\n-            for ( IndexDescriptor descriptor : descriptors )\n+            for (IndexDescriptor descriptor : descriptors)\n             {\n-                IndexProxy index = indexMap.getIndexProxy( descriptor );\n-                if ( index != null && state == State.NOT_STARTED )\n+                IndexProxy index = indexMap.getIndexProxy(descriptor);\n+                if (index != null && state == State.NOT_STARTED)\n                 {\n                     // This index already has a proxy. No need to build another.\n                     continue;\n                 }\n                 boolean flipToTentative = descriptor.isUnique();\n-                if ( state == State.RUNNING )\n+                if (state == State.RUNNING)\n                 {\n-                    if ( descriptor.schema().entityType() == NODE )\n+                    if (descriptor.schema().entityType() == NODE)\n                     {\n                         nodePopulationJob =\n-                                nodePopulationJob == null ? newIndexPopulationJob( NODE, verifyBeforeFlipping, subject ) : nodePopulationJob;\n-                        index = indexProxyCreator.createPopulatingIndexProxy( descriptor, flipToTentative, monitor,\n-                                nodePopulationJob );\n+                          nodePopulationJob == null ? newIndexPopulationJob(NODE, verifyBeforeFlipping, subject) : nodePopulationJob;\n+                        index = indexProxyCreator.createPopulatingIndexProxy(descriptor, flipToTentative, monitor,\n+                          nodePopulationJob);\n                         index.start();\n-                    }\n-                    else\n+                    } else\n                     {\n-                        relationshipPopulationJob = relationshipPopulationJob == null ? newIndexPopulationJob( RELATIONSHIP, verifyBeforeFlipping, subject )\n-                                                                                      : relationshipPopulationJob;\n-                        index = indexProxyCreator.createPopulatingIndexProxy( descriptor, flipToTentative, monitor,\n-                                relationshipPopulationJob );\n+                        relationshipPopulationJob = relationshipPopulationJob == null ? newIndexPopulationJob(RELATIONSHIP, verifyBeforeFlipping, subject)\n+                          : relationshipPopulationJob;\n+                        index = indexProxyCreator.createPopulatingIndexProxy(descriptor, flipToTentative, monitor,\n+                          relationshipPopulationJob);\n                         index.start();\n                     }\n-                }\n-                else\n+                } else\n                 {\n-                    index = indexProxyCreator.createRecoveringIndexProxy( descriptor );\n+                    index = indexProxyCreator.createRecoveringIndexProxy(descriptor);\n                 }\n \n-                indexMap.putIndexProxy( index );\n+                indexMap.putIndexProxy(index);\n             }\n             return indexMap;\n         }\n \n         void startPopulation()\n         {\n-            if ( nodePopulationJob != null )\n+            if (nodePopulationJob != null)\n             {\n-                startIndexPopulation( nodePopulationJob );\n+                startIndexPopulation(nodePopulationJob);\n             }\n-            if ( relationshipPopulationJob != null )\n+            if (relationshipPopulationJob != null)\n             {\n-                startIndexPopulation( relationshipPopulationJob );\n+                startIndexPopulation(relationshipPopulationJob);\n             }\n         }\n     }\n@@ -961,7 +948,7 @@ public class IndexingService extends LifecycleAdapter implements IndexUpdateList\n     {\n         private final IndexDescriptor descriptor;\n \n-        IndexLogRecord( IndexDescriptor descriptor )\n+        IndexLogRecord(IndexDescriptor descriptor)\n         {\n             this.descriptor = descriptor;\n         }\n",
            "diff_size": 334
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
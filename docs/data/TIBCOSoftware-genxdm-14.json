{
    "project_name": "TIBCOSoftware-genxdm",
    "error_id": "14",
    "information": {
        "errors": [
            {
                "line": "45",
                "column": "1",
                "severity": "warning",
                "message": "File contains tab characters (this is the first instance).",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
            }
        ]
    },
    "source_code": "{\n\n\tpublic ConvertibleExpr makeCallExpr(final ConvertibleExpr[] args, final ExprContextStatic statEnv) throws ExprParseException\n\t{\n\t\tfinal StringExpr[] se = (StringExpr[])Array.newInstance(StringExpr.class, args.length);\n\t\tfor (int i = 0; i < se.length; i++)",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "46",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/14/ConcatFunction.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler/14/ConcatFunction.java\nindex e4562be4b05..9ec73944df3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/14/ConcatFunction.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler/14/ConcatFunction.java\n@@ -42,7 +42,7 @@ public final class ConcatFunction\n     implements Function\r\n {\r\n \r\n-\tpublic ConvertibleExpr makeCallExpr(final ConvertibleExpr[] args, final ExprContextStatic statEnv) throws ExprParseException\r\n+public ConvertibleExpr makeCallExpr(final ConvertibleExpr[] args, final ExprContextStatic statEnv) throws ExprParseException\r\n \t{\r\n \t\tfinal StringExpr[] se = (StringExpr[])Array.newInstance(StringExpr.class, args.length);\r\n \t\tfor (int i = 0; i < se.length; i++)\r\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/14/ConcatFunction.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/intellij/14/ConcatFunction.java\nindex e4562be4b05..9c95f61286d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/14/ConcatFunction.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/intellij/14/ConcatFunction.java\n@@ -3,7 +3,7 @@\n  * license details\r\n  * Portions copyright (c) 2002, Bill Lindsey : see copying.txt for license\r\n  * details\r\n- * \r\n+ *\r\n  * Portions copyright (c) 2009-2011 TIBCO Software Inc.\r\n  *\r\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n@@ -18,6 +18,7 @@\n  * See the License for the specific language governing permissions and\r\n  * limitations under the License.\r\n  */\r\n+\r\n package org.genxdm.processor.xpath.v10.functions;\r\n \r\n import java.lang.reflect.Array;\r\n@@ -35,41 +36,38 @@ import org.genxdm.xpath.v10.extend.ConvertibleExpr;\n \r\n /**\r\n  * represents the XPath Function: string concat(string, string, string*)\r\n- * \r\n+ * <p>\r\n  * has the method makeCallExpr which will construct a String expression representing the concat function\r\n  */\r\n-public final class ConcatFunction \r\n-    implements Function\r\n-{\r\n+public final class ConcatFunction\r\n+    implements Function {\r\n \r\n-\tpublic ConvertibleExpr makeCallExpr(final ConvertibleExpr[] args, final ExprContextStatic statEnv) throws ExprParseException\r\n-\t{\r\n-\t\tfinal StringExpr[] se = (StringExpr[])Array.newInstance(StringExpr.class, args.length);\r\n-\t\tfor (int i = 0; i < se.length; i++)\r\n-\t\t{\r\n-\t\t\tse[i] = args[i].makeStringExpr(statEnv);\r\n-\t\t}\r\n+    public ConvertibleExpr makeCallExpr(final ConvertibleExpr[] args,\r\n+                                        final ExprContextStatic statEnv) throws ExprParseException {\r\n+        final StringExpr[] se = (StringExpr[]) Array.newInstance(StringExpr.class, args.length);\r\n+        for (int i = 0; i < se.length; i++) {\r\n+            se[i] = args[i].makeStringExpr(statEnv);\r\n+        }\r\n \r\n-\t\treturn new ConvertibleStringExpr()\r\n-\t\t{\r\n-\t\t\tpublic <N> String stringFunction(Model<N> model, final N node, final ExprContextDynamic<N> dynEnv) {\r\n-\t\t\t\tfinal StringBuilder buf = new StringBuilder();\r\n-\t\t\t\tfor (int i = 0; i < se.length; i++)\r\n-\t\t\t\t{\r\n-\t\t\t\t\tbuf.append(se[i].stringFunction(model, node, dynEnv));\r\n-\t\t\t\t}\r\n-\t\t\t\treturn buf.toString();\r\n-\t\t\t}\r\n+        return new ConvertibleStringExpr() {\r\n+            public <N> String stringFunction(Model<N> model, final N node,\r\n+                                             final ExprContextDynamic<N> dynEnv) {\r\n+                final StringBuilder buf = new StringBuilder();\r\n+                for (int i = 0; i < se.length; i++) {\r\n+                    buf.append(se[i].stringFunction(model, node, dynEnv));\r\n+                }\r\n+                return buf.toString();\r\n+            }\r\n \r\n             @Override\r\n-            public String stringFunction(TraversingInformer contextNode, TraverserDynamicContext dynEnv) {\r\n+            public String stringFunction(TraversingInformer contextNode,\r\n+                                         TraverserDynamicContext dynEnv) {\r\n                 final StringBuilder buf = new StringBuilder();\r\n-                for (int i = 0; i < se.length; i++)\r\n-                {\r\n+                for (int i = 0; i < se.length; i++) {\r\n                     buf.append(se[i].stringFunction(contextNode, dynEnv));\r\n                 }\r\n                 return buf.toString();\r\n             }\r\n-\t\t};\r\n-\t}\r\n+        };\r\n+    }\r\n }\r\n",
            "diff_size": 29
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "45",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/14/ConcatFunction.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/naturalize/14/ConcatFunction.java\nindex e4562be4b05..66b7cbc6162 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/14/ConcatFunction.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/naturalize/14/ConcatFunction.java\n@@ -40,28 +40,27 @@ import org.genxdm.xpath.v10.extend.ConvertibleExpr;\n  */\r\n public final class ConcatFunction \r\n     implements Function\r\n-{\r\n-\r\n-\tpublic ConvertibleExpr makeCallExpr(final ConvertibleExpr[] args, final ExprContextStatic statEnv) throws ExprParseException\r\n-\t{\r\n-\t\tfinal StringExpr[] se = (StringExpr[])Array.newInstance(StringExpr.class, args.length);\r\n+{\n+    public ConvertibleExpr makeCallExpr(final ConvertibleExpr[] args, final ExprContextStatic statEnv) throws ExprParseException\r\n+\t{\n+    final StringExpr[] se = (StringExpr[])Array.newInstance(StringExpr.class, args.length);\r\n \t\tfor (int i = 0; i < se.length; i++)\r\n-\t\t{\r\n-\t\t\tse[i] = args[i].makeStringExpr(statEnv);\r\n-\t\t}\r\n+\t\t{\n+    se[i] = args[i].makeStringExpr(statEnv);\n+    }\r\n \r\n \t\treturn new ConvertibleStringExpr()\r\n-\t\t{\r\n-\t\t\tpublic <N> String stringFunction(Model<N> model, final N node, final ExprContextDynamic<N> dynEnv) {\r\n-\t\t\t\tfinal StringBuilder buf = new StringBuilder();\r\n+\t\t{\n+    public <N> String stringFunction(Model<N> model, final N node, final ExprContextDynamic<N> dynEnv) {\n+    final StringBuilder buf = new StringBuilder();\r\n \t\t\t\tfor (int i = 0; i < se.length; i++)\r\n-\t\t\t\t{\r\n-\t\t\t\t\tbuf.append(se[i].stringFunction(model, node, dynEnv));\r\n-\t\t\t\t}\r\n-\t\t\t\treturn buf.toString();\r\n-\t\t\t}\r\n-\r\n-            @Override\r\n+\t\t\t\t{\n+    buf.append(se[i].stringFunction(model, node, dynEnv));\n+    }\r\n+\t\t\t\treturn buf.toString();\n+    }\n+\n+@Override\r\n             public String stringFunction(TraversingInformer contextNode, TraverserDynamicContext dynEnv) {\r\n                 final StringBuilder buf = new StringBuilder();\r\n                 for (int i = 0; i < se.length; i++)\r\n@@ -69,7 +68,7 @@ public final class ConcatFunction\n                     buf.append(se[i].stringFunction(contextNode, dynEnv));\r\n                 }\r\n                 return buf.toString();\r\n-            }\r\n-\t\t};\r\n-\t}\r\n-}\r\n+            }\n+    };\n+    }\n+    }\n\\ No newline at end of file\n",
            "diff_size": 22
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/14/ConcatFunction.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/codebuff/14/ConcatFunction.java\nindex e4562be4b05..fcee3ee1422 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/14/ConcatFunction.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/codebuff/14/ConcatFunction.java\n@@ -18,58 +18,59 @@\n  * See the License for the specific language governing permissions and\r\n  * limitations under the License.\r\n  */\r\n-package org.genxdm.processor.xpath.v10.functions;\r\n-\r\n-import java.lang.reflect.Array;\r\n-\r\n-import org.genxdm.Model;\r\n-import org.genxdm.nodes.TraversingInformer;\r\n-import org.genxdm.processor.xpath.v10.expressions.ConvertibleStringExpr;\r\n-import org.genxdm.xpath.v10.TraverserDynamicContext;\r\n-import org.genxdm.xpath.v10.ExprContextDynamic;\r\n-import org.genxdm.xpath.v10.ExprContextStatic;\r\n-import org.genxdm.xpath.v10.ExprParseException;\r\n-import org.genxdm.xpath.v10.StringExpr;\r\n-import org.genxdm.xpath.v10.extend.Function;\r\n+package org.genxdm.processor.xpath.v10.functions;\n+\n+import java.lang.reflect.Array;\n+import org.genxdm.Model;\n+import org.genxdm.nodes.TraversingInformer;\n+import org.genxdm.processor.xpath.v10.expressions.ConvertibleStringExpr;\n+import org.genxdm.xpath.v10.TraverserDynamicContext;\n+import org.genxdm.xpath.v10.ExprContextDynamic;\n+import org.genxdm.xpath.v10.ExprContextStatic;\n+import org.genxdm.xpath.v10.ExprParseException;\n+import org.genxdm.xpath.v10.StringExpr;\n+import org.genxdm.xpath.v10.extend.Function;\n import org.genxdm.xpath.v10.extend.ConvertibleExpr;\r\n \r\n /**\r\n  * represents the XPath Function: string concat(string, string, string*)\r\n  * \r\n  * has the method makeCallExpr which will construct a String expression representing the concat function\r\n- */\r\n-public final class ConcatFunction \r\n-    implements Function\r\n-{\r\n-\r\n-\tpublic ConvertibleExpr makeCallExpr(final ConvertibleExpr[] args, final ExprContextStatic statEnv) throws ExprParseException\r\n-\t{\r\n-\t\tfinal StringExpr[] se = (StringExpr[])Array.newInstance(StringExpr.class, args.length);\r\n-\t\tfor (int i = 0; i < se.length; i++)\r\n-\t\t{\r\n-\t\t\tse[i] = args[i].makeStringExpr(statEnv);\r\n-\t\t}\r\n-\r\n-\t\treturn new ConvertibleStringExpr()\r\n-\t\t{\r\n-\t\t\tpublic <N> String stringFunction(Model<N> model, final N node, final ExprContextDynamic<N> dynEnv) {\r\n-\t\t\t\tfinal StringBuilder buf = new StringBuilder();\r\n-\t\t\t\tfor (int i = 0; i < se.length; i++)\r\n-\t\t\t\t{\r\n-\t\t\t\t\tbuf.append(se[i].stringFunction(model, node, dynEnv));\r\n-\t\t\t\t}\r\n-\t\t\t\treturn buf.toString();\r\n-\t\t\t}\r\n-\r\n-            @Override\r\n-            public String stringFunction(TraversingInformer contextNode, TraverserDynamicContext dynEnv) {\r\n-                final StringBuilder buf = new StringBuilder();\r\n-                for (int i = 0; i < se.length; i++)\r\n-                {\r\n-                    buf.append(se[i].stringFunction(contextNode, dynEnv));\r\n-                }\r\n-                return buf.toString();\r\n-            }\r\n-\t\t};\r\n-\t}\r\n-}\r\n+ */\n+\n+public final class ConcatFunction implements Function\n+{\n+    public ConvertibleExpr makeCallExpr(final ConvertibleExpr[] args, final ExprContextStatic statEnv)\n+        throws ExprParseException\n+    {\n+        final StringExpr[] se = (StringExpr[])Array.newInstance(StringExpr.class, args.length);\n+        for (int i = 0; i < se.length; i++)\n+        {\n+            se[i] = args[i].makeStringExpr(statEnv);\n+        }\n+        return new ConvertibleStringExpr()\n+        {\n+            public <N> String stringFunction(Model<N> model, final N node, final ExprContextDynamic<N> dynEnv)\n+            {\n+                final StringBuilder buf = new StringBuilder();\n+                for (int i = 0; i < se.length; i++)\n+                {\n+                    buf.append(se[i].stringFunction(model, node, dynEnv));\n+                }\n+                return buf.toString();\n+            }\n+\n+            @Override\n+            public String stringFunction(TraversingInformer contextNode, TraverserDynamicContext dynEnv)\n+            {\n+                final StringBuilder buf = new StringBuilder();\n+                for (int i = 0; i < se.length; i++)\n+                {\n+                    buf.append(se[i].stringFunction(contextNode, dynEnv));\n+                }\n+                return buf.toString();\n+            }\n+        };\n+    }\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 51
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "46",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/14/ConcatFunction.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler_random/14/ConcatFunction.java\nindex e4562be4b05..9ec73944df3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/14/ConcatFunction.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler_random/14/ConcatFunction.java\n@@ -42,7 +42,7 @@ public final class ConcatFunction\n     implements Function\r\n {\r\n \r\n-\tpublic ConvertibleExpr makeCallExpr(final ConvertibleExpr[] args, final ExprContextStatic statEnv) throws ExprParseException\r\n+public ConvertibleExpr makeCallExpr(final ConvertibleExpr[] args, final ExprContextStatic statEnv) throws ExprParseException\r\n \t{\r\n \t\tfinal StringExpr[] se = (StringExpr[])Array.newInstance(StringExpr.class, args.length);\r\n \t\tfor (int i = 0; i < se.length; i++)\r\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "46",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/14/ConcatFunction.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler_three_grams/14/ConcatFunction.java\nindex e4562be4b05..62e724b9609 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/14/ConcatFunction.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler_three_grams/14/ConcatFunction.java\n@@ -42,7 +42,7 @@ public final class ConcatFunction\n     implements Function\r\n {\r\n \r\n-\tpublic ConvertibleExpr makeCallExpr(final ConvertibleExpr[] args, final ExprContextStatic statEnv) throws ExprParseException\r\n+    public ConvertibleExpr makeCallExpr(final ConvertibleExpr[] args, final ExprContextStatic statEnv) throws ExprParseException\r\n \t{\r\n \t\tfinal StringExpr[] se = (StringExpr[])Array.newInstance(StringExpr.class, args.length);\r\n \t\tfor (int i = 0; i < se.length; i++)\r\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "intellij",
        "codebuff"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ]
}
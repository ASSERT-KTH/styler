{
    "project_name": "Gurux-gurux.dlms.java",
    "error_id": "23",
    "information": {
        "errors": [
            {
                "line": "117",
                "severity": "warning",
                "message": "Line is longer than 80 characters (found 95).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "\t\tApplicationContextName ret = getMappings().get(value);\n\t\tif (ret == null) {\n\t\t\tthrow new IllegalArgumentException(\"Invalid application context name enum value.\");\n\t\t}\n\t\treturn ret;\n\t}",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "117",
                    "severity": "warning",
                    "message": "Line is longer than 80 characters (found 89).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Gurux-gurux.dlms.java/errored/1/23/ApplicationContextName.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Gurux-gurux.dlms.java/styler/23/ApplicationContextName.java\nindex 2490854ba55..22d409edbac 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Gurux-gurux.dlms.java/errored/1/23/ApplicationContextName.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Gurux-gurux.dlms.java/styler/23/ApplicationContextName.java\n@@ -114,8 +114,8 @@ public enum ApplicationContextName {\n \tpublic static ApplicationContextName forValue(final int value) {\n \t\tApplicationContextName ret = getMappings().get(value);\n \t\tif (ret == null) {\n-\t\t\tthrow new IllegalArgumentException(\"Invalid application context name enum value.\");\n-\t\t}\n-\t\treturn ret;\n+      throw new IllegalArgumentException(\"Invalid application context name enum value.\");\n+}\n+  return ret;\n \t}\n }\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Gurux-gurux.dlms.java/errored/1/23/ApplicationContextName.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Gurux-gurux.dlms.java/intellij/23/ApplicationContextName.java\nindex 2490854ba55..1e8c27063cf 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Gurux-gurux.dlms.java/errored/1/23/ApplicationContextName.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Gurux-gurux.dlms.java/intellij/23/ApplicationContextName.java\n@@ -41,81 +41,82 @@ import java.util.HashMap;\n  */\n public enum ApplicationContextName {\n \n-\t/**\n-\t * Invalid application context name.\n-\t */\n-\tUNKNOWN(0),\n-\t/**\n-\t * Logical name.\n-\t */\n-\tLOGICAL_NAME(1),\n-\t/**\n-\t * Short name.\n-\t */\n-\tSHORT_NAME(2),\n-\t/**\n-\t * Logical name with ciphering.\n-\t */\n-\tLOGICAL_NAME_WITH_CIPHERING(3),\n-\t/**\n-\t * Short name with ciphering.\n-\t */\n-\tSHORT_NAME_WITH_CIPHERING(4);\n+    /**\n+     * Invalid application context name.\n+     */\n+    UNKNOWN(0),\n+    /**\n+     * Logical name.\n+     */\n+    LOGICAL_NAME(1),\n+    /**\n+     * Short name.\n+     */\n+    SHORT_NAME(2),\n+    /**\n+     * Logical name with ciphering.\n+     */\n+    LOGICAL_NAME_WITH_CIPHERING(3),\n+    /**\n+     * Short name with ciphering.\n+     */\n+    SHORT_NAME_WITH_CIPHERING(4);\n \n-\t/**\n-\t * Integer value of enumerator.\n-\t */\n-\tprivate int intValue;\n+    /**\n+     * Integer value of enumerator.\n+     */\n+    private int intValue;\n \n-\t/**\n-\t * Collection of enumerator values.\n-\t */\n-\tprivate static java.util.HashMap<Integer, ApplicationContextName> mappings;\n+    /**\n+     * Collection of enumerator values.\n+     */\n+    private static java.util.HashMap<Integer, ApplicationContextName> mappings;\n \n-\t/**\n-\t * Returns collection of enumerator values.\n-\t * \n-\t * @return Enumerator values.\n-\t */\n-\tprivate static HashMap<Integer, ApplicationContextName> getMappings() {\n-\t\tsynchronized (ApplicationContextName.class) {\n-\t\t\tif (mappings == null) {\n-\t\t\t\tmappings = new HashMap<Integer, ApplicationContextName>();\n-\t\t\t}\n-\t\t}\n-\t\treturn mappings;\n-\t}\n+    /**\n+     * Returns collection of enumerator values.\n+     *\n+     * @return Enumerator values.\n+     */\n+    private static HashMap<Integer, ApplicationContextName> getMappings() {\n+        synchronized (ApplicationContextName.class) {\n+            if (mappings == null) {\n+                mappings = new HashMap<Integer, ApplicationContextName>();\n+            }\n+        }\n+        return mappings;\n+    }\n \n-\t/**\n-\t * Constructor.\n-\t * \n-\t * @param value Integer value of enumerator.\n-\t */\n-\tApplicationContextName(final int value) {\n-\t\tintValue = value;\n-\t\tgetMappings().put(value, this);\n-\t}\n+    /**\n+     * Constructor.\n+     *\n+     * @param value Integer value of enumerator.\n+     */\n+    ApplicationContextName(final int value) {\n+        intValue = value;\n+        getMappings().put(value, this);\n+    }\n \n-\t/**\n-\t * Get integer value for enumerator.\n-\t * \n-\t * @return Enumerator integer value.\n-\t */\n-\tpublic int getValue() {\n-\t\treturn intValue;\n-\t}\n+    /**\n+     * Get integer value for enumerator.\n+     *\n+     * @return Enumerator integer value.\n+     */\n+    public int getValue() {\n+        return intValue;\n+    }\n \n-\t/**\n-\t * Returns enumerator value from an integer value.\n-\t * \n-\t * @param value Integer value.\n-\t * @return Enumeration value.\n-\t */\n-\tpublic static ApplicationContextName forValue(final int value) {\n-\t\tApplicationContextName ret = getMappings().get(value);\n-\t\tif (ret == null) {\n-\t\t\tthrow new IllegalArgumentException(\"Invalid application context name enum value.\");\n-\t\t}\n-\t\treturn ret;\n-\t}\n+    /**\n+     * Returns enumerator value from an integer value.\n+     *\n+     * @param value Integer value.\n+     * @return Enumeration value.\n+     */\n+    public static ApplicationContextName forValue(final int value) {\n+        ApplicationContextName ret = getMappings().get(value);\n+        if (ret == null) {\n+            throw new IllegalArgumentException(\n+                    \"Invalid application context name enum value.\");\n+        }\n+        return ret;\n+    }\n }\n\\ No newline at end of file\n",
            "diff_size": 72
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Gurux-gurux.dlms.java/errored/1/23/ApplicationContextName.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Gurux-gurux.dlms.java/codebuff/23/ApplicationContextName.java\nindex 2490854ba55..86f2ae9c6b5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Gurux-gurux.dlms.java/errored/1/23/ApplicationContextName.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Gurux-gurux.dlms.java/codebuff/23/ApplicationContextName.java\n@@ -39,83 +39,99 @@ import java.util.HashMap;\n /**\n  * Enumerates application context name.<br>\n  */\n+\n public enum ApplicationContextName {\n \n-\t/**\n-\t * Invalid application context name.\n-\t */\n-\tUNKNOWN(0),\n-\t/**\n-\t * Logical name.\n-\t */\n-\tLOGICAL_NAME(1),\n-\t/**\n-\t * Short name.\n-\t */\n-\tSHORT_NAME(2),\n-\t/**\n-\t * Logical name with ciphering.\n-\t */\n-\tLOGICAL_NAME_WITH_CIPHERING(3),\n-\t/**\n-\t * Short name with ciphering.\n-\t */\n-\tSHORT_NAME_WITH_CIPHERING(4);\n-\n-\t/**\n-\t * Integer value of enumerator.\n-\t */\n-\tprivate int intValue;\n-\n-\t/**\n-\t * Collection of enumerator values.\n-\t */\n-\tprivate static java.util.HashMap<Integer, ApplicationContextName> mappings;\n-\n-\t/**\n-\t * Returns collection of enumerator values.\n-\t * \n-\t * @return Enumerator values.\n-\t */\n-\tprivate static HashMap<Integer, ApplicationContextName> getMappings() {\n-\t\tsynchronized (ApplicationContextName.class) {\n-\t\t\tif (mappings == null) {\n-\t\t\t\tmappings = new HashMap<Integer, ApplicationContextName>();\n-\t\t\t}\n-\t\t}\n-\t\treturn mappings;\n-\t}\n-\n-\t/**\n-\t * Constructor.\n-\t * \n-\t * @param value Integer value of enumerator.\n-\t */\n-\tApplicationContextName(final int value) {\n-\t\tintValue = value;\n-\t\tgetMappings().put(value, this);\n-\t}\n-\n-\t/**\n-\t * Get integer value for enumerator.\n-\t * \n-\t * @return Enumerator integer value.\n-\t */\n-\tpublic int getValue() {\n-\t\treturn intValue;\n-\t}\n-\n-\t/**\n-\t * Returns enumerator value from an integer value.\n-\t * \n-\t * @param value Integer value.\n-\t * @return Enumeration value.\n-\t */\n-\tpublic static ApplicationContextName forValue(final int value) {\n-\t\tApplicationContextName ret = getMappings().get(value);\n-\t\tif (ret == null) {\n-\t\t\tthrow new IllegalArgumentException(\"Invalid application context name enum value.\");\n-\t\t}\n-\t\treturn ret;\n-\t}\n+    /**\n+     * Invalid application context name.\n+     */\n+\n+    UNKNOWN(0),\n+    /**\n+     * Logical name.\n+     */\n+\n+\n+    LOGICAL_NAME(1),\n+    /**\n+     * Short name.\n+     */\n+\n+\n+    SHORT_NAME(2),\n+    /**\n+     * Logical name with ciphering.\n+     */\n+\n+\n+    LOGICAL_NAME_WITH_CIPHERING(3),\n+    /**\n+     * Short name with ciphering.\n+     */\n+\n+\n+    SHORT_NAME_WITH_CIPHERING(4);\n+\n+    /**\n+     * Integer value of enumerator.\n+     */\n+\n+    private int intValue;\n+\n+    /**\n+     * Collection of enumerator values.\n+     */\n+    private static java.util.HashMap<Integer, ApplicationContextName> mappings;\n+\n+    /**\n+     * Returns collection of enumerator values.\n+     * \n+     * @return Enumerator values.\n+     */\n+    private static HashMap<Integer, ApplicationContextName> getMappings() {\n+        synchronized (ApplicationContextName.class) {\n+            if (mappings == null) {\n+                mappings = new HashMap<Integer, ApplicationContextName>();\n+            }\n+        }\n+        return mappings;\n+    }\n+\n+    /**\n+     * Constructor.\n+     * \n+     * @param value Integer value of enumerator.\n+     */\n+\n+    ApplicationContextName(final int value) {\n+        intValue = value;\n+        getMappings().put(value, this);\n+    }\n+\n+    /**\n+     * Get integer value for enumerator.\n+     * \n+     * @return Enumerator integer value.\n+     */\n+\n+    public int getValue() {\n+        return intValue;\n+    }\n+\n+    /**\n+     * Returns enumerator value from an integer value.\n+     * \n+     * @param value Integer value.\n+     * @return Enumeration value.\n+     */\n+\n+\n+    public static ApplicationContextName forValue(final int value) {\n+        ApplicationContextName ret = getMappings().get(value);\n+        if (ret == null) {\n+            throw new IllegalArgumentException(\n+                \"Invalid application context name enum value.\");\n+        }\n+        return ret;\n+    }\n }\n\\ No newline at end of file\n",
            "diff_size": 93
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "117",
                    "severity": "warning",
                    "message": "Line is longer than 80 characters (found 89).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Gurux-gurux.dlms.java/errored/1/23/ApplicationContextName.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Gurux-gurux.dlms.java/styler_random/23/ApplicationContextName.java\nindex 2490854ba55..22d409edbac 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Gurux-gurux.dlms.java/errored/1/23/ApplicationContextName.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Gurux-gurux.dlms.java/styler_random/23/ApplicationContextName.java\n@@ -114,8 +114,8 @@ public enum ApplicationContextName {\n \tpublic static ApplicationContextName forValue(final int value) {\n \t\tApplicationContextName ret = getMappings().get(value);\n \t\tif (ret == null) {\n-\t\t\tthrow new IllegalArgumentException(\"Invalid application context name enum value.\");\n-\t\t}\n-\t\treturn ret;\n+      throw new IllegalArgumentException(\"Invalid application context name enum value.\");\n+}\n+  return ret;\n \t}\n }\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "117",
                    "severity": "warning",
                    "message": "Line is longer than 80 characters (found 89).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Gurux-gurux.dlms.java/errored/1/23/ApplicationContextName.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Gurux-gurux.dlms.java/styler_three_grams/23/ApplicationContextName.java\nindex 2490854ba55..22d409edbac 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Gurux-gurux.dlms.java/errored/1/23/ApplicationContextName.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Gurux-gurux.dlms.java/styler_three_grams/23/ApplicationContextName.java\n@@ -114,8 +114,8 @@ public enum ApplicationContextName {\n \tpublic static ApplicationContextName forValue(final int value) {\n \t\tApplicationContextName ret = getMappings().get(value);\n \t\tif (ret == null) {\n-\t\t\tthrow new IllegalArgumentException(\"Invalid application context name enum value.\");\n-\t\t}\n-\t\treturn ret;\n+      throw new IllegalArgumentException(\"Invalid application context name enum value.\");\n+}\n+  return ret;\n \t}\n }\n\\ No newline at end of file\n",
            "diff_size": 3
        }
    ],
    "repaired_by": [
        "intellij",
        "codebuff"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ]
}
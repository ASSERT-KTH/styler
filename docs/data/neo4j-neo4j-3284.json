{
    "project_name": "neo4j-neo4j",
    "error_id": "3284",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "54",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "112",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "166",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "166",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "192",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "192",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "205",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "205",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "208",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "208",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "218",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "218",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "228",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "228",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "230",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "230",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "234",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "234",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "247",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "247",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "252",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "252",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "256",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "256",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "258",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "258",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/3284/MemoryTrackingHeap.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/3284/MemoryTrackingHeap.java\nindex 016415e2ffa..33142745503 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/3284/MemoryTrackingHeap.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/3284/MemoryTrackingHeap.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.cypher.internal.collection;\n \n import java.util.Arrays;\n@@ -38,7 +39,7 @@ import static org.neo4j.util.Preconditions.checkArgument;\n /**\n  * A partial implementation (only supports what is necessary for our use cases)\n  * of a memory tracking heap data structure (https://en.wikipedia.org/wiki/Heap_(data_structure))\n- *\n+ * <p>\n  * By default this is a max-heap. Use a reverse comparator to get a min-heap.\n  */\n abstract class MemoryTrackingHeap<T> extends DefaultCloseListenable implements AutoCloseablePlus\n@@ -50,15 +51,15 @@ abstract class MemoryTrackingHeap<T> extends DefaultCloseListenable implements A\n     protected int size;\n     protected T[] heap;\n \n-    @SuppressWarnings( \"unchecked\" )\n-    protected MemoryTrackingHeap( Comparator<? super T> comparator, int initialSize, MemoryTracker memoryTracker )\n+    @SuppressWarnings(\"unchecked\")\n+    protected MemoryTrackingHeap(Comparator<? super T> comparator, int initialSize, MemoryTracker memoryTracker)\n     {\n-        this.comparator = requireNonNull( comparator );\n+        this.comparator = requireNonNull(comparator);\n         this.memoryTracker = memoryTracker;\n-        checkArgument( initialSize > 0, \"Table size must be greater than 0\" );\n+        checkArgument(initialSize > 0, \"Table size must be greater than 0\");\n \n-        trackedSize = shallowSizeOfObjectArray( initialSize );\n-        memoryTracker.allocateHeap( shallowInstanceSize() + trackedSize );\n+        trackedSize = shallowSizeOfObjectArray(initialSize);\n+        memoryTracker.allocateHeap(shallowInstanceSize() + trackedSize);\n         heap = (T[]) new Object[initialSize];\n     }\n \n@@ -70,14 +71,14 @@ abstract class MemoryTrackingHeap<T> extends DefaultCloseListenable implements A\n     /**\n      * Insert a new element in the heap\n      */\n-    protected boolean insert( T e )\n+    protected boolean insert(T e)\n     {\n         int n = size;\n-        if ( n >= heap.length )\n+        if (n >= heap.length)\n         {\n-            grow( n + 1 );\n+            grow(n + 1);\n         }\n-        siftUp( n, e );\n+        siftUp(n, e);\n         size = n + 1;\n         return true;\n     }\n@@ -85,13 +86,13 @@ abstract class MemoryTrackingHeap<T> extends DefaultCloseListenable implements A\n     /**\n      * Replace the top element of the heap\n      */\n-    protected T replace( T e )\n+    protected T replace(T e)\n     {\n         T head = heap[0];\n-        if ( comparator.compare( head, e ) > 0 )\n+        if (comparator.compare(head, e) > 0)\n         {\n             heap[0] = e;\n-            siftDown( 0, e, size );\n+            siftDown(0, e, size);\n             return head;\n         }\n         return e;\n@@ -104,28 +105,28 @@ abstract class MemoryTrackingHeap<T> extends DefaultCloseListenable implements A\n     {\n         // Heap sort the array\n         int n = size - 1;\n-        while ( n > 0 )\n+        while (n > 0)\n         {\n             T tmp = heap[n];\n             heap[n] = heap[0];\n             heap[0] = tmp;\n-            siftDown( 0, tmp, n );\n+            siftDown(0, tmp, n);\n             n--;\n         }\n     }\n \n     protected void clear()\n     {\n-        Arrays.fill( heap, 0, size, null );\n+        Arrays.fill(heap, 0, size, null);\n         size = 0;\n     }\n \n     @Override\n     public void closeInternal()\n     {\n-        if ( heap != null )\n+        if (heap != null)\n         {\n-            memoryTracker.releaseHeap( shallowInstanceSize() + trackedSize  );\n+            memoryTracker.releaseHeap(shallowInstanceSize() + trackedSize);\n             heap = null;\n         }\n     }\n@@ -142,7 +143,7 @@ abstract class MemoryTrackingHeap<T> extends DefaultCloseListenable implements A\n      */\n     protected Iterator<T> getIterator()\n     {\n-        return Iterators.iterator( size, heap );\n+        return Iterators.iterator(size, heap);\n     }\n \n     /**\n@@ -150,7 +151,7 @@ abstract class MemoryTrackingHeap<T> extends DefaultCloseListenable implements A\n      * To be used by sub-classes implementing autoClosingIterator().\n      * The caller can also provide an optional closeable of its own that will also be closed.\n      */\n-    protected Iterator<T> getAutoClosingIterator( AutoCloseable closeable )\n+    protected Iterator<T> getAutoClosingIterator(AutoCloseable closeable)\n     {\n         return new Iterator<>()\n         {\n@@ -159,12 +160,12 @@ abstract class MemoryTrackingHeap<T> extends DefaultCloseListenable implements A\n             @Override\n             public boolean hasNext()\n             {\n-                if ( index >= size )\n+                if (index >= size)\n                 {\n                     close();\n-                    if ( closeable != null )\n+                    if (closeable != null)\n                     {\n-                        IOUtils.closeAllUnchecked( closeable );\n+                        IOUtils.closeAllUnchecked(closeable);\n                     }\n                     return false;\n                 }\n@@ -174,7 +175,7 @@ abstract class MemoryTrackingHeap<T> extends DefaultCloseListenable implements A\n             @Override\n             public T next()\n             {\n-                if ( !hasNext() )\n+                if (!hasNext())\n                 {\n                     throw new NoSuchElementException();\n                 }\n@@ -188,9 +189,9 @@ abstract class MemoryTrackingHeap<T> extends DefaultCloseListenable implements A\n      */\n     protected void heapify()\n     {\n-        for ( int i = (size >>> 1) - 1; i >= 0; i-- )\n+        for (int i = (size >>> 1) - 1; i >= 0; i--)\n         {\n-            siftDown( i, heap[i], size );\n+            siftDown(i, heap[i], size);\n         }\n     }\n \n@@ -201,20 +202,20 @@ abstract class MemoryTrackingHeap<T> extends DefaultCloseListenable implements A\n      * @param x element to sift down\n      * @param n the size of the heap\n      */\n-    protected void siftDown( int k, T x, int n )\n+    protected void siftDown(int k, T x, int n)\n     {\n         int half = n >>> 1;\n-        while ( k < half )\n+        while (k < half)\n         {\n             int child = (k << 1) + 1;\n             T c = heap[child];\n             int right = child + 1;\n-            if ( right < n && comparator.compare( c, heap[right] ) < 0 )\n+            if (right < n && comparator.compare(c, heap[right]) < 0)\n             {\n                 child = right;\n                 c = heap[child];\n             }\n-            if ( comparator.compare( x, c ) >= 0 )\n+            if (comparator.compare(x, c) >= 0)\n             {\n                 break;\n             }\n@@ -224,13 +225,13 @@ abstract class MemoryTrackingHeap<T> extends DefaultCloseListenable implements A\n         heap[k] = x;\n     }\n \n-    private void siftUp( int k, T x )\n+    private void siftUp(int k, T x)\n     {\n-        while ( k > 0 )\n+        while (k > 0)\n         {\n             int parent = (k - 1) >>> 1;\n             T e = heap[parent];\n-            if ( comparator.compare( x, e ) <= 0 )\n+            if (comparator.compare(x, e) <= 0)\n             {\n                 break;\n             }\n@@ -243,31 +244,31 @@ abstract class MemoryTrackingHeap<T> extends DefaultCloseListenable implements A\n     /**\n      * The implementing class gets to decide what to do in case growing results in an overflow\n      */\n-    protected abstract void overflow( long maxSize );\n+    protected abstract void overflow(long maxSize);\n \n     /**\n      * Grow  heap.\n      */\n-    protected void grow( long minimumCapacity )\n+    protected void grow(long minimumCapacity)\n     {\n         int oldCapacity = heap.length;\n         int newCapacity = oldCapacity + (oldCapacity >> 1) + 1; // Grow by 50%\n-        if ( newCapacity > MAX_ARRAY_SIZE || newCapacity < 0 ) // Check for overflow\n+        if (newCapacity > MAX_ARRAY_SIZE || newCapacity < 0) // Check for overflow\n         {\n-            if ( minimumCapacity > MAX_ARRAY_SIZE )\n+            if (minimumCapacity > MAX_ARRAY_SIZE)\n             {\n                 // Nothing left to do here. We have failed to prevent an overflow.\n-                overflow( MAX_ARRAY_SIZE );\n+                overflow(MAX_ARRAY_SIZE);\n             }\n             newCapacity = MAX_ARRAY_SIZE;\n         }\n \n         long oldHeapUsage = trackedSize;\n-        trackedSize = shallowSizeOfObjectArray( newCapacity );\n-        memoryTracker.allocateHeap( trackedSize );\n+        trackedSize = shallowSizeOfObjectArray(newCapacity);\n+        memoryTracker.allocateHeap(trackedSize);\n         T[] newHeap = (T[]) new Object[newCapacity];\n-        System.arraycopy( heap, 0, newHeap, 0, Math.min( size, newCapacity ) );\n+        System.arraycopy(heap, 0, newHeap, 0, Math.min(size, newCapacity));\n         heap = newHeap;\n-        memoryTracker.releaseHeap( oldHeapUsage );\n+        memoryTracker.releaseHeap(oldHeapUsage);\n     }\n }\n",
            "diff_size": 44
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
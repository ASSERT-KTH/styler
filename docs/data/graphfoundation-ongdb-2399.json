{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2399",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "34",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "34",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "36",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "112",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2399/PropertyNotFoundException.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2399/PropertyNotFoundException.java\nindex a70d3074955..a181d051eef 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2399/PropertyNotFoundException.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2399/PropertyNotFoundException.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.api.exceptions;\n \n import org.neo4j.internal.kernel.api.TokenNameLookup;\n@@ -27,26 +28,26 @@ import static java.lang.String.format;\n \n public class PropertyNotFoundException extends KernelException\n {\n-    private final String entity;\n-    private final int propertyKeyId;\n+  private final String entity;\n+  private final int propertyKeyId;\n \n-    public PropertyNotFoundException( int propertyKeyId, EntityType entityType, long entityId )\n-    {\n-        this( entityType == EntityType.GRAPH ? \"GraphProperties\" : entityType.name() + \"[\" + entityId + \"]\",\n-              propertyKeyId );\n-    }\n+  public PropertyNotFoundException(int propertyKeyId, EntityType entityType, long entityId)\n+  {\n+    this(entityType == EntityType.GRAPH ? \"GraphProperties\" : entityType.name() + \"[\" + entityId + \"]\",\n+        propertyKeyId);\n+  }\n \n-    private PropertyNotFoundException( String entity, int propertyKeyId )\n-    {\n-        super( Status.Statement.PropertyNotFound, \"%s has no property with propertyKeyId=%s.\", entity, propertyKeyId );\n-        this.entity = entity;\n-        this.propertyKeyId = propertyKeyId;\n-    }\n+  private PropertyNotFoundException(String entity, int propertyKeyId)\n+  {\n+    super(Status.Statement.PropertyNotFound, \"%s has no property with propertyKeyId=%s.\", entity, propertyKeyId);\n+    this.entity = entity;\n+    this.propertyKeyId = propertyKeyId;\n+  }\n \n-    @Override\n-    public String getUserMessage( TokenNameLookup tokenNameLookup )\n-    {\n-        return format( \"%s has no property with propertyKey=\\\"%s\\\".\", entity,\n-                       tokenNameLookup.propertyKeyGetName( propertyKeyId ) );\n-    }\n+  @Override\n+  public String getUserMessage(TokenNameLookup tokenNameLookup)\n+  {\n+    return format(\"%s has no property with propertyKey=\\\"%s\\\".\", entity,\n+        tokenNameLookup.propertyKeyGetName(propertyKeyId));\n+  }\n }\n",
            "diff_size": 20
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2399/PropertyNotFoundException.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2399/PropertyNotFoundException.java\nindex a70d3074955..fca914fa181 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2399/PropertyNotFoundException.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2399/PropertyNotFoundException.java\n@@ -32,8 +32,7 @@ public class PropertyNotFoundException extends KernelException\n \n     public PropertyNotFoundException( int propertyKeyId, EntityType entityType, long entityId )\n     {\n-        this( entityType == EntityType.GRAPH ? \"GraphProperties\" : entityType.name() + \"[\" + entityId + \"]\",\n-              propertyKeyId );\n+        this( entityType == EntityType.GRAPH ? \"GraphProperties\" : entityType.name() + \"[\" + entityId + \"]\", propertyKeyId );\n     }\n \n     private PropertyNotFoundException( String entity, int propertyKeyId )\n@@ -46,7 +45,6 @@ public class PropertyNotFoundException extends KernelException\n     @Override\n     public String getUserMessage( TokenNameLookup tokenNameLookup )\n     {\n-        return format( \"%s has no property with propertyKey=\\\"%s\\\".\", entity,\n-                       tokenNameLookup.propertyKeyGetName( propertyKeyId ) );\n+        return format( \"%s has no property with propertyKey=\\\"%s\\\".\", entity, tokenNameLookup.propertyKeyGetName( propertyKeyId ) );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
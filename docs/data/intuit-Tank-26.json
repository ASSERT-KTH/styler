{
    "project_name": "intuit-Tank",
    "error_id": "26",
    "information": {
        "errors": [
            {
                "line": "131",
                "column": "9",
                "severity": "warning",
                "message": "'}' at column 9 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally).",
                "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
            }
        ]
    },
    "source_code": "                JOptionPane.showMessageDialog(this, \"Text not found\");\n            }\n        }\n\n        else if (\"FindPrev\".equals(command)) {\n            String text = searchField.getText();",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/26/XMlViewDialog.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/styler/26/XMlViewDialog.java\nindex 8ae3999ef0c..5f95534ae3d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/26/XMlViewDialog.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/styler/26/XMlViewDialog.java\n@@ -128,9 +128,8 @@ public class XMlViewDialog extends JDialog implements ActionListener {\n             if (!found) {\n                 JOptionPane.showMessageDialog(this, \"Text not found\");\n             }\n-        }\n \n-        else if (\"FindPrev\".equals(command)) {\n+            } else if (\"FindPrev\".equals(command)) {\n             String text = searchField.getText();\n             if (text.length() == 0) {\n                 return;\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/26/XMlViewDialog.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/intellij/26/XMlViewDialog.java\nindex 8ae3999ef0c..c6d6e6823f5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/26/XMlViewDialog.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/intellij/26/XMlViewDialog.java\n@@ -1,6 +1,7 @@\n /**\n  * Copyright 2011 Intuit Inc. All Rights Reserved\n  */\n+\n package com.intuit.tank.tools.script;\n \n /*\n@@ -38,114 +39,111 @@ import org.fife.ui.rtextarea.SearchEngine;\n \n /**\n  * XMlViewDialog\n- * \n+ *\n  * @author dangleton\n- * \n  */\n public class XMlViewDialog extends JDialog implements ActionListener {\n \n-    /**\n-     * \n-     */\n-    private static final long serialVersionUID = 1L;\n-    private RSyntaxTextArea xmlViewTA;\n-\n-    private JTextField searchField;\n-    private JCheckBox regexCB;\n-    private JCheckBox matchCaseCB;\n-\n-    /**\n-     * @param parent\n-     * @param xmlViewTA\n-     */\n-    public XMlViewDialog(Frame parent) {\n-        super(parent);\n-        addWindowListener(new WindowAdapter() {\n-            public void windowClosed(WindowEvent e) {\n-                setVisible(false);\n-            }\n-        });\n-\n-        setModal(false);\n-        xmlViewTA = new RSyntaxTextArea();\n-        xmlViewTA.setEditable(false);\n-        xmlViewTA.setSyntaxEditingStyle(SyntaxConstants.SYNTAX_STYLE_XML);\n-        RTextScrollPane sp = new RTextScrollPane(xmlViewTA);\n-        add(sp, BorderLayout.CENTER);\n-        JButton button = new JButton(\"Close\");\n-        button.addActionListener(new ActionListener() {\n-\n-            @Override\n-            public void actionPerformed(ActionEvent e) {\n-                setVisible(false);\n-\n-            }\n-        });\n-        add(button, BorderLayout.SOUTH);\n-\n-        // Create a toolbar with searching options.\n-        JToolBar toolBar = new JToolBar();\n-        toolBar.add(new JLabel(\"Search: \"));\n-        searchField = new JTextField(30);\n-        toolBar.add(searchField);\n-        JButton b = new JButton(\"Find Next\");\n-        b.setActionCommand(\"FindNext\");\n-        b.addActionListener(this);\n-        toolBar.add(b);\n-        b = new JButton(\"Find Previous\");\n-        b.setActionCommand(\"FindPrev\");\n-        b.addActionListener(this);\n-        toolBar.add(b);\n-        regexCB = new JCheckBox(\"Regex\");\n-        toolBar.add(regexCB);\n-        matchCaseCB = new JCheckBox(\"Match Case\");\n-        toolBar.add(matchCaseCB);\n-        add(toolBar, BorderLayout.NORTH);\n+  /**\n+   *\n+   */\n+  private static final long serialVersionUID = 1L;\n+  private RSyntaxTextArea xmlViewTA;\n+\n+  private JTextField searchField;\n+  private JCheckBox regexCB;\n+  private JCheckBox matchCaseCB;\n+\n+  /**\n+   * @param parent\n+   * @param xmlViewTA\n+   */\n+  public XMlViewDialog(Frame parent) {\n+    super(parent);\n+    addWindowListener(new WindowAdapter() {\n+      public void windowClosed(WindowEvent e) {\n+        setVisible(false);\n+      }\n+    });\n+\n+    setModal(false);\n+    xmlViewTA = new RSyntaxTextArea();\n+    xmlViewTA.setEditable(false);\n+    xmlViewTA.setSyntaxEditingStyle(SyntaxConstants.SYNTAX_STYLE_XML);\n+    RTextScrollPane sp = new RTextScrollPane(xmlViewTA);\n+    add(sp, BorderLayout.CENTER);\n+    JButton button = new JButton(\"Close\");\n+    button.addActionListener(new ActionListener() {\n+\n+      @Override\n+      public void actionPerformed(ActionEvent e) {\n+        setVisible(false);\n+\n+      }\n+    });\n+    add(button, BorderLayout.SOUTH);\n+\n+    // Create a toolbar with searching options.\n+    JToolBar toolBar = new JToolBar();\n+    toolBar.add(new JLabel(\"Search: \"));\n+    searchField = new JTextField(30);\n+    toolBar.add(searchField);\n+    JButton b = new JButton(\"Find Next\");\n+    b.setActionCommand(\"FindNext\");\n+    b.addActionListener(this);\n+    toolBar.add(b);\n+    b = new JButton(\"Find Previous\");\n+    b.setActionCommand(\"FindPrev\");\n+    b.addActionListener(this);\n+    toolBar.add(b);\n+    regexCB = new JCheckBox(\"Regex\");\n+    toolBar.add(regexCB);\n+    matchCaseCB = new JCheckBox(\"Match Case\");\n+    toolBar.add(matchCaseCB);\n+    add(toolBar, BorderLayout.NORTH);\n+  }\n+\n+  public void setText(String text, boolean resetCaret) {\n+    xmlViewTA.setText(text);\n+    if (resetCaret) {\n+      xmlViewTA.setCaretPosition(0);\n     }\n-\n-    public void setText(String text, boolean resetCaret) {\n-        xmlViewTA.setText(text);\n-        if (resetCaret) {\n-            xmlViewTA.setCaretPosition(0);\n-        }\n+  }\n+\n+  public void actionPerformed(ActionEvent e) {\n+\n+    String command = e.getActionCommand();\n+\n+    if (\"FindNext\".equals(command)) {\n+      String text = searchField.getText();\n+      if (text.length() == 0) {\n+        return;\n+      }\n+      boolean forward = true;\n+      boolean matchCase = matchCaseCB.isSelected();\n+      boolean wholeWord = false;\n+      boolean regex = regexCB.isSelected();\n+      boolean found = SearchEngine.find(xmlViewTA, text, forward,\n+        matchCase, wholeWord, regex);\n+      if (!found) {\n+        JOptionPane.showMessageDialog(this, \"Text not found\");\n+      }\n+    } else if (\"FindPrev\".equals(command)) {\n+      String text = searchField.getText();\n+      if (text.length() == 0) {\n+        return;\n+      }\n+      boolean forward = false;\n+      boolean matchCase = matchCaseCB.isSelected();\n+      boolean wholeWord = false;\n+      boolean regex = regexCB.isSelected();\n+      boolean found = SearchEngine.find(xmlViewTA, text, forward,\n+        matchCase, wholeWord, regex);\n+      if (!found) {\n+        JOptionPane.showMessageDialog(this, \"Text not found\");\n+      }\n     }\n \n-    public void actionPerformed(ActionEvent e) {\n-\n-        String command = e.getActionCommand();\n-\n-        if (\"FindNext\".equals(command)) {\n-            String text = searchField.getText();\n-            if (text.length() == 0) {\n-                return;\n-            }\n-            boolean forward = true;\n-            boolean matchCase = matchCaseCB.isSelected();\n-            boolean wholeWord = false;\n-            boolean regex = regexCB.isSelected();\n-            boolean found = SearchEngine.find(xmlViewTA, text, forward,\n-                    matchCase, wholeWord, regex);\n-            if (!found) {\n-                JOptionPane.showMessageDialog(this, \"Text not found\");\n-            }\n-        }\n-\n-        else if (\"FindPrev\".equals(command)) {\n-            String text = searchField.getText();\n-            if (text.length() == 0) {\n-                return;\n-            }\n-            boolean forward = false;\n-            boolean matchCase = matchCaseCB.isSelected();\n-            boolean wholeWord = false;\n-            boolean regex = regexCB.isSelected();\n-            boolean found = SearchEngine.find(xmlViewTA, text, forward,\n-                    matchCase, wholeWord, regex);\n-            if (!found) {\n-                JOptionPane.showMessageDialog(this, \"Text not found\");\n-            }\n-        }\n-\n-    }\n+  }\n \n }\n",
            "diff_size": 137
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/26/XMlViewDialog.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/naturalize/26/XMlViewDialog.java\nindex 8ae3999ef0c..36ecf48c02a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/26/XMlViewDialog.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/naturalize/26/XMlViewDialog.java\n@@ -128,9 +128,7 @@ public class XMlViewDialog extends JDialog implements ActionListener {\n             if (!found) {\n                 JOptionPane.showMessageDialog(this, \"Text not found\");\n             }\n-        }\n-\n-        else if (\"FindPrev\".equals(command)) {\n+        } else if (\"FindPrev\".equals(command)) {\n             String text = searchField.getText();\n             if (text.length() == 0) {\n                 return;\n@@ -148,4 +146,4 @@ public class XMlViewDialog extends JDialog implements ActionListener {\n \n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/26/XMlViewDialog.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/codebuff/26/XMlViewDialog.java\nindex 8ae3999ef0c..3de781a1b09 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/26/XMlViewDialog.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/codebuff/26/XMlViewDialog.java\n@@ -16,13 +16,14 @@ package com.intuit.tank.tools.script;\n  * #L%\n  */\n \n+\n+\n import java.awt.BorderLayout;\n import java.awt.Frame;\n import java.awt.event.ActionEvent;\n import java.awt.event.ActionListener;\n import java.awt.event.WindowAdapter;\n import java.awt.event.WindowEvent;\n-\n import javax.swing.JButton;\n import javax.swing.JCheckBox;\n import javax.swing.JDialog;\n@@ -30,7 +31,6 @@ import javax.swing.JLabel;\n import javax.swing.JOptionPane;\n import javax.swing.JTextField;\n import javax.swing.JToolBar;\n-\n import org.fife.ui.rsyntaxtextarea.RSyntaxTextArea;\n import org.fife.ui.rsyntaxtextarea.SyntaxConstants;\n import org.fife.ui.rtextarea.RTextScrollPane;\n@@ -42,14 +42,16 @@ import org.fife.ui.rtextarea.SearchEngine;\n  * @author dangleton\n  * \n  */\n+\n+\n public class XMlViewDialog extends JDialog implements ActionListener {\n \n     /**\n      * \n      */\n+\n     private static final long serialVersionUID = 1L;\n     private RSyntaxTextArea xmlViewTA;\n-\n     private JTextField searchField;\n     private JCheckBox regexCB;\n     private JCheckBox matchCaseCB;\n@@ -58,6 +60,7 @@ public class XMlViewDialog extends JDialog implements ActionListener {\n      * @param parent\n      * @param xmlViewTA\n      */\n+\n     public XMlViewDialog(Frame parent) {\n         super(parent);\n         addWindowListener(new WindowAdapter() {\n@@ -65,7 +68,6 @@ public class XMlViewDialog extends JDialog implements ActionListener {\n                 setVisible(false);\n             }\n         });\n-\n         setModal(false);\n         xmlViewTA = new RSyntaxTextArea();\n         xmlViewTA.setEditable(false);\n@@ -74,11 +76,9 @@ public class XMlViewDialog extends JDialog implements ActionListener {\n         add(sp, BorderLayout.CENTER);\n         JButton button = new JButton(\"Close\");\n         button.addActionListener(new ActionListener() {\n-\n             @Override\n             public void actionPerformed(ActionEvent e) {\n                 setVisible(false);\n-\n             }\n         });\n         add(button, BorderLayout.SOUTH);\n@@ -103,6 +103,7 @@ public class XMlViewDialog extends JDialog implements ActionListener {\n         add(toolBar, BorderLayout.NORTH);\n     }\n \n+\n     public void setText(String text, boolean resetCaret) {\n         xmlViewTA.setText(text);\n         if (resetCaret) {\n@@ -110,10 +111,9 @@ public class XMlViewDialog extends JDialog implements ActionListener {\n         }\n     }\n \n-    public void actionPerformed(ActionEvent e) {\n \n+    public void actionPerformed(ActionEvent e) {\n         String command = e.getActionCommand();\n-\n         if (\"FindNext\".equals(command)) {\n             String text = searchField.getText();\n             if (text.length() == 0) {\n@@ -123,14 +123,11 @@ public class XMlViewDialog extends JDialog implements ActionListener {\n             boolean matchCase = matchCaseCB.isSelected();\n             boolean wholeWord = false;\n             boolean regex = regexCB.isSelected();\n-            boolean found = SearchEngine.find(xmlViewTA, text, forward,\n-                    matchCase, wholeWord, regex);\n+            boolean found = SearchEngine.find(xmlViewTA, text, forward, matchCase, wholeWord, regex);\n             if (!found) {\n                 JOptionPane.showMessageDialog(this, \"Text not found\");\n             }\n-        }\n-\n-        else if (\"FindPrev\".equals(command)) {\n+        } else if (\"FindPrev\".equals(command)) {\n             String text = searchField.getText();\n             if (text.length() == 0) {\n                 return;\n@@ -139,13 +136,11 @@ public class XMlViewDialog extends JDialog implements ActionListener {\n             boolean matchCase = matchCaseCB.isSelected();\n             boolean wholeWord = false;\n             boolean regex = regexCB.isSelected();\n-            boolean found = SearchEngine.find(xmlViewTA, text, forward,\n-                    matchCase, wholeWord, regex);\n+            boolean found = SearchEngine.find(xmlViewTA, text, forward, matchCase, wholeWord, regex);\n             if (!found) {\n                 JOptionPane.showMessageDialog(this, \"Text not found\");\n             }\n         }\n-\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 25
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/26/XMlViewDialog.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/styler_random/26/XMlViewDialog.java\nindex 8ae3999ef0c..67f863c490a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/26/XMlViewDialog.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/styler_random/26/XMlViewDialog.java\n@@ -128,9 +128,7 @@ public class XMlViewDialog extends JDialog implements ActionListener {\n             if (!found) {\n                 JOptionPane.showMessageDialog(this, \"Text not found\");\n             }\n-        }\n-\n-        else if (\"FindPrev\".equals(command)) {\n+        } else if (\"FindPrev\".equals(command)) {\n             String text = searchField.getText();\n             if (text.length() == 0) {\n                 return;\n",
            "diff_size": 3
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/26/XMlViewDialog.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/styler_three_grams/26/XMlViewDialog.java\nindex 8ae3999ef0c..5f95534ae3d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/26/XMlViewDialog.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/styler_three_grams/26/XMlViewDialog.java\n@@ -128,9 +128,8 @@ public class XMlViewDialog extends JDialog implements ActionListener {\n             if (!found) {\n                 JOptionPane.showMessageDialog(this, \"Text not found\");\n             }\n-        }\n \n-        else if (\"FindPrev\".equals(command)) {\n+            } else if (\"FindPrev\".equals(command)) {\n             String text = searchField.getText();\n             if (text.length() == 0) {\n                 return;\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": []
}
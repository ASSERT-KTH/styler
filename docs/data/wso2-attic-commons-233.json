{
    "project_name": "wso2-attic-commons",
    "error_id": "233",
    "information": {
        "errors": [
            {
                "line": "17",
                "severity": "error",
                "message": "Line is longer than 120 characters (found 124).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "import org.apache.axis2.client.ServiceClient;\n\n/* Purpose\t:\tThis is a sample client to verify the handling of \"documentation\" annotations of WSO2 Mashup Server.\n * Author\t: \tYumani Ranaweera\n */\n",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "17",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 124).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "17",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 124).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/233/clientDocumentation.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/intellij/233/clientDocumentation.java\nindex 56c00620d96..b3af8e85c36 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/233/clientDocumentation.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/intellij/233/clientDocumentation.java\n@@ -19,32 +19,32 @@ import org.apache.axis2.client.ServiceClient;\n  */\r\n \r\n public class clientDocumentation {\r\n-\tprivate static String toEpr = \"http://localhost:7762/services/samples/documentation/\";\r\n-\t\r\n-\t \r\n-\tpublic static void main(String[] args) throws Exception{\r\n-\t\ttestEcho(\"DocumentationTest1\",\"testParam\");\r\n-\t\ttestEcho(\"DocumentationTest2\",\"testParam\");\r\n-\t\t\r\n-   \t}\r\n-\r\n-\t\t\r\n-\tprivate static void testEcho(String opName, String param) throws XMLStreamException, AxisFault {\r\n-\t//\tfinal String param = \"VAL\";\r\n-       \tString str = \"<\" + opName + \"Request>\" +\r\n-                \"<param>\" + param + \"</param>\" +\r\n-                \"</\" + opName + \"Request>\";\r\n-        StAXOMBuilder staxOMBuilder = new StAXOMBuilder(new ByteArrayInputStream(str.getBytes()));\r\n-        OMElement payload = staxOMBuilder.getDocumentElement();\r\n-        \r\n-        Options options = new Options();\r\n-        options.setTo(new EndpointReference(toEpr));\r\n-        ServiceClient sender= new ServiceClient();\r\n-        sender.setOptions(options);\r\n-        \r\n-        OMElement result = sender.sendReceive(payload);\r\n-        System.out.println(result.toString());\r\n-    }\r\n+  private static String toEpr = \"http://localhost:7762/services/samples/documentation/\";\r\n+\r\n+\r\n+  public static void main(String[] args) throws Exception {\r\n+    testEcho(\"DocumentationTest1\", \"testParam\");\r\n+    testEcho(\"DocumentationTest2\", \"testParam\");\r\n+\r\n+  }\r\n+\r\n+\r\n+  private static void testEcho(String opName, String param) throws XMLStreamException, AxisFault {\r\n+    //\tfinal String param = \"VAL\";\r\n+    String str = \"<\" + opName + \"Request>\" +\r\n+      \"<param>\" + param + \"</param>\" +\r\n+      \"</\" + opName + \"Request>\";\r\n+    StAXOMBuilder staxOMBuilder = new StAXOMBuilder(new ByteArrayInputStream(str.getBytes()));\r\n+    OMElement payload = staxOMBuilder.getDocumentElement();\r\n+\r\n+    Options options = new Options();\r\n+    options.setTo(new EndpointReference(toEpr));\r\n+    ServiceClient sender = new ServiceClient();\r\n+    sender.setOptions(options);\r\n+\r\n+    OMElement result = sender.sendReceive(payload);\r\n+    System.out.println(result.toString());\r\n+  }\r\n }\r\n \r\n \r\n",
            "diff_size": 26
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "17",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 124).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/233/clientDocumentation.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/naturalize/233/clientDocumentation.java\nindex 56c00620d96..0763eda8658 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/233/clientDocumentation.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/naturalize/233/clientDocumentation.java\n@@ -19,17 +19,13 @@ import org.apache.axis2.client.ServiceClient;\n  */\r\n \r\n public class clientDocumentation {\r\n-\tprivate static String toEpr = \"http://localhost:7762/services/samples/documentation/\";\r\n-\t\r\n-\t \r\n-\tpublic static void main(String[] args) throws Exception{\r\n+\tprivate static String toEpr = \"http://localhost:7762/services/samples/documentation/\";\n+public static void main(String[] args) throws Exception{\r\n \t\ttestEcho(\"DocumentationTest1\",\"testParam\");\r\n-\t\ttestEcho(\"DocumentationTest2\",\"testParam\");\r\n-\t\t\r\n-   \t}\r\n-\r\n-\t\t\r\n-\tprivate static void testEcho(String opName, String param) throws XMLStreamException, AxisFault {\r\n+\t\ttestEcho(\"DocumentationTest2\",\"testParam\");\n+    }\n+\n+   private static void testEcho(String opName, String param) throws XMLStreamException, AxisFault {\r\n \t//\tfinal String param = \"VAL\";\r\n        \tString str = \"<\" + opName + \"Request>\" +\r\n                 \"<param>\" + param + \"</param>\" +\r\n@@ -39,12 +35,10 @@ public class clientDocumentation {\n         \r\n         Options options = new Options();\r\n         options.setTo(new EndpointReference(toEpr));\r\n-        ServiceClient sender= new ServiceClient();\r\n+        ServiceClient sender = new ServiceClient();\r\n         sender.setOptions(options);\r\n         \r\n         OMElement result = sender.sendReceive(payload);\r\n         System.out.println(result.toString());\r\n     }\r\n-}\r\n-\r\n-\r\n+}\n\\ No newline at end of file\n",
            "diff_size": 14
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "17",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 124).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "17",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 124).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "IQSS-dataverse",
    "error_id": "118",
    "information": {
        "errors": [
            {
                "line": "47",
                "column": "1",
                "severity": "error",
                "message": "File contains tab characters (this is the first instance).",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
            }
        ]
    },
    "source_code": "\n@Table(indexes = {@Index(columnList=\"dataverse_id\")\n\t\t, @Index(columnList=\"harvesttype\")\n\t\t, @Index(columnList=\"harveststyle\")\n\t\t, @Index(columnList=\"harvestingurl\")})\n@Entity",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "48",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/118/HarvestingClient.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/styler/118/HarvestingClient.java\nindex 32365e17852..58ab57497ad 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/118/HarvestingClient.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/styler/118/HarvestingClient.java\n@@ -44,7 +44,7 @@ import org.hibernate.validator.constraints.NotBlank;\n  */\n \n @Table(indexes = {@Index(columnList=\"dataverse_id\")\n-\t\t, @Index(columnList=\"harvesttype\")\n+                        , @Index(columnList=\"harvesttype\")\n \t\t, @Index(columnList=\"harveststyle\")\n \t\t, @Index(columnList=\"harvestingurl\")})\n @Entity\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/118/HarvestingClient.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/intellij/118/HarvestingClient.java\nindex 32365e17852..06547f60d57 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/118/HarvestingClient.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/intellij/118/HarvestingClient.java\n@@ -3,6 +3,7 @@\n  * To change this template file, choose Tools | Templates\n  * and open the template in the editor.\n  */\n+\n package edu.harvard.iq.dataverse.harvest.client;\n \n import edu.harvard.iq.dataverse.Dataset;\n@@ -39,311 +40,314 @@ import javax.validation.constraints.Size;\n import org.hibernate.validator.constraints.NotBlank;\n \n /**\n- *\n  * @author Leonid Andreev\n  */\n \n-@Table(indexes = {@Index(columnList=\"dataverse_id\")\n-\t\t, @Index(columnList=\"harvesttype\")\n-\t\t, @Index(columnList=\"harveststyle\")\n-\t\t, @Index(columnList=\"harvestingurl\")})\n+@Table(indexes = {@Index(columnList = \"dataverse_id\")\n+  , @Index(columnList = \"harvesttype\")\n+  , @Index(columnList = \"harveststyle\")\n+  , @Index(columnList = \"harvestingurl\")})\n @Entity\n @NamedQueries({\n-    @NamedQuery(name = \"HarvestingClient.findByNickname\", query=\"SELECT hc FROM HarvestingClient hc WHERE LOWER(hc.name)=:nickName\")\n+  @NamedQuery(name = \"HarvestingClient.findByNickname\", query = \"SELECT hc FROM HarvestingClient hc WHERE LOWER(hc.name)=:nickName\")\n })\n public class HarvestingClient implements Serializable {\n-    private static final long serialVersionUID = 1L;\n-    \n-    @Id\n-    @GeneratedValue(strategy = GenerationType.IDENTITY)\n-    private Long id;\n+  private static final long serialVersionUID = 1L;\n \n-    public Long getId() {\n-        return id;\n-    }\n+  @Id\n+  @GeneratedValue(strategy = GenerationType.IDENTITY)\n+  private Long id;\n \n-    public void setId(Long id) {\n-        this.id = id;\n-    }\n-    \n-    public static final String HARVEST_TYPE_OAI=\"oai\";\n-    public static final String HARVEST_TYPE_NESSTAR=\"nesstar\";\n-    \n-    \n-    /* \n-     * Different harvesting \"styles\". These define how we format and \n-     * display meatada harvested from various remote resources. \n-    */\n-    public static final String HARVEST_STYLE_DATAVERSE=\"dataverse\";\n-    // pre-4.0 remote Dataverse:\n-    public static final String HARVEST_STYLE_VDC=\"vdc\";\n-    public static final String HARVEST_STYLE_ICPSR=\"icpsr\";\n-    public static final String HARVEST_STYLE_NESSTAR=\"nesstar\";\n-    public static final String HARVEST_STYLE_ROPER=\"roper\";\n-    public static final String HARVEST_STYLE_HGL=\"hgl\";\n-    public static final String HARVEST_STYLE_DEFAULT=\"default\";\n-    \n-    public static final String HARVEST_STYLE_DESCRIPTION_DATAVERSE=\"Dataverse v4+\";\n-    // pre-4.0 remote Dataverse:\n-    public static final String HARVEST_STYLE_DESCRIPTION_VDC=\"DVN, v2-3\";\n-    public static final String HARVEST_STYLE_DESCRIPTION_ICPSR=\"ICPSR\";\n-    public static final String HARVEST_STYLE_DESCRIPTION_NESSTAR=\"Nesstar archive\";\n-    public static final String HARVEST_STYLE_DESCRIPTION_ROPER=\"Roper Archive\";\n-    public static final String HARVEST_STYLE_DESCRIPTION_HGL=\"HGL\";\n-    public static final String HARVEST_STYLE_DESCRIPTION_DEFAULT=\"Generic OAI archive\";\n-    \n-    \n-    public static final List<String> HARVEST_STYLE_LIST = Arrays.asList(HARVEST_STYLE_DATAVERSE, HARVEST_STYLE_VDC, HARVEST_STYLE_ICPSR, HARVEST_STYLE_NESSTAR, HARVEST_STYLE_ROPER, HARVEST_STYLE_HGL, HARVEST_STYLE_DEFAULT);\n-    public static final List<String> HARVEST_STYLE_DESCRIPTION_LIST = Arrays.asList(HARVEST_STYLE_DESCRIPTION_DATAVERSE, HARVEST_STYLE_DESCRIPTION_VDC, HARVEST_STYLE_DESCRIPTION_ICPSR, HARVEST_STYLE_DESCRIPTION_NESSTAR, HARVEST_STYLE_DESCRIPTION_ROPER, HARVEST_STYLE_DESCRIPTION_HGL, HARVEST_STYLE_DESCRIPTION_DEFAULT);\n-    \n-    public static final Map<String, String> HARVEST_STYLE_INFOMAP = new LinkedHashMap<String, String>();\n-    \n-    static {\n-        for (int i=0; i< HARVEST_STYLE_LIST.size(); i++){\n-            HARVEST_STYLE_INFOMAP.put(HARVEST_STYLE_LIST.get(i), HARVEST_STYLE_DESCRIPTION_LIST.get(i));\n-        }\n-    }\n-    \n+  public Long getId() {\n+    return id;\n+  }\n \n-    \n-    public static final String REMOTE_ARCHIVE_URL_LEVEL_DATAVERSE=\"dataverse\";\n-    public static final String REMOTE_ARCHIVE_URL_LEVEL_DATASET=\"dataset\";\n-    public static final String REMOTE_ARCHIVE_URL_LEVEL_FILE=\"file\";\n-    \n-    public static final String SCHEDULE_PERIOD_DAILY=\"daily\";\n-    public static final String SCHEDULE_PERIOD_WEEKLY=\"weekly\";\n-    \n-    public HarvestingClient() {\n-        this.harvestType = HARVEST_TYPE_OAI; // default harvestType\n-        this.harvestStyle = HARVEST_STYLE_DATAVERSE; // default harvestStyle\n-    }\n+  public void setId(Long id) {\n+    this.id = id;\n+  }\n \n-    \n-    @ManyToOne\n-    @JoinColumn(name=\"dataverse_id\")\n-    private  Dataverse dataverse;\n+  public static final String HARVEST_TYPE_OAI = \"oai\";\n+  public static final String HARVEST_TYPE_NESSTAR = \"nesstar\";\n \n-    public Dataverse getDataverse() {\n-        return this.dataverse;\n-    }\n \n-    public void setDataverse(Dataverse dataverse) {\n-        this.dataverse = dataverse;\n-    }\n+  /*\n+   * Different harvesting \"styles\". These define how we format and\n+   * display meatada harvested from various remote resources.\n+   */\n+  public static final String HARVEST_STYLE_DATAVERSE = \"dataverse\";\n+  // pre-4.0 remote Dataverse:\n+  public static final String HARVEST_STYLE_VDC = \"vdc\";\n+  public static final String HARVEST_STYLE_ICPSR = \"icpsr\";\n+  public static final String HARVEST_STYLE_NESSTAR = \"nesstar\";\n+  public static final String HARVEST_STYLE_ROPER = \"roper\";\n+  public static final String HARVEST_STYLE_HGL = \"hgl\";\n+  public static final String HARVEST_STYLE_DEFAULT = \"default\";\n \n-    @OneToMany (mappedBy=\"harvestedFrom\", cascade={CascadeType.MERGE, CascadeType.REMOVE}, orphanRemoval=true)\n-    private List<Dataset> harvestedDatasets;\n+  public static final String HARVEST_STYLE_DESCRIPTION_DATAVERSE = \"Dataverse v4+\";\n+  // pre-4.0 remote Dataverse:\n+  public static final String HARVEST_STYLE_DESCRIPTION_VDC = \"DVN, v2-3\";\n+  public static final String HARVEST_STYLE_DESCRIPTION_ICPSR = \"ICPSR\";\n+  public static final String HARVEST_STYLE_DESCRIPTION_NESSTAR = \"Nesstar archive\";\n+  public static final String HARVEST_STYLE_DESCRIPTION_ROPER = \"Roper Archive\";\n+  public static final String HARVEST_STYLE_DESCRIPTION_HGL = \"HGL\";\n+  public static final String HARVEST_STYLE_DESCRIPTION_DEFAULT = \"Generic OAI archive\";\n \n-    public List<Dataset> getHarvestedDatasets() {\n-        return this.harvestedDatasets;\n-    }\n \n-    public void setHarvestedDatasets(List<Dataset> harvestedDatasets) {\n-        this.harvestedDatasets = harvestedDatasets;\n-    }\n-    \n-    @NotBlank(message = \"{user.enterNickname}\")\n-    @Column(nullable = false, unique=true)\n-    @Size(max = 30, message = \"{user.nicknameLength}\")\n-    @Pattern.List({@Pattern(regexp = \"[a-zA-Z0-9\\\\_\\\\-]*\", message = \"{dataverse.nameIllegalCharacters}\"),\n-        @Pattern(regexp=\".*\\\\D.*\", message=\"{user.nicknameNotnumber}\")})\n-    private String name; \n-    \n-    public String getName() {\n-        return name;\n-    }\n-    \n-    public void setName(String name) {\n-        this.name = name; \n-    }\n-    \n-    private String harvestType;\n+  public static final List<String> HARVEST_STYLE_LIST = Arrays\n+    .asList(HARVEST_STYLE_DATAVERSE, HARVEST_STYLE_VDC, HARVEST_STYLE_ICPSR, HARVEST_STYLE_NESSTAR, HARVEST_STYLE_ROPER,\n+      HARVEST_STYLE_HGL, HARVEST_STYLE_DEFAULT);\n+  public static final List<String> HARVEST_STYLE_DESCRIPTION_LIST = Arrays\n+    .asList(HARVEST_STYLE_DESCRIPTION_DATAVERSE, HARVEST_STYLE_DESCRIPTION_VDC, HARVEST_STYLE_DESCRIPTION_ICPSR,\n+      HARVEST_STYLE_DESCRIPTION_NESSTAR, HARVEST_STYLE_DESCRIPTION_ROPER, HARVEST_STYLE_DESCRIPTION_HGL,\n+      HARVEST_STYLE_DESCRIPTION_DEFAULT);\n \n-    public String getHarvestType() {\n-        return harvestType;\n-    }\n+  public static final Map<String, String> HARVEST_STYLE_INFOMAP = new LinkedHashMap<String, String>();\n \n-    public void setHarvestType(String harvestType) {\n-        this.harvestType = harvestType;\n+  static {\n+    for (int i = 0; i < HARVEST_STYLE_LIST.size(); i++) {\n+      HARVEST_STYLE_INFOMAP.put(HARVEST_STYLE_LIST.get(i), HARVEST_STYLE_DESCRIPTION_LIST.get(i));\n     }\n+  }\n \n-    public boolean isOai() {\n-        return HARVEST_TYPE_OAI.equals(harvestType);\n-    }\n-    \n-    private String harvestStyle;\n \n-    public String getHarvestStyle() {\n-        return harvestStyle;\n-    }\n+  public static final String REMOTE_ARCHIVE_URL_LEVEL_DATAVERSE = \"dataverse\";\n+  public static final String REMOTE_ARCHIVE_URL_LEVEL_DATASET = \"dataset\";\n+  public static final String REMOTE_ARCHIVE_URL_LEVEL_FILE = \"file\";\n \n-    public void setHarvestStyle(String harvestStyle) {\n-        this.harvestStyle = harvestStyle;\n-    }\n-    \n-    private String harvestingUrl;\n+  public static final String SCHEDULE_PERIOD_DAILY = \"daily\";\n+  public static final String SCHEDULE_PERIOD_WEEKLY = \"weekly\";\n \n-    public String getHarvestingUrl() {\n-        return this.harvestingUrl;\n-    }\n+  public HarvestingClient() {\n+    this.harvestType = HARVEST_TYPE_OAI; // default harvestType\n+    this.harvestStyle = HARVEST_STYLE_DATAVERSE; // default harvestStyle\n+  }\n \n-    public void setHarvestingUrl(String harvestingUrl) {\n-        this.harvestingUrl = harvestingUrl.trim();\n-    }\n-    \n-    private String archiveUrl; \n-    \n-    public String getArchiveUrl() {\n-        return this.archiveUrl;\n-    }\n-    \n-    public void setArchiveUrl(String archiveUrl) {\n-        this.archiveUrl = archiveUrl; \n-    }\n \n-    @Column(columnDefinition=\"TEXT\")\n-    private String archiveDescription; \n-    \n-    public String getArchiveDescription() {\n-        return this.archiveDescription;\n-    }\n-    \n-    public void setArchiveDescription(String archiveDescription) {\n-        this.archiveDescription = archiveDescription; \n-    }\n-    \n-    private String harvestingSet;\n+  @ManyToOne\n+  @JoinColumn(name = \"dataverse_id\")\n+  private Dataverse dataverse;\n \n-    public String getHarvestingSet() {\n-        return this.harvestingSet;\n-    }\n+  public Dataverse getDataverse() {\n+    return this.dataverse;\n+  }\n \n-    public void setHarvestingSet(String harvestingSet) {\n-        this.harvestingSet = harvestingSet;\n-    }\n-    \n-    private String metadataPrefix;\n-    \n-    public String getMetadataPrefix() {\n-        return metadataPrefix;\n-    }\n+  public void setDataverse(Dataverse dataverse) {\n+    this.dataverse = dataverse;\n+  }\n \n-    public void setMetadataPrefix(String metadataPrefix) {\n-        this.metadataPrefix = metadataPrefix;\n-    }\n-    \n-    // TODO: do we need \"orphanRemoval=true\"? -- L.A. 4.4\n-    // TODO: should it be @OrderBy(\"startTime\")? -- L.A. 4.4\n-    @OneToMany(mappedBy=\"harvestingClient\", cascade={CascadeType.REMOVE, CascadeType.MERGE, CascadeType.PERSIST})\n-    @OrderBy(\"id\")\n-    private List<ClientHarvestRun> harvestHistory;\n-\n-    List<ClientHarvestRun> getRunHistory() {\n-        return harvestHistory;\n+  @OneToMany(mappedBy = \"harvestedFrom\", cascade = {CascadeType.MERGE, CascadeType.REMOVE}, orphanRemoval = true)\n+  private List<Dataset> harvestedDatasets;\n+\n+  public List<Dataset> getHarvestedDatasets() {\n+    return this.harvestedDatasets;\n+  }\n+\n+  public void setHarvestedDatasets(List<Dataset> harvestedDatasets) {\n+    this.harvestedDatasets = harvestedDatasets;\n+  }\n+\n+  @NotBlank(message = \"{user.enterNickname}\")\n+  @Column(nullable = false, unique = true)\n+  @Size(max = 30, message = \"{user.nicknameLength}\")\n+  @Pattern.List({@Pattern(regexp = \"[a-zA-Z0-9\\\\_\\\\-]*\", message = \"{dataverse.nameIllegalCharacters}\"),\n+    @Pattern(regexp = \".*\\\\D.*\", message = \"{user.nicknameNotnumber}\")})\n+  private String name;\n+\n+  public String getName() {\n+    return name;\n+  }\n+\n+  public void setName(String name) {\n+    this.name = name;\n+  }\n+\n+  private String harvestType;\n+\n+  public String getHarvestType() {\n+    return harvestType;\n+  }\n+\n+  public void setHarvestType(String harvestType) {\n+    this.harvestType = harvestType;\n+  }\n+\n+  public boolean isOai() {\n+    return HARVEST_TYPE_OAI.equals(harvestType);\n+  }\n+\n+  private String harvestStyle;\n+\n+  public String getHarvestStyle() {\n+    return harvestStyle;\n+  }\n+\n+  public void setHarvestStyle(String harvestStyle) {\n+    this.harvestStyle = harvestStyle;\n+  }\n+\n+  private String harvestingUrl;\n+\n+  public String getHarvestingUrl() {\n+    return this.harvestingUrl;\n+  }\n+\n+  public void setHarvestingUrl(String harvestingUrl) {\n+    this.harvestingUrl = harvestingUrl.trim();\n+  }\n+\n+  private String archiveUrl;\n+\n+  public String getArchiveUrl() {\n+    return this.archiveUrl;\n+  }\n+\n+  public void setArchiveUrl(String archiveUrl) {\n+    this.archiveUrl = archiveUrl;\n+  }\n+\n+  @Column(columnDefinition = \"TEXT\")\n+  private String archiveDescription;\n+\n+  public String getArchiveDescription() {\n+    return this.archiveDescription;\n+  }\n+\n+  public void setArchiveDescription(String archiveDescription) {\n+    this.archiveDescription = archiveDescription;\n+  }\n+\n+  private String harvestingSet;\n+\n+  public String getHarvestingSet() {\n+    return this.harvestingSet;\n+  }\n+\n+  public void setHarvestingSet(String harvestingSet) {\n+    this.harvestingSet = harvestingSet;\n+  }\n+\n+  private String metadataPrefix;\n+\n+  public String getMetadataPrefix() {\n+    return metadataPrefix;\n+  }\n+\n+  public void setMetadataPrefix(String metadataPrefix) {\n+    this.metadataPrefix = metadataPrefix;\n+  }\n+\n+  // TODO: do we need \"orphanRemoval=true\"? -- L.A. 4.4\n+  // TODO: should it be @OrderBy(\"startTime\")? -- L.A. 4.4\n+  @OneToMany(mappedBy = \"harvestingClient\", cascade = {CascadeType.REMOVE, CascadeType.MERGE, CascadeType.PERSIST})\n+  @OrderBy(\"id\")\n+  private List<ClientHarvestRun> harvestHistory;\n+\n+  List<ClientHarvestRun> getRunHistory() {\n+    return harvestHistory;\n+  }\n+\n+  void setRunHistory(List<ClientHarvestRun> harvestHistory) {\n+    this.harvestHistory = harvestHistory;\n+  }\n+\n+  public String getLastResult() {\n+    if (harvestHistory == null || harvestHistory.size() == 0) {\n+      return null;\n     }\n-    \n-    void setRunHistory(List<ClientHarvestRun> harvestHistory) {\n-        this.harvestHistory = harvestHistory;\n+    return harvestHistory.get(harvestHistory.size() - 1).getResultLabel();\n+  }\n+\n+  public ClientHarvestRun getLastRun() {\n+    if (harvestHistory == null || harvestHistory.size() == 0) {\n+      return null;\n     }\n-    \n-    public String getLastResult() {\n-        if (harvestHistory == null || harvestHistory.size() == 0) {\n-            return null; \n-        }\n-        return harvestHistory.get(harvestHistory.size() - 1).getResultLabel();\n+\n+    return harvestHistory.get(harvestHistory.size() - 1);\n+  }\n+\n+  public ClientHarvestRun getLastSuccessfulRun() {\n+    if (harvestHistory == null || harvestHistory.size() == 0) {\n+      return null;\n     }\n-    \n-    public ClientHarvestRun getLastRun() {\n-        if (harvestHistory == null || harvestHistory.size() == 0) {\n-            return null; \n-        }\n-        \n-        return harvestHistory.get(harvestHistory.size() - 1);\n+\n+    int i = harvestHistory.size() - 1;\n+\n+    while (i > -1) {\n+      if (harvestHistory.get(i).isSuccess()) {\n+        return harvestHistory.get(i);\n+      }\n+      i--;\n     }\n-    \n-    public ClientHarvestRun getLastSuccessfulRun() {\n-        if (harvestHistory == null || harvestHistory.size() == 0) {\n-            return null; \n-        }\n-        \n-        int i = harvestHistory.size() - 1;\n-        \n-        while (i > -1) {\n-            if (harvestHistory.get(i).isSuccess()) {\n-                return harvestHistory.get(i);\n-            }\n-            i--;\n-        }\n-        \n-        return null; \n+\n+    return null;\n+  }\n+\n+  ClientHarvestRun getLastNonEmptyRun() {\n+    if (harvestHistory == null || harvestHistory.size() == 0) {\n+      return null;\n     }\n-    \n-    ClientHarvestRun getLastNonEmptyRun() {\n-        if (harvestHistory == null || harvestHistory.size() == 0) {\n-            return null; \n-        }\n-        \n-        int i = harvestHistory.size() - 1;\n-        \n-        while (i > -1) {\n-            if (harvestHistory.get(i).isSuccess()) {\n-                if (harvestHistory.get(i).getHarvestedDatasetCount().longValue() > 0 ||\n-                    harvestHistory.get(i).getDeletedDatasetCount().longValue() > 0) {\n-                    return harvestHistory.get(i);\n-                }\n-            }\n-            i--;\n+\n+    int i = harvestHistory.size() - 1;\n+\n+    while (i > -1) {\n+      if (harvestHistory.get(i).isSuccess()) {\n+        if (harvestHistory.get(i).getHarvestedDatasetCount().longValue() > 0 ||\n+          harvestHistory.get(i).getDeletedDatasetCount().longValue() > 0) {\n+          return harvestHistory.get(i);\n         }\n-        return null; \n+      }\n+      i--;\n     }\n-    \n-    public Date getLastHarvestTime() {\n-        ClientHarvestRun lastHarvest = getLastRun();\n-        if ( lastHarvest != null) {\n-            return lastHarvest.getStartTime();\n-        }\n-        return null;\n+    return null;\n+  }\n+\n+  public Date getLastHarvestTime() {\n+    ClientHarvestRun lastHarvest = getLastRun();\n+    if (lastHarvest != null) {\n+      return lastHarvest.getStartTime();\n     }\n-    \n-    public Date getLastSuccessfulHarvestTime() {\n-        ClientHarvestRun lastSuccessfulHarvest = getLastSuccessfulRun();\n-        if ( lastSuccessfulHarvest != null) {\n-            return lastSuccessfulHarvest.getStartTime();\n-        }\n-        return null;\n+    return null;\n+  }\n+\n+  public Date getLastSuccessfulHarvestTime() {\n+    ClientHarvestRun lastSuccessfulHarvest = getLastSuccessfulRun();\n+    if (lastSuccessfulHarvest != null) {\n+      return lastSuccessfulHarvest.getStartTime();\n     }\n-    \n-    public Date getLastNonEmptyHarvestTime() {\n-        ClientHarvestRun lastNonEmptyHarvest = getLastNonEmptyRun();\n-        if ( lastNonEmptyHarvest != null) {\n-            return lastNonEmptyHarvest.getStartTime();\n-        }\n-        return null;\n+    return null;\n+  }\n+\n+  public Date getLastNonEmptyHarvestTime() {\n+    ClientHarvestRun lastNonEmptyHarvest = getLastNonEmptyRun();\n+    if (lastNonEmptyHarvest != null) {\n+      return lastNonEmptyHarvest.getStartTime();\n     }\n-    \n-    public Long getLastHarvestedDatasetCount() {\n-        ClientHarvestRun lastNonEmptyHarvest = getLastNonEmptyRun();\n-        if ( lastNonEmptyHarvest != null) {\n-            return lastNonEmptyHarvest.getHarvestedDatasetCount();\n-        }\n-        return null;\n+    return null;\n+  }\n+\n+  public Long getLastHarvestedDatasetCount() {\n+    ClientHarvestRun lastNonEmptyHarvest = getLastNonEmptyRun();\n+    if (lastNonEmptyHarvest != null) {\n+      return lastNonEmptyHarvest.getHarvestedDatasetCount();\n     }\n-    \n-    public Long getLastFailedDatasetCount() {\n-        ClientHarvestRun lastNonEmptyHarvest = getLastNonEmptyRun();\n-        if ( lastNonEmptyHarvest != null) {\n-            return lastNonEmptyHarvest.getFailedDatasetCount();\n-        }\n-        return null;\n+    return null;\n+  }\n+\n+  public Long getLastFailedDatasetCount() {\n+    ClientHarvestRun lastNonEmptyHarvest = getLastNonEmptyRun();\n+    if (lastNonEmptyHarvest != null) {\n+      return lastNonEmptyHarvest.getFailedDatasetCount();\n     }\n-    \n-    public Long getLastDeletedDatasetCount() {\n-        ClientHarvestRun lastNonEmptyHarvest = getLastNonEmptyRun();\n-        if ( lastNonEmptyHarvest != null) {\n-            return lastNonEmptyHarvest.getDeletedDatasetCount();\n-        }\n-        return null;\n+    return null;\n+  }\n+\n+  public Long getLastDeletedDatasetCount() {\n+    ClientHarvestRun lastNonEmptyHarvest = getLastNonEmptyRun();\n+    if (lastNonEmptyHarvest != null) {\n+      return lastNonEmptyHarvest.getDeletedDatasetCount();\n     }\n+    return null;\n+  }\n     \n     /* move the fields below to the new HarvestingClientRun class: \n     private String harvestResult;\n@@ -432,109 +436,110 @@ public class HarvestingClient implements Serializable {\n         this.deletedDatasetCount = deletedDatasetCount;\n     }\n     */\n-    \n-    private boolean scheduled;\n \n-    public boolean isScheduled() {\n-        return this.scheduled;\n-    }\n+  private boolean scheduled;\n \n-    public void setScheduled(boolean scheduled) {\n-        this.scheduled = scheduled;\n-    }\n-    \n-    private String schedulePeriod;\n-    \n-    public String getSchedulePeriod() {\n-        return schedulePeriod;\n-    }\n+  public boolean isScheduled() {\n+    return this.scheduled;\n+  }\n \n-    public void setSchedulePeriod(String schedulePeriod) {\n-        this.schedulePeriod = schedulePeriod;\n-    }\n-    \n-    private Integer scheduleHourOfDay;\n+  public void setScheduled(boolean scheduled) {\n+    this.scheduled = scheduled;\n+  }\n \n-    public Integer getScheduleHourOfDay() {\n-        return scheduleHourOfDay;\n-    }\n+  private String schedulePeriod;\n \n-    public void setScheduleHourOfDay(Integer scheduleHourOfDay) {\n-        this.scheduleHourOfDay = scheduleHourOfDay;\n-    }\n+  public String getSchedulePeriod() {\n+    return schedulePeriod;\n+  }\n \n-    private Integer scheduleDayOfWeek;\n-    \n-    public Integer getScheduleDayOfWeek() {\n-        return scheduleDayOfWeek;\n-    }\n+  public void setSchedulePeriod(String schedulePeriod) {\n+    this.schedulePeriod = schedulePeriod;\n+  }\n \n-    public void setScheduleDayOfWeek(Integer scheduleDayOfWeek) {\n-        this.scheduleDayOfWeek = scheduleDayOfWeek;\n-    }\n-    \n-    public String getScheduleDescription() {\n-        Date date = new Date();\n-        Calendar cal = new GregorianCalendar();\n-        cal.setTime(date);\n-        SimpleDateFormat weeklyFormat = new SimpleDateFormat(\" E h a \");\n-        SimpleDateFormat  dailyFormat = new SimpleDateFormat(\" h a \");\n-        String desc = \"Not Scheduled\";\n-        if (schedulePeriod!=null && schedulePeriod!=\"\") {\n-            cal.set(Calendar.HOUR_OF_DAY, scheduleHourOfDay);\n-            if (schedulePeriod.equals(this.SCHEDULE_PERIOD_WEEKLY)) {\n-                cal.set(Calendar.DAY_OF_WEEK,scheduleDayOfWeek);\n-                desc=\"Weekly, \"+weeklyFormat.format(cal.getTime());\n-            } else {\n-                desc=\"Daily, \"+dailyFormat.format(cal.getTime());\n-            }\n-        }\n-        return desc;\n-    }\n-    private boolean harvestingNow;\n+  private Integer scheduleHourOfDay;\n \n-    public boolean isHarvestingNow() {\n-        return this.harvestingNow;\n-    }\n+  public Integer getScheduleHourOfDay() {\n+    return scheduleHourOfDay;\n+  }\n \n-    public void setHarvestingNow(boolean harvestingNow) {\n-        this.harvestingNow = harvestingNow;\n-    }\n-    \n-    private boolean deleted;\n+  public void setScheduleHourOfDay(Integer scheduleHourOfDay) {\n+    this.scheduleHourOfDay = scheduleHourOfDay;\n+  }\n \n-    \n-    public boolean isDeleteInProgress() {\n-        return this.deleted;\n+  private Integer scheduleDayOfWeek;\n+\n+  public Integer getScheduleDayOfWeek() {\n+    return scheduleDayOfWeek;\n+  }\n+\n+  public void setScheduleDayOfWeek(Integer scheduleDayOfWeek) {\n+    this.scheduleDayOfWeek = scheduleDayOfWeek;\n+  }\n+\n+  public String getScheduleDescription() {\n+    Date date = new Date();\n+    Calendar cal = new GregorianCalendar();\n+    cal.setTime(date);\n+    SimpleDateFormat weeklyFormat = new SimpleDateFormat(\" E h a \");\n+    SimpleDateFormat dailyFormat = new SimpleDateFormat(\" h a \");\n+    String desc = \"Not Scheduled\";\n+    if (schedulePeriod != null && schedulePeriod != \"\") {\n+      cal.set(Calendar.HOUR_OF_DAY, scheduleHourOfDay);\n+      if (schedulePeriod.equals(this.SCHEDULE_PERIOD_WEEKLY)) {\n+        cal.set(Calendar.DAY_OF_WEEK, scheduleDayOfWeek);\n+        desc = \"Weekly, \" + weeklyFormat.format(cal.getTime());\n+      } else {\n+        desc = \"Daily, \" + dailyFormat.format(cal.getTime());\n+      }\n     }\n+    return desc;\n+  }\n+\n+  private boolean harvestingNow;\n+\n+  public boolean isHarvestingNow() {\n+    return this.harvestingNow;\n+  }\n+\n+  public void setHarvestingNow(boolean harvestingNow) {\n+    this.harvestingNow = harvestingNow;\n+  }\n+\n+  private boolean deleted;\n \n-    public void setDeleteInProgress(boolean deleteInProgress) {\n-        this.deleted = deleteInProgress; \n+\n+  public boolean isDeleteInProgress() {\n+    return this.deleted;\n+  }\n+\n+  public void setDeleteInProgress(boolean deleteInProgress) {\n+    this.deleted = deleteInProgress;\n+  }\n+\n+  @Override\n+  public int hashCode() {\n+    int hash = 0;\n+    hash += (id != null ? id.hashCode() : 0);\n+    return hash;\n+  }\n+\n+  @Override\n+  public boolean equals(Object object) {\n+    // TODO: Warning - this method won't work in the case the id fields are not set\n+    if (!(object instanceof HarvestingClient)) {\n+      return false;\n     }\n-    \n-    @Override\n-    public int hashCode() {\n-        int hash = 0;\n-        hash += (id != null ? id.hashCode() : 0);\n-        return hash;\n+    HarvestingClient other = (HarvestingClient) object;\n+    if ((this.id == null && other.id != null) || (this.id != null && !this.id.equals(other.id))) {\n+      return false;\n     }\n+    return true;\n+  }\n \n-    @Override\n-    public boolean equals(Object object) {\n-        // TODO: Warning - this method won't work in the case the id fields are not set\n-        if (!(object instanceof HarvestingClient)) {\n-            return false;\n-        }\n-        HarvestingClient other = (HarvestingClient) object;\n-        if ((this.id == null && other.id != null) || (this.id != null && !this.id.equals(other.id))) {\n-            return false;\n-        }\n-        return true;\n-    }\n+  @Override\n+  public String toString() {\n+    return \"edu.harvard.iq.dataverse.harvest.client.HarvestingClient[ id=\" + id + \" ]\";\n+  }\n \n-    @Override\n-    public String toString() {\n-        return \"edu.harvard.iq.dataverse.harvest.client.HarvestingClient[ id=\" + id + \" ]\";\n-    }\n-    \n }\n",
            "diff_size": 543
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/118/HarvestingClient.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/codebuff/118/HarvestingClient.java\nindex 32365e17852..be80e86b61a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/118/HarvestingClient.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/codebuff/118/HarvestingClient.java\n@@ -10,7 +10,6 @@ import edu.harvard.iq.dataverse.Dataverse;\n import java.io.Serializable;\n import java.text.SimpleDateFormat;\n import java.util.Arrays;\n-\n import java.util.Calendar;\n import java.util.Date;\n import java.util.GregorianCalendar;\n@@ -43,17 +42,15 @@ import org.hibernate.validator.constraints.NotBlank;\n  * @author Leonid Andreev\n  */\n \n-@Table(indexes = {@Index(columnList=\"dataverse_id\")\n-\t\t, @Index(columnList=\"harvesttype\")\n-\t\t, @Index(columnList=\"harveststyle\")\n-\t\t, @Index(columnList=\"harvestingurl\")})\n+\n+@Table(indexes = {@Index(columnList = \"dataverse_id\"), @Index(columnList = \"harvesttype\"), @Index(columnList = \"harveststyle\"), @Index(columnList = \"harvestingurl\")})\n @Entity\n-@NamedQueries({\n-    @NamedQuery(name = \"HarvestingClient.findByNickname\", query=\"SELECT hc FROM HarvestingClient hc WHERE LOWER(hc.name)=:nickName\")\n-})\n+@NamedQueries({@NamedQuery(name = \"HarvestingClient.findByNickname\",\n+    query = \"SELECT hc FROM HarvestingClient hc WHERE LOWER(hc.name)=:nickName\")})\n public class HarvestingClient implements Serializable {\n+\n     private static final long serialVersionUID = 1L;\n-    \n+\n     @Id\n     @GeneratedValue(strategy = GenerationType.IDENTITY)\n     private Long id;\n@@ -65,63 +62,77 @@ public class HarvestingClient implements Serializable {\n     public void setId(Long id) {\n         this.id = id;\n     }\n-    \n-    public static final String HARVEST_TYPE_OAI=\"oai\";\n-    public static final String HARVEST_TYPE_NESSTAR=\"nesstar\";\n+\n+    public static final String HARVEST_TYPE_OAI = \"oai\";\n+\n+    public static final String HARVEST_TYPE_NESSTAR = \"nesstar\";\n     \n     \n     /* \n      * Different harvesting \"styles\". These define how we format and \n      * display meatada harvested from various remote resources. \n     */\n-    public static final String HARVEST_STYLE_DATAVERSE=\"dataverse\";\n+\n+    public static final String HARVEST_STYLE_DATAVERSE = \"dataverse\";\n     // pre-4.0 remote Dataverse:\n-    public static final String HARVEST_STYLE_VDC=\"vdc\";\n-    public static final String HARVEST_STYLE_ICPSR=\"icpsr\";\n-    public static final String HARVEST_STYLE_NESSTAR=\"nesstar\";\n-    public static final String HARVEST_STYLE_ROPER=\"roper\";\n-    public static final String HARVEST_STYLE_HGL=\"hgl\";\n-    public static final String HARVEST_STYLE_DEFAULT=\"default\";\n-    \n-    public static final String HARVEST_STYLE_DESCRIPTION_DATAVERSE=\"Dataverse v4+\";\n+\n+    public static final String HARVEST_STYLE_VDC = \"vdc\";\n+\n+    public static final String HARVEST_STYLE_ICPSR = \"icpsr\";\n+\n+    public static final String HARVEST_STYLE_NESSTAR = \"nesstar\";\n+\n+    public static final String HARVEST_STYLE_ROPER = \"roper\";\n+\n+    public static final String HARVEST_STYLE_HGL = \"hgl\";\n+\n+    public static final String HARVEST_STYLE_DEFAULT = \"default\";\n+\n+    public static final String HARVEST_STYLE_DESCRIPTION_DATAVERSE = \"Dataverse v4+\";\n     // pre-4.0 remote Dataverse:\n-    public static final String HARVEST_STYLE_DESCRIPTION_VDC=\"DVN, v2-3\";\n-    public static final String HARVEST_STYLE_DESCRIPTION_ICPSR=\"ICPSR\";\n-    public static final String HARVEST_STYLE_DESCRIPTION_NESSTAR=\"Nesstar archive\";\n-    public static final String HARVEST_STYLE_DESCRIPTION_ROPER=\"Roper Archive\";\n-    public static final String HARVEST_STYLE_DESCRIPTION_HGL=\"HGL\";\n-    public static final String HARVEST_STYLE_DESCRIPTION_DEFAULT=\"Generic OAI archive\";\n-    \n-    \n+\n+    public static final String HARVEST_STYLE_DESCRIPTION_VDC = \"DVN, v2-3\";\n+\n+    public static final String HARVEST_STYLE_DESCRIPTION_ICPSR = \"ICPSR\";\n+\n+    public static final String HARVEST_STYLE_DESCRIPTION_NESSTAR = \"Nesstar archive\";\n+\n+    public static final String HARVEST_STYLE_DESCRIPTION_ROPER = \"Roper Archive\";\n+\n+    public static final String HARVEST_STYLE_DESCRIPTION_HGL = \"HGL\";\n+\n+    public static final String HARVEST_STYLE_DESCRIPTION_DEFAULT = \"Generic OAI archive\";\n+\n     public static final List<String> HARVEST_STYLE_LIST = Arrays.asList(HARVEST_STYLE_DATAVERSE, HARVEST_STYLE_VDC, HARVEST_STYLE_ICPSR, HARVEST_STYLE_NESSTAR, HARVEST_STYLE_ROPER, HARVEST_STYLE_HGL, HARVEST_STYLE_DEFAULT);\n+\n     public static final List<String> HARVEST_STYLE_DESCRIPTION_LIST = Arrays.asList(HARVEST_STYLE_DESCRIPTION_DATAVERSE, HARVEST_STYLE_DESCRIPTION_VDC, HARVEST_STYLE_DESCRIPTION_ICPSR, HARVEST_STYLE_DESCRIPTION_NESSTAR, HARVEST_STYLE_DESCRIPTION_ROPER, HARVEST_STYLE_DESCRIPTION_HGL, HARVEST_STYLE_DESCRIPTION_DEFAULT);\n-    \n+\n     public static final Map<String, String> HARVEST_STYLE_INFOMAP = new LinkedHashMap<String, String>();\n-    \n+\n     static {\n-        for (int i=0; i< HARVEST_STYLE_LIST.size(); i++){\n+        for (int i = 0; i < HARVEST_STYLE_LIST.size(); i++) {\n             HARVEST_STYLE_INFOMAP.put(HARVEST_STYLE_LIST.get(i), HARVEST_STYLE_DESCRIPTION_LIST.get(i));\n         }\n     }\n-    \n \n-    \n-    public static final String REMOTE_ARCHIVE_URL_LEVEL_DATAVERSE=\"dataverse\";\n-    public static final String REMOTE_ARCHIVE_URL_LEVEL_DATASET=\"dataset\";\n-    public static final String REMOTE_ARCHIVE_URL_LEVEL_FILE=\"file\";\n-    \n-    public static final String SCHEDULE_PERIOD_DAILY=\"daily\";\n-    public static final String SCHEDULE_PERIOD_WEEKLY=\"weekly\";\n-    \n+    public static final String REMOTE_ARCHIVE_URL_LEVEL_DATAVERSE = \"dataverse\";\n+\n+    public static final String REMOTE_ARCHIVE_URL_LEVEL_DATASET = \"dataset\";\n+\n+    public static final String REMOTE_ARCHIVE_URL_LEVEL_FILE = \"file\";\n+\n+    public static final String SCHEDULE_PERIOD_DAILY = \"daily\";\n+\n+    public static final String SCHEDULE_PERIOD_WEEKLY = \"weekly\";\n+\n     public HarvestingClient() {\n         this.harvestType = HARVEST_TYPE_OAI; // default harvestType\n         this.harvestStyle = HARVEST_STYLE_DATAVERSE; // default harvestStyle\n     }\n \n-    \n     @ManyToOne\n-    @JoinColumn(name=\"dataverse_id\")\n-    private  Dataverse dataverse;\n+    @JoinColumn(name = \"dataverse_id\")\n+    private Dataverse dataverse;\n \n     public Dataverse getDataverse() {\n         return this.dataverse;\n@@ -131,7 +142,7 @@ public class HarvestingClient implements Serializable {\n         this.dataverse = dataverse;\n     }\n \n-    @OneToMany (mappedBy=\"harvestedFrom\", cascade={CascadeType.MERGE, CascadeType.REMOVE}, orphanRemoval=true)\n+    @OneToMany(mappedBy = \"harvestedFrom\", cascade = {CascadeType.MERGE, CascadeType.REMOVE}, orphanRemoval = true)\n     private List<Dataset> harvestedDatasets;\n \n     public List<Dataset> getHarvestedDatasets() {\n@@ -141,22 +152,21 @@ public class HarvestingClient implements Serializable {\n     public void setHarvestedDatasets(List<Dataset> harvestedDatasets) {\n         this.harvestedDatasets = harvestedDatasets;\n     }\n-    \n+\n     @NotBlank(message = \"{user.enterNickname}\")\n-    @Column(nullable = false, unique=true)\n+    @Column(nullable = false, unique = true)\n     @Size(max = 30, message = \"{user.nicknameLength}\")\n-    @Pattern.List({@Pattern(regexp = \"[a-zA-Z0-9\\\\_\\\\-]*\", message = \"{dataverse.nameIllegalCharacters}\"),\n-        @Pattern(regexp=\".*\\\\D.*\", message=\"{user.nicknameNotnumber}\")})\n-    private String name; \n-    \n+    @Pattern.List({@Pattern(regexp = \"[a-zA-Z0-9\\\\_\\\\-]*\", message = \"{dataverse.nameIllegalCharacters}\"), @Pattern(regexp = \".*\\\\D.*\", message = \"{user.nicknameNotnumber}\")})\n+    private String name;\n+\n     public String getName() {\n         return name;\n     }\n-    \n+\n     public void setName(String name) {\n-        this.name = name; \n+        this.name = name;\n     }\n-    \n+\n     private String harvestType;\n \n     public String getHarvestType() {\n@@ -170,7 +180,7 @@ public class HarvestingClient implements Serializable {\n     public boolean isOai() {\n         return HARVEST_TYPE_OAI.equals(harvestType);\n     }\n-    \n+\n     private String harvestStyle;\n \n     public String getHarvestStyle() {\n@@ -180,7 +190,7 @@ public class HarvestingClient implements Serializable {\n     public void setHarvestStyle(String harvestStyle) {\n         this.harvestStyle = harvestStyle;\n     }\n-    \n+\n     private String harvestingUrl;\n \n     public String getHarvestingUrl() {\n@@ -190,28 +200,28 @@ public class HarvestingClient implements Serializable {\n     public void setHarvestingUrl(String harvestingUrl) {\n         this.harvestingUrl = harvestingUrl.trim();\n     }\n-    \n-    private String archiveUrl; \n-    \n+\n+    private String archiveUrl;\n+\n     public String getArchiveUrl() {\n         return this.archiveUrl;\n     }\n-    \n+\n     public void setArchiveUrl(String archiveUrl) {\n-        this.archiveUrl = archiveUrl; \n+        this.archiveUrl = archiveUrl;\n     }\n \n-    @Column(columnDefinition=\"TEXT\")\n-    private String archiveDescription; \n-    \n+    @Column(columnDefinition = \"TEXT\")\n+    private String archiveDescription;\n+\n     public String getArchiveDescription() {\n         return this.archiveDescription;\n     }\n-    \n+\n     public void setArchiveDescription(String archiveDescription) {\n-        this.archiveDescription = archiveDescription; \n+        this.archiveDescription = archiveDescription;\n     }\n-    \n+\n     private String harvestingSet;\n \n     public String getHarvestingSet() {\n@@ -221,9 +231,9 @@ public class HarvestingClient implements Serializable {\n     public void setHarvestingSet(String harvestingSet) {\n         this.harvestingSet = harvestingSet;\n     }\n-    \n+\n     private String metadataPrefix;\n-    \n+\n     public String getMetadataPrefix() {\n         return metadataPrefix;\n     }\n@@ -234,112 +244,107 @@ public class HarvestingClient implements Serializable {\n     \n     // TODO: do we need \"orphanRemoval=true\"? -- L.A. 4.4\n     // TODO: should it be @OrderBy(\"startTime\")? -- L.A. 4.4\n-    @OneToMany(mappedBy=\"harvestingClient\", cascade={CascadeType.REMOVE, CascadeType.MERGE, CascadeType.PERSIST})\n+\n+    @OneToMany(mappedBy = \"harvestingClient\", cascade = {CascadeType.REMOVE, CascadeType.MERGE, CascadeType.PERSIST})\n     @OrderBy(\"id\")\n     private List<ClientHarvestRun> harvestHistory;\n-\n     List<ClientHarvestRun> getRunHistory() {\n         return harvestHistory;\n     }\n-    \n+\n     void setRunHistory(List<ClientHarvestRun> harvestHistory) {\n         this.harvestHistory = harvestHistory;\n     }\n-    \n+\n     public String getLastResult() {\n         if (harvestHistory == null || harvestHistory.size() == 0) {\n-            return null; \n+            return null;\n         }\n         return harvestHistory.get(harvestHistory.size() - 1).getResultLabel();\n     }\n-    \n+\n     public ClientHarvestRun getLastRun() {\n         if (harvestHistory == null || harvestHistory.size() == 0) {\n-            return null; \n+            return null;\n         }\n-        \n         return harvestHistory.get(harvestHistory.size() - 1);\n     }\n-    \n+\n     public ClientHarvestRun getLastSuccessfulRun() {\n         if (harvestHistory == null || harvestHistory.size() == 0) {\n-            return null; \n+            return null;\n         }\n-        \n+\n         int i = harvestHistory.size() - 1;\n-        \n         while (i > -1) {\n             if (harvestHistory.get(i).isSuccess()) {\n                 return harvestHistory.get(i);\n             }\n             i--;\n         }\n-        \n-        return null; \n+        return null;\n     }\n-    \n+\n     ClientHarvestRun getLastNonEmptyRun() {\n         if (harvestHistory == null || harvestHistory.size() == 0) {\n-            return null; \n+            return null;\n         }\n-        \n+\n         int i = harvestHistory.size() - 1;\n-        \n         while (i > -1) {\n             if (harvestHistory.get(i).isSuccess()) {\n-                if (harvestHistory.get(i).getHarvestedDatasetCount().longValue() > 0 ||\n-                    harvestHistory.get(i).getDeletedDatasetCount().longValue() > 0) {\n+                if (harvestHistory.get(i).getHarvestedDatasetCount().longValue() > 0 || harvestHistory.get(i).getDeletedDatasetCount().longValue() > 0) {\n                     return harvestHistory.get(i);\n                 }\n             }\n             i--;\n         }\n-        return null; \n+        return null;\n     }\n-    \n+\n     public Date getLastHarvestTime() {\n         ClientHarvestRun lastHarvest = getLastRun();\n-        if ( lastHarvest != null) {\n+        if (lastHarvest != null) {\n             return lastHarvest.getStartTime();\n         }\n         return null;\n     }\n-    \n+\n     public Date getLastSuccessfulHarvestTime() {\n         ClientHarvestRun lastSuccessfulHarvest = getLastSuccessfulRun();\n-        if ( lastSuccessfulHarvest != null) {\n+        if (lastSuccessfulHarvest != null) {\n             return lastSuccessfulHarvest.getStartTime();\n         }\n         return null;\n     }\n-    \n+\n     public Date getLastNonEmptyHarvestTime() {\n         ClientHarvestRun lastNonEmptyHarvest = getLastNonEmptyRun();\n-        if ( lastNonEmptyHarvest != null) {\n+        if (lastNonEmptyHarvest != null) {\n             return lastNonEmptyHarvest.getStartTime();\n         }\n         return null;\n     }\n-    \n+\n     public Long getLastHarvestedDatasetCount() {\n         ClientHarvestRun lastNonEmptyHarvest = getLastNonEmptyRun();\n-        if ( lastNonEmptyHarvest != null) {\n+        if (lastNonEmptyHarvest != null) {\n             return lastNonEmptyHarvest.getHarvestedDatasetCount();\n         }\n         return null;\n     }\n-    \n+\n     public Long getLastFailedDatasetCount() {\n         ClientHarvestRun lastNonEmptyHarvest = getLastNonEmptyRun();\n-        if ( lastNonEmptyHarvest != null) {\n+        if (lastNonEmptyHarvest != null) {\n             return lastNonEmptyHarvest.getFailedDatasetCount();\n         }\n         return null;\n     }\n-    \n+\n     public Long getLastDeletedDatasetCount() {\n         ClientHarvestRun lastNonEmptyHarvest = getLastNonEmptyRun();\n-        if ( lastNonEmptyHarvest != null) {\n+        if (lastNonEmptyHarvest != null) {\n             return lastNonEmptyHarvest.getDeletedDatasetCount();\n         }\n         return null;\n@@ -432,7 +437,7 @@ public class HarvestingClient implements Serializable {\n         this.deletedDatasetCount = deletedDatasetCount;\n     }\n     */\n-    \n+\n     private boolean scheduled;\n \n     public boolean isScheduled() {\n@@ -442,9 +447,9 @@ public class HarvestingClient implements Serializable {\n     public void setScheduled(boolean scheduled) {\n         this.scheduled = scheduled;\n     }\n-    \n+\n     private String schedulePeriod;\n-    \n+\n     public String getSchedulePeriod() {\n         return schedulePeriod;\n     }\n@@ -452,7 +457,7 @@ public class HarvestingClient implements Serializable {\n     public void setSchedulePeriod(String schedulePeriod) {\n         this.schedulePeriod = schedulePeriod;\n     }\n-    \n+\n     private Integer scheduleHourOfDay;\n \n     public Integer getScheduleHourOfDay() {\n@@ -464,7 +469,7 @@ public class HarvestingClient implements Serializable {\n     }\n \n     private Integer scheduleDayOfWeek;\n-    \n+\n     public Integer getScheduleDayOfWeek() {\n         return scheduleDayOfWeek;\n     }\n@@ -472,25 +477,26 @@ public class HarvestingClient implements Serializable {\n     public void setScheduleDayOfWeek(Integer scheduleDayOfWeek) {\n         this.scheduleDayOfWeek = scheduleDayOfWeek;\n     }\n-    \n+\n     public String getScheduleDescription() {\n         Date date = new Date();\n         Calendar cal = new GregorianCalendar();\n         cal.setTime(date);\n         SimpleDateFormat weeklyFormat = new SimpleDateFormat(\" E h a \");\n-        SimpleDateFormat  dailyFormat = new SimpleDateFormat(\" h a \");\n+        SimpleDateFormat dailyFormat = new SimpleDateFormat(\" h a \");\n         String desc = \"Not Scheduled\";\n-        if (schedulePeriod!=null && schedulePeriod!=\"\") {\n+        if (schedulePeriod != null && schedulePeriod != \"\") {\n             cal.set(Calendar.HOUR_OF_DAY, scheduleHourOfDay);\n             if (schedulePeriod.equals(this.SCHEDULE_PERIOD_WEEKLY)) {\n-                cal.set(Calendar.DAY_OF_WEEK,scheduleDayOfWeek);\n-                desc=\"Weekly, \"+weeklyFormat.format(cal.getTime());\n+                cal.set(Calendar.DAY_OF_WEEK, scheduleDayOfWeek);\n+                desc = \"Weekly, \" + weeklyFormat.format(cal.getTime());\n             } else {\n-                desc=\"Daily, \"+dailyFormat.format(cal.getTime());\n+                desc = \"Daily, \" + dailyFormat.format(cal.getTime());\n             }\n         }\n         return desc;\n     }\n+\n     private boolean harvestingNow;\n \n     public boolean isHarvestingNow() {\n@@ -500,18 +506,17 @@ public class HarvestingClient implements Serializable {\n     public void setHarvestingNow(boolean harvestingNow) {\n         this.harvestingNow = harvestingNow;\n     }\n-    \n+\n     private boolean deleted;\n \n-    \n     public boolean isDeleteInProgress() {\n         return this.deleted;\n     }\n \n     public void setDeleteInProgress(boolean deleteInProgress) {\n-        this.deleted = deleteInProgress; \n+        this.deleted = deleteInProgress;\n     }\n-    \n+\n     @Override\n     public int hashCode() {\n         int hash = 0;\n@@ -525,6 +530,7 @@ public class HarvestingClient implements Serializable {\n         if (!(object instanceof HarvestingClient)) {\n             return false;\n         }\n+\n         HarvestingClient other = (HarvestingClient) object;\n         if ((this.id == null && other.id != null) || (this.id != null && !this.id.equals(other.id))) {\n             return false;\n@@ -536,5 +542,5 @@ public class HarvestingClient implements Serializable {\n     public String toString() {\n         return \"edu.harvard.iq.dataverse.harvest.client.HarvestingClient[ id=\" + id + \" ]\";\n     }\n-    \n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 139
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "48",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/118/HarvestingClient.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/styler_random/118/HarvestingClient.java\nindex 32365e17852..58ab57497ad 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/118/HarvestingClient.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/styler_random/118/HarvestingClient.java\n@@ -44,7 +44,7 @@ import org.hibernate.validator.constraints.NotBlank;\n  */\n \n @Table(indexes = {@Index(columnList=\"dataverse_id\")\n-\t\t, @Index(columnList=\"harvesttype\")\n+                        , @Index(columnList=\"harvesttype\")\n \t\t, @Index(columnList=\"harveststyle\")\n \t\t, @Index(columnList=\"harvestingurl\")})\n @Entity\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "48",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/118/HarvestingClient.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/styler_three_grams/118/HarvestingClient.java\nindex 32365e17852..c95cfd494f3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/118/HarvestingClient.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/styler_three_grams/118/HarvestingClient.java\n@@ -44,7 +44,7 @@ import org.hibernate.validator.constraints.NotBlank;\n  */\n \n @Table(indexes = {@Index(columnList=\"dataverse_id\")\n-\t\t, @Index(columnList=\"harvesttype\")\n+        , @Index(columnList=\"harvesttype\")\n \t\t, @Index(columnList=\"harveststyle\")\n \t\t, @Index(columnList=\"harvestingurl\")})\n @Entity\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "intellij",
        "codebuff"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ]
}
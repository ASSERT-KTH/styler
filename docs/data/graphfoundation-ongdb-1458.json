{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1458",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "38",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "59",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1458/StandardBoltConnectionTracker.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1458/StandardBoltConnectionTracker.java\nindex 4b3339657a7..a318d342dd2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1458/StandardBoltConnectionTracker.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1458/StandardBoltConnectionTracker.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.enterprise;\n \n import java.util.HashSet;\n@@ -31,33 +32,33 @@ import static java.util.stream.Collectors.toSet;\n \n public class StandardBoltConnectionTracker implements BoltConnectionTracker\n {\n-    private Map<ManagedBoltStateMachine,String> sessions = new ConcurrentHashMap<>();\n-\n-    @Override\n-    public void onRegister( ManagedBoltStateMachine machine, String owner )\n-    {\n-        sessions.put( machine, owner );\n-    }\n-\n-    @Override\n-    public void onTerminate( ManagedBoltStateMachine machine )\n-    {\n-        sessions.remove( machine );\n-    }\n-\n-    @Override\n-    public Set<ManagedBoltStateMachine> getActiveConnections()\n-    {\n-        return new HashSet<>( sessions.keySet() );\n-    }\n-\n-    @Override\n-    public Set<ManagedBoltStateMachine> getActiveConnections( String owner )\n-    {\n-        return sessions\n-                .entrySet()\n-                .stream()\n-                .filter( entry -> entry.getValue().equals( owner ) )\n-                .map( Map.Entry::getKey ).collect( toSet() );\n-    }\n+  private Map<ManagedBoltStateMachine, String> sessions = new ConcurrentHashMap<>();\n+\n+  @Override\n+  public void onRegister(ManagedBoltStateMachine machine, String owner)\n+  {\n+    sessions.put(machine, owner);\n+  }\n+\n+  @Override\n+  public void onTerminate(ManagedBoltStateMachine machine)\n+  {\n+    sessions.remove(machine);\n+  }\n+\n+  @Override\n+  public Set<ManagedBoltStateMachine> getActiveConnections()\n+  {\n+    return new HashSet<>(sessions.keySet());\n+  }\n+\n+  @Override\n+  public Set<ManagedBoltStateMachine> getActiveConnections(String owner)\n+  {\n+    return sessions\n+        .entrySet()\n+        .stream()\n+        .filter(entry -> entry.getValue().equals(owner))\n+        .map(Map.Entry::getKey).collect(toSet());\n+  }\n }\n",
            "diff_size": 30
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1458/StandardBoltConnectionTracker.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1458/StandardBoltConnectionTracker.java\nindex 4b3339657a7..527e6e5345e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1458/StandardBoltConnectionTracker.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1458/StandardBoltConnectionTracker.java\n@@ -54,10 +54,6 @@ public class StandardBoltConnectionTracker implements BoltConnectionTracker\n     @Override\n     public Set<ManagedBoltStateMachine> getActiveConnections( String owner )\n     {\n-        return sessions\n-                .entrySet()\n-                .stream()\n-                .filter( entry -> entry.getValue().equals( owner ) )\n-                .map( Map.Entry::getKey ).collect( toSet() );\n+        return sessions.entrySet().stream().filter( entry -> entry.getValue().equals( owner ) ).map( Map.Entry::getKey ).collect( toSet() );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
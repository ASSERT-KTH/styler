{
    "project_name": "IQSS-dataverse",
    "error_id": "30",
    "information": {
        "errors": [
            {
                "line": "26",
                "column": "1",
                "severity": "error",
                "message": "File contains tab characters (this is the first instance).",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
            }
        ]
    },
    "source_code": "@Entity\n@Table(indexes = {@Index(columnList=\"dataverse_id\")\n\t\t, @Index(columnList=\"harvesttype\")\n\t\t, @Index(columnList=\"harveststyle\")\n\t\t, @Index(columnList=\"harvestingurl\")})\npublic class HarvestingDataverseConfig implements Serializable {",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "27",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/30/HarvestingDataverseConfig.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/styler/30/HarvestingDataverseConfig.java\nindex 28df6e19e65..b1e0d6861a8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/30/HarvestingDataverseConfig.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/styler/30/HarvestingDataverseConfig.java\n@@ -23,7 +23,7 @@ import javax.persistence.Table;\n  */\n @Entity\n @Table(indexes = {@Index(columnList=\"dataverse_id\")\n-\t\t, @Index(columnList=\"harvesttype\")\n+                      , @Index(columnList=\"harvesttype\")\n \t\t, @Index(columnList=\"harveststyle\")\n \t\t, @Index(columnList=\"harvestingurl\")})\n public class HarvestingDataverseConfig implements Serializable {\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/30/HarvestingDataverseConfig.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/intellij/30/HarvestingDataverseConfig.java\nindex 28df6e19e65..4fa9b94c6c6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/30/HarvestingDataverseConfig.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/intellij/30/HarvestingDataverseConfig.java\n@@ -3,6 +3,7 @@\n  * To change this template file, choose Tools | Templates\n  * and open the template in the editor.\n  */\n+\n package edu.harvard.iq.dataverse;\n \n import java.io.Serializable;\n@@ -18,150 +19,146 @@ import javax.persistence.OneToOne;\n import javax.persistence.Table;\n \n /**\n- *\n  * @author Leonid Andreev\n  */\n @Entity\n-@Table(indexes = {@Index(columnList=\"dataverse_id\")\n-\t\t, @Index(columnList=\"harvesttype\")\n-\t\t, @Index(columnList=\"harveststyle\")\n-\t\t, @Index(columnList=\"harvestingurl\")})\n+@Table(indexes = {@Index(columnList = \"dataverse_id\")\n+  , @Index(columnList = \"harvesttype\")\n+  , @Index(columnList = \"harveststyle\")\n+  , @Index(columnList = \"harvestingurl\")})\n public class HarvestingDataverseConfig implements Serializable {\n-    private static final long serialVersionUID = 1L;\n-    @Id\n-    @GeneratedValue(strategy = GenerationType.AUTO)\n-    private Long id;\n+  private static final long serialVersionUID = 1L;\n+  @Id\n+  @GeneratedValue(strategy = GenerationType.AUTO)\n+  private Long id;\n \n-    public Long getId() {\n-        return id;\n-    }\n+  public Long getId() {\n+    return id;\n+  }\n \n-    public void setId(Long id) {\n-        this.id = id;\n-    }\n-    \n-    public static final String HARVEST_TYPE_OAI=\"oai\";\n-    public static final String HARVEST_TYPE_NESSTAR=\"nesstar\";\n-    \n-    public static final String HARVEST_STYLE_DATAVERSE=\"dataverse\";\n-    // pre-4.0 remote Dataverse:\n-    public static final String HARVEST_STYLE_VDC=\"vdc\";\n-    public static final String HARVEST_STYLE_ICPSR=\"icpsr\";\n-    public static final String HARVEST_STYLE_NESSTAR=\"nesstar\";\n-    public static final String HARVEST_STYLE_ROPER=\"roper\";\n-    public static final String HARVEST_STYLE_HGL=\"hgl\";\n-    public static final String HARVEST_STYLE_DEFAULT=\"default\";\n-\n-    public static final String REMOTE_ARCHIVE_URL_LEVEL_DATAVERSE=\"dataverse\";\n-    public static final String REMOTE_ARCHIVE_URL_LEVEL_DATASET=\"dataset\";\n-    public static final String REMOTE_ARCHIVE_URL_LEVEL_FILE=\"file\";\n-    \n-    public HarvestingDataverseConfig() {\n-        this.harvestType = HARVEST_TYPE_OAI; // default harvestType\n-        this.harvestStyle = HARVEST_STYLE_DATAVERSE; // default harvestStyle\n-    }\n+  public void setId(Long id) {\n+    this.id = id;\n+  }\n \n-    \n-    @OneToOne (cascade={CascadeType.REMOVE, CascadeType.MERGE, CascadeType.PERSIST })\n-    @JoinColumn(name=\"dataverse_id\")\n-    private  Dataverse dataverse;\n+  public static final String HARVEST_TYPE_OAI = \"oai\";\n+  public static final String HARVEST_TYPE_NESSTAR = \"nesstar\";\n \n-    public Dataverse getDataverse() {\n-        return this.dataverse;\n-    }\n+  public static final String HARVEST_STYLE_DATAVERSE = \"dataverse\";\n+  // pre-4.0 remote Dataverse:\n+  public static final String HARVEST_STYLE_VDC = \"vdc\";\n+  public static final String HARVEST_STYLE_ICPSR = \"icpsr\";\n+  public static final String HARVEST_STYLE_NESSTAR = \"nesstar\";\n+  public static final String HARVEST_STYLE_ROPER = \"roper\";\n+  public static final String HARVEST_STYLE_HGL = \"hgl\";\n+  public static final String HARVEST_STYLE_DEFAULT = \"default\";\n \n-    public void setDataverse(Dataverse dataverse) {\n-        this.dataverse = dataverse;\n-    }\n+  public static final String REMOTE_ARCHIVE_URL_LEVEL_DATAVERSE = \"dataverse\";\n+  public static final String REMOTE_ARCHIVE_URL_LEVEL_DATASET = \"dataset\";\n+  public static final String REMOTE_ARCHIVE_URL_LEVEL_FILE = \"file\";\n \n-    String harvestType;\n+  public HarvestingDataverseConfig() {\n+    this.harvestType = HARVEST_TYPE_OAI; // default harvestType\n+    this.harvestStyle = HARVEST_STYLE_DATAVERSE; // default harvestStyle\n+  }\n \n-    public String getHarvestType() {\n-        return harvestType;\n-    }\n \n-    public void setHarvestType(String harvestType) {\n-        this.harvestType = harvestType;\n-    }\n+  @OneToOne(cascade = {CascadeType.REMOVE, CascadeType.MERGE, CascadeType.PERSIST})\n+  @JoinColumn(name = \"dataverse_id\")\n+  private Dataverse dataverse;\n \n-    String harvestStyle;\n+  public Dataverse getDataverse() {\n+    return this.dataverse;\n+  }\n \n-    public String getHarvestStyle() {\n-        return harvestStyle;\n-    }\n+  public void setDataverse(Dataverse dataverse) {\n+    this.dataverse = dataverse;\n+  }\n \n-    public void setHarvestStyle(String harvestStyle) {\n-        this.harvestStyle = harvestStyle;\n-    }\n-    \n-    private String harvestingUrl;\n+  String harvestType;\n \n-    public String getHarvestingUrl() {\n-        return this.harvestingUrl;\n-    }\n+  public String getHarvestType() {\n+    return harvestType;\n+  }\n \n-    public void setHarvestingUrl(String harvestingUrl) {\n-        this.harvestingUrl = harvestingUrl.trim();\n-    }\n-    \n-    private String archiveUrl; \n-    \n-    public String getArchiveUrl() {\n-        return this.archiveUrl;\n-    }\n-    \n-    public void setArchiveUrl(String archiveUrl) {\n-        this.archiveUrl = archiveUrl; \n-    }\n+  public void setHarvestType(String harvestType) {\n+    this.harvestType = harvestType;\n+  }\n \n-    @Column(columnDefinition=\"TEXT\")\n-    private String archiveDescription; \n-    \n-    public String getArchiveDescription() {\n-        return this.archiveDescription;\n-    }\n-    \n-    public void setArchiveDescription(String archiveDescription) {\n-        this.archiveDescription = archiveDescription; \n-    }\n-    \n-    private String harvestingSet;\n+  String harvestStyle;\n \n-    public String getHarvestingSet() {\n-        return this.harvestingSet;\n-    }\n+  public String getHarvestStyle() {\n+    return harvestStyle;\n+  }\n \n-    public void setHarvestingSet(String harvestingSet) {\n-        this.harvestingSet = harvestingSet;\n-    }\n+  public void setHarvestStyle(String harvestStyle) {\n+    this.harvestStyle = harvestStyle;\n+  }\n \n-    \n-    \n+  private String harvestingUrl;\n \n-    \n-    @Override\n-    public int hashCode() {\n-        int hash = 0;\n-        hash += (id != null ? id.hashCode() : 0);\n-        return hash;\n-    }\n+  public String getHarvestingUrl() {\n+    return this.harvestingUrl;\n+  }\n \n-    @Override\n-    public boolean equals(Object object) {\n-        // TODO: Warning - this method won't work in the case the id fields are not set\n-        if (!(object instanceof HarvestingDataverseConfig)) {\n-            return false;\n-        }\n-        HarvestingDataverseConfig other = (HarvestingDataverseConfig) object;\n-        if ((this.id == null && other.id != null) || (this.id != null && !this.id.equals(other.id))) {\n-            return false;\n-        }\n-        return true;\n-    }\n+  public void setHarvestingUrl(String harvestingUrl) {\n+    this.harvestingUrl = harvestingUrl.trim();\n+  }\n+\n+  private String archiveUrl;\n+\n+  public String getArchiveUrl() {\n+    return this.archiveUrl;\n+  }\n+\n+  public void setArchiveUrl(String archiveUrl) {\n+    this.archiveUrl = archiveUrl;\n+  }\n+\n+  @Column(columnDefinition = \"TEXT\")\n+  private String archiveDescription;\n+\n+  public String getArchiveDescription() {\n+    return this.archiveDescription;\n+  }\n+\n+  public void setArchiveDescription(String archiveDescription) {\n+    this.archiveDescription = archiveDescription;\n+  }\n \n-    @Override\n-    public String toString() {\n-        return \"edu.harvard.iq.dataverse.HarvestingDataverse[ id=\" + id + \" ]\";\n+  private String harvestingSet;\n+\n+  public String getHarvestingSet() {\n+    return this.harvestingSet;\n+  }\n+\n+  public void setHarvestingSet(String harvestingSet) {\n+    this.harvestingSet = harvestingSet;\n+  }\n+\n+\n+  @Override\n+  public int hashCode() {\n+    int hash = 0;\n+    hash += (id != null ? id.hashCode() : 0);\n+    return hash;\n+  }\n+\n+  @Override\n+  public boolean equals(Object object) {\n+    // TODO: Warning - this method won't work in the case the id fields are not set\n+    if (!(object instanceof HarvestingDataverseConfig)) {\n+      return false;\n+    }\n+    HarvestingDataverseConfig other = (HarvestingDataverseConfig) object;\n+    if ((this.id == null && other.id != null) || (this.id != null && !this.id.equals(other.id))) {\n+      return false;\n     }\n-    \n+    return true;\n+  }\n+\n+  @Override\n+  public String toString() {\n+    return \"edu.harvard.iq.dataverse.HarvestingDataverse[ id=\" + id + \" ]\";\n+  }\n+\n }\n",
            "diff_size": 175
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/30/HarvestingDataverseConfig.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/naturalize/30/HarvestingDataverseConfig.java\nindex 28df6e19e65..768da83ea24 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/30/HarvestingDataverseConfig.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/naturalize/30/HarvestingDataverseConfig.java\n@@ -22,10 +22,7 @@ import javax.persistence.Table;\n  * @author Leonid Andreev\n  */\n @Entity\n-@Table(indexes = {@Index(columnList=\"dataverse_id\")\n-\t\t, @Index(columnList=\"harvesttype\")\n-\t\t, @Index(columnList=\"harveststyle\")\n-\t\t, @Index(columnList=\"harvestingurl\")})\n+@Table(indexes = {@Index(columnList=\"dataverse_id\"), @Index(columnList=\"harvesttype\"), @Index(columnList=\"harveststyle\"), @Index(columnList=\"harvestingurl\")})\n public class HarvestingDataverseConfig implements Serializable {\n     private static final long serialVersionUID = 1L;\n     @Id\n@@ -62,7 +59,7 @@ public class HarvestingDataverseConfig implements Serializable {\n     }\n \n     \n-    @OneToOne (cascade={CascadeType.REMOVE, CascadeType.MERGE, CascadeType.PERSIST })\n+    @OneToOne (cascade={CascadeType.REMOVE, CascadeType.MERGE, CascadeType.PERSIST})\n     @JoinColumn(name=\"dataverse_id\")\n     private  Dataverse dataverse;\n \n@@ -164,4 +161,4 @@ public class HarvestingDataverseConfig implements Serializable {\n         return \"edu.harvard.iq.dataverse.HarvestingDataverse[ id=\" + id + \" ]\";\n     }\n     \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/30/HarvestingDataverseConfig.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/codebuff/30/HarvestingDataverseConfig.java\nindex 28df6e19e65..270f3608e1d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/30/HarvestingDataverseConfig.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/codebuff/30/HarvestingDataverseConfig.java\n@@ -21,13 +21,14 @@ import javax.persistence.Table;\n  *\n  * @author Leonid Andreev\n  */\n+\n+\n @Entity\n-@Table(indexes = {@Index(columnList=\"dataverse_id\")\n-\t\t, @Index(columnList=\"harvesttype\")\n-\t\t, @Index(columnList=\"harveststyle\")\n-\t\t, @Index(columnList=\"harvestingurl\")})\n+@Table(indexes = {@Index(columnList = \"dataverse_id\"), @Index(columnList = \"harvesttype\"), @Index(columnList = \"harveststyle\"), @Index(columnList = \"harvestingurl\")})\n public class HarvestingDataverseConfig implements Serializable {\n+\n     private static final long serialVersionUID = 1L;\n+\n     @Id\n     @GeneratedValue(strategy = GenerationType.AUTO)\n     private Long id;\n@@ -39,32 +40,40 @@ public class HarvestingDataverseConfig implements Serializable {\n     public void setId(Long id) {\n         this.id = id;\n     }\n-    \n-    public static final String HARVEST_TYPE_OAI=\"oai\";\n-    public static final String HARVEST_TYPE_NESSTAR=\"nesstar\";\n-    \n-    public static final String HARVEST_STYLE_DATAVERSE=\"dataverse\";\n+\n+    public static final String HARVEST_TYPE_OAI = \"oai\";\n+\n+    public static final String HARVEST_TYPE_NESSTAR = \"nesstar\";\n+\n+    public static final String HARVEST_STYLE_DATAVERSE = \"dataverse\";\n     // pre-4.0 remote Dataverse:\n-    public static final String HARVEST_STYLE_VDC=\"vdc\";\n-    public static final String HARVEST_STYLE_ICPSR=\"icpsr\";\n-    public static final String HARVEST_STYLE_NESSTAR=\"nesstar\";\n-    public static final String HARVEST_STYLE_ROPER=\"roper\";\n-    public static final String HARVEST_STYLE_HGL=\"hgl\";\n-    public static final String HARVEST_STYLE_DEFAULT=\"default\";\n-\n-    public static final String REMOTE_ARCHIVE_URL_LEVEL_DATAVERSE=\"dataverse\";\n-    public static final String REMOTE_ARCHIVE_URL_LEVEL_DATASET=\"dataset\";\n-    public static final String REMOTE_ARCHIVE_URL_LEVEL_FILE=\"file\";\n-    \n+\n+    public static final String HARVEST_STYLE_VDC = \"vdc\";\n+\n+    public static final String HARVEST_STYLE_ICPSR = \"icpsr\";\n+\n+    public static final String HARVEST_STYLE_NESSTAR = \"nesstar\";\n+\n+    public static final String HARVEST_STYLE_ROPER = \"roper\";\n+\n+    public static final String HARVEST_STYLE_HGL = \"hgl\";\n+\n+    public static final String HARVEST_STYLE_DEFAULT = \"default\";\n+\n+    public static final String REMOTE_ARCHIVE_URL_LEVEL_DATAVERSE = \"dataverse\";\n+\n+    public static final String REMOTE_ARCHIVE_URL_LEVEL_DATASET = \"dataset\";\n+\n+    public static final String REMOTE_ARCHIVE_URL_LEVEL_FILE = \"file\";\n+\n     public HarvestingDataverseConfig() {\n         this.harvestType = HARVEST_TYPE_OAI; // default harvestType\n         this.harvestStyle = HARVEST_STYLE_DATAVERSE; // default harvestStyle\n     }\n \n-    \n-    @OneToOne (cascade={CascadeType.REMOVE, CascadeType.MERGE, CascadeType.PERSIST })\n-    @JoinColumn(name=\"dataverse_id\")\n-    private  Dataverse dataverse;\n+    @OneToOne(cascade = {CascadeType.REMOVE, CascadeType.MERGE, CascadeType.PERSIST})\n+    @JoinColumn(name = \"dataverse_id\")\n+    private Dataverse dataverse;\n \n     public Dataverse getDataverse() {\n         return this.dataverse;\n@@ -93,7 +102,7 @@ public class HarvestingDataverseConfig implements Serializable {\n     public void setHarvestStyle(String harvestStyle) {\n         this.harvestStyle = harvestStyle;\n     }\n-    \n+\n     private String harvestingUrl;\n \n     public String getHarvestingUrl() {\n@@ -103,28 +112,28 @@ public class HarvestingDataverseConfig implements Serializable {\n     public void setHarvestingUrl(String harvestingUrl) {\n         this.harvestingUrl = harvestingUrl.trim();\n     }\n-    \n-    private String archiveUrl; \n-    \n+\n+    private String archiveUrl;\n+\n     public String getArchiveUrl() {\n         return this.archiveUrl;\n     }\n-    \n+\n     public void setArchiveUrl(String archiveUrl) {\n-        this.archiveUrl = archiveUrl; \n+        this.archiveUrl = archiveUrl;\n     }\n \n-    @Column(columnDefinition=\"TEXT\")\n-    private String archiveDescription; \n-    \n+    @Column(columnDefinition = \"TEXT\")\n+    private String archiveDescription;\n+\n     public String getArchiveDescription() {\n         return this.archiveDescription;\n     }\n-    \n+\n     public void setArchiveDescription(String archiveDescription) {\n-        this.archiveDescription = archiveDescription; \n+        this.archiveDescription = archiveDescription;\n     }\n-    \n+\n     private String harvestingSet;\n \n     public String getHarvestingSet() {\n@@ -135,10 +144,6 @@ public class HarvestingDataverseConfig implements Serializable {\n         this.harvestingSet = harvestingSet;\n     }\n \n-    \n-    \n-\n-    \n     @Override\n     public int hashCode() {\n         int hash = 0;\n@@ -152,6 +157,7 @@ public class HarvestingDataverseConfig implements Serializable {\n         if (!(object instanceof HarvestingDataverseConfig)) {\n             return false;\n         }\n+\n         HarvestingDataverseConfig other = (HarvestingDataverseConfig) object;\n         if ((this.id == null && other.id != null) || (this.id != null && !this.id.equals(other.id))) {\n             return false;\n@@ -163,5 +169,5 @@ public class HarvestingDataverseConfig implements Serializable {\n     public String toString() {\n         return \"edu.harvard.iq.dataverse.HarvestingDataverse[ id=\" + id + \" ]\";\n     }\n-    \n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 56
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "27",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/30/HarvestingDataverseConfig.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/styler_random/30/HarvestingDataverseConfig.java\nindex 28df6e19e65..b1e0d6861a8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/30/HarvestingDataverseConfig.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/styler_random/30/HarvestingDataverseConfig.java\n@@ -23,7 +23,7 @@ import javax.persistence.Table;\n  */\n @Entity\n @Table(indexes = {@Index(columnList=\"dataverse_id\")\n-\t\t, @Index(columnList=\"harvesttype\")\n+                      , @Index(columnList=\"harvesttype\")\n \t\t, @Index(columnList=\"harveststyle\")\n \t\t, @Index(columnList=\"harvestingurl\")})\n public class HarvestingDataverseConfig implements Serializable {\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "27",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/30/HarvestingDataverseConfig.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/styler_three_grams/30/HarvestingDataverseConfig.java\nindex 28df6e19e65..9fa6b3f2495 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/30/HarvestingDataverseConfig.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/styler_three_grams/30/HarvestingDataverseConfig.java\n@@ -23,7 +23,7 @@ import javax.persistence.Table;\n  */\n @Entity\n @Table(indexes = {@Index(columnList=\"dataverse_id\")\n-\t\t, @Index(columnList=\"harvesttype\")\n+        , @Index(columnList=\"harvesttype\")\n \t\t, @Index(columnList=\"harveststyle\")\n \t\t, @Index(columnList=\"harvestingurl\")})\n public class HarvestingDataverseConfig implements Serializable {\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "intellij",
        "naturalize",
        "codebuff"
    ],
    "not_repaired_by": [
        "styler",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "neo4j-neo4j",
    "error_id": "3262",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "57",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "149",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "121",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "68",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "69",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/3262/AbstractBoltProtocol.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/3262/AbstractBoltProtocol.java\nindex f97745e0bb4..404245cf836 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/3262/AbstractBoltProtocol.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/3262/AbstractBoltProtocol.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.bolt.transport;\n \n import org.neo4j.bolt.BoltChannel;\n@@ -53,15 +54,15 @@ public abstract class AbstractBoltProtocol implements BoltProtocol\n     private final BoltConnectionFactory connectionFactory;\n     private final BookmarksParser bookmarksParser;\n \n-    public AbstractBoltProtocol( BoltChannel channel, BoltConnectionFactory connectionFactory,\n-            BoltStateMachineFactory stateMachineFactory, Config config, LogService logging, TransportThrottleGroup throttleGroup )\n+    public AbstractBoltProtocol(BoltChannel channel, BoltConnectionFactory connectionFactory,\n+                                BoltStateMachineFactory stateMachineFactory, Config config, LogService logging, TransportThrottleGroup throttleGroup)\n     {\n-        this( channel, connectionFactory, stateMachineFactory, config, BookmarksParserV3.INSTANCE, logging, throttleGroup );\n+        this(channel, connectionFactory, stateMachineFactory, config, BookmarksParserV3.INSTANCE, logging, throttleGroup);\n     }\n \n-    protected AbstractBoltProtocol( BoltChannel channel, BoltConnectionFactory connectionFactory,\n-            BoltStateMachineFactory stateMachineFactory, Config config, BookmarksParser bookmarksParser, LogService logging,\n-            TransportThrottleGroup throttleGroup )\n+    protected AbstractBoltProtocol(BoltChannel channel, BoltConnectionFactory connectionFactory,\n+                                   BoltStateMachineFactory stateMachineFactory, Config config, BookmarksParser bookmarksParser, LogService logging,\n+                                   TransportThrottleGroup throttleGroup)\n     {\n         this.channel = channel;\n         this.config = config;\n@@ -78,30 +79,31 @@ public abstract class AbstractBoltProtocol implements BoltProtocol\n     @Override\n     public void install()\n     {\n-        BoltStateMachine stateMachine = stateMachineFactory.newStateMachine( version(), channel );\n+        BoltStateMachine stateMachine = stateMachineFactory.newStateMachine(version(), channel);\n         var neo4jPack = createPack();\n-        var messageWriter = createMessageWriter( neo4jPack, logging );\n+        var messageWriter = createMessageWriter(neo4jPack, logging);\n \n-        var connection = connectionFactory.newConnection( channel, stateMachine, messageWriter );\n-        var messageReader = createMessageReader( connection, messageWriter, bookmarksParser, logging );\n+        var connection = connectionFactory.newConnection(channel, stateMachine, messageWriter);\n+        var messageReader = createMessageReader(connection, messageWriter, bookmarksParser, logging);\n \n         channel.installBoltProtocol(\n-                new ChunkDecoder(),\n-                new MessageAccumulator( config ),\n-                new MessageDecoder( neo4jPack, messageReader, logging ),\n-                new HouseKeeper( connection, logging.getInternalLog( HouseKeeper.class ) ) );\n+          new ChunkDecoder(),\n+          new MessageAccumulator(config),\n+          new MessageDecoder(neo4jPack, messageReader, logging),\n+          new HouseKeeper(connection, logging.getInternalLog(HouseKeeper.class)));\n     }\n \n     protected PackOutput createPackOutput()\n     {\n-        return new ChunkedOutput( channel.rawChannel(), throttleGroup );\n+        return new ChunkedOutput(channel.rawChannel(), throttleGroup);\n     }\n \n     protected abstract Neo4jPack createPack();\n \n-    protected abstract BoltRequestMessageReader createMessageReader( BoltConnection connection,\n-            BoltResponseMessageWriter messageWriter, BookmarksParser bookmarksParser, LogService logging );\n+    protected abstract BoltRequestMessageReader createMessageReader(BoltConnection connection,\n+                                                                    BoltResponseMessageWriter messageWriter, BookmarksParser bookmarksParser,\n+                                                                    LogService logging);\n \n-    protected abstract BoltResponseMessageWriter createMessageWriter( Neo4jPack neo4jPack,\n-            LogService logging );\n+    protected abstract BoltResponseMessageWriter createMessageWriter(Neo4jPack neo4jPack,\n+                                                                     LogService logging);\n }\n",
            "diff_size": 21
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "Stratio-bdt",
    "error_id": "168",
    "information": {
        "errors": [
            {
                "line": "1574",
                "severity": "error",
                "message": "'METHOD_DEF' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": "     * @throws Exception exception\n     */\n    public void resultsMustBeCassandra(DataTable expectedResults) throws Exception {\n        if (getCassandraResults() != null) {\n            //Map for query results\n            ColumnDefinitions columns = getCassandraResults().getColumnDefinitions();",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/errored/1/168/CommonG.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/styler/168/CommonG.java\nindex e9a1bb1298a..4eae124bdba 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/errored/1/168/CommonG.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/styler/168/CommonG.java\n@@ -1571,6 +1571,7 @@ public class CommonG {\n      *                        IMPORTANT: All columns must exist\n      * @throws Exception exception\n      */\n+\n     public void resultsMustBeCassandra(DataTable expectedResults) throws Exception {\n         if (getCassandraResults() != null) {\n             //Map for query results\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/errored/1/168/CommonG.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/intellij/168/CommonG.java\nindex e9a1bb1298a..ef521dd184d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/errored/1/168/CommonG.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/intellij/168/CommonG.java\n@@ -112,7 +112,8 @@ public class CommonG {\n \n     private String resultsType = \"\";\n \n-    private Set<org.openqa.selenium.Cookie> seleniumCookies = new HashSet<org.openqa.selenium.Cookie>();\n+    private Set<org.openqa.selenium.Cookie> seleniumCookies =\n+        new HashSet<org.openqa.selenium.Cookie>();\n \n     private Map<String, String> headers = new HashMap<>();\n \n@@ -147,7 +148,8 @@ public class CommonG {\n     public static Pattern matchesOrContains(String expectedMessage) {\n         Pattern pattern;\n         if (expectedMessage.startsWith(\"regex:\")) {\n-            String regex = expectedMessage.substring(expectedMessage.indexOf(\"regex:\") + 6, expectedMessage.length());\n+            String regex = expectedMessage\n+                .substring(expectedMessage.indexOf(\"regex:\") + 6, expectedMessage.length());\n             pattern = Pattern.compile(regex);\n         } else {\n             pattern = Pattern.compile(Pattern.quote(expectedMessage));\n@@ -366,7 +368,9 @@ public class CommonG {\n      * @throws ClassNotFoundException   exception\n      */\n     public List<WebElement> locateElement(String method, String element,\n-                                          Integer expectedCount) throws ClassNotFoundException, NoSuchFieldException, SecurityException, IllegalArgumentException, IllegalAccessException {\n+                                          Integer expectedCount)\n+        throws ClassNotFoundException, NoSuchFieldException, SecurityException,\n+        IllegalArgumentException, IllegalAccessException {\n \n         List<WebElement> wel = null;\n \n@@ -428,7 +432,7 @@ public class CommonG {\n \n         if (!currentData.equals(\"\")) {\n             currentData = currentData\n-                    .replaceAll(\"[\\\\\\\\|\\\\/|\\\\|\\\\s|:|\\\\*]\", \"_\");\n+                .replaceAll(\"[\\\\\\\\|\\\\/|\\\\|\\\\s|:|\\\\*]\", \"_\");\n         }\n \n         if (!\"\".equals(currentData)) {\n@@ -437,15 +441,16 @@ public class CommonG {\n \n         Timestamp ts = new Timestamp(new java.util.Date().getTime());\n         String outputFile = dir + clazz + \"/\"\n-                + ThreadProperty.get(\"feature\") + \".\" + ThreadProperty.get(\"scenario\") + \"/\" + currentBrowser +\n-                currentData + ts.toString() + suffix;\n+            + ThreadProperty.get(\"feature\") + \".\" + ThreadProperty.get(\"scenario\") + \"/\" +\n+            currentBrowser +\n+            currentData + ts.toString() + suffix;\n \n         outputFile = outputFile.replaceAll(\" \", \"_\");\n \n         if (type.endsWith(\"htmlSource\")) {\n             if (type.equals(\"framehtmlSource\")) {\n                 boolean isFrame = (Boolean) ((JavascriptExecutor) driver)\n-                        .executeScript(\"return window.top != window.self\");\n+                    .executeScript(\"return window.top != window.self\");\n \n                 if (isFrame) {\n                     outputFile = outputFile + \"frame.html\";\n@@ -479,10 +484,10 @@ public class CommonG {\n             File file = null;\n             driver.switchTo().defaultContent();\n             ((Locatable) driver.findElement(By.tagName(\"body\")))\n-                    .getCoordinates().inViewPort();\n+                .getCoordinates().inViewPort();\n \n             if (currentBrowser.startsWith(\"chrome\")\n-                    || currentBrowser.startsWith(\"droidemu\")) {\n+                || currentBrowser.startsWith(\"droidemu\")) {\n                 Actions actions = new Actions(driver);\n                 actions.keyDown(Keys.CONTROL).sendKeys(Keys.HOME).perform();\n                 actions.keyUp(Keys.CONTROL).perform();\n@@ -490,7 +495,7 @@ public class CommonG {\n                 file = chromeFullScreenCapture(driver);\n             } else {\n                 file = ((TakesScreenshot) driver)\n-                        .getScreenshotAs(OutputType.FILE);\n+                    .getScreenshotAs(OutputType.FILE);\n             }\n             try {\n                 FileUtils.copyFile(file, new File(outputFile));\n@@ -521,14 +526,16 @@ public class CommonG {\n             if ((oldTrailingImage.getHeight() == newTrailingImageHeight)) {\n                 newTrailingImage = oldTrailingImage;\n             } else {\n-                newTrailingImage = new BufferedImage(oldTrailingImage.getWidth(), oldTrailingImage.getHeight() - newTrailingImageHeight, BufferedImage.TYPE_INT_RGB);\n+                newTrailingImage = new BufferedImage(oldTrailingImage.getWidth(),\n+                    oldTrailingImage.getHeight() - newTrailingImageHeight,\n+                    BufferedImage.TYPE_INT_RGB);\n             }\n \n             newTrailingImage.createGraphics().drawImage(oldTrailingImage, 0,\n-                    0 - newTrailingImageHeight, null);\n+                0 - newTrailingImageHeight, null);\n \n             File newTrailingImageF = File.createTempFile(\"tmpnewTrailingImage\",\n-                    \".png\");\n+                \".png\");\n             newTrailingImageF.deleteOnExit();\n \n             ImageIO.write(newTrailingImage, \"png\", newTrailingImageF);\n@@ -541,7 +548,7 @@ public class CommonG {\n             }\n \n             BufferedImage img = new BufferedImage(finalWidth, finalHeight,\n-                    BufferedImage.TYPE_INT_RGB);\n+                BufferedImage.TYPE_INT_RGB);\n \n             Integer y = 0;\n             BufferedImage tmpImg = null;\n@@ -570,8 +577,8 @@ public class CommonG {\n \n         Boolean atBottom = false;\n         Integer windowSize = ((Long) ((JavascriptExecutor) driver)\n-                .executeScript(\"return document.documentElement.clientHeight\"))\n-                .intValue();\n+            .executeScript(\"return document.documentElement.clientHeight\"))\n+            .intValue();\n \n         Integer accuScroll = 0;\n         Integer newTrailingImageHeight = 0;\n@@ -581,10 +588,10 @@ public class CommonG {\n \n                 Thread.sleep(DEFAULT_SLEEP_TIME);\n                 capture.add(((TakesScreenshot) driver)\n-                        .getScreenshotAs(OutputType.FILE));\n+                    .getScreenshotAs(OutputType.FILE));\n \n                 ((JavascriptExecutor) driver).executeScript(\"if(window.screen)\"\n-                        + \" {window.scrollBy(0,\" + windowSize + \");};\");\n+                    + \" {window.scrollBy(0,\" + windowSize + \");};\");\n \n                 accuScroll += windowSize;\n                 if (getDocumentHeight(driver) <= accuScroll) {\n@@ -715,7 +722,8 @@ public class CommonG {\n         }\n         String text = writer.toString();\n \n-        String std = text.replace(\"\\r\", \"\").replace(\"\\n\", \"\"); // make sure we have unix style text regardless of the input\n+        String std = text.replace(\"\\r\", \"\")\n+            .replace(\"\\n\", \"\"); // make sure we have unix style text regardless of the input\n \n \n         if (\"json\".equals(type)) {\n@@ -843,7 +851,8 @@ public class CommonG {\n                     modifiedData = \"{\\\"content\\\":\" + modifiedData + \"}\";\n                     array = true;\n                 } else {\n-                    JsonObject object = new JsonObject(JsonValue.readHjson(modifiedData).asObject());\n+                    JsonObject object =\n+                        new JsonObject(JsonValue.readHjson(modifiedData).asObject());\n                     removeNulls(object);\n                     modifiedData = JsonValue.readHjson(object.toString()).toString();\n                 }\n@@ -875,21 +884,29 @@ public class CommonG {\n                             if (!\"[]\".equals(newValue)) {\n                                 jArray = new JSONArray(newValue);\n                             }\n-                            jsonAsMap = JsonPath.parse(modifiedData).put(newComposeKey, newKey, jArray).json();\n+                            jsonAsMap =\n+                                JsonPath.parse(modifiedData).put(newComposeKey, newKey, jArray)\n+                                    .json();\n                             break;\n                         } else if (\"object\".equals(typeJsonObject)) {\n                             jObject = new JSONObject();\n                             if (!\"{}\".equals(newValue)) {\n                                 jObject = new JSONObject(newValue);\n                             }\n-                            jsonAsMap = JsonPath.parse(modifiedData).put(newComposeKey, newKey, jObject).json();\n+                            jsonAsMap =\n+                                JsonPath.parse(modifiedData).put(newComposeKey, newKey, jObject)\n+                                    .json();\n                             break;\n                         } else if (\"string\".equals(typeJsonObject)) {\n-                            jsonAsMap = JsonPath.parse(modifiedData).put(newComposeKey, newKey, newValue).json();\n+                            jsonAsMap =\n+                                JsonPath.parse(modifiedData).put(newComposeKey, newKey, newValue)\n+                                    .json();\n                             break;\n                         } else if (\"number\".equals(typeJsonObject)) {\n                             jNumber = new Double(newValue);\n-                            jsonAsMap = JsonPath.parse(modifiedData).put(newComposeKey, newKey, jNumber).json();\n+                            jsonAsMap =\n+                                JsonPath.parse(modifiedData).put(newComposeKey, newKey, jNumber)\n+                                    .json();\n                             break;\n                         } else if (\"long\".equals(typeJsonObject)) {\n                             jLong = new Long(newValue);\n@@ -897,17 +914,23 @@ public class CommonG {\n                             break;\n                         } else if (\"boolean\".equals(typeJsonObject)) {\n                             jBoolean = new Boolean(newValue);\n-                            jsonAsMap = JsonPath.parse(modifiedData).put(newComposeKey, newKey, jBoolean).json();\n+                            jsonAsMap =\n+                                JsonPath.parse(modifiedData).put(newComposeKey, newKey, jBoolean)\n+                                    .json();\n                             break;\n                         } else if (\"null\".equals(typeJsonObject)) {\n-                            nullValue = JsonPath.parse(modifiedData).put(newComposeKey, newKey, null).jsonString();\n+                            nullValue =\n+                                JsonPath.parse(modifiedData).put(newComposeKey, newKey, null)\n+                                    .jsonString();\n                             break;\n                         } else {\n                             String replaceValue = JsonPath.parse(modifiedData).read(composeKey);\n                             String toBeReplaced = newValue.split(\"->\")[0];\n                             String replacement = newValue.split(\"->\")[1];\n                             newValue = replaceValue.replace(toBeReplaced, replacement);\n-                            jsonAsMap = JsonPath.parse(modifiedData).put(newComposeKey, newKey, newValue).json();\n+                            jsonAsMap =\n+                                JsonPath.parse(modifiedData).put(newComposeKey, newKey, newValue)\n+                                    .json();\n                             break;\n                         }\n //                        jsonAsMap = JsonPath.parse(modifiedData).put(newComposeKey, newKey, newValue).json();\n@@ -923,14 +946,18 @@ public class CommonG {\n                             composeKey = \"$.content\" + composeKey.substring(1, composeKey.length());\n                         }\n                         String appendValue = JsonPath.parse(modifiedData).read(composeKey);\n-                        jsonAsMap = JsonPath.parse(modifiedData).set(composeKey, appendValue + newValue).json();\n+                        jsonAsMap =\n+                            JsonPath.parse(modifiedData).set(composeKey, appendValue + newValue)\n+                                .json();\n                         break;\n                     case \"PREPEND\":\n                         if (array) {\n                             composeKey = \"$.content\" + composeKey.substring(1, composeKey.length());\n                         }\n                         String prependValue = JsonPath.parse(modifiedData).read(composeKey);\n-                        jsonAsMap = JsonPath.parse(modifiedData).set(composeKey, newValue + prependValue).json();\n+                        jsonAsMap =\n+                            JsonPath.parse(modifiedData).set(composeKey, newValue + prependValue)\n+                                .json();\n                         break;\n                     case \"REPLACE\":\n                         if (array) {\n@@ -948,14 +975,17 @@ public class CommonG {\n                             if (!\"{}\".equals(newValue)) {\n                                 jObject = new JSONObject(newValue);\n                             }\n-                            jsonAsMap = JsonPath.parse(modifiedData).set(composeKey, jObject).json();\n+                            jsonAsMap =\n+                                JsonPath.parse(modifiedData).set(composeKey, jObject).json();\n                             break;\n                         } else if (\"string\".equals(typeJsonObject)) {\n-                            jsonAsMap = JsonPath.parse(modifiedData).set(composeKey, newValue).json();\n+                            jsonAsMap =\n+                                JsonPath.parse(modifiedData).set(composeKey, newValue).json();\n                             break;\n                         } else if (\"number\".equals(typeJsonObject)) {\n                             jNumber = new Double(newValue);\n-                            jsonAsMap = JsonPath.parse(modifiedData).set(composeKey, jNumber).json();\n+                            jsonAsMap =\n+                                JsonPath.parse(modifiedData).set(composeKey, jNumber).json();\n                             break;\n                         } else if (\"long\".equals(typeJsonObject)) {\n                             jLong = new Long(newValue);\n@@ -963,17 +993,20 @@ public class CommonG {\n                             break;\n                         } else if (\"boolean\".equals(typeJsonObject)) {\n                             jBoolean = new Boolean(newValue);\n-                            jsonAsMap = JsonPath.parse(modifiedData).set(composeKey, jBoolean).json();\n+                            jsonAsMap =\n+                                JsonPath.parse(modifiedData).set(composeKey, jBoolean).json();\n                             break;\n                         } else if (\"null\".equals(typeJsonObject)) {\n-                            nullValue = JsonPath.parse(modifiedData).set(composeKey, null).jsonString();\n+                            nullValue =\n+                                JsonPath.parse(modifiedData).set(composeKey, null).jsonString();\n                             break;\n                         } else {\n                             String replaceValue = JsonPath.parse(modifiedData).read(composeKey);\n                             String toBeReplaced = newValue.split(\"->\")[0];\n                             String replacement = newValue.split(\"->\")[1];\n                             newValue = replaceValue.replace(toBeReplaced, replacement);\n-                            jsonAsMap = JsonPath.parse(modifiedData).set(composeKey, newValue).json();\n+                            jsonAsMap =\n+                                JsonPath.parse(modifiedData).set(composeKey, newValue).json();\n                             break;\n                         }\n                     case \"ADDTO\":\n@@ -992,14 +1025,17 @@ public class CommonG {\n                             if (!\"{}\".equals(newValue)) {\n                                 jObject = new JSONObject(newValue);\n                             }\n-                            jsonAsMap = JsonPath.parse(modifiedData).add(composeKey, jObject).json();\n+                            jsonAsMap =\n+                                JsonPath.parse(modifiedData).add(composeKey, jObject).json();\n                             break;\n                         } else if (\"string\".equals(typeJsonObject)) {\n-                            jsonAsMap = JsonPath.parse(modifiedData).add(composeKey, newValue).json();\n+                            jsonAsMap =\n+                                JsonPath.parse(modifiedData).add(composeKey, newValue).json();\n                             break;\n                         } else if (\"number\".equals(typeJsonObject)) {\n                             jNumber = new Double(newValue);\n-                            jsonAsMap = JsonPath.parse(modifiedData).add(composeKey, jNumber).json();\n+                            jsonAsMap =\n+                                JsonPath.parse(modifiedData).add(composeKey, jNumber).json();\n                             break;\n                         } else if (\"long\".equals(typeJsonObject)) {\n                             jLong = new Long(newValue);\n@@ -1007,10 +1043,12 @@ public class CommonG {\n                             break;\n                         } else if (\"boolean\".equals(typeJsonObject)) {\n                             jBoolean = new Boolean(newValue);\n-                            jsonAsMap = JsonPath.parse(modifiedData).add(composeKey, jBoolean).json();\n+                            jsonAsMap =\n+                                JsonPath.parse(modifiedData).add(composeKey, jBoolean).json();\n                             break;\n                         } else if (\"null\".equals(typeJsonObject)) {\n-                            nullValue = JsonPath.parse(modifiedData).add(composeKey, null).jsonString();\n+                            nullValue =\n+                                JsonPath.parse(modifiedData).add(composeKey, null).jsonString();\n                             break;\n                         } else {\n                             // TO-DO: understand  newValue.split(\"->\")[0];  and  newValue.split(\"->\")[1];\n@@ -1102,7 +1140,9 @@ public class CommonG {\n      * @throws Exception exception\n      */\n     @Deprecated\n-    public Future<Response> generateRequest(String requestType, boolean secure, String user, String password, String endPoint, String data, String type, String codeBase64) throws Exception {\n+    public Future<Response> generateRequest(String requestType, boolean secure, String user,\n+                                            String password, String endPoint, String data,\n+                                            String type, String codeBase64) throws Exception {\n         return generateRequest(requestType, secure, user, password, endPoint, data, type);\n     }\n \n@@ -1118,7 +1158,9 @@ public class CommonG {\n      * @param type        type of data to be sent (json|string)\n      * @throws Exception exception\n      */\n-    public Future<Response> generateRequest(String requestType, boolean secure, String user, String password, String endPoint, String data, String type) throws Exception {\n+    public Future<Response> generateRequest(String requestType, boolean secure, String user,\n+                                            String password, String endPoint, String data,\n+                                            String type) throws Exception {\n \n         String protocol = this.getRestProtocol();\n         Future<Response> response = null;\n@@ -1143,11 +1185,11 @@ public class CommonG {\n         // Setup user and password for requests\n         if (user != null) {\n             realm = new Realm.RealmBuilder()\n-                    .setPrincipal(user)\n-                    .setPassword(password)\n-                    .setUsePreemptiveAuth(true)\n-                    .setScheme(AuthScheme.BASIC)\n-                    .build();\n+                .setPrincipal(user)\n+                .setPassword(password)\n+                .setUsePreemptiveAuth(true)\n+                .setScheme(AuthScheme.BASIC)\n+                .build();\n         }\n \n         switch (requestType.toUpperCase()) {\n@@ -1158,7 +1200,8 @@ public class CommonG {\n                     request = request.setHeader(\"Content-Type\", \"application/json; charset=UTF-8\");\n                 } else if (\"string\".equals(type)) {\n                     this.getLogger().debug(\"Sending request as: {}\", type);\n-                    request = request.setHeader(\"Content-Type\", \"application/x-www-form-urlencoded; charset=UTF-8\");\n+                    request = request.setHeader(\"Content-Type\",\n+                        \"application/x-www-form-urlencoded; charset=UTF-8\");\n                 } else if (\"gov\".equals(type)) {\n                     request = request.setHeader(\"Content-Type\", \"application/json; charset=UTF-8\");\n                     request = request.setHeader(\"Accept\", \"application/json\");\n@@ -1177,7 +1220,7 @@ public class CommonG {\n                 if (this.getSeleniumCookies().size() > 0) {\n                     for (org.openqa.selenium.Cookie cookie : this.getSeleniumCookies()) {\n                         request.addCookie(new Cookie(cookie.getName(), cookie.getValue(),\n-                                false, cookie.getDomain(), cookie.getPath(), 99, false, false));\n+                            false, cookie.getDomain(), cookie.getPath(), 99, false, false));\n                     }\n                 }\n \n@@ -1198,19 +1241,23 @@ public class CommonG {\n                 if (data == \"\") {\n                     request = this.getClient().prepareDelete(restURL + endPoint);\n                     if (\"gov\".equals(type)) {\n-                        request = request.setHeader(\"Content-Type\", \"application/json; charset=UTF-8\");\n+                        request =\n+                            request.setHeader(\"Content-Type\", \"application/json; charset=UTF-8\");\n                         request = request.setHeader(\"Accept\", \"application/json\");\n                         request = request.setHeader(\"X-TenantID\", \"NONE\");\n                     }\n                 } else {\n                     request = this.getClient().prepareDelete(restURL + endPoint).setBody(data);\n                     if (\"json\".equals(type)) {\n-                        request = request.setHeader(\"Content-Type\", \"application/json; charset=UTF-8\");\n+                        request =\n+                            request.setHeader(\"Content-Type\", \"application/json; charset=UTF-8\");\n                     } else if (\"string\".equals(type)) {\n                         this.getLogger().debug(\"Sending request as: {}\", type);\n-                        request = request.setHeader(\"Content-Type\", \"application/x-www-form-urlencoded; charset=UTF-8\");\n+                        request = request.setHeader(\"Content-Type\",\n+                            \"application/x-www-form-urlencoded; charset=UTF-8\");\n                     } else if (\"gov\".equals(type)) {\n-                        request = request.setHeader(\"Content-Type\", \"application/json; charset=UTF-8\");\n+                        request =\n+                            request.setHeader(\"Content-Type\", \"application/json; charset=UTF-8\");\n                         request = request.setHeader(\"Accept\", \"application/json\");\n                         request = request.setHeader(\"X-TenantID\", \"NONE\");\n                     }\n@@ -1218,7 +1265,7 @@ public class CommonG {\n                 if (this.getSeleniumCookies().size() > 0) {\n                     for (org.openqa.selenium.Cookie cookie : this.getSeleniumCookies()) {\n                         request.addCookie(new Cookie(cookie.getName(), cookie.getValue(),\n-                                false, cookie.getDomain(), cookie.getPath(), 99, false, false));\n+                            false, cookie.getDomain(), cookie.getPath(), 99, false, false));\n                     }\n                 }\n \n@@ -1249,12 +1296,15 @@ public class CommonG {\n                 } else {\n                     request = this.getClient().preparePost(restURL + endPoint).setBody(data);\n                     if (\"json\".equals(type)) {\n-                        request = request.setHeader(\"Content-Type\", \"application/json; charset=UTF-8\");\n+                        request =\n+                            request.setHeader(\"Content-Type\", \"application/json; charset=UTF-8\");\n                     } else if (\"string\".equals(type)) {\n                         this.getLogger().debug(\"Sending request as: {}\", type);\n-                        request = request.setHeader(\"Content-Type\", \"application/x-www-form-urlencoded; charset=UTF-8\");\n+                        request = request.setHeader(\"Content-Type\",\n+                            \"application/x-www-form-urlencoded; charset=UTF-8\");\n                     } else if (\"gov\".equals(type)) {\n-                        request = request.setHeader(\"Content-Type\", \"application/json; charset=UTF-8\");\n+                        request =\n+                            request.setHeader(\"Content-Type\", \"application/json; charset=UTF-8\");\n                         request = request.setHeader(\"Accept\", \"application/json\");\n                         request = request.setHeader(\"X-TenantID\", \"NONE\");\n                     }\n@@ -1266,7 +1316,7 @@ public class CommonG {\n                     if (this.getSeleniumCookies().size() > 0) {\n                         for (org.openqa.selenium.Cookie cookie : this.getSeleniumCookies()) {\n                             request.addCookie(new Cookie(cookie.getName(), cookie.getValue(),\n-                                    false, cookie.getDomain(), cookie.getPath(), 99, false, false));\n+                                false, cookie.getDomain(), cookie.getPath(), 99, false, false));\n                         }\n                     }\n \n@@ -1294,11 +1344,14 @@ public class CommonG {\n                 } else {\n                     request = this.getClient().preparePut(restURL + endPoint).setBody(data);\n                     if (\"json\".equals(type)) {\n-                        request = request.setHeader(\"Content-Type\", \"application/json; charset=UTF-8\");\n+                        request =\n+                            request.setHeader(\"Content-Type\", \"application/json; charset=UTF-8\");\n                     } else if (\"string\".equals(type)) {\n-                        request = request.setHeader(\"Content-Type\", \"application/x-www-form-urlencoded; charset=UTF-8\");\n+                        request = request.setHeader(\"Content-Type\",\n+                            \"application/x-www-form-urlencoded; charset=UTF-8\");\n                     } else if (\"gov\".equals(type)) {\n-                        request = request.setHeader(\"Content-Type\", \"application/json; charset=UTF-8\");\n+                        request =\n+                            request.setHeader(\"Content-Type\", \"application/json; charset=UTF-8\");\n                         request = request.setHeader(\"Accept\", \"application/json\");\n                         request = request.setHeader(\"X-TenantID\", \"NONE\");\n                     }\n@@ -1310,7 +1363,7 @@ public class CommonG {\n                     if (this.getSeleniumCookies().size() > 0) {\n                         for (org.openqa.selenium.Cookie cookie : this.getSeleniumCookies()) {\n                             request.addCookie(new Cookie(cookie.getName(), cookie.getValue(),\n-                                    false, cookie.getDomain(), cookie.getPath(), 99, false, false));\n+                                false, cookie.getDomain(), cookie.getPath(), 99, false, false));\n                         }\n                     }\n \n@@ -1356,7 +1409,9 @@ public class CommonG {\n      * @throws Exception exception\n      */\n     @Deprecated\n-    public Future<Response> generateRequest(String requestType, boolean secure, String endPoint, String data, String type, String codeBase64) throws Exception {\n+    public Future<Response> generateRequest(String requestType, boolean secure, String endPoint,\n+                                            String data, String type, String codeBase64)\n+        throws Exception {\n         return generateRequest(requestType, false, null, null, endPoint, data, type, \"\");\n     }\n \n@@ -1376,7 +1431,10 @@ public class CommonG {\n      * @throws InvocationTargetException exception\n      */\n \n-    public void setPreviousElement(String element, String value) throws NoSuchFieldException, SecurityException, IllegalArgumentException, IllegalAccessException, InstantiationException, ClassNotFoundException, NoSuchMethodException, InvocationTargetException {\n+    public void setPreviousElement(String element, String value)\n+        throws NoSuchFieldException, SecurityException, IllegalArgumentException,\n+        IllegalAccessException, InstantiationException, ClassNotFoundException,\n+        NoSuchMethodException, InvocationTargetException {\n         Reflections reflections = new Reflections(\"com.stratio\");\n         Set classes = reflections.getSubTypesOf(CommonG.class);\n \n@@ -1435,7 +1493,7 @@ public class CommonG {\n \n     public boolean cookieExists(String cookieName) {\n         if (this.getSeleniumCookies() != null && this.getSeleniumCookies().size() != 0) {\n-            for (org.openqa.selenium.Cookie cookie: this.getSeleniumCookies()) {\n+            for (org.openqa.selenium.Cookie cookie : this.getSeleniumCookies()) {\n                 if (cookie.getName().contains(cookieName)) {\n                     return true;\n                 }\n@@ -1481,7 +1539,9 @@ public class CommonG {\n                 resultsCucumber = new HashMap<String, String>();\n \n                 for (int i = 0; i < expectedResults.getPickleRows().get(0).getCells().size(); i++) {\n-                    resultsCucumber.put(expectedResults.getPickleRows().get(0).getCells().get(i).getValue(), expectedResults.getPickleRows().get(e).getCells().get(i).getValue());\n+                    resultsCucumber\n+                        .put(expectedResults.getPickleRows().get(0).getCells().get(i).getValue(),\n+                            expectedResults.getPickleRows().get(e).getCells().get(i).getValue());\n \n                 }\n                 resultsListExpected.add(resultsCucumber);\n@@ -1491,28 +1551,42 @@ public class CommonG {\n             getLogger().debug(\"Obtained Results: \" + getCSVResults().toString());\n \n             //Firts, we checkt that the number of rows are equals\n-            assertThat(resultsListExpected.size()).overridingErrorMessage(\"The number of rows of expected result is %s but the csv file contains %s\", resultsListExpected.size(), getCSVResults().size()).isEqualTo(getCSVResults().size());\n+            assertThat(resultsListExpected.size()).overridingErrorMessage(\n+                \"The number of rows of expected result is %s but the csv file contains %s\",\n+                resultsListExpected.size(), getCSVResults().size())\n+                .isEqualTo(getCSVResults().size());\n             //Then we check the CSV content\n             for (int i = 0; i < resultsListExpected.size(); i++) {\n                 Map<String, String> expectedRow = resultsListExpected.get(i);\n                 Map<String, String> obtainedRow = getCSVResults().get(i);\n                 //First we check the number of columns\n-                assertThat(expectedRow.size()).overridingErrorMessage(\"The number columns of row %s has to be %s but was %s\", i, expectedRow.size(), obtainedRow.size()).isEqualTo(obtainedRow.size());\n+                assertThat(expectedRow.size())\n+                    .overridingErrorMessage(\"The number columns of row %s has to be %s but was %s\",\n+                        i, expectedRow.size(), obtainedRow.size()).isEqualTo(obtainedRow.size());\n                 //Check the headers values\n-                assertThat(expectedRow.keySet()).overridingErrorMessage(\"The headers do not match\").isEqualTo(obtainedRow.keySet());\n+                assertThat(expectedRow.keySet()).overridingErrorMessage(\"The headers do not match\")\n+                    .isEqualTo(obtainedRow.keySet());\n                 //Now, we are going to check the values\n                 Set<String> keys = expectedRow.keySet();\n                 for (String key : keys) {\n-                    if (expectedRow.get(key).contains(\"regex\") || expectedRow.get(key).contains(\"not_check\")) {\n+                    if (expectedRow.get(key).contains(\"regex\") ||\n+                        expectedRow.get(key).contains(\"not_check\")) {\n                         if (expectedRow.get(key).contains(\"regex-timestamp\")) {\n                             String[] format = expectedRow.get(key).split(\"_\");\n-                            assertThat(true).overridingErrorMessage(\"The values of key %s and %s line are not a valid timestamp\", expectedRow.get(key), i).isEqualTo(isThisDateValid(obtainedRow.get(key), format[1]));\n+                            assertThat(true).overridingErrorMessage(\n+                                \"The values of key %s and %s line are not a valid timestamp\",\n+                                expectedRow.get(key), i)\n+                                .isEqualTo(isThisDateValid(obtainedRow.get(key), format[1]));\n                         }\n                         if (expectedRow.get(key).contains(\"regex-uuid\")) {\n-                            assertThat(true).overridingErrorMessage(\"The values of key %s and %s line are not an UIDD\", expectedRow.get(key), i).isEqualTo(isUUID(obtainedRow.get(key)));\n+                            assertThat(true).overridingErrorMessage(\n+                                \"The values of key %s and %s line are not an UIDD\",\n+                                expectedRow.get(key), i).isEqualTo(isUUID(obtainedRow.get(key)));\n                         }\n                     } else {\n-                        assertThat(expectedRow.get(key)).overridingErrorMessage(\"The values of key %s and %s line are not equals\", expectedRow.get(key), i).isEqualTo(obtainedRow.get(key));\n+                        assertThat(expectedRow.get(key)).overridingErrorMessage(\n+                            \"The values of key %s and %s line are not equals\", expectedRow.get(key),\n+                            i).isEqualTo(obtainedRow.get(key));\n                     }\n                 }\n             }\n@@ -1523,6 +1597,7 @@ public class CommonG {\n \n     /**\n      * Check if a string is a UUID\n+     *\n      * @param uuid - UUID value\n      * @return true if it is a UUID or false if it is not an UUID\n      */\n@@ -1537,6 +1612,7 @@ public class CommonG {\n \n     /**\n      * Check is a String is a valid timestamp format\n+     *\n      * @param dateToValidate\n      * @param dateFromat\n      * @return true/false\n@@ -1556,6 +1632,7 @@ public class CommonG {\n         }\n         return true;\n     }\n+\n     /**\n      * Checks the different results of a previous query to Cassandra database\n      *\n@@ -1598,7 +1675,9 @@ public class CommonG {\n                 resultsCucumber = new HashMap<String, Object>();\n \n                 for (int i = 0; i < expectedResults.getPickleRows().get(0).getCells().size(); i++) {\n-                    resultsCucumber.put(expectedResults.getPickleRows().get(0).getCells().get(i).getValue(), expectedResults.getPickleRows().get(e).getCells().get(i).getValue());\n+                    resultsCucumber\n+                        .put(expectedResults.getPickleRows().get(0).getCells().get(i).getValue(),\n+                            expectedResults.getPickleRows().get(e).getCells().get(i).getValue());\n \n                 }\n                 resultsListExpected.add(resultsCucumber);\n@@ -1613,7 +1692,8 @@ public class CommonG {\n             for (int e = 0; e < resultsListExpected.size(); e++) {\n                 iterations = 0;\n                 occurrencesObtained = 0;\n-                occurrencesExpected = Integer.parseInt(resultsListExpected.get(e).get(\"occurrences\").toString());\n+                occurrencesExpected =\n+                    Integer.parseInt(resultsListExpected.get(e).get(\"occurrences\").toString());\n \n                 for (int i = 0; i < resultsListObtained.size(); i++) {\n \n@@ -1622,7 +1702,8 @@ public class CommonG {\n                     while (it.hasNext()) {\n                         nextKey = it.next();\n                         if (!nextKey.equals(\"occurrences\")) {\n-                            if (resultsListObtained.get(i).get(nextKey).toString().equals(resultsListExpected.get(e).get(nextKey).toString())) {\n+                            if (resultsListObtained.get(i).get(nextKey).toString()\n+                                .equals(resultsListExpected.get(e).get(nextKey).toString())) {\n                                 iterations++;\n                             }\n \n@@ -1636,8 +1717,10 @@ public class CommonG {\n \n                     iterations = 0;\n                 }\n-                assertThat(occurrencesExpected).overridingErrorMessage(\"In row \" + e + \" have been found \"\n-                        + occurrencesObtained + \" results and \" + occurrencesExpected + \" were expected\").isEqualTo(occurrencesObtained);\n+                assertThat(occurrencesExpected)\n+                    .overridingErrorMessage(\"In row \" + e + \" have been found \"\n+                        + occurrencesObtained + \" results and \" + occurrencesExpected +\n+                        \" were expected\").isEqualTo(occurrencesObtained);\n \n             }\n         } else {\n@@ -1671,7 +1754,9 @@ public class CommonG {\n                 resultsCucumber = new HashMap<String, Object>();\n \n                 for (int i = 0; i < expectedResults.getPickleRows().get(0).getCells().size(); i++) {\n-                    resultsCucumber.put(expectedResults.getPickleRows().get(0).getCells().get(i).getValue(), expectedResults.getPickleRows().get(e).getCells().get(i).getValue());\n+                    resultsCucumber\n+                        .put(expectedResults.getPickleRows().get(0).getCells().get(i).getValue(),\n+                            expectedResults.getPickleRows().get(e).getCells().get(i).getValue());\n \n                 }\n                 resultsListExpected.add(resultsCucumber);\n@@ -1686,7 +1771,8 @@ public class CommonG {\n             for (int e = 0; e < resultsListExpected.size(); e++) {\n                 iterations = 0;\n                 occurrencesObtained = 0;\n-                occurrencesExpected = Integer.parseInt(resultsListExpected.get(e).get(\"occurrences\").toString());\n+                occurrencesExpected =\n+                    Integer.parseInt(resultsListExpected.get(e).get(\"occurrences\").toString());\n \n                 String resultsListObtained = \"[\";\n                 DBCursor cursor = getMongoResults();\n@@ -1704,7 +1790,8 @@ public class CommonG {\n                     while (it.hasNext()) {\n                         nextKey = it.next();\n                         if (!nextKey.equals(\"occurrences\")) {\n-                            if (row.get(nextKey).toString().equals(resultsListExpected.get(e).get(nextKey).toString())) {\n+                            if (row.get(nextKey).toString()\n+                                .equals(resultsListExpected.get(e).get(nextKey).toString())) {\n                                 iterations++;\n                             }\n                         }\n@@ -1723,8 +1810,10 @@ public class CommonG {\n                 resultsListObtained = resultsListObtained + \"]\";\n                 getLogger().debug(\"Results: \" + resultsListObtained);\n \n-                assertThat(occurrencesExpected).overridingErrorMessage(\"In row \" + e + \" have been found \"\n-                        + occurrencesObtained + \" results and \" + occurrencesExpected + \" were expected\").isEqualTo(occurrencesObtained);\n+                assertThat(occurrencesExpected)\n+                    .overridingErrorMessage(\"In row \" + e + \" have been found \"\n+                        + occurrencesObtained + \" results and \" + occurrencesExpected +\n+                        \" were expected\").isEqualTo(occurrencesObtained);\n             }\n \n         } else {\n@@ -1752,19 +1841,23 @@ public class CommonG {\n             List<List<String>> expectedResultList = expectedResults.raw();\n             //Check size\n             assertThat(expectedResultList.size() - 1).overridingErrorMessage(\n-                    \"Expected number of columns to be\" + (expectedResultList.size() - 1)\n-                            + \"but was \" + previousElasticsearchResults.size())\n-                    .isEqualTo(previousElasticsearchResults.size());\n+                \"Expected number of columns to be\" + (expectedResultList.size() - 1)\n+                    + \"but was \" + previousElasticsearchResults.size())\n+                .isEqualTo(previousElasticsearchResults.size());\n             List<String> columnNames = expectedResultList.get(0);\n             for (int i = 0; i < previousElasticsearchResults.size(); i++) {\n                 for (int j = 0; j < columnNames.size(); j++) {\n-                    assertThat(expectedResultList.get(i + 1).get(j)).overridingErrorMessage(\"In row \" + i + \"and \"\n+                    assertThat(expectedResultList.get(i + 1).get(j))\n+                        .overridingErrorMessage(\"In row \" + i + \"and \"\n                             + \"column \" + j\n                             + \"have \"\n                             + \"been \"\n                             + \"found \"\n-                            + expectedResultList.get(i + 1).get(j) + \" results and \" + previousElasticsearchResults.get(i).get(columnNames.get(j)).toString() + \" were \"\n-                            + \"expected\").isEqualTo(previousElasticsearchResults.get(i).get(columnNames.get(j)).toString());\n+                            + expectedResultList.get(i + 1).get(j) + \" results and \" +\n+                            previousElasticsearchResults.get(i).get(columnNames.get(j)).toString() +\n+                            \" were \"\n+                            + \"expected\").isEqualTo(\n+                        previousElasticsearchResults.get(i).get(columnNames.get(j)).toString());\n                 }\n             }\n         } else {\n@@ -1783,7 +1876,7 @@ public class CommonG {\n         String line;\n         Process p;\n         try {\n-            p = Runtime.getRuntime().exec(new String[]{\"/bin/sh\", \"-c\", command});\n+            p = Runtime.getRuntime().exec(new String[] {\"/bin/sh\", \"-c\", command});\n             p.waitFor();\n         } catch (java.io.IOException e) {\n             this.commandExitStatus = 1;\n@@ -1928,7 +2021,8 @@ public class CommonG {\n \n     public String removeJSONPathElement(String jsonString, String expr) {\n \n-        Configuration conf = Configuration.builder().jsonProvider(new GsonJsonProvider()).mappingProvider(new GsonMappingProvider()).build();\n+        Configuration conf = Configuration.builder().jsonProvider(new GsonJsonProvider())\n+            .mappingProvider(new GsonMappingProvider()).build();\n         DocumentContext context = JsonPath.using(conf).parse(jsonString);\n         context.delete(expr);\n         return context.jsonString();\n@@ -1955,27 +2049,33 @@ public class CommonG {\n      * @param condition condition to compare\n      * @param result    expected result\n      */\n-    public void evaluateJSONElementOperation(Object o, String condition, String result) throws Exception {\n+    public void evaluateJSONElementOperation(Object o, String condition, String result)\n+        throws Exception {\n \n         if (o instanceof String) {\n             String value = (String) o;\n             switch (condition) {\n                 case \"equal\":\n-                    assertThat(value).as(\"Evaluate JSONPath does not match with proposed value\").isEqualTo(result);\n+                    assertThat(value).as(\"Evaluate JSONPath does not match with proposed value\")\n+                        .isEqualTo(result);\n                     break;\n                 case \"not equal\":\n-                    assertThat(value).as(\"Evaluate JSONPath match with proposed value\").isNotEqualTo(result);\n+                    assertThat(value).as(\"Evaluate JSONPath match with proposed value\")\n+                        .isNotEqualTo(result);\n                     break;\n                 case \"contains\":\n-                    assertThat(value).as(\"Evaluate JSONPath does not contain proposed value\").contains(result);\n+                    assertThat(value).as(\"Evaluate JSONPath does not contain proposed value\")\n+                        .contains(result);\n                     break;\n                 case \"does not contain\":\n-                    assertThat(value).as(\"Evaluate JSONPath contain proposed value\").doesNotContain(result);\n+                    assertThat(value).as(\"Evaluate JSONPath contain proposed value\")\n+                        .doesNotContain(result);\n                     break;\n                 case \"size\":\n                     JsonValue jsonObject = JsonValue.readHjson(value);\n                     if (jsonObject.isArray()) {\n-                        assertThat(jsonObject.asArray()).as(\"Keys size does not match\").hasSize(Integer.parseInt(result));\n+                        assertThat(jsonObject.asArray()).as(\"Keys size does not match\")\n+                            .hasSize(Integer.parseInt(result));\n                     } else {\n                         Assertions.fail(\"Expected array for size operation check\");\n                     }\n@@ -1991,7 +2091,8 @@ public class CommonG {\n                     assertThat(keys).as(\"Keys does not contain that name\").contains(result);\n                     break;\n                 case \"size\":\n-                    assertThat(keys).as(\"Keys size does not match\").hasSize(Integer.parseInt(result));\n+                    assertThat(keys).as(\"Keys size does not match\")\n+                        .hasSize(Integer.parseInt(result));\n                     break;\n                 default:\n                     Assertions.fail(\"Operation not implemented for JSON keys\");\n@@ -2011,7 +2112,9 @@ public class CommonG {\n \n     public String updateMarathonJson(String json) {\n         if (json.contains(\"uris\")) {\n-            return removeJSONPathElement(removeJSONPathElement(removeJSONPathElement(json, \"$.versionInfo\"), \"$.version\"), \"$.uris.*\");\n+            return removeJSONPathElement(\n+                removeJSONPathElement(removeJSONPathElement(json, \"$.versionInfo\"), \"$.version\"),\n+                \"$.uris.*\");\n         } else {\n             return removeJSONPathElement(removeJSONPathElement(json, \"$.versionInfo\"), \"$.version\");\n         }\n@@ -2036,7 +2139,8 @@ public class CommonG {\n             }\n         }\n         if (this.getCommandExitStatus() != exitStatus) {\n-            if (System.getProperty(\"logLevel\", \"\") != null && System.getProperty(\"logLevel\", \"\").equalsIgnoreCase(\"debug\")) {\n+            if (System.getProperty(\"logLevel\", \"\") != null &&\n+                System.getProperty(\"logLevel\", \"\").equalsIgnoreCase(\"debug\")) {\n                 if (!(\"\".equals(this.getCommandResult()))) {\n                     this.getLogger().debug(\"Command complete stdout:\\n{}\", this.getCommandResult());\n                 }\n@@ -2083,7 +2187,8 @@ public class CommonG {\n      * <p>\n      * File will be placed on path /target/test-classes\n      */\n-    public String asYaml(String jsonStringFile) throws JsonProcessingException, IOException, FileNotFoundException {\n+    public String asYaml(String jsonStringFile)\n+        throws JsonProcessingException, IOException, FileNotFoundException {\n \n         InputStream stream = getClass().getClassLoader().getResourceAsStream(jsonStringFile);\n \n@@ -2113,7 +2218,8 @@ public class CommonG {\n         }\n         String text = writer.toString();\n \n-        String std = text.replace(\"\\r\", \"\").replace(\"\\n\", \"\"); // make sure we have unix style text regardless of the input\n+        String std = text.replace(\"\\r\", \"\")\n+            .replace(\"\\n\", \"\"); // make sure we have unix style text regardless of the input\n \n         // parse JSON\n         JsonNode jsonNodeTree = new ObjectMapper().readTree(std);\n@@ -2135,7 +2241,9 @@ public class CommonG {\n      * @param key:     server private key\n      * @throws Exception exception     *\n      */\n-    public void connectToPostgreSQLDatabase(String database, String host, String port, String user, String password, Boolean secure, String ca, String crt, String key) throws SQLException {\n+    public void connectToPostgreSQLDatabase(String database, String host, String port, String user,\n+                                            String password, Boolean secure, String ca, String crt,\n+                                            String key) throws SQLException {\n \n         if (port.startsWith(\"[\")) {\n             port = port.substring(1, port.length() - 1);\n@@ -2145,7 +2253,9 @@ public class CommonG {\n                 password = \"stratio\";\n             }\n             try {\n-                myConnection = DriverManager.getConnection(\"jdbc:postgresql://\" + host + \":\" + port + \"/\" + database, user, password);\n+                myConnection = DriverManager\n+                    .getConnection(\"jdbc:postgresql://\" + host + \":\" + port + \"/\" + database, user,\n+                        password);\n             } catch (SQLException se) {\n                 // log the exception\n                 this.getLogger().error(se.getMessage());\n@@ -2173,7 +2283,9 @@ public class CommonG {\n \n \n             try {\n-                myConnection = DriverManager.getConnection(\"jdbc:postgresql://\" + host + \":\" + port + \"/\" + database, props);\n+                myConnection = DriverManager\n+                    .getConnection(\"jdbc:postgresql://\" + host + \":\" + port + \"/\" + database,\n+                        props);\n             } catch (SQLException se) {\n                 // log the exception\n                 this.getLogger().error(se.getMessage());\n@@ -2196,7 +2308,7 @@ public class CommonG {\n     /**\n      * Generate deployment json from schema\n      *\n-     * @param schema        schema obtained from deploy-api\n+     * @param schema schema obtained from deploy-api\n      * @return JSONObject   deployment json\n      */\n     public JSONObject parseJSONSchema(JSONObject schema) throws Exception {\n@@ -2224,7 +2336,7 @@ public class CommonG {\n                 if (element.has(\"default\")) {\n                     // Add element with the default value assigned\n                     json.put(key, element.get(\"default\"));\n-                // If it doesn't have default value, we assign a default value depending on the type\n+                    // If it doesn't have default value, we assign a default value depending on the type\n                 } else {\n                     switch (element.getString(\"type\")) {\n                         case \"string\":\n@@ -2233,14 +2345,15 @@ public class CommonG {\n                         case \"boolean\":\n                             json.put(key, false);\n                             break;\n-                        case \"number\": case \"integer\":\n+                        case \"number\":\n+                        case \"integer\":\n                             json.put(key, 0);\n                             break;\n                         default:\n                             Assertions.fail(\"type not expected\");\n                     }\n                 }\n-            // If it CONTAINS properties\n+                // If it CONTAINS properties\n             } else {\n                 // Recursive call, keep evaluating json\n                 json.put(key, parseJSONSchema(element));\n@@ -2254,25 +2367,25 @@ public class CommonG {\n      * Check json matches schema\n      *\n      * @param schema schema obtained from deploy-api\n-     * @param json json to be checked\n+     * @param json   json to be checked\n      * @return boolean whether the json matches the schema or not\n      */\n     public boolean matchJsonToSchema(JSONObject schema, JSONObject json) throws Exception {\n         SchemaLoader.builder()\n-                 .useDefaults(true)\n-                 .schemaJson(schema)\n-                 .build()\n-                 .load()\n-                 .build()\n-                 .validate(json);\n+            .useDefaults(true)\n+            .schemaJson(schema)\n+            .build()\n+            .load()\n+            .build()\n+            .validate(json);\n         return true;\n     }\n \n     /**\n      * Get service status\n      *\n-     * @param service   name of the service to be checked\n-     * @param cluster   URI of the cluster\n+     * @param service name of the service to be checked\n+     * @param cluster URI of the cluster\n      * @return String   normalized service status\n      * @throws Exception exception     *\n      */\n@@ -2288,7 +2401,8 @@ public class CommonG {\n \n         response = this.generateRequest(\"GET\", true, null, null, endPoint, null, \"json\");\n         this.setResponse(\"GET\", (Response) response.get());\n-        assertThat(this.getResponse().getStatusCode()).as(\"It hasn't been possible to obtain status for service: \" + service).isEqualTo(200);\n+        assertThat(this.getResponse().getStatusCode())\n+            .as(\"It hasn't been possible to obtain status for service: \" + service).isEqualTo(200);\n \n         String json = this.getResponse().getResponse();\n \n@@ -2317,8 +2431,8 @@ public class CommonG {\n     /**\n      * Get service health status\n      *\n-     * @param service   name of the service to be checked\n-     * @param cluster   URI of the cluster\n+     * @param service name of the service to be checked\n+     * @param cluster URI of the cluster\n      * @return String   normalized service health status\n      * @throws Exception exception     *\n      */\n@@ -2334,7 +2448,9 @@ public class CommonG {\n \n         response = this.generateRequest(\"GET\", true, null, null, endPoint, null, \"json\");\n         this.setResponse(\"GET\", (Response) response.get());\n-        assertThat(this.getResponse().getStatusCode()).as(\"It hasn't been possible to obtain health status for service: \" + service).isEqualTo(200);\n+        assertThat(this.getResponse().getStatusCode())\n+            .as(\"It hasn't been possible to obtain health status for service: \" + service)\n+            .isEqualTo(200);\n \n         String json = this.getResponse().getResponse();\n \n",
            "diff_size": 238
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "401",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 19, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "402",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 19, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "403",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 15, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "404",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 19, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "405",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 19, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "406",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 15, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "407",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 26, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "408",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 22, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "409",
                    "severity": "error",
                    "message": "'else' child has incorrect indentation level 26, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "410",
                    "severity": "error",
                    "message": "'else rcurly' has incorrect indentation level 22, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "864",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 35, expected level should be 28.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "865",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 35, expected level should be 28.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "866",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 31, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "867",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 35, expected level should be 28.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "868",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 35, expected level should be 28.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "869",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 35, expected level should be 28.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "870",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 31, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "871",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 42, expected level should be 28.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "872",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 42, expected level should be 28.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "873",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 42, expected level should be 28.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "874",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 38, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "875",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 42, expected level should be 28.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "876",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 42, expected level should be 28.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "877",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 42, expected level should be 28.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "878",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 38, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "879",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 49, expected level should be 28.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "880",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 49, expected level should be 28.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "881",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 45, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "882",
                    "severity": "error",
                    "message": "'else' child has incorrect indentation level 49, expected level should be 28.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "883",
                    "severity": "error",
                    "message": "'else' child has incorrect indentation level 49, expected level should be 28.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "884",
                    "severity": "error",
                    "message": "'else' child has incorrect indentation level 49, expected level should be 28.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "885",
                    "severity": "error",
                    "message": "'else' child has incorrect indentation level 49, expected level should be 28.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "886",
                    "severity": "error",
                    "message": "'else' child has incorrect indentation level 49, expected level should be 28.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "887",
                    "severity": "error",
                    "message": "'else' child has incorrect indentation level 49, expected level should be 28.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "888",
                    "severity": "error",
                    "message": "'else rcurly' has incorrect indentation level 45, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "934",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 35, expected level should be 28.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "935",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 35, expected level should be 28.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "936",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 31, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "937",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 35, expected level should be 28.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "938",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 35, expected level should be 28.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "939",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 35, expected level should be 28.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "940",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 31, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "941",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 42, expected level should be 28.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "942",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 42, expected level should be 28.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "943",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 42, expected level should be 28.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "944",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 38, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "945",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 42, expected level should be 28.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "946",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 42, expected level should be 28.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "947",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 42, expected level should be 28.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "948",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 38, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "949",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 49, expected level should be 28.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "950",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 49, expected level should be 28.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "951",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 45, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "952",
                    "severity": "error",
                    "message": "'else' child has incorrect indentation level 49, expected level should be 28.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "953",
                    "severity": "error",
                    "message": "'else' child has incorrect indentation level 49, expected level should be 28.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "954",
                    "severity": "error",
                    "message": "'else' child has incorrect indentation level 49, expected level should be 28.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "955",
                    "severity": "error",
                    "message": "'else' child has incorrect indentation level 49, expected level should be 28.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "956",
                    "severity": "error",
                    "message": "'else' child has incorrect indentation level 49, expected level should be 28.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "957",
                    "severity": "error",
                    "message": "'else' child has incorrect indentation level 49, expected level should be 28.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "958",
                    "severity": "error",
                    "message": "'else rcurly' has incorrect indentation level 45, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "980",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 35, expected level should be 28.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "981",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 35, expected level should be 28.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "982",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 31, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "983",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 35, expected level should be 28.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "984",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 35, expected level should be 28.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "985",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 35, expected level should be 28.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "986",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 31, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "987",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 42, expected level should be 28.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "988",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 42, expected level should be 28.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "989",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 42, expected level should be 28.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "990",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 38, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "991",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 42, expected level should be 28.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "992",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 42, expected level should be 28.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "993",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 42, expected level should be 28.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "994",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 38, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "995",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 49, expected level should be 28.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "996",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 49, expected level should be 28.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "997",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 45, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "999",
                    "severity": "error",
                    "message": "'else' child has incorrect indentation level 49, expected level should be 28.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "1000",
                    "severity": "error",
                    "message": "'else rcurly' has incorrect indentation level 45, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "1135",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 27, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "1136",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 27, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "1137",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 27, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "1138",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 23, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "1180",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 31, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "1181",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 31, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "1182",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 31, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "1183",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 27, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "1220",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 31, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "1221",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 31, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "1222",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 31, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "1223",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 27, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "1258",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 31, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "1259",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 31, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "1260",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 31, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "1261",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 27, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/errored/1/168/CommonG.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/codebuff/168/CommonG.java\nindex e9a1bb1298a..16743b6f3ac 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/errored/1/168/CommonG.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/codebuff/168/CommonG.java\n@@ -57,7 +57,6 @@ import org.openqa.selenium.remote.RemoteWebDriver;\n import org.reflections.Reflections;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n-\n import javax.imageio.ImageIO;\n import java.awt.image.BufferedImage;\n import java.io.*;\n@@ -74,10 +73,10 @@ import java.util.regex.Matcher;\n import java.util.regex.Pattern;\n \n import static com.stratio.qa.assertions.Assertions.assertThat;\n+\n import static org.testng.Assert.fail;\n import java.text.ParseException;\n import java.util.Date;\n-\n import org.everit.json.schema.loader.SchemaLoader;\n \n public class CommonG {\n@@ -144,10 +143,12 @@ public class CommonG {\n      * @param expectedMessage message used for comparing\n      * @return boolean\n      */\n+\n     public static Pattern matchesOrContains(String expectedMessage) {\n         Pattern pattern;\n         if (expectedMessage.startsWith(\"regex:\")) {\n-            String regex = expectedMessage.substring(expectedMessage.indexOf(\"regex:\") + 6, expectedMessage.length());\n+            String regex = expectedMessage.substring(expectedMessage.indexOf(\"regex:\") + 6,\n+                expectedMessage.length());\n             pattern = Pattern.compile(regex);\n         } else {\n             pattern = Pattern.compile(Pattern.quote(expectedMessage));\n@@ -160,6 +161,7 @@ public class CommonG {\n      *\n      * @return RemoteConnection\n      */\n+\n     public RemoteSSHConnection getRemoteSSHConnection() {\n         return remoteSSHConnection;\n     }\n@@ -167,6 +169,7 @@ public class CommonG {\n     /**\n      * Set the remote connection.\n      */\n+\n     public void setRemoteSSHConnection(RemoteSSHConnection remoteSSHConnection) {\n         this.remoteSSHConnection = remoteSSHConnection;\n     }\n@@ -176,6 +179,7 @@ public class CommonG {\n      *\n      * @return String\n      */\n+\n     public String getRestHost() {\n         return this.restHost;\n     }\n@@ -185,6 +189,7 @@ public class CommonG {\n      *\n      * @param restHost api host\n      */\n+\n     public void setRestHost(String restHost) {\n         this.restHost = restHost;\n     }\n@@ -194,6 +199,7 @@ public class CommonG {\n      *\n      * @return String\n      */\n+\n     public String getRestPort() {\n         return this.restPort;\n     }\n@@ -203,6 +209,7 @@ public class CommonG {\n      *\n      * @param restPort api port\n      */\n+\n     public void setRestPort(String restPort) {\n         this.restPort = restPort;\n     }\n@@ -212,6 +219,7 @@ public class CommonG {\n      *\n      * @return String\n      */\n+\n     public String getWebHost() {\n         return this.webHost;\n     }\n@@ -221,6 +229,7 @@ public class CommonG {\n      *\n      * @param webHost host where app is running\n      */\n+\n     public void setWebHost(String webHost) {\n         this.webHost = webHost;\n     }\n@@ -230,6 +239,7 @@ public class CommonG {\n      *\n      * @return String\n      */\n+\n     public String getWebPort() {\n         return this.webPort;\n     }\n@@ -239,6 +249,7 @@ public class CommonG {\n      *\n      * @param webPort port where app is running\n      */\n+\n     public void setWebPort(String webPort) {\n         this.webPort = webPort;\n     }\n@@ -248,6 +259,7 @@ public class CommonG {\n      *\n      * @return Logger\n      */\n+\n     public Logger getLogger() {\n         return this.logger;\n     }\n@@ -257,6 +269,7 @@ public class CommonG {\n      *\n      * @return List(Exception)\n      */\n+\n     public List<Exception> getExceptions() {\n         return ExceptionList.INSTANCE.getExceptions();\n     }\n@@ -266,6 +279,7 @@ public class CommonG {\n      *\n      * @return List(Exception)\n      */\n+\n     public Condition<WebElement> getTextFieldCondition() {\n         return Conditions.INSTANCE.getTextFieldCondition();\n     }\n@@ -275,6 +289,7 @@ public class CommonG {\n      *\n      * @return CassandraUtils\n      */\n+\n     public CassandraUtils getCassandraClient() {\n         return CassandraUtil.INSTANCE.getCassandraUtils();\n     }\n@@ -284,6 +299,7 @@ public class CommonG {\n      *\n      * @return ElasticSearchUtils\n      */\n+\n     public ElasticSearchUtils getElasticSearchClient() {\n         return ElasticSearchUtil.INSTANCE.getElasticSearchUtils();\n     }\n@@ -293,6 +309,7 @@ public class CommonG {\n      *\n      * @return KafkaUtils\n      */\n+\n     public KafkaUtils getKafkaUtils() {\n         return KafkaUtil.INSTANCE.getKafkaUtils();\n     }\n@@ -302,6 +319,7 @@ public class CommonG {\n      *\n      * @return MongoDBUtils\n      */\n+\n     public MongoDBUtils getMongoDBClient() {\n         return MongoDBUtil.INSTANCE.getMongoDBUtils();\n     }\n@@ -311,6 +329,7 @@ public class CommonG {\n      *\n      * @return ZookeperSecUtils\n      */\n+\n     public ZookeeperSecUtils getZookeeperSecClient() {\n         return ZookeeperSecUtil.INSTANCE.getZookeeperSecUtils();\n     }\n@@ -320,6 +339,7 @@ public class CommonG {\n      *\n      * @return RemoteWebDriver\n      */\n+\n     public RemoteWebDriver getDriver() {\n         return driver;\n     }\n@@ -329,6 +349,7 @@ public class CommonG {\n      *\n      * @param driver driver to be used for testing\n      */\n+\n     public void setDriver(RemoteWebDriver driver) {\n         this.driver = driver;\n     }\n@@ -338,6 +359,7 @@ public class CommonG {\n      *\n      * @return String\n      */\n+\n     public String getBrowserName() {\n         return browserName;\n     }\n@@ -347,6 +369,7 @@ public class CommonG {\n      *\n      * @param browserName browser to be used for testing\n      */\n+\n     public void setBrowserName(String browserName) {\n         this.browserName = browserName;\n     }\n@@ -365,11 +388,9 @@ public class CommonG {\n      * @throws NoSuchFieldException     exception\n      * @throws ClassNotFoundException   exception\n      */\n-    public List<WebElement> locateElement(String method, String element,\n-                                          Integer expectedCount) throws ClassNotFoundException, NoSuchFieldException, SecurityException, IllegalArgumentException, IllegalAccessException {\n \n+    public List<WebElement> locateElement(String method, String element, Integer expectedCount) throws ClassNotFoundException, NoSuchFieldException, SecurityException, IllegalArgumentException, IllegalAccessException {\n         List<WebElement> wel = null;\n-\n         if (\"id\".equals(method)) {\n             logger.debug(\"Locating {} by id\", element);\n             wel = this.getDriver().findElements(By.id(element));\n@@ -377,22 +398,20 @@ public class CommonG {\n             logger.debug(\"Locating {} by name\", element);\n             wel = this.getDriver().findElements(By.name(element));\n         } else if (\"class\".equals(method)) {\n-            logger.debug(\"Locating {} by class\", element);\n-            wel = this.getDriver().findElements(By.className(element));\n-        } else if (\"xpath\".equals(method)) {\n-            logger.debug(\"Locating {} by xpath\", element);\n-            wel = this.getDriver().findElements(By.xpath(element));\n-        } else if (\"css\".equals(method)) {\n-            wel = this.getDriver().findElements(By.cssSelector(element));\n-        } else {\n-            fail(\"Unknown search method: \" + method);\n-        }\n-\n+                   logger.debug(\"Locating {} by class\", element);\n+                   wel = this.getDriver().findElements(By.className(element));\n+               } else if (\"xpath\".equals(method)) {\n+                   logger.debug(\"Locating {} by xpath\", element);\n+                   wel = this.getDriver().findElements(By.xpath(element));\n+               } else if (\"css\".equals(method)) {\n+                          wel = this.getDriver().findElements(By.cssSelector(element));\n+                      } else {\n+                          fail(\"Unknown search method: \" + method);\n+                      }\n         if (expectedCount != -1) {\n             PreviousWebElements pwel = new PreviousWebElements(wel);\n             assertThat(this, pwel).as(\"Element count doesnt match\").hasSize(expectedCount);\n         }\n-\n         return wel;\n     }\n \n@@ -403,6 +422,7 @@ public class CommonG {\n      * @param type   type\n      * @return String\n      */\n+\n     public String captureEvidence(WebDriver driver, String type, Scenario scenario) {\n         return captureEvidence(driver, type, \"\", scenario);\n     }\n@@ -415,6 +435,7 @@ public class CommonG {\n      * @param suffix suffix\n      * @return String\n      */\n+\n     public String captureEvidence(WebDriver driver, String type, String suffix, Scenario scenario) {\n         String testSuffix = System.getProperty(\"TESTSUFFIX\");\n         String dir = \"./target/executions/\";\n@@ -425,28 +446,20 @@ public class CommonG {\n         String clazz = ThreadProperty.get(\"class\");\n         String currentBrowser = ThreadProperty.get(\"browser\");\n         String currentData = ThreadProperty.get(\"dataSet\");\n-\n         if (!currentData.equals(\"\")) {\n-            currentData = currentData\n-                    .replaceAll(\"[\\\\\\\\|\\\\/|\\\\|\\\\s|:|\\\\*]\", \"_\");\n+            currentData = currentData.replaceAll(\"[\\\\\\\\|\\\\/|\\\\|\\\\s|:|\\\\*]\", \"_\");\n         }\n-\n         if (!\"\".equals(currentData)) {\n             currentData = \"-\" + HashUtils.doHash(currentData);\n         }\n \n         Timestamp ts = new Timestamp(new java.util.Date().getTime());\n-        String outputFile = dir + clazz + \"/\"\n-                + ThreadProperty.get(\"feature\") + \".\" + ThreadProperty.get(\"scenario\") + \"/\" + currentBrowser +\n-                currentData + ts.toString() + suffix;\n-\n+        String outputFile = dir + clazz + \"/\" + ThreadProperty.get(\"feature\") + \".\" + ThreadProperty.get(\"scenario\") + \"/\" + currentBrowser + currentData + ts.toString() + suffix;\n         outputFile = outputFile.replaceAll(\" \", \"_\");\n \n         if (type.endsWith(\"htmlSource\")) {\n             if (type.equals(\"framehtmlSource\")) {\n-                boolean isFrame = (Boolean) ((JavascriptExecutor) driver)\n-                        .executeScript(\"return window.top != window.self\");\n-\n+                boolean isFrame = (Boolean) ((JavascriptExecutor) driver).executeScript(\"return window.top != window.self\");\n                 if (isFrame) {\n                     outputFile = outputFile + \"frame.html\";\n                 } else {\n@@ -456,13 +469,10 @@ public class CommonG {\n                 driver.switchTo().defaultContent();\n                 outputFile = outputFile + \".html\";\n             }\n-\n             if (!outputFile.equals(\"\")) {\n                 String source = ((RemoteWebDriver) driver).getPageSource();\n-\n                 File fout = new File(outputFile);\n                 boolean dirs = fout.getParentFile().mkdirs();\n-\n                 try (FileOutputStream fos = new FileOutputStream(fout, true)) {\n                     Writer out = new OutputStreamWriter(fos, \"UTF8\");\n                     PrintWriter writer = new PrintWriter(out, false);\n@@ -473,24 +483,19 @@ public class CommonG {\n                     logger.error(\"Exception on evidence capture\", e);\n                 }\n             }\n-\n         } else if (\"screenCapture\".equals(type)) {\n             outputFile = outputFile + \".png\";\n             File file = null;\n             driver.switchTo().defaultContent();\n-            ((Locatable) driver.findElement(By.tagName(\"body\")))\n-                    .getCoordinates().inViewPort();\n+            ((Locatable) driver.findElement(By.tagName(\"body\"))).getCoordinates().inViewPort();\n \n-            if (currentBrowser.startsWith(\"chrome\")\n-                    || currentBrowser.startsWith(\"droidemu\")) {\n+            if (currentBrowser.startsWith(\"chrome\") || currentBrowser.startsWith(\"droidemu\")) {\n                 Actions actions = new Actions(driver);\n                 actions.keyDown(Keys.CONTROL).sendKeys(Keys.HOME).perform();\n                 actions.keyUp(Keys.CONTROL).perform();\n-\n                 file = chromeFullScreenCapture(driver);\n             } else {\n-                file = ((TakesScreenshot) driver)\n-                        .getScreenshotAs(OutputType.FILE);\n+                file = ((TakesScreenshot) driver).getScreenshotAs(OutputType.FILE);\n             }\n             try {\n                 FileUtils.copyFile(file, new File(outputFile));\n@@ -499,20 +504,15 @@ public class CommonG {\n                 logger.error(\"Exception on copying browser screen capture\", e);\n             }\n         }\n-\n         return outputFile;\n-\n     }\n \n-    private File adjustLastCapture(Integer newTrailingImageHeight,\n-                                   List<File> capture) {\n+    private File adjustLastCapture(Integer newTrailingImageHeight, List<File> capture) {\n         // cuts last image just in case it dupes information\n         Integer finalHeight = 0;\n         Integer finalWidth = 0;\n-\n         File trailingImage = capture.get(capture.size() - 1);\n         capture.remove(capture.size() - 1);\n-\n         BufferedImage oldTrailingImage;\n         File temp = null;\n         try {\n@@ -523,26 +523,18 @@ public class CommonG {\n             } else {\n                 newTrailingImage = new BufferedImage(oldTrailingImage.getWidth(), oldTrailingImage.getHeight() - newTrailingImageHeight, BufferedImage.TYPE_INT_RGB);\n             }\n-\n-            newTrailingImage.createGraphics().drawImage(oldTrailingImage, 0,\n-                    0 - newTrailingImageHeight, null);\n-\n-            File newTrailingImageF = File.createTempFile(\"tmpnewTrailingImage\",\n-                    \".png\");\n+            newTrailingImage.createGraphics().drawImage(oldTrailingImage, 0, 0 - newTrailingImageHeight, null);\n+            File newTrailingImageF = File.createTempFile(\"tmpnewTrailingImage\", \".png\");\n             newTrailingImageF.deleteOnExit();\n-\n             ImageIO.write(newTrailingImage, \"png\", newTrailingImageF);\n-\n             capture.add(newTrailingImageF);\n-\n             finalWidth = ImageIO.read(capture.get(0)).getWidth();\n+\n             for (File cap : capture) {\n                 finalHeight += ImageIO.read(cap).getHeight();\n             }\n \n-            BufferedImage img = new BufferedImage(finalWidth, finalHeight,\n-                    BufferedImage.TYPE_INT_RGB);\n-\n+            BufferedImage img = new BufferedImage(finalWidth, finalHeight, BufferedImage.TYPE_INT_RGB);\n             Integer y = 0;\n             BufferedImage tmpImg = null;\n             for (File cap : capture) {\n@@ -552,11 +544,9 @@ public class CommonG {\n             }\n \n             long ts = System.currentTimeMillis() / DEFAULT_CURRENT_TIME;\n-\n             temp = File.createTempFile(\"chromecap\" + Long.toString(ts), \".png\");\n             temp.deleteOnExit();\n             ImageIO.write(img, \"png\", temp);\n-\n         } catch (IOException e) {\n             logger.error(\"Cant read image\", e);\n         }\n@@ -567,35 +557,24 @@ public class CommonG {\n         driver.switchTo().defaultContent();\n         // scroll loop n times to get the whole page if browser is chrome\n         ArrayList<File> capture = new ArrayList<File>();\n-\n         Boolean atBottom = false;\n-        Integer windowSize = ((Long) ((JavascriptExecutor) driver)\n-                .executeScript(\"return document.documentElement.clientHeight\"))\n-                .intValue();\n-\n+        Integer windowSize = ((Long) ((JavascriptExecutor) driver).executeScript(\"return document.documentElement.clientHeight\")).intValue();\n         Integer accuScroll = 0;\n         Integer newTrailingImageHeight = 0;\n-\n         try {\n             while (!atBottom) {\n-\n                 Thread.sleep(DEFAULT_SLEEP_TIME);\n-                capture.add(((TakesScreenshot) driver)\n-                        .getScreenshotAs(OutputType.FILE));\n-\n-                ((JavascriptExecutor) driver).executeScript(\"if(window.screen)\"\n-                        + \" {window.scrollBy(0,\" + windowSize + \");};\");\n-\n+                capture.add(((TakesScreenshot) driver).getScreenshotAs(OutputType.FILE));\n+                ((JavascriptExecutor) driver).executeScript(\"if(window.screen)\" + \" {window.scrollBy(0,\" + windowSize + \");};\");\n                 accuScroll += windowSize;\n+\n                 if (getDocumentHeight(driver) <= accuScroll) {\n                     atBottom = true;\n                 }\n             }\n-\n         } catch (InterruptedException e) {\n             logger.error(\"Interrupted waits among scrolls\", e);\n         }\n-\n         newTrailingImageHeight = accuScroll - getDocumentHeight(driver);\n         return adjustLastCapture(newTrailingImageHeight, capture);\n     }\n@@ -610,6 +589,7 @@ public class CommonG {\n      *\n      * @param pngFile Screenshot file\n      */\n+\n     private void addPngFileToReport(File pngFile, Scenario scenario) {\n         if (scenario != null) {\n             try {\n@@ -628,6 +608,7 @@ public class CommonG {\n      *\n      * @return List(WebElement)\n      */\n+\n     public PreviousWebElements getPreviousWebElements() {\n         return previousWebElements;\n     }\n@@ -635,6 +616,7 @@ public class CommonG {\n     /**\n      * Set the previous webElement\n      */\n+\n     public void setPreviousWebElements(PreviousWebElements previousWebElements) {\n         this.previousWebElements = previousWebElements;\n     }\n@@ -644,6 +626,7 @@ public class CommonG {\n      *\n      * @return String\n      */\n+\n     public String getParentWindow() {\n         return this.parentWindow;\n     }\n@@ -651,12 +634,13 @@ public class CommonG {\n     /**\n      * Sets the parentWindow\n      */\n+\n     public void setParentWindow(String windowHandle) {\n         this.parentWindow = windowHandle;\n-\n     }\n \n     // COPIED FROM COMMON.JAVA\n+\n     public AsyncHttpClient getClient() {\n         return client;\n     }\n@@ -670,7 +654,6 @@ public class CommonG {\n     }\n \n     public void setResponse(String endpoint, Response response) throws IOException {\n-\n         Integer statusCode = response.getStatusCode();\n         String httpResponse = response.getResponseBody();\n         List<Cookie> cookies = response.getCookies();\n@@ -684,20 +667,17 @@ public class CommonG {\n      * @param type     type of information, it can be: json|string\n      * @return String\n      */\n+\n     public String retrieveData(String baseData, String type) {\n         String result;\n-\n         InputStream stream = getClass().getClassLoader().getResourceAsStream(baseData);\n-\n         Writer writer = new StringWriter();\n         char[] buffer = new char[1024];\n         Reader reader;\n-\n         if (stream == null) {\n             this.getLogger().error(\"File does not exist: {}\", baseData);\n             return \"ERR! File not found: \" + baseData;\n         }\n-\n         try {\n             reader = new BufferedReader(new InputStreamReader(stream, \"UTF-8\"));\n             int n;\n@@ -713,11 +693,9 @@ public class CommonG {\n                 this.getLogger().error(closeException.getMessage());\n             }\n         }\n-        String text = writer.toString();\n \n+        String text = writer.toString();\n         String std = text.replace(\"\\r\", \"\").replace(\"\\n\", \"\"); // make sure we have unix style text regardless of the input\n-\n-\n         if (\"json\".equals(type)) {\n             result = JsonValue.readHjson(std).asObject().toString();\n         } else {\n@@ -816,29 +794,26 @@ public class CommonG {\n      * @return String\n      * @throws Exception\n      */\n+\n     public String modifyData(String data, String type, DataTable modifications) throws Exception {\n         String modifiedData = data;\n         String typeJsonObject = \"\";\n         String nullValue = \"\";\n-\n         JSONArray jArray;\n         JSONObject jObject;\n         Double jNumber;\n         Long jLong;\n         Boolean jBoolean;\n         boolean array = false;\n-\n         if (\"json\".equals(type) || \"gov\".equals(type)) {\n             LinkedHashMap jsonAsMap = new LinkedHashMap();\n             for (int i = 0; i < modifications.raw().size(); i++) {\n                 String composeKey = modifications.raw().get(i).get(0);\n                 String operation = modifications.raw().get(i).get(1);\n                 String newValue = modifications.raw().get(i).get(2);\n-\n                 if (modifications.raw().get(0).size() == 4) {\n                     typeJsonObject = modifications.raw().get(i).get(3);\n                 }\n-\n                 if (modifiedData.startsWith(\"[\") && modifiedData.endsWith(\"]\")) {\n                     modifiedData = \"{\\\"content\\\":\" + modifiedData + \"}\";\n                     array = true;\n@@ -847,7 +822,6 @@ public class CommonG {\n                     removeNulls(object);\n                     modifiedData = JsonValue.readHjson(object.toString()).toString();\n                 }\n-\n                 switch (operation.toUpperCase()) {\n                     case \"DELETE\":\n                         if (array) {\n@@ -860,6 +834,7 @@ public class CommonG {\n                             composeKey = \"$.content\" + composeKey.substring(1, composeKey.length());\n                         }\n                         // Get the last key\n+\n                         String newKey;\n                         String newComposeKey;\n                         if (composeKey.contains(\".\")) {\n@@ -869,9 +844,9 @@ public class CommonG {\n                             newKey = composeKey;\n                             newComposeKey = \"$\";\n                         }\n-\n                         if (\"array\".equals(typeJsonObject)) {\n                             jArray = new JSONArray();\n+\n                             if (!\"[]\".equals(newValue)) {\n                                 jArray = new JSONArray(newValue);\n                             }\n@@ -879,37 +854,38 @@ public class CommonG {\n                             break;\n                         } else if (\"object\".equals(typeJsonObject)) {\n                             jObject = new JSONObject();\n+\n                             if (!\"{}\".equals(newValue)) {\n                                 jObject = new JSONObject(newValue);\n                             }\n                             jsonAsMap = JsonPath.parse(modifiedData).put(newComposeKey, newKey, jObject).json();\n                             break;\n                         } else if (\"string\".equals(typeJsonObject)) {\n-                            jsonAsMap = JsonPath.parse(modifiedData).put(newComposeKey, newKey, newValue).json();\n-                            break;\n-                        } else if (\"number\".equals(typeJsonObject)) {\n-                            jNumber = new Double(newValue);\n-                            jsonAsMap = JsonPath.parse(modifiedData).put(newComposeKey, newKey, jNumber).json();\n-                            break;\n-                        } else if (\"long\".equals(typeJsonObject)) {\n-                            jLong = new Long(newValue);\n-                            jsonAsMap = JsonPath.parse(modifiedData).set(composeKey, jLong).json();\n-                            break;\n-                        } else if (\"boolean\".equals(typeJsonObject)) {\n-                            jBoolean = new Boolean(newValue);\n-                            jsonAsMap = JsonPath.parse(modifiedData).put(newComposeKey, newKey, jBoolean).json();\n-                            break;\n-                        } else if (\"null\".equals(typeJsonObject)) {\n-                            nullValue = JsonPath.parse(modifiedData).put(newComposeKey, newKey, null).jsonString();\n-                            break;\n-                        } else {\n-                            String replaceValue = JsonPath.parse(modifiedData).read(composeKey);\n-                            String toBeReplaced = newValue.split(\"->\")[0];\n-                            String replacement = newValue.split(\"->\")[1];\n-                            newValue = replaceValue.replace(toBeReplaced, replacement);\n-                            jsonAsMap = JsonPath.parse(modifiedData).put(newComposeKey, newKey, newValue).json();\n-                            break;\n-                        }\n+                                   jsonAsMap = JsonPath.parse(modifiedData).put(newComposeKey, newKey, newValue).json();\n+                                   break;\n+                               } else if (\"number\".equals(typeJsonObject)) {\n+                                   jNumber = new Double(newValue);\n+                                   jsonAsMap = JsonPath.parse(modifiedData).put(newComposeKey, newKey, jNumber).json();\n+                                   break;\n+                               } else if (\"long\".equals(typeJsonObject)) {\n+                                          jLong = new Long(newValue);\n+                                          jsonAsMap = JsonPath.parse(modifiedData).set(composeKey, jLong).json();\n+                                          break;\n+                                      } else if (\"boolean\".equals(typeJsonObject)) {\n+                                          jBoolean = new Boolean(newValue);\n+                                          jsonAsMap = JsonPath.parse(modifiedData).put(newComposeKey, newKey, jBoolean).json();\n+                                          break;\n+                                      } else if (\"null\".equals(typeJsonObject)) {\n+                                                 nullValue = JsonPath.parse(modifiedData).put(newComposeKey, newKey, null).jsonString();\n+                                                 break;\n+                                             } else {\n+                                                 String replaceValue = JsonPath.parse(modifiedData).read(composeKey);\n+                                                 String toBeReplaced = newValue.split(\"->\")[0];\n+                                                 String replacement = newValue.split(\"->\")[1];\n+                                                 newValue = replaceValue.replace(toBeReplaced, replacement);\n+                                                 jsonAsMap = JsonPath.parse(modifiedData).put(newComposeKey, newKey, newValue).json();\n+                                                 break;\n+                                             }\n //                        jsonAsMap = JsonPath.parse(modifiedData).put(newComposeKey, newKey, newValue).json();\n //                        break;\n                     case \"UPDATE\":\n@@ -922,6 +898,7 @@ public class CommonG {\n                         if (array) {\n                             composeKey = \"$.content\" + composeKey.substring(1, composeKey.length());\n                         }\n+\n                         String appendValue = JsonPath.parse(modifiedData).read(composeKey);\n                         jsonAsMap = JsonPath.parse(modifiedData).set(composeKey, appendValue + newValue).json();\n                         break;\n@@ -929,6 +906,7 @@ public class CommonG {\n                         if (array) {\n                             composeKey = \"$.content\" + composeKey.substring(1, composeKey.length());\n                         }\n+\n                         String prependValue = JsonPath.parse(modifiedData).read(composeKey);\n                         jsonAsMap = JsonPath.parse(modifiedData).set(composeKey, newValue + prependValue).json();\n                         break;\n@@ -938,6 +916,7 @@ public class CommonG {\n                         }\n                         if (\"array\".equals(typeJsonObject)) {\n                             jArray = new JSONArray();\n+\n                             if (!\"[]\".equals(newValue)) {\n                                 jArray = new JSONArray(newValue);\n                             }\n@@ -945,43 +924,45 @@ public class CommonG {\n                             break;\n                         } else if (\"object\".equals(typeJsonObject)) {\n                             jObject = new JSONObject();\n+\n                             if (!\"{}\".equals(newValue)) {\n                                 jObject = new JSONObject(newValue);\n                             }\n                             jsonAsMap = JsonPath.parse(modifiedData).set(composeKey, jObject).json();\n                             break;\n                         } else if (\"string\".equals(typeJsonObject)) {\n-                            jsonAsMap = JsonPath.parse(modifiedData).set(composeKey, newValue).json();\n-                            break;\n-                        } else if (\"number\".equals(typeJsonObject)) {\n-                            jNumber = new Double(newValue);\n-                            jsonAsMap = JsonPath.parse(modifiedData).set(composeKey, jNumber).json();\n-                            break;\n-                        } else if (\"long\".equals(typeJsonObject)) {\n-                            jLong = new Long(newValue);\n-                            jsonAsMap = JsonPath.parse(modifiedData).set(composeKey, jLong).json();\n-                            break;\n-                        } else if (\"boolean\".equals(typeJsonObject)) {\n-                            jBoolean = new Boolean(newValue);\n-                            jsonAsMap = JsonPath.parse(modifiedData).set(composeKey, jBoolean).json();\n-                            break;\n-                        } else if (\"null\".equals(typeJsonObject)) {\n-                            nullValue = JsonPath.parse(modifiedData).set(composeKey, null).jsonString();\n-                            break;\n-                        } else {\n-                            String replaceValue = JsonPath.parse(modifiedData).read(composeKey);\n-                            String toBeReplaced = newValue.split(\"->\")[0];\n-                            String replacement = newValue.split(\"->\")[1];\n-                            newValue = replaceValue.replace(toBeReplaced, replacement);\n-                            jsonAsMap = JsonPath.parse(modifiedData).set(composeKey, newValue).json();\n-                            break;\n-                        }\n+                                   jsonAsMap = JsonPath.parse(modifiedData).set(composeKey, newValue).json();\n+                                   break;\n+                               } else if (\"number\".equals(typeJsonObject)) {\n+                                   jNumber = new Double(newValue);\n+                                   jsonAsMap = JsonPath.parse(modifiedData).set(composeKey, jNumber).json();\n+                                   break;\n+                               } else if (\"long\".equals(typeJsonObject)) {\n+                                          jLong = new Long(newValue);\n+                                          jsonAsMap = JsonPath.parse(modifiedData).set(composeKey, jLong).json();\n+                                          break;\n+                                      } else if (\"boolean\".equals(typeJsonObject)) {\n+                                          jBoolean = new Boolean(newValue);\n+                                          jsonAsMap = JsonPath.parse(modifiedData).set(composeKey, jBoolean).json();\n+                                          break;\n+                                      } else if (\"null\".equals(typeJsonObject)) {\n+                                                 nullValue = JsonPath.parse(modifiedData).set(composeKey, null).jsonString();\n+                                                 break;\n+                                             } else {\n+                                                 String replaceValue = JsonPath.parse(modifiedData).read(composeKey);\n+                                                 String toBeReplaced = newValue.split(\"->\")[0];\n+                                                 String replacement = newValue.split(\"->\")[1];\n+                                                 newValue = replaceValue.replace(toBeReplaced, replacement);\n+                                                 jsonAsMap = JsonPath.parse(modifiedData).set(composeKey, newValue).json();\n+                                                 break;\n+                                             }\n                     case \"ADDTO\":\n                         if (array) {\n                             composeKey = \"$.content\" + composeKey.substring(1, composeKey.length());\n                         }\n                         if (\"array\".equals(typeJsonObject)) {\n                             jArray = new JSONArray();\n+\n                             if (!\"[]\".equals(newValue)) {\n                                 jArray = new JSONArray(newValue);\n                             }\n@@ -989,33 +970,34 @@ public class CommonG {\n                             break;\n                         } else if (\"object\".equals(typeJsonObject)) {\n                             jObject = new JSONObject();\n+\n                             if (!\"{}\".equals(newValue)) {\n                                 jObject = new JSONObject(newValue);\n                             }\n                             jsonAsMap = JsonPath.parse(modifiedData).add(composeKey, jObject).json();\n                             break;\n                         } else if (\"string\".equals(typeJsonObject)) {\n-                            jsonAsMap = JsonPath.parse(modifiedData).add(composeKey, newValue).json();\n-                            break;\n-                        } else if (\"number\".equals(typeJsonObject)) {\n-                            jNumber = new Double(newValue);\n-                            jsonAsMap = JsonPath.parse(modifiedData).add(composeKey, jNumber).json();\n-                            break;\n-                        } else if (\"long\".equals(typeJsonObject)) {\n-                            jLong = new Long(newValue);\n-                            jsonAsMap = JsonPath.parse(modifiedData).set(composeKey, jLong).json();\n-                            break;\n-                        } else if (\"boolean\".equals(typeJsonObject)) {\n-                            jBoolean = new Boolean(newValue);\n-                            jsonAsMap = JsonPath.parse(modifiedData).add(composeKey, jBoolean).json();\n-                            break;\n-                        } else if (\"null\".equals(typeJsonObject)) {\n-                            nullValue = JsonPath.parse(modifiedData).add(composeKey, null).jsonString();\n-                            break;\n-                        } else {\n+                                   jsonAsMap = JsonPath.parse(modifiedData).add(composeKey, newValue).json();\n+                                   break;\n+                               } else if (\"number\".equals(typeJsonObject)) {\n+                                   jNumber = new Double(newValue);\n+                                   jsonAsMap = JsonPath.parse(modifiedData).add(composeKey, jNumber).json();\n+                                   break;\n+                               } else if (\"long\".equals(typeJsonObject)) {\n+                                          jLong = new Long(newValue);\n+                                          jsonAsMap = JsonPath.parse(modifiedData).set(composeKey, jLong).json();\n+                                          break;\n+                                      } else if (\"boolean\".equals(typeJsonObject)) {\n+                                          jBoolean = new Boolean(newValue);\n+                                          jsonAsMap = JsonPath.parse(modifiedData).add(composeKey, jBoolean).json();\n+                                          break;\n+                                      } else if (\"null\".equals(typeJsonObject)) {\n+                                                 nullValue = JsonPath.parse(modifiedData).add(composeKey, null).jsonString();\n+                                                 break;\n+                                             } else {\n                             // TO-DO: understand  newValue.split(\"->\")[0];  and  newValue.split(\"->\")[1];\n-                            break;\n-                        }\n+                                                 break;\n+                                             }\n                     case \"HEADER\":\n                         if (array) {\n                             composeKey = \"$.content\" + composeKey.substring(1, composeKey.length());\n@@ -1025,8 +1007,8 @@ public class CommonG {\n                     default:\n                         throw new Exception(\"Modification type does not exist: \" + operation);\n                 }\n-\n                 modifiedData = new JSONObject(jsonAsMap).toString();\n+\n                 if (!\"\".equals(nullValue)) {\n                     modifiedData = nullValue;\n                 }\n@@ -1037,7 +1019,6 @@ public class CommonG {\n                 String value = modifications.raw().get(i).get(0);\n                 String operation = modifications.raw().get(i).get(1);\n                 String newValue = modifications.raw().get(i).get(2);\n-\n                 switch (operation.toUpperCase()) {\n                     case \"DELETE\":\n                         modifiedData = modifiedData.replace(value, \"\");\n@@ -1061,11 +1042,9 @@ public class CommonG {\n                 }\n             }\n         }\n-\n         if (array) {\n             modifiedData = modifiedData.substring(11, modifiedData.length() - 1);\n         }\n-\n         return modifiedData;\n     }\n \n@@ -1075,6 +1054,7 @@ public class CommonG {\n      * @param object JsonObject containing json where to replace null ocurrences\n      * @return JsonObject\n      */\n+\n     public JsonObject removeNulls(JsonObject object) {\n         for (int j = 0; j < object.names().size(); j++) {\n             if (JsonType.OBJECT.equals(object.get(object.names().get(j)).getType())) {\n@@ -1101,6 +1081,8 @@ public class CommonG {\n      * @param codeBase64  XXX\n      * @throws Exception exception\n      */\n+\n+\n     @Deprecated\n     public Future<Response> generateRequest(String requestType, boolean secure, String user, String password, String endPoint, String data, String type, String codeBase64) throws Exception {\n         return generateRequest(requestType, secure, user, password, endPoint, data, type);\n@@ -1118,22 +1100,18 @@ public class CommonG {\n      * @param type        type of data to be sent (json|string)\n      * @throws Exception exception\n      */\n-    public Future<Response> generateRequest(String requestType, boolean secure, String user, String password, String endPoint, String data, String type) throws Exception {\n \n+    public Future<Response> generateRequest(String requestType, boolean secure, String user, String password, String endPoint, String data, String type) throws Exception {\n         String protocol = this.getRestProtocol();\n         Future<Response> response = null;\n         BoundRequestBuilder request;\n         Realm realm = null;\n-\n-\n         if (this.getRestHost() == null) {\n             throw new Exception(\"Rest host has not been set\");\n         }\n-\n         if (this.getRestPort() == null) {\n             throw new Exception(\"Rest port has not been set\");\n         }\n-\n         if (this.getRestProtocol() == null) {\n             protocol = \"http://\";\n         }\n@@ -1142,14 +1120,8 @@ public class CommonG {\n \n         // Setup user and password for requests\n         if (user != null) {\n-            realm = new Realm.RealmBuilder()\n-                    .setPrincipal(user)\n-                    .setPassword(password)\n-                    .setUsePreemptiveAuth(true)\n-                    .setScheme(AuthScheme.BASIC)\n-                    .build();\n+            realm = new Realm.RealmBuilder().setPrincipal(user).setPassword(password).setUsePreemptiveAuth(true).setScheme(AuthScheme.BASIC).build();\n         }\n-\n         switch (requestType.toUpperCase()) {\n             case \"GET\":\n                 request = this.getClient().prepareGet(restURL + endPoint);\n@@ -1160,43 +1132,37 @@ public class CommonG {\n                     this.getLogger().debug(\"Sending request as: {}\", type);\n                     request = request.setHeader(\"Content-Type\", \"application/x-www-form-urlencoded; charset=UTF-8\");\n                 } else if (\"gov\".equals(type)) {\n-                    request = request.setHeader(\"Content-Type\", \"application/json; charset=UTF-8\");\n-                    request = request.setHeader(\"Accept\", \"application/json\");\n-                    request = request.setHeader(\"X-TenantID\", \"NONE\");\n-                }\n-\n+                           request = request.setHeader(\"Content-Type\", \"application/json; charset=UTF-8\");\n+                           request = request.setHeader(\"Accept\", \"application/json\");\n+                           request = request.setHeader(\"X-TenantID\", \"NONE\");\n+                       }\n                 if (this.getResponse() != null) {\n-                    this.getLogger().debug(\"Reusing coookies: {}\", this.getResponse().getCookies());\n+                    this.getLogger().debug(\"Reusing coookies: {}\",\n+                        this.getResponse().getCookies());\n                     request = request.setCookies(this.getResponse().getCookies());\n                 }\n-\n                 for (Cookie cook : this.getCookies()) {\n                     request = request.addCookie(cook);\n                 }\n-\n                 if (this.getSeleniumCookies().size() > 0) {\n                     for (org.openqa.selenium.Cookie cookie : this.getSeleniumCookies()) {\n-                        request.addCookie(new Cookie(cookie.getName(), cookie.getValue(),\n-                                false, cookie.getDomain(), cookie.getPath(), 99, false, false));\n+                        request.addCookie(new Cookie(cookie.getName(), cookie.getValue(), false, cookie.getDomain(), cookie.getPath(), 99, false, false));\n                     }\n                 }\n-\n                 if (!this.headers.isEmpty()) {\n                     for (Map.Entry<String, String> header : headers.entrySet()) {\n                         request = request.setHeader(header.getKey(), header.getValue());\n                     }\n                 }\n-\n                 if (user != null) {\n                     request = request.setRealm(realm);\n                 }\n-\n                 response = request.execute();\n                 break;\n-\n             case \"DELETE\":\n                 if (data == \"\") {\n                     request = this.getClient().prepareDelete(restURL + endPoint);\n+\n                     if (\"gov\".equals(type)) {\n                         request = request.setHeader(\"Content-Type\", \"application/json; charset=UTF-8\");\n                         request = request.setHeader(\"Accept\", \"application/json\");\n@@ -1204,38 +1170,34 @@ public class CommonG {\n                     }\n                 } else {\n                     request = this.getClient().prepareDelete(restURL + endPoint).setBody(data);\n+\n                     if (\"json\".equals(type)) {\n                         request = request.setHeader(\"Content-Type\", \"application/json; charset=UTF-8\");\n                     } else if (\"string\".equals(type)) {\n                         this.getLogger().debug(\"Sending request as: {}\", type);\n                         request = request.setHeader(\"Content-Type\", \"application/x-www-form-urlencoded; charset=UTF-8\");\n                     } else if (\"gov\".equals(type)) {\n-                        request = request.setHeader(\"Content-Type\", \"application/json; charset=UTF-8\");\n-                        request = request.setHeader(\"Accept\", \"application/json\");\n-                        request = request.setHeader(\"X-TenantID\", \"NONE\");\n-                    }\n+                               request = request.setHeader(\"Content-Type\", \"application/json; charset=UTF-8\");\n+                               request = request.setHeader(\"Accept\", \"application/json\");\n+                               request = request.setHeader(\"X-TenantID\", \"NONE\");\n+                           }\n                 }\n                 if (this.getSeleniumCookies().size() > 0) {\n                     for (org.openqa.selenium.Cookie cookie : this.getSeleniumCookies()) {\n-                        request.addCookie(new Cookie(cookie.getName(), cookie.getValue(),\n-                                false, cookie.getDomain(), cookie.getPath(), 99, false, false));\n+                        request.addCookie(new Cookie(cookie.getName(), cookie.getValue(), false, cookie.getDomain(), cookie.getPath(), 99, false, false));\n                     }\n                 }\n-\n                 for (Cookie cook : this.getCookies()) {\n                     request = request.addCookie(cook);\n                 }\n-\n                 if (!this.headers.isEmpty()) {\n                     for (Map.Entry<String, String> header : headers.entrySet()) {\n                         request = request.setHeader(header.getKey(), header.getValue());\n                     }\n                 }\n-\n                 if (user != null) {\n                     request = request.setRealm(realm);\n                 }\n-\n                 if (data == \"\") {\n                     response = request.execute();\n                 } else {\n@@ -1248,42 +1210,36 @@ public class CommonG {\n                     throw missingFields;\n                 } else {\n                     request = this.getClient().preparePost(restURL + endPoint).setBody(data);\n+\n                     if (\"json\".equals(type)) {\n                         request = request.setHeader(\"Content-Type\", \"application/json; charset=UTF-8\");\n                     } else if (\"string\".equals(type)) {\n                         this.getLogger().debug(\"Sending request as: {}\", type);\n                         request = request.setHeader(\"Content-Type\", \"application/x-www-form-urlencoded; charset=UTF-8\");\n                     } else if (\"gov\".equals(type)) {\n-                        request = request.setHeader(\"Content-Type\", \"application/json; charset=UTF-8\");\n-                        request = request.setHeader(\"Accept\", \"application/json\");\n-                        request = request.setHeader(\"X-TenantID\", \"NONE\");\n-                    }\n-\n+                               request = request.setHeader(\"Content-Type\", \"application/json; charset=UTF-8\");\n+                               request = request.setHeader(\"Accept\", \"application/json\");\n+                               request = request.setHeader(\"X-TenantID\", \"NONE\");\n+                           }\n                     if (this.getResponse() != null) {\n                         request = request.setCookies(this.getResponse().getCookies());\n                     }\n-\n                     if (this.getSeleniumCookies().size() > 0) {\n                         for (org.openqa.selenium.Cookie cookie : this.getSeleniumCookies()) {\n-                            request.addCookie(new Cookie(cookie.getName(), cookie.getValue(),\n-                                    false, cookie.getDomain(), cookie.getPath(), 99, false, false));\n+                            request.addCookie(new Cookie(cookie.getName(), cookie.getValue(), false, cookie.getDomain(), cookie.getPath(), 99, false, false));\n                         }\n                     }\n-\n                     for (Cookie cook : this.getCookies()) {\n                         request = request.addCookie(cook);\n                     }\n-\n                     if (!this.headers.isEmpty()) {\n                         for (Map.Entry<String, String> header : headers.entrySet()) {\n                             request = request.setHeader(header.getKey(), header.getValue());\n                         }\n                     }\n-\n                     if (user != null) {\n                         request = request.setRealm(realm);\n                     }\n-\n                     response = this.getClient().executeRequest(request.build());\n                     break;\n                 }\n@@ -1293,41 +1249,35 @@ public class CommonG {\n                     throw missingFields;\n                 } else {\n                     request = this.getClient().preparePut(restURL + endPoint).setBody(data);\n+\n                     if (\"json\".equals(type)) {\n                         request = request.setHeader(\"Content-Type\", \"application/json; charset=UTF-8\");\n                     } else if (\"string\".equals(type)) {\n                         request = request.setHeader(\"Content-Type\", \"application/x-www-form-urlencoded; charset=UTF-8\");\n                     } else if (\"gov\".equals(type)) {\n-                        request = request.setHeader(\"Content-Type\", \"application/json; charset=UTF-8\");\n-                        request = request.setHeader(\"Accept\", \"application/json\");\n-                        request = request.setHeader(\"X-TenantID\", \"NONE\");\n-                    }\n-\n+                               request = request.setHeader(\"Content-Type\", \"application/json; charset=UTF-8\");\n+                               request = request.setHeader(\"Accept\", \"application/json\");\n+                               request = request.setHeader(\"X-TenantID\", \"NONE\");\n+                           }\n                     if (this.getResponse() != null) {\n                         request = request.setCookies(this.getResponse().getCookies());\n                     }\n-\n                     if (this.getSeleniumCookies().size() > 0) {\n                         for (org.openqa.selenium.Cookie cookie : this.getSeleniumCookies()) {\n-                            request.addCookie(new Cookie(cookie.getName(), cookie.getValue(),\n-                                    false, cookie.getDomain(), cookie.getPath(), 99, false, false));\n+                            request.addCookie(new Cookie(cookie.getName(), cookie.getValue(), false, cookie.getDomain(), cookie.getPath(), 99, false, false));\n                         }\n                     }\n-\n                     for (Cookie cook : this.getCookies()) {\n                         request = request.addCookie(cook);\n                     }\n-\n                     if (!this.headers.isEmpty()) {\n                         for (Map.Entry<String, String> header : headers.entrySet()) {\n                             request = request.setHeader(header.getKey(), header.getValue());\n                         }\n                     }\n-\n                     if (user != null) {\n                         request = request.setRealm(realm);\n                     }\n-\n                     response = this.getClient().executeRequest(request.build());\n                     break;\n                 }\n@@ -1355,6 +1305,8 @@ public class CommonG {\n      * @param type        type of data to be sent (json|string)\n      * @throws Exception exception\n      */\n+\n+\n     @Deprecated\n     public Future<Response> generateRequest(String requestType, boolean secure, String endPoint, String data, String type, String codeBase64) throws Exception {\n         return generateRequest(requestType, false, null, null, endPoint, data, type, \"\");\n@@ -1379,11 +1331,9 @@ public class CommonG {\n     public void setPreviousElement(String element, String value) throws NoSuchFieldException, SecurityException, IllegalArgumentException, IllegalAccessException, InstantiationException, ClassNotFoundException, NoSuchMethodException, InvocationTargetException {\n         Reflections reflections = new Reflections(\"com.stratio\");\n         Set classes = reflections.getSubTypesOf(CommonG.class);\n-\n         Object pp = (classes.toArray())[0];\n         String qq = (pp.toString().split(\" \"))[1];\n         Class<?> c = Class.forName(qq.toString());\n-\n         Field ff = c.getDeclaredField(element);\n         ff.setAccessible(true);\n         ff.set(null, value);\n@@ -1435,7 +1385,7 @@ public class CommonG {\n \n     public boolean cookieExists(String cookieName) {\n         if (this.getSeleniumCookies() != null && this.getSeleniumCookies().size() != 0) {\n-            for (org.openqa.selenium.Cookie cookie: this.getSeleniumCookies()) {\n+            for (org.openqa.selenium.Cookie cookie : this.getSeleniumCookies()) {\n                 if (cookie.getName().contains(cookieName)) {\n                     return true;\n                 }\n@@ -1471,28 +1421,27 @@ public class CommonG {\n      *                        IMPORTANT: All columns must exist\n      * @throws Exception exception\n      */\n+\n     public void resultsMustBeCSV(DataTable expectedResults) throws Exception {\n         if (getCSVResults() != null) {\n             //Map for cucumber expected results\n             List<Map<String, String>> resultsListExpected = new ArrayList<Map<String, String>>();\n             Map<String, String> resultsCucumber;\n-\n             for (int e = 1; e < expectedResults.getPickleRows().size(); e++) {\n                 resultsCucumber = new HashMap<String, String>();\n \n                 for (int i = 0; i < expectedResults.getPickleRows().get(0).getCells().size(); i++) {\n                     resultsCucumber.put(expectedResults.getPickleRows().get(0).getCells().get(i).getValue(), expectedResults.getPickleRows().get(e).getCells().get(i).getValue());\n-\n                 }\n                 resultsListExpected.add(resultsCucumber);\n             }\n             getLogger().debug(\"Expected Results: \" + resultsListExpected.toString());\n-\n             getLogger().debug(\"Obtained Results: \" + getCSVResults().toString());\n \n             //Firts, we checkt that the number of rows are equals\n             assertThat(resultsListExpected.size()).overridingErrorMessage(\"The number of rows of expected result is %s but the csv file contains %s\", resultsListExpected.size(), getCSVResults().size()).isEqualTo(getCSVResults().size());\n             //Then we check the CSV content\n+\n             for (int i = 0; i < resultsListExpected.size(); i++) {\n                 Map<String, String> expectedRow = resultsListExpected.get(i);\n                 Map<String, String> obtainedRow = getCSVResults().get(i);\n@@ -1526,6 +1475,7 @@ public class CommonG {\n      * @param uuid - UUID value\n      * @return true if it is a UUID or false if it is not an UUID\n      */\n+\n     private boolean isUUID(String uuid) {\n         try {\n             UUID.fromString(uuid);\n@@ -1541,10 +1491,12 @@ public class CommonG {\n      * @param dateFromat\n      * @return true/false\n      */\n+\n     private boolean isThisDateValid(String dateToValidate, String dateFromat) {\n         if (dateToValidate == null) {\n             return false;\n         }\n+\n         SimpleDateFormat sdf = new SimpleDateFormat(dateFromat);\n         sdf.setLenient(false);\n         try {\n@@ -1571,35 +1523,31 @@ public class CommonG {\n      *                        IMPORTANT: All columns must exist\n      * @throws Exception exception\n      */\n+\n     public void resultsMustBeCassandra(DataTable expectedResults) throws Exception {\n         if (getCassandraResults() != null) {\n             //Map for query results\n             ColumnDefinitions columns = getCassandraResults().getColumnDefinitions();\n             List<Row> rows = getCassandraResults().all();\n-\n             List<Map<String, Object>> resultsListObtained = new ArrayList<Map<String, Object>>();\n             Map<String, Object> results;\n-\n             for (int i = 0; i < rows.size(); i++) {\n                 results = new HashMap<String, Object>();\n+\n                 for (int e = 0; e < columns.size(); e++) {\n                     results.put(columns.getName(e), rows.get(i).getObject(e));\n-\n                 }\n                 resultsListObtained.add(results);\n-\n             }\n             getLogger().debug(\"Results: \" + resultsListObtained.toString());\n             //Map for cucumber expected results\n             List<Map<String, Object>> resultsListExpected = new ArrayList<Map<String, Object>>();\n             Map<String, Object> resultsCucumber;\n-\n             for (int e = 1; e < expectedResults.getPickleRows().size(); e++) {\n                 resultsCucumber = new HashMap<String, Object>();\n \n                 for (int i = 0; i < expectedResults.getPickleRows().get(0).getCells().size(); i++) {\n                     resultsCucumber.put(expectedResults.getPickleRows().get(0).getCells().get(i).getValue(), expectedResults.getPickleRows().get(e).getCells().get(i).getValue());\n-\n                 }\n                 resultsListExpected.add(resultsCucumber);\n             }\n@@ -1616,29 +1564,23 @@ public class CommonG {\n                 occurrencesExpected = Integer.parseInt(resultsListExpected.get(e).get(\"occurrences\").toString());\n \n                 for (int i = 0; i < resultsListObtained.size(); i++) {\n-\n                     Iterator<String> it = resultsListExpected.get(0).keySet().iterator();\n-\n                     while (it.hasNext()) {\n                         nextKey = it.next();\n+\n                         if (!nextKey.equals(\"occurrences\")) {\n                             if (resultsListObtained.get(i).get(nextKey).toString().equals(resultsListExpected.get(e).get(nextKey).toString())) {\n                                 iterations++;\n                             }\n-\n                         }\n-\n                         if (iterations == resultsListExpected.get(0).keySet().size() - 1) {\n                             occurrencesObtained++;\n                             iterations = 0;\n                         }\n                     }\n-\n                     iterations = 0;\n                 }\n-                assertThat(occurrencesExpected).overridingErrorMessage(\"In row \" + e + \" have been found \"\n-                        + occurrencesObtained + \" results and \" + occurrencesExpected + \" were expected\").isEqualTo(occurrencesObtained);\n-\n+                assertThat(occurrencesExpected).overridingErrorMessage(\"In row \" + e + \" have been found \" + occurrencesObtained + \" results and \" + occurrencesExpected + \" were expected\").isEqualTo(occurrencesObtained);\n             }\n         } else {\n             throw new Exception(\"You must execute a query before trying to get results\");\n@@ -1661,18 +1603,17 @@ public class CommonG {\n      *                        IMPORTANT: All columns must exist\n      * @throws Exception exception\n      */\n+\n     public void resultsMustBeMongo(DataTable expectedResults) throws Exception {\n         if (getMongoResults() != null) {\n             //Map for cucumber expected results\n             List<Map<String, Object>> resultsListExpected = new ArrayList<Map<String, Object>>();\n             Map<String, Object> resultsCucumber;\n-\n             for (int e = 1; e < expectedResults.getPickleRows().size(); e++) {\n                 resultsCucumber = new HashMap<String, Object>();\n \n                 for (int i = 0; i < expectedResults.getPickleRows().get(0).getCells().size(); i++) {\n                     resultsCucumber.put(expectedResults.getPickleRows().get(0).getCells().get(i).getValue(), expectedResults.getPickleRows().get(e).getCells().get(i).getValue());\n-\n                 }\n                 resultsListExpected.add(resultsCucumber);\n             }\n@@ -1687,46 +1628,40 @@ public class CommonG {\n                 iterations = 0;\n                 occurrencesObtained = 0;\n                 occurrencesExpected = Integer.parseInt(resultsListExpected.get(e).get(\"occurrences\").toString());\n-\n                 String resultsListObtained = \"[\";\n                 DBCursor cursor = getMongoResults();\n                 while (cursor.hasNext()) {\n-\n                     DBObject row = cursor.next();\n-\n                     resultsListObtained = resultsListObtained + row.toString();\n+\n                     if (cursor.hasNext()) {\n                         resultsListObtained = \", \" + resultsListObtained;\n                     }\n \n                     Iterator<String> it = resultsListExpected.get(0).keySet().iterator();\n-\n                     while (it.hasNext()) {\n                         nextKey = it.next();\n+\n                         if (!nextKey.equals(\"occurrences\")) {\n                             if (row.get(nextKey).toString().equals(resultsListExpected.get(e).get(nextKey).toString())) {\n                                 iterations++;\n                             }\n                         }\n-\n                         if (iterations == resultsListExpected.get(0).keySet().size() - 1) {\n                             occurrencesObtained++;\n                             iterations = 0;\n                         }\n                     }\n                     iterations = 0;\n+\n                     if (cursor.hasNext()) {\n                         resultsListObtained = resultsListObtained + \",\";\n                     }\n                 }\n-\n                 resultsListObtained = resultsListObtained + \"]\";\n                 getLogger().debug(\"Results: \" + resultsListObtained);\n-\n-                assertThat(occurrencesExpected).overridingErrorMessage(\"In row \" + e + \" have been found \"\n-                        + occurrencesObtained + \" results and \" + occurrencesExpected + \" were expected\").isEqualTo(occurrencesObtained);\n+                assertThat(occurrencesExpected).overridingErrorMessage(\"In row \" + e + \" have been found \" + occurrencesObtained + \" results and \" + occurrencesExpected + \" were expected\").isEqualTo(occurrencesObtained);\n             }\n-\n         } else {\n             throw new Exception(\"You must execute a query before trying to get results\");\n         }\n@@ -1747,24 +1682,16 @@ public class CommonG {\n      *                        IMPORTANT: All columns must exist\n      * @throws Exception exception\n      */\n+\n     public void resultsMustBeElasticsearch(DataTable expectedResults) throws Exception {\n         if (getElasticsearchResults() != null) {\n             List<List<String>> expectedResultList = expectedResults.raw();\n             //Check size\n-            assertThat(expectedResultList.size() - 1).overridingErrorMessage(\n-                    \"Expected number of columns to be\" + (expectedResultList.size() - 1)\n-                            + \"but was \" + previousElasticsearchResults.size())\n-                    .isEqualTo(previousElasticsearchResults.size());\n+            assertThat(expectedResultList.size() - 1).overridingErrorMessage(\"Expected number of columns to be\" + (expectedResultList.size() - 1) + \"but was \" + previousElasticsearchResults.size()).isEqualTo(previousElasticsearchResults.size());\n             List<String> columnNames = expectedResultList.get(0);\n             for (int i = 0; i < previousElasticsearchResults.size(); i++) {\n                 for (int j = 0; j < columnNames.size(); j++) {\n-                    assertThat(expectedResultList.get(i + 1).get(j)).overridingErrorMessage(\"In row \" + i + \"and \"\n-                            + \"column \" + j\n-                            + \"have \"\n-                            + \"been \"\n-                            + \"found \"\n-                            + expectedResultList.get(i + 1).get(j) + \" results and \" + previousElasticsearchResults.get(i).get(columnNames.get(j)).toString() + \" were \"\n-                            + \"expected\").isEqualTo(previousElasticsearchResults.get(i).get(columnNames.get(j)).toString());\n+                    assertThat(expectedResultList.get(i + 1).get(j)).overridingErrorMessage(\"In row \" + i + \"and \" + \"column \" + j + \"have \" + \"been \" + \"found \" + expectedResultList.get(i + 1).get(j) + \" results and \" + previousElasticsearchResults.get(i).get(columnNames.get(j)).toString() + \" were \" + \"expected\").isEqualTo(previousElasticsearchResults.get(i).get(columnNames.get(j)).toString());\n                 }\n             }\n         } else {\n@@ -1777,8 +1704,8 @@ public class CommonG {\n      *\n      * @param command command used to be run locally\n      */\n-    public void runLocalCommand(String command) throws Exception {\n \n+    public void runLocalCommand(String command) throws Exception {\n         String result = \"\";\n         String line;\n         Process p;\n@@ -1795,17 +1722,14 @@ public class CommonG {\n         while ((line = input.readLine()) != null) {\n             result += line;\n         }\n-\n         input.close();\n         this.commandResult = result;\n         this.commandExitStatus = p.exitValue();\n-\n         p.destroy();\n \n         if (p.isAlive()) {\n             p.destroyForcibly();\n         }\n-\n     }\n \n     public int getCommandExitStatus() {\n@@ -1833,6 +1757,7 @@ public class CommonG {\n      *\n      * @param restProtocol api protocol \"http or https\"\n      */\n+\n     public void setRestProtocol(String restProtocol) {\n         this.restProtocol = restProtocol;\n     }\n@@ -1860,10 +1785,9 @@ public class CommonG {\n      * @param expr       jsonpath expression\n      * @param position   position from a search result\n      */\n-    public String getJSONPathString(String jsonString, String expr, String position) {\n \n+    public String getJSONPathString(String jsonString, String expr, String position) {\n         String value;\n-\n         if (expr.contains(\".~\")) {\n             this.getLogger().debug(\"Expression referred to json keys\");\n             Pattern pattern = Pattern.compile(\"^(.*?).~(.*?)$\");\n@@ -1874,6 +1798,7 @@ public class CommonG {\n                 aux = matcher.group(1);\n                 op = matcher.group(2);\n             }\n+\n             LinkedHashMap auxData = JsonPath.parse(jsonString).read(aux);\n             JSONObject json = new JSONObject(auxData);\n             List<String> keys = IteratorUtils.toList(json.keys());\n@@ -1899,7 +1824,6 @@ public class CommonG {\n                 } else {\n                     value = keys.get(index).toString();\n                 }\n-\n             }\n         } else {\n             String result = JsonValue.readHjson(jsonString).toString();\n@@ -1927,7 +1851,6 @@ public class CommonG {\n      */\n \n     public String removeJSONPathElement(String jsonString, String expr) {\n-\n         Configuration conf = Configuration.builder().jsonProvider(new GsonJsonProvider()).mappingProvider(new GsonMappingProvider()).build();\n         DocumentContext context = JsonPath.using(conf).parse(jsonString);\n         context.delete(expr);\n@@ -1942,6 +1865,7 @@ public class CommonG {\n      * @param key        Key to search\n      * @param value      Value to replace key with\n      */\n+\n     public String replaceJSONPathElement(String jsonString, String key, String value) {\n         return JsonPath.parse(jsonString).set(key, value).jsonString();\n     }\n@@ -1955,8 +1879,8 @@ public class CommonG {\n      * @param condition condition to compare\n      * @param result    expected result\n      */\n-    public void evaluateJSONElementOperation(Object o, String condition, String result) throws Exception {\n \n+    public void evaluateJSONElementOperation(Object o, String condition, String result) throws Exception {\n         if (o instanceof String) {\n             String value = (String) o;\n             switch (condition) {\n@@ -1997,7 +1921,6 @@ public class CommonG {\n                     Assertions.fail(\"Operation not implemented for JSON keys\");\n             }\n         }\n-\n     }\n \n     public ZookeeperSecUtils getZkSecClient() {\n@@ -2011,9 +1934,11 @@ public class CommonG {\n \n     public String updateMarathonJson(String json) {\n         if (json.contains(\"uris\")) {\n-            return removeJSONPathElement(removeJSONPathElement(removeJSONPathElement(json, \"$.versionInfo\"), \"$.version\"), \"$.uris.*\");\n+            return removeJSONPathElement(removeJSONPathElement(removeJSONPathElement(json, \"$.versionInfo\"),\n+                \"$.version\"), \"$.uris.*\");\n         } else {\n-            return removeJSONPathElement(removeJSONPathElement(json, \"$.versionInfo\"), \"$.version\");\n+            return removeJSONPathElement(removeJSONPathElement(json, \"$.versionInfo\"),\n+                \"$.version\");\n         }\n     }\n \n@@ -2027,10 +1952,10 @@ public class CommonG {\n         for (String s : logOutput.subList(logOutput.size() - logLastLines, logOutput.size())) {\n             log.append(s).append(\"\\n\");\n         }\n-\n         if (envVar != null) {\n             if (this.getRemoteSSHConnection() != null && !local) {\n-                ThreadProperty.set(envVar, this.getRemoteSSHConnection().getResult().trim());\n+                ThreadProperty.set(envVar,\n+                    this.getRemoteSSHConnection().getResult().trim());\n             } else {\n                 ThreadProperty.set(envVar, this.getCommandResult().trim());\n             }\n@@ -2038,7 +1963,8 @@ public class CommonG {\n         if (this.getCommandExitStatus() != exitStatus) {\n             if (System.getProperty(\"logLevel\", \"\") != null && System.getProperty(\"logLevel\", \"\").equalsIgnoreCase(\"debug\")) {\n                 if (!(\"\".equals(this.getCommandResult()))) {\n-                    this.getLogger().debug(\"Command complete stdout:\\n{}\", this.getCommandResult());\n+                    this.getLogger().debug(\"Command complete stdout:\\n{}\",\n+                        this.getCommandResult());\n                 }\n             } else {\n                 this.getLogger().error(\"Command last {} lines stdout:\", logLastLines);\n@@ -2046,7 +1972,8 @@ public class CommonG {\n             }\n         } else {\n             if (!(\"\".equals(this.getCommandResult()))) {\n-                this.getLogger().debug(\"Command complete stdout:\\n{}\", this.getCommandResult());\n+                this.getLogger().debug(\"Command complete stdout:\\n{}\",\n+                    this.getCommandResult());\n             }\n         }\n     }\n@@ -2056,6 +1983,7 @@ public class CommonG {\n      *\n      * @return LdapUtils\n      */\n+\n     public LdapUtils getLdapUtils() {\n         return LdapUtil.INSTANCE.getldapUtils();\n     }\n@@ -2065,6 +1993,7 @@ public class CommonG {\n      *\n      * @return the previously searched for LDAP result\n      */\n+\n     public Optional<SearchResult> getPreviousLdapResults() {\n         return this.previousLdapResults;\n     }\n@@ -2074,6 +2003,7 @@ public class CommonG {\n      *\n      * @param result the LDAP SearchResult obtained from an LDAP query\n      */\n+\n     public void setPreviousLdapResults(SearchResult result) {\n         this.previousLdapResults = Optional.of(result);\n     }\n@@ -2083,19 +2013,16 @@ public class CommonG {\n      * <p>\n      * File will be placed on path /target/test-classes\n      */\n-    public String asYaml(String jsonStringFile) throws JsonProcessingException, IOException, FileNotFoundException {\n \n+    public String asYaml(String jsonStringFile) throws JsonProcessingException, IOException, FileNotFoundException {\n         InputStream stream = getClass().getClassLoader().getResourceAsStream(jsonStringFile);\n-\n         Writer writer = new StringWriter();\n         char[] buffer = new char[1024];\n         Reader reader;\n-\n         if (stream == null) {\n             this.getLogger().error(\"File does not exist: {}\", jsonStringFile);\n             throw new FileNotFoundException(\"ERR! File not found: \" + jsonStringFile);\n         }\n-\n         try {\n             reader = new BufferedReader(new InputStreamReader(stream, \"UTF-8\"));\n             int n;\n@@ -2111,8 +2038,8 @@ public class CommonG {\n                 this.getLogger().error(closeException.getMessage());\n             }\n         }\n-        String text = writer.toString();\n \n+        String text = writer.toString();\n         String std = text.replace(\"\\r\", \"\").replace(\"\\n\", \"\"); // make sure we have unix style text regardless of the input\n \n         // parse JSON\n@@ -2135,8 +2062,8 @@ public class CommonG {\n      * @param key:     server private key\n      * @throws Exception exception     *\n      */\n-    public void connectToPostgreSQLDatabase(String database, String host, String port, String user, String password, Boolean secure, String ca, String crt, String key) throws SQLException {\n \n+    public void connectToPostgreSQLDatabase(String database, String host, String port, String user, String password, Boolean secure, String ca, String crt, String key) throws SQLException {\n         if (port.startsWith(\"[\")) {\n             port = port.substring(1, port.length() - 1);\n         }\n@@ -2145,14 +2072,15 @@ public class CommonG {\n                 password = \"stratio\";\n             }\n             try {\n-                myConnection = DriverManager.getConnection(\"jdbc:postgresql://\" + host + \":\" + port + \"/\" + database, user, password);\n+                myConnection = DriverManager.getConnection(\"jdbc:postgresql://\" + host + \":\" + port + \"/\" + database,\n+                    user,\n+                        password);\n             } catch (SQLException se) {\n                 // log the exception\n                 this.getLogger().error(se.getMessage());\n                 // re-throw the exception\n                 throw se;\n             }\n-\n         } else {\n             Properties props = new Properties();\n             if (user != null) {\n@@ -2170,17 +2098,15 @@ public class CommonG {\n             props.setProperty(\"password\", \"null\");\n             props.setProperty(\"ssl\", \"true\");\n             props.setProperty(\"sslmode\", \"verify-full\");\n-\n-\n             try {\n-                myConnection = DriverManager.getConnection(\"jdbc:postgresql://\" + host + \":\" + port + \"/\" + database, props);\n+                myConnection = DriverManager.getConnection(\"jdbc:postgresql://\" + host + \":\" + port + \"/\" + database,\n+                    props);\n             } catch (SQLException se) {\n                 // log the exception\n                 this.getLogger().error(se.getMessage());\n                 // re-throw the exception\n                 throw se;\n             }\n-\n         }\n     }\n \n@@ -2188,6 +2114,7 @@ public class CommonG {\n      * @return connection object\n      *\n      */\n+\n     public Connection getConnection() {\n         return this.myConnection;\n     }\n@@ -2199,6 +2126,7 @@ public class CommonG {\n      * @param schema        schema obtained from deploy-api\n      * @return JSONObject   deployment json\n      */\n+\n     public JSONObject parseJSONSchema(JSONObject schema) throws Exception {\n         JSONObject json = new JSONObject();\n         String name = \"\";\n@@ -2211,6 +2139,7 @@ public class CommonG {\n         }\n \n         // Obtain all keys and iterate through them\n+\n         Iterator<?> keys = properties.keys();\n         while (keys.hasNext()) {\n             // Obtain key\n@@ -2233,7 +2162,8 @@ public class CommonG {\n                         case \"boolean\":\n                             json.put(key, false);\n                             break;\n-                        case \"number\": case \"integer\":\n+                        case \"number\":\n+                        case \"integer\":\n                             json.put(key, 0);\n                             break;\n                         default:\n@@ -2246,7 +2176,6 @@ public class CommonG {\n                 json.put(key, parseJSONSchema(element));\n             }\n         }\n-\n         return json;\n     }\n \n@@ -2257,14 +2186,9 @@ public class CommonG {\n      * @param json json to be checked\n      * @return boolean whether the json matches the schema or not\n      */\n+\n     public boolean matchJsonToSchema(JSONObject schema, JSONObject json) throws Exception {\n-        SchemaLoader.builder()\n-                 .useDefaults(true)\n-                 .schemaJson(schema)\n-                 .build()\n-                 .load()\n-                 .build()\n-                 .validate(json);\n+        SchemaLoader.builder().useDefaults(true).schemaJson(schema).build().load().build().validate(json);\n         return true;\n     }\n \n@@ -2276,24 +2200,20 @@ public class CommonG {\n      * @return String   normalized service status\n      * @throws Exception exception     *\n      */\n+\n     public String retrieveServiceStatus(String service, String cluster) throws Exception {\n         String status = \"\";\n         String endPoint = \"/service/deploy-api/deploy/status/service?service=\" + service;\n         String element = \"$.status\";\n         Future response;\n-\n         this.setRestProtocol(\"https://\");\n         this.setRestHost(cluster);\n         this.setRestPort(\":443\");\n-\n         response = this.generateRequest(\"GET\", true, null, null, endPoint, null, \"json\");\n         this.setResponse(\"GET\", (Response) response.get());\n         assertThat(this.getResponse().getStatusCode()).as(\"It hasn't been possible to obtain status for service: \" + service).isEqualTo(200);\n-\n         String json = this.getResponse().getResponse();\n-\n         String value = this.getJSONPathString(json, element, null);\n-\n         switch (value) {\n             case \"0\":\n                 status = \"deploying\";\n@@ -2310,7 +2230,6 @@ public class CommonG {\n             default:\n                 throw new Exception(\"Unknown service status code\");\n         }\n-\n         return status;\n     }\n \n@@ -2322,24 +2241,20 @@ public class CommonG {\n      * @return String   normalized service health status\n      * @throws Exception exception     *\n      */\n+\n     public String retrieveHealthServiceStatus(String service, String cluster) throws Exception {\n         String health = \"\";\n         String endPoint = \"/service/deploy-api/deploy/status/service?service=\" + service;\n         String element = \"$.healthy\";\n         Future response;\n-\n         this.setRestProtocol(\"https://\");\n         this.setRestHost(cluster);\n         this.setRestPort(\":443\");\n-\n         response = this.generateRequest(\"GET\", true, null, null, endPoint, null, \"json\");\n         this.setResponse(\"GET\", (Response) response.get());\n         assertThat(this.getResponse().getStatusCode()).as(\"It hasn't been possible to obtain health status for service: \" + service).isEqualTo(200);\n-\n         String json = this.getResponse().getResponse();\n-\n         String value = this.getJSONPathString(json, element, null);\n-\n         switch (value) {\n             case \"0\":\n                 health = \"unhealthy\";\n@@ -2353,7 +2268,6 @@ public class CommonG {\n             default:\n                 throw new Exception(\"Unknown service health status code\");\n         }\n-\n         return health;\n     }\n \n@@ -2365,18 +2279,16 @@ public class CommonG {\n      * @param envVar     environment variable name\n      * @throws Exception exception\n      **/\n+\n     public void executeCommand(String command, Integer exitStatus, String envVar) throws Exception {\n         if (exitStatus == null) {\n             exitStatus = 0;\n         }\n-\n         command = \"set -o pipefail && alias grep='grep --color=never' && \" + command;\n         getRemoteSSHConnection().runCommand(command);\n         setCommandResult(getRemoteSSHConnection().getResult());\n         setCommandExitStatus(getRemoteSSHConnection().getExitStatus());\n         runCommandLoggerAndEnvVar(exitStatus, envVar, Boolean.FALSE);\n-\n         Assertions.assertThat(getRemoteSSHConnection().getExitStatus()).isEqualTo(exitStatus);\n     }\n-\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 421
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/errored/1/168/CommonG.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/styler_random/168/CommonG.java\nindex e9a1bb1298a..4eae124bdba 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/errored/1/168/CommonG.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/styler_random/168/CommonG.java\n@@ -1571,6 +1571,7 @@ public class CommonG {\n      *                        IMPORTANT: All columns must exist\n      * @throws Exception exception\n      */\n+\n     public void resultsMustBeCassandra(DataTable expectedResults) throws Exception {\n         if (getCassandraResults() != null) {\n             //Map for query results\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/errored/1/168/CommonG.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/styler_three_grams/168/CommonG.java\nindex e9a1bb1298a..4eae124bdba 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/errored/1/168/CommonG.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/styler_three_grams/168/CommonG.java\n@@ -1571,6 +1571,7 @@ public class CommonG {\n      *                        IMPORTANT: All columns must exist\n      * @throws Exception exception\n      */\n+\n     public void resultsMustBeCassandra(DataTable expectedResults) throws Exception {\n         if (getCassandraResults() != null) {\n             //Map for query results\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
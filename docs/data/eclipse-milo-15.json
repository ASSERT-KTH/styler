{
    "project_name": "eclipse-milo",
    "error_id": "15",
    "information": {
        "errors": [
            {
                "line": "32",
                "column": "21",
                "severity": "error",
                "message": "'}' at column 21 should be alone on a line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
            }
        ]
    },
    "source_code": "class Util {\n\n    private Util() {}\n\n    static String buildBrowseNamePath(UaNode node) {\n        return buildBrowseNamePath(node, new ArrayList<>());",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "32",
                    "column": "21",
                    "severity": "error",
                    "message": "'}' at column 21 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/15/Util.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/intellij/15/Util.java\nindex 6048837a084..effc6d6c03f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/15/Util.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/intellij/15/Util.java\n@@ -29,7 +29,8 @@ import org.eclipse.milo.opcua.stack.core.types.builtin.StatusCode;\n \n class Util {\n \n-    private Util() {}\n+    private Util() {\n+    }\n \n     static String buildBrowseNamePath(UaNode node) {\n         return buildBrowseNamePath(node, new ArrayList<>());\n",
            "diff_size": 2
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "32",
                    "column": "21",
                    "severity": "error",
                    "message": "'}' at column 21 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/15/Util.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/naturalize/15/Util.java\nindex 6048837a084..616702793ae 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/15/Util.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/naturalize/15/Util.java\n@@ -73,4 +73,4 @@ class Util {\n         });\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "47",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 146).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "52",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 128).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "56",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 130).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "58",
                    "severity": "error",
                    "message": "'if' has incorrect indentation level 19, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "59",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 23, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "60",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 19, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "61",
                    "severity": "error",
                    "message": "'else' child has incorrect indentation level 23, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "62",
                    "severity": "error",
                    "message": "'else rcurly' has incorrect indentation level 19, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/15/Util.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/codebuff/15/Util.java\nindex 6048837a084..cbd525eb0d4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/15/Util.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/codebuff/15/Util.java\n@@ -16,7 +16,6 @@ import java.util.List;\n import java.util.Optional;\n import java.util.concurrent.atomic.AtomicBoolean;\n import java.util.function.Function;\n-\n import org.eclipse.milo.opcua.sdk.core.Reference;\n import org.eclipse.milo.opcua.sdk.server.nodes.UaNode;\n import org.eclipse.milo.opcua.sdk.server.nodes.filters.AttributeFilter;\n@@ -29,7 +28,8 @@ import org.eclipse.milo.opcua.stack.core.types.builtin.StatusCode;\n \n class Util {\n \n-    private Util() {}\n+    private Util() {\n+    }\n \n     static String buildBrowseNamePath(UaNode node) {\n         return buildBrowseNamePath(node, new ArrayList<>());\n@@ -38,39 +38,29 @@ class Util {\n     private static String buildBrowseNamePath(UaNode node, List<String> browseNames) {\n         if (node == null || node.getNodeId().equals(Identifiers.ObjectsFolder)) {\n             Collections.reverse(browseNames);\n-\n             return String.join(\".\", browseNames);\n         }\n \n         browseNames.add(node.getBrowseName().toParseableString());\n \n         Optional<Reference> referenceToParent = node.getReferences().stream()\n-            .filter(r -> r.isInverse() && r.subtypeOf(Identifiers.HierarchicalReferences))\n-            .findFirst();\n-\n-        Optional<UaNode> parentNode = referenceToParent\n-            .flatMap(r ->\n-                node.getNodeContext()\n-                    .getServer()\n-                    .getAddressSpaceManager()\n-                    .getManagedNode(r.getTargetNodeId())\n-            );\n+                                                                    .filter(r -> r.isInverse() && r.subtypeOf(Identifiers.HierarchicalReferences))\n+                                                                    .findFirst();\n \n+        Optional<UaNode> parentNode = referenceToParent.flatMap(r -> node.getNodeContext().getServer()\n+                                                                                          .getAddressSpaceManager()\n+                                                                                          .getManagedNode(r.getTargetNodeId()));\n         return buildBrowseNamePath(parentNode.orElse(null), browseNames);\n     }\n \n-    static AttributeFilter diagnosticValueFilter(\n-        AtomicBoolean diagnosticsEnabled,\n-        Function<GetAttributeContext, DataValue> get\n-    ) {\n-\n+    static AttributeFilter diagnosticValueFilter(AtomicBoolean diagnosticsEnabled, Function<GetAttributeContext, DataValue> get) {\n         return AttributeFilters.getValue(ctx -> {\n-            if (diagnosticsEnabled.get()) {\n-                return get.apply(ctx);\n-            } else {\n-                return new DataValue(new StatusCode(StatusCodes.Bad_NotReadable));\n-            }\n+                   if (diagnosticsEnabled.get()) {\n+                       return get.apply(ctx);\n+                   } else {\n+                       return new DataValue(new StatusCode(StatusCodes.Bad_NotReadable));\n+                   }\n         });\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 28
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "32",
                    "column": "21",
                    "severity": "error",
                    "message": "'}' at column 21 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "34",
                    "severity": "error",
                    "message": "'METHOD_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "34",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/15/Util.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/styler_three_grams/15/Util.java\nindex 6048837a084..102116cbfab 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/15/Util.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/styler_three_grams/15/Util.java\n@@ -29,9 +29,9 @@ import org.eclipse.milo.opcua.stack.core.types.builtin.StatusCode;\n \n class Util {\n \n-    private Util() {}\n+    private Util() {\n \n-    static String buildBrowseNamePath(UaNode node) {\n+    } static String buildBrowseNamePath(UaNode node) {\n         return buildBrowseNamePath(node, new ArrayList<>());\n     }\n \n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
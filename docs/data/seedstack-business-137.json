{
    "project_name": "seedstack-business",
    "error_id": "137",
    "information": {
        "errors": [
            {
                "line": "8",
                "column": "1",
                "severity": "warning",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\npackage org.seedstack.business.internal.migrate;\n\nimport com.google.common.collect.Lists;\nimport com.google.inject.AbstractModule;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/137/MigratePlugin.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/styler/137/MigratePlugin.java\nindex 89f1e872625..397b3d81f9a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/137/MigratePlugin.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/styler/137/MigratePlugin.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.business.internal.migrate;\n \n import com.google.common.collect.Lists;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/137/MigratePlugin.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/intellij/137/MigratePlugin.java\nindex 89f1e872625..5081e8decf9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/137/MigratePlugin.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/intellij/137/MigratePlugin.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.business.internal.migrate;\n \n import com.google.common.collect.Lists;\n@@ -95,7 +96,7 @@ public class MigratePlugin extends AbstractSeedPlugin {\n     }\n \n     private void registerBinding(Map<Key<?>, Key<?>> bindings, ParameterizedType from, ParameterizedType to,\n-            Annotation annotation) {\n+                                 Annotation annotation) {\n         if (annotation != null) {\n             bindings.put(Key.get(from, annotation), Key.get(to, annotation));\n         } else {\n",
            "diff_size": 2
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "8",
                    "column": "1",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "55",
                    "column": "5",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 4, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "63",
                    "column": "5",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 4, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "71",
                    "column": "5",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 4, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "81",
                    "column": "5",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 4, expected level should be 28.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "88",
                    "column": "5",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 4, expected level should be 28.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "99",
                    "column": "5",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/137/MigratePlugin.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/naturalize/137/MigratePlugin.java\nindex 89f1e872625..130ed537f15 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/137/MigratePlugin.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/naturalize/137/MigratePlugin.java\n@@ -52,7 +52,7 @@ public class MigratePlugin extends AbstractSeedPlugin {\n         if (round.isFirst()) {\n             for (Element element : Elements.getElements((AbstractModule) initContext.dependency(AssemblerPlugin.class)\n                     .nativeUnitModule())) {\n-                if (element instanceof Binding) {\n+    if (element instanceof Binding) {\n                     Key key = ((Binding) element).getKey();\n                     if (key.getTypeLiteral().getType() instanceof ParameterizedType) {\n                         ParameterizedType type = (ParameterizedType) key.getTypeLiteral().getType();\n@@ -60,7 +60,7 @@ public class MigratePlugin extends AbstractSeedPlugin {\n                             // Assembler\n                             registerBinding(assemblerBindings, Types.newParameterizedType(LegacyAssembler.class,\n                                     type.getActualTypeArguments()), type, key.getAnnotation());\n-                        }\n+    }\n                     }\n                 }\n             }\n@@ -68,7 +68,7 @@ public class MigratePlugin extends AbstractSeedPlugin {\n         } else {\n             for (Element element : Elements.getElements((AbstractModule) initContext.dependency(DomainPlugin.class)\n                     .nativeUnitModule())) {\n-                if (element instanceof Binding) {\n+    if (element instanceof Binding) {\n                     Key key = ((Binding) element).getKey();\n                     if (key.getTypeLiteral().getType() instanceof ParameterizedType) {\n                         ParameterizedType type = (ParameterizedType) key.getTypeLiteral().getType();\n@@ -78,14 +78,14 @@ public class MigratePlugin extends AbstractSeedPlugin {\n                                 registerBinding(repositoryBindings,\n                                         Types.newParameterizedType(LegacyRepository.class,\n                                                 type.getActualTypeArguments()), type, key.getAnnotation());\n-                            }\n+    }\n                         } else if (Factory.class.equals(type.getRawType())) {\n                             // Factory\n                             if (!LegacyBaseAggregateRoot.class.equals(type.getActualTypeArguments()[0])) {\n                                 registerBinding(factoryBindings,\n                                         Types.newParameterizedType(GenericFactory.class,\n                                                 type.getActualTypeArguments()), type, key.getAnnotation());\n-                            }\n+    }\n                         }\n                     }\n                 }\n@@ -96,7 +96,7 @@ public class MigratePlugin extends AbstractSeedPlugin {\n \n     private void registerBinding(Map<Key<?>, Key<?>> bindings, ParameterizedType from, ParameterizedType to,\n             Annotation annotation) {\n-        if (annotation != null) {\n+    if (annotation != null) {\n             bindings.put(Key.get(from, annotation), Key.get(to, annotation));\n         } else {\n             bindings.put(Key.get(from), Key.get(to));\n@@ -107,4 +107,4 @@ public class MigratePlugin extends AbstractSeedPlugin {\n     public Object nativeUnitModule() {\n         return new MigrateModule(repositoryBindings, factoryBindings, assemblerBindings);\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "8",
                    "column": "1",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "55",
                    "column": "13",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'for' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "56",
                    "column": "17",
                    "severity": "warning",
                    "message": "'.' has incorrect indentation level 16, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "57",
                    "column": "43",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 42, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "57",
                    "column": "43",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'if' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "58",
                    "column": "47",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 46, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "59",
                    "column": "51",
                    "severity": "warning",
                    "message": "'.' has incorrect indentation level 50, expected level should be 54.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "60",
                    "column": "47",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 46, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "60",
                    "column": "47",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'if' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "61",
                    "column": "51",
                    "severity": "warning",
                    "message": "'.' has incorrect indentation level 50, expected level should be 54.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "62",
                    "column": "51",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 50, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "63",
                    "column": "55",
                    "severity": "warning",
                    "message": "'.' has incorrect indentation level 54, expected level should be 58.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "64",
                    "column": "51",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 50, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "64",
                    "column": "51",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'if' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "65",
                    "column": "55",
                    "severity": "warning",
                    "message": "'.' has incorrect indentation level 54, expected level should be 58.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "66",
                    "column": "29",
                    "severity": "warning",
                    "message": "Comment has incorrect indentation level 28, expected is 54, indentation should be the same level as line 67.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "67",
                    "column": "55",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 54, expected level should be 28.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "68",
                    "column": "1",
                    "severity": "warning",
                    "message": "'Types' has incorrect indentation level 0, expected level should be 62.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "69",
                    "column": "1",
                    "severity": "warning",
                    "message": "'method call' child has incorrect indentation level 0, expected level should be 32.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "70",
                    "column": "1",
                    "severity": "warning",
                    "message": "'key' has incorrect indentation level 0, expected level should be 62.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "71",
                    "column": "51",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 50, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "72",
                    "column": "47",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 46, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "73",
                    "column": "74",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 73, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "74",
                    "column": "39",
                    "severity": "warning",
                    "message": "'for rcurly' has incorrect indentation level 38, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "77",
                    "column": "13",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'for' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "78",
                    "column": "17",
                    "severity": "warning",
                    "message": "'.' has incorrect indentation level 16, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "79",
                    "column": "43",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 42, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "79",
                    "column": "43",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'if' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "80",
                    "column": "47",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 46, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "81",
                    "column": "51",
                    "severity": "warning",
                    "message": "'.' has incorrect indentation level 50, expected level should be 54.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "82",
                    "column": "47",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 46, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "82",
                    "column": "47",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'if' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "83",
                    "column": "51",
                    "severity": "warning",
                    "message": "'.' has incorrect indentation level 50, expected level should be 54.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "84",
                    "column": "51",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 50, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "85",
                    "column": "55",
                    "severity": "warning",
                    "message": "'.' has incorrect indentation level 54, expected level should be 58.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "86",
                    "column": "51",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 50, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "87",
                    "column": "55",
                    "severity": "warning",
                    "message": "'.' has incorrect indentation level 54, expected level should be 58.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "88",
                    "column": "29",
                    "severity": "warning",
                    "message": "Comment has incorrect indentation level 28, expected is 54, indentation should be the same level as line 89.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "89",
                    "column": "55",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 54, expected level should be 28.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "89",
                    "column": "55",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'if' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "90",
                    "column": "59",
                    "severity": "warning",
                    "message": "'.' has incorrect indentation level 58, expected level should be 62.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "91",
                    "column": "59",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 58, expected level should be 32.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "92",
                    "column": "1",
                    "severity": "warning",
                    "message": "'Types' has incorrect indentation level 0, expected level should be 66.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "93",
                    "column": "1",
                    "severity": "warning",
                    "message": "'method call' child has incorrect indentation level 0, expected level should be 36.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "94",
                    "column": "1",
                    "severity": "warning",
                    "message": "'key' has incorrect indentation level 0, expected level should be 66.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "95",
                    "column": "102",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 101, expected level should be 28.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "96",
                    "column": "51",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 50, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "96",
                    "column": "58",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'if' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "97",
                    "column": "55",
                    "severity": "warning",
                    "message": "'.' has incorrect indentation level 54, expected level should be 58.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "98",
                    "column": "29",
                    "severity": "warning",
                    "message": "Comment has incorrect indentation level 28, expected is 86, indentation should be the same level as line 99.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "99",
                    "column": "87",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 86, expected level should be 28.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "99",
                    "column": "87",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'if' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "100",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 134).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "100",
                    "column": "91",
                    "severity": "warning",
                    "message": "'.' has incorrect indentation level 90, expected level should be 94.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "101",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 122).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "101",
                    "column": "91",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 90, expected level should be 32.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "102",
                    "column": "1",
                    "severity": "warning",
                    "message": "'Types' has incorrect indentation level 0, expected level should be 98.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "103",
                    "column": "1",
                    "severity": "warning",
                    "message": "'method call' child has incorrect indentation level 0, expected level should be 36.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "104",
                    "column": "1",
                    "severity": "warning",
                    "message": "'key' has incorrect indentation level 0, expected level should be 98.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "105",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 134).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "105",
                    "column": "134",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 133, expected level should be 28.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "106",
                    "column": "83",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 82, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "107",
                    "column": "47",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 46, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "108",
                    "column": "74",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 73, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "109",
                    "column": "39",
                    "severity": "warning",
                    "message": "'for rcurly' has incorrect indentation level 38, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "114",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 133).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/137/MigratePlugin.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/codebuff/137/MigratePlugin.java\nindex 89f1e872625..73075f47269 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/137/MigratePlugin.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/codebuff/137/MigratePlugin.java\n@@ -32,7 +32,9 @@ import org.seedstack.business.internal.assembler.AssemblerPlugin;\n import org.seedstack.business.internal.domain.DomainPlugin;\n import org.seedstack.seed.core.internal.AbstractSeedPlugin;\n \n+\n public class MigratePlugin extends AbstractSeedPlugin {\n+\n     private final Map<Key<?>, Key<?>> repositoryBindings = new HashMap<>();\n     private final Map<Key<?>, Key<?>> factoryBindings = new HashMap<>();\n     private final Map<Key<?>, Key<?>> assemblerBindings = new HashMap<>();\n@@ -50,52 +52,66 @@ public class MigratePlugin extends AbstractSeedPlugin {\n     @Override\n     protected InitState initialize(InitContext initContext) {\n         if (round.isFirst()) {\n-            for (Element element : Elements.getElements((AbstractModule) initContext.dependency(AssemblerPlugin.class)\n-                    .nativeUnitModule())) {\n-                if (element instanceof Binding) {\n-                    Key key = ((Binding) element).getKey();\n-                    if (key.getTypeLiteral().getType() instanceof ParameterizedType) {\n-                        ParameterizedType type = (ParameterizedType) key.getTypeLiteral().getType();\n-                        if (Assembler.class.equals(type.getRawType())) {\n+            for(Element element :Elements.getElements((AbstractModule) initContext.dependency(AssemblerPlugin.class)\n+                .nativeUnitModule())) {\n+                                          if(element instanceof Binding) {\n+                                              Key key = ((Binding) element)\n+                                                  .getKey();\n+                                              if(key.getTypeLiteral()\n+                                                  .getType() instanceof ParameterizedType) {\n+                                                  ParameterizedType type = (ParameterizedType) key.getTypeLiteral()\n+                                                      .getType();\n+                                                  if(Assembler.class\n+                                                      .equals(type.getRawType())) {\n                             // Assembler\n-                            registerBinding(assemblerBindings, Types.newParameterizedType(LegacyAssembler.class,\n-                                    type.getActualTypeArguments()), type, key.getAnnotation());\n-                        }\n-                    }\n-                }\n-            }\n+                                                      registerBinding(assemblerBindings,\n+Types.newParameterizedType(LegacyAssembler.class, type.getActualTypeArguments()),\n+type,\n+key.getAnnotation());\n+                                                  }\n+                                              }\n+                                                                         }\n+                                      }\n             return InitState.NON_INITIALIZED;\n         } else {\n-            for (Element element : Elements.getElements((AbstractModule) initContext.dependency(DomainPlugin.class)\n-                    .nativeUnitModule())) {\n-                if (element instanceof Binding) {\n-                    Key key = ((Binding) element).getKey();\n-                    if (key.getTypeLiteral().getType() instanceof ParameterizedType) {\n-                        ParameterizedType type = (ParameterizedType) key.getTypeLiteral().getType();\n-                        if (Repository.class.equals(type.getRawType())) {\n+            for(Element element :Elements.getElements((AbstractModule) initContext.dependency(DomainPlugin.class)\n+                .nativeUnitModule())) {\n+                                          if(element instanceof Binding) {\n+                                              Key key = ((Binding) element)\n+                                                  .getKey();\n+                                              if(key.getTypeLiteral()\n+                                                  .getType() instanceof ParameterizedType) {\n+                                                  ParameterizedType type = (ParameterizedType) key.getTypeLiteral()\n+                                                      .getType();\n+                                                  if (Repository.class\n+                                                      .equals(type.getRawType())) {\n                             // Repository\n-                            if (!LegacyBaseAggregateRoot.class.equals(type.getActualTypeArguments()[0])) {\n-                                registerBinding(repositoryBindings,\n-                                        Types.newParameterizedType(LegacyRepository.class,\n-                                                type.getActualTypeArguments()), type, key.getAnnotation());\n-                            }\n-                        } else if (Factory.class.equals(type.getRawType())) {\n+                                                      if(! LegacyBaseAggregateRoot.class\n+                                                          .equals(type.getActualTypeArguments()[0])) {\n+                                                          registerBinding(repositoryBindings,\n+Types.newParameterizedType(LegacyRepository.class, type.getActualTypeArguments()),\n+type,\n+key.getAnnotation());\n+                                                                                                     }\n+                                                  } else if(Factory.class\n+                                                      .equals(type.getRawType())) {\n                             // Factory\n-                            if (!LegacyBaseAggregateRoot.class.equals(type.getActualTypeArguments()[0])) {\n-                                registerBinding(factoryBindings,\n-                                        Types.newParameterizedType(GenericFactory.class,\n-                                                type.getActualTypeArguments()), type, key.getAnnotation());\n-                            }\n-                        }\n-                    }\n-                }\n-            }\n+                                                                                      if(! LegacyBaseAggregateRoot.class\n+                                                                                          .equals(type.getActualTypeArguments()[0])) {\n+                                                                                          registerBinding(factoryBindings,\n+Types.newParameterizedType(GenericFactory.class, type.getActualTypeArguments()),\n+type,\n+key.getAnnotation());\n+                                                                                                                                     }\n+                                                                                  }\n+                                              }\n+                                                                         }\n+                                      }\n             return InitState.INITIALIZED;\n         }\n     }\n \n-    private void registerBinding(Map<Key<?>, Key<?>> bindings, ParameterizedType from, ParameterizedType to,\n-            Annotation annotation) {\n+    private void registerBinding(Map<Key<?>, Key<?>> bindings, ParameterizedType from, ParameterizedType to, Annotation annotation) {\n         if (annotation != null) {\n             bindings.put(Key.get(from, annotation), Key.get(to, annotation));\n         } else {\n@@ -107,4 +123,4 @@ public class MigratePlugin extends AbstractSeedPlugin {\n     public Object nativeUnitModule() {\n         return new MigrateModule(repositoryBindings, factoryBindings, assemblerBindings);\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 55
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/137/MigratePlugin.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/styler_random/137/MigratePlugin.java\nindex 89f1e872625..397b3d81f9a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/137/MigratePlugin.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/styler_random/137/MigratePlugin.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.business.internal.migrate;\n \n import com.google.common.collect.Lists;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/137/MigratePlugin.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/styler_three_grams/137/MigratePlugin.java\nindex 89f1e872625..397b3d81f9a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/137/MigratePlugin.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/styler_three_grams/137/MigratePlugin.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.business.internal.migrate;\n \n import com.google.common.collect.Lists;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
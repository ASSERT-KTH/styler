{
    "project_name": "graphfoundation-ongdb",
    "error_id": "680",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "49",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "175",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "175",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "179",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "179",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "189",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "189",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "191",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "191",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "204",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "204",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "210",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "210",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "216",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "216",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "223",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "223",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "228",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "228",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "232",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "232",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "237",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "237",
                    "column": "109",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "240",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "240",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/680/PropertyContainerStateImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/680/PropertyContainerStateImpl.java\nindex e5e6e2f7ae5..62276d2b619 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/680/PropertyContainerStateImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/680/PropertyContainerStateImpl.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.api.state;\n \n import java.util.Iterator;\n@@ -36,206 +37,206 @@ import static java.util.Collections.newSetFromMap;\n \n class PropertyContainerStateImpl implements PropertyContainerState\n {\n-    private final long id;\n+  private final long id;\n \n-    private VersionedHashMap<Integer, Value> addedProperties;\n-    private VersionedHashMap<Integer, Value> changedProperties;\n-    private Set<Integer> removedProperties;\n+  private VersionedHashMap<Integer, Value> addedProperties;\n+  private VersionedHashMap<Integer, Value> changedProperties;\n+  private Set<Integer> removedProperties;\n \n-    private final Predicate<StorageProperty> excludePropertiesWeKnowAbout = new Predicate<StorageProperty>()\n+  private final Predicate<StorageProperty> excludePropertiesWeKnowAbout = new Predicate<StorageProperty>()\n+  {\n+    @Override\n+    public boolean test(StorageProperty item)\n     {\n-        @Override\n-        public boolean test( StorageProperty item )\n-        {\n-            return (removedProperties == null || !removedProperties.contains( item.propertyKeyId() ))\n-                    && (addedProperties == null || !addedProperties.containsKey( item.propertyKeyId() ))\n-                    && (changedProperties == null || !changedProperties.containsKey( item.propertyKeyId() ));\n-        }\n-    };\n+      return (removedProperties == null || !removedProperties.contains(item.propertyKeyId()))\n+          && (addedProperties == null || !addedProperties.containsKey(item.propertyKeyId()))\n+          && (changedProperties == null || !changedProperties.containsKey(item.propertyKeyId()));\n+    }\n+  };\n+\n+  PropertyContainerStateImpl(long id)\n+  {\n+    this.id = id;\n+  }\n+\n+  public long getId()\n+  {\n+    return id;\n+  }\n \n-    PropertyContainerStateImpl( long id )\n+  void clear()\n+  {\n+    if (changedProperties != null)\n     {\n-        this.id = id;\n+      changedProperties.clear();\n     }\n-\n-    public long getId()\n+    if (addedProperties != null)\n     {\n-        return id;\n+      addedProperties.clear();\n     }\n-\n-    void clear()\n+    if (removedProperties != null)\n     {\n-        if ( changedProperties != null )\n-        {\n-            changedProperties.clear();\n-        }\n-        if ( addedProperties != null )\n-        {\n-            addedProperties.clear();\n-        }\n-        if ( removedProperties != null )\n-        {\n-            removedProperties.clear();\n-        }\n+      removedProperties.clear();\n     }\n+  }\n \n-    void changeProperty( int propertyKeyId, Value value )\n+  void changeProperty(int propertyKeyId, Value value)\n+  {\n+    if (addedProperties != null && addedProperties.containsKey(propertyKeyId))\n     {\n-        if ( addedProperties != null && addedProperties.containsKey( propertyKeyId ) )\n-        {\n-            addedProperties.put( propertyKeyId, value );\n-            return;\n-        }\n-\n-        if ( changedProperties == null )\n-        {\n-            changedProperties = new VersionedHashMap<>();\n-        }\n-        changedProperties.put( propertyKeyId, value );\n-\n-        if ( removedProperties != null )\n-        {\n-            removedProperties.remove( propertyKeyId );\n-        }\n+      addedProperties.put(propertyKeyId, value);\n+      return;\n     }\n \n-    void addProperty( int propertyKeyId, Value value )\n+    if (changedProperties == null)\n     {\n-        if ( removedProperties != null && removedProperties.remove( propertyKeyId ) )\n-        {\n-            // This indicates the user did remove+add as two discrete steps, which should be translated to\n-            // a single change operation.\n-            changeProperty( propertyKeyId, value );\n-            return;\n-        }\n-        if ( addedProperties == null )\n-        {\n-            addedProperties = new VersionedHashMap<>();\n-        }\n-        addedProperties.put( propertyKeyId, value );\n+      changedProperties = new VersionedHashMap<>();\n     }\n+    changedProperties.put(propertyKeyId, value);\n \n-    void removeProperty( int propertyKeyId )\n+    if (removedProperties != null)\n     {\n-        if ( addedProperties != null && addedProperties.remove( propertyKeyId ) != null )\n-        {\n-            return;\n-        }\n-        if ( removedProperties == null )\n-        {\n-            removedProperties = newSetFromMap( new VersionedHashMap<>() );\n-        }\n-        removedProperties.add( propertyKeyId );\n-        if ( changedProperties != null )\n-        {\n-            changedProperties.remove( propertyKeyId );\n-        }\n+      removedProperties.remove(propertyKeyId);\n     }\n+  }\n \n-    @Override\n-    public Iterator<StorageProperty> addedProperties()\n+  void addProperty(int propertyKeyId, Value value)\n+  {\n+    if (removedProperties != null && removedProperties.remove(propertyKeyId))\n     {\n-        return toPropertyIterator( addedProperties );\n+      // This indicates the user did remove+add as two discrete steps, which should be translated to\n+      // a single change operation.\n+      changeProperty(propertyKeyId, value);\n+      return;\n     }\n-\n-    @Override\n-    public Iterator<StorageProperty> changedProperties()\n+    if (addedProperties == null)\n     {\n-        return toPropertyIterator( changedProperties );\n+      addedProperties = new VersionedHashMap<>();\n     }\n+    addedProperties.put(propertyKeyId, value);\n+  }\n \n-    @Override\n-    public Iterator<Integer> removedProperties()\n+  void removeProperty(int propertyKeyId)\n+  {\n+    if (addedProperties != null && addedProperties.remove(propertyKeyId) != null)\n     {\n-        return removedProperties != null ? removedProperties.iterator() : emptyIterator();\n+      return;\n     }\n-\n-    @Override\n-    public Iterator<StorageProperty> addedAndChangedProperties()\n+    if (removedProperties == null)\n     {\n-        if ( addedProperties == null )\n-        {\n-            return toPropertyIterator( changedProperties );\n-        }\n-        if ( changedProperties == null )\n-        {\n-            return toPropertyIterator( addedProperties );\n-        }\n-        return Iterators.concat( toPropertyIterator( addedProperties ), toPropertyIterator( changedProperties ) );\n+      removedProperties = newSetFromMap(new VersionedHashMap<>());\n     }\n-\n-    @Override\n-    public Iterator<StorageProperty> augmentProperties( Iterator<StorageProperty> iterator )\n+    removedProperties.add(propertyKeyId);\n+    if (changedProperties != null)\n     {\n-        if ( removedProperties != null || addedProperties != null || changedProperties != null )\n-        {\n-            iterator = Iterators.filter( excludePropertiesWeKnowAbout, iterator );\n+      changedProperties.remove(propertyKeyId);\n+    }\n+  }\n \n-            if ( addedProperties != null && !addedProperties.isEmpty() )\n-            {\n-                iterator = Iterators.concat( iterator, toPropertyIterator( addedProperties ) );\n-            }\n-            if ( changedProperties != null && !changedProperties.isEmpty() )\n-            {\n-                iterator = Iterators.concat( iterator, toPropertyIterator( changedProperties ) );\n-            }\n-        }\n+  @Override\n+  public Iterator<StorageProperty> addedProperties()\n+  {\n+    return toPropertyIterator(addedProperties);\n+  }\n \n-        return iterator;\n-    }\n+  @Override\n+  public Iterator<StorageProperty> changedProperties()\n+  {\n+    return toPropertyIterator(changedProperties);\n+  }\n \n-    @Override\n-    public void accept( Visitor visitor ) throws ConstraintValidationException\n-    {\n-        if ( addedProperties != null || removedProperties != null || changedProperties != null )\n-        {\n-            visitor.visitPropertyChanges( id, addedProperties(), changedProperties(), removedProperties() );\n-        }\n-    }\n+  @Override\n+  public Iterator<Integer> removedProperties()\n+  {\n+    return removedProperties != null ? removedProperties.iterator() : emptyIterator();\n+  }\n \n-    @Override\n-    public boolean hasPropertyChanges()\n+  @Override\n+  public Iterator<StorageProperty> addedAndChangedProperties()\n+  {\n+    if (addedProperties == null)\n     {\n-        return addedProperties != null || removedProperties != null || changedProperties != null;\n+      return toPropertyIterator(changedProperties);\n     }\n-\n-    @Override\n-    public StorageProperty getChangedProperty( int propertyKeyId )\n+    if (changedProperties == null)\n     {\n-        return changedProperties == null ? null : getPropertyOrNull( changedProperties, propertyKeyId );\n+      return toPropertyIterator(addedProperties);\n     }\n+    return Iterators.concat(toPropertyIterator(addedProperties), toPropertyIterator(changedProperties));\n+  }\n \n-    @Override\n-    public StorageProperty getAddedProperty( int propertyKeyId )\n+  @Override\n+  public Iterator<StorageProperty> augmentProperties(Iterator<StorageProperty> iterator)\n+  {\n+    if (removedProperties != null || addedProperties != null || changedProperties != null)\n     {\n-        return addedProperties == null ? null : getPropertyOrNull( addedProperties, propertyKeyId );\n-    }\n+      iterator = Iterators.filter(excludePropertiesWeKnowAbout, iterator);\n \n-    @Override\n-    public boolean isPropertyChangedOrRemoved( int propertyKey )\n-    {\n-        return (removedProperties != null && removedProperties.contains( propertyKey ))\n-               || (changedProperties != null && changedProperties.containsKey( propertyKey ));\n+      if (addedProperties != null && !addedProperties.isEmpty())\n+      {\n+        iterator = Iterators.concat(iterator, toPropertyIterator(addedProperties));\n+      }\n+      if (changedProperties != null && !changedProperties.isEmpty())\n+      {\n+        iterator = Iterators.concat(iterator, toPropertyIterator(changedProperties));\n+      }\n     }\n \n-    @Override\n-    public boolean isPropertyRemoved( int propertyKeyId )\n-    {\n-        return removedProperties != null && removedProperties.contains( propertyKeyId );\n-    }\n+    return iterator;\n+  }\n \n-    private Iterator<StorageProperty> toPropertyIterator( VersionedHashMap<Integer,Value> propertyMap )\n+  @Override\n+  public void accept(Visitor visitor) throws ConstraintValidationException\n+  {\n+    if (addedProperties != null || removedProperties != null || changedProperties != null)\n     {\n-        return propertyMap == null ? emptyIterator() :\n-               Iterators.map(\n-                    entry -> new PropertyKeyValue( entry.getKey(), entry.getValue() ),\n-                    propertyMap.entrySet().iterator()\n-                );\n+      visitor.visitPropertyChanges(id, addedProperties(), changedProperties(), removedProperties());\n     }\n+  }\n \n-    private PropertyKeyValue getPropertyOrNull( VersionedHashMap<Integer,Value> propertyMap, int propertyKeyId )\n-    {\n-        Value value = propertyMap.get( propertyKeyId );\n-        return value == null ? null : new PropertyKeyValue( propertyKeyId, value );\n-    }\n+  @Override\n+  public boolean hasPropertyChanges()\n+  {\n+    return addedProperties != null || removedProperties != null || changedProperties != null;\n+  }\n+\n+  @Override\n+  public StorageProperty getChangedProperty(int propertyKeyId)\n+  {\n+    return changedProperties == null ? null : getPropertyOrNull(changedProperties, propertyKeyId);\n+  }\n+\n+  @Override\n+  public StorageProperty getAddedProperty(int propertyKeyId)\n+  {\n+    return addedProperties == null ? null : getPropertyOrNull(addedProperties, propertyKeyId);\n+  }\n+\n+  @Override\n+  public boolean isPropertyChangedOrRemoved(int propertyKey)\n+  {\n+    return (removedProperties != null && removedProperties.contains(propertyKey))\n+        || (changedProperties != null && changedProperties.containsKey(propertyKey));\n+  }\n+\n+  @Override\n+  public boolean isPropertyRemoved(int propertyKeyId)\n+  {\n+    return removedProperties != null && removedProperties.contains(propertyKeyId);\n+  }\n+\n+  private Iterator<StorageProperty> toPropertyIterator(VersionedHashMap<Integer, Value> propertyMap)\n+  {\n+    return propertyMap == null ? emptyIterator() :\n+        Iterators.map(\n+            entry -> new PropertyKeyValue(entry.getKey(), entry.getValue()),\n+            propertyMap.entrySet().iterator()\n+        );\n+  }\n+\n+  private PropertyKeyValue getPropertyOrNull(VersionedHashMap<Integer, Value> propertyMap, int propertyKeyId)\n+  {\n+    Value value = propertyMap.get(propertyKeyId);\n+    return value == null ? null : new PropertyKeyValue(propertyKeyId, value);\n+  }\n }\n",
            "diff_size": 236
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "50",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 187).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "50",
                    "column": "103",
                    "severity": "error",
                    "message": "'&&' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "221",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 166).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "221",
                    "column": "88",
                    "severity": "error",
                    "message": "'||' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "232",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 173).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/680/PropertyContainerStateImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/680/PropertyContainerStateImpl.java\nindex e5e6e2f7ae5..ce3e7136ce4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/680/PropertyContainerStateImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/680/PropertyContainerStateImpl.java\n@@ -38,8 +38,8 @@ class PropertyContainerStateImpl implements PropertyContainerState\n {\n     private final long id;\n \n-    private VersionedHashMap<Integer, Value> addedProperties;\n-    private VersionedHashMap<Integer, Value> changedProperties;\n+    private VersionedHashMap<Integer,Value> addedProperties;\n+    private VersionedHashMap<Integer,Value> changedProperties;\n     private Set<Integer> removedProperties;\n \n     private final Predicate<StorageProperty> excludePropertiesWeKnowAbout = new Predicate<StorageProperty>()\n@@ -47,10 +47,9 @@ class PropertyContainerStateImpl implements PropertyContainerState\n         @Override\n         public boolean test( StorageProperty item )\n         {\n-            return (removedProperties == null || !removedProperties.contains( item.propertyKeyId() ))\n-                    && (addedProperties == null || !addedProperties.containsKey( item.propertyKeyId() ))\n-                    && (changedProperties == null || !changedProperties.containsKey( item.propertyKeyId() ));\n-        }\n+            return ( removedProperties == null || !removedProperties.contains( item.propertyKeyId() ))&& ( addedProperties == null || !addedProperties.containsKey( item.propertyKeyId() ))\n+                    && ( changedProperties == null || !changedProperties.containsKey( item.propertyKeyId() ));\n+    }\n     };\n \n     PropertyContainerStateImpl( long id )\n@@ -69,11 +68,13 @@ class PropertyContainerStateImpl implements PropertyContainerState\n         {\n             changedProperties.clear();\n         }\n-        if ( addedProperties != null )\n+\n+if ( addedProperties != null )\n         {\n             addedProperties.clear();\n         }\n-        if ( removedProperties != null )\n+\n+if ( removedProperties != null )\n         {\n             removedProperties.clear();\n         }\n@@ -92,8 +93,7 @@ class PropertyContainerStateImpl implements PropertyContainerState\n             changedProperties = new VersionedHashMap<>();\n         }\n         changedProperties.put( propertyKeyId, value );\n-\n-        if ( removedProperties != null )\n+if ( removedProperties != null )\n         {\n             removedProperties.remove( propertyKeyId );\n         }\n@@ -108,7 +108,8 @@ class PropertyContainerStateImpl implements PropertyContainerState\n             changeProperty( propertyKeyId, value );\n             return;\n         }\n-        if ( addedProperties == null )\n+\n+if ( addedProperties == null )\n         {\n             addedProperties = new VersionedHashMap<>();\n         }\n@@ -121,7 +122,8 @@ class PropertyContainerStateImpl implements PropertyContainerState\n         {\n             return;\n         }\n-        if ( removedProperties == null )\n+\n+if ( removedProperties == null )\n         {\n             removedProperties = newSetFromMap( new VersionedHashMap<>() );\n         }\n@@ -157,11 +159,13 @@ class PropertyContainerStateImpl implements PropertyContainerState\n         {\n             return toPropertyIterator( changedProperties );\n         }\n-        if ( changedProperties == null )\n+\n+if ( changedProperties == null )\n         {\n             return toPropertyIterator( addedProperties );\n         }\n-        return Iterators.concat( toPropertyIterator( addedProperties ), toPropertyIterator( changedProperties ) );\n+\n+return Iterators.concat( toPropertyIterator( addedProperties ), toPropertyIterator( changedProperties ) );\n     }\n \n     @Override\n@@ -170,12 +174,12 @@ class PropertyContainerStateImpl implements PropertyContainerState\n         if ( removedProperties != null || addedProperties != null || changedProperties != null )\n         {\n             iterator = Iterators.filter( excludePropertiesWeKnowAbout, iterator );\n-\n-            if ( addedProperties != null && !addedProperties.isEmpty() )\n+if ( addedProperties != null && !addedProperties.isEmpty() )\n             {\n                 iterator = Iterators.concat( iterator, toPropertyIterator( addedProperties ) );\n             }\n-            if ( changedProperties != null && !changedProperties.isEmpty() )\n+\n+if ( changedProperties != null && !changedProperties.isEmpty() )\n             {\n                 iterator = Iterators.concat( iterator, toPropertyIterator( changedProperties ) );\n             }\n@@ -214,8 +218,7 @@ class PropertyContainerStateImpl implements PropertyContainerState\n     @Override\n     public boolean isPropertyChangedOrRemoved( int propertyKey )\n     {\n-        return (removedProperties != null && removedProperties.contains( propertyKey ))\n-               || (changedProperties != null && changedProperties.containsKey( propertyKey ));\n+        return (removedProperties != null && removedProperties.contains( propertyKey ))|| (changedProperties != null && changedProperties.containsKey( propertyKey ));\n     }\n \n     @Override\n@@ -226,11 +229,7 @@ class PropertyContainerStateImpl implements PropertyContainerState\n \n     private Iterator<StorageProperty> toPropertyIterator( VersionedHashMap<Integer,Value> propertyMap )\n     {\n-        return propertyMap == null ? emptyIterator() :\n-               Iterators.map(\n-                    entry -> new PropertyKeyValue( entry.getKey(), entry.getValue() ),\n-                    propertyMap.entrySet().iterator()\n-                );\n+        return propertyMap == null ? emptyIterator() : Iterators.map( entry -> new PropertyKeyValue( entry.getKey(), entry.getValue() ), propertyMap.entrySet().iterator() );\n     }\n \n     private PropertyKeyValue getPropertyOrNull( VersionedHashMap<Integer,Value> propertyMap, int propertyKeyId )\n@@ -238,4 +237,4 @@ class PropertyContainerStateImpl implements PropertyContainerState\n         Value value = propertyMap.get( propertyKeyId );\n         return value == null ? null : new PropertyKeyValue( propertyKeyId, value );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 32
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
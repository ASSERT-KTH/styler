{
    "project_name": "neo4j-neo4j",
    "error_id": "2164",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "51",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "117",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "135",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "127",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2164/FileLogRotation.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2164/FileLogRotation.java\nindex d673bed0a2b..aa9b1191e40 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2164/FileLogRotation.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2164/FileLogRotation.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.transaction.log.rotation;\n \n import java.io.IOException;\n@@ -47,21 +48,21 @@ public class FileLogRotation implements LogRotation\n     private final LongSupplier lastTransactionIdSupplier;\n     private final LongSupplier fileVersionSupplier;\n \n-    public static LogRotation checkpointLogRotation( CheckpointLogFile checkpointLogFile, LogFile logFile, Clock clock, Health databaseHealth,\n-            LogRotationMonitor monitor )\n+    public static LogRotation checkpointLogRotation(CheckpointLogFile checkpointLogFile, LogFile logFile, Clock clock, Health databaseHealth,\n+                                                    LogRotationMonitor monitor)\n     {\n-        return new FileLogRotation( checkpointLogFile, clock, databaseHealth, monitor,\n-                () -> logFile.getLogFileInformation().committingEntryId(), checkpointLogFile::getCurrentDetachedLogVersion );\n+        return new FileLogRotation(checkpointLogFile, clock, databaseHealth, monitor,\n+          () -> logFile.getLogFileInformation().committingEntryId(), checkpointLogFile::getCurrentDetachedLogVersion);\n     }\n \n-    public static LogRotation transactionLogRotation( LogFiles logFiles, Clock clock, Health databaseHealth, LogRotationMonitor monitor )\n+    public static LogRotation transactionLogRotation(LogFiles logFiles, Clock clock, Health databaseHealth, LogRotationMonitor monitor)\n     {\n-        return new FileLogRotation( logFiles.getLogFile(), clock, databaseHealth, monitor,\n-                () -> logFiles.getLogFile().getLogFileInformation().committingEntryId(), logFiles.getLogFile()::getHighestLogVersion );\n+        return new FileLogRotation(logFiles.getLogFile(), clock, databaseHealth, monitor,\n+          () -> logFiles.getLogFile().getLogFileInformation().committingEntryId(), logFiles.getLogFile()::getHighestLogVersion);\n     }\n \n-    private FileLogRotation( RotatableFile rotatableFile, Clock clock, Health databaseHealth, LogRotationMonitor monitor,\n-            LongSupplier lastTransactionIdSupplier, LongSupplier fileVersionSupplier )\n+    private FileLogRotation(RotatableFile rotatableFile, Clock clock, Health databaseHealth, LogRotationMonitor monitor,\n+                            LongSupplier lastTransactionIdSupplier, LongSupplier fileVersionSupplier)\n     {\n         this.clock = clock;\n         this.monitor = monitor;\n@@ -72,19 +73,19 @@ public class FileLogRotation implements LogRotation\n     }\n \n     @Override\n-    public boolean rotateLogIfNeeded( LogRotateEvents logRotateEvents ) throws IOException\n+    public boolean rotateLogIfNeeded(LogRotateEvents logRotateEvents) throws IOException\n     {\n         /* We synchronize on the writer because we want to have a monitor that another thread\n          * doing force (think batching of writes), such that it can't see a bad state of the writer\n          * even when rotating underlying channels.\n          */\n-        if ( rotatableFile.rotationNeeded() )\n+        if (rotatableFile.rotationNeeded())\n         {\n-            synchronized ( rotatableFile )\n+            synchronized (rotatableFile)\n             {\n-                if ( rotatableFile.rotationNeeded() )\n+                if (rotatableFile.rotationNeeded())\n                 {\n-                    doRotate( logRotateEvents );\n+                    doRotate(logRotateEvents);\n                     return true;\n                 }\n             }\n@@ -94,33 +95,33 @@ public class FileLogRotation implements LogRotation\n \n     @VisibleForTesting\n     @Override\n-    public void rotateLogFile( LogRotateEvents logRotateEvents ) throws IOException\n+    public void rotateLogFile(LogRotateEvents logRotateEvents) throws IOException\n     {\n-        synchronized ( rotatableFile )\n+        synchronized (rotatableFile)\n         {\n-            doRotate( logRotateEvents );\n+            doRotate(logRotateEvents);\n         }\n     }\n \n-    private void doRotate( LogRotateEvents logRotateEvents ) throws IOException\n+    private void doRotate(LogRotateEvents logRotateEvents) throws IOException\n     {\n-        try ( LogRotateEvent rotateEvent = logRotateEvents.beginLogRotate() )\n+        try (LogRotateEvent rotateEvent = logRotateEvents.beginLogRotate())\n         {\n             long currentVersion = fileVersionSupplier.getAsLong();\n             /*\n              * In order to rotate the log file safely we need to assert that the kernel is still\n              * at full health. In case of a panic this rotation will be aborted, which is the safest alternative.\n              */\n-            databaseHealth.assertHealthy( IOException.class );\n+            databaseHealth.assertHealthy(IOException.class);\n             long startTimeMillis = clock.millis();\n-            monitor.startRotation( currentVersion );\n+            monitor.startRotation(currentVersion);\n             Path newLogFile = rotatableFile.rotate();\n             long lastTransactionId = lastTransactionIdSupplier.getAsLong();\n             long millisSinceLastRotation = lastRotationCompleted == 0 ? 0 : startTimeMillis - lastRotationCompleted;\n             lastRotationCompleted = clock.millis();\n             long rotationElapsedTime = lastRotationCompleted - startTimeMillis;\n-            rotateEvent.rotationCompleted( rotationElapsedTime );\n-            monitor.finishLogRotation( newLogFile, currentVersion, lastTransactionId, rotationElapsedTime, millisSinceLastRotation );\n+            rotateEvent.rotationCompleted(rotationElapsedTime);\n+            monitor.finishLogRotation(newLogFile, currentVersion, lastTransactionId, rotationElapsedTime, millisSinceLastRotation);\n         }\n     }\n }\n",
            "diff_size": 24
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "906",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "36",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "36",
                    "column": "17",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/906/LoadCommandProvider.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/906/LoadCommandProvider.java\nindex c7284afa3ff..2741aa7a000 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/906/LoadCommandProvider.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/906/LoadCommandProvider.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.commandline.dbms;\n \n import java.nio.file.Path;\n@@ -30,46 +31,46 @@ import org.neo4j.dbms.archive.Loader;\n \n public class LoadCommandProvider extends AdminCommand.Provider\n {\n-    public LoadCommandProvider()\n-    {\n-        super( \"load\" );\n-    }\n+  public LoadCommandProvider()\n+  {\n+    super(\"load\");\n+  }\n \n-    @Override\n-    @Nonnull\n-    public Arguments allArguments()\n-    {\n-        return LoadCommand.arguments();\n-    }\n+  @Override\n+  @Nonnull\n+  public Arguments allArguments()\n+  {\n+    return LoadCommand.arguments();\n+  }\n \n-    @Override\n-    @Nonnull\n-    public String description()\n-    {\n-        return \"Load a database from an archive. <archive-path> must be an archive created with the dump \" +\n-                \"command. <database> is the name of the database to create. Existing databases can be replaced \" +\n-                \"by specifying --force. It is not possible to replace a database that is mounted in a running \" +\n-                \"Neo4j server.\";\n-    }\n+  @Override\n+  @Nonnull\n+  public String description()\n+  {\n+    return \"Load a database from an archive. <archive-path> must be an archive created with the dump \" +\n+        \"command. <database> is the name of the database to create. Existing databases can be replaced \" +\n+        \"by specifying --force. It is not possible to replace a database that is mounted in a running \" +\n+        \"Neo4j server.\";\n+  }\n \n-    @Override\n-    @Nonnull\n-    public String summary()\n-    {\n-        return \"Load a database from an archive created with the dump command.\";\n-    }\n+  @Override\n+  @Nonnull\n+  public String summary()\n+  {\n+    return \"Load a database from an archive created with the dump command.\";\n+  }\n \n-    @Override\n-    @Nonnull\n-    public AdminCommandSection commandSection()\n-    {\n-        return OfflineBackupCommandSection.instance();\n-    }\n+  @Override\n+  @Nonnull\n+  public AdminCommandSection commandSection()\n+  {\n+    return OfflineBackupCommandSection.instance();\n+  }\n \n-    @Override\n-    @Nonnull\n-    public AdminCommand create( Path homeDir, Path configDir, OutsideWorld outsideWorld )\n-    {\n-        return new LoadCommand( homeDir, configDir, new Loader() );\n-    }\n+  @Override\n+  @Nonnull\n+  public AdminCommand create(Path homeDir, Path configDir, OutsideWorld outsideWorld)\n+  {\n+    return new LoadCommand(homeDir, configDir, new Loader());\n+  }\n }\n",
            "diff_size": 38
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "49",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 322).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/906/LoadCommandProvider.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/906/LoadCommandProvider.java\nindex c7284afa3ff..600b4721f8d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/906/LoadCommandProvider.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/906/LoadCommandProvider.java\n@@ -46,10 +46,7 @@ public class LoadCommandProvider extends AdminCommand.Provider\n     @Nonnull\n     public String description()\n     {\n-        return \"Load a database from an archive. <archive-path> must be an archive created with the dump \" +\n-                \"command. <database> is the name of the database to create. Existing databases can be replaced \" +\n-                \"by specifying --force. It is not possible to replace a database that is mounted in a running \" +\n-                \"Neo4j server.\";\n+        return \"Load a database from an archive. <archive-path> must be an archive created with the dump \" + \"command. <database> is the name of the database to create. Existing databases can be replaced \" + \"by specifying --force. It is not possible to replace a database that is mounted in a running \" + \"Neo4j server.\";\n     }\n \n     @Override\n@@ -72,4 +69,4 @@ public class LoadCommandProvider extends AdminCommand.Provider\n     {\n         return new LoadCommand( homeDir, configDir, new Loader() );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
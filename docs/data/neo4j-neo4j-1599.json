{
    "project_name": "neo4j-neo4j",
    "error_id": "1599",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "52",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "17",
                    "severity": "error",
                    "message": "'}' at column 17 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "127",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "127",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1599/MergingBlockEntryReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1599/MergingBlockEntryReader.java\nindex 061cf04af04..cf37e31c247 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1599/MergingBlockEntryReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1599/MergingBlockEntryReader.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.index.schema;\n \n import java.io.Closeable;\n@@ -35,7 +36,7 @@ import static org.neo4j.io.IOUtils.closeAll;\n  * {@link BlockEntryCursor#key()} (current key on each cursor).\n  * Instances handed out from {@link #key()} and {@link #value()} are reused, consumer is responsible for creating copy if there is a need to cache results.\n  */\n-public class MergingBlockEntryReader<KEY,VALUE> implements BlockEntryCursor<KEY,VALUE>\n+public class MergingBlockEntryReader<KEY, VALUE> implements BlockEntryCursor<KEY, VALUE>\n {\n     // Means that a cursor needs to be advanced, i.e. its current head has already been used, or that it has no head yet\n     private static final byte STATE_NEED_ADVANCE = 0;\n@@ -44,18 +45,18 @@ public class MergingBlockEntryReader<KEY,VALUE> implements BlockEntryCursor<KEY,\n     // Means that a cursor has been exhausted and has no more entries in it\n     private static final byte STATE_EXHAUSTED = 2;\n \n-    private final Layout<KEY,VALUE> layout;\n+    private final Layout<KEY, VALUE> layout;\n     private List<Source> sources = new ArrayList<>();\n     private Source lastReturned;\n \n-    MergingBlockEntryReader( Layout<KEY,VALUE> layout )\n+    MergingBlockEntryReader(Layout<KEY, VALUE> layout)\n     {\n         this.layout = layout;\n     }\n \n-    void addSource( BlockEntryCursor<KEY,VALUE> source )\n+    void addSource(BlockEntryCursor<KEY, VALUE> source)\n     {\n-        sources.add( new Source( source ) );\n+        sources.add(new Source(source));\n     }\n \n     @Override\n@@ -64,10 +65,10 @@ public class MergingBlockEntryReader<KEY,VALUE> implements BlockEntryCursor<KEY,\n         // Figure out lowest among cursor heads\n         KEY lowest = null;\n         Source lowestSource = null;\n-        for ( Source source : sources )\n+        for (Source source : sources)\n         {\n             KEY candidate = source.tryNext();\n-            if ( candidate != null && (lowest == null || layout.compare( candidate, lowest ) < 0) )\n+            if (candidate != null && (lowest == null || layout.compare(candidate, lowest) < 0))\n             {\n                 lowest = candidate;\n                 lowestSource = source;\n@@ -75,7 +76,7 @@ public class MergingBlockEntryReader<KEY,VALUE> implements BlockEntryCursor<KEY,\n         }\n \n         // Make state transitions so that this entry is now considered used\n-        if ( lowest != null )\n+        if (lowest != null)\n         {\n             lastReturned = lowestSource.takeHead();\n             return true;\n@@ -98,34 +99,32 @@ public class MergingBlockEntryReader<KEY,VALUE> implements BlockEntryCursor<KEY,\n     @Override\n     public void close() throws IOException\n     {\n-        closeAll( sources );\n+        closeAll(sources);\n     }\n \n     private class Source implements Closeable\n     {\n-        private final BlockEntryCursor<KEY,VALUE> cursor;\n+        private final BlockEntryCursor<KEY, VALUE> cursor;\n         private byte state;\n \n-        Source( BlockEntryCursor<KEY,VALUE> cursor )\n+        Source(BlockEntryCursor<KEY, VALUE> cursor)\n         {\n             this.cursor = cursor;\n         }\n \n         KEY tryNext() throws IOException\n         {\n-            if ( state == STATE_NEED_ADVANCE )\n+            if (state == STATE_NEED_ADVANCE)\n             {\n-                if ( cursor.next() )\n+                if (cursor.next())\n                 {\n                     state = STATE_HAS;\n                     return cursor.key();\n-                }\n-                else\n+                } else\n                 {\n                     state = STATE_EXHAUSTED;\n                 }\n-            }\n-            else if ( state == STATE_HAS )\n+            } else if (state == STATE_HAS)\n             {\n                 return cursor.key();\n             }\n",
            "diff_size": 18
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "codefollower-H2-Research",
    "error_id": "447",
    "information": {
        "errors": [
            {
                "line": "26",
                "column": "3",
                "severity": "warning",
                "message": "File contains tab characters (this is the first instance).",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
            }
        ]
    },
    "source_code": "//    }\n//\n//\t// \u6211\u52a0\u4e0a\u7684\n//\tpublic String toString() {\n//\t\treturn stringArray2(data);\n//\t}",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "26",
                    "column": "3",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "26",
                    "column": "3",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/errored/1/447/BitField.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/naturalize/447/BitField.java\nindex e1afa59efc8..5b7d0df3b0b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/errored/1/447/BitField.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/naturalize/447/BitField.java\n@@ -13,207 +13,4 @@\n //@Deprecated\n //public final class BitField {\n //\n-//    private static final int ADDRESS_BITS = 6; //\u8868\u793a2\u76846\u6b21\u65b9\uff0c\u521a\u597d\u7b49\u4e8e64, i >> ADDRESS_BITS\u65f6\u80fd\u786e\u5b9a\u662f\u5728data\u4e2d\u90a3\u4e2a\u4e0b\u6807\n-//    private static final int BITS = 64;\n-//    private static final int ADDRESS_MASK = BITS - 1;\n-//    private long[] data;\n-//    private int maxLength;\n-//\n-//    public BitField() {\n-//        this(64);\n-//    }\n-//\n-//\t// \u6211\u52a0\u4e0a\u7684\n-//\tpublic String toString() {\n-//\t\treturn stringArray2(data);\n-//\t}\n-//\n-//\t// \u6211\u52a0\u4e0a\u7684\n-//\tpublic static String stringArray2(long[] array) {\n-//\t\tif (array == null) {\n-//\t\t\treturn \"null\";\n-//\t\t}\n-//\t\tStatementBuilder buff = new StatementBuilder(\"[\");\n-//\t\tfor (Object a : array) {\n-//\t\t\tbuff.appendExceptFirst(\", \");\n-//\t\t\tbuff.append(a.toString());\n-//\t\t}\n-//\n-//\t\tbuff.append(\"]\");\n-//\t\treturn buff.toString();\n-//\t}\n-//    \n-//    //capacity\u8868\u793a\u603b\u4f4d\u6570\n-//    public BitField(int capacity) {\n-//    \t//\u5982\u679ccapacity\u5c0f\u4e8e8(2\u7684\u4e09\u6b21\u65b9)\uff0c\u90a3\u4e48\u4e0d\u9884\u5148\u5206\u914ddata\n-//    \t//capacity>8\u65f6\uff0c\u5206\u914dcapacity >>> 3\u4e2along,\u4e00\u4e2along\u80fd\u8868\u793a64\u500d\uff0c\n-//    \t//\u6240\u4ee5capacity>8\u65f6\u9884\u5206\u914d\u7684data\u80fd\u8868\u793a\u7684\u4f4d\u6570\u662f: (capacity >>> 3) *64 \u7ea6\u7b49\u4e8e (capacity/8)*64 = capacity*8\n-//    \t//\u5373\u662f\u539f\u6765capacity\u76848\u500d(\u7ea6\u7b49\u4e8e)\n-//    \t\n-//        data = new long[capacity >>> 3];\n-//    }\n-//\n-//    /**\n-//     * Get the index of the next bit that is not set.\n-//     *\n-//     * @param fromIndex where to start searching\n-//     * @return the index of the next disabled bit\n-//     */\n-//    public int nextClearBit(int fromIndex) {\n-//        int i = fromIndex >> ADDRESS_BITS;\n-//        int max = data.length;\n-//        for (; i < max; i++) {\n-//            if (data[i] == -1) { //long\u7684\u6240\u6709\u4f4d\u90fd\u662f1\u65f6\uff0c\u503c\u65f6-1\n-//                continue;\n-//            }\n-//            int j = Math.max(fromIndex, i << ADDRESS_BITS);\n-//            for (int end = j + 64; j < end; j++) {\n-//                if (!get(j)) {\n-//                    return j;\n-//                }\n-//            }\n-//        }\n-//        return max << ADDRESS_BITS;\n-//    }\n-//\n-//    /**\n-//     * Get the bit at the given index.\n-//     *\n-//     * @param i the index\n-//     * @return true if the bit is enabled\n-//     */\n-//    public boolean get(int i) {\n-//        int addr = i >> ADDRESS_BITS;\n-//        if (addr >= data.length) {\n-//            return false;\n-//        }\n-//        return (data[addr] & getBitMask(i)) != 0;\n-//    }\n-//\n-//    /**\n-//     * Get the next 8 bits at the given index.\n-//     * The index must be a multiple of 8.\n-//     *\n-//     * @param i the index\n-//     * @return the next 8 bits\n-//     */\n-//    public int getByte(int i) {\n-//        int addr = i >> ADDRESS_BITS;\n-//        if (addr >= data.length) {\n-//            return 0;\n-//        }\n-//        return (int) (data[addr] >>> (i & (7 << 3)) & 255);\n-//    }\n-//\n-//    /**\n-//     * Combine the next 8 bits at the given index with OR.\n-//     * The index must be a multiple of 8.\n-//     *\n-//     * @param i the index\n-//     * @param x the next 8 bits (0 - 255)\n-//     */\n-//    public void setByte(int i, int x) {\n-//        int addr = i >> ADDRESS_BITS;\n-//        checkCapacity(addr);\n-//        data[addr] |= ((long) x) << (i & (7 << 3));\n-//        if (maxLength < i && x != 0) {\n-//            maxLength = i + 7;\n-//        }\n-//    }\n-//\n-//    /**\n-//     * Set bit at the given index to 'true'.\n-//     *\n-//     * @param i the index\n-//     */\n-//    public void set(int i) {\n-//        int addr = i >> ADDRESS_BITS;\n-//        checkCapacity(addr);\n-//        data[addr] |= getBitMask(i);\n-//        if (maxLength < i) {\n-//            maxLength = i;\n-//        }\n-//    }\n-//\n-//    /**\n-//     * Set bit at the given index to 'false'.\n-//     *\n-//     * @param i the index\n-//     */\n-//    public void clear(int i) {\n-//        int addr = i >> ADDRESS_BITS;\n-//        if (addr >= data.length) {\n-//            return;\n-//        }\n-//        data[addr] &= ~getBitMask(i);\n-//    }\n-//    \n-//    //\u6bd4\u5982\uff0c\u5982\u679ci\u662f63\uff0c\u8fd4\u56de\u7684long\u503c\u7684\u7b2c64(\u56e0\u4e3ai\u4ece0\u5f00\u59cb\uff0c\u6240\u4ee5\u662fi+1)\u4f4d\u662f1\uff0c\n-//    //\u5982\u679ci\u662f65\uff0c\u630963\u53d6\u6a21\u540e\u662f1\uff0c\u8fd4\u56de\u7684long\u503c\u7684\u7b2c2\u4f4d\u662f1\uff0c\n-//    private static long getBitMask(int i) {\n-//        return 1L << (i & ADDRESS_MASK); //(i & ADDRESS_MASK)\u76f8\u5f53\u4e8e\u630963\u53d6\u6a21(\u5f97\u5230\u7684\u503c\u662f0\u523063)\n-//    }\n-//\n-//    private void checkCapacity(int size) {\n-//        if (size >= data.length) {\n-//            expandCapacity(size);\n-//        }\n-//    }\n-//\n-//    private void expandCapacity(int size) {\n-//        while (size >= data.length) {\n-//            int newSize = data.length == 0 ? 1 : data.length * 2;\n-//            long[] d = new long[newSize];\n-//            System.arraycopy(data, 0, d, 0, data.length);\n-//            data = d;\n-//        }\n-//    }\n-//\n-//    /**\n-//     * Enable or disable a number of bits.\n-//     *\n-//     * @param fromIndex the index of the first bit to enable or disable\n-//     * @param toIndex one plus the index of the last bit to enable or disable\n-//     * @param value the new value\n-//     */\n-//    public void set(int fromIndex, int toIndex, boolean value) {\n-//        // go backwards so that OutOfMemory happens\n-//        // before some bytes are modified\n-//        for (int i = toIndex - 1; i >= fromIndex; i--) {\n-//            set(i, value);\n-//        }\n-//        if (value) {\n-//            if (toIndex > maxLength) {\n-//                maxLength = toIndex;\n-//            }\n-//        } else {\n-//            if (toIndex >= maxLength) {\n-//                maxLength = fromIndex;\n-//            }\n-//        }\n-//    }\n-//\n-//    private void set(int i, boolean value) {\n-//        if (value) {\n-//            set(i);\n-//        } else {\n-//            clear(i);\n-//        }\n-//    }\n-//\n-//    /**\n-//     * Get the index of the highest set bit plus one, or 0 if no bits are set.\n-//     *\n-//     * @return the length of the bit field\n-//     */\n-//    public int length() {\n-//        int m = maxLength >> ADDRESS_BITS;\n-//        while (m > 0 && data[m] == 0) {\n-//            m--;\n-//        }\n-//        maxLength = (m << ADDRESS_BITS) +\n-//            (64 - Long.numberOfLeadingZeros(data[m]));\n-//        return maxLength;\n-//    }\n-//\n-//}\n+//    private static final int ADDRESS_BITS = 6; //\u8868\u793a2\u76846\u6b21\u65b9\uff0c\u521a\u597d\u7b49\u4e8e64, i >> ADDRESS_BITS\u65f6\u80fd\u786e\u5b9a\n\\ No newline at end of file\n",
            "diff_size": 204
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/errored/1/447/BitField.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/codebuff/447/BitField.java\nindex e1afa59efc8..283355bb6aa 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/errored/1/447/BitField.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/codebuff/447/BitField.java\n@@ -23,33 +23,33 @@\n //        this(64);\n //    }\n //\n-//\t// \u6211\u52a0\u4e0a\u7684\n-//\tpublic String toString() {\n-//\t\treturn stringArray2(data);\n-//\t}\n-//\n-//\t// \u6211\u52a0\u4e0a\u7684\n-//\tpublic static String stringArray2(long[] array) {\n-//\t\tif (array == null) {\n-//\t\t\treturn \"null\";\n-//\t\t}\n-//\t\tStatementBuilder buff = new StatementBuilder(\"[\");\n-//\t\tfor (Object a : array) {\n-//\t\t\tbuff.appendExceptFirst(\", \");\n-//\t\t\tbuff.append(a.toString());\n-//\t\t}\n-//\n-//\t\tbuff.append(\"]\");\n-//\t\treturn buff.toString();\n-//\t}\n+//  // \u6211\u52a0\u4e0a\u7684\n+//  public String toString() {\n+//      return stringArray2(data);\n+//  }\n+//\n+//  // \u6211\u52a0\u4e0a\u7684\n+//  public static String stringArray2(long[] array) {\n+//      if (array == null) {\n+//          return \"null\";\n+//      }\n+//      StatementBuilder buff = new StatementBuilder(\"[\");\n+//      for (Object a : array) {\n+//          buff.appendExceptFirst(\", \");\n+//          buff.append(a.toString());\n+//      }\n+//\n+//      buff.append(\"]\");\n+//      return buff.toString();\n+//  }\n //    \n //    //capacity\u8868\u793a\u603b\u4f4d\u6570\n //    public BitField(int capacity) {\n-//    \t//\u5982\u679ccapacity\u5c0f\u4e8e8(2\u7684\u4e09\u6b21\u65b9)\uff0c\u90a3\u4e48\u4e0d\u9884\u5148\u5206\u914ddata\n-//    \t//capacity>8\u65f6\uff0c\u5206\u914dcapacity >>> 3\u4e2along,\u4e00\u4e2along\u80fd\u8868\u793a64\u500d\uff0c\n-//    \t//\u6240\u4ee5capacity>8\u65f6\u9884\u5206\u914d\u7684data\u80fd\u8868\u793a\u7684\u4f4d\u6570\u662f: (capacity >>> 3) *64 \u7ea6\u7b49\u4e8e (capacity/8)*64 = capacity*8\n-//    \t//\u5373\u662f\u539f\u6765capacity\u76848\u500d(\u7ea6\u7b49\u4e8e)\n-//    \t\n+//      //\u5982\u679ccapacity\u5c0f\u4e8e8(2\u7684\u4e09\u6b21\u65b9)\uff0c\u90a3\u4e48\u4e0d\u9884\u5148\u5206\u914ddata\n+//      //capacity>8\u65f6\uff0c\u5206\u914dcapacity >>> 3\u4e2along,\u4e00\u4e2along\u80fd\u8868\u793a64\u500d\uff0c\n+//      //\u6240\u4ee5capacity>8\u65f6\u9884\u5206\u914d\u7684data\u80fd\u8868\u793a\u7684\u4f4d\u6570\u662f: (capacity >>> 3) *64 \u7ea6\u7b49\u4e8e (capacity/8)*64 = capacity*8\n+//      //\u5373\u662f\u539f\u6765capacity\u76848\u500d(\u7ea6\u7b49\u4e8e)\n+//      \n //        data = new long[capacity >>> 3];\n //    }\n //\n",
            "diff_size": 24
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "26",
                    "column": "3",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "26",
                    "column": "3",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/errored/1/447/BitField.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/styler_three_grams/447/BitField.java\nindex e1afa59efc8..6cdf31fe689 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/errored/1/447/BitField.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/codefollower-H2-Research/styler_three_grams/447/BitField.java\n@@ -23,7 +23,7 @@\n //        this(64);\n //    }\n //\n-//\t// \u6211\u52a0\u4e0a\u7684\n+//\tpublic String toString() {\n //\tpublic String toString() {\n //\t\treturn stringArray2(data);\n //\t}\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "naturalize",
        "codebuff"
    ],
    "not_repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ]
}
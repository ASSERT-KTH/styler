{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4283",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "41",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4283/Replicator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4283/Replicator.java\nindex c6efa4d6e66..dd44cedca50 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4283/Replicator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4283/Replicator.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering.core.replication;\n \n import java.util.concurrent.Future;\n@@ -25,18 +26,17 @@ import org.neo4j.causalclustering.core.consensus.NoLeaderFoundException;\n \n /**\n  * Replicate content across a cluster of servers.\n-  */\n+ */\n public interface Replicator\n {\n-    /**\n-     * Submit content for replication. This method does not guarantee that the content\n-     * actually gets replicated, it merely makes an attempt at replication. Other\n-     * mechanisms must be used to achieve required delivery semantics.\n-     *\n-     * @param content      The content to replicated.\n-     * @param trackResult  Whether to track the result for this operation.\n-     *\n-     * @return A future that will receive the result when available. Only valid if trackResult is set.\n-     */\n-    Future<Object> replicate( ReplicatedContent content, boolean trackResult ) throws InterruptedException;\n+  /**\n+   * Submit content for replication. This method does not guarantee that the content\n+   * actually gets replicated, it merely makes an attempt at replication. Other\n+   * mechanisms must be used to achieve required delivery semantics.\n+   *\n+   * @param content     The content to replicated.\n+   * @param trackResult Whether to track the result for this operation.\n+   * @return A future that will receive the result when available. Only valid if trackResult is set.\n+   */\n+  Future<Object> replicate(ReplicatedContent content, boolean trackResult) throws InterruptedException;\n }\n",
            "diff_size": 13
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4283/Replicator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4283/Replicator.java\nindex c6efa4d6e66..6620fb5b43d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4283/Replicator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4283/Replicator.java\n@@ -39,4 +39,4 @@ public interface Replicator\n      * @return A future that will receive the result when available. Only valid if trackResult is set.\n      */\n     Future<Object> replicate( ReplicatedContent content, boolean trackResult ) throws InterruptedException;\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
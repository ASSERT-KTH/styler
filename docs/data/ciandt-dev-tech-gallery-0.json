{
    "project_name": "ciandt-dev-tech-gallery",
    "error_id": "0",
    "information": {
        "errors": [
            {
                "line": "83",
                "severity": "warning",
                "message": "Line is longer than 100 characters (found 105).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "   *          for sort the result\n   */\n  public TechnologyFilter(String titleContains, String shortDescriptionContains, String recommendationIs,\n      Integer dateFilter, String orderOptionIs) {\n    this.titleContains = titleContains;\n    this.shortDescriptionContains = shortDescriptionContains;",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "83",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 105).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ciandt-dev-tech-gallery/errored/1/0/TechnologyFilter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ciandt-dev-tech-gallery/intellij/0/TechnologyFilter.java\nindex f77f78fa71f..64d65bd0363 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ciandt-dev-tech-gallery/errored/1/0/TechnologyFilter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ciandt-dev-tech-gallery/intellij/0/TechnologyFilter.java\n@@ -4,25 +4,34 @@ import com.ciandt.techgallery.service.enums.DateFilterEnum;\n \n /**\n  * Response with all technology entities.\n- * \n- * @author Thulio Ribeiro\n  *\n+ * @author Thulio Ribeiro\n  */\n public class TechnologyFilter implements Response {\n \n-  /** string for search in title. */\n+  /**\n+   * string for search in title.\n+   */\n   private String titleContains;\n \n-  /** string for search in shortDescription. */\n+  /**\n+   * string for search in shortDescription.\n+   */\n   private String shortDescriptionContains;\n \n-  /** string for search in recommendation. */\n+  /**\n+   * string for search in recommendation.\n+   */\n   private String recommendationIs;\n \n-  /** string for order option. */\n+  /**\n+   * string for order option.\n+   */\n   private String orderOptionIs;\n \n-  /** string for order option. */\n+  /**\n+   * string for order option.\n+   */\n   private DateFilterEnum dateFilter;\n \n   public String getTitleContains() {\n@@ -70,18 +79,15 @@ public class TechnologyFilter implements Response {\n \n   /**\n    * Construtor for TechnologyFilter.\n-   * \n-   * @param titleContains\n-   *          part of the technology's title\n-   * @param shortDescriptionContains\n-   *          titleContains part of the technology's short description\n-   * @param recommendationIs\n-   *          technology's Ci&T Recommendation\n-   * @param orderOptionIs\n-   *          for sort the result\n+   *\n+   * @param titleContains            part of the technology's title\n+   * @param shortDescriptionContains titleContains part of the technology's short description\n+   * @param recommendationIs         technology's Ci&T Recommendation\n+   * @param orderOptionIs            for sort the result\n    */\n-  public TechnologyFilter(String titleContains, String shortDescriptionContains, String recommendationIs,\n-      Integer dateFilter, String orderOptionIs) {\n+  public TechnologyFilter(String titleContains, String shortDescriptionContains,\n+                          String recommendationIs,\n+                          Integer dateFilter, String orderOptionIs) {\n     this.titleContains = titleContains;\n     this.shortDescriptionContains = shortDescriptionContains;\n     this.recommendationIs = recommendationIs;\n",
            "diff_size": 30
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "83",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 105).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ciandt-dev-tech-gallery/errored/1/0/TechnologyFilter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ciandt-dev-tech-gallery/naturalize/0/TechnologyFilter.java\nindex f77f78fa71f..e1367593629 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ciandt-dev-tech-gallery/errored/1/0/TechnologyFilter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ciandt-dev-tech-gallery/naturalize/0/TechnologyFilter.java\n@@ -90,4 +90,4 @@ public class TechnologyFilter implements Response {\n       this.dateFilter = DateFilterEnum.values()[dateFilter];\n     }\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "91",
                    "severity": "warning",
                    "message": "'String' has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ciandt-dev-tech-gallery/errored/1/0/TechnologyFilter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ciandt-dev-tech-gallery/codebuff/0/TechnologyFilter.java\nindex f77f78fa71f..4d95bf4c2e3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ciandt-dev-tech-gallery/errored/1/0/TechnologyFilter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ciandt-dev-tech-gallery/codebuff/0/TechnologyFilter.java\n@@ -8,21 +8,28 @@ import com.ciandt.techgallery.service.enums.DateFilterEnum;\n  * @author Thulio Ribeiro\n  *\n  */\n+\n+\n public class TechnologyFilter implements Response {\n \n   /** string for search in title. */\n+\n   private String titleContains;\n \n   /** string for search in shortDescription. */\n+\n   private String shortDescriptionContains;\n \n   /** string for search in recommendation. */\n+\n   private String recommendationIs;\n \n   /** string for order option. */\n+\n   private String orderOptionIs;\n \n   /** string for order option. */\n+\n   private DateFilterEnum dateFilter;\n \n   public String getTitleContains() {\n@@ -65,8 +72,7 @@ public class TechnologyFilter implements Response {\n     this.orderOptionIs = orderOptionIs;\n   }\n \n-  public TechnologyFilter() {\n-  }\n+  public TechnologyFilter() {}\n \n   /**\n    * Construtor for TechnologyFilter.\n@@ -80,8 +86,11 @@ public class TechnologyFilter implements Response {\n    * @param orderOptionIs\n    *          for sort the result\n    */\n-  public TechnologyFilter(String titleContains, String shortDescriptionContains, String recommendationIs,\n-      Integer dateFilter, String orderOptionIs) {\n+\n+  public TechnologyFilter(String titleContains,\n+    String shortDescriptionContains,\n+      String recommendationIs,\n+        Integer dateFilter, String orderOptionIs) {\n     this.titleContains = titleContains;\n     this.shortDescriptionContains = shortDescriptionContains;\n     this.recommendationIs = recommendationIs;\n@@ -90,4 +99,5 @@ public class TechnologyFilter implements Response {\n       this.dateFilter = DateFilterEnum.values()[dateFilter];\n     }\n   }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 16
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "83",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 105).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "83",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 105).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
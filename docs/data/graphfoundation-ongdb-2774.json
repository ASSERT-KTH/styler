{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2774",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "93",
                    "column": "7",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "70",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "139",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "140",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "65",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "104",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "131",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "166",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "166",
                    "column": "16",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "179",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "193",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "194",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "194",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "194",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "197",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "197",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "202",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "202",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "217",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "228",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "231",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "231",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "243",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "243",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "246",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "246",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "248",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "248",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "257",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "257",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "267",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "267",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "273",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "273",
                    "column": "105",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "278",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "278",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "285",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "285",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "290",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "290",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "293",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "293",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "297",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "297",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "307",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "307",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "311",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "311",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "318",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "318",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "325",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "325",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "335",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "335",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "339",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "339",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "346",
                    "column": "65",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "346",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "349",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "349",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "354",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "358",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "358",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "361",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "369",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "404",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "404",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "438",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "438",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "443",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "443",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "450",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "451",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "458",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "458",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "468",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "479",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "490",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "506",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "521",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "538",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "548",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "548",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "550",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "550",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "554",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "554",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "560",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "560",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "566",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "566",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "572",
                    "column": "60",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "572",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "577",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "577",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "581",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "581",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "583",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "583",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "586",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "586",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "588",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "588",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "590",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "590",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "592",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "592",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "594",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "594",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "596",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "596",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "598",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "598",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "602",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "602",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "604",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "604",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "606",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "606",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "608",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "608",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "610",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "610",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "616",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "616",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "618",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "618",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "639",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "639",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "646",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "646",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "653",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "653",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "660",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "660",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "667",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "667",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "674",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "674",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "681",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "681",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "688",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "688",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "695",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "695",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "702",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "702",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "709",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "709",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "716",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "716",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "723",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "723",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "730",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "730",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "737",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "737",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "744",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "744",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "750",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "750",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "755",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "755",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "760",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "760",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "765",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "765",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "770",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "770",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "775",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "775",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "778",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "778",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "783",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "783",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "787",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "787",
                    "column": "104",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "791",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "791",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "795",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "797",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "797",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "799",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "799",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "803",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2774/Read.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2774/Read.java\nindex b9dc9a633c7..4200bedba35 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2774/Read.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2774/Read.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.newapi;\n \n import java.util.Arrays;\n@@ -80,728 +81,727 @@ import static org.neo4j.values.storable.ValueGroup.GEOMETRY;\n import static org.neo4j.values.storable.ValueGroup.NUMBER;\n \n abstract class Read implements TxStateHolder,\n-        org.neo4j.internal.kernel.api.Read,\n-        org.neo4j.internal.kernel.api.ExplicitIndexRead,\n-        org.neo4j.internal.kernel.api.SchemaRead,\n-        org.neo4j.internal.kernel.api.Procedures,\n-        org.neo4j.internal.kernel.api.Locks\n+    org.neo4j.internal.kernel.api.Read,\n+    org.neo4j.internal.kernel.api.ExplicitIndexRead,\n+    org.neo4j.internal.kernel.api.SchemaRead,\n+    org.neo4j.internal.kernel.api.Procedures,\n+    org.neo4j.internal.kernel.api.Locks\n {\n-    private final DefaultCursors cursors;\n-    final KernelTransactionImplementation ktx;\n-\n-    Read( DefaultCursors cursors, KernelTransactionImplementation ktx )\n-    {\n-        this.cursors = cursors;\n-        this.ktx = ktx;\n-    }\n-\n-    @Override\n-    public final void nodeIndexSeek(\n-            IndexReference index,\n-            NodeValueIndexCursor cursor,\n-            IndexOrder indexOrder,\n-            IndexQuery... query ) throws IndexNotApplicableKernelException, IndexNotFoundKernelException\n-    {\n-        ktx.assertOpen();\n-        if ( hasForbiddenProperties( index ) )\n-        {\n-            cursor.close();\n-            return;\n-        }\n-\n-        DefaultNodeValueIndexCursor cursorImpl = (DefaultNodeValueIndexCursor) cursor;\n-        IndexReader reader = indexReader( index, false );\n-        cursorImpl.setRead( this );\n-        IndexProgressor.NodeValueClient target = withFullValuePrecision( cursorImpl, query, reader );\n-        reader.query( target, indexOrder, query );\n-    }\n-\n-    @Override\n-    public void nodeIndexDistinctValues( IndexReference index, NodeValueIndexCursor cursor ) throws IndexNotFoundKernelException\n-    {\n-        ktx.assertOpen();\n-        DefaultNodeValueIndexCursor cursorImpl = (DefaultNodeValueIndexCursor) cursor;\n-        IndexReader reader = indexReader( index, true );\n-        cursorImpl.setRead( this );\n-        try ( CursorPropertyAccessor accessor = new CursorPropertyAccessor( cursors.allocateNodeCursor(), cursors.allocatePropertyCursor(), this ) )\n-        {\n-            reader.distinctValues( cursorImpl, accessor );\n-        }\n-    }\n-\n-    private IndexProgressor.NodeValueClient withFullValuePrecision( DefaultNodeValueIndexCursor cursor,\n-            IndexQuery[] query, IndexReader reader )\n-    {\n-        IndexProgressor.NodeValueClient target = cursor;\n-        if ( !reader.hasFullValuePrecision( query ) )\n-        {\n-            IndexQuery[] filters = new IndexQuery[query.length];\n-            int j = 0;\n-            for ( IndexQuery q : query )\n-            {\n-                switch ( q.type() )\n-                {\n-                case range:\n-                    ValueGroup valueGroup = q.valueGroup();\n-                    if ( ( valueGroup == NUMBER || valueGroup == GEOMETRY) && !reader.hasFullValuePrecision( q ) )\n-                    {\n-                        filters[j++] = q;\n-                    }\n-                    break;\n-                case exact:\n-                    Value value = ((IndexQuery.ExactPredicate) q).value();\n-                    if ( value.valueGroup() == ValueGroup.NUMBER || Values.isArrayValue( value ) || value.valueGroup() == ValueGroup.GEOMETRY )\n-                    {\n-                        if ( !reader.hasFullValuePrecision( q ) )\n-                        {\n-                            filters[j++] = q;\n-                        }\n-                    }\n-                    break;\n-                default:\n-                    break;\n-                }\n-            }\n-            if ( j > 0 )\n-            {\n-                filters = Arrays.copyOf( filters, j );\n-                target = new NodeValueClientFilter( target, cursors.allocateNodeCursor(),\n-                        cursors.allocatePropertyCursor(), this, filters );\n-            }\n-        }\n-        return target;\n-    }\n-\n-    @Override\n-    public final long lockingNodeUniqueIndexSeek(\n-            IndexReference index,\n-            IndexQuery.ExactPredicate... predicates )\n-            throws IndexNotApplicableKernelException, IndexNotFoundKernelException, IndexBrokenKernelException\n-    {\n-        assertIndexOnline( index );\n-        assertPredicatesMatchSchema( index, predicates );\n-        int labelId = index.label();\n-\n-        Locks.Client locks = ktx.statementLocks().optimistic();\n-        LockTracer lockTracer = ktx.lockTracer();\n-        long indexEntryId = indexEntryResourceId( labelId, predicates );\n-\n-        //First try to find node under a shared lock\n-        //if not found upgrade to exclusive and try again\n-        locks.acquireShared( lockTracer, INDEX_ENTRY, indexEntryId );\n-        try ( DefaultNodeValueIndexCursor cursor = cursors.allocateNodeValueIndexCursor();\n-              IndexReaders readers = new IndexReaders( index, this ) )\n+  private final DefaultCursors cursors;\n+  final KernelTransactionImplementation ktx;\n+\n+  Read(DefaultCursors cursors, KernelTransactionImplementation ktx)\n+  {\n+    this.cursors = cursors;\n+    this.ktx = ktx;\n+  }\n+\n+  @Override\n+  public final void nodeIndexSeek(\n+      IndexReference index,\n+      NodeValueIndexCursor cursor,\n+      IndexOrder indexOrder,\n+      IndexQuery... query) throws IndexNotApplicableKernelException, IndexNotFoundKernelException\n+  {\n+    ktx.assertOpen();\n+    if (hasForbiddenProperties(index))\n+    {\n+      cursor.close();\n+      return;\n+    }\n+\n+    DefaultNodeValueIndexCursor cursorImpl = (DefaultNodeValueIndexCursor) cursor;\n+    IndexReader reader = indexReader(index, false);\n+    cursorImpl.setRead(this);\n+    IndexProgressor.NodeValueClient target = withFullValuePrecision(cursorImpl, query, reader);\n+    reader.query(target, indexOrder, query);\n+  }\n+\n+  @Override\n+  public void nodeIndexDistinctValues(IndexReference index, NodeValueIndexCursor cursor) throws IndexNotFoundKernelException\n+  {\n+    ktx.assertOpen();\n+    DefaultNodeValueIndexCursor cursorImpl = (DefaultNodeValueIndexCursor) cursor;\n+    IndexReader reader = indexReader(index, true);\n+    cursorImpl.setRead(this);\n+    try (CursorPropertyAccessor accessor = new CursorPropertyAccessor(cursors.allocateNodeCursor(), cursors.allocatePropertyCursor(), this))\n+    {\n+      reader.distinctValues(cursorImpl, accessor);\n+    }\n+  }\n+\n+  private IndexProgressor.NodeValueClient withFullValuePrecision(DefaultNodeValueIndexCursor cursor,\n+                                                                 IndexQuery[] query, IndexReader reader)\n+  {\n+    IndexProgressor.NodeValueClient target = cursor;\n+    if (!reader.hasFullValuePrecision(query))\n+    {\n+      IndexQuery[] filters = new IndexQuery[query.length];\n+      int j = 0;\n+      for (IndexQuery q : query)\n+      {\n+        switch (q.type())\n         {\n-            nodeIndexSeekWithFreshIndexReader( cursor, readers.createReader(), predicates );\n-            if ( !cursor.next() )\n+          case range:\n+            ValueGroup valueGroup = q.valueGroup();\n+            if ((valueGroup == NUMBER || valueGroup == GEOMETRY) && !reader.hasFullValuePrecision(q))\n             {\n-                locks.releaseShared( INDEX_ENTRY, indexEntryId );\n-                locks.acquireExclusive( lockTracer, INDEX_ENTRY, indexEntryId );\n-                nodeIndexSeekWithFreshIndexReader( cursor, readers.createReader(), predicates );\n-                if ( cursor.next() ) // we found it under the exclusive lock\n-                {\n-                    // downgrade to a shared lock\n-                    locks.acquireShared( lockTracer, INDEX_ENTRY, indexEntryId );\n-                    locks.releaseExclusive( INDEX_ENTRY, indexEntryId );\n-                }\n+              filters[j++] = q;\n             }\n-\n-            return cursor.nodeReference();\n-        }\n-    }\n-\n-    void nodeIndexSeekWithFreshIndexReader(\n-            DefaultNodeValueIndexCursor cursor,\n-            IndexReader indexReader,\n-            IndexQuery.ExactPredicate... query ) throws IndexNotApplicableKernelException\n-    {\n-        cursor.setRead( this );\n-        IndexProgressor.NodeValueClient target = withFullValuePrecision( cursor, query, indexReader );\n-        indexReader.query( target, IndexOrder.NONE, query );\n-    }\n-\n-    @Override\n-    public final void nodeIndexScan(\n-            IndexReference index,\n-            NodeValueIndexCursor cursor,\n-            IndexOrder indexOrder ) throws KernelException\n-    {\n-        ktx.assertOpen();\n-        if ( hasForbiddenProperties( index ) )\n-        {\n-            cursor.close();\n-            return;\n-        }\n-\n-        // for a scan, we simply query for existence of the first property, which covers all entries in an index\n-        int firstProperty = index.properties()[0];\n-        ((DefaultNodeValueIndexCursor) cursor).setRead( this );\n-        indexReader( index, false ).query( (DefaultNodeValueIndexCursor) cursor, indexOrder, IndexQuery.exists( firstProperty ) );\n-    }\n-\n-    private boolean hasForbiddenProperties( IndexReference index )\n-    {\n-        AccessMode mode = ktx.securityContext().mode();\n-        for ( int prop : index.properties() )\n-        {\n-            if ( !mode.allowsPropertyReads( prop ) )\n+            break;\n+          case exact:\n+            Value value = ((IndexQuery.ExactPredicate) q).value();\n+            if (value.valueGroup() == ValueGroup.NUMBER || Values.isArrayValue(value) || value.valueGroup() == ValueGroup.GEOMETRY)\n             {\n-                return true;\n+              if (!reader.hasFullValuePrecision(q))\n+              {\n+                filters[j++] = q;\n+              }\n             }\n-        }\n-        return false;\n-    }\n-\n-    @Override\n-    public final void nodeLabelScan( int label, NodeLabelIndexCursor cursor )\n-    {\n-        ktx.assertOpen();\n-\n-        DefaultNodeLabelIndexCursor indexCursor = (DefaultNodeLabelIndexCursor) cursor;\n-        indexCursor.setRead( this );\n-        labelScanReader().nodesWithLabel( indexCursor, label);\n-    }\n-\n-    @Override\n-    public void nodeLabelUnionScan( NodeLabelIndexCursor cursor, int... labels )\n-    {\n-        ktx.assertOpen();\n-\n-        DefaultNodeLabelIndexCursor client = (DefaultNodeLabelIndexCursor) cursor;\n-        client.setRead( this );\n-        client.unionScan( new NodeLabelIndexProgressor( labelScanReader().nodesWithAnyOfLabels( labels ), client ),\n-                false, labels );\n-    }\n-\n-    @Override\n-    public void nodeLabelIntersectionScan( NodeLabelIndexCursor cursor, int... labels )\n-    {\n-        ktx.assertOpen();\n-\n-        DefaultNodeLabelIndexCursor client = (DefaultNodeLabelIndexCursor) cursor;\n-        client.setRead( this );\n-        client.intersectionScan(\n-                new NodeLabelIndexProgressor( labelScanReader().nodesWithAllLabels( labels ), client ),\n-                false, labels );\n-    }\n-\n-    @Override\n-    public final Scan<NodeLabelIndexCursor> nodeLabelScan( int label )\n-    {\n-        ktx.assertOpen();\n-        throw new UnsupportedOperationException( \"not implemented\" );\n-    }\n-\n-    @Override\n-    public final void allNodesScan( NodeCursor cursor )\n-    {\n-        ktx.assertOpen();\n-        ((DefaultNodeCursor) cursor).scan( this );\n-    }\n-\n-    @Override\n-    public final Scan<NodeCursor> allNodesScan()\n-    {\n-        ktx.assertOpen();\n-        throw new UnsupportedOperationException( \"not implemented\" );\n-    }\n-\n-    @Override\n-    public final void singleNode( long reference, NodeCursor cursor )\n-    {\n-        ktx.assertOpen();\n-        ((DefaultNodeCursor) cursor).single( reference, this );\n-    }\n-\n-    @Override\n-    public final void singleRelationship( long reference, RelationshipScanCursor cursor )\n-    {\n-        ktx.assertOpen();\n-        ((DefaultRelationshipScanCursor) cursor).single( reference, this );\n-    }\n-\n-    @Override\n-    public final void allRelationshipsScan( RelationshipScanCursor cursor )\n-    {\n-        ktx.assertOpen();\n-        ((DefaultRelationshipScanCursor) cursor).scan( -1/*include all labels*/, this );\n-    }\n-\n-    @Override\n-    public final Scan<RelationshipScanCursor> allRelationshipsScan()\n-    {\n-        ktx.assertOpen();\n-        throw new UnsupportedOperationException( \"not implemented\" );\n-    }\n-\n-    @Override\n-    public final void relationshipTypeScan( int type, RelationshipScanCursor cursor )\n-    {\n-        ktx.assertOpen();\n-        ((DefaultRelationshipScanCursor) cursor).scan( type, this );\n-    }\n-\n-    @Override\n-    public final Scan<RelationshipScanCursor> relationshipTypeScan( int type )\n-    {\n-        ktx.assertOpen();\n-        throw new UnsupportedOperationException( \"not implemented\" );\n-    }\n-\n-    @Override\n-    public final void relationshipGroups(\n-            long nodeReference, long reference, RelationshipGroupCursor cursor )\n-    {\n-        ktx.assertOpen();\n-        // the relationships for this node are not grouped in the store\n-        if ( reference != NO_ID && isRelationship( reference ) )\n-        {\n-            ((DefaultRelationshipGroupCursor) cursor).buffer( nodeReference, clearEncoding( reference ), this );\n-        }\n-        else // this is a normal group reference.\n-        {\n-            ((DefaultRelationshipGroupCursor) cursor).direct( nodeReference, reference, this );\n-        }\n-    }\n-\n-    @Override\n-    public final void relationships(\n-            long nodeReference, long reference, RelationshipTraversalCursor cursor )\n-    {\n-        /* There are 5 different ways a relationship traversal cursor can be initialized:\n-         *\n-         * 1. From a batched group in a detached way. This happens when the user manually retrieves the relationships\n-         *    references from the group cursor and passes it to this method and if the group cursor was based on having\n-         *    batched all the different types in the single (mixed) chain of relationships.\n-         *    In this case we should pass a reference marked with some flag to the first relationship in the chain that\n-         *    has the type of the current group in the group cursor. The traversal cursor then needs to read the type\n-         *    from that first record and use that type as a filter for when reading the rest of the chain.\n-         *    - NOTE: we probably have to do the same sort of filtering for direction - so we need a flag for that too.\n-         *\n-         * 2. From a batched group in a DIRECT way. This happens when the traversal cursor is initialized directly from\n-         *    the group cursor, in this case we can simply initialize the traversal cursor with the buffered state from\n-         *    the group cursor, so this method here does not have to be involved, and things become pretty simple.\n-         *\n-         * 3. Traversing all relationships - regardless of type - of a node that has grouped relationships. In this case\n-         *    the traversal cursor needs to traverse through the group records in order to get to the actual\n-         *    relationships. The initialization of the cursor (through this here method) should be with a FLAGGED\n-         *    reference to the (first) group record.\n-         *\n-         * 4. Traversing a single chain - this is what happens in the cases when\n-         *    a) Traversing all relationships of a node without grouped relationships.\n-         *    b) Traversing the relationships of a particular group of a node with grouped relationships.\n-         *\n-         * 5. There are no relationships - i.e. passing in NO_ID to this method.\n-         *\n-         * This means that we need reference encodings (flags) for cases: 1, 3, 4, 5\n-         */\n-        ktx.assertOpen();\n-\n-        int relationshipType;\n-        RelationshipReferenceEncoding encoding = RelationshipReferenceEncoding.parseEncoding( reference );\n-        DefaultRelationshipTraversalCursor internalCursor = (DefaultRelationshipTraversalCursor)cursor;\n-\n-        switch ( encoding )\n-        {\n-        case NONE: // this is a normal relationship reference\n-            internalCursor.chain( nodeReference, reference, this );\n-            break;\n-\n-        case FILTER: // this relationship chain needs to be filtered\n-            internalCursor.filtered( nodeReference, clearEncoding( reference ), this, true );\n             break;\n-\n-        case FILTER_TX_STATE: // tx-state changes should be filtered by the head of this chain\n-            internalCursor.filtered( nodeReference, clearEncoding( reference ), this, false );\n+          default:\n             break;\n-\n-        case GROUP: // this reference is actually to a group record\n-            internalCursor.groups( nodeReference, clearEncoding( reference ), this );\n-            break;\n-\n-        case NO_OUTGOING_OF_TYPE: // nothing in store, but proceed to check tx-state changes\n-            relationshipType = (int) clearEncoding( reference );\n-            internalCursor.filteredTxState( nodeReference, this, relationshipType, OUTGOING );\n-            break;\n-\n-        case NO_INCOMING_OF_TYPE: // nothing in store, but proceed to check tx-state changes\n-            relationshipType = (int) clearEncoding( reference );\n-            internalCursor.filteredTxState( nodeReference, this, relationshipType, INCOMING );\n-            break;\n-\n-        case NO_LOOP_OF_TYPE: // nothing in store, but proceed to check tx-state changes\n-            relationshipType = (int) clearEncoding( reference );\n-            internalCursor.filteredTxState( nodeReference, this, relationshipType, LOOP );\n-            break;\n-\n-        default:\n-            throw new IllegalStateException( \"Unknown encoding \" + encoding );\n-        }\n-    }\n-\n-    @Override\n-    public final void nodeProperties( long nodeReference, long reference, PropertyCursor cursor )\n-    {\n-        ktx.assertOpen();\n-        ((DefaultPropertyCursor) cursor).initNode( nodeReference, reference, this, ktx );\n-    }\n-\n-    @Override\n-    public final void relationshipProperties( long relationshipReference, long reference,\n-            PropertyCursor cursor )\n-    {\n-        ktx.assertOpen();\n-        ((DefaultPropertyCursor) cursor).initRelationship( relationshipReference, reference, this, ktx );\n-    }\n-\n-    @Override\n-    public final void graphProperties( PropertyCursor cursor )\n-    {\n-        ktx.assertOpen();\n-        ((DefaultPropertyCursor) cursor).initGraph( graphPropertiesReference(), this, ktx );\n-    }\n-\n-    abstract long graphPropertiesReference();\n-\n-    @Override\n-    public final void nodeExplicitIndexLookup(\n-            NodeExplicitIndexCursor cursor, String index, String key, Object value )\n-            throws ExplicitIndexNotFoundKernelException\n-    {\n-        ktx.assertOpen();\n-        ((DefaultNodeExplicitIndexCursor) cursor).setRead( this );\n-        explicitIndex( (DefaultNodeExplicitIndexCursor) cursor,\n-                explicitNodeIndex( index ).get( key, value ) );\n-    }\n-\n-    @Override\n-    public final void nodeExplicitIndexQuery(\n-            NodeExplicitIndexCursor cursor, String index, Object query )\n-            throws ExplicitIndexNotFoundKernelException\n-    {\n-        ktx.assertOpen();\n-        ((DefaultNodeExplicitIndexCursor) cursor).setRead( this );\n-        explicitIndex( (DefaultNodeExplicitIndexCursor) cursor, explicitNodeIndex( index ).query(\n-                query instanceof Value ? ((Value) query).asObject() : query ) );\n-    }\n-\n-    @Override\n-    public final void nodeExplicitIndexQuery(\n-            NodeExplicitIndexCursor cursor, String index, String key, Object query )\n-            throws ExplicitIndexNotFoundKernelException\n-    {\n-        ktx.assertOpen();\n-        ((DefaultNodeExplicitIndexCursor) cursor).setRead( this );\n-        explicitIndex( (DefaultNodeExplicitIndexCursor) cursor, explicitNodeIndex( index ).query(\n-                key, query instanceof Value ? ((Value) query).asObject() : query ) );\n-    }\n-\n-    @Override\n-    public void relationshipExplicitIndexLookup(\n-            RelationshipExplicitIndexCursor cursor,\n-            String index,\n-            String key,\n-            Object value,\n-            long source,\n-            long target ) throws ExplicitIndexNotFoundKernelException\n-    {\n-        ktx.assertOpen();\n-        ((DefaultRelationshipExplicitIndexCursor) cursor).setRead( this );\n-        explicitIndex(\n-                (DefaultRelationshipExplicitIndexCursor) cursor,\n-                explicitRelationshipIndex( index ).get( key, value, source, target ) );\n-    }\n-\n-    @Override\n-    public void relationshipExplicitIndexQuery(\n-            RelationshipExplicitIndexCursor cursor,\n-            String index,\n-            Object query,\n-            long source,\n-            long target ) throws ExplicitIndexNotFoundKernelException\n-    {\n-        ktx.assertOpen();\n-        ((DefaultRelationshipExplicitIndexCursor) cursor).setRead( this );\n-        explicitIndex(\n-                (DefaultRelationshipExplicitIndexCursor) cursor,\n-                explicitRelationshipIndex( index )\n-                        .query( query instanceof Value ? ((Value) query).asObject() : query, source, target ) );\n-    }\n-\n-    @Override\n-    public void relationshipExplicitIndexQuery(\n-            RelationshipExplicitIndexCursor cursor,\n-            String index,\n-            String key,\n-            Object query,\n-            long source,\n-            long target ) throws ExplicitIndexNotFoundKernelException\n-    {\n-        ktx.assertOpen();\n-        ((DefaultRelationshipExplicitIndexCursor) cursor).setRead( this );\n-        explicitIndex(\n-                (DefaultRelationshipExplicitIndexCursor) cursor,\n-                explicitRelationshipIndex( index ).query(\n-                        key, query instanceof Value ? ((Value) query).asObject() : query, source, target ) );\n-    }\n-\n-    private static void explicitIndex( IndexProgressor.ExplicitClient client, ExplicitIndexHits hits )\n-    {\n-        client.initialize( new ExplicitIndexProgressor( hits, client ), hits.size() );\n-    }\n-\n-    @Override\n-    public final void futureNodeReferenceRead( long reference )\n-    {\n-        ktx.assertOpen();\n-    }\n-\n-    @Override\n-    public final void futureRelationshipsReferenceRead( long reference )\n-    {\n-        ktx.assertOpen();\n-    }\n-\n-    @Override\n-    public final void futureNodePropertyReferenceRead( long reference )\n-    {\n-        ktx.assertOpen();\n-    }\n-\n-    @Override\n-    public final void futureRelationshipPropertyReferenceRead( long reference )\n-    {\n-        ktx.assertOpen();\n-    }\n-\n-    abstract IndexReader indexReader( IndexReference index, boolean fresh ) throws IndexNotFoundKernelException;\n-\n-    abstract LabelScanReader labelScanReader();\n-\n-    abstract ExplicitIndex explicitNodeIndex( String indexName ) throws ExplicitIndexNotFoundKernelException;\n-\n-    abstract ExplicitIndex explicitRelationshipIndex( String indexName ) throws ExplicitIndexNotFoundKernelException;\n-\n-    @Override\n-    public abstract CapableIndexReference index( int label, int... properties );\n-\n-    abstract PageCursor nodePage( long reference );\n-\n-    abstract PageCursor relationshipPage( long reference );\n-\n-    abstract PageCursor groupPage( long reference );\n-\n-    abstract PageCursor propertyPage( long reference );\n-\n-    abstract PageCursor stringPage( long reference );\n-\n-    abstract PageCursor arrayPage( long reference );\n-\n-    abstract RecordCursor<DynamicRecord> labelCursor();\n-\n-    abstract void node( NodeRecord record, long reference, PageCursor pageCursor );\n-\n-    abstract void relationship( RelationshipRecord record, long reference, PageCursor pageCursor );\n-\n-    abstract void relationshipFull( RelationshipRecord record, long reference, PageCursor pageCursor );\n-\n-    abstract void property( PropertyRecord record, long reference, PageCursor pageCursor );\n-\n-    abstract void group( RelationshipGroupRecord record, long reference, PageCursor page );\n-\n-    abstract long nodeHighMark();\n-\n-    abstract long relationshipHighMark();\n-\n-    abstract TextValue string( DefaultPropertyCursor cursor, long reference, PageCursor page );\n-\n-    abstract ArrayValue array( DefaultPropertyCursor cursor, long reference, PageCursor page );\n-\n-    @Override\n-    public TransactionState txState()\n-    {\n-        return ktx.txState();\n-    }\n-\n-    @Override\n-    public ExplicitIndexTransactionState explicitIndexTxState()\n-    {\n-        return ktx.explicitIndexTxState();\n-    }\n-\n-    @Override\n-    public boolean hasTxStateWithChanges()\n-    {\n-        return ktx.hasTxStateWithChanges();\n-    }\n-\n-    @Override\n-    public void acquireExclusiveNodeLock( long... ids )\n-    {\n-        acquireExclusiveLock( ResourceTypes.NODE, ids );\n-        ktx.assertOpen();\n-    }\n-\n-    @Override\n-    public void acquireExclusiveRelationshipLock( long... ids )\n-    {\n-        acquireExclusiveLock( ResourceTypes.RELATIONSHIP, ids );\n-        ktx.assertOpen();\n-    }\n-\n-    @Override\n-    public void acquireExclusiveExplicitIndexLock( long... ids )\n-    {\n-        acquireExclusiveLock( ResourceTypes.EXPLICIT_INDEX, ids );\n-        ktx.assertOpen();\n-    }\n-\n-    @Override\n-    public void acquireExclusiveLabelLock( long... ids )\n-    {\n-        acquireExclusiveLock( ResourceTypes.LABEL, ids );\n-        ktx.assertOpen();\n-    }\n-\n-    @Override\n-    public void releaseExclusiveNodeLock( long... ids )\n-    {\n-        releaseExclusiveLock( ResourceTypes.NODE, ids );\n-        ktx.assertOpen();\n-    }\n-\n-    @Override\n-    public void releaseExclusiveRelationshipLock( long... ids )\n-    {\n-        releaseExclusiveLock( ResourceTypes.RELATIONSHIP, ids );\n-        ktx.assertOpen();\n-    }\n-\n-    @Override\n-    public void releaseExclusiveExplicitIndexLock( long... ids )\n-    {\n-        releaseExclusiveLock( ResourceTypes.EXPLICIT_INDEX, ids );\n-        ktx.assertOpen();\n-    }\n-\n-    @Override\n-    public void releaseExclusiveLabelLock( long... ids )\n-    {\n-        releaseExclusiveLock( ResourceTypes.LABEL, ids );\n-        ktx.assertOpen();\n-    }\n-\n-    @Override\n-    public void acquireSharedNodeLock( long... ids )\n-    {\n-        acquireSharedLock( ResourceTypes.NODE, ids );\n-        ktx.assertOpen();\n-    }\n-\n-    @Override\n-    public void acquireSharedRelationshipLock( long... ids )\n-    {\n-        acquireSharedLock( ResourceTypes.RELATIONSHIP, ids );\n-        ktx.assertOpen();\n-    }\n-\n-    @Override\n-    public void acquireSharedExplicitIndexLock( long... ids )\n-    {\n-        acquireSharedLock( ResourceTypes.EXPLICIT_INDEX, ids );\n-        ktx.assertOpen();\n-    }\n-\n-    @Override\n-    public void acquireSharedLabelLock( long... ids )\n-    {\n-        acquireSharedLock( ResourceTypes.LABEL, ids );\n-        ktx.assertOpen();\n-    }\n-\n-    @Override\n-    public void releaseSharedNodeLock( long... ids )\n-    {\n-        releaseSharedLock( ResourceTypes.NODE, ids );\n-        ktx.assertOpen();\n-    }\n-\n-    @Override\n-    public void releaseSharedRelationshipLock( long... ids )\n-    {\n-        releaseSharedLock( ResourceTypes.RELATIONSHIP, ids );\n-        ktx.assertOpen();\n-    }\n-\n-    @Override\n-    public void releaseSharedExplicitIndexLock( long... ids )\n-    {\n-        releaseSharedLock( ResourceTypes.EXPLICIT_INDEX, ids );\n-        ktx.assertOpen();\n-    }\n-\n-    @Override\n-    public void releaseSharedLabelLock( long... ids )\n-    {\n-        releaseSharedLock( ResourceTypes.LABEL, ids );\n-        ktx.assertOpen();\n-    }\n-\n-    void sharedOptimisticLock( ResourceType resource, long resourceId )\n-    {\n-        ktx.statementLocks().optimistic().acquireShared( ktx.lockTracer(), resource, resourceId );\n-    }\n-\n-    private void acquireExclusiveLock( ResourceTypes types, long... ids )\n-    {\n-        ktx.statementLocks().pessimistic().acquireExclusive( ktx.lockTracer(), types, ids );\n-    }\n-\n-    private void releaseExclusiveLock( ResourceTypes types, long... ids )\n-    {\n-        ktx.statementLocks().pessimistic().releaseExclusive( types, ids );\n-    }\n-\n-    private void acquireSharedLock( ResourceTypes types, long... ids )\n-    {\n-        ktx.statementLocks().pessimistic().acquireShared( ktx.lockTracer(), types, ids );\n-    }\n-\n-    private void releaseSharedLock( ResourceTypes types, long... ids )\n-    {\n-        ktx.statementLocks().pessimistic().releaseShared( types, ids );\n-    }\n-\n-    private void assertIndexOnline( IndexReference index )\n-            throws IndexNotFoundKernelException, IndexBrokenKernelException\n-    {\n-        switch ( indexGetState( index ) )\n-        {\n-        case ONLINE:\n-            return;\n-        default:\n-            throw new IndexBrokenKernelException( indexGetFailure( index ) );\n         }\n-    }\n-\n-    private void assertPredicatesMatchSchema( IndexReference index, IndexQuery.ExactPredicate[] predicates )\n-            throws IndexNotApplicableKernelException\n-    {\n-        int[] propertyIds = index.properties();\n-        if ( propertyIds.length != predicates.length )\n+      }\n+      if (j > 0)\n+      {\n+        filters = Arrays.copyOf(filters, j);\n+        target = new NodeValueClientFilter(target, cursors.allocateNodeCursor(),\n+            cursors.allocatePropertyCursor(), this, filters);\n+      }\n+    }\n+    return target;\n+  }\n+\n+  @Override\n+  public final long lockingNodeUniqueIndexSeek(\n+      IndexReference index,\n+      IndexQuery.ExactPredicate... predicates)\n+      throws IndexNotApplicableKernelException, IndexNotFoundKernelException, IndexBrokenKernelException\n+  {\n+    assertIndexOnline(index);\n+    assertPredicatesMatchSchema(index, predicates);\n+    int labelId = index.label();\n+\n+    Locks.Client locks = ktx.statementLocks().optimistic();\n+    LockTracer lockTracer = ktx.lockTracer();\n+    long indexEntryId = indexEntryResourceId(labelId, predicates);\n+\n+    //First try to find node under a shared lock\n+    //if not found upgrade to exclusive and try again\n+    locks.acquireShared(lockTracer, INDEX_ENTRY, indexEntryId);\n+    try (DefaultNodeValueIndexCursor cursor = cursors.allocateNodeValueIndexCursor();\n+         IndexReaders readers = new IndexReaders(index, this))\n+    {\n+      nodeIndexSeekWithFreshIndexReader(cursor, readers.createReader(), predicates);\n+      if (!cursor.next())\n+      {\n+        locks.releaseShared(INDEX_ENTRY, indexEntryId);\n+        locks.acquireExclusive(lockTracer, INDEX_ENTRY, indexEntryId);\n+        nodeIndexSeekWithFreshIndexReader(cursor, readers.createReader(), predicates);\n+        if (cursor.next()) // we found it under the exclusive lock\n         {\n-            throw new IndexNotApplicableKernelException(\n-                    format( \"The index specifies %d properties, but only %d lookup predicates were given.\",\n-                            propertyIds.length, predicates.length ) );\n+          // downgrade to a shared lock\n+          locks.acquireShared(lockTracer, INDEX_ENTRY, indexEntryId);\n+          locks.releaseExclusive(INDEX_ENTRY, indexEntryId);\n         }\n-        for ( int i = 0; i < predicates.length; i++ )\n-        {\n-            if ( predicates[i].propertyKeyId() != propertyIds[i] )\n-            {\n-                throw new IndexNotApplicableKernelException(\n-                        format( \"The index has the property id %d in position %d, but the lookup property id was %d.\",\n-                                propertyIds[i], i, predicates[i].propertyKeyId() ) );\n-            }\n-        }\n-    }\n+      }\n+\n+      return cursor.nodeReference();\n+    }\n+  }\n+\n+  void nodeIndexSeekWithFreshIndexReader(\n+      DefaultNodeValueIndexCursor cursor,\n+      IndexReader indexReader,\n+      IndexQuery.ExactPredicate... query) throws IndexNotApplicableKernelException\n+  {\n+    cursor.setRead(this);\n+    IndexProgressor.NodeValueClient target = withFullValuePrecision(cursor, query, indexReader);\n+    indexReader.query(target, IndexOrder.NONE, query);\n+  }\n+\n+  @Override\n+  public final void nodeIndexScan(\n+      IndexReference index,\n+      NodeValueIndexCursor cursor,\n+      IndexOrder indexOrder) throws KernelException\n+  {\n+    ktx.assertOpen();\n+    if (hasForbiddenProperties(index))\n+    {\n+      cursor.close();\n+      return;\n+    }\n+\n+    // for a scan, we simply query for existence of the first property, which covers all entries in an index\n+    int firstProperty = index.properties()[0];\n+    ((DefaultNodeValueIndexCursor) cursor).setRead(this);\n+    indexReader(index, false).query((DefaultNodeValueIndexCursor) cursor, indexOrder, IndexQuery.exists(firstProperty));\n+  }\n+\n+  private boolean hasForbiddenProperties(IndexReference index)\n+  {\n+    AccessMode mode = ktx.securityContext().mode();\n+    for (int prop : index.properties())\n+    {\n+      if (!mode.allowsPropertyReads(prop))\n+      {\n+        return true;\n+      }\n+    }\n+    return false;\n+  }\n+\n+  @Override\n+  public final void nodeLabelScan(int label, NodeLabelIndexCursor cursor)\n+  {\n+    ktx.assertOpen();\n+\n+    DefaultNodeLabelIndexCursor indexCursor = (DefaultNodeLabelIndexCursor) cursor;\n+    indexCursor.setRead(this);\n+    labelScanReader().nodesWithLabel(indexCursor, label);\n+  }\n+\n+  @Override\n+  public void nodeLabelUnionScan(NodeLabelIndexCursor cursor, int... labels)\n+  {\n+    ktx.assertOpen();\n+\n+    DefaultNodeLabelIndexCursor client = (DefaultNodeLabelIndexCursor) cursor;\n+    client.setRead(this);\n+    client.unionScan(new NodeLabelIndexProgressor(labelScanReader().nodesWithAnyOfLabels(labels), client),\n+        false, labels);\n+  }\n+\n+  @Override\n+  public void nodeLabelIntersectionScan(NodeLabelIndexCursor cursor, int... labels)\n+  {\n+    ktx.assertOpen();\n+\n+    DefaultNodeLabelIndexCursor client = (DefaultNodeLabelIndexCursor) cursor;\n+    client.setRead(this);\n+    client.intersectionScan(\n+        new NodeLabelIndexProgressor(labelScanReader().nodesWithAllLabels(labels), client),\n+        false, labels);\n+  }\n+\n+  @Override\n+  public final Scan<NodeLabelIndexCursor> nodeLabelScan(int label)\n+  {\n+    ktx.assertOpen();\n+    throw new UnsupportedOperationException(\"not implemented\");\n+  }\n+\n+  @Override\n+  public final void allNodesScan(NodeCursor cursor)\n+  {\n+    ktx.assertOpen();\n+    ((DefaultNodeCursor) cursor).scan(this);\n+  }\n+\n+  @Override\n+  public final Scan<NodeCursor> allNodesScan()\n+  {\n+    ktx.assertOpen();\n+    throw new UnsupportedOperationException(\"not implemented\");\n+  }\n+\n+  @Override\n+  public final void singleNode(long reference, NodeCursor cursor)\n+  {\n+    ktx.assertOpen();\n+    ((DefaultNodeCursor) cursor).single(reference, this);\n+  }\n+\n+  @Override\n+  public final void singleRelationship(long reference, RelationshipScanCursor cursor)\n+  {\n+    ktx.assertOpen();\n+    ((DefaultRelationshipScanCursor) cursor).single(reference, this);\n+  }\n+\n+  @Override\n+  public final void allRelationshipsScan(RelationshipScanCursor cursor)\n+  {\n+    ktx.assertOpen();\n+    ((DefaultRelationshipScanCursor) cursor).scan(-1/*include all labels*/, this);\n+  }\n+\n+  @Override\n+  public final Scan<RelationshipScanCursor> allRelationshipsScan()\n+  {\n+    ktx.assertOpen();\n+    throw new UnsupportedOperationException(\"not implemented\");\n+  }\n+\n+  @Override\n+  public final void relationshipTypeScan(int type, RelationshipScanCursor cursor)\n+  {\n+    ktx.assertOpen();\n+    ((DefaultRelationshipScanCursor) cursor).scan(type, this);\n+  }\n+\n+  @Override\n+  public final Scan<RelationshipScanCursor> relationshipTypeScan(int type)\n+  {\n+    ktx.assertOpen();\n+    throw new UnsupportedOperationException(\"not implemented\");\n+  }\n+\n+  @Override\n+  public final void relationshipGroups(\n+      long nodeReference, long reference, RelationshipGroupCursor cursor)\n+  {\n+    ktx.assertOpen();\n+    // the relationships for this node are not grouped in the store\n+    if (reference != NO_ID && isRelationship(reference))\n+    {\n+      ((DefaultRelationshipGroupCursor) cursor).buffer(nodeReference, clearEncoding(reference), this);\n+    } else // this is a normal group reference.\n+    {\n+      ((DefaultRelationshipGroupCursor) cursor).direct(nodeReference, reference, this);\n+    }\n+  }\n+\n+  @Override\n+  public final void relationships(\n+      long nodeReference, long reference, RelationshipTraversalCursor cursor)\n+  {\n+    /* There are 5 different ways a relationship traversal cursor can be initialized:\n+     *\n+     * 1. From a batched group in a detached way. This happens when the user manually retrieves the relationships\n+     *    references from the group cursor and passes it to this method and if the group cursor was based on having\n+     *    batched all the different types in the single (mixed) chain of relationships.\n+     *    In this case we should pass a reference marked with some flag to the first relationship in the chain that\n+     *    has the type of the current group in the group cursor. The traversal cursor then needs to read the type\n+     *    from that first record and use that type as a filter for when reading the rest of the chain.\n+     *    - NOTE: we probably have to do the same sort of filtering for direction - so we need a flag for that too.\n+     *\n+     * 2. From a batched group in a DIRECT way. This happens when the traversal cursor is initialized directly from\n+     *    the group cursor, in this case we can simply initialize the traversal cursor with the buffered state from\n+     *    the group cursor, so this method here does not have to be involved, and things become pretty simple.\n+     *\n+     * 3. Traversing all relationships - regardless of type - of a node that has grouped relationships. In this case\n+     *    the traversal cursor needs to traverse through the group records in order to get to the actual\n+     *    relationships. The initialization of the cursor (through this here method) should be with a FLAGGED\n+     *    reference to the (first) group record.\n+     *\n+     * 4. Traversing a single chain - this is what happens in the cases when\n+     *    a) Traversing all relationships of a node without grouped relationships.\n+     *    b) Traversing the relationships of a particular group of a node with grouped relationships.\n+     *\n+     * 5. There are no relationships - i.e. passing in NO_ID to this method.\n+     *\n+     * This means that we need reference encodings (flags) for cases: 1, 3, 4, 5\n+     */\n+    ktx.assertOpen();\n+\n+    int relationshipType;\n+    RelationshipReferenceEncoding encoding = RelationshipReferenceEncoding.parseEncoding(reference);\n+    DefaultRelationshipTraversalCursor internalCursor = (DefaultRelationshipTraversalCursor) cursor;\n+\n+    switch (encoding)\n+    {\n+      case NONE: // this is a normal relationship reference\n+        internalCursor.chain(nodeReference, reference, this);\n+        break;\n+\n+      case FILTER: // this relationship chain needs to be filtered\n+        internalCursor.filtered(nodeReference, clearEncoding(reference), this, true);\n+        break;\n+\n+      case FILTER_TX_STATE: // tx-state changes should be filtered by the head of this chain\n+        internalCursor.filtered(nodeReference, clearEncoding(reference), this, false);\n+        break;\n+\n+      case GROUP: // this reference is actually to a group record\n+        internalCursor.groups(nodeReference, clearEncoding(reference), this);\n+        break;\n+\n+      case NO_OUTGOING_OF_TYPE: // nothing in store, but proceed to check tx-state changes\n+        relationshipType = (int) clearEncoding(reference);\n+        internalCursor.filteredTxState(nodeReference, this, relationshipType, OUTGOING);\n+        break;\n+\n+      case NO_INCOMING_OF_TYPE: // nothing in store, but proceed to check tx-state changes\n+        relationshipType = (int) clearEncoding(reference);\n+        internalCursor.filteredTxState(nodeReference, this, relationshipType, INCOMING);\n+        break;\n+\n+      case NO_LOOP_OF_TYPE: // nothing in store, but proceed to check tx-state changes\n+        relationshipType = (int) clearEncoding(reference);\n+        internalCursor.filteredTxState(nodeReference, this, relationshipType, LOOP);\n+        break;\n+\n+      default:\n+        throw new IllegalStateException(\"Unknown encoding \" + encoding);\n+    }\n+  }\n+\n+  @Override\n+  public final void nodeProperties(long nodeReference, long reference, PropertyCursor cursor)\n+  {\n+    ktx.assertOpen();\n+    ((DefaultPropertyCursor) cursor).initNode(nodeReference, reference, this, ktx);\n+  }\n+\n+  @Override\n+  public final void relationshipProperties(long relationshipReference, long reference,\n+                                           PropertyCursor cursor)\n+  {\n+    ktx.assertOpen();\n+    ((DefaultPropertyCursor) cursor).initRelationship(relationshipReference, reference, this, ktx);\n+  }\n+\n+  @Override\n+  public final void graphProperties(PropertyCursor cursor)\n+  {\n+    ktx.assertOpen();\n+    ((DefaultPropertyCursor) cursor).initGraph(graphPropertiesReference(), this, ktx);\n+  }\n+\n+  abstract long graphPropertiesReference();\n+\n+  @Override\n+  public final void nodeExplicitIndexLookup(\n+      NodeExplicitIndexCursor cursor, String index, String key, Object value)\n+      throws ExplicitIndexNotFoundKernelException\n+  {\n+    ktx.assertOpen();\n+    ((DefaultNodeExplicitIndexCursor) cursor).setRead(this);\n+    explicitIndex((DefaultNodeExplicitIndexCursor) cursor,\n+        explicitNodeIndex(index).get(key, value));\n+  }\n+\n+  @Override\n+  public final void nodeExplicitIndexQuery(\n+      NodeExplicitIndexCursor cursor, String index, Object query)\n+      throws ExplicitIndexNotFoundKernelException\n+  {\n+    ktx.assertOpen();\n+    ((DefaultNodeExplicitIndexCursor) cursor).setRead(this);\n+    explicitIndex((DefaultNodeExplicitIndexCursor) cursor, explicitNodeIndex(index).query(\n+        query instanceof Value ? ((Value) query).asObject() : query));\n+  }\n+\n+  @Override\n+  public final void nodeExplicitIndexQuery(\n+      NodeExplicitIndexCursor cursor, String index, String key, Object query)\n+      throws ExplicitIndexNotFoundKernelException\n+  {\n+    ktx.assertOpen();\n+    ((DefaultNodeExplicitIndexCursor) cursor).setRead(this);\n+    explicitIndex((DefaultNodeExplicitIndexCursor) cursor, explicitNodeIndex(index).query(\n+        key, query instanceof Value ? ((Value) query).asObject() : query));\n+  }\n+\n+  @Override\n+  public void relationshipExplicitIndexLookup(\n+      RelationshipExplicitIndexCursor cursor,\n+      String index,\n+      String key,\n+      Object value,\n+      long source,\n+      long target) throws ExplicitIndexNotFoundKernelException\n+  {\n+    ktx.assertOpen();\n+    ((DefaultRelationshipExplicitIndexCursor) cursor).setRead(this);\n+    explicitIndex(\n+        (DefaultRelationshipExplicitIndexCursor) cursor,\n+        explicitRelationshipIndex(index).get(key, value, source, target));\n+  }\n+\n+  @Override\n+  public void relationshipExplicitIndexQuery(\n+      RelationshipExplicitIndexCursor cursor,\n+      String index,\n+      Object query,\n+      long source,\n+      long target) throws ExplicitIndexNotFoundKernelException\n+  {\n+    ktx.assertOpen();\n+    ((DefaultRelationshipExplicitIndexCursor) cursor).setRead(this);\n+    explicitIndex(\n+        (DefaultRelationshipExplicitIndexCursor) cursor,\n+        explicitRelationshipIndex(index)\n+            .query(query instanceof Value ? ((Value) query).asObject() : query, source, target));\n+  }\n+\n+  @Override\n+  public void relationshipExplicitIndexQuery(\n+      RelationshipExplicitIndexCursor cursor,\n+      String index,\n+      String key,\n+      Object query,\n+      long source,\n+      long target) throws ExplicitIndexNotFoundKernelException\n+  {\n+    ktx.assertOpen();\n+    ((DefaultRelationshipExplicitIndexCursor) cursor).setRead(this);\n+    explicitIndex(\n+        (DefaultRelationshipExplicitIndexCursor) cursor,\n+        explicitRelationshipIndex(index).query(\n+            key, query instanceof Value ? ((Value) query).asObject() : query, source, target));\n+  }\n+\n+  private static void explicitIndex(IndexProgressor.ExplicitClient client, ExplicitIndexHits hits)\n+  {\n+    client.initialize(new ExplicitIndexProgressor(hits, client), hits.size());\n+  }\n+\n+  @Override\n+  public final void futureNodeReferenceRead(long reference)\n+  {\n+    ktx.assertOpen();\n+  }\n+\n+  @Override\n+  public final void futureRelationshipsReferenceRead(long reference)\n+  {\n+    ktx.assertOpen();\n+  }\n+\n+  @Override\n+  public final void futureNodePropertyReferenceRead(long reference)\n+  {\n+    ktx.assertOpen();\n+  }\n+\n+  @Override\n+  public final void futureRelationshipPropertyReferenceRead(long reference)\n+  {\n+    ktx.assertOpen();\n+  }\n+\n+  abstract IndexReader indexReader(IndexReference index, boolean fresh) throws IndexNotFoundKernelException;\n+\n+  abstract LabelScanReader labelScanReader();\n+\n+  abstract ExplicitIndex explicitNodeIndex(String indexName) throws ExplicitIndexNotFoundKernelException;\n+\n+  abstract ExplicitIndex explicitRelationshipIndex(String indexName) throws ExplicitIndexNotFoundKernelException;\n+\n+  @Override\n+  public abstract CapableIndexReference index(int label, int... properties);\n+\n+  abstract PageCursor nodePage(long reference);\n+\n+  abstract PageCursor relationshipPage(long reference);\n+\n+  abstract PageCursor groupPage(long reference);\n+\n+  abstract PageCursor propertyPage(long reference);\n+\n+  abstract PageCursor stringPage(long reference);\n+\n+  abstract PageCursor arrayPage(long reference);\n+\n+  abstract RecordCursor<DynamicRecord> labelCursor();\n+\n+  abstract void node(NodeRecord record, long reference, PageCursor pageCursor);\n+\n+  abstract void relationship(RelationshipRecord record, long reference, PageCursor pageCursor);\n+\n+  abstract void relationshipFull(RelationshipRecord record, long reference, PageCursor pageCursor);\n+\n+  abstract void property(PropertyRecord record, long reference, PageCursor pageCursor);\n+\n+  abstract void group(RelationshipGroupRecord record, long reference, PageCursor page);\n+\n+  abstract long nodeHighMark();\n+\n+  abstract long relationshipHighMark();\n+\n+  abstract TextValue string(DefaultPropertyCursor cursor, long reference, PageCursor page);\n+\n+  abstract ArrayValue array(DefaultPropertyCursor cursor, long reference, PageCursor page);\n+\n+  @Override\n+  public TransactionState txState()\n+  {\n+    return ktx.txState();\n+  }\n+\n+  @Override\n+  public ExplicitIndexTransactionState explicitIndexTxState()\n+  {\n+    return ktx.explicitIndexTxState();\n+  }\n+\n+  @Override\n+  public boolean hasTxStateWithChanges()\n+  {\n+    return ktx.hasTxStateWithChanges();\n+  }\n+\n+  @Override\n+  public void acquireExclusiveNodeLock(long... ids)\n+  {\n+    acquireExclusiveLock(ResourceTypes.NODE, ids);\n+    ktx.assertOpen();\n+  }\n+\n+  @Override\n+  public void acquireExclusiveRelationshipLock(long... ids)\n+  {\n+    acquireExclusiveLock(ResourceTypes.RELATIONSHIP, ids);\n+    ktx.assertOpen();\n+  }\n+\n+  @Override\n+  public void acquireExclusiveExplicitIndexLock(long... ids)\n+  {\n+    acquireExclusiveLock(ResourceTypes.EXPLICIT_INDEX, ids);\n+    ktx.assertOpen();\n+  }\n+\n+  @Override\n+  public void acquireExclusiveLabelLock(long... ids)\n+  {\n+    acquireExclusiveLock(ResourceTypes.LABEL, ids);\n+    ktx.assertOpen();\n+  }\n+\n+  @Override\n+  public void releaseExclusiveNodeLock(long... ids)\n+  {\n+    releaseExclusiveLock(ResourceTypes.NODE, ids);\n+    ktx.assertOpen();\n+  }\n+\n+  @Override\n+  public void releaseExclusiveRelationshipLock(long... ids)\n+  {\n+    releaseExclusiveLock(ResourceTypes.RELATIONSHIP, ids);\n+    ktx.assertOpen();\n+  }\n+\n+  @Override\n+  public void releaseExclusiveExplicitIndexLock(long... ids)\n+  {\n+    releaseExclusiveLock(ResourceTypes.EXPLICIT_INDEX, ids);\n+    ktx.assertOpen();\n+  }\n+\n+  @Override\n+  public void releaseExclusiveLabelLock(long... ids)\n+  {\n+    releaseExclusiveLock(ResourceTypes.LABEL, ids);\n+    ktx.assertOpen();\n+  }\n+\n+  @Override\n+  public void acquireSharedNodeLock(long... ids)\n+  {\n+    acquireSharedLock(ResourceTypes.NODE, ids);\n+    ktx.assertOpen();\n+  }\n+\n+  @Override\n+  public void acquireSharedRelationshipLock(long... ids)\n+  {\n+    acquireSharedLock(ResourceTypes.RELATIONSHIP, ids);\n+    ktx.assertOpen();\n+  }\n+\n+  @Override\n+  public void acquireSharedExplicitIndexLock(long... ids)\n+  {\n+    acquireSharedLock(ResourceTypes.EXPLICIT_INDEX, ids);\n+    ktx.assertOpen();\n+  }\n+\n+  @Override\n+  public void acquireSharedLabelLock(long... ids)\n+  {\n+    acquireSharedLock(ResourceTypes.LABEL, ids);\n+    ktx.assertOpen();\n+  }\n+\n+  @Override\n+  public void releaseSharedNodeLock(long... ids)\n+  {\n+    releaseSharedLock(ResourceTypes.NODE, ids);\n+    ktx.assertOpen();\n+  }\n+\n+  @Override\n+  public void releaseSharedRelationshipLock(long... ids)\n+  {\n+    releaseSharedLock(ResourceTypes.RELATIONSHIP, ids);\n+    ktx.assertOpen();\n+  }\n+\n+  @Override\n+  public void releaseSharedExplicitIndexLock(long... ids)\n+  {\n+    releaseSharedLock(ResourceTypes.EXPLICIT_INDEX, ids);\n+    ktx.assertOpen();\n+  }\n+\n+  @Override\n+  public void releaseSharedLabelLock(long... ids)\n+  {\n+    releaseSharedLock(ResourceTypes.LABEL, ids);\n+    ktx.assertOpen();\n+  }\n+\n+  void sharedOptimisticLock(ResourceType resource, long resourceId)\n+  {\n+    ktx.statementLocks().optimistic().acquireShared(ktx.lockTracer(), resource, resourceId);\n+  }\n+\n+  private void acquireExclusiveLock(ResourceTypes types, long... ids)\n+  {\n+    ktx.statementLocks().pessimistic().acquireExclusive(ktx.lockTracer(), types, ids);\n+  }\n+\n+  private void releaseExclusiveLock(ResourceTypes types, long... ids)\n+  {\n+    ktx.statementLocks().pessimistic().releaseExclusive(types, ids);\n+  }\n+\n+  private void acquireSharedLock(ResourceTypes types, long... ids)\n+  {\n+    ktx.statementLocks().pessimistic().acquireShared(ktx.lockTracer(), types, ids);\n+  }\n+\n+  private void releaseSharedLock(ResourceTypes types, long... ids)\n+  {\n+    ktx.statementLocks().pessimistic().releaseShared(types, ids);\n+  }\n+\n+  private void assertIndexOnline(IndexReference index)\n+      throws IndexNotFoundKernelException, IndexBrokenKernelException\n+  {\n+    switch (indexGetState(index))\n+    {\n+      case ONLINE:\n+        return;\n+      default:\n+        throw new IndexBrokenKernelException(indexGetFailure(index));\n+    }\n+  }\n+\n+  private void assertPredicatesMatchSchema(IndexReference index, IndexQuery.ExactPredicate[] predicates)\n+      throws IndexNotApplicableKernelException\n+  {\n+    int[] propertyIds = index.properties();\n+    if (propertyIds.length != predicates.length)\n+    {\n+      throw new IndexNotApplicableKernelException(\n+          format(\"The index specifies %d properties, but only %d lookup predicates were given.\",\n+              propertyIds.length, predicates.length));\n+    }\n+    for (int i = 0; i < predicates.length; i++)\n+    {\n+      if (predicates[i].propertyKeyId() != propertyIds[i])\n+      {\n+        throw new IndexNotApplicableKernelException(\n+            format(\"The index has the property id %d in position %d, but the lookup property id was %d.\",\n+                propertyIds[i], i, predicates[i].propertyKeyId()));\n+      }\n+    }\n+  }\n }\n",
            "diff_size": 1338
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "410",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck"
                },
                {
                    "line": "414",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck"
                },
                {
                    "line": "418",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck"
                },
                {
                    "line": "454",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 163).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "469",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 162).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "473",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 162).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "478",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 167).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "775",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 209).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2774/Read.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2774/Read.java\nindex b9dc9a633c7..97b96ea8486 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2774/Read.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2774/Read.java\n@@ -96,12 +96,11 @@ abstract class Read implements TxStateHolder,\n     }\n \n     @Override\n-    public final void nodeIndexSeek(\n-            IndexReference index,\n+    public final void nodeIndexSeek( IndexReference index,\n             NodeValueIndexCursor cursor,\n             IndexOrder indexOrder,\n             IndexQuery... query ) throws IndexNotApplicableKernelException, IndexNotFoundKernelException\n-    {\n+{\n         ktx.assertOpen();\n         if ( hasForbiddenProperties( index ) )\n         {\n@@ -165,24 +164,20 @@ abstract class Read implements TxStateHolder,\n             if ( j > 0 )\n             {\n                 filters = Arrays.copyOf( filters, j );\n-                target = new NodeValueClientFilter( target, cursors.allocateNodeCursor(),\n-                        cursors.allocatePropertyCursor(), this, filters );\n-            }\n+                target = new NodeValueClientFilter( target, cursors.allocateNodeCursor(), cursors.allocatePropertyCursor(), this, filters );\n+    }\n         }\n         return target;\n     }\n \n     @Override\n-    public final long lockingNodeUniqueIndexSeek(\n-            IndexReference index,\n-            IndexQuery.ExactPredicate... predicates )\n-            throws IndexNotApplicableKernelException, IndexNotFoundKernelException, IndexBrokenKernelException\n-    {\n+    public final long lockingNodeUniqueIndexSeek( IndexReference index,\n+            IndexQuery.ExactPredicate... predicates ) throws IndexNotApplicableKernelException, IndexNotFoundKernelException, IndexBrokenKernelException\n+{\n         assertIndexOnline( index );\n         assertPredicatesMatchSchema( index, predicates );\n         int labelId = index.label();\n-\n-        Locks.Client locks = ktx.statementLocks().optimistic();\n+Locks.Client locks = ktx.statementLocks().optimistic();\n         LockTracer lockTracer = ktx.lockTracer();\n         long indexEntryId = indexEntryResourceId( labelId, predicates );\n \n@@ -190,8 +185,8 @@ abstract class Read implements TxStateHolder,\n         //if not found upgrade to exclusive and try again\n         locks.acquireShared( lockTracer, INDEX_ENTRY, indexEntryId );\n         try ( DefaultNodeValueIndexCursor cursor = cursors.allocateNodeValueIndexCursor();\n-              IndexReaders readers = new IndexReaders( index, this ) )\n-        {\n+IndexReaders readers = new IndexReaders( index, this ) )\n+{\n             nodeIndexSeekWithFreshIndexReader( cursor, readers.createReader(), predicates );\n             if ( !cursor.next() )\n             {\n@@ -210,22 +205,20 @@ abstract class Read implements TxStateHolder,\n         }\n     }\n \n-    void nodeIndexSeekWithFreshIndexReader(\n-            DefaultNodeValueIndexCursor cursor,\n+    void nodeIndexSeekWithFreshIndexReader( DefaultNodeValueIndexCursor cursor,\n             IndexReader indexReader,\n             IndexQuery.ExactPredicate... query ) throws IndexNotApplicableKernelException\n-    {\n+{\n         cursor.setRead( this );\n         IndexProgressor.NodeValueClient target = withFullValuePrecision( cursor, query, indexReader );\n         indexReader.query( target, IndexOrder.NONE, query );\n     }\n \n     @Override\n-    public final void nodeIndexScan(\n-            IndexReference index,\n+    public final void nodeIndexScan( IndexReference index,\n             NodeValueIndexCursor cursor,\n             IndexOrder indexOrder ) throws KernelException\n-    {\n+{\n         ktx.assertOpen();\n         if ( hasForbiddenProperties( index ) )\n         {\n@@ -256,18 +249,16 @@ abstract class Read implements TxStateHolder,\n     public final void nodeLabelScan( int label, NodeLabelIndexCursor cursor )\n     {\n         ktx.assertOpen();\n-\n-        DefaultNodeLabelIndexCursor indexCursor = (DefaultNodeLabelIndexCursor) cursor;\n+DefaultNodeLabelIndexCursor indexCursor = (DefaultNodeLabelIndexCursor) cursor;\n         indexCursor.setRead( this );\n-        labelScanReader().nodesWithLabel( indexCursor, label);\n+        labelScanReader().nodesWithLabel( indexCursor, label );\n     }\n \n     @Override\n     public void nodeLabelUnionScan( NodeLabelIndexCursor cursor, int... labels )\n     {\n         ktx.assertOpen();\n-\n-        DefaultNodeLabelIndexCursor client = (DefaultNodeLabelIndexCursor) cursor;\n+DefaultNodeLabelIndexCursor client = (DefaultNodeLabelIndexCursor) cursor;\n         client.setRead( this );\n         client.unionScan( new NodeLabelIndexProgressor( labelScanReader().nodesWithAnyOfLabels( labels ), client ),\n                 false, labels );\n@@ -277,11 +268,9 @@ abstract class Read implements TxStateHolder,\n     public void nodeLabelIntersectionScan( NodeLabelIndexCursor cursor, int... labels )\n     {\n         ktx.assertOpen();\n-\n-        DefaultNodeLabelIndexCursor client = (DefaultNodeLabelIndexCursor) cursor;\n+DefaultNodeLabelIndexCursor client = (DefaultNodeLabelIndexCursor) cursor;\n         client.setRead( this );\n-        client.intersectionScan(\n-                new NodeLabelIndexProgressor( labelScanReader().nodesWithAllLabels( labels ), client ),\n+        client.intersectionScan( new NodeLabelIndexProgressor( labelScanReader().nodesWithAllLabels( labels ), client ),\n                 false, labels );\n     }\n \n@@ -296,7 +285,8 @@ abstract class Read implements TxStateHolder,\n     public final void allNodesScan( NodeCursor cursor )\n     {\n         ktx.assertOpen();\n-        ((DefaultNodeCursor) cursor).scan( this );\n+\n+((DefaultNodeCursor) cursor).scan( this );\n     }\n \n     @Override\n@@ -310,21 +300,24 @@ abstract class Read implements TxStateHolder,\n     public final void singleNode( long reference, NodeCursor cursor )\n     {\n         ktx.assertOpen();\n-        ((DefaultNodeCursor) cursor).single( reference, this );\n+\n+((DefaultNodeCursor) cursor).single( reference, this );\n     }\n \n     @Override\n     public final void singleRelationship( long reference, RelationshipScanCursor cursor )\n     {\n         ktx.assertOpen();\n-        ((DefaultRelationshipScanCursor) cursor).single( reference, this );\n+\n+((DefaultRelationshipScanCursor) cursor).single( reference, this );\n     }\n \n     @Override\n     public final void allRelationshipsScan( RelationshipScanCursor cursor )\n     {\n         ktx.assertOpen();\n-        ((DefaultRelationshipScanCursor) cursor).scan( -1/*include all labels*/, this );\n+\n+((DefaultRelationshipScanCursor) cursor).scan( -1/*include all labels*/, this );\n     }\n \n     @Override\n@@ -338,7 +331,8 @@ abstract class Read implements TxStateHolder,\n     public final void relationshipTypeScan( int type, RelationshipScanCursor cursor )\n     {\n         ktx.assertOpen();\n-        ((DefaultRelationshipScanCursor) cursor).scan( type, this );\n+\n+((DefaultRelationshipScanCursor) cursor).scan( type, this );\n     }\n \n     @Override\n@@ -349,8 +343,7 @@ abstract class Read implements TxStateHolder,\n     }\n \n     @Override\n-    public final void relationshipGroups(\n-            long nodeReference, long reference, RelationshipGroupCursor cursor )\n+    public final void relationshipGroups( long nodeReference, long reference, RelationshipGroupCursor cursor )\n     {\n         ktx.assertOpen();\n         // the relationships for this node are not grouped in the store\n@@ -365,8 +358,7 @@ abstract class Read implements TxStateHolder,\n     }\n \n     @Override\n-    public final void relationships(\n-            long nodeReference, long reference, RelationshipTraversalCursor cursor )\n+    public final void relationships( long nodeReference, long reference, RelationshipTraversalCursor cursor )\n     {\n         /* There are 5 different ways a relationship traversal cursor can be initialized:\n          *\n@@ -400,41 +392,33 @@ abstract class Read implements TxStateHolder,\n         int relationshipType;\n         RelationshipReferenceEncoding encoding = RelationshipReferenceEncoding.parseEncoding( reference );\n         DefaultRelationshipTraversalCursor internalCursor = (DefaultRelationshipTraversalCursor)cursor;\n-\n-        switch ( encoding )\n+switch ( encoding )\n         {\n         case NONE: // this is a normal relationship reference\n             internalCursor.chain( nodeReference, reference, this );\n             break;\n-\n-        case FILTER: // this relationship chain needs to be filtered\n+    case FILTER: // this relationship chain needs to be filtered\n             internalCursor.filtered( nodeReference, clearEncoding( reference ), this, true );\n             break;\n-\n-        case FILTER_TX_STATE: // tx-state changes should be filtered by the head of this chain\n+    case FILTER_TX_STATE: // tx-state changes should be filtered by the head of this chain\n             internalCursor.filtered( nodeReference, clearEncoding( reference ), this, false );\n             break;\n-\n-        case GROUP: // this reference is actually to a group record\n+    case GROUP: // this reference is actually to a group record\n             internalCursor.groups( nodeReference, clearEncoding( reference ), this );\n             break;\n-\n-        case NO_OUTGOING_OF_TYPE: // nothing in store, but proceed to check tx-state changes\n-            relationshipType = (int) clearEncoding( reference );\n+    case NO_OUTGOING_OF_TYPE: // nothing in store, but proceed to check tx-state changes\n+            relationshipType = ( int) clearEncoding( reference );\n             internalCursor.filteredTxState( nodeReference, this, relationshipType, OUTGOING );\n             break;\n-\n-        case NO_INCOMING_OF_TYPE: // nothing in store, but proceed to check tx-state changes\n-            relationshipType = (int) clearEncoding( reference );\n+    case NO_INCOMING_OF_TYPE: // nothing in store, but proceed to check tx-state changes\n+            relationshipType = ( int) clearEncoding( reference );\n             internalCursor.filteredTxState( nodeReference, this, relationshipType, INCOMING );\n             break;\n-\n-        case NO_LOOP_OF_TYPE: // nothing in store, but proceed to check tx-state changes\n-            relationshipType = (int) clearEncoding( reference );\n+    case NO_LOOP_OF_TYPE: // nothing in store, but proceed to check tx-state changes\n+            relationshipType = ( int) clearEncoding( reference );\n             internalCursor.filteredTxState( nodeReference, this, relationshipType, LOOP );\n             break;\n-\n-        default:\n+    default:\n             throw new IllegalStateException( \"Unknown encoding \" + encoding );\n         }\n     }\n@@ -443,7 +427,8 @@ abstract class Read implements TxStateHolder,\n     public final void nodeProperties( long nodeReference, long reference, PropertyCursor cursor )\n     {\n         ktx.assertOpen();\n-        ((DefaultPropertyCursor) cursor).initNode( nodeReference, reference, this, ktx );\n+\n+((DefaultPropertyCursor) cursor).initNode( nodeReference, reference, this, ktx );\n     }\n \n     @Override\n@@ -451,98 +436,90 @@ abstract class Read implements TxStateHolder,\n             PropertyCursor cursor )\n     {\n         ktx.assertOpen();\n-        ((DefaultPropertyCursor) cursor).initRelationship( relationshipReference, reference, this, ktx );\n+\n+((DefaultPropertyCursor) cursor).initRelationship( relationshipReference, reference, this, ktx );\n     }\n \n     @Override\n     public final void graphProperties( PropertyCursor cursor )\n     {\n         ktx.assertOpen();\n-        ((DefaultPropertyCursor) cursor).initGraph( graphPropertiesReference(), this, ktx );\n+\n+((DefaultPropertyCursor) cursor).initGraph( graphPropertiesReference(), this, ktx );\n     }\n \n     abstract long graphPropertiesReference();\n \n     @Override\n-    public final void nodeExplicitIndexLookup(\n-            NodeExplicitIndexCursor cursor, String index, String key, Object value )\n-            throws ExplicitIndexNotFoundKernelException\n-    {\n+    public final void nodeExplicitIndexLookup( NodeExplicitIndexCursor cursor, String index, String key, Object value ) throws ExplicitIndexNotFoundKernelException\n+{\n         ktx.assertOpen();\n-        ((DefaultNodeExplicitIndexCursor) cursor).setRead( this );\n+\n+((DefaultNodeExplicitIndexCursor) cursor).setRead( this );\n         explicitIndex( (DefaultNodeExplicitIndexCursor) cursor,\n                 explicitNodeIndex( index ).get( key, value ) );\n     }\n \n     @Override\n-    public final void nodeExplicitIndexQuery(\n-            NodeExplicitIndexCursor cursor, String index, Object query )\n-            throws ExplicitIndexNotFoundKernelException\n-    {\n+    public final void nodeExplicitIndexQuery( NodeExplicitIndexCursor cursor, String index, Object query ) throws ExplicitIndexNotFoundKernelException\n+{\n         ktx.assertOpen();\n-        ((DefaultNodeExplicitIndexCursor) cursor).setRead( this );\n-        explicitIndex( (DefaultNodeExplicitIndexCursor) cursor, explicitNodeIndex( index ).query(\n-                query instanceof Value ? ((Value) query).asObject() : query ) );\n+\n+((DefaultNodeExplicitIndexCursor) cursor).setRead( this );\n+        explicitIndex( (DefaultNodeExplicitIndexCursor) cursor, explicitNodeIndex( index ).query( query instanceof Value ? ((Value) query).asObject() : query ) );\n     }\n \n     @Override\n-    public final void nodeExplicitIndexQuery(\n-            NodeExplicitIndexCursor cursor, String index, String key, Object query )\n-            throws ExplicitIndexNotFoundKernelException\n-    {\n+    public final void nodeExplicitIndexQuery( NodeExplicitIndexCursor cursor, String index, String key, Object query ) throws ExplicitIndexNotFoundKernelException\n+{\n         ktx.assertOpen();\n-        ((DefaultNodeExplicitIndexCursor) cursor).setRead( this );\n-        explicitIndex( (DefaultNodeExplicitIndexCursor) cursor, explicitNodeIndex( index ).query(\n-                key, query instanceof Value ? ((Value) query).asObject() : query ) );\n+\n+((DefaultNodeExplicitIndexCursor) cursor).setRead( this );\n+        explicitIndex( (DefaultNodeExplicitIndexCursor) cursor, explicitNodeIndex( index ).query( key, query instanceof Value ? ((Value) query).asObject() : query ) );\n     }\n \n     @Override\n-    public void relationshipExplicitIndexLookup(\n-            RelationshipExplicitIndexCursor cursor,\n+    public void relationshipExplicitIndexLookup( RelationshipExplicitIndexCursor cursor,\n             String index,\n             String key,\n             Object value,\n             long source,\n             long target ) throws ExplicitIndexNotFoundKernelException\n-    {\n+{\n         ktx.assertOpen();\n-        ((DefaultRelationshipExplicitIndexCursor) cursor).setRead( this );\n-        explicitIndex(\n-                (DefaultRelationshipExplicitIndexCursor) cursor,\n+\n+((DefaultRelationshipExplicitIndexCursor) cursor).setRead( this );\n+        explicitIndex((DefaultRelationshipExplicitIndexCursor) cursor,\n                 explicitRelationshipIndex( index ).get( key, value, source, target ) );\n     }\n \n     @Override\n-    public void relationshipExplicitIndexQuery(\n-            RelationshipExplicitIndexCursor cursor,\n+    public void relationshipExplicitIndexQuery( RelationshipExplicitIndexCursor cursor,\n             String index,\n             Object query,\n             long source,\n             long target ) throws ExplicitIndexNotFoundKernelException\n-    {\n+{\n         ktx.assertOpen();\n-        ((DefaultRelationshipExplicitIndexCursor) cursor).setRead( this );\n-        explicitIndex(\n-                (DefaultRelationshipExplicitIndexCursor) cursor,\n-                explicitRelationshipIndex( index )\n-                        .query( query instanceof Value ? ((Value) query).asObject() : query, source, target ) );\n+\n+((DefaultRelationshipExplicitIndexCursor) cursor).setRead( this );\n+        explicitIndex((DefaultRelationshipExplicitIndexCursor) cursor,\n+                explicitRelationshipIndex( index ).query( query instanceof Value ? ((Value) query).asObject() : query, source, target ) );\n     }\n \n     @Override\n-    public void relationshipExplicitIndexQuery(\n-            RelationshipExplicitIndexCursor cursor,\n+    public void relationshipExplicitIndexQuery( RelationshipExplicitIndexCursor cursor,\n             String index,\n             String key,\n             Object query,\n             long source,\n             long target ) throws ExplicitIndexNotFoundKernelException\n-    {\n+{\n         ktx.assertOpen();\n-        ((DefaultRelationshipExplicitIndexCursor) cursor).setRead( this );\n-        explicitIndex(\n-                (DefaultRelationshipExplicitIndexCursor) cursor,\n-                explicitRelationshipIndex( index ).query(\n-                        key, query instanceof Value ? ((Value) query).asObject() : query, source, target ) );\n+\n+((DefaultRelationshipExplicitIndexCursor) cursor).setRead( this );\n+        explicitIndex((DefaultRelationshipExplicitIndexCursor) cursor,\n+                explicitRelationshipIndex( index ).query( key, query instanceof Value ? ((Value) query).asObject() : query, source, target ) );\n     }\n \n     private static void explicitIndex( IndexProgressor.ExplicitClient client, ExplicitIndexHits hits )\n@@ -772,9 +749,8 @@ abstract class Read implements TxStateHolder,\n         ktx.statementLocks().pessimistic().releaseShared( types, ids );\n     }\n \n-    private void assertIndexOnline( IndexReference index )\n-            throws IndexNotFoundKernelException, IndexBrokenKernelException\n-    {\n+    private void assertIndexOnline( IndexReference index ) throws IndexNotFoundKernelException, IndexBrokenKernelException\n+{\n         switch ( indexGetState( index ) )\n         {\n         case ONLINE:\n@@ -784,24 +760,20 @@ abstract class Read implements TxStateHolder,\n         }\n     }\n \n-    private void assertPredicatesMatchSchema( IndexReference index, IndexQuery.ExactPredicate[] predicates )\n-            throws IndexNotApplicableKernelException\n-    {\n+    private void assertPredicatesMatchSchema( IndexReference index, IndexQuery.ExactPredicate[] predicates ) throws IndexNotApplicableKernelException\n+{\n         int[] propertyIds = index.properties();\n         if ( propertyIds.length != predicates.length )\n         {\n-            throw new IndexNotApplicableKernelException(\n-                    format( \"The index specifies %d properties, but only %d lookup predicates were given.\",\n+            throw new IndexNotApplicableKernelException( format( \"The index specifies %d properties, but only %d lookup predicates were given.\",\n                             propertyIds.length, predicates.length ) );\n-        }\n+    }\n         for ( int i = 0; i < predicates.length; i++ )\n         {\n             if ( predicates[i].propertyKeyId() != propertyIds[i] )\n             {\n-                throw new IndexNotApplicableKernelException(\n-                        format( \"The index has the property id %d in position %d, but the lookup property id was %d.\",\n-                                propertyIds[i], i, predicates[i].propertyKeyId() ) );\n-            }\n+                throw new IndexNotApplicableKernelException( format( \"The index has the property id %d in position %d, but the lookup property id was %d.\", propertyIds[i], i, predicates[i].propertyKeyId() ) );\n+    }\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 125
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "90",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 250).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "102",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 203).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "126",
                    "column": "143",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "13",
                    "severity": "error",
                    "message": "'for' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "139",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "48",
                    "severity": "error",
                    "message": "'||' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "145",
                    "column": "74",
                    "severity": "error",
                    "message": "'&&' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "153",
                    "column": "65",
                    "severity": "error",
                    "message": "'||' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "153",
                    "column": "96",
                    "severity": "error",
                    "message": "'||' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "178",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 212).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "190",
                    "column": "9",
                    "severity": "error",
                    "message": "'try' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "190",
                    "column": "145",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "210",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 182).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "237",
                    "column": "9",
                    "severity": "error",
                    "message": "'for' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "344",
                    "column": "32",
                    "severity": "error",
                    "message": "'&&' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "444",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 163).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "456",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 162).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "460",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 162).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "464",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 167).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "468",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 199).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "476",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 186).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "480",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 194).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "484",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 198).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "488",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 199).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "755",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 187).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "762",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 211).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2774/Read.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/2774/Read.java\nindex b9dc9a633c7..07fa5588241 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2774/Read.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/2774/Read.java\n@@ -20,7 +20,6 @@\n package org.neo4j.kernel.impl.newapi;\n \n import java.util.Arrays;\n-\n import org.neo4j.internal.kernel.api.CapableIndexReference;\n import org.neo4j.internal.kernel.api.IndexOrder;\n import org.neo4j.internal.kernel.api.IndexQuery;\n@@ -66,25 +65,29 @@ import org.neo4j.values.storable.TextValue;\n import org.neo4j.values.storable.Value;\n import org.neo4j.values.storable.ValueGroup;\n import org.neo4j.values.storable.Values;\n-\n import static java.lang.String.format;\n+\n import static org.neo4j.kernel.impl.locking.ResourceTypes.INDEX_ENTRY;\n+\n import static org.neo4j.kernel.impl.locking.ResourceTypes.indexEntryResourceId;\n+\n import static org.neo4j.kernel.impl.newapi.GroupReferenceEncoding.isRelationship;\n+\n import static org.neo4j.kernel.impl.newapi.References.clearEncoding;\n+\n import static org.neo4j.kernel.impl.newapi.RelationshipDirection.INCOMING;\n+\n import static org.neo4j.kernel.impl.newapi.RelationshipDirection.LOOP;\n+\n import static org.neo4j.kernel.impl.newapi.RelationshipDirection.OUTGOING;\n+\n import static org.neo4j.kernel.impl.store.record.AbstractBaseRecord.NO_ID;\n+\n import static org.neo4j.values.storable.ValueGroup.GEOMETRY;\n+\n import static org.neo4j.values.storable.ValueGroup.NUMBER;\n \n-abstract class Read implements TxStateHolder,\n-        org.neo4j.internal.kernel.api.Read,\n-        org.neo4j.internal.kernel.api.ExplicitIndexRead,\n-        org.neo4j.internal.kernel.api.SchemaRead,\n-        org.neo4j.internal.kernel.api.Procedures,\n-        org.neo4j.internal.kernel.api.Locks\n+abstract class Read implements TxStateHolder, org.neo4j.internal.kernel.api.Read, org.neo4j.internal.kernel.api.ExplicitIndexRead, org.neo4j.internal.kernel.api.SchemaRead, org.neo4j.internal.kernel.api.Procedures, org.neo4j.internal.kernel.api.Locks\n {\n     private final DefaultCursors cursors;\n     final KernelTransactionImplementation ktx;\n@@ -96,11 +99,7 @@ abstract class Read implements TxStateHolder,\n     }\n \n     @Override\n-    public final void nodeIndexSeek(\n-            IndexReference index,\n-            NodeValueIndexCursor cursor,\n-            IndexOrder indexOrder,\n-            IndexQuery... query ) throws IndexNotApplicableKernelException, IndexNotFoundKernelException\n+    public final void nodeIndexSeek( IndexReference index, NodeValueIndexCursor cursor, IndexOrder indexOrder, IndexQuery... query ) throws IndexNotApplicableKernelException, IndexNotFoundKernelException\n     {\n         ktx.assertOpen();\n         if ( hasForbiddenProperties( index ) )\n@@ -123,65 +122,64 @@ abstract class Read implements TxStateHolder,\n         DefaultNodeValueIndexCursor cursorImpl = (DefaultNodeValueIndexCursor) cursor;\n         IndexReader reader = indexReader( index, true );\n         cursorImpl.setRead( this );\n-        try ( CursorPropertyAccessor accessor = new CursorPropertyAccessor( cursors.allocateNodeCursor(), cursors.allocatePropertyCursor(), this ) )\n+        try\n+        ( CursorPropertyAccessor accessor = new CursorPropertyAccessor( cursors.allocateNodeCursor(), cursors.allocatePropertyCursor(), this ))\n         {\n             reader.distinctValues( cursorImpl, accessor );\n         }\n     }\n \n-    private IndexProgressor.NodeValueClient withFullValuePrecision( DefaultNodeValueIndexCursor cursor,\n-            IndexQuery[] query, IndexReader reader )\n+    private IndexProgressor.NodeValueClient withFullValuePrecision( DefaultNodeValueIndexCursor cursor, IndexQuery[] query, IndexReader reader )\n     {\n         IndexProgressor.NodeValueClient target = cursor;\n-        if ( !reader.hasFullValuePrecision( query ) )\n+        if ( ! reader.hasFullValuePrecision( query ) )\n         {\n             IndexQuery[] filters = new IndexQuery[query.length];\n             int j = 0;\n-            for ( IndexQuery q : query )\n+            for( IndexQuery q : query)\n             {\n                 switch ( q.type() )\n                 {\n                 case range:\n                     ValueGroup valueGroup = q.valueGroup();\n-                    if ( ( valueGroup == NUMBER || valueGroup == GEOMETRY) && !reader.hasFullValuePrecision( q ) )\n+                    if ( ( valueGroup == NUMBER|| valueGroup == GEOMETRY)&& ! reader.hasFullValuePrecision( q ) )\n                     {\n-                        filters[j++] = q;\n+                        filters[j ++] = q;\n                     }\n+\n                     break;\n                 case exact:\n                     Value value = ((IndexQuery.ExactPredicate) q).value();\n-                    if ( value.valueGroup() == ValueGroup.NUMBER || Values.isArrayValue( value ) || value.valueGroup() == ValueGroup.GEOMETRY )\n+                    if ( value.valueGroup() == ValueGroup.NUMBER|| Values.isArrayValue( value )|| value.valueGroup() == ValueGroup.GEOMETRY )\n                     {\n-                        if ( !reader.hasFullValuePrecision( q ) )\n+                        if ( ! reader.hasFullValuePrecision( q ) )\n                         {\n-                            filters[j++] = q;\n+                            filters[j ++] = q;\n                         }\n                     }\n+\n                     break;\n                 default:\n                     break;\n                 }\n             }\n+\n             if ( j > 0 )\n             {\n                 filters = Arrays.copyOf( filters, j );\n-                target = new NodeValueClientFilter( target, cursors.allocateNodeCursor(),\n-                        cursors.allocatePropertyCursor(), this, filters );\n+                target = new NodeValueClientFilter( target, cursors.allocateNodeCursor(), cursors.allocatePropertyCursor(), this, filters );\n             }\n         }\n+\n         return target;\n     }\n \n     @Override\n-    public final long lockingNodeUniqueIndexSeek(\n-            IndexReference index,\n-            IndexQuery.ExactPredicate... predicates )\n-            throws IndexNotApplicableKernelException, IndexNotFoundKernelException, IndexBrokenKernelException\n+    public final long lockingNodeUniqueIndexSeek( IndexReference index, IndexQuery.ExactPredicate... predicates ) throws IndexNotApplicableKernelException, IndexNotFoundKernelException, IndexBrokenKernelException\n     {\n         assertIndexOnline( index );\n         assertPredicatesMatchSchema( index, predicates );\n         int labelId = index.label();\n-\n         Locks.Client locks = ktx.statementLocks().optimistic();\n         LockTracer lockTracer = ktx.lockTracer();\n         long indexEntryId = indexEntryResourceId( labelId, predicates );\n@@ -189,11 +187,10 @@ abstract class Read implements TxStateHolder,\n         //First try to find node under a shared lock\n         //if not found upgrade to exclusive and try again\n         locks.acquireShared( lockTracer, INDEX_ENTRY, indexEntryId );\n-        try ( DefaultNodeValueIndexCursor cursor = cursors.allocateNodeValueIndexCursor();\n-              IndexReaders readers = new IndexReaders( index, this ) )\n+        try( DefaultNodeValueIndexCursor cursor = cursors.allocateNodeValueIndexCursor(); IndexReaders readers = new IndexReaders( index, this ))\n         {\n             nodeIndexSeekWithFreshIndexReader( cursor, readers.createReader(), predicates );\n-            if ( !cursor.next() )\n+            if ( ! cursor.next() )\n             {\n                 locks.releaseShared( INDEX_ENTRY, indexEntryId );\n                 locks.acquireExclusive( lockTracer, INDEX_ENTRY, indexEntryId );\n@@ -210,10 +207,7 @@ abstract class Read implements TxStateHolder,\n         }\n     }\n \n-    void nodeIndexSeekWithFreshIndexReader(\n-            DefaultNodeValueIndexCursor cursor,\n-            IndexReader indexReader,\n-            IndexQuery.ExactPredicate... query ) throws IndexNotApplicableKernelException\n+    void nodeIndexSeekWithFreshIndexReader( DefaultNodeValueIndexCursor cursor, IndexReader indexReader, IndexQuery.ExactPredicate... query ) throws IndexNotApplicableKernelException\n     {\n         cursor.setRead( this );\n         IndexProgressor.NodeValueClient target = withFullValuePrecision( cursor, query, indexReader );\n@@ -221,10 +215,7 @@ abstract class Read implements TxStateHolder,\n     }\n \n     @Override\n-    public final void nodeIndexScan(\n-            IndexReference index,\n-            NodeValueIndexCursor cursor,\n-            IndexOrder indexOrder ) throws KernelException\n+    public final void nodeIndexScan( IndexReference index, NodeValueIndexCursor cursor, IndexOrder indexOrder ) throws KernelException\n     {\n         ktx.assertOpen();\n         if ( hasForbiddenProperties( index ) )\n@@ -234,7 +225,8 @@ abstract class Read implements TxStateHolder,\n         }\n \n         // for a scan, we simply query for existence of the first property, which covers all entries in an index\n-        int firstProperty = index.properties()[0];\n+\n+        int firstProperty = index.properties()[ 0];\n         ((DefaultNodeValueIndexCursor) cursor).setRead( this );\n         indexReader( index, false ).query( (DefaultNodeValueIndexCursor) cursor, indexOrder, IndexQuery.exists( firstProperty ) );\n     }\n@@ -242,13 +234,15 @@ abstract class Read implements TxStateHolder,\n     private boolean hasForbiddenProperties( IndexReference index )\n     {\n         AccessMode mode = ktx.securityContext().mode();\n-        for ( int prop : index.properties() )\n+        for( int prop : index.properties()\n+        )\n         {\n-            if ( !mode.allowsPropertyReads( prop ) )\n+            if ( ! mode.allowsPropertyReads( prop ) )\n             {\n                 return true;\n             }\n         }\n+\n         return false;\n     }\n \n@@ -256,33 +250,27 @@ abstract class Read implements TxStateHolder,\n     public final void nodeLabelScan( int label, NodeLabelIndexCursor cursor )\n     {\n         ktx.assertOpen();\n-\n         DefaultNodeLabelIndexCursor indexCursor = (DefaultNodeLabelIndexCursor) cursor;\n         indexCursor.setRead( this );\n-        labelScanReader().nodesWithLabel( indexCursor, label);\n+        labelScanReader().nodesWithLabel( indexCursor, label );\n     }\n \n     @Override\n     public void nodeLabelUnionScan( NodeLabelIndexCursor cursor, int... labels )\n     {\n         ktx.assertOpen();\n-\n         DefaultNodeLabelIndexCursor client = (DefaultNodeLabelIndexCursor) cursor;\n         client.setRead( this );\n-        client.unionScan( new NodeLabelIndexProgressor( labelScanReader().nodesWithAnyOfLabels( labels ), client ),\n-                false, labels );\n+        client.unionScan( new NodeLabelIndexProgressor( labelScanReader().nodesWithAnyOfLabels( labels ), client ), false, labels );\n     }\n \n     @Override\n     public void nodeLabelIntersectionScan( NodeLabelIndexCursor cursor, int... labels )\n     {\n         ktx.assertOpen();\n-\n         DefaultNodeLabelIndexCursor client = (DefaultNodeLabelIndexCursor) cursor;\n         client.setRead( this );\n-        client.intersectionScan(\n-                new NodeLabelIndexProgressor( labelScanReader().nodesWithAllLabels( labels ), client ),\n-                false, labels );\n+        client.intersectionScan( new NodeLabelIndexProgressor( labelScanReader().nodesWithAllLabels( labels ), client ), false, labels );\n     }\n \n     @Override\n@@ -324,7 +312,7 @@ abstract class Read implements TxStateHolder,\n     public final void allRelationshipsScan( RelationshipScanCursor cursor )\n     {\n         ktx.assertOpen();\n-        ((DefaultRelationshipScanCursor) cursor).scan( -1/*include all labels*/, this );\n+        ((DefaultRelationshipScanCursor) cursor).scan( - 1/*include all labels*/, this );\n     }\n \n     @Override\n@@ -349,12 +337,11 @@ abstract class Read implements TxStateHolder,\n     }\n \n     @Override\n-    public final void relationshipGroups(\n-            long nodeReference, long reference, RelationshipGroupCursor cursor )\n+    public final void relationshipGroups( long nodeReference, long reference, RelationshipGroupCursor cursor )\n     {\n         ktx.assertOpen();\n         // the relationships for this node are not grouped in the store\n-        if ( reference != NO_ID && isRelationship( reference ) )\n+        if ( reference != NO_ID&& isRelationship( reference ) )\n         {\n             ((DefaultRelationshipGroupCursor) cursor).buffer( nodeReference, clearEncoding( reference ), this );\n         }\n@@ -365,8 +352,7 @@ abstract class Read implements TxStateHolder,\n     }\n \n     @Override\n-    public final void relationships(\n-            long nodeReference, long reference, RelationshipTraversalCursor cursor )\n+    public final void relationships( long nodeReference, long reference, RelationshipTraversalCursor cursor )\n     {\n         /* There are 5 different ways a relationship traversal cursor can be initialized:\n          *\n@@ -396,44 +382,35 @@ abstract class Read implements TxStateHolder,\n          * This means that we need reference encodings (flags) for cases: 1, 3, 4, 5\n          */\n         ktx.assertOpen();\n-\n         int relationshipType;\n         RelationshipReferenceEncoding encoding = RelationshipReferenceEncoding.parseEncoding( reference );\n-        DefaultRelationshipTraversalCursor internalCursor = (DefaultRelationshipTraversalCursor)cursor;\n-\n+        DefaultRelationshipTraversalCursor internalCursor = (DefaultRelationshipTraversalCursor) cursor;\n         switch ( encoding )\n         {\n         case NONE: // this is a normal relationship reference\n             internalCursor.chain( nodeReference, reference, this );\n             break;\n-\n         case FILTER: // this relationship chain needs to be filtered\n             internalCursor.filtered( nodeReference, clearEncoding( reference ), this, true );\n             break;\n-\n         case FILTER_TX_STATE: // tx-state changes should be filtered by the head of this chain\n             internalCursor.filtered( nodeReference, clearEncoding( reference ), this, false );\n             break;\n-\n         case GROUP: // this reference is actually to a group record\n             internalCursor.groups( nodeReference, clearEncoding( reference ), this );\n             break;\n-\n         case NO_OUTGOING_OF_TYPE: // nothing in store, but proceed to check tx-state changes\n             relationshipType = (int) clearEncoding( reference );\n             internalCursor.filteredTxState( nodeReference, this, relationshipType, OUTGOING );\n             break;\n-\n         case NO_INCOMING_OF_TYPE: // nothing in store, but proceed to check tx-state changes\n             relationshipType = (int) clearEncoding( reference );\n             internalCursor.filteredTxState( nodeReference, this, relationshipType, INCOMING );\n             break;\n-\n         case NO_LOOP_OF_TYPE: // nothing in store, but proceed to check tx-state changes\n             relationshipType = (int) clearEncoding( reference );\n             internalCursor.filteredTxState( nodeReference, this, relationshipType, LOOP );\n             break;\n-\n         default:\n             throw new IllegalStateException( \"Unknown encoding \" + encoding );\n         }\n@@ -447,8 +424,7 @@ abstract class Read implements TxStateHolder,\n     }\n \n     @Override\n-    public final void relationshipProperties( long relationshipReference, long reference,\n-            PropertyCursor cursor )\n+    public final void relationshipProperties( long relationshipReference, long reference, PropertyCursor cursor )\n     {\n         ktx.assertOpen();\n         ((DefaultPropertyCursor) cursor).initRelationship( relationshipReference, reference, this, ktx );\n@@ -461,88 +437,55 @@ abstract class Read implements TxStateHolder,\n         ((DefaultPropertyCursor) cursor).initGraph( graphPropertiesReference(), this, ktx );\n     }\n \n-    abstract long graphPropertiesReference();\n+    abstract long graphPropertiesReference()\n+    ;\n \n     @Override\n-    public final void nodeExplicitIndexLookup(\n-            NodeExplicitIndexCursor cursor, String index, String key, Object value )\n-            throws ExplicitIndexNotFoundKernelException\n+    public final void nodeExplicitIndexLookup( NodeExplicitIndexCursor cursor, String index, String key, Object value ) throws ExplicitIndexNotFoundKernelException\n     {\n         ktx.assertOpen();\n         ((DefaultNodeExplicitIndexCursor) cursor).setRead( this );\n-        explicitIndex( (DefaultNodeExplicitIndexCursor) cursor,\n-                explicitNodeIndex( index ).get( key, value ) );\n+        explicitIndex( (DefaultNodeExplicitIndexCursor) cursor, explicitNodeIndex( index ).get( key, value ) );\n     }\n \n     @Override\n-    public final void nodeExplicitIndexQuery(\n-            NodeExplicitIndexCursor cursor, String index, Object query )\n-            throws ExplicitIndexNotFoundKernelException\n+    public final void nodeExplicitIndexQuery( NodeExplicitIndexCursor cursor, String index, Object query ) throws ExplicitIndexNotFoundKernelException\n     {\n         ktx.assertOpen();\n         ((DefaultNodeExplicitIndexCursor) cursor).setRead( this );\n-        explicitIndex( (DefaultNodeExplicitIndexCursor) cursor, explicitNodeIndex( index ).query(\n-                query instanceof Value ? ((Value) query).asObject() : query ) );\n+        explicitIndex( (DefaultNodeExplicitIndexCursor) cursor, explicitNodeIndex( index ).query( query instanceof Value ? ((Value) query).asObject() : query ) );\n     }\n \n     @Override\n-    public final void nodeExplicitIndexQuery(\n-            NodeExplicitIndexCursor cursor, String index, String key, Object query )\n-            throws ExplicitIndexNotFoundKernelException\n+    public final void nodeExplicitIndexQuery( NodeExplicitIndexCursor cursor, String index, String key, Object query ) throws ExplicitIndexNotFoundKernelException\n     {\n         ktx.assertOpen();\n         ((DefaultNodeExplicitIndexCursor) cursor).setRead( this );\n-        explicitIndex( (DefaultNodeExplicitIndexCursor) cursor, explicitNodeIndex( index ).query(\n-                key, query instanceof Value ? ((Value) query).asObject() : query ) );\n+        explicitIndex( (DefaultNodeExplicitIndexCursor) cursor, explicitNodeIndex( index ).query( key, query instanceof Value ? ((Value) query).asObject() : query ) );\n     }\n \n     @Override\n-    public void relationshipExplicitIndexLookup(\n-            RelationshipExplicitIndexCursor cursor,\n-            String index,\n-            String key,\n-            Object value,\n-            long source,\n-            long target ) throws ExplicitIndexNotFoundKernelException\n+    public void relationshipExplicitIndexLookup( RelationshipExplicitIndexCursor cursor, String index, String key, Object value, long source, long target ) throws ExplicitIndexNotFoundKernelException\n     {\n         ktx.assertOpen();\n         ((DefaultRelationshipExplicitIndexCursor) cursor).setRead( this );\n-        explicitIndex(\n-                (DefaultRelationshipExplicitIndexCursor) cursor,\n-                explicitRelationshipIndex( index ).get( key, value, source, target ) );\n+        explicitIndex( (DefaultRelationshipExplicitIndexCursor) cursor, explicitRelationshipIndex( index ).get( key, value, source, target ) );\n     }\n \n     @Override\n-    public void relationshipExplicitIndexQuery(\n-            RelationshipExplicitIndexCursor cursor,\n-            String index,\n-            Object query,\n-            long source,\n-            long target ) throws ExplicitIndexNotFoundKernelException\n+    public void relationshipExplicitIndexQuery( RelationshipExplicitIndexCursor cursor, String index, Object query, long source, long target ) throws ExplicitIndexNotFoundKernelException\n     {\n         ktx.assertOpen();\n         ((DefaultRelationshipExplicitIndexCursor) cursor).setRead( this );\n-        explicitIndex(\n-                (DefaultRelationshipExplicitIndexCursor) cursor,\n-                explicitRelationshipIndex( index )\n-                        .query( query instanceof Value ? ((Value) query).asObject() : query, source, target ) );\n+        explicitIndex( (DefaultRelationshipExplicitIndexCursor) cursor, explicitRelationshipIndex( index ).query( query instanceof Value ? ((Value) query).asObject() : query, source, target ) );\n     }\n \n     @Override\n-    public void relationshipExplicitIndexQuery(\n-            RelationshipExplicitIndexCursor cursor,\n-            String index,\n-            String key,\n-            Object query,\n-            long source,\n-            long target ) throws ExplicitIndexNotFoundKernelException\n+    public void relationshipExplicitIndexQuery( RelationshipExplicitIndexCursor cursor, String index, String key, Object query, long source, long target ) throws ExplicitIndexNotFoundKernelException\n     {\n         ktx.assertOpen();\n         ((DefaultRelationshipExplicitIndexCursor) cursor).setRead( this );\n-        explicitIndex(\n-                (DefaultRelationshipExplicitIndexCursor) cursor,\n-                explicitRelationshipIndex( index ).query(\n-                        key, query instanceof Value ? ((Value) query).asObject() : query, source, target ) );\n+        explicitIndex( (DefaultRelationshipExplicitIndexCursor) cursor, explicitRelationshipIndex( index ).query( key, query instanceof Value ? ((Value) query).asObject() : query, source, target ) );\n     }\n \n     private static void explicitIndex( IndexProgressor.ExplicitClient client, ExplicitIndexHits hits )\n@@ -574,48 +517,69 @@ abstract class Read implements TxStateHolder,\n         ktx.assertOpen();\n     }\n \n-    abstract IndexReader indexReader( IndexReference index, boolean fresh ) throws IndexNotFoundKernelException;\n+    abstract IndexReader indexReader( IndexReference index, boolean fresh ) throws IndexNotFoundKernelException\n+    ;\n \n-    abstract LabelScanReader labelScanReader();\n+    abstract LabelScanReader labelScanReader()\n+    ;\n \n-    abstract ExplicitIndex explicitNodeIndex( String indexName ) throws ExplicitIndexNotFoundKernelException;\n+    abstract ExplicitIndex explicitNodeIndex( String indexName ) throws ExplicitIndexNotFoundKernelException\n+    ;\n \n-    abstract ExplicitIndex explicitRelationshipIndex( String indexName ) throws ExplicitIndexNotFoundKernelException;\n+    abstract ExplicitIndex explicitRelationshipIndex( String indexName ) throws ExplicitIndexNotFoundKernelException\n+    ;\n \n     @Override\n-    public abstract CapableIndexReference index( int label, int... properties );\n+    public abstract CapableIndexReference index( int label, int... properties )\n+    ;\n \n-    abstract PageCursor nodePage( long reference );\n+    abstract PageCursor nodePage( long reference )\n+    ;\n \n-    abstract PageCursor relationshipPage( long reference );\n+    abstract PageCursor relationshipPage( long reference )\n+    ;\n \n-    abstract PageCursor groupPage( long reference );\n+    abstract PageCursor groupPage( long reference )\n+    ;\n \n-    abstract PageCursor propertyPage( long reference );\n+    abstract PageCursor propertyPage( long reference )\n+    ;\n \n-    abstract PageCursor stringPage( long reference );\n+    abstract PageCursor stringPage( long reference )\n+    ;\n \n-    abstract PageCursor arrayPage( long reference );\n+    abstract PageCursor arrayPage( long reference )\n+    ;\n \n-    abstract RecordCursor<DynamicRecord> labelCursor();\n+    abstract RecordCursor<DynamicRecord> labelCursor()\n+    ;\n \n-    abstract void node( NodeRecord record, long reference, PageCursor pageCursor );\n+    abstract void node( NodeRecord record, long reference, PageCursor pageCursor )\n+    ;\n \n-    abstract void relationship( RelationshipRecord record, long reference, PageCursor pageCursor );\n+    abstract void relationship( RelationshipRecord record, long reference, PageCursor pageCursor )\n+    ;\n \n-    abstract void relationshipFull( RelationshipRecord record, long reference, PageCursor pageCursor );\n+    abstract void relationshipFull( RelationshipRecord record, long reference, PageCursor pageCursor )\n+    ;\n \n-    abstract void property( PropertyRecord record, long reference, PageCursor pageCursor );\n+    abstract void property( PropertyRecord record, long reference, PageCursor pageCursor )\n+    ;\n \n-    abstract void group( RelationshipGroupRecord record, long reference, PageCursor page );\n+    abstract void group( RelationshipGroupRecord record, long reference, PageCursor page )\n+    ;\n \n-    abstract long nodeHighMark();\n+    abstract long nodeHighMark()\n+    ;\n \n-    abstract long relationshipHighMark();\n+    abstract long relationshipHighMark()\n+    ;\n \n-    abstract TextValue string( DefaultPropertyCursor cursor, long reference, PageCursor page );\n+    abstract TextValue string( DefaultPropertyCursor cursor, long reference, PageCursor page )\n+    ;\n \n-    abstract ArrayValue array( DefaultPropertyCursor cursor, long reference, PageCursor page );\n+    abstract ArrayValue array( DefaultPropertyCursor cursor, long reference, PageCursor page )\n+    ;\n \n     @Override\n     public TransactionState txState()\n@@ -772,8 +736,7 @@ abstract class Read implements TxStateHolder,\n         ktx.statementLocks().pessimistic().releaseShared( types, ids );\n     }\n \n-    private void assertIndexOnline( IndexReference index )\n-            throws IndexNotFoundKernelException, IndexBrokenKernelException\n+    private void assertIndexOnline( IndexReference index ) throws IndexNotFoundKernelException, IndexBrokenKernelException\n     {\n         switch ( indexGetState( index ) )\n         {\n@@ -784,24 +747,20 @@ abstract class Read implements TxStateHolder,\n         }\n     }\n \n-    private void assertPredicatesMatchSchema( IndexReference index, IndexQuery.ExactPredicate[] predicates )\n-            throws IndexNotApplicableKernelException\n+    private void assertPredicatesMatchSchema( IndexReference index, IndexQuery.ExactPredicate[] predicates ) throws IndexNotApplicableKernelException\n     {\n         int[] propertyIds = index.properties();\n         if ( propertyIds.length != predicates.length )\n         {\n-            throw new IndexNotApplicableKernelException(\n-                    format( \"The index specifies %d properties, but only %d lookup predicates were given.\",\n-                            propertyIds.length, predicates.length ) );\n+            throw new IndexNotApplicableKernelException( format( \"The index specifies %d properties, but only %d lookup predicates were given.\", propertyIds.length, predicates.length ) );\n         }\n+\n         for ( int i = 0; i < predicates.length; i++ )\n         {\n-            if ( predicates[i].propertyKeyId() != propertyIds[i] )\n+            if ( predicates[ i].propertyKeyId() != propertyIds[ i] )\n             {\n-                throw new IndexNotApplicableKernelException(\n-                        format( \"The index has the property id %d in position %d, but the lookup property id was %d.\",\n-                                propertyIds[i], i, predicates[i].propertyKeyId() ) );\n+                throw new IndexNotApplicableKernelException( format( \"The index has the property id %d in position %d, but the lookup property id was %d.\", propertyIds[ i], i, predicates[ i].propertyKeyId() ) );\n             }\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 192
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4355",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "50",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "139",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "141",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "158",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "158",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "176",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "176",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "179",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "179",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "182",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "182",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "182",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "185",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "190",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "190",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "193",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "193",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "193",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "196",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "196",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "196",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "199",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "199",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "199",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "202",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "202",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "202",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "205",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "240",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "240",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "243",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "243",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "251",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "251",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "283",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "283",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "301",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "301",
                    "column": "108",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "304",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "304",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "310",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "310",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "313",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "313",
                    "column": "137",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "320",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "320",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "323",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "323",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "326",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "326",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "327",
                    "column": "111",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "329",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "329",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "332",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "340",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "340",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "343",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "343",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "346",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "346",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "347",
                    "column": "111",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "356",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "356",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "359",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "359",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "366",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "366",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "379",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "379",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "382",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "382",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "385",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "385",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "387",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "387",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "394",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "394",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "401",
                    "column": "60",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "401",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "405",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "405",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "407",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "407",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "408",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "408",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "408",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "411",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "411",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "411",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "414",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "423",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "423",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "428",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "428",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "431",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "431",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "435",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "435",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "435",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "437",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "437",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "440",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "440",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "440",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "443",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "447",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "447",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "451",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "451",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "453",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "454",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "456",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "458",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "458",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "460",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "460",
                    "column": "138",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "461",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "461",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "461",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "463",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "463",
                    "column": "146",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "464",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "464",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "464",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "466",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "466",
                    "column": "149",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "467",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "467",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "467",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "470",
                    "column": "125",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "472",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "472",
                    "column": "119",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "475",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "475",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "477",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "478",
                    "column": "138",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "486",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "486",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "491",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "491",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "493",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "493",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "495",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "495",
                    "column": "119",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "496",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "496",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "496",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "498",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "498",
                    "column": "109",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "499",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "518",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "518",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "520",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "520",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "551",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "551",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "553",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "553",
                    "column": "112",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "558",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "558",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "565",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "565",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "577",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "577",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "579",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "579",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "582",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "582",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "582",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "585",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "587",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "587",
                    "column": "107",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "591",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "591",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "593",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "593",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "596",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "596",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "596",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "599",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "599",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "599",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "602",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "604",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "604",
                    "column": "107",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "608",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "608",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "610",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "610",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "613",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "613",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "613",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "616",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "618",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "618",
                    "column": "107",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "622",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "622",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "624",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "624",
                    "column": "109",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "627",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "627",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "632",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "632",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "632",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "634",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "634",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "638",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "638",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "640",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "640",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "642",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "642",
                    "column": "114",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4355/PointValue.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4355/PointValue.java\nindex 7086d5f35e5..ee8ea7689c3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4355/PointValue.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4355/PointValue.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.values.storable;\n \n import java.util.Arrays;\n@@ -41,636 +42,605 @@ import static java.util.Collections.singletonList;\n \n public class PointValue extends ScalarValue implements Point, Comparable<PointValue>\n {\n-    public static String[] ALLOWED_KEYS = new String[]{\"crs\", \"x\", \"y\", \"z\", \"longitude\", \"latitude\", \"height\", \"srid\"};\n-\n-    private CoordinateReferenceSystem crs;\n-    private double[] coordinate;\n-\n-    PointValue( CoordinateReferenceSystem crs, double... coordinate )\n-    {\n-        this.crs = crs;\n-        this.coordinate = coordinate;\n-        for ( double c : coordinate )\n-        {\n-            if ( !Double.isFinite( c ) )\n-            {\n-                throw new InvalidValuesArgumentException( \"Cannot create a point with non-finite coordinate values: \" + Arrays.toString(coordinate) );\n-            }\n-        }\n-    }\n-\n-    @Override\n-    public <E extends Exception> void writeTo( ValueWriter<E> writer ) throws E\n-    {\n-        writer.writePoint( getCoordinateReferenceSystem(), coordinate );\n-    }\n-\n-    @Override\n-    public String prettyPrint()\n-    {\n-        PrettyPrinter prettyPrinter = new PrettyPrinter();\n-        this.writeTo( prettyPrinter );\n-        return prettyPrinter.value();\n-    }\n-\n-    @Override\n-    public ValueGroup valueGroup()\n-    {\n-        return ValueGroup.GEOMETRY;\n-    }\n-\n-    @Override\n-    public NumberType numberType()\n-    {\n-        return NumberType.NO_NUMBER;\n-    }\n+  public static String[] ALLOWED_KEYS = new String[] {\"crs\", \"x\", \"y\", \"z\", \"longitude\", \"latitude\", \"height\", \"srid\"};\n \n-    @Override\n-    public boolean equals( Value other )\n-    {\n-        if ( other instanceof PointValue )\n-        {\n-            PointValue pv = (PointValue) other;\n-            return Arrays.equals( this.coordinate, pv.coordinate ) && this.getCoordinateReferenceSystem().equals( pv.getCoordinateReferenceSystem() );\n-        }\n-        return false;\n-    }\n+  private CoordinateReferenceSystem crs;\n+  private double[] coordinate;\n \n-    public boolean equals( Point other )\n+  PointValue(CoordinateReferenceSystem crs, double... coordinate)\n+  {\n+    this.crs = crs;\n+    this.coordinate = coordinate;\n+    for (double c : coordinate)\n     {\n-        if ( !other.getCRS().getHref().equals( this.getCRS().getHref() ) )\n-        {\n-            return false;\n-        }\n-        // TODO: This can be an assert\n-        List<Double> otherCoordinate = other.getCoordinate().getCoordinate();\n-        if ( otherCoordinate.size() != this.coordinate.length )\n-        {\n-            return false;\n-        }\n-        for ( int i = 0; i < this.coordinate.length; i++ )\n-        {\n-            if ( otherCoordinate.get( i ) != this.coordinate[i] )\n-            {\n-                return false;\n-            }\n-        }\n-        return true;\n+      if (!Double.isFinite(c))\n+      {\n+        throw new InvalidValuesArgumentException(\"Cannot create a point with non-finite coordinate values: \" + Arrays.toString(coordinate));\n+      }\n     }\n+  }\n \n-    @Override\n-    public boolean eq( Object other )\n-    {\n-        return other != null && ((other instanceof Value && equals( (Value) other )) || (other instanceof Point && equals( (Point) other )));\n-    }\n+  @Override\n+  public <E extends Exception> void writeTo(ValueWriter<E> writer) throws E\n+  {\n+    writer.writePoint(getCoordinateReferenceSystem(), coordinate);\n+  }\n \n-    @Override\n-    public int compareTo( PointValue other )\n-    {\n-        int cmpCRS = this.crs.getCode() - other.crs.getCode();\n-        if ( cmpCRS != 0 )\n-        {\n-            return cmpCRS;\n-        }\n+  @Override\n+  public String prettyPrint()\n+  {\n+    PrettyPrinter prettyPrinter = new PrettyPrinter();\n+    this.writeTo(prettyPrinter);\n+    return prettyPrinter.value();\n+  }\n \n-        // TODO: This is unnecessary and can be an assert. Is it even correct? This implies e.g. that all 2D points are before all 3D regardless of x and y\n-        if ( this.coordinate.length > other.coordinate.length )\n-        {\n-            return 1;\n-        }\n-        else if ( this.coordinate.length < other.coordinate.length )\n-        {\n-            return -1;\n-        }\n+  @Override\n+  public ValueGroup valueGroup()\n+  {\n+    return ValueGroup.GEOMETRY;\n+  }\n \n-        for ( int i = 0; i < coordinate.length; i++ )\n-        {\n-            int cmpVal = Double.compare( this.coordinate[i], other.coordinate[i] );\n-            if ( cmpVal != 0 )\n-            {\n-                return cmpVal;\n-            }\n-        }\n-        return 0;\n-    }\n+  @Override\n+  public NumberType numberType()\n+  {\n+    return NumberType.NO_NUMBER;\n+  }\n \n-    @Override\n-    int unsafeCompareTo( Value otherValue )\n+  @Override\n+  public boolean equals(Value other)\n+  {\n+    if (other instanceof PointValue)\n     {\n-        return compareTo( (PointValue) otherValue );\n+      PointValue pv = (PointValue) other;\n+      return Arrays.equals(this.coordinate, pv.coordinate) && this.getCoordinateReferenceSystem().equals(pv.getCoordinateReferenceSystem());\n     }\n+    return false;\n+  }\n \n-    @Override\n-    Comparison unsafeTernaryCompareTo( Value otherValue )\n+  public boolean equals(Point other)\n+  {\n+    if (!other.getCRS().getHref().equals(this.getCRS().getHref()))\n     {\n-        PointValue other = (PointValue) otherValue;\n-\n-        if ( this.crs.getCode() != other.crs.getCode() || this.coordinate.length != other.coordinate.length )\n-        {\n-            return Comparison.UNDEFINED;\n-        }\n-\n-        int eq = 0;\n-        int gt = 0;\n-        int lt = 0;\n-        for ( int i = 0; i < coordinate.length; i++ )\n-        {\n-            int cmpVal = Double.compare( this.coordinate[i], other.coordinate[i] );\n-            if ( cmpVal > 0 )\n-            {\n-                gt++;\n-            }\n-            else if ( cmpVal < 0 )\n-            {\n-                lt++;\n-            }\n-            else\n-            {\n-                eq++;\n-            }\n-        }\n-        if ( eq == coordinate.length )\n-        {\n-            return Comparison.EQUAL;\n-        }\n-        else if ( gt == coordinate.length )\n-        {\n-            return Comparison.GREATER_THAN;\n-        }\n-        else if ( lt == coordinate.length )\n-        {\n-            return Comparison.SMALLER_THAN;\n-        }\n-        else if ( lt == 0 )\n-        {\n-            return Comparison.GREATER_THAN_AND_EQUAL;\n-        }\n-        else if ( gt == 0 )\n-        {\n-            return Comparison.SMALLER_THAN_AND_EQUAL;\n-        }\n-        else\n-        {\n-            return Comparison.UNDEFINED;\n-        }\n+      return false;\n     }\n-\n-    @Override\n-    public Point asObjectCopy()\n+    // TODO: This can be an assert\n+    List<Double> otherCoordinate = other.getCoordinate().getCoordinate();\n+    if (otherCoordinate.size() != this.coordinate.length)\n     {\n-        return this;\n+      return false;\n     }\n-\n-    public CoordinateReferenceSystem getCoordinateReferenceSystem()\n+    for (int i = 0; i < this.coordinate.length; i++)\n     {\n-        return crs;\n+      if (otherCoordinate.get(i) != this.coordinate[i])\n+      {\n+        return false;\n+      }\n     }\n+    return true;\n+  }\n \n-    /*\n-     * Consumers must not modify the returned array.\n-     */\n-    public double[] coordinate()\n-    {\n-        return this.coordinate;\n-    }\n+  @Override\n+  public boolean eq(Object other)\n+  {\n+    return other != null && ((other instanceof Value && equals((Value) other)) || (other instanceof Point && equals((Point) other)));\n+  }\n \n-    @Override\n-    public int computeHash()\n+  @Override\n+  public int compareTo(PointValue other)\n+  {\n+    int cmpCRS = this.crs.getCode() - other.crs.getCode();\n+    if (cmpCRS != 0)\n     {\n-        int result = 1;\n-        result = 31 * result + NumberValues.hash( crs.getCode() );\n-        result = 31 * result + NumberValues.hash( coordinate );\n-        return result;\n+      return cmpCRS;\n     }\n \n-    @Override\n-    public long updateHash( HashFunction hashFunction, long hash )\n+    // TODO: This is unnecessary and can be an assert. Is it even correct? This implies e.g. that all 2D points are before all 3D regardless of x and y\n+    if (this.coordinate.length > other.coordinate.length)\n     {\n-        hash = hashFunction.update( hash, crs.getCode() );\n-        for ( double v : coordinate )\n-        {\n-            hash = hashFunction.update( hash, Double.doubleToLongBits( v ) );\n-        }\n-        return hash;\n-    }\n-\n-    @Override\n-    public <T> T map( ValueMapper<T> mapper )\n+      return 1;\n+    } else if (this.coordinate.length < other.coordinate.length)\n     {\n-        return mapper.mapPoint( this );\n+      return -1;\n     }\n \n-    @Override\n-    public String toString()\n+    for (int i = 0; i < coordinate.length; i++)\n     {\n-        String coordString = coordinate.length == 2 ? format( \"x: %s, y: %s\", coordinate[0], coordinate[1] )\n-                                                    : format( \"x: %s, y: %s, z: %s\", coordinate[0], coordinate[1], coordinate[2] );\n-        return format( \"point({%s, crs: '%s'})\", coordString, getCoordinateReferenceSystem().getName() ); //TODO: Use getTypeName -> Breaking change\n+      int cmpVal = Double.compare(this.coordinate[i], other.coordinate[i]);\n+      if (cmpVal != 0)\n+      {\n+        return cmpVal;\n+      }\n     }\n+    return 0;\n+  }\n \n-    @Override\n-    public String getTypeName()\n-    {\n-        return \"Point\";\n-    }\n+  @Override\n+  int unsafeCompareTo(Value otherValue)\n+  {\n+    return compareTo((PointValue) otherValue);\n+  }\n \n-    /**\n-     * The string representation of this object when indexed in string-only indexes, like lucene, for equality search only. This should normally only\n-     * happen when points are part of composite indexes, because otherwise they are indexed in the spatial index.\n-     */\n-    public String toIndexableString()\n-    {\n-        CoordinateReferenceSystem crs = getCoordinateReferenceSystem();\n-        return format( \"P:%d-%d%s\", crs.getTable().getTableId(), crs.getCode(), Arrays.toString( coordinate ) );\n-    }\n+  @Override\n+  Comparison unsafeTernaryCompareTo(Value otherValue)\n+  {\n+    PointValue other = (PointValue) otherValue;\n \n-    @Override\n-    public List<Coordinate> getCoordinates()\n+    if (this.crs.getCode() != other.crs.getCode() || this.coordinate.length != other.coordinate.length)\n     {\n-        return singletonList( new Coordinate( coordinate ) );\n+      return Comparison.UNDEFINED;\n     }\n \n+    int eq = 0;\n+    int gt = 0;\n+    int lt = 0;\n+    for (int i = 0; i < coordinate.length; i++)\n+    {\n+      int cmpVal = Double.compare(this.coordinate[i], other.coordinate[i]);\n+      if (cmpVal > 0)\n+      {\n+        gt++;\n+      } else if (cmpVal < 0)\n+      {\n+        lt++;\n+      } else\n+      {\n+        eq++;\n+      }\n+    }\n+    if (eq == coordinate.length)\n+    {\n+      return Comparison.EQUAL;\n+    } else if (gt == coordinate.length)\n+    {\n+      return Comparison.GREATER_THAN;\n+    } else if (lt == coordinate.length)\n+    {\n+      return Comparison.SMALLER_THAN;\n+    } else if (lt == 0)\n+    {\n+      return Comparison.GREATER_THAN_AND_EQUAL;\n+    } else if (gt == 0)\n+    {\n+      return Comparison.SMALLER_THAN_AND_EQUAL;\n+    } else\n+    {\n+      return Comparison.UNDEFINED;\n+    }\n+  }\n+\n+  @Override\n+  public Point asObjectCopy()\n+  {\n+    return this;\n+  }\n+\n+  public CoordinateReferenceSystem getCoordinateReferenceSystem()\n+  {\n+    return crs;\n+  }\n+\n+  /*\n+   * Consumers must not modify the returned array.\n+   */\n+  public double[] coordinate()\n+  {\n+    return this.coordinate;\n+  }\n+\n+  @Override\n+  public int computeHash()\n+  {\n+    int result = 1;\n+    result = 31 * result + NumberValues.hash(crs.getCode());\n+    result = 31 * result + NumberValues.hash(coordinate);\n+    return result;\n+  }\n+\n+  @Override\n+  public long updateHash(HashFunction hashFunction, long hash)\n+  {\n+    hash = hashFunction.update(hash, crs.getCode());\n+    for (double v : coordinate)\n+    {\n+      hash = hashFunction.update(hash, Double.doubleToLongBits(v));\n+    }\n+    return hash;\n+  }\n+\n+  @Override\n+  public <T> T map(ValueMapper<T> mapper)\n+  {\n+    return mapper.mapPoint(this);\n+  }\n+\n+  @Override\n+  public String toString()\n+  {\n+    String coordString = coordinate.length == 2 ? format(\"x: %s, y: %s\", coordinate[0], coordinate[1])\n+        : format(\"x: %s, y: %s, z: %s\", coordinate[0], coordinate[1], coordinate[2]);\n+    return format(\"point({%s, crs: '%s'})\", coordString, getCoordinateReferenceSystem().getName()); //TODO: Use getTypeName -> Breaking change\n+  }\n+\n+  @Override\n+  public String getTypeName()\n+  {\n+    return \"Point\";\n+  }\n+\n+  /**\n+   * The string representation of this object when indexed in string-only indexes, like lucene, for equality search only. This should normally only\n+   * happen when points are part of composite indexes, because otherwise they are indexed in the spatial index.\n+   */\n+  public String toIndexableString()\n+  {\n+    CoordinateReferenceSystem crs = getCoordinateReferenceSystem();\n+    return format(\"P:%d-%d%s\", crs.getTable().getTableId(), crs.getCode(), Arrays.toString(coordinate));\n+  }\n+\n+  @Override\n+  public List<Coordinate> getCoordinates()\n+  {\n+    return singletonList(new Coordinate(coordinate));\n+  }\n+\n+  @Override\n+  public CRS getCRS()\n+  {\n+    return crs;\n+  }\n+\n+  /**\n+   * Checks if this point is greater than (or equal) to lower and smaller than (or equal) to upper.\n+   *\n+   * @param lower        point this value should be greater than\n+   * @param includeLower governs if the lower comparison should be inclusive\n+   * @param upper        point this value should be smaller than\n+   * @param includeUpper governs if the upper comparison should be inclusive\n+   * @return true if this value is within the described range\n+   */\n+  public Boolean withinRange(PointValue lower, boolean includeLower, PointValue upper, boolean includeUpper)\n+  {\n+    // Unbounded\n+    if (lower == null && upper == null)\n+    {\n+      return true;\n+    }\n+\n+    // Invalid bounds (lower greater than upper)\n+    if (lower != null && upper != null)\n+    {\n+      Comparison comparison = lower.unsafeTernaryCompareTo(upper);\n+      if (comparison == Comparison.UNDEFINED || comparison == Comparison.GREATER_THAN || comparison == Comparison.GREATER_THAN_AND_EQUAL)\n+      {\n+        return null;\n+      }\n+    }\n+\n+    // Lower bound defined\n+    if (lower != null)\n+    {\n+      Comparison comparison = this.unsafeTernaryCompareTo(lower);\n+      if (comparison == Comparison.UNDEFINED)\n+      {\n+        return null;\n+      } else if (comparison == Comparison.SMALLER_THAN || comparison == Comparison.SMALLER_THAN_AND_EQUAL ||\n+          (comparison == Comparison.EQUAL || comparison == Comparison.GREATER_THAN_AND_EQUAL) && !includeLower)\n+      {\n+        if (upper != null && this.unsafeTernaryCompareTo(upper) == Comparison.UNDEFINED)\n+        {\n+          return null;\n+        } else\n+        {\n+          return false;\n+        }\n+      }\n+    }\n+\n+    // Upper bound defined\n+    if (upper != null)\n+    {\n+      Comparison comparison = this.unsafeTernaryCompareTo(upper);\n+      if (comparison == Comparison.UNDEFINED)\n+      {\n+        return null;\n+      } else if (comparison == Comparison.GREATER_THAN || comparison == Comparison.GREATER_THAN_AND_EQUAL ||\n+          (comparison == Comparison.EQUAL || comparison == Comparison.SMALLER_THAN_AND_EQUAL) && !includeUpper)\n+      {\n+        return false;\n+      }\n+    }\n+\n+    return true;\n+  }\n+\n+  public static PointValue fromMap(MapValue map)\n+  {\n+    PointBuilder fields = new PointBuilder();\n+    for (Map.Entry<String, AnyValue> entry : map.entrySet())\n+    {\n+      fields.assign(entry.getKey().toLowerCase(), entry.getValue());\n+    }\n+    return fromInputFields(fields);\n+  }\n+\n+  public static PointValue parse(CharSequence text)\n+  {\n+    return PointValue.parse(text, null);\n+  }\n+\n+  /**\n+   * Parses the given text into a PointValue. The information stated in the header is saved into the PointValue\n+   * unless it is overridden by the information in the text\n+   *\n+   * @param text             the input text to be parsed into a PointValue\n+   * @param fieldsFromHeader must be a value obtained from {@link #parseHeaderInformation(CharSequence)} or null\n+   * @return a PointValue instance with information from the {@param fieldsFromHeader} and {@param text}\n+   */\n+  public static PointValue parse(CharSequence text, CSVHeaderInformation fieldsFromHeader)\n+  {\n+    PointBuilder fieldsFromData = parseHeaderInformation(text);\n+    if (fieldsFromHeader != null)\n+    {\n+      // Merge InputFields: Data fields override header fields\n+      if (!(fieldsFromHeader instanceof PointBuilder))\n+      {\n+        throw new IllegalStateException(\"Wrong header information type: \" + fieldsFromHeader);\n+      }\n+      fieldsFromData.mergeWithHeader((PointBuilder) fieldsFromHeader);\n+    }\n+    return fromInputFields(fieldsFromData);\n+  }\n+\n+  public static PointBuilder parseHeaderInformation(CharSequence text)\n+  {\n+    PointBuilder fields = new PointBuilder();\n+    Value.parseHeaderInformation(text, \"point\", fields);\n+    return fields;\n+  }\n+\n+  private static CoordinateReferenceSystem findSpecifiedCRS(PointBuilder fields)\n+  {\n+    String crsValue = fields.crs;\n+    int sridValue = fields.srid;\n+    if (crsValue != null && sridValue != -1)\n+    {\n+      throw new InvalidValuesArgumentException(\"Cannot specify both CRS and SRID\");\n+    } else if (crsValue != null)\n+    {\n+      return CoordinateReferenceSystem.byName(crsValue);\n+    } else if (sridValue != -1)\n+    {\n+      return CoordinateReferenceSystem.get(sridValue);\n+    } else\n+    {\n+      return null;\n+    }\n+  }\n+\n+  /**\n+   * This contains the logic to decide the default coordinate reference system based on the input fields\n+   */\n+  private static PointValue fromInputFields(PointBuilder fields)\n+  {\n+    CoordinateReferenceSystem crs = findSpecifiedCRS(fields);\n+    double[] coordinates;\n+\n+    if (fields.x != null && fields.y != null)\n+    {\n+      coordinates = fields.z != null ? new double[] {fields.x, fields.y, fields.z} : new double[] {fields.x, fields.y};\n+      if (crs == null)\n+      {\n+        crs = coordinates.length == 3 ? CoordinateReferenceSystem.Cartesian_3D : CoordinateReferenceSystem.Cartesian;\n+      }\n+    } else if (fields.latitude != null && fields.longitude != null)\n+    {\n+      if (fields.z != null)\n+      {\n+        coordinates = new double[] {fields.longitude, fields.latitude, fields.z};\n+      } else if (fields.height != null)\n+      {\n+        coordinates = new double[] {fields.longitude, fields.latitude, fields.height};\n+      } else\n+      {\n+        coordinates = new double[] {fields.longitude, fields.latitude};\n+      }\n+      if (crs == null)\n+      {\n+        crs = coordinates.length == 3 ? CoordinateReferenceSystem.WGS84_3D : CoordinateReferenceSystem.WGS84;\n+      }\n+      if (!crs.isGeographic())\n+      {\n+        throw new InvalidValuesArgumentException(\"Geographic points does not support coordinate reference system: \" + crs +\n+            \". This is set either in the csv header or the actual data column\");\n+      }\n+    } else\n+    {\n+      if (crs == CoordinateReferenceSystem.Cartesian)\n+      {\n+        throw new InvalidValuesArgumentException(\"A \" + CoordinateReferenceSystem.Cartesian.getName() + \" point must contain 'x' and 'y'\");\n+      } else if (crs == CoordinateReferenceSystem.Cartesian_3D)\n+      {\n+        throw new InvalidValuesArgumentException(\"A \" + CoordinateReferenceSystem.Cartesian_3D.getName() + \" point must contain 'x', 'y' and 'z'\");\n+      } else if (crs == CoordinateReferenceSystem.WGS84)\n+      {\n+        throw new InvalidValuesArgumentException(\"A \" + CoordinateReferenceSystem.WGS84.getName() + \" point must contain 'latitude' and 'longitude'\");\n+      } else if (crs == CoordinateReferenceSystem.WGS84_3D)\n+      {\n+        throw new InvalidValuesArgumentException(\n+            \"A \" + CoordinateReferenceSystem.WGS84_3D.getName() + \" point must contain 'latitude', 'longitude' and 'height'\");\n+      }\n+      throw new InvalidValuesArgumentException(\"A point must contain either 'x' and 'y' or 'latitude' and 'longitude'\");\n+    }\n+\n+    if (crs.getDimension() != coordinates.length)\n+    {\n+      throw new InvalidValuesArgumentException(\"Cannot create point with \" + crs.getDimension() + \"D coordinate reference system and \"\n+          + coordinates.length + \" coordinates. Please consider using equivalent \" + coordinates.length + \"D coordinate reference system\");\n+    }\n+    return Values.pointValue(crs, coordinates);\n+  }\n+\n+  /**\n+   * For accessors from cypher.\n+   */\n+  public Value get(String fieldName)\n+  {\n+    return PointFields.fromName(fieldName).get(this);\n+  }\n+\n+  DoubleValue getNthCoordinate(int n, String fieldName, boolean onlyGeographic)\n+  {\n+    if (onlyGeographic && !this.getCoordinateReferenceSystem().isGeographic())\n+    {\n+      throw new InvalidValuesArgumentException(\"Field: \" + fieldName + \" is not available on cartesian point: \" + this);\n+    } else if (n >= this.coordinate().length)\n+    {\n+      throw new InvalidValuesArgumentException(\"Field: \" + fieldName + \" is not available on point: \" + this);\n+    } else\n+    {\n+      return Values.doubleValue(coordinate[n]);\n+    }\n+  }\n+\n+  private static class PointBuilder implements CSVHeaderInformation\n+  {\n+    private String crs;\n+    private Double x;\n+    private Double y;\n+    private Double z;\n+    private Double longitude;\n+    private Double latitude;\n+    private Double height;\n+    private int srid = -1;\n+    private boolean allowOpenMaps = true;\n+\n     @Override\n-    public CRS getCRS()\n-    {\n-        return crs;\n-    }\n-\n-    /**\n-     * Checks if this point is greater than (or equal) to lower and smaller than (or equal) to upper.\n-     *\n-     * @param lower point this value should be greater than\n-     * @param includeLower governs if the lower comparison should be inclusive\n-     * @param upper point this value should be smaller than\n-     * @param includeUpper governs if the upper comparison should be inclusive\n-     * @return true if this value is within the described range\n-     */\n-    public Boolean withinRange( PointValue lower, boolean includeLower, PointValue upper, boolean includeUpper )\n-    {\n-        // Unbounded\n-        if ( lower == null && upper == null )\n-        {\n-            return true;\n-        }\n-\n-        // Invalid bounds (lower greater than upper)\n-        if ( lower != null && upper != null )\n-        {\n-            Comparison comparison = lower.unsafeTernaryCompareTo( upper );\n-            if ( comparison == Comparison.UNDEFINED || comparison == Comparison.GREATER_THAN || comparison == Comparison.GREATER_THAN_AND_EQUAL )\n-            {\n-                return null;\n-            }\n-        }\n-\n-        // Lower bound defined\n-        if ( lower != null )\n-        {\n-            Comparison comparison = this.unsafeTernaryCompareTo( lower );\n-            if ( comparison == Comparison.UNDEFINED )\n-            {\n-                return null;\n-            }\n-            else if ( comparison == Comparison.SMALLER_THAN || comparison == Comparison.SMALLER_THAN_AND_EQUAL ||\n-                    (comparison == Comparison.EQUAL || comparison == Comparison.GREATER_THAN_AND_EQUAL) && !includeLower )\n-            {\n-                if ( upper != null && this.unsafeTernaryCompareTo( upper ) == Comparison.UNDEFINED )\n-                {\n-                    return null;\n-                }\n-                else\n-                {\n-                    return false;\n-                }\n-            }\n-        }\n-\n-        // Upper bound defined\n-        if ( upper != null )\n-        {\n-            Comparison comparison = this.unsafeTernaryCompareTo( upper );\n-            if ( comparison == Comparison.UNDEFINED )\n-            {\n-                return null;\n-            }\n-            else if ( comparison == Comparison.GREATER_THAN || comparison == Comparison.GREATER_THAN_AND_EQUAL ||\n-                    (comparison == Comparison.EQUAL || comparison == Comparison.SMALLER_THAN_AND_EQUAL) && !includeUpper )\n-            {\n-                return false;\n-            }\n-        }\n-\n-        return true;\n-    }\n-\n-    public static PointValue fromMap( MapValue map )\n-    {\n-        PointBuilder fields = new PointBuilder();\n-        for ( Map.Entry<String,AnyValue> entry : map.entrySet() )\n-        {\n-            fields.assign( entry.getKey().toLowerCase(), entry.getValue() );\n-        }\n-        return fromInputFields( fields );\n-    }\n-\n-    public static PointValue parse( CharSequence text )\n-    {\n-        return PointValue.parse( text, null );\n-    }\n-\n-    /**\n-     * Parses the given text into a PointValue. The information stated in the header is saved into the PointValue\n-     * unless it is overridden by the information in the text\n-     *\n-     * @param text the input text to be parsed into a PointValue\n-     * @param fieldsFromHeader must be a value obtained from {@link #parseHeaderInformation(CharSequence)} or null\n-     * @return a PointValue instance with information from the {@param fieldsFromHeader} and {@param text}\n-     */\n-    public static PointValue parse( CharSequence text, CSVHeaderInformation fieldsFromHeader )\n-    {\n-        PointBuilder fieldsFromData = parseHeaderInformation( text );\n-        if ( fieldsFromHeader != null )\n-        {\n-            // Merge InputFields: Data fields override header fields\n-            if ( !(fieldsFromHeader instanceof PointBuilder) )\n-            {\n-                throw new IllegalStateException( \"Wrong header information type: \" + fieldsFromHeader );\n-            }\n-            fieldsFromData.mergeWithHeader( (PointBuilder) fieldsFromHeader );\n-        }\n-        return fromInputFields( fieldsFromData );\n-    }\n-\n-    public static PointBuilder parseHeaderInformation( CharSequence text )\n-    {\n-        PointBuilder fields = new PointBuilder();\n-        Value.parseHeaderInformation( text, \"point\", fields );\n-        return fields;\n-    }\n-\n-    private static CoordinateReferenceSystem findSpecifiedCRS( PointBuilder fields )\n-    {\n-        String crsValue = fields.crs;\n-        int sridValue = fields.srid;\n-        if ( crsValue != null && sridValue != -1 )\n-        {\n-            throw new InvalidValuesArgumentException( \"Cannot specify both CRS and SRID\" );\n-        }\n-        else if ( crsValue != null )\n-        {\n-            return CoordinateReferenceSystem.byName( crsValue );\n-        }\n-        else if ( sridValue != -1 )\n-        {\n-            return CoordinateReferenceSystem.get( sridValue );\n-        }\n-        else\n-        {\n-            return null;\n-        }\n-    }\n-\n-    /**\n-     * This contains the logic to decide the default coordinate reference system based on the input fields\n-     */\n-    private static PointValue fromInputFields( PointBuilder fields )\n-    {\n-        CoordinateReferenceSystem crs = findSpecifiedCRS( fields );\n-        double[] coordinates;\n-\n-        if ( fields.x != null && fields.y != null )\n-        {\n-            coordinates = fields.z != null ? new double[]{fields.x, fields.y, fields.z} : new double[]{fields.x, fields.y};\n-            if ( crs == null )\n-            {\n-                crs = coordinates.length == 3 ? CoordinateReferenceSystem.Cartesian_3D : CoordinateReferenceSystem.Cartesian;\n-            }\n-        }\n-        else if ( fields.latitude != null && fields.longitude != null )\n-        {\n-            if ( fields.z != null )\n-            {\n-                coordinates = new double[]{fields.longitude, fields.latitude, fields.z};\n-            }\n-            else if ( fields.height != null )\n-            {\n-                coordinates = new double[]{fields.longitude, fields.latitude, fields.height};\n-            }\n-            else\n-            {\n-                coordinates = new double[]{fields.longitude, fields.latitude};\n-            }\n-            if ( crs == null )\n-            {\n-                crs = coordinates.length == 3 ? CoordinateReferenceSystem.WGS84_3D : CoordinateReferenceSystem.WGS84;\n-            }\n-            if ( !crs.isGeographic() )\n-            {\n-                throw new InvalidValuesArgumentException( \"Geographic points does not support coordinate reference system: \" + crs +\n-                        \". This is set either in the csv header or the actual data column\" );\n-            }\n-        }\n-        else\n-        {\n-            if ( crs == CoordinateReferenceSystem.Cartesian )\n-            {\n-                throw new InvalidValuesArgumentException( \"A \" + CoordinateReferenceSystem.Cartesian.getName() + \" point must contain 'x' and 'y'\" );\n-            }\n-            else if ( crs == CoordinateReferenceSystem.Cartesian_3D )\n-            {\n-                throw new InvalidValuesArgumentException( \"A \" + CoordinateReferenceSystem.Cartesian_3D.getName() + \" point must contain 'x', 'y' and 'z'\" );\n-            }\n-            else if ( crs == CoordinateReferenceSystem.WGS84 )\n-            {\n-                throw new InvalidValuesArgumentException( \"A \" + CoordinateReferenceSystem.WGS84.getName() + \" point must contain 'latitude' and 'longitude'\" );\n-            }\n-            else if ( crs == CoordinateReferenceSystem.WGS84_3D )\n-            {\n-                throw new InvalidValuesArgumentException(\n-                        \"A \" + CoordinateReferenceSystem.WGS84_3D.getName() + \" point must contain 'latitude', 'longitude' and 'height'\" );\n-            }\n-            throw new InvalidValuesArgumentException( \"A point must contain either 'x' and 'y' or 'latitude' and 'longitude'\" );\n-        }\n-\n-        if ( crs.getDimension() != coordinates.length )\n-        {\n-            throw new InvalidValuesArgumentException( \"Cannot create point with \" + crs.getDimension() + \"D coordinate reference system and \"\n-                    + coordinates.length + \" coordinates. Please consider using equivalent \" + coordinates.length + \"D coordinate reference system\" );\n-        }\n-        return Values.pointValue( crs, coordinates );\n-    }\n-\n-    /**\n-     * For accessors from cypher.\n-     */\n-    public Value get( String fieldName )\n-    {\n-       return PointFields.fromName( fieldName ).get( this );\n-    }\n-\n-    DoubleValue getNthCoordinate( int n, String fieldName, boolean onlyGeographic )\n-    {\n-        if ( onlyGeographic && !this.getCoordinateReferenceSystem().isGeographic() )\n-        {\n-            throw new InvalidValuesArgumentException( \"Field: \" + fieldName + \" is not available on cartesian point: \" + this );\n-        }\n-        else if ( n >= this.coordinate().length )\n-        {\n-            throw new InvalidValuesArgumentException( \"Field: \" + fieldName + \" is not available on point: \" + this );\n-        }\n-        else\n-        {\n-            return Values.doubleValue( coordinate[n] );\n-        }\n-    }\n-\n-    private static class PointBuilder implements CSVHeaderInformation\n-    {\n-        private String crs;\n-        private Double x;\n-        private Double y;\n-        private Double z;\n-        private Double longitude;\n-        private Double latitude;\n-        private Double height;\n-        private int srid = -1;\n-        private boolean allowOpenMaps = true;\n-\n-        @Override\n-        public void assign( String key, Object value )\n-        {\n-            switch ( key.toLowerCase() )\n-            {\n-            case \"crs\":\n-                checkUnassigned( crs, key );\n-                assignTextValue( key, value, str -> crs = quotesPattern.matcher( str ).replaceAll( \"\" ) );\n-                break;\n-            case \"x\":\n-                checkUnassigned( x, key );\n-                assignFloatingPoint( key, value, i -> x = i );\n-                break;\n-            case \"y\":\n-                checkUnassigned( y, key );\n-                assignFloatingPoint( key, value, i -> y = i );\n-                break;\n-            case \"z\":\n-                checkUnassigned( z, key );\n-                assignFloatingPoint( key, value, i -> z = i );\n-                break;\n-            case \"longitude\":\n-                checkUnassigned( longitude, key );\n-                assignFloatingPoint( key, value, i -> longitude = i );\n-                break;\n-            case \"latitude\":\n-                checkUnassigned( latitude, key );\n-                assignFloatingPoint( key, value, i -> latitude = i );\n-                break;\n-            case \"height\":\n-                checkUnassigned( height, key );\n-                assignFloatingPoint( key, value, i -> height = i );\n-                break;\n-            case \"srid\":\n-                if ( srid != -1 )\n-                {\n-                    throw new InvalidValuesArgumentException( String.format( \"Duplicate field '%s' is not allowed.\", key ) );\n-                }\n-                assignIntegral( key, value, i -> srid = i );\n-                break;\n-            default:\n-                if ( !allowOpenMaps )\n-                {\n-                    throwOnUnrecognizedKey( key );\n-                }\n-            }\n-        }\n-\n-        void mergeWithHeader( PointBuilder header )\n-        {\n-            this.crs = this.crs == null ? header.crs : this.crs;\n-            this.x = this.x == null ? header.x : this.x;\n-            this.y = this.y == null ? header.y : this.y;\n-            this.z = this.z == null ? header.z : this.z;\n-            this.longitude = this.longitude == null ? header.longitude : this.longitude;\n-            this.latitude = this.latitude == null ? header.latitude : this.latitude;\n-            this.height = this.height == null ? header.height : this.height;\n-            this.srid = this.srid == -1 ? header.srid : this.srid;\n-        }\n-\n-        private void assignTextValue( String key, Object value, Consumer<String> assigner )\n-        {\n-            if ( value instanceof String )\n-            {\n-                assigner.accept( (String) value );\n-            }\n-            else if ( value instanceof TextValue )\n-            {\n-                assigner.accept( ((TextValue) value).stringValue() );\n-            }\n-            else\n-            {\n-                throw new InvalidValuesArgumentException( String.format( \"Cannot assign %s to field %s\", value, key ) );\n-            }\n-        }\n-\n-        private void assignFloatingPoint( String key, Object value, Consumer<Double> assigner )\n-        {\n-            if ( value instanceof String )\n-            {\n-                assigner.accept( assertConvertible( () -> Double.parseDouble( (String) value ) ) );\n-            }\n-            else if ( value instanceof IntegralValue )\n-            {\n-                assigner.accept( ((IntegralValue) value).doubleValue() );\n-            }\n-            else if ( value instanceof FloatingPointValue )\n-            {\n-                assigner.accept( ((FloatingPointValue) value).doubleValue() );\n-            }\n-            else\n-            {\n-                throw new InvalidValuesArgumentException( String.format( \"Cannot assign %s to field %s\", value, key ) );\n-            }\n-        }\n-\n-        private void assignIntegral( String key, Object value, Consumer<Integer> assigner )\n-        {\n-            if ( value instanceof String )\n-            {\n-                assigner.accept( assertConvertible( () -> Integer.parseInt( (String) value ) ) );\n-            }\n-            else if ( value instanceof IntegralValue )\n-            {\n-                assigner.accept( (int) ((IntegralValue) value).longValue() );\n-            }\n-            else\n-            {\n-                throw new InvalidValuesArgumentException( String.format( \"Cannot assign %s to field %s\", value, key ) );\n-            }\n-        }\n-\n-        private void throwOnUnrecognizedKey( String key )\n-        {\n-            throw new InvalidValuesArgumentException( String.format( \"Unknown key '%s' for creating new point\", key ) );\n-        }\n-\n-        private <T extends Number> T assertConvertible( Supplier<T> func )\n-        {\n-            try\n-            {\n-                return func.get();\n-            }\n-            catch ( NumberFormatException e )\n-            {\n-                throw new InvalidValuesArgumentException( e.getMessage(), e );\n-            }\n-        }\n-\n-        private void checkUnassigned( Object key, String fieldName )\n-        {\n-            if ( key != null )\n-            {\n-                throw new InvalidValuesArgumentException( String.format( \"Duplicate field '%s' is not allowed.\", fieldName ) );\n-            }\n-        }\n-    }\n+    public void assign(String key, Object value)\n+    {\n+      switch (key.toLowerCase())\n+      {\n+        case \"crs\":\n+          checkUnassigned(crs, key);\n+          assignTextValue(key, value, str -> crs = quotesPattern.matcher(str).replaceAll(\"\"));\n+          break;\n+        case \"x\":\n+          checkUnassigned(x, key);\n+          assignFloatingPoint(key, value, i -> x = i);\n+          break;\n+        case \"y\":\n+          checkUnassigned(y, key);\n+          assignFloatingPoint(key, value, i -> y = i);\n+          break;\n+        case \"z\":\n+          checkUnassigned(z, key);\n+          assignFloatingPoint(key, value, i -> z = i);\n+          break;\n+        case \"longitude\":\n+          checkUnassigned(longitude, key);\n+          assignFloatingPoint(key, value, i -> longitude = i);\n+          break;\n+        case \"latitude\":\n+          checkUnassigned(latitude, key);\n+          assignFloatingPoint(key, value, i -> latitude = i);\n+          break;\n+        case \"height\":\n+          checkUnassigned(height, key);\n+          assignFloatingPoint(key, value, i -> height = i);\n+          break;\n+        case \"srid\":\n+          if (srid != -1)\n+          {\n+            throw new InvalidValuesArgumentException(String.format(\"Duplicate field '%s' is not allowed.\", key));\n+          }\n+          assignIntegral(key, value, i -> srid = i);\n+          break;\n+        default:\n+          if (!allowOpenMaps)\n+          {\n+            throwOnUnrecognizedKey(key);\n+          }\n+      }\n+    }\n+\n+    void mergeWithHeader(PointBuilder header)\n+    {\n+      this.crs = this.crs == null ? header.crs : this.crs;\n+      this.x = this.x == null ? header.x : this.x;\n+      this.y = this.y == null ? header.y : this.y;\n+      this.z = this.z == null ? header.z : this.z;\n+      this.longitude = this.longitude == null ? header.longitude : this.longitude;\n+      this.latitude = this.latitude == null ? header.latitude : this.latitude;\n+      this.height = this.height == null ? header.height : this.height;\n+      this.srid = this.srid == -1 ? header.srid : this.srid;\n+    }\n+\n+    private void assignTextValue(String key, Object value, Consumer<String> assigner)\n+    {\n+      if (value instanceof String)\n+      {\n+        assigner.accept((String) value);\n+      } else if (value instanceof TextValue)\n+      {\n+        assigner.accept(((TextValue) value).stringValue());\n+      } else\n+      {\n+        throw new InvalidValuesArgumentException(String.format(\"Cannot assign %s to field %s\", value, key));\n+      }\n+    }\n+\n+    private void assignFloatingPoint(String key, Object value, Consumer<Double> assigner)\n+    {\n+      if (value instanceof String)\n+      {\n+        assigner.accept(assertConvertible(() -> Double.parseDouble((String) value)));\n+      } else if (value instanceof IntegralValue)\n+      {\n+        assigner.accept(((IntegralValue) value).doubleValue());\n+      } else if (value instanceof FloatingPointValue)\n+      {\n+        assigner.accept(((FloatingPointValue) value).doubleValue());\n+      } else\n+      {\n+        throw new InvalidValuesArgumentException(String.format(\"Cannot assign %s to field %s\", value, key));\n+      }\n+    }\n+\n+    private void assignIntegral(String key, Object value, Consumer<Integer> assigner)\n+    {\n+      if (value instanceof String)\n+      {\n+        assigner.accept(assertConvertible(() -> Integer.parseInt((String) value)));\n+      } else if (value instanceof IntegralValue)\n+      {\n+        assigner.accept((int) ((IntegralValue) value).longValue());\n+      } else\n+      {\n+        throw new InvalidValuesArgumentException(String.format(\"Cannot assign %s to field %s\", value, key));\n+      }\n+    }\n+\n+    private void throwOnUnrecognizedKey(String key)\n+    {\n+      throw new InvalidValuesArgumentException(String.format(\"Unknown key '%s' for creating new point\", key));\n+    }\n+\n+    private <T extends Number> T assertConvertible(Supplier<T> func)\n+    {\n+      try\n+      {\n+        return func.get();\n+      } catch (NumberFormatException e)\n+      {\n+        throw new InvalidValuesArgumentException(e.getMessage(), e);\n+      }\n+    }\n+\n+    private void checkUnassigned(Object key, String fieldName)\n+    {\n+      if (key != null)\n+      {\n+        throw new InvalidValuesArgumentException(String.format(\"Duplicate field '%s' is not allowed.\", fieldName));\n+      }\n+    }\n+  }\n }\n",
            "diff_size": 964
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "137",
                    "column": "36",
                    "severity": "error",
                    "message": "'>' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "267",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 188).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "334",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 217).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "355",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 217).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "471",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 202).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "490",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 173).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "497",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 272).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "644",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4355/PointValue.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4355/PointValue.java\nindex 7086d5f35e5..0bbd2499ea5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4355/PointValue.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4355/PointValue.java\n@@ -121,7 +121,7 @@ public class PointValue extends ScalarValue implements Point, Comparable<PointVa\n     @Override\n     public boolean eq( Object other )\n     {\n-        return other != null && ((other instanceof Value && equals( (Value) other )) || (other instanceof Point && equals( (Point) other )));\n+        return other != null && ((other instanceof Value && equals( (Value) other )) || ( other instanceof Point && equals( (Point) other )));\n     }\n \n     @Override\n@@ -134,7 +134,7 @@ public class PointValue extends ScalarValue implements Point, Comparable<PointVa\n         }\n \n         // TODO: This is unnecessary and can be an assert. Is it even correct? This implies e.g. that all 2D points are before all 3D regardless of x and y\n-        if ( this.coordinate.length > other.coordinate.length )\n+        if ( this.coordinate.length> other.coordinate.length )\n         {\n             return 1;\n         }\n@@ -251,7 +251,8 @@ public class PointValue extends ScalarValue implements Point, Comparable<PointVa\n         {\n             hash = hashFunction.update( hash, Double.doubleToLongBits( v ) );\n         }\n-        return hash;\n+\n+return hash;\n     }\n \n     @Override\n@@ -263,9 +264,8 @@ public class PointValue extends ScalarValue implements Point, Comparable<PointVa\n     @Override\n     public String toString()\n     {\n-        String coordString = coordinate.length == 2 ? format( \"x: %s, y: %s\", coordinate[0], coordinate[1] )\n-                                                    : format( \"x: %s, y: %s, z: %s\", coordinate[0], coordinate[1], coordinate[2] );\n-        return format( \"point({%s, crs: '%s'})\", coordString, getCoordinateReferenceSystem().getName() ); //TODO: Use getTypeName -> Breaking change\n+        String coordString = coordinate.length == 2 ? format( \"x: %s, y: %s\", coordinate[0], coordinate[1] ) : format( \"x: %s, y: %s, z: %s\", coordinate[0], coordinate[1], coordinate[2] );\n+return format( \"point({%s, crs: '%s'})\", coordString, getCoordinateReferenceSystem().getName() ); //TODO: Use getTypeName -> Breaking change\n     }\n \n     @Override\n@@ -331,8 +331,7 @@ public class PointValue extends ScalarValue implements Point, Comparable<PointVa\n             {\n                 return null;\n             }\n-            else if ( comparison == Comparison.SMALLER_THAN || comparison == Comparison.SMALLER_THAN_AND_EQUAL ||\n-                    (comparison == Comparison.EQUAL || comparison == Comparison.GREATER_THAN_AND_EQUAL) && !includeLower )\n+            else if ( comparison == Comparison.SMALLER_THAN || comparison == Comparison.SMALLER_THAN_AND_EQUAL || ( comparison == Comparison.EQUAL || comparison == Comparison.GREATER_THAN_AND_EQUAL) && !includeLower )\n             {\n                 if ( upper != null && this.unsafeTernaryCompareTo( upper ) == Comparison.UNDEFINED )\n                 {\n@@ -353,8 +352,7 @@ public class PointValue extends ScalarValue implements Point, Comparable<PointVa\n             {\n                 return null;\n             }\n-            else if ( comparison == Comparison.GREATER_THAN || comparison == Comparison.GREATER_THAN_AND_EQUAL ||\n-                    (comparison == Comparison.EQUAL || comparison == Comparison.SMALLER_THAN_AND_EQUAL) && !includeUpper )\n+            else if ( comparison == Comparison.GREATER_THAN || comparison == Comparison.GREATER_THAN_AND_EQUAL || ( comparison == Comparison.EQUAL || comparison == Comparison.SMALLER_THAN_AND_EQUAL) && !includeUpper )\n             {\n                 return false;\n             }\n@@ -370,7 +368,8 @@ public class PointValue extends ScalarValue implements Point, Comparable<PointVa\n         {\n             fields.assign( entry.getKey().toLowerCase(), entry.getValue() );\n         }\n-        return fromInputFields( fields );\n+\n+return fromInputFields( fields );\n     }\n \n     public static PointValue parse( CharSequence text )\n@@ -392,13 +391,14 @@ public class PointValue extends ScalarValue implements Point, Comparable<PointVa\n         if ( fieldsFromHeader != null )\n         {\n             // Merge InputFields: Data fields override header fields\n-            if ( !(fieldsFromHeader instanceof PointBuilder) )\n+            if ( !( fieldsFromHeader instanceof PointBuilder) )\n             {\n                 throw new IllegalStateException( \"Wrong header information type: \" + fieldsFromHeader );\n             }\n             fieldsFromData.mergeWithHeader( (PointBuilder) fieldsFromHeader );\n         }\n-        return fromInputFields( fieldsFromData );\n+\n+return fromInputFields( fieldsFromData );\n     }\n \n     public static PointBuilder parseHeaderInformation( CharSequence text )\n@@ -460,15 +460,16 @@ public class PointValue extends ScalarValue implements Point, Comparable<PointVa\n             {\n                 coordinates = new double[]{fields.longitude, fields.latitude};\n             }\n-            if ( crs == null )\n+\n+if ( crs == null )\n             {\n                 crs = coordinates.length == 3 ? CoordinateReferenceSystem.WGS84_3D : CoordinateReferenceSystem.WGS84;\n             }\n-            if ( !crs.isGeographic() )\n+\n+if ( !crs.isGeographic() )\n             {\n-                throw new InvalidValuesArgumentException( \"Geographic points does not support coordinate reference system: \" + crs +\n-                        \". This is set either in the csv header or the actual data column\" );\n-            }\n+                throw new InvalidValuesArgumentException( \"Geographic points does not support coordinate reference system: \" + crs + \". This is set either in the csv header or the actual data column\" );\n+    }\n         }\n         else\n         {\n@@ -486,18 +487,17 @@ public class PointValue extends ScalarValue implements Point, Comparable<PointVa\n             }\n             else if ( crs == CoordinateReferenceSystem.WGS84_3D )\n             {\n-                throw new InvalidValuesArgumentException(\n-                        \"A \" + CoordinateReferenceSystem.WGS84_3D.getName() + \" point must contain 'latitude', 'longitude' and 'height'\" );\n+                throw new InvalidValuesArgumentException( \"A \" + CoordinateReferenceSystem.WGS84_3D.getName() + \" point must contain 'latitude', 'longitude' and 'height'\" );\n             }\n             throw new InvalidValuesArgumentException( \"A point must contain either 'x' and 'y' or 'latitude' and 'longitude'\" );\n         }\n \n         if ( crs.getDimension() != coordinates.length )\n         {\n-            throw new InvalidValuesArgumentException( \"Cannot create point with \" + crs.getDimension() + \"D coordinate reference system and \"\n-                    + coordinates.length + \" coordinates. Please consider using equivalent \" + coordinates.length + \"D coordinate reference system\" );\n+            throw new InvalidValuesArgumentException( \"Cannot create point with \" + crs.getDimension() + \"D coordinate reference system and \" + coordinates.length + \" coordinates. Please consider using equivalent \" + coordinates.length + \"D coordinate reference system\" );\n         }\n-        return Values.pointValue( crs, coordinates );\n+\n+return Values.pointValue( crs, coordinates );\n     }\n \n     /**\n@@ -505,7 +505,7 @@ public class PointValue extends ScalarValue implements Point, Comparable<PointVa\n      */\n     public Value get( String fieldName )\n     {\n-       return PointFields.fromName( fieldName ).get( this );\n+    return PointFields.fromName( fieldName ).get( this );\n     }\n \n     DoubleValue getNthCoordinate( int n, String fieldName, boolean onlyGeographic )\n@@ -574,7 +574,8 @@ public class PointValue extends ScalarValue implements Point, Comparable<PointVa\n                 {\n                     throw new InvalidValuesArgumentException( String.format( \"Duplicate field '%s' is not allowed.\", key ) );\n                 }\n-                assignIntegral( key, value, i -> srid = i );\n+\n+assignIntegral( key, value, i -> srid = i );\n                 break;\n             default:\n                 if ( !allowOpenMaps )\n@@ -640,7 +641,7 @@ public class PointValue extends ScalarValue implements Point, Comparable<PointVa\n             }\n             else if ( value instanceof IntegralValue )\n             {\n-                assigner.accept( (int) ((IntegralValue) value).longValue() );\n+                assigner.accept( ( int) ((IntegralValue) value).longValue() );\n             }\n             else\n             {\n@@ -673,4 +674,4 @@ public class PointValue extends ScalarValue implements Point, Comparable<PointVa\n             }\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 34
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
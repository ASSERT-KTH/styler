{
    "project_name": "wso2-attic-commons",
    "error_id": "183",
    "information": {
        "errors": [
            {
                "line": "62",
                "severity": "error",
                "message": "Line is longer than 120 characters (found 128).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "            ocase.activity = _context.compile(ccase.getActivity());\n            ocase.expression = first ? _context.compileExpr(switchDef.getCondition())\n                    : (ccase.getCondition() == null ? _context.constantExpr(true) : _context.compileExpr(ccase.getCondition()));\n            oswitch.addCase(ocase);\n            first = false;\n        }",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/183/IfGenerator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler/183/IfGenerator.java\nindex 67d136a61c7..eebd822f36c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/183/IfGenerator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler/183/IfGenerator.java\n@@ -59,8 +59,9 @@ class IfGenerator extends DefaultActivityGenerator {\n             OSwitch.OCase ocase = new OSwitch.OCase(_context.getOProcess());\n             ocase.activity = _context.compile(ccase.getActivity());\n             ocase.expression = first ? _context.compileExpr(switchDef.getCondition())\n-                    : (ccase.getCondition() == null ? _context.constantExpr(true) : _context.compileExpr(ccase.getCondition()));\n-            oswitch.addCase(ocase);\n+                    : (ccase.getCondition() == null ? _context.constantExpr(true) :\n+                        _context.compileExpr(ccase.getCondition()));\n+             oswitch.addCase(ocase);\n             first = false;\n         }\n     }\n",
            "diff_size": 3
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/183/IfGenerator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/intellij/183/IfGenerator.java\nindex 67d136a61c7..e28344775c2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/183/IfGenerator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/intellij/183/IfGenerator.java\n@@ -18,7 +18,6 @@\n  */\n \n \n-\n package org.apache.ode.bpel.compiler.v2;\n \n import org.apache.ode.bpel.compiler.api.CompilationException;\n@@ -33,35 +32,36 @@ import org.apache.ode.utils.msg.MessageBundle;\n  * Generates code for the <code>&lt;switch&gt;</code> activities.\n  */\n class IfGenerator extends DefaultActivityGenerator {\n-    private static final IfGeneratorMessages __cmsgs = MessageBundle.getMessages(IfGeneratorMessages.class);\n+  private static final IfGeneratorMessages __cmsgs = MessageBundle.getMessages(IfGeneratorMessages.class);\n \n-    public OActivity newInstance(Activity src) {\n-        return new OSwitch(_context.getOProcess(), _context.getCurrent());\n-    }\n+  public OActivity newInstance(Activity src) {\n+    return new OSwitch(_context.getOProcess(), _context.getCurrent());\n+  }\n \n-    public void compile(OActivity output, Activity src) {\n-        OSwitch oswitch = (OSwitch) output;\n-        IfActivity switchDef = (IfActivity)src;\n+  public void compile(OActivity output, Activity src) {\n+    OSwitch oswitch = (OSwitch) output;\n+    IfActivity switchDef = (IfActivity) src;\n \n-        if (switchDef.getCondition() == null)\n-            throw new CompilationException(__cmsgs.errIfWithNoCondition());\n+    if (switchDef.getCondition() == null) {\n+      throw new CompilationException(__cmsgs.errIfWithNoCondition());\n+    }\n \n-        boolean first = true;\n-        if (switchDef.getActivity() != null) {\n-            OSwitch.OCase ocase = new OSwitch.OCase(_context.getOProcess());\n-            ocase.activity = _context.compile(switchDef.getActivity());\n-            ocase.expression = _context.compileExpr(switchDef.getCondition());\n-            oswitch.addCase(ocase);\n-            first = false;\n-        }\n+    boolean first = true;\n+    if (switchDef.getActivity() != null) {\n+      OSwitch.OCase ocase = new OSwitch.OCase(_context.getOProcess());\n+      ocase.activity = _context.compile(switchDef.getActivity());\n+      ocase.expression = _context.compileExpr(switchDef.getCondition());\n+      oswitch.addCase(ocase);\n+      first = false;\n+    }\n \n-        for (IfActivity.Case ccase : switchDef.getCases()) {\n-            OSwitch.OCase ocase = new OSwitch.OCase(_context.getOProcess());\n-            ocase.activity = _context.compile(ccase.getActivity());\n-            ocase.expression = first ? _context.compileExpr(switchDef.getCondition())\n-                    : (ccase.getCondition() == null ? _context.constantExpr(true) : _context.compileExpr(ccase.getCondition()));\n-            oswitch.addCase(ocase);\n-            first = false;\n-        }\n+    for (IfActivity.Case ccase : switchDef.getCases()) {\n+      OSwitch.OCase ocase = new OSwitch.OCase(_context.getOProcess());\n+      ocase.activity = _context.compile(ccase.getActivity());\n+      ocase.expression = first ? _context.compileExpr(switchDef.getCondition())\n+        : (ccase.getCondition() == null ? _context.constantExpr(true) : _context.compileExpr(ccase.getCondition()));\n+      oswitch.addCase(ocase);\n+      first = false;\n     }\n+  }\n }\n",
            "diff_size": 28
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "59",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 128).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/183/IfGenerator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/naturalize/183/IfGenerator.java\nindex 67d136a61c7..f06519cdda7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/183/IfGenerator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/naturalize/183/IfGenerator.java\n@@ -16,9 +16,6 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-\n-\n-\n package org.apache.ode.bpel.compiler.v2;\n \n import org.apache.ode.bpel.compiler.api.CompilationException;\n@@ -64,4 +61,4 @@ class IfGenerator extends DefaultActivityGenerator {\n             first = false;\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "62",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 128).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/183/IfGenerator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler_random/183/IfGenerator.java\nindex 67d136a61c7..cfe9bd4397c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/183/IfGenerator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler_random/183/IfGenerator.java\n@@ -60,7 +60,7 @@ class IfGenerator extends DefaultActivityGenerator {\n             ocase.activity = _context.compile(ccase.getActivity());\n             ocase.expression = first ? _context.compileExpr(switchDef.getCondition())\n                     : (ccase.getCondition() == null ? _context.constantExpr(true) : _context.compileExpr(ccase.getCondition()));\n-            oswitch.addCase(ocase);\n+                    oswitch.addCase(ocase);\n             first = false;\n         }\n     }\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/183/IfGenerator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler_three_grams/183/IfGenerator.java\nindex 67d136a61c7..eebd822f36c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/183/IfGenerator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler_three_grams/183/IfGenerator.java\n@@ -59,8 +59,9 @@ class IfGenerator extends DefaultActivityGenerator {\n             OSwitch.OCase ocase = new OSwitch.OCase(_context.getOProcess());\n             ocase.activity = _context.compile(ccase.getActivity());\n             ocase.expression = first ? _context.compileExpr(switchDef.getCondition())\n-                    : (ccase.getCondition() == null ? _context.constantExpr(true) : _context.compileExpr(ccase.getCondition()));\n-            oswitch.addCase(ocase);\n+                    : (ccase.getCondition() == null ? _context.constantExpr(true) :\n+                        _context.compileExpr(ccase.getCondition()));\n+             oswitch.addCase(ocase);\n             first = false;\n         }\n     }\n",
            "diff_size": 3
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff",
        "styler_random"
    ]
}
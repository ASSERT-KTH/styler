{
    "project_name": "neo4j-neo4j",
    "error_id": "581",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "95",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "116",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "123",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "199",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "199",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "209",
                    "column": "58",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "209",
                    "column": "150",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "214",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "214",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "220",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "220",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "228",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "228",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "230",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "230",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "239",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "239",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "251",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "251",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "263",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "263",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "291",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "291",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "293",
                    "column": "85",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "293",
                    "column": "104",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "294",
                    "column": "78",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "294",
                    "column": "115",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "295",
                    "column": "54",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "295",
                    "column": "118",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "297",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "297",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "299",
                    "column": "59",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "299",
                    "column": "131",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "335",
                    "column": "81",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "335",
                    "column": "113",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "336",
                    "column": "72",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "337",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "373",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "373",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "379",
                    "column": "81",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "379",
                    "column": "113",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "410",
                    "column": "89",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "412",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "416",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "417",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "418",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "418",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "421",
                    "column": "62",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "422",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "427",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "429",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "433",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "433",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "455",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "455",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "461",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "461",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "469",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "470",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "477",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "485",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "486",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "503",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "504",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "512",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "512",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "517",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "517",
                    "column": "130",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "520",
                    "column": "58",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "521",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "522",
                    "column": "93",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "522",
                    "column": "119",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "523",
                    "column": "71",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "525",
                    "column": "134",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "527",
                    "column": "78",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "530",
                    "column": "141",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "566",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "570",
                    "column": "109",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "572",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "572",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "582",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "582",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "585",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "585",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "587",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "587",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "595",
                    "column": "72",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "595",
                    "column": "115",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "600",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "600",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/581/ImportLogic.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/581/ImportLogic.java\nindex 7a8907f01c9..a510bd0d558 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/581/ImportLogic.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/581/ImportLogic.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.internal.batchimport;\n \n import org.eclipse.collections.api.iterator.LongIterator;\n@@ -79,7 +80,7 @@ import static org.neo4j.io.IOUtils.closeAll;\n  * Contains all algorithms and logic for doing an import. It exposes all stages as methods so that\n  * it's possible to implement a {@link BatchImporter} which calls those.\n  * This class has state which typically gets modified in each invocation of an import method.\n- *\n+ * <p>\n  * To begin with the methods are fairly coarse-grained, but can and probably will be split up into smaller parts\n  * to allow external implementors have greater control over the flow.\n  */\n@@ -91,26 +92,26 @@ public class ImportLogic implements Closeable\n     {\n         void doubleRelationshipRecordUnitsEnabled();\n \n-        void mayExceedNodeIdCapacity( long capacity, long estimatedCount );\n+        void mayExceedNodeIdCapacity(long capacity, long estimatedCount);\n \n-        void mayExceedRelationshipIdCapacity( long capacity, long estimatedCount );\n+        void mayExceedRelationshipIdCapacity(long capacity, long estimatedCount);\n \n-        void insufficientHeapSize( long optimalMinimalHeapSize, long heapSize );\n+        void insufficientHeapSize(long optimalMinimalHeapSize, long heapSize);\n \n-        void abundantHeapSize( long optimalMinimalHeapSize, long heapSize );\n+        void abundantHeapSize(long optimalMinimalHeapSize, long heapSize);\n \n-        void insufficientAvailableMemory( long estimatedCacheSize, long optimalMinimalHeapSize, long availableMemory );\n+        void insufficientAvailableMemory(long estimatedCacheSize, long optimalMinimalHeapSize, long availableMemory);\n     }\n \n     public static final Monitor NO_MONITOR = new Monitor()\n     {\n         @Override\n-        public void mayExceedRelationshipIdCapacity( long capacity, long estimatedCount )\n+        public void mayExceedRelationshipIdCapacity(long capacity, long estimatedCount)\n         {   // no-op\n         }\n \n         @Override\n-        public void mayExceedNodeIdCapacity( long capacity, long estimatedCount )\n+        public void mayExceedNodeIdCapacity(long capacity, long estimatedCount)\n         {   // no-op\n         }\n \n@@ -120,17 +121,17 @@ public class ImportLogic implements Closeable\n         }\n \n         @Override\n-        public void insufficientHeapSize( long optimalMinimalHeapSize, long heapSize )\n+        public void insufficientHeapSize(long optimalMinimalHeapSize, long heapSize)\n         {   // no-op\n         }\n \n         @Override\n-        public void abundantHeapSize( long optimalMinimalHeapSize, long heapSize )\n+        public void abundantHeapSize(long optimalMinimalHeapSize, long heapSize)\n         {   // no-op\n         }\n \n         @Override\n-        public void insufficientAvailableMemory( long estimatedCacheSize, long optimalMinimalHeapSize, long availableMemory )\n+        public void insufficientAvailableMemory(long estimatedCacheSize, long optimalMinimalHeapSize, long availableMemory)\n         {   // no-op\n         }\n     };\n@@ -155,7 +156,7 @@ public class ImportLogic implements Closeable\n     // The reason that this is a map is to allow for a uniform way of accessing and loading this stage\n     // from the outside. Currently these things live here:\n     //   - RelationshipTypeDistribution\n-    private final Map<Class<?>,Object> accessibleState = new HashMap<>();\n+    private final Map<Class<?>, Object> accessibleState = new HashMap<>();\n \n     // components which may get assigned and unassigned in some methods\n     private NodeRelationshipCache nodeRelationshipCache;\n@@ -168,18 +169,18 @@ public class ImportLogic implements Closeable\n     private long availableMemoryForLinking;\n \n     /**\n-     * @param databaseLayout directory which the db will be created in.\n-     * @param neoStore {@link BatchingNeoStores} to import into.\n-     * @param config import-specific {@link Configuration}.\n-     * @param logService {@link LogService} to use.\n+     * @param databaseLayout   directory which the db will be created in.\n+     * @param neoStore         {@link BatchingNeoStores} to import into.\n+     * @param config           import-specific {@link Configuration}.\n+     * @param logService       {@link LogService} to use.\n      * @param executionMonitor {@link ExecutionMonitor} to follow progress as the import proceeds.\n-     * @param recordFormats which {@link RecordFormats record format} to use for the created db.\n-     * @param badCollector {@link Collector} for bad entries.\n-     * @param monitor {@link Monitor} for some events.\n+     * @param recordFormats    which {@link RecordFormats record format} to use for the created db.\n+     * @param badCollector     {@link Collector} for bad entries.\n+     * @param monitor          {@link Monitor} for some events.\n      */\n-    public ImportLogic( DatabaseLayout databaseLayout, BatchingNeoStores neoStore, Configuration config, Config dbConfig, LogService logService,\n-            ExecutionMonitor executionMonitor, RecordFormats recordFormats, Collector badCollector, Monitor monitor,\n-            PageCacheTracer pageCacheTracer, MemoryTracker memoryTracker )\n+    public ImportLogic(DatabaseLayout databaseLayout, BatchingNeoStores neoStore, Configuration config, Config dbConfig, LogService logService,\n+                       ExecutionMonitor executionMonitor, RecordFormats recordFormats, Collector badCollector, Monitor monitor,\n+                       PageCacheTracer pageCacheTracer, MemoryTracker memoryTracker)\n     {\n         this.databaseDirectory = databaseLayout.databaseDirectory();\n         this.neoStore = neoStore;\n@@ -188,54 +189,54 @@ public class ImportLogic implements Closeable\n         this.recordFormats = recordFormats;\n         this.badCollector = badCollector;\n         this.monitor = monitor;\n-        this.log = logService.getInternalLogProvider().getLog( getClass() );\n+        this.log = logService.getInternalLogProvider().getLog(getClass());\n         this.pageCacheTracer = pageCacheTracer;\n         this.memoryTracker = memoryTracker;\n-        this.executionMonitor = ExecutionSupervisors.withDynamicProcessorAssignment( executionMonitor, config );\n+        this.executionMonitor = ExecutionSupervisors.withDynamicProcessorAssignment(executionMonitor, config);\n         this.maxMemory = config.maxMemoryUsage();\n     }\n \n-    public void initialize( Input input ) throws IOException\n+    public void initialize(Input input) throws IOException\n     {\n-        log.info( \"Import starting\" );\n+        log.info(\"Import starting\");\n         startTime = currentTimeMillis();\n         this.input = input;\n         PageCacheArrayFactoryMonitor numberArrayFactoryMonitor = new PageCacheArrayFactoryMonitor();\n-        numberArrayFactory = auto( neoStore.getPageCache(), pageCacheTracer, databaseDirectory, config.allowCacheAllocationOnHeap(),\n-                numberArrayFactoryMonitor, log );\n+        numberArrayFactory = auto(neoStore.getPageCache(), pageCacheTracer, databaseDirectory, config.allowCacheAllocationOnHeap(),\n+          numberArrayFactoryMonitor, log);\n         // Some temporary caches and indexes in the import\n-        idMapper = instantiateIdMapper( input );\n-        nodeRelationshipCache = new NodeRelationshipCache( numberArrayFactory, dbConfig.get( GraphDatabaseSettings.dense_node_threshold ), memoryTracker );\n-        Input.Estimates inputEstimates = input.calculateEstimates( neoStore.getPropertyStore().newValueEncodedSizeCalculator() );\n+        idMapper = instantiateIdMapper(input);\n+        nodeRelationshipCache = new NodeRelationshipCache(numberArrayFactory, dbConfig.get(GraphDatabaseSettings.dense_node_threshold), memoryTracker);\n+        Input.Estimates inputEstimates = input.calculateEstimates(neoStore.getPropertyStore().newValueEncodedSizeCalculator());\n \n         // Sanity checking against estimates\n-        new EstimationSanityChecker( recordFormats, monitor ).sanityCheck( inputEstimates );\n-        new HeapSizeSanityChecker( monitor ).sanityCheck( inputEstimates, recordFormats, neoStore,\n-                nodeRelationshipCache.memoryEstimation( inputEstimates.numberOfNodes() ),\n-                idMapper.memoryEstimation( inputEstimates.numberOfNodes() ) );\n+        new EstimationSanityChecker(recordFormats, monitor).sanityCheck(inputEstimates);\n+        new HeapSizeSanityChecker(monitor).sanityCheck(inputEstimates, recordFormats, neoStore,\n+          nodeRelationshipCache.memoryEstimation(inputEstimates.numberOfNodes()),\n+          idMapper.memoryEstimation(inputEstimates.numberOfNodes()));\n \n-        dependencies.satisfyDependencies( inputEstimates, idMapper, neoStore, nodeRelationshipCache, numberArrayFactoryMonitor );\n+        dependencies.satisfyDependencies(inputEstimates, idMapper, neoStore, nodeRelationshipCache, numberArrayFactoryMonitor);\n \n-        if ( neoStore.determineDoubleRelationshipRecordUnits( inputEstimates ) )\n+        if (neoStore.determineDoubleRelationshipRecordUnits(inputEstimates))\n         {\n             monitor.doubleRelationshipRecordUnitsEnabled();\n         }\n \n-        executionMonitor.initialize( dependencies );\n+        executionMonitor.initialize(dependencies);\n     }\n \n-    private IdMapper instantiateIdMapper( Input input )\n+    private IdMapper instantiateIdMapper(Input input)\n     {\n-        switch ( input.idType() )\n+        switch (input.idType())\n         {\n-        case STRING:\n-            return IdMappers.strings( numberArrayFactory, input.groups(), pageCacheTracer, memoryTracker );\n-        case INTEGER:\n-            return IdMappers.longs( numberArrayFactory, input.groups(), pageCacheTracer, memoryTracker );\n-        case ACTUAL:\n-            return IdMappers.actual();\n-        default:\n-            throw new IllegalArgumentException( \"Unsupported id type \" + input.idType() );\n+            case STRING:\n+                return IdMappers.strings(numberArrayFactory, input.groups(), pageCacheTracer, memoryTracker);\n+            case INTEGER:\n+                return IdMappers.longs(numberArrayFactory, input.groups(), pageCacheTracer, memoryTracker);\n+            case ACTUAL:\n+                return IdMappers.actual();\n+            default:\n+                throw new IllegalArgumentException(\"Unsupported id type \" + input.idType());\n         }\n     }\n \n@@ -247,22 +248,22 @@ public class ImportLogic implements Closeable\n      * @return the state of the given type.\n      * @throws IllegalStateException if the state of the given {@code type} isn't available.\n      */\n-    public <T> T getState( Class<T> type )\n+    public <T> T getState(Class<T> type)\n     {\n-        return type.cast( accessibleState.get( type ) );\n+        return type.cast(accessibleState.get(type));\n     }\n \n     /**\n      * Puts state of a certain type.\n      *\n      * @param state state instance to set.\n-     * @see #getState(Class)\n      * @throws IllegalStateException if state of this type has already been defined.\n+     * @see #getState(Class)\n      */\n-    public <T> void putState( T state )\n+    public <T> void putState(T state)\n     {\n-        accessibleState.put( state.getClass(), state );\n-        dependencies.satisfyDependency( state );\n+        accessibleState.put(state.getClass(), state);\n+        dependencies.satisfyDependency(state);\n     }\n \n     /**\n@@ -276,8 +277,8 @@ public class ImportLogic implements Closeable\n     {\n         // Import nodes, properties, labels\n         neoStore.startFlushingPageCache();\n-        DataImporter.importNodes( config, input, neoStore, idMapper, badCollector, executionMonitor, storeUpdateMonitor,\n-                pageCacheTracer, memoryTracker );\n+        DataImporter.importNodes(config, input, neoStore, idMapper, badCollector, executionMonitor, storeUpdateMonitor,\n+          pageCacheTracer, memoryTracker);\n         neoStore.stopFlushingPageCache();\n         updatePeakMemoryUsage();\n     }\n@@ -287,15 +288,15 @@ public class ImportLogic implements Closeable\n      */\n     public void prepareIdMapper()\n     {\n-        if ( idMapper.needsPreparation() )\n+        if (idMapper.needsPreparation())\n         {\n-            MemoryUsageStatsProvider memoryUsageStats = new MemoryUsageStatsProvider( neoStore, idMapper );\n-            PropertyValueLookup inputIdLookup = new NodeInputIdPropertyLookup( neoStore.getTemporaryPropertyStore() );\n-            executeStage( new IdMapperPreparationStage( config, idMapper, inputIdLookup, badCollector, memoryUsageStats ) );\n+            MemoryUsageStatsProvider memoryUsageStats = new MemoryUsageStatsProvider(neoStore, idMapper);\n+            PropertyValueLookup inputIdLookup = new NodeInputIdPropertyLookup(neoStore.getTemporaryPropertyStore());\n+            executeStage(new IdMapperPreparationStage(config, idMapper, inputIdLookup, badCollector, memoryUsageStats));\n             final LongIterator duplicateNodeIds = idMapper.leftOverDuplicateNodesIds();\n-            if ( duplicateNodeIds.hasNext() )\n+            if (duplicateNodeIds.hasNext())\n             {\n-                executeStage( new DeleteDuplicateNodesStage( config, duplicateNodeIds, neoStore, storeUpdateMonitor, pageCacheTracer ) );\n+                executeStage(new DeleteDuplicateNodesStage(config, duplicateNodeIds, neoStore, storeUpdateMonitor, pageCacheTracer));\n             }\n             updatePeakMemoryUsage();\n         }\n@@ -313,13 +314,13 @@ public class ImportLogic implements Closeable\n         // Import relationships (unlinked), properties\n         neoStore.startFlushingPageCache();\n         DataStatistics typeDistribution = DataImporter.importRelationships(\n-                config, input, neoStore, idMapper, badCollector, executionMonitor, storeUpdateMonitor,\n-                !badCollector.isCollectingBadRelationships(), pageCacheTracer, memoryTracker );\n+          config, input, neoStore, idMapper, badCollector, executionMonitor, storeUpdateMonitor,\n+          !badCollector.isCollectingBadRelationships(), pageCacheTracer, memoryTracker);\n         neoStore.stopFlushingPageCache();\n         updatePeakMemoryUsage();\n         idMapper.close();\n         idMapper = null;\n-        putState( typeDistribution );\n+        putState(typeDistribution);\n     }\n \n     /**\n@@ -329,21 +330,21 @@ public class ImportLogic implements Closeable\n     public void calculateNodeDegrees()\n     {\n         Configuration relationshipConfig =\n-                configWithRecordsPerPageBasedBatchSize( config, neoStore.getRelationshipStore() );\n-        nodeRelationshipCache.setNodeCount( neoStore.getNodeStore().getHighId() );\n-        MemoryUsageStatsProvider memoryUsageStats = new MemoryUsageStatsProvider( neoStore, nodeRelationshipCache );\n-        NodeDegreeCountStage nodeDegreeStage = new NodeDegreeCountStage( relationshipConfig,\n-                neoStore.getRelationshipStore(), nodeRelationshipCache, memoryUsageStats, pageCacheTracer );\n-        executeStage( nodeDegreeStage );\n+          configWithRecordsPerPageBasedBatchSize(config, neoStore.getRelationshipStore());\n+        nodeRelationshipCache.setNodeCount(neoStore.getNodeStore().getHighId());\n+        MemoryUsageStatsProvider memoryUsageStats = new MemoryUsageStatsProvider(neoStore, nodeRelationshipCache);\n+        NodeDegreeCountStage nodeDegreeStage = new NodeDegreeCountStage(relationshipConfig,\n+          neoStore.getRelationshipStore(), nodeRelationshipCache, memoryUsageStats, pageCacheTracer);\n+        executeStage(nodeDegreeStage);\n         nodeRelationshipCache.countingCompleted();\n-        availableMemoryForLinking = maxMemory - totalMemoryUsageOf( nodeRelationshipCache, neoStore );\n+        availableMemoryForLinking = maxMemory - totalMemoryUsageOf(nodeRelationshipCache, neoStore);\n     }\n \n     /**\n      * Performs one round of linking together relationships with each other. Number of rounds required\n      * is dictated by available memory. The more dense nodes and relationship types, the more memory required.\n      * Every round all relationships of one or more types are linked.\n-     *\n+     * <p>\n      * Links together:\n      * <ul>\n      * <li>\n@@ -355,7 +356,7 @@ public class ImportLogic implements Closeable\n      * This is done in the first round only, if there are multiple rounds.\n      * </li>\n      * </ul>\n-     *\n+     * <p>\n      * A linking loop (from external caller POV) typically looks like:\n      * <pre>\n      * int type = 0;\n@@ -369,67 +370,67 @@ public class ImportLogic implements Closeable\n      * @param startingFromType relationship type to start from.\n      * @return the next relationship type to start linking and, if != -1, should be passed into next call to this method.\n      */\n-    public int linkRelationships( int startingFromType )\n+    public int linkRelationships(int startingFromType)\n     {\n         assert startingFromType >= 0 : startingFromType;\n \n         // Link relationships together with each other, their nodes and their relationship groups\n-        DataStatistics relationshipTypeDistribution = getState( DataStatistics.class );\n-        MemoryUsageStatsProvider memoryUsageStats = new MemoryUsageStatsProvider( neoStore, nodeRelationshipCache );\n+        DataStatistics relationshipTypeDistribution = getState(DataStatistics.class);\n+        MemoryUsageStatsProvider memoryUsageStats = new MemoryUsageStatsProvider(neoStore, nodeRelationshipCache);\n \n         // Figure out which types we can fit in node-->relationship cache memory.\n         // Types go from biggest to smallest group and so towards the end there will be\n         // smaller and more groups per round in this loop\n         int upToType = nextSetOfTypesThatFitInMemory(\n-                relationshipTypeDistribution, startingFromType, availableMemoryForLinking, nodeRelationshipCache.getNumberOfDenseNodes() );\n+          relationshipTypeDistribution, startingFromType, availableMemoryForLinking, nodeRelationshipCache.getNumberOfDenseNodes());\n \n-        final IntSet typesToLinkThisRound = relationshipTypeDistribution.types( startingFromType, upToType );\n+        final IntSet typesToLinkThisRound = relationshipTypeDistribution.types(startingFromType, upToType);\n         int typesImported = typesToLinkThisRound.size();\n         boolean thisIsTheFirstRound = startingFromType == 0;\n         boolean thisIsTheOnlyRound = thisIsTheFirstRound && upToType == relationshipTypeDistribution.getNumberOfRelationshipTypes();\n \n-        Configuration relationshipConfig = configWithRecordsPerPageBasedBatchSize( config, neoStore.getRelationshipStore() );\n-        Configuration nodeConfig = configWithRecordsPerPageBasedBatchSize( config, neoStore.getNodeStore() );\n-        Configuration groupConfig = configWithRecordsPerPageBasedBatchSize( config, neoStore.getRelationshipGroupStore() );\n+        Configuration relationshipConfig = configWithRecordsPerPageBasedBatchSize(config, neoStore.getRelationshipStore());\n+        Configuration nodeConfig = configWithRecordsPerPageBasedBatchSize(config, neoStore.getNodeStore());\n+        Configuration groupConfig = configWithRecordsPerPageBasedBatchSize(config, neoStore.getRelationshipGroupStore());\n \n-        nodeRelationshipCache.setForwardScan( true, true/*dense*/ );\n+        nodeRelationshipCache.setForwardScan(true, true/*dense*/);\n         String range = typesToLinkThisRound.size() == 1\n-                ? String.valueOf( oneBased( startingFromType ) )\n-                : oneBased( startingFromType ) + \"-\" + (startingFromType + typesImported);\n+          ? String.valueOf(oneBased(startingFromType))\n+          : oneBased(startingFromType) + \"-\" + (startingFromType + typesImported);\n         String topic = \" \" + range + \"/\" + relationshipTypeDistribution.getNumberOfRelationshipTypes();\n         int nodeTypes = thisIsTheFirstRound ? NodeType.NODE_TYPE_ALL : NodeType.NODE_TYPE_DENSE;\n         Predicate<RelationshipRecord> readFilter = thisIsTheFirstRound\n-                ? alwaysTrue() // optimization when all rels are imported in this round\n-                : record -> typesToLinkThisRound.contains( record.getType() );\n+          ? alwaysTrue() // optimization when all rels are imported in this round\n+          : record -> typesToLinkThisRound.contains(record.getType());\n         Predicate<RelationshipRecord> denseChangeFilter = thisIsTheOnlyRound\n-                ? alwaysTrue() // optimization when all rels are imported in this round\n-                : record -> typesToLinkThisRound.contains( record.getType() );\n+          ? alwaysTrue() // optimization when all rels are imported in this round\n+          : record -> typesToLinkThisRound.contains(record.getType());\n \n         // LINK Forward\n-        RelationshipLinkforwardStage linkForwardStage = new RelationshipLinkforwardStage( topic, relationshipConfig,\n-                neoStore, nodeRelationshipCache, readFilter, denseChangeFilter, nodeTypes, pageCacheTracer,\n-                new RelationshipLinkingProgress(), memoryUsageStats );\n-        executeStage( linkForwardStage );\n+        RelationshipLinkforwardStage linkForwardStage = new RelationshipLinkforwardStage(topic, relationshipConfig,\n+          neoStore, nodeRelationshipCache, readFilter, denseChangeFilter, nodeTypes, pageCacheTracer,\n+          new RelationshipLinkingProgress(), memoryUsageStats);\n+        executeStage(linkForwardStage);\n \n         // Write relationship groups cached from the relationship import above\n-        executeStage( new RelationshipGroupStage( topic, groupConfig,\n-                neoStore.getTemporaryRelationshipGroupStore(), nodeRelationshipCache, pageCacheTracer ) );\n-        if ( thisIsTheFirstRound )\n+        executeStage(new RelationshipGroupStage(topic, groupConfig,\n+          neoStore.getTemporaryRelationshipGroupStore(), nodeRelationshipCache, pageCacheTracer));\n+        if (thisIsTheFirstRound)\n         {\n             // Set node nextRel fields for sparse nodes\n-            executeStage( new SparseNodeFirstRelationshipStage( nodeConfig, neoStore.getNodeStore(),\n-                    nodeRelationshipCache, pageCacheTracer ) );\n+            executeStage(new SparseNodeFirstRelationshipStage(nodeConfig, neoStore.getNodeStore(),\n+              nodeRelationshipCache, pageCacheTracer));\n         }\n \n         // LINK backward\n-        nodeRelationshipCache.setForwardScan( false, true/*dense*/ );\n-        executeStage( new RelationshipLinkbackStage( topic, relationshipConfig, neoStore,\n-                nodeRelationshipCache, readFilter, denseChangeFilter, nodeTypes, pageCacheTracer,\n-                new RelationshipLinkingProgress(), memoryUsageStats ) );\n+        nodeRelationshipCache.setForwardScan(false, true/*dense*/);\n+        executeStage(new RelationshipLinkbackStage(topic, relationshipConfig, neoStore,\n+          nodeRelationshipCache, readFilter, denseChangeFilter, nodeTypes, pageCacheTracer,\n+          new RelationshipLinkingProgress(), memoryUsageStats));\n \n         updatePeakMemoryUsage();\n \n-        if ( upToType == relationshipTypeDistribution.getNumberOfRelationshipTypes() )\n+        if (upToType == relationshipTypeDistribution.getNumberOfRelationshipTypes())\n         {\n             // This means that we've linked all the types\n             nodeRelationshipCache.close();\n@@ -449,15 +450,15 @@ public class ImportLogic implements Closeable\n         int type = 0;\n         do\n         {\n-            type = linkRelationships( type );\n+            type = linkRelationships(type);\n         }\n-        while ( type != -1 );\n+        while (type != -1);\n     }\n \n     /**\n      * Convenience method (for code reading) to have a zero-based value become one based (for printing/logging).\n      */\n-    private static int oneBased( int value )\n+    private static int oneBased(int value)\n     {\n         return value + 1;\n     }\n@@ -465,24 +466,24 @@ public class ImportLogic implements Closeable\n     /**\n      * @return index (into {@link DataStatistics}) of last relationship type that fit in memory this round.\n      */\n-    static int nextSetOfTypesThatFitInMemory( DataStatistics typeDistribution, int startingFromType,\n-            long freeMemoryForDenseNodeCache, long numberOfDenseNodes )\n+    static int nextSetOfTypesThatFitInMemory(DataStatistics typeDistribution, int startingFromType,\n+                                             long freeMemoryForDenseNodeCache, long numberOfDenseNodes)\n     {\n         assert startingFromType >= 0 : startingFromType;\n \n         long currentSetOfRelationshipsMemoryUsage = 0;\n         int numberOfTypes = typeDistribution.getNumberOfRelationshipTypes();\n         int toType = startingFromType;\n-        for ( ; toType < numberOfTypes; toType++ )\n+        for (; toType < numberOfTypes; toType++)\n         {\n             // Calculate worst-case scenario\n-            DataStatistics.RelationshipTypeCount type = typeDistribution.get( toType );\n+            DataStatistics.RelationshipTypeCount type = typeDistribution.get(toType);\n             long relationshipCountForThisType = type.getCount();\n-            long memoryUsageForThisType = NodeRelationshipCache.calculateMaxMemoryUsage( numberOfDenseNodes, relationshipCountForThisType );\n+            long memoryUsageForThisType = NodeRelationshipCache.calculateMaxMemoryUsage(numberOfDenseNodes, relationshipCountForThisType);\n             long memoryUsageUpToAndIncludingThisType =\n-                    currentSetOfRelationshipsMemoryUsage + memoryUsageForThisType;\n-            if ( memoryUsageUpToAndIncludingThisType > freeMemoryForDenseNodeCache &&\n-                    currentSetOfRelationshipsMemoryUsage > 0 )\n+              currentSetOfRelationshipsMemoryUsage + memoryUsageForThisType;\n+            if (memoryUsageUpToAndIncludingThisType > freeMemoryForDenseNodeCache &&\n+              currentSetOfRelationshipsMemoryUsage > 0)\n             {\n                 // OK the current set of types is enough to fill the cache\n                 break;\n@@ -499,8 +500,8 @@ public class ImportLogic implements Closeable\n     public void defragmentRelationshipGroups()\n     {\n         // Defragment relationships groups for better performance\n-        new RelationshipGroupDefragmenter( config, executionMonitor, RelationshipGroupDefragmenter.Monitor.EMPTY, numberArrayFactory, pageCacheTracer,\n-                memoryTracker ).run( max( maxMemory, peakMemoryUsage ), neoStore, neoStore.getNodeStore().getHighId() );\n+        new RelationshipGroupDefragmenter(config, executionMonitor, RelationshipGroupDefragmenter.Monitor.EMPTY, numberArrayFactory, pageCacheTracer,\n+          memoryTracker).run(max(maxMemory, peakMemoryUsage), neoStore, neoStore.getNodeStore().getHighId());\n     }\n \n     /**\n@@ -508,25 +509,25 @@ public class ImportLogic implements Closeable\n      */\n     public void buildCountsStore()\n     {\n-        try ( var cursorTracer = pageCacheTracer.createPageCursorTracer( IMPORT_COUNT_STORE_REBUILD_TAG ) )\n+        try (var cursorTracer = pageCacheTracer.createPageCursorTracer(IMPORT_COUNT_STORE_REBUILD_TAG))\n         {\n-            neoStore.buildCountsStore( new CountsBuilder()\n+            neoStore.buildCountsStore(new CountsBuilder()\n             {\n                 @Override\n-                public void initialize( CountsAccessor.Updater updater, PageCursorTracer cursorTracer, MemoryTracker memoryTracker )\n+                public void initialize(CountsAccessor.Updater updater, PageCursorTracer cursorTracer, MemoryTracker memoryTracker)\n                 {\n                     MigrationProgressMonitor progressMonitor = MigrationProgressMonitor.SILENT;\n-                    nodeLabelsCache = new NodeLabelsCache( numberArrayFactory, neoStore.getNodeStore().getHighId(), neoStore.getLabelRepository().getHighId(),\n-                            memoryTracker );\n-                    MemoryUsageStatsProvider memoryUsageStats = new MemoryUsageStatsProvider( neoStore, nodeLabelsCache );\n-                    executeStage( new NodeCountsAndLabelIndexBuildStage( config, nodeLabelsCache, neoStore.getNodeStore(),\n-                            neoStore.getLabelRepository().getHighId(),\n-                            updater, progressMonitor.startSection( \"Nodes\" ), neoStore.getLabelScanStore(), pageCacheTracer, memoryUsageStats ) );\n+                    nodeLabelsCache = new NodeLabelsCache(numberArrayFactory, neoStore.getNodeStore().getHighId(), neoStore.getLabelRepository().getHighId(),\n+                      memoryTracker);\n+                    MemoryUsageStatsProvider memoryUsageStats = new MemoryUsageStatsProvider(neoStore, nodeLabelsCache);\n+                    executeStage(new NodeCountsAndLabelIndexBuildStage(config, nodeLabelsCache, neoStore.getNodeStore(),\n+                      neoStore.getLabelRepository().getHighId(),\n+                      updater, progressMonitor.startSection(\"Nodes\"), neoStore.getLabelScanStore(), pageCacheTracer, memoryUsageStats));\n                     // Count label-[type]->label\n-                    executeStage( new RelationshipCountsAndTypeIndexBuildStage( config, nodeLabelsCache, neoStore.getRelationshipStore(),\n-                            neoStore.getLabelRepository().getHighId(),\n-                            neoStore.getRelationshipTypeRepository().getHighId(), updater, numberArrayFactory,\n-                            progressMonitor.startSection( \"Relationships\" ), neoStore.getRelationshipTypeScanStore(), pageCacheTracer, memoryTracker ) );\n+                    executeStage(new RelationshipCountsAndTypeIndexBuildStage(config, nodeLabelsCache, neoStore.getRelationshipStore(),\n+                      neoStore.getLabelRepository().getHighId(),\n+                      neoStore.getRelationshipTypeRepository().getHighId(), updater, numberArrayFactory,\n+                      progressMonitor.startSection(\"Relationships\"), neoStore.getRelationshipTypeScanStore(), pageCacheTracer, memoryTracker));\n                 }\n \n                 @Override\n@@ -534,7 +535,7 @@ public class ImportLogic implements Closeable\n                 {\n                     return neoStore.getLastCommittedTransactionId();\n                 }\n-            }, pageCacheTracer, cursorTracer, memoryTracker );\n+            }, pageCacheTracer, cursorTracer, memoryTracker);\n         }\n     }\n \n@@ -549,53 +550,55 @@ public class ImportLogic implements Closeable\n     {\n         // We're done, do some final logging about it\n         long totalTimeMillis = currentTimeMillis() - startTime;\n-        DataStatistics state = getState( DataStatistics.class );\n-        String additionalInformation = Objects.toString( state, \"Data statistics is not available.\" );\n-        executionMonitor.done( successful, totalTimeMillis, format( \"%n%s%nPeak memory usage: %s\", additionalInformation,\n-                bytesToString( peakMemoryUsage ) ) );\n-        log.info( \"Import completed successfully, took \" + duration( totalTimeMillis ) + \". \" + additionalInformation );\n-        closeAll( nodeRelationshipCache, nodeLabelsCache, idMapper );\n+        DataStatistics state = getState(DataStatistics.class);\n+        String additionalInformation = Objects.toString(state, \"Data statistics is not available.\");\n+        executionMonitor.done(successful, totalTimeMillis, format(\"%n%s%nPeak memory usage: %s\", additionalInformation,\n+          bytesToString(peakMemoryUsage)));\n+        log.info(\"Import completed successfully, took \" + duration(totalTimeMillis) + \". \" + additionalInformation);\n+        closeAll(nodeRelationshipCache, nodeLabelsCache, idMapper);\n     }\n \n     private void updatePeakMemoryUsage()\n     {\n-        peakMemoryUsage = max( peakMemoryUsage, totalMemoryUsageOf( nodeRelationshipCache, idMapper, neoStore ) );\n+        peakMemoryUsage = max(peakMemoryUsage, totalMemoryUsageOf(nodeRelationshipCache, idMapper, neoStore));\n     }\n \n-    public static BatchingNeoStores instantiateNeoStores( FileSystemAbstraction fileSystem, DatabaseLayout databaseLayout,\n-            PageCache externalPageCache, PageCacheTracer cacheTracer, RecordFormats recordFormats, Configuration config,\n-            LogService logService, AdditionalInitialIds additionalInitialIds, Config dbConfig, JobScheduler scheduler, MemoryTracker memoryTracker )\n+    public static BatchingNeoStores instantiateNeoStores(FileSystemAbstraction fileSystem, DatabaseLayout databaseLayout,\n+                                                         PageCache externalPageCache, PageCacheTracer cacheTracer, RecordFormats recordFormats,\n+                                                         Configuration config,\n+                                                         LogService logService, AdditionalInitialIds additionalInitialIds, Config dbConfig,\n+                                                         JobScheduler scheduler, MemoryTracker memoryTracker)\n     {\n-        if ( externalPageCache == null )\n+        if (externalPageCache == null)\n         {\n-            return BatchingNeoStores.batchingNeoStores( fileSystem, databaseLayout, recordFormats, config, logService,\n-                    additionalInitialIds, dbConfig, scheduler, cacheTracer, memoryTracker );\n+            return BatchingNeoStores.batchingNeoStores(fileSystem, databaseLayout, recordFormats, config, logService,\n+              additionalInitialIds, dbConfig, scheduler, cacheTracer, memoryTracker);\n         }\n \n-        return BatchingNeoStores.batchingNeoStoresWithExternalPageCache( fileSystem, externalPageCache,\n-                cacheTracer, databaseLayout, recordFormats, config, logService, additionalInitialIds, dbConfig, memoryTracker );\n+        return BatchingNeoStores.batchingNeoStoresWithExternalPageCache(fileSystem, externalPageCache,\n+          cacheTracer, databaseLayout, recordFormats, config, logService, additionalInitialIds, dbConfig, memoryTracker);\n     }\n \n-    private static long totalMemoryUsageOf( MemoryStatsVisitor.Visitable... users )\n+    private static long totalMemoryUsageOf(MemoryStatsVisitor.Visitable... users)\n     {\n         GatheringMemoryStatsVisitor total = new GatheringMemoryStatsVisitor();\n-        for ( MemoryStatsVisitor.Visitable user : users )\n+        for (MemoryStatsVisitor.Visitable user : users)\n         {\n-            if ( user != null )\n+            if (user != null)\n             {\n-                user.acceptMemoryStatsVisitor( total );\n+                user.acceptMemoryStatsVisitor(total);\n             }\n         }\n         return total.getHeapUsage() + total.getOffHeapUsage();\n     }\n \n-    private static Configuration configWithRecordsPerPageBasedBatchSize( Configuration source, RecordStore<?> store )\n+    private static Configuration configWithRecordsPerPageBasedBatchSize(Configuration source, RecordStore<?> store)\n     {\n-        return Configuration.withBatchSize( source, store.getRecordsPerPage() * 10 );\n+        return Configuration.withBatchSize(source, store.getRecordsPerPage() * 10);\n     }\n \n-    private void executeStage( Stage stage )\n+    private void executeStage(Stage stage)\n     {\n-        ExecutionSupervisors.superviseExecution( executionMonitor, stage );\n+        ExecutionSupervisors.superviseExecution(executionMonitor, stage);\n     }\n }\n",
            "diff_size": 157
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3792",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "32",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "32",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "60",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3792/MapDomainNameResolver.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3792/MapDomainNameResolver.java\nindex b37305de8a2..1b15d6f0308 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3792/MapDomainNameResolver.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3792/MapDomainNameResolver.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering.discovery;\n \n import java.net.InetAddress;\n@@ -26,40 +27,39 @@ import java.util.stream.Collectors;\n \n public class MapDomainNameResolver implements DomainNameResolver\n {\n-    private final Map<String /*hostname*/,InetAddress[] /*response*/> domainNameMapping;\n+  private final Map<String /*hostname*/, InetAddress[] /*response*/> domainNameMapping;\n \n-    public MapDomainNameResolver( Map<String,InetAddress[]> mapping )\n-    {\n-        domainNameMapping = mapping;\n-    }\n+  public MapDomainNameResolver(Map<String, InetAddress[]> mapping)\n+  {\n+    domainNameMapping = mapping;\n+  }\n \n-    @Override\n-    public InetAddress[] resolveDomainName( String hostname ) throws UnknownHostException\n+  @Override\n+  public InetAddress[] resolveDomainName(String hostname) throws UnknownHostException\n+  {\n+    if (domainNameMapping.containsKey(hostname))\n     {\n-        if ( domainNameMapping.containsKey( hostname ) )\n-        {\n-            return domainNameMapping.get( hostname );\n-        }\n-        throw new UnknownHostException( new java.net.UnknownHostException() );\n+      return domainNameMapping.get(hostname);\n     }\n+    throw new UnknownHostException(new java.net.UnknownHostException());\n+  }\n \n-    public void setHostnameAddresses( String hostname, Collection<String> addresses )\n-    {\n-        InetAddress[] processedAddresses = new InetAddress[addresses.size()];\n-        addresses.stream().map( MapDomainNameResolver::inetAddress ).collect( Collectors.toList() )\n-                .toArray( processedAddresses );\n-        domainNameMapping.put( hostname, processedAddresses );\n-    }\n+  public void setHostnameAddresses(String hostname, Collection<String> addresses)\n+  {\n+    InetAddress[] processedAddresses = new InetAddress[addresses.size()];\n+    addresses.stream().map(MapDomainNameResolver::inetAddress).collect(Collectors.toList())\n+        .toArray(processedAddresses);\n+    domainNameMapping.put(hostname, processedAddresses);\n+  }\n \n-    private static InetAddress inetAddress( String address )\n+  private static InetAddress inetAddress(String address)\n+  {\n+    try\n+    {\n+      return InetAddress.getByName(address);\n+    } catch (java.net.UnknownHostException e)\n     {\n-        try\n-        {\n-            return InetAddress.getByName( address );\n-        }\n-        catch ( java.net.UnknownHostException e )\n-        {\n-            throw new UnknownHostException( e );\n-        }\n+      throw new UnknownHostException(e);\n     }\n+  }\n }\n",
            "diff_size": 39
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3792/MapDomainNameResolver.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3792/MapDomainNameResolver.java\nindex b37305de8a2..9ae08eafd32 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3792/MapDomainNameResolver.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3792/MapDomainNameResolver.java\n@@ -26,7 +26,7 @@ import java.util.stream.Collectors;\n \n public class MapDomainNameResolver implements DomainNameResolver\n {\n-    private final Map<String /*hostname*/,InetAddress[] /*response*/> domainNameMapping;\n+    private final Map<String/*hostname*/,InetAddress[] /*response*/> domainNameMapping;\n \n     public MapDomainNameResolver( Map<String,InetAddress[]> mapping )\n     {\n@@ -46,9 +46,8 @@ public class MapDomainNameResolver implements DomainNameResolver\n     public void setHostnameAddresses( String hostname, Collection<String> addresses )\n     {\n         InetAddress[] processedAddresses = new InetAddress[addresses.size()];\n-        addresses.stream().map( MapDomainNameResolver::inetAddress ).collect( Collectors.toList() )\n-                .toArray( processedAddresses );\n-        domainNameMapping.put( hostname, processedAddresses );\n+        addresses.stream().map( MapDomainNameResolver::inetAddress ).collect( Collectors.toList() ).toArray( processedAddresses );\n+domainNameMapping.put( hostname, processedAddresses );\n     }\n \n     private static InetAddress inetAddress( String address )\n@@ -62,4 +61,4 @@ public class MapDomainNameResolver implements DomainNameResolver\n             throw new UnknownHostException( e );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
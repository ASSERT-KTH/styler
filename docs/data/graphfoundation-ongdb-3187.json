{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3187",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "37",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "19",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "68",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "106",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "19",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3187/AccessStatsKeepingStoreAccess.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3187/AccessStatsKeepingStoreAccess.java\nindex 077edf919f3..7c17e04dcb2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3187/AccessStatsKeepingStoreAccess.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3187/AccessStatsKeepingStoreAccess.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.consistency.statistics;\n \n import org.neo4j.consistency.statistics.AccessStatistics.AccessStats;\n@@ -31,43 +32,43 @@ import org.neo4j.kernel.impl.store.record.RecordLoad;\n  */\n public class AccessStatsKeepingStoreAccess extends StoreAccess\n {\n-    private final AccessStatistics accessStatistics;\n+  private final AccessStatistics accessStatistics;\n+\n+  public AccessStatsKeepingStoreAccess(NeoStores neoStore, AccessStatistics accessStatistics)\n+  {\n+    super(neoStore);\n+    this.accessStatistics = accessStatistics;\n+  }\n+\n+  @Override\n+  protected <R extends AbstractBaseRecord> RecordStore<R> wrapStore(RecordStore<R> store)\n+  {\n+    AccessStats accessStats = new AccessStats(store.getClass().getSimpleName(), store.getRecordsPerPage());\n+    accessStatistics.register(store, accessStats);\n+    return new AccessStatsKeepingRecordStore(store, accessStats);\n+  }\n \n-    public AccessStatsKeepingStoreAccess( NeoStores neoStore, AccessStatistics accessStatistics )\n+  private static class AccessStatsKeepingRecordStore<RECORD extends AbstractBaseRecord>\n+      extends RecordStore.Delegator<RECORD>\n+  {\n+    private final AccessStats accessStats;\n+\n+    AccessStatsKeepingRecordStore(RecordStore<RECORD> actual, AccessStats accessStats)\n     {\n-        super( neoStore );\n-        this.accessStatistics = accessStatistics;\n+      super(actual);\n+      this.accessStats = accessStats;\n     }\n \n-    @Override\n-    protected <R extends AbstractBaseRecord> RecordStore<R> wrapStore( RecordStore<R> store )\n+    protected AccessStats getAccessStats()\n     {\n-        AccessStats accessStats = new AccessStats( store.getClass().getSimpleName(), store.getRecordsPerPage() );\n-        accessStatistics.register( store, accessStats );\n-        return new AccessStatsKeepingRecordStore( store, accessStats );\n+      return accessStats;\n     }\n \n-    private static class AccessStatsKeepingRecordStore<RECORD extends AbstractBaseRecord>\n-            extends RecordStore.Delegator<RECORD>\n+    @Override\n+    public RECORD getRecord(long id, RECORD record, RecordLoad load)\n     {\n-        private final AccessStats accessStats;\n-\n-        AccessStatsKeepingRecordStore( RecordStore<RECORD> actual, AccessStats accessStats )\n-        {\n-            super( actual );\n-            this.accessStats = accessStats;\n-        }\n-\n-        protected AccessStats getAccessStats()\n-        {\n-            return accessStats;\n-        }\n-\n-        @Override\n-        public RECORD getRecord( long id, RECORD record, RecordLoad load )\n-        {\n-            accessStats.upRead( id );\n-            return super.getRecord( id, record, load );\n-        }\n+      accessStats.upRead(id);\n+      return super.getRecord(id, record, load);\n     }\n+  }\n }\n",
            "diff_size": 51
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3187/AccessStatsKeepingStoreAccess.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3187/AccessStatsKeepingStoreAccess.java\nindex 077edf919f3..d771b14f65a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3187/AccessStatsKeepingStoreAccess.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3187/AccessStatsKeepingStoreAccess.java\n@@ -47,8 +47,7 @@ public class AccessStatsKeepingStoreAccess extends StoreAccess\n         return new AccessStatsKeepingRecordStore( store, accessStats );\n     }\n \n-    private static class AccessStatsKeepingRecordStore<RECORD extends AbstractBaseRecord>\n-            extends RecordStore.Delegator<RECORD>\n+    private static class AccessStatsKeepingRecordStore<RECORD extends AbstractBaseRecord> extends RecordStore.Delegator<RECORD>\n     {\n         private final AccessStats accessStats;\n \n@@ -70,4 +69,4 @@ public class AccessStatsKeepingStoreAccess extends StoreAccess\n             return super.getRecord( id, record, load );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "467",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "59",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "14",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "86",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "130",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "142",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "142",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "19",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "158",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "158",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "174",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "174",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "180",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "180",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "184",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "184",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "189",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "189",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "190",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "190",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "190",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "196",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "196",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "201",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "201",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "204",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "204",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/467/AbstractAppServer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/467/AbstractAppServer.java\nindex d9ce57bb710..5b116341955 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/467/AbstractAppServer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/467/AbstractAppServer.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.shell.impl;\n \n import java.io.Serializable;\n@@ -50,163 +51,161 @@ import org.neo4j.shell.TabCompletion;\n public abstract class AbstractAppServer extends SimpleAppServer\n     implements AppShellServer\n {\n-    private final Map<String, App> apps = new TreeMap<>();\n-\n-    public AbstractAppServer()\n-            throws RemoteException\n+  private final Map<String, App> apps = new TreeMap<>();\n+\n+  public AbstractAppServer()\n+      throws RemoteException\n+  {\n+    this(true);\n+  }\n+\n+  /**\n+   * Constructs a new server.\n+   *\n+   * @throws RemoteException if there's an RMI error.\n+   */\n+  public AbstractAppServer(boolean addFromServiceLoading)\n+      throws RemoteException\n+  {\n+    super();\n+    if (addFromServiceLoading)\n     {\n-        this( true );\n+      for (App app : Service.load(App.class))\n+      {\n+        addApp(app);\n+      }\n     }\n+  }\n \n-    /**\n-     * Constructs a new server.\n-     * @throws RemoteException if there's an RMI error.\n-     */\n-    public AbstractAppServer( boolean addFromServiceLoading )\n-        throws RemoteException\n+  protected void addApp(App app)\n+  {\n+    apps.put(app.getName(), app);\n+    try\n     {\n-        super();\n-        if ( addFromServiceLoading )\n-        {\n-            for ( App app : Service.load( App.class ) )\n-            {\n-                addApp( app );\n-            }\n-        }\n-    }\n-\n-    protected void addApp( App app )\n+      ((AbstractApp) app).setServer(this);\n+    } catch (Exception e)\n     {\n-        apps.put( app.getName(), app );\n-        try\n-        {\n-            ( (AbstractApp) app ).setServer( this );\n-        }\n-        catch ( Exception e )\n-        {\n-            // TODO It's OK, or is it?\n-        }\n+      // TODO It's OK, or is it?\n     }\n-\n-    @Override\n-    public App findApp( String command )\n+  }\n+\n+  @Override\n+  public App findApp(String command)\n+  {\n+    return apps.get(command);\n+  }\n+\n+  @Override\n+  public void shutdown() throws RemoteException\n+  {\n+    for (App app : this.apps.values())\n     {\n-        return apps.get( command );\n+      app.shutdown();\n     }\n \n-    @Override\n-    public void shutdown() throws RemoteException\n-    {\n-        for ( App app : this.apps.values() )\n-        {\n-            app.shutdown();\n-        }\n-\n-        super.shutdown();\n-    }\n+    super.shutdown();\n+  }\n \n-    @Override\n-    public Response interpretLine( Serializable clientId, String line, Output out )\n-        throws ShellException\n+  @Override\n+  public Response interpretLine(Serializable clientId, String line, Output out)\n+      throws ShellException\n+  {\n+    Session session = getClientSession(clientId);\n+    if (line == null || line.trim().length() == 0)\n     {\n-        Session session = getClientSession( clientId );\n-        if ( line == null || line.trim().length() == 0 )\n-        {\n-            return new Response( getPrompt( session ), Continuation.INPUT_COMPLETE );\n-        }\n-\n-        try\n-        {\n-            Continuation commandResult = null;\n-            for ( String command : line.split( Pattern.quote( \"&&\" ) ) )\n-            {\n-                command = removeSpaces( command );\n-                command = replaceAlias( command, session );\n-                AppCommandParser parser = new AppCommandParser( this, command );\n-                commandResult = parser.app().execute( parser, session, out );\n-            }\n-            return new Response( getPrompt( session ), commandResult );\n-        }\n-        catch ( Exception e )\n-        {\n-            throw wrapException( e );\n-        }\n+      return new Response(getPrompt(session), Continuation.INPUT_COMPLETE);\n     }\n \n-    private static String removeSpaces( String command )\n+    try\n+    {\n+      Continuation commandResult = null;\n+      for (String command : line.split(Pattern.quote(\"&&\")))\n+      {\n+        command = removeSpaces(command);\n+        command = replaceAlias(command, session);\n+        AppCommandParser parser = new AppCommandParser(this, command);\n+        commandResult = parser.app().execute(parser, session, out);\n+      }\n+      return new Response(getPrompt(session), commandResult);\n+    } catch (Exception e)\n     {\n-        while ( command.length() > 0 && command.charAt( 0 ) == ' ' )\n-        {\n-            command = command.substring( 1 );\n-        }\n-        while ( command.length() > 0 && command.charAt( command.length() - 1 ) == ' ' )\n-        {\n-            command = command.substring( 0, command.length() - 1 );\n-        }\n-        return command;\n+      throw wrapException(e);\n     }\n+  }\n \n-    protected String replaceAlias( String line, Session session )\n+  private static String removeSpaces(String command)\n+  {\n+    while (command.length() > 0 && command.charAt(0) == ' ')\n     {\n-        boolean changed = true;\n-        Set<String> appNames = new HashSet<>();\n-        while ( changed )\n-        {\n-            changed = false;\n-            String appName = AppCommandParser.parseOutAppName( line );\n-            String alias = session.getAlias( appName );\n-            if ( alias != null && appNames.add( alias ) )\n-            {\n-                changed = true;\n-                line = alias + line.substring( appName.length() );\n-            }\n-        }\n-        return line;\n+      command = command.substring(1);\n     }\n-\n-    @Override\n-    public String[] getAllAvailableCommands()\n+    while (command.length() > 0 && command.charAt(command.length() - 1) == ' ')\n     {\n-        return apps.keySet().toArray( new String[apps.size()] );\n+      command = command.substring(0, command.length() - 1);\n     }\n-\n-    @Override\n-    public TabCompletion tabComplete( Serializable clientID, String partOfLine )\n-            throws ShellException, RemoteException\n+    return command;\n+  }\n+\n+  protected String replaceAlias(String line, Session session)\n+  {\n+    boolean changed = true;\n+    Set<String> appNames = new HashSet<>();\n+    while (changed)\n     {\n-        // TODO We can't assume it's an AppShellServer, can we?\n-        try\n-        {\n-            AppCommandParser parser = new AppCommandParser( this, partOfLine );\n-            App app = parser.app();\n-            List<String> appCandidates = app.completionCandidates( partOfLine, getClientSession( clientID ) );\n-            appCandidates = quote( appCandidates );\n-            if ( appCandidates.size() == 1 )\n-            {\n-                appCandidates.set( 0, appCandidates.get( 0 ) + \" \" );\n-            }\n-            int cursor = partOfLine.length() - TextUtil.lastWordOrQuoteOf( partOfLine, true ).length();\n-            return new TabCompletion( appCandidates, cursor );\n-        }\n-        catch ( Exception e )\n-        {\n-            throw wrapException( e );\n-        }\n+      changed = false;\n+      String appName = AppCommandParser.parseOutAppName(line);\n+      String alias = session.getAlias(appName);\n+      if (alias != null && appNames.add(alias))\n+      {\n+        changed = true;\n+        line = alias + line.substring(appName.length());\n+      }\n     }\n-\n-    protected ShellException wrapException( Exception e )\n+    return line;\n+  }\n+\n+  @Override\n+  public String[] getAllAvailableCommands()\n+  {\n+    return apps.keySet().toArray(new String[apps.size()]);\n+  }\n+\n+  @Override\n+  public TabCompletion tabComplete(Serializable clientID, String partOfLine)\n+      throws ShellException, RemoteException\n+  {\n+    // TODO We can't assume it's an AppShellServer, can we?\n+    try\n+    {\n+      AppCommandParser parser = new AppCommandParser(this, partOfLine);\n+      App app = parser.app();\n+      List<String> appCandidates = app.completionCandidates(partOfLine, getClientSession(clientID));\n+      appCandidates = quote(appCandidates);\n+      if (appCandidates.size() == 1)\n+      {\n+        appCandidates.set(0, appCandidates.get(0) + \" \");\n+      }\n+      int cursor = partOfLine.length() - TextUtil.lastWordOrQuoteOf(partOfLine, true).length();\n+      return new TabCompletion(appCandidates, cursor);\n+    } catch (Exception e)\n     {\n-        return ShellException.wrapCause( e );\n+      throw wrapException(e);\n     }\n+  }\n+\n+  protected ShellException wrapException(Exception e)\n+  {\n+    return ShellException.wrapCause(e);\n+  }\n \n-    private static List<String> quote( List<String> candidates )\n+  private static List<String> quote(List<String> candidates)\n+  {\n+    List<String> result = new ArrayList<>();\n+    for (String candidate : candidates)\n     {\n-        List<String> result = new ArrayList<>();\n-        for ( String candidate : candidates )\n-        {\n-            candidate = candidate.replaceAll( \" \", \"\\\\\\\\ \" );\n-            result.add( candidate );\n-        }\n-        return result;\n+      candidate = candidate.replaceAll(\" \", \"\\\\\\\\ \");\n+      result.add(candidate);\n     }\n+    return result;\n+  }\n }\n",
            "diff_size": 217
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/467/AbstractAppServer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/467/AbstractAppServer.java\nindex d9ce57bb710..bf327a9fda2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/467/AbstractAppServer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/467/AbstractAppServer.java\n@@ -47,14 +47,12 @@ import org.neo4j.shell.TabCompletion;\n  * common apps exist. All classes in those packages which implements the\n  * {@link App} interface will be available to execute.\n  */\n-public abstract class AbstractAppServer extends SimpleAppServer\n-    implements AppShellServer\n+public abstract class AbstractAppServer extends SimpleAppServer implements AppShellServer\n {\n-    private final Map<String, App> apps = new TreeMap<>();\n+    private final Map<String,App> apps = new TreeMap<>();\n \n-    public AbstractAppServer()\n-            throws RemoteException\n-    {\n+    public AbstractAppServer() throws RemoteException\n+{\n         this( true );\n     }\n \n@@ -62,9 +60,8 @@ public abstract class AbstractAppServer extends SimpleAppServer\n      * Constructs a new server.\n      * @throws RemoteException if there's an RMI error.\n      */\n-    public AbstractAppServer( boolean addFromServiceLoading )\n-        throws RemoteException\n-    {\n+    public AbstractAppServer( boolean addFromServiceLoading ) throws RemoteException\n+{\n         super();\n         if ( addFromServiceLoading )\n         {\n@@ -80,7 +77,7 @@ public abstract class AbstractAppServer extends SimpleAppServer\n         apps.put( app.getName(), app );\n         try\n         {\n-            ( (AbstractApp) app ).setServer( this );\n+            ((AbstractApp) app).setServer( this );\n         }\n         catch ( Exception e )\n         {\n@@ -106,9 +103,8 @@ public abstract class AbstractAppServer extends SimpleAppServer\n     }\n \n     @Override\n-    public Response interpretLine( Serializable clientId, String line, Output out )\n-        throws ShellException\n-    {\n+    public Response interpretLine( Serializable clientId, String line, Output out ) throws ShellException\n+{\n         Session session = getClientSession( clientId );\n         if ( line == null || line.trim().length() == 0 )\n         {\n@@ -143,7 +139,8 @@ public abstract class AbstractAppServer extends SimpleAppServer\n         {\n             command = command.substring( 0, command.length() - 1 );\n         }\n-        return command;\n+\n+return command;\n     }\n \n     protected String replaceAlias( String line, Session session )\n@@ -171,9 +168,8 @@ public abstract class AbstractAppServer extends SimpleAppServer\n     }\n \n     @Override\n-    public TabCompletion tabComplete( Serializable clientID, String partOfLine )\n-            throws ShellException, RemoteException\n-    {\n+    public TabCompletion tabComplete( Serializable clientID, String partOfLine ) throws ShellException, RemoteException\n+{\n         // TODO We can't assume it's an AppShellServer, can we?\n         try\n         {\n@@ -207,6 +203,7 @@ public abstract class AbstractAppServer extends SimpleAppServer\n             candidate = candidate.replaceAll( \" \", \"\\\\\\\\ \" );\n             result.add( candidate );\n         }\n-        return result;\n+\n+return result;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 21
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
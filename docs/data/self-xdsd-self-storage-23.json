{
    "project_name": "self-xdsd-self-storage",
    "error_id": "23",
    "information": {
        "errors": [
            {
                "line": "97",
                "column": "12",
                "severity": "error",
                "message": "'for' is not followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
            }
        ]
    },
    "source_code": "            )\n        );\n        for(final Project project : amihaiemil) {\n            final User owner = project.owner();\n            MatcherAssert.assertThat(\n                owner.username(),",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/errored/1/23/SelfProjectsITCase.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/styler/23/SelfProjectsITCase.java\nindex a01b0ec7cee..940b1d53030 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/errored/1/23/SelfProjectsITCase.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/styler/23/SelfProjectsITCase.java\n@@ -94,7 +94,8 @@ public final class SelfProjectsITCase {\n                 Matchers.greaterThanOrEqualTo(2)\n             )\n         );\n-        for(final Project project : amihaiemil) {\n+        for (\n+            final Project project : amihaiemil) {\n             final User owner = project.owner();\n             MatcherAssert.assertThat(\n                 owner.username(),\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/errored/1/23/SelfProjectsITCase.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/intellij/23/SelfProjectsITCase.java\nindex a01b0ec7cee..55b90428fdf 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/errored/1/23/SelfProjectsITCase.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/intellij/23/SelfProjectsITCase.java\n@@ -20,6 +20,7 @@\n  * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n  * POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package com.selfxdsd.storage;\n \n import com.selfxdsd.api.*;\n@@ -31,6 +32,7 @@ import org.mockito.Mockito;\n /**\n  * Integration tests for {@link SelfProjects}.\n  * Read the package-info.java if you want to run these tests manually.\n+ *\n  * @author Mihai Andronache (amihaiemil@gmail.com)\n  * @version $Id$\n  * @since 0.0.1\n@@ -94,7 +96,7 @@ public final class SelfProjectsITCase {\n                 Matchers.greaterThanOrEqualTo(2)\n             )\n         );\n-        for(final Project project : amihaiemil) {\n+        for (final Project project : amihaiemil) {\n             final User owner = project.owner();\n             MatcherAssert.assertThat(\n                 owner.username(),\n@@ -122,6 +124,7 @@ public final class SelfProjectsITCase {\n \n     /**\n      * Mock a User for test.\n+     *\n      * @param username Username.\n      * @param provider Provider.\n      * @return User.\n",
            "diff_size": 4
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "46",
                    "severity": "error",
                    "message": "'new' has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "'\"amihaiemil/docker-java-api\"' has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "54",
                    "severity": "error",
                    "message": "')' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "59",
                    "severity": "error",
                    "message": "'\"amihaiemil\"' has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "60",
                    "severity": "error",
                    "message": "')' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "65",
                    "severity": "error",
                    "message": "'1' has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "66",
                    "severity": "error",
                    "message": "')' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "71",
                    "severity": "error",
                    "message": "')' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "81",
                    "severity": "error",
                    "message": "'new' has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "97",
                    "severity": "error",
                    "message": "'new' has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "100",
                    "severity": "error",
                    "message": "'\"amihaiemil\"' has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "101",
                    "severity": "error",
                    "message": "')' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "107",
                    "severity": "error",
                    "message": "'2' has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "108",
                    "severity": "error",
                    "message": "')' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "111",
                    "column": "12",
                    "severity": "error",
                    "message": "'for' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "116",
                    "severity": "error",
                    "message": "'\"amihaiemil\"' has incorrect indentation level 4, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "117",
                    "severity": "error",
                    "message": "')' has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "122",
                    "severity": "error",
                    "message": "')' has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "134",
                    "severity": "error",
                    "message": "'new' has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "137",
                    "severity": "error",
                    "message": "'\"thomas\"' has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "138",
                    "severity": "error",
                    "message": "')' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/errored/1/23/SelfProjectsITCase.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/naturalize/23/SelfProjectsITCase.java\nindex a01b0ec7cee..97dda8d39bf 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/errored/1/23/SelfProjectsITCase.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/naturalize/23/SelfProjectsITCase.java\n@@ -42,25 +42,33 @@ public final class SelfProjectsITCase {\n      */\n     @Test\n     public void getsProjectById() {\n-        final Projects projects = new SelfJooq(new H2Database()).projects();\n+        final Projects projects = new SelfJooq(\n+    new H2Database()).projects();\n         final Project found = projects.getProjectById(\n             \"amihaiemil/docker-java-api\", Provider.Names.GITHUB\n         );\n         MatcherAssert.assertThat(\n             found.repoFullName(),\n-            Matchers.equalTo(\"amihaiemil/docker-java-api\")\n+            Matchers.equalTo(\n+    \"amihaiemil/docker-java-api\"\n+    )\n         );\n         MatcherAssert.assertThat(\n             found.owner().username(),\n-            Matchers.equalTo(\"amihaiemil\")\n+            Matchers.equalTo(\n+    \"amihaiemil\"\n+    )\n         );\n         MatcherAssert.assertThat(\n             found.projectManager().id(),\n-            Matchers.equalTo(1)\n+            Matchers.equalTo(\n+    1\n+    )\n         );\n         MatcherAssert.assertThat(\n             found.projectManager().provider(),\n-            Matchers.equalTo(Provider.Names.GITHUB)\n+            Matchers.equalTo(Provider.Names.GITHUB\n+    )\n         );\n     }\n \n@@ -69,7 +77,8 @@ public final class SelfProjectsITCase {\n      */\n     @Test\n     public void returnsNullIfProjectMissing() {\n-        final Projects projects = new SelfJooq(new H2Database()).projects();\n+        final Projects projects = new SelfJooq(\n+    new H2Database()).projects();\n         final Project found = projects.getProjectById(\n             \"amihaiemil/missing\", Provider.Names.GITHUB\n         );\n@@ -84,25 +93,33 @@ public final class SelfProjectsITCase {\n      */\n     @Test\n     public void returnsOwnedByUser() {\n-        final Projects all = new SelfJooq(new H2Database()).projects();\n+        final Projects all = new SelfJooq(\n+    new H2Database()).projects();\n         final Projects amihaiemil = all.ownedBy(\n-            this.mockUser(\"amihaiemil\", Provider.Names.GITHUB)\n+            this.mockUser(\n+    \"amihaiemil\", Provider.Names.GITHUB\n+    )\n         );\n         MatcherAssert.assertThat(\n             amihaiemil,\n             Matchers.iterableWithSize(\n-                Matchers.greaterThanOrEqualTo(2)\n+                Matchers.greaterThanOrEqualTo(\n+    2\n+    )\n             )\n         );\n         for(final Project project : amihaiemil) {\n             final User owner = project.owner();\n             MatcherAssert.assertThat(\n                 owner.username(),\n-                Matchers.equalTo(\"amihaiemil\")\n+                Matchers.equalTo(\n+    \"amihaiemil\"\n+    )\n             );\n             MatcherAssert.assertThat(\n                 owner.provider().name(),\n-                Matchers.equalTo(Provider.Names.GITHUB)\n+                Matchers.equalTo(Provider.Names.GITHUB\n+    )\n             );\n         }\n     }\n@@ -113,9 +130,12 @@ public final class SelfProjectsITCase {\n      */\n     @Test\n     public void returnsEmptyOwnedByUser() {\n-        final Projects all = new SelfJooq(new H2Database()).projects();\n+        final Projects all = new SelfJooq(\n+    new H2Database()).projects();\n         final Projects ofThomas = all.ownedBy(\n-            this.mockUser(\"thomas\", Provider.Names.GITLAB)\n+            this.mockUser(\n+    \"thomas\", Provider.Names.GITLAB\n+    )\n         );\n         MatcherAssert.assertThat(ofThomas, Matchers.emptyIterable());\n     }\n@@ -137,4 +157,4 @@ public final class SelfProjectsITCase {\n \n         return user;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 34
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "50",
                    "severity": "error",
                    "message": "'new' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "57",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 29, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "60",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 32, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "61",
                    "column": "34",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "64",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 35, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "65",
                    "column": "37",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "67",
                    "column": "60",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 38, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "68",
                    "column": "40",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "70",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 85).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "70",
                    "column": "63",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "severity": "error",
                    "message": "'method call rparen' has incorrect indentation level 41, expected level should be 38.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "71",
                    "column": "43",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "81",
                    "severity": "error",
                    "message": "'new' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "88",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 29, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "91",
                    "severity": "error",
                    "message": "'method call rparen' has incorrect indentation level 32, expected level should be 29.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "91",
                    "column": "34",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "101",
                    "severity": "error",
                    "message": "'new' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "109",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 40, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "109",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 111).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "111",
                    "column": "76",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "107",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "110",
                    "severity": "error",
                    "message": "')' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "severity": "error",
                    "message": "'method call rparen' has incorrect indentation level 45, expected level should be 40.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "112",
                    "column": "47",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "115",
                    "column": "12",
                    "severity": "error",
                    "message": "'for' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "115",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "severity": "error",
                    "message": "'for' child has incorrect indentation level 52, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "116",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 112).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "117",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 108).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "118",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 108).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "119",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 105).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "119",
                    "column": "104",
                    "severity": "error",
                    "message": "')' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "severity": "error",
                    "message": "'for' child has incorrect indentation level 87, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "120",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 115).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "120",
                    "column": "89",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "121",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 119).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "122",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 134).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "122",
                    "column": "112",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "severity": "error",
                    "message": "'method call rparen' has incorrect indentation level 90, expected level should be 87.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "123",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 92).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "123",
                    "column": "92",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "124",
                    "severity": "error",
                    "message": "'for rcurly' has incorrect indentation level 48, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "135",
                    "severity": "error",
                    "message": "'new' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "143",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 38, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "143",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "severity": "error",
                    "message": "'method call rparen' has incorrect indentation level 43, expected level should be 38.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "146",
                    "column": "45",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "157",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 106).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "157",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "66",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "96",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "106",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "160",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 161).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "160",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "74",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "100",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "110",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "160",
                    "column": "125",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "141",
                    "severity": "error",
                    "message": "')' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "155",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "161",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/errored/1/23/SelfProjectsITCase.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/codebuff/23/SelfProjectsITCase.java\nindex a01b0ec7cee..8a9e4fc9c03 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/errored/1/23/SelfProjectsITCase.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/codebuff/23/SelfProjectsITCase.java\n@@ -35,89 +35,115 @@ import org.mockito.Mockito;\n  * @version $Id$\n  * @since 0.0.1\n  */\n+\n+\n public final class SelfProjectsITCase {\n \n     /**\n      * Returns a project by its ID.\n      */\n+\n+\n     @Test\n     public void getsProjectById() {\n-        final Projects projects = new SelfJooq(new H2Database()).projects();\n-        final Project found = projects.getProjectById(\n-            \"amihaiemil/docker-java-api\", Provider.Names.GITHUB\n-        );\n-        MatcherAssert.assertThat(\n-            found.repoFullName(),\n-            Matchers.equalTo(\"amihaiemil/docker-java-api\")\n-        );\n-        MatcherAssert.assertThat(\n-            found.owner().username(),\n-            Matchers.equalTo(\"amihaiemil\")\n-        );\n-        MatcherAssert.assertThat(\n-            found.projectManager().id(),\n-            Matchers.equalTo(1)\n-        );\n-        MatcherAssert.assertThat(\n-            found.projectManager().provider(),\n-            Matchers.equalTo(Provider.Names.GITHUB)\n-        );\n+        final Projects projects= new SelfJooq(\n+new H2Database()\n+                                 ) .projects();\n+\n+\n+        final Project found= projects.getProjectById(\n+                                 \"amihaiemil/docker-java-api\",\n+                                 Provider.Names.GITHUB\n+                             ); MatcherAssert.assertThat(\n+                                    found.repoFullName(),\n+                                    Matchers.equalTo(\n+                                    \"amihaiemil/docker-java-api\" )\n+                                ); MatcherAssert.assertThat(\n+                                       found.owner() .username(),\n+                                       Matchers.equalTo(\n+                                       \"amihaiemil\" )\n+                                   ); MatcherAssert.assertThat(\n+                                          found.projectManager() .id(),\n+                                          Matchers.equalTo( 1)\n+                                      ); MatcherAssert.assertThat(\n+                                             found.projectManager() .provider(),\n+                                             Matchers.equalTo( Provider.Names.GITHUB)\n+                                         );\n     }\n \n     /**\n      * Returns null the project is not found.\n      */\n+\n     @Test\n     public void returnsNullIfProjectMissing() {\n-        final Projects projects = new SelfJooq(new H2Database()).projects();\n-        final Project found = projects.getProjectById(\n-            \"amihaiemil/missing\", Provider.Names.GITHUB\n-        );\n-        MatcherAssert.assertThat(\n-            found,\n-            Matchers.nullValue()\n-        );\n+        final Projects projects= new SelfJooq(\n+new H2Database()\n+                                 ) .projects();\n+\n+\n+        final Project found= projects.getProjectById(\n+                                 \"amihaiemil/missing\",\n+                                 Provider.Names.GITHUB\n+                             ); MatcherAssert.assertThat(\n+                                    found,\n+                                    Matchers.nullValue()\n+                                );\n     }\n \n     /**\n      * SelfProjects can return the Projects owned by a certain User.\n      */\n+\n     @Test\n     public void returnsOwnedByUser() {\n-        final Projects all = new SelfJooq(new H2Database()).projects();\n-        final Projects amihaiemil = all.ownedBy(\n-            this.mockUser(\"amihaiemil\", Provider.Names.GITHUB)\n-        );\n-        MatcherAssert.assertThat(\n-            amihaiemil,\n-            Matchers.iterableWithSize(\n-                Matchers.greaterThanOrEqualTo(2)\n-            )\n-        );\n-        for(final Project project : amihaiemil) {\n-            final User owner = project.owner();\n-            MatcherAssert.assertThat(\n-                owner.username(),\n-                Matchers.equalTo(\"amihaiemil\")\n-            );\n-            MatcherAssert.assertThat(\n-                owner.provider().name(),\n-                Matchers.equalTo(Provider.Names.GITHUB)\n-            );\n-        }\n+        final Projects all= new SelfJooq(\n+new H2Database()\n+                            ) .projects();\n+\n+\n+        final Projects amihaiemil= all.ownedBy(\n+                                   this .mockUser(\n+                                            \"amihaiemil\",\n+                                            Provider.Names.GITHUB\n+                                        ) ); MatcherAssert.assertThat(\n+                                                 amihaiemil,\n+                                                 Matchers.iterableWithSize( Matchers.greaterThanOrEqualTo( 2) )\n+                                             );\n+\n+\n+        for( final Project project: amihaiemil) {\n+                                                    final User owner= project.owner(); MatcherAssert.assertThat(\n+                                                                                           owner.username(),\n+                                                                                           Matchers.equalTo(\n+                                                                                           \"amihaiemil\" )\n+                                                                                       ); MatcherAssert.assertThat(\n+                                                                                              owner.provider() .name(),\n+                                                                                              Matchers.equalTo( Provider.Names.GITHUB)\n+                                                                                          );\n+                                                }\n     }\n \n     /**\n      * SelfProjects can return empty Projects if the user doesn't own any\n      * projects.\n      */\n+\n     @Test\n     public void returnsEmptyOwnedByUser() {\n-        final Projects all = new SelfJooq(new H2Database()).projects();\n-        final Projects ofThomas = all.ownedBy(\n-            this.mockUser(\"thomas\", Provider.Names.GITLAB)\n-        );\n-        MatcherAssert.assertThat(ofThomas, Matchers.emptyIterable());\n+        final Projects all= new SelfJooq(\n+new H2Database()\n+                            ) .projects();\n+\n+\n+        final Projects ofThomas= all.ownedBy(\n+                                 this .mockUser(\n+                                          \"thomas\",\n+                                          Provider.Names.GITLAB\n+                                      ) ); MatcherAssert.assertThat(\n+                                               ofThomas,\n+                                               Matchers.emptyIterable()\n+                                           );\n     }\n \n     /**\n@@ -126,15 +152,12 @@ public final class SelfProjectsITCase {\n      * @param provider Provider.\n      * @return User.\n      */\n-    private User mockUser(final String username, final String provider) {\n-        final User user = Mockito.mock(User.class);\n-        Mockito.when(user.username()).thenReturn(username);\n \n-        final Provider prov = Mockito.mock(Provider.class);\n-        Mockito.when(prov.name()).thenReturn(provider);\n+    private User mockUser(final String username, final String provider) {\n+        final User user= Mockito.mock( User.class); Mockito.when( user.username() ).thenReturn( username);\n \n-        Mockito.when(user.provider()).thenReturn(prov);\n \n+        final Provider prov= Mockito.mock( Provider.class); Mockito.when( prov.name() ).thenReturn( provider); Mockito.when( user.provider() ).thenReturn( prov);\n         return user;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 88
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/errored/1/23/SelfProjectsITCase.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/styler_random/23/SelfProjectsITCase.java\nindex a01b0ec7cee..940b1d53030 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/errored/1/23/SelfProjectsITCase.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/styler_random/23/SelfProjectsITCase.java\n@@ -94,7 +94,8 @@ public final class SelfProjectsITCase {\n                 Matchers.greaterThanOrEqualTo(2)\n             )\n         );\n-        for(final Project project : amihaiemil) {\n+        for (\n+            final Project project : amihaiemil) {\n             final User owner = project.owner();\n             MatcherAssert.assertThat(\n                 owner.username(),\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "98",
                    "severity": "error",
                    "message": "'for lparen' has incorrect indentation level 12, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/errored/1/23/SelfProjectsITCase.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/styler_three_grams/23/SelfProjectsITCase.java\nindex a01b0ec7cee..df14388d6da 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/errored/1/23/SelfProjectsITCase.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/styler_three_grams/23/SelfProjectsITCase.java\n@@ -94,7 +94,8 @@ public final class SelfProjectsITCase {\n                 Matchers.greaterThanOrEqualTo(2)\n             )\n         );\n-        for(final Project project : amihaiemil) {\n+        for\n+            (final Project project : amihaiemil) {\n             final User owner = project.owner();\n             MatcherAssert.assertThat(\n                 owner.username(),\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff",
        "styler_three_grams"
    ]
}
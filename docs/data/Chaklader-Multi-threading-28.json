{
    "project_name": "Chaklader-Multi-threading",
    "error_id": "28",
    "information": {
        "errors": [
            {
                "line": "10",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 105).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "class EventWindowSort {\n    private final ConcurrentSkipListMap<ZonedDateTime, String> events\n      = new ConcurrentSkipListMap<>(Comparator.comparingLong(value -> value.toInstant().toEpochMilli()));\n\n    void acceptEvent(Event event) {\n        events.put(event.getEventTime(), event.getContent());",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Chaklader-Multi-threading/errored/1/28/EventWindowSort.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Chaklader-Multi-threading/styler/28/EventWindowSort.java\nindex 2e501ed3681..1df6a63e003 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Chaklader-Multi-threading/errored/1/28/EventWindowSort.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Chaklader-Multi-threading/styler/28/EventWindowSort.java\n@@ -7,7 +7,8 @@ import java.util.concurrent.ConcurrentSkipListMap;\n \n class EventWindowSort {\n     private final ConcurrentSkipListMap<ZonedDateTime, String> events\n-      = new ConcurrentSkipListMap<>(Comparator.comparingLong(value -> value.toInstant().toEpochMilli()));\n+\n+    = new ConcurrentSkipListMap<>(Comparator.comparingLong(value -> value.toInstant().toEpochMilli()));\n \n     void acceptEvent(Event event) {\n         events.put(event.getEventTime(), event.getContent());\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Chaklader-Multi-threading/errored/1/28/EventWindowSort.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Chaklader-Multi-threading/intellij/28/EventWindowSort.java\nindex 2e501ed3681..32e30438d3e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Chaklader-Multi-threading/errored/1/28/EventWindowSort.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Chaklader-Multi-threading/intellij/28/EventWindowSort.java\n@@ -7,7 +7,8 @@ import java.util.concurrent.ConcurrentSkipListMap;\n \n class EventWindowSort {\n     private final ConcurrentSkipListMap<ZonedDateTime, String> events\n-      = new ConcurrentSkipListMap<>(Comparator.comparingLong(value -> value.toInstant().toEpochMilli()));\n+            = new ConcurrentSkipListMap<>(\n+            Comparator.comparingLong(value -> value.toInstant().toEpochMilli()));\n \n     void acceptEvent(Event event) {\n         events.put(event.getEventTime(), event.getContent());\n@@ -15,14 +16,14 @@ class EventWindowSort {\n \n     ConcurrentNavigableMap<ZonedDateTime, String> getEventsFromLastMinute() {\n         return events.tailMap(ZonedDateTime\n-          .now()\n-          .minusMinutes(1));\n+                .now()\n+                .minusMinutes(1));\n     }\n \n     ConcurrentNavigableMap<ZonedDateTime, String> getEventsOlderThatOneMinute() {\n         return events.headMap(ZonedDateTime\n-          .now()\n-          .minusMinutes(1));\n+                .now()\n+                .minusMinutes(1));\n     }\n \n }\n",
            "diff_size": 6
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "9",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 169).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Chaklader-Multi-threading/errored/1/28/EventWindowSort.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Chaklader-Multi-threading/naturalize/28/EventWindowSort.java\nindex 2e501ed3681..22db7fb0ea5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Chaklader-Multi-threading/errored/1/28/EventWindowSort.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Chaklader-Multi-threading/naturalize/28/EventWindowSort.java\n@@ -6,24 +6,20 @@ import java.util.concurrent.ConcurrentNavigableMap;\n import java.util.concurrent.ConcurrentSkipListMap;\n \n class EventWindowSort {\n-    private final ConcurrentSkipListMap<ZonedDateTime, String> events\n-      = new ConcurrentSkipListMap<>(Comparator.comparingLong(value -> value.toInstant().toEpochMilli()));\n+    private final ConcurrentSkipListMap<ZonedDateTime, String> events = new ConcurrentSkipListMap<>(Comparator.comparingLong(value -> value.toInstant().toEpochMilli()));\n \n-    void acceptEvent(Event event) {\n+void acceptEvent(Event event) {\n         events.put(event.getEventTime(), event.getContent());\n     }\n \n     ConcurrentNavigableMap<ZonedDateTime, String> getEventsFromLastMinute() {\n-        return events.tailMap(ZonedDateTime\n-          .now()\n+        return events.tailMap(ZonedDateTime.now()\n           .minusMinutes(1));\n     }\n \n     ConcurrentNavigableMap<ZonedDateTime, String> getEventsOlderThatOneMinute() {\n-        return events.headMap(ZonedDateTime\n-          .now()\n+        return events.headMap(ZonedDateTime.now()\n           .minusMinutes(1));\n     }\n \n-}\n-\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "10",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 169).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Chaklader-Multi-threading/errored/1/28/EventWindowSort.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Chaklader-Multi-threading/codebuff/28/EventWindowSort.java\nindex 2e501ed3681..e76e8a7e47a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Chaklader-Multi-threading/errored/1/28/EventWindowSort.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Chaklader-Multi-threading/codebuff/28/EventWindowSort.java\n@@ -6,24 +6,18 @@ import java.util.concurrent.ConcurrentNavigableMap;\n import java.util.concurrent.ConcurrentSkipListMap;\n \n class EventWindowSort {\n-    private final ConcurrentSkipListMap<ZonedDateTime, String> events\n-      = new ConcurrentSkipListMap<>(Comparator.comparingLong(value -> value.toInstant().toEpochMilli()));\n+\n+    private final ConcurrentSkipListMap<ZonedDateTime, String> events = new ConcurrentSkipListMap<>(Comparator.comparingLong(value -> value.toInstant().toEpochMilli()));\n \n     void acceptEvent(Event event) {\n         events.put(event.getEventTime(), event.getContent());\n     }\n \n     ConcurrentNavigableMap<ZonedDateTime, String> getEventsFromLastMinute() {\n-        return events.tailMap(ZonedDateTime\n-          .now()\n-          .minusMinutes(1));\n+        return events.tailMap(ZonedDateTime.now().minusMinutes(1));\n     }\n \n     ConcurrentNavigableMap<ZonedDateTime, String> getEventsOlderThatOneMinute() {\n-        return events.headMap(ZonedDateTime\n-          .now()\n-          .minusMinutes(1));\n+        return events.headMap(ZonedDateTime.now().minusMinutes(1));\n     }\n-\n-}\n-\n+}\n\\ No newline at end of file\n",
            "diff_size": 11
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "10",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 109).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "10",
                    "column": "67",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Chaklader-Multi-threading/errored/1/28/EventWindowSort.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Chaklader-Multi-threading/styler_random/28/EventWindowSort.java\nindex 2e501ed3681..0d104bd2d7e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Chaklader-Multi-threading/errored/1/28/EventWindowSort.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Chaklader-Multi-threading/styler_random/28/EventWindowSort.java\n@@ -7,7 +7,8 @@ import java.util.concurrent.ConcurrentSkipListMap;\n \n class EventWindowSort {\n     private final ConcurrentSkipListMap<ZonedDateTime, String> events\n-      = new ConcurrentSkipListMap<>(Comparator.comparingLong(value -> value.toInstant().toEpochMilli()));\n+            = new ConcurrentSkipListMap<>(Comparator.comparingLong( value ->value.toInstant().toEpochMilli())\n+    ) ;\n \n     void acceptEvent(Event event) {\n         events.put(event.getEventTime(), event.getContent());\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Chaklader-Multi-threading/errored/1/28/EventWindowSort.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Chaklader-Multi-threading/styler_three_grams/28/EventWindowSort.java\nindex 2e501ed3681..1df6a63e003 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Chaklader-Multi-threading/errored/1/28/EventWindowSort.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Chaklader-Multi-threading/styler_three_grams/28/EventWindowSort.java\n@@ -7,7 +7,8 @@ import java.util.concurrent.ConcurrentSkipListMap;\n \n class EventWindowSort {\n     private final ConcurrentSkipListMap<ZonedDateTime, String> events\n-      = new ConcurrentSkipListMap<>(Comparator.comparingLong(value -> value.toInstant().toEpochMilli()));\n+\n+    = new ConcurrentSkipListMap<>(Comparator.comparingLong(value -> value.toInstant().toEpochMilli()));\n \n     void acceptEvent(Event event) {\n         events.put(event.getEventTime(), event.getContent());\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
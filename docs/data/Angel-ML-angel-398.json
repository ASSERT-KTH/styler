{
    "project_name": "Angel-ML-angel",
    "error_id": "398",
    "information": {
        "errors": [
            {
                "line": "6",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 102).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * Copyright (C) 2017-2018 THL A29 Limited, a Tencent company. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in\n * compliance with the License. You may obtain a copy of the License at\n *\n * https://opensource.org/licenses/Apache-2.0",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/398/TextColumnFormat.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/398/TextColumnFormat.java\nindex 28df03ebfa2..cf90b2e4ca2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/398/TextColumnFormat.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/398/TextColumnFormat.java\n@@ -27,7 +27,8 @@ import java.io.IOException;\n public class TextColumnFormat extends ColumnFormat {\n   public String sep = \",\";\n \n-  @Override public void save(IntFloatsCol col, DataOutputStream output) throws IOException {\n+  @Override\n+  public void save(IntFloatsCol col, DataOutputStream output) throws IOException {\n     StringBuilder sb = new StringBuilder();\n     sb.append(col.colId);\n     sb.append(sep);\n@@ -41,7 +42,8 @@ public class TextColumnFormat extends ColumnFormat {\n     output.writeBytes(sb.toString());\n   }\n \n-  @Override public void save(IntDoublesCol col, DataOutputStream output) throws IOException {\n+  @Override\n+  public void save(IntDoublesCol col, DataOutputStream output) throws IOException {\n     StringBuilder sb = new StringBuilder();\n     sb.append(col.colId);\n     sb.append(sep);\n@@ -55,7 +57,8 @@ public class TextColumnFormat extends ColumnFormat {\n     output.writeBytes(sb.toString());\n   }\n \n-  @Override public void save(IntIntsCol col, DataOutputStream output) throws IOException {\n+  @Override\n+  public void save(IntIntsCol col, DataOutputStream output) throws IOException {\n     StringBuilder sb = new StringBuilder();\n     sb.append(col.colId);\n     sb.append(sep);\n@@ -69,7 +72,8 @@ public class TextColumnFormat extends ColumnFormat {\n     output.writeBytes(sb.toString());\n   }\n \n-  @Override public void save(IntLongsCol col, DataOutputStream output) throws IOException {\n+  @Override\n+  public void save(IntLongsCol col, DataOutputStream output) throws IOException {\n     StringBuilder sb = new StringBuilder();\n     sb.append(col.colId);\n     sb.append(sep);\n@@ -83,7 +87,8 @@ public class TextColumnFormat extends ColumnFormat {\n     output.writeBytes(sb.toString());\n   }\n \n-  @Override public void save(LongFloatsCol col, DataOutputStream output) throws IOException {\n+  @Override\n+  public void save(LongFloatsCol col, DataOutputStream output) throws IOException {\n     StringBuilder sb = new StringBuilder();\n     sb.append(col.colId);\n     sb.append(sep);\n@@ -97,7 +102,8 @@ public class TextColumnFormat extends ColumnFormat {\n     output.writeBytes(sb.toString());\n   }\n \n-  @Override public void save(LongDoublesCol col, DataOutputStream output) throws IOException {\n+  @Override\n+  public void save(LongDoublesCol col, DataOutputStream output) throws IOException {\n     StringBuilder sb = new StringBuilder();\n     sb.append(col.colId);\n     sb.append(sep);\n@@ -111,7 +117,8 @@ public class TextColumnFormat extends ColumnFormat {\n     output.writeBytes(sb.toString());\n   }\n \n-  @Override public void save(LongIntsCol col, DataOutputStream output) throws IOException {\n+  @Override\n+  public void save(LongIntsCol col, DataOutputStream output) throws IOException {\n     StringBuilder sb = new StringBuilder();\n     sb.append(col.colId);\n     sb.append(sep);\n@@ -125,7 +132,8 @@ public class TextColumnFormat extends ColumnFormat {\n     output.writeBytes(sb.toString());\n   }\n \n-  @Override public void save(LongLongsCol col, DataOutputStream output) throws IOException {\n+  @Override\n+  public void save(LongLongsCol col, DataOutputStream output) throws IOException {\n     StringBuilder sb = new StringBuilder();\n     sb.append(col.colId);\n     sb.append(sep);\n@@ -139,7 +147,8 @@ public class TextColumnFormat extends ColumnFormat {\n     output.writeBytes(sb.toString());\n   }\n \n-  @Override public void load(IntFloatsCol col, DataInputStream input) throws IOException {\n+  @Override\n+  public void load(IntFloatsCol col, DataInputStream input) throws IOException {\n     String line = input.readLine();\n     String[] subStrs = line.split(sep);\n     col.colId = Integer.valueOf(subStrs[0]);\n@@ -148,7 +157,8 @@ public class TextColumnFormat extends ColumnFormat {\n     }\n   }\n \n-  @Override public void load(IntDoublesCol col, DataInputStream input) throws IOException {\n+  @Override\n+  public void load(IntDoublesCol col, DataInputStream input) throws IOException {\n     String line = input.readLine();\n     String[] subStrs = line.split(sep);\n     col.colId = Integer.valueOf(subStrs[0]);\n@@ -157,7 +167,8 @@ public class TextColumnFormat extends ColumnFormat {\n     }\n   }\n \n-  @Override public void load(IntIntsCol col, DataInputStream input) throws IOException {\n+  @Override\n+  public void load(IntIntsCol col, DataInputStream input) throws IOException {\n     String line = input.readLine();\n     String[] subStrs = line.split(sep);\n     col.colId = Integer.valueOf(subStrs[0]);\n@@ -166,7 +177,8 @@ public class TextColumnFormat extends ColumnFormat {\n     }\n   }\n \n-  @Override public void load(IntLongsCol col, DataInputStream input) throws IOException {\n+  @Override\n+  public void load(IntLongsCol col, DataInputStream input) throws IOException {\n     String line = input.readLine();\n     String[] subStrs = line.split(sep);\n     col.colId = Integer.valueOf(subStrs[0]);\n@@ -175,7 +187,8 @@ public class TextColumnFormat extends ColumnFormat {\n     }\n   }\n \n-  @Override public void load(LongFloatsCol col, DataInputStream input) throws IOException {\n+  @Override\n+  public void load(LongFloatsCol col, DataInputStream input) throws IOException {\n     String line = input.readLine();\n     String[] subStrs = line.split(sep);\n     col.colId = Long.valueOf(subStrs[0]);\n@@ -184,7 +197,8 @@ public class TextColumnFormat extends ColumnFormat {\n     }\n   }\n \n-  @Override public void load(LongDoublesCol col, DataInputStream input) throws IOException {\n+  @Override\n+  public void load(LongDoublesCol col, DataInputStream input) throws IOException {\n     String line = input.readLine();\n     String[] subStrs = line.split(sep);\n     col.colId = Long.valueOf(subStrs[0]);\n@@ -193,7 +207,8 @@ public class TextColumnFormat extends ColumnFormat {\n     }\n   }\n \n-  @Override public void load(LongIntsCol col, DataInputStream input) throws IOException {\n+  @Override\n+  public void load(LongIntsCol col, DataInputStream input) throws IOException {\n     String line = input.readLine();\n     String[] subStrs = line.split(sep);\n     col.colId = Long.valueOf(subStrs[0]);\n@@ -202,7 +217,8 @@ public class TextColumnFormat extends ColumnFormat {\n     }\n   }\n \n-  @Override public void load(LongLongsCol col, DataInputStream input) throws IOException {\n+  @Override\n+  public void load(LongLongsCol col, DataInputStream input) throws IOException {\n     String line = input.readLine();\n     String[] subStrs = line.split(sep);\n     col.colId = Long.valueOf(subStrs[0]);\n",
            "diff_size": 32
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/398/TextColumnFormat.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/398/TextColumnFormat.java\nindex 28df03ebfa2..65845950f7f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/398/TextColumnFormat.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/398/TextColumnFormat.java\n@@ -27,7 +27,8 @@ import java.io.IOException;\n public class TextColumnFormat extends ColumnFormat {\n   public String sep = \",\";\n \n-  @Override public void save(IntFloatsCol col, DataOutputStream output) throws IOException {\n+  @Override\n+public void save(IntFloatsCol col, DataOutputStream output) throws IOException {\n     StringBuilder sb = new StringBuilder();\n     sb.append(col.colId);\n     sb.append(sep);\n@@ -41,7 +42,8 @@ public class TextColumnFormat extends ColumnFormat {\n     output.writeBytes(sb.toString());\n   }\n \n-  @Override public void save(IntDoublesCol col, DataOutputStream output) throws IOException {\n+  @Override\n+public void save(IntDoublesCol col, DataOutputStream output) throws IOException {\n     StringBuilder sb = new StringBuilder();\n     sb.append(col.colId);\n     sb.append(sep);\n@@ -55,7 +57,8 @@ public class TextColumnFormat extends ColumnFormat {\n     output.writeBytes(sb.toString());\n   }\n \n-  @Override public void save(IntIntsCol col, DataOutputStream output) throws IOException {\n+  @Override\n+public void save(IntIntsCol col, DataOutputStream output) throws IOException {\n     StringBuilder sb = new StringBuilder();\n     sb.append(col.colId);\n     sb.append(sep);\n@@ -69,7 +72,8 @@ public class TextColumnFormat extends ColumnFormat {\n     output.writeBytes(sb.toString());\n   }\n \n-  @Override public void save(IntLongsCol col, DataOutputStream output) throws IOException {\n+  @Override\n+public void save(IntLongsCol col, DataOutputStream output) throws IOException {\n     StringBuilder sb = new StringBuilder();\n     sb.append(col.colId);\n     sb.append(sep);\n@@ -83,7 +87,8 @@ public class TextColumnFormat extends ColumnFormat {\n     output.writeBytes(sb.toString());\n   }\n \n-  @Override public void save(LongFloatsCol col, DataOutputStream output) throws IOException {\n+  @Override\n+public void save(LongFloatsCol col, DataOutputStream output) throws IOException {\n     StringBuilder sb = new StringBuilder();\n     sb.append(col.colId);\n     sb.append(sep);\n@@ -97,7 +102,8 @@ public class TextColumnFormat extends ColumnFormat {\n     output.writeBytes(sb.toString());\n   }\n \n-  @Override public void save(LongDoublesCol col, DataOutputStream output) throws IOException {\n+  @Override\n+public void save(LongDoublesCol col, DataOutputStream output) throws IOException {\n     StringBuilder sb = new StringBuilder();\n     sb.append(col.colId);\n     sb.append(sep);\n@@ -111,7 +117,8 @@ public class TextColumnFormat extends ColumnFormat {\n     output.writeBytes(sb.toString());\n   }\n \n-  @Override public void save(LongIntsCol col, DataOutputStream output) throws IOException {\n+  @Override\n+public void save(LongIntsCol col, DataOutputStream output) throws IOException {\n     StringBuilder sb = new StringBuilder();\n     sb.append(col.colId);\n     sb.append(sep);\n@@ -125,7 +132,8 @@ public class TextColumnFormat extends ColumnFormat {\n     output.writeBytes(sb.toString());\n   }\n \n-  @Override public void save(LongLongsCol col, DataOutputStream output) throws IOException {\n+  @Override\n+public void save(LongLongsCol col, DataOutputStream output) throws IOException {\n     StringBuilder sb = new StringBuilder();\n     sb.append(col.colId);\n     sb.append(sep);\n@@ -139,7 +147,8 @@ public class TextColumnFormat extends ColumnFormat {\n     output.writeBytes(sb.toString());\n   }\n \n-  @Override public void load(IntFloatsCol col, DataInputStream input) throws IOException {\n+  @Override\n+public void load(IntFloatsCol col, DataInputStream input) throws IOException {\n     String line = input.readLine();\n     String[] subStrs = line.split(sep);\n     col.colId = Integer.valueOf(subStrs[0]);\n@@ -148,7 +157,8 @@ public class TextColumnFormat extends ColumnFormat {\n     }\n   }\n \n-  @Override public void load(IntDoublesCol col, DataInputStream input) throws IOException {\n+  @Override\n+public void load(IntDoublesCol col, DataInputStream input) throws IOException {\n     String line = input.readLine();\n     String[] subStrs = line.split(sep);\n     col.colId = Integer.valueOf(subStrs[0]);\n@@ -157,7 +167,8 @@ public class TextColumnFormat extends ColumnFormat {\n     }\n   }\n \n-  @Override public void load(IntIntsCol col, DataInputStream input) throws IOException {\n+  @Override\n+public void load(IntIntsCol col, DataInputStream input) throws IOException {\n     String line = input.readLine();\n     String[] subStrs = line.split(sep);\n     col.colId = Integer.valueOf(subStrs[0]);\n@@ -166,7 +177,8 @@ public class TextColumnFormat extends ColumnFormat {\n     }\n   }\n \n-  @Override public void load(IntLongsCol col, DataInputStream input) throws IOException {\n+  @Override\n+public void load(IntLongsCol col, DataInputStream input) throws IOException {\n     String line = input.readLine();\n     String[] subStrs = line.split(sep);\n     col.colId = Integer.valueOf(subStrs[0]);\n@@ -175,7 +187,8 @@ public class TextColumnFormat extends ColumnFormat {\n     }\n   }\n \n-  @Override public void load(LongFloatsCol col, DataInputStream input) throws IOException {\n+  @Override\n+public void load(LongFloatsCol col, DataInputStream input) throws IOException {\n     String line = input.readLine();\n     String[] subStrs = line.split(sep);\n     col.colId = Long.valueOf(subStrs[0]);\n@@ -184,7 +197,8 @@ public class TextColumnFormat extends ColumnFormat {\n     }\n   }\n \n-  @Override public void load(LongDoublesCol col, DataInputStream input) throws IOException {\n+  @Override\n+public void load(LongDoublesCol col, DataInputStream input) throws IOException {\n     String line = input.readLine();\n     String[] subStrs = line.split(sep);\n     col.colId = Long.valueOf(subStrs[0]);\n@@ -193,7 +207,8 @@ public class TextColumnFormat extends ColumnFormat {\n     }\n   }\n \n-  @Override public void load(LongIntsCol col, DataInputStream input) throws IOException {\n+  @Override\n+public void load(LongIntsCol col, DataInputStream input) throws IOException {\n     String line = input.readLine();\n     String[] subStrs = line.split(sep);\n     col.colId = Long.valueOf(subStrs[0]);\n@@ -202,7 +217,8 @@ public class TextColumnFormat extends ColumnFormat {\n     }\n   }\n \n-  @Override public void load(LongLongsCol col, DataInputStream input) throws IOException {\n+  @Override\n+public void load(LongLongsCol col, DataInputStream input) throws IOException {\n     String line = input.readLine();\n     String[] subStrs = line.split(sep);\n     col.colId = Long.valueOf(subStrs[0]);\n@@ -210,4 +226,4 @@ public class TextColumnFormat extends ColumnFormat {\n       col.colElems[i] = Long.valueOf(subStrs[i + 1]);\n     }\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 33
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/398/TextColumnFormat.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/398/TextColumnFormat.java\nindex 28df03ebfa2..53ec076456d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/398/TextColumnFormat.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/398/TextColumnFormat.java\n@@ -24,10 +24,13 @@ import java.io.IOException;\n /**\n  * Text format: column id + sep + row1 element + sep + row2 element + sep + ...\n  */\n+\n public class TextColumnFormat extends ColumnFormat {\n+\n   public String sep = \",\";\n \n-  @Override public void save(IntFloatsCol col, DataOutputStream output) throws IOException {\n+  @Override\n+  public void save(IntFloatsCol col, DataOutputStream output) throws IOException {\n     StringBuilder sb = new StringBuilder();\n     sb.append(col.colId);\n     sb.append(sep);\n@@ -41,7 +44,8 @@ public class TextColumnFormat extends ColumnFormat {\n     output.writeBytes(sb.toString());\n   }\n \n-  @Override public void save(IntDoublesCol col, DataOutputStream output) throws IOException {\n+  @Override\n+  public void save(IntDoublesCol col, DataOutputStream output) throws IOException {\n     StringBuilder sb = new StringBuilder();\n     sb.append(col.colId);\n     sb.append(sep);\n@@ -55,7 +59,8 @@ public class TextColumnFormat extends ColumnFormat {\n     output.writeBytes(sb.toString());\n   }\n \n-  @Override public void save(IntIntsCol col, DataOutputStream output) throws IOException {\n+  @Override\n+  public void save(IntIntsCol col, DataOutputStream output) throws IOException {\n     StringBuilder sb = new StringBuilder();\n     sb.append(col.colId);\n     sb.append(sep);\n@@ -69,7 +74,8 @@ public class TextColumnFormat extends ColumnFormat {\n     output.writeBytes(sb.toString());\n   }\n \n-  @Override public void save(IntLongsCol col, DataOutputStream output) throws IOException {\n+  @Override\n+  public void save(IntLongsCol col, DataOutputStream output) throws IOException {\n     StringBuilder sb = new StringBuilder();\n     sb.append(col.colId);\n     sb.append(sep);\n@@ -83,7 +89,8 @@ public class TextColumnFormat extends ColumnFormat {\n     output.writeBytes(sb.toString());\n   }\n \n-  @Override public void save(LongFloatsCol col, DataOutputStream output) throws IOException {\n+  @Override\n+  public void save(LongFloatsCol col, DataOutputStream output) throws IOException {\n     StringBuilder sb = new StringBuilder();\n     sb.append(col.colId);\n     sb.append(sep);\n@@ -97,7 +104,8 @@ public class TextColumnFormat extends ColumnFormat {\n     output.writeBytes(sb.toString());\n   }\n \n-  @Override public void save(LongDoublesCol col, DataOutputStream output) throws IOException {\n+  @Override\n+  public void save(LongDoublesCol col, DataOutputStream output) throws IOException {\n     StringBuilder sb = new StringBuilder();\n     sb.append(col.colId);\n     sb.append(sep);\n@@ -111,7 +119,8 @@ public class TextColumnFormat extends ColumnFormat {\n     output.writeBytes(sb.toString());\n   }\n \n-  @Override public void save(LongIntsCol col, DataOutputStream output) throws IOException {\n+  @Override\n+  public void save(LongIntsCol col, DataOutputStream output) throws IOException {\n     StringBuilder sb = new StringBuilder();\n     sb.append(col.colId);\n     sb.append(sep);\n@@ -125,7 +134,8 @@ public class TextColumnFormat extends ColumnFormat {\n     output.writeBytes(sb.toString());\n   }\n \n-  @Override public void save(LongLongsCol col, DataOutputStream output) throws IOException {\n+  @Override\n+  public void save(LongLongsCol col, DataOutputStream output) throws IOException {\n     StringBuilder sb = new StringBuilder();\n     sb.append(col.colId);\n     sb.append(sep);\n@@ -139,7 +149,8 @@ public class TextColumnFormat extends ColumnFormat {\n     output.writeBytes(sb.toString());\n   }\n \n-  @Override public void load(IntFloatsCol col, DataInputStream input) throws IOException {\n+  @Override\n+  public void load(IntFloatsCol col, DataInputStream input) throws IOException {\n     String line = input.readLine();\n     String[] subStrs = line.split(sep);\n     col.colId = Integer.valueOf(subStrs[0]);\n@@ -148,7 +159,8 @@ public class TextColumnFormat extends ColumnFormat {\n     }\n   }\n \n-  @Override public void load(IntDoublesCol col, DataInputStream input) throws IOException {\n+  @Override\n+  public void load(IntDoublesCol col, DataInputStream input) throws IOException {\n     String line = input.readLine();\n     String[] subStrs = line.split(sep);\n     col.colId = Integer.valueOf(subStrs[0]);\n@@ -157,7 +169,8 @@ public class TextColumnFormat extends ColumnFormat {\n     }\n   }\n \n-  @Override public void load(IntIntsCol col, DataInputStream input) throws IOException {\n+  @Override\n+  public void load(IntIntsCol col, DataInputStream input) throws IOException {\n     String line = input.readLine();\n     String[] subStrs = line.split(sep);\n     col.colId = Integer.valueOf(subStrs[0]);\n@@ -166,7 +179,8 @@ public class TextColumnFormat extends ColumnFormat {\n     }\n   }\n \n-  @Override public void load(IntLongsCol col, DataInputStream input) throws IOException {\n+  @Override\n+  public void load(IntLongsCol col, DataInputStream input) throws IOException {\n     String line = input.readLine();\n     String[] subStrs = line.split(sep);\n     col.colId = Integer.valueOf(subStrs[0]);\n@@ -175,7 +189,8 @@ public class TextColumnFormat extends ColumnFormat {\n     }\n   }\n \n-  @Override public void load(LongFloatsCol col, DataInputStream input) throws IOException {\n+  @Override\n+  public void load(LongFloatsCol col, DataInputStream input) throws IOException {\n     String line = input.readLine();\n     String[] subStrs = line.split(sep);\n     col.colId = Long.valueOf(subStrs[0]);\n@@ -184,7 +199,8 @@ public class TextColumnFormat extends ColumnFormat {\n     }\n   }\n \n-  @Override public void load(LongDoublesCol col, DataInputStream input) throws IOException {\n+  @Override\n+  public void load(LongDoublesCol col, DataInputStream input) throws IOException {\n     String line = input.readLine();\n     String[] subStrs = line.split(sep);\n     col.colId = Long.valueOf(subStrs[0]);\n@@ -193,7 +209,8 @@ public class TextColumnFormat extends ColumnFormat {\n     }\n   }\n \n-  @Override public void load(LongIntsCol col, DataInputStream input) throws IOException {\n+  @Override\n+  public void load(LongIntsCol col, DataInputStream input) throws IOException {\n     String line = input.readLine();\n     String[] subStrs = line.split(sep);\n     col.colId = Long.valueOf(subStrs[0]);\n@@ -202,7 +219,8 @@ public class TextColumnFormat extends ColumnFormat {\n     }\n   }\n \n-  @Override public void load(LongLongsCol col, DataInputStream input) throws IOException {\n+  @Override\n+  public void load(LongLongsCol col, DataInputStream input) throws IOException {\n     String line = input.readLine();\n     String[] subStrs = line.split(sep);\n     col.colId = Long.valueOf(subStrs[0]);\n@@ -210,4 +228,5 @@ public class TextColumnFormat extends ColumnFormat {\n       col.colElems[i] = Long.valueOf(subStrs[i + 1]);\n     }\n   }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 36
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "neo4j-neo4j",
    "error_id": "1114",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "126",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "167",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "167",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "180",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "180",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "193",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "193",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "196",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "196",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "209",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "209",
                    "column": "128",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "212",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "212",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "215",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "215",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "221",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "221",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "228",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "228",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "231",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "231",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "234",
                    "column": "102",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "236",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "236",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "242",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "242",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "242",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "250",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "250",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "254",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "254",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "267",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "267",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "270",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "278",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "278",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "281",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "281",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "284",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "292",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "292",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "308",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "317",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "317",
                    "column": "19",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "319",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "319",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1114/TokenIndexUpdater.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1114/TokenIndexUpdater.java\nindex 5d8a16c1962..1308659cdb9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1114/TokenIndexUpdater.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1114/TokenIndexUpdater.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.index.schema;\n \n import java.util.Arrays;\n@@ -59,17 +60,17 @@ class TokenIndexUpdater implements IndexUpdater\n      * {@link Comparator} for sorting the entity id ranges, used in batches to apply updates in sorted order.\n      */\n     private static final Comparator<TokenIndexEntryUpdate<?>> UPDATE_SORTER =\n-            Comparator.comparingLong( TokenIndexEntryUpdate::getEntityId );\n+      Comparator.comparingLong(TokenIndexEntryUpdate::getEntityId);\n \n     /**\n      * {@link ValueMerger} used for adding token->entity mappings, see {@link TokenScanValue#add(TokenScanValue)}.\n      */\n-    private final ValueMerger<TokenScanKey,TokenScanValue> addMerger;\n+    private final ValueMerger<TokenScanKey, TokenScanValue> addMerger;\n \n     /**\n      * {@link ValueMerger} used for removing token->entity mappings, see {@link TokenScanValue#remove(TokenScanValue)}.\n      */\n-    private final ValueMerger<TokenScanKey,TokenScanValue> removeMerger;\n+    private final ValueMerger<TokenScanKey, TokenScanValue> removeMerger;\n \n     private final NativeTokenScanWriter.WriteMonitor monitor;\n \n@@ -77,7 +78,7 @@ class TokenIndexUpdater implements IndexUpdater\n      * {@link Writer} acquired when acquiring this {@link TokenIndexUpdater},\n      * acquired from {@link GBPTree#writer(PageCursorTracer)}.\n      */\n-    private Writer<TokenScanKey,TokenScanValue> writer;\n+    private Writer<TokenScanKey, TokenScanValue> writer;\n \n     /**\n      * Instance of {@link TokenScanKey} acting as place to read keys into and to set for each applied update.\n@@ -122,26 +123,26 @@ class TokenIndexUpdater implements IndexUpdater\n \n     private boolean closed = true;\n \n-    TokenIndexUpdater( int batchSize, NativeTokenScanWriter.WriteMonitor monitor )\n+    TokenIndexUpdater(int batchSize, NativeTokenScanWriter.WriteMonitor monitor)\n     {\n         this.pendingUpdates = new TokenIndexEntryUpdate[batchSize];\n-        this.addMerger = new AddMerger( monitor );\n-        this.removeMerger = ( existingKey, newKey, existingValue, newValue ) ->\n+        this.addMerger = new AddMerger(monitor);\n+        this.removeMerger = (existingKey, newKey, existingValue, newValue) ->\n         {\n-            monitor.mergeRemove( existingValue, newValue );\n-            existingValue.remove( newValue );\n+            monitor.mergeRemove(existingValue, newValue);\n+            existingValue.remove(newValue);\n             return existingValue.isEmpty()\n-                   ? ValueMerger.MergeResult.REMOVED\n-                   : ValueMerger.MergeResult.MERGED;\n+              ? ValueMerger.MergeResult.REMOVED\n+              : ValueMerger.MergeResult.MERGED;\n         };\n         this.monitor = monitor;\n     }\n \n-    TokenIndexUpdater initialize( Writer<TokenScanKey,TokenScanValue> writer )\n+    TokenIndexUpdater initialize(Writer<TokenScanKey, TokenScanValue> writer)\n     {\n-        if ( !closed )\n+        if (!closed)\n         {\n-            throw new IllegalStateException( \"Updater still open\" );\n+            throw new IllegalStateException(\"Updater still open\");\n         }\n \n         this.writer = writer;\n@@ -155,49 +156,49 @@ class TokenIndexUpdater implements IndexUpdater\n     /**\n      * Queues a {@link TokenIndexEntryUpdate} to this writer for applying when batch gets full,\n      * or when {@link #close() closing}.\n-     *\n+     * <p>\n      * Calls to this method MUST be ordered by ascending entity id.\n      */\n     @Override\n-    public void process( IndexEntryUpdate<?> update ) throws IndexEntryConflictException\n+    public void process(IndexEntryUpdate<?> update) throws IndexEntryConflictException\n     {\n         assertOpen();\n-        TokenIndexEntryUpdate<?> tokenUpdate = asTokenUpdate( update );\n-        if ( pendingUpdatesCursor == pendingUpdates.length )\n+        TokenIndexEntryUpdate<?> tokenUpdate = asTokenUpdate(update);\n+        if (pendingUpdatesCursor == pendingUpdates.length)\n         {\n             flushPendingChanges();\n         }\n \n         pendingUpdates[pendingUpdatesCursor++] = tokenUpdate;\n-        PhysicalToLogicalTokenChanges2.convertToAdditionsAndRemovals( tokenUpdate );\n-        checkNextTokenId( tokenUpdate.beforeValues() );\n-        checkNextTokenId( tokenUpdate.values() );\n+        PhysicalToLogicalTokenChanges2.convertToAdditionsAndRemovals(tokenUpdate);\n+        checkNextTokenId(tokenUpdate.beforeValues());\n+        checkNextTokenId(tokenUpdate.values());\n     }\n \n-    private void checkNextTokenId( long[] tokens )\n+    private void checkNextTokenId(long[] tokens)\n     {\n-        if ( tokens.length > 0 && tokens[0] != -1 )\n+        if (tokens.length > 0 && tokens[0] != -1)\n         {\n-            lowestTokenId = min( lowestTokenId, tokens[0] );\n+            lowestTokenId = min(lowestTokenId, tokens[0]);\n         }\n     }\n \n     private void flushPendingChanges()\n     {\n-        Arrays.sort( pendingUpdates, 0, pendingUpdatesCursor, UPDATE_SORTER );\n+        Arrays.sort(pendingUpdates, 0, pendingUpdatesCursor, UPDATE_SORTER);\n         monitor.flushPendingUpdates();\n         long currentTokenId = lowestTokenId;\n         value.clear();\n         key.clear();\n-        while ( currentTokenId != Long.MAX_VALUE )\n+        while (currentTokenId != Long.MAX_VALUE)\n         {\n             long nextTokenId = Long.MAX_VALUE;\n-            for ( int i = 0; i < pendingUpdatesCursor; i++ )\n+            for (int i = 0; i < pendingUpdatesCursor; i++)\n             {\n                 TokenIndexEntryUpdate<?> update = pendingUpdates[i];\n                 long entityId = update.getEntityId();\n-                nextTokenId = extractChange( update.values(), currentTokenId, entityId, nextTokenId, true, -1 );\n-                nextTokenId = extractChange( update.beforeValues(), currentTokenId, entityId, nextTokenId, false, -1 );\n+                nextTokenId = extractChange(update.values(), currentTokenId, entityId, nextTokenId, true, -1);\n+                nextTokenId = extractChange(update.beforeValues(), currentTokenId, entityId, nextTokenId, false, -1);\n             }\n             currentTokenId = nextTokenId;\n         }\n@@ -205,53 +206,52 @@ class TokenIndexUpdater implements IndexUpdater\n         pendingUpdatesCursor = 0;\n     }\n \n-    private long extractChange( long[] tokens, long currentTokenId, long entityId, long nextTokenId, boolean addition, long txId )\n+    private long extractChange(long[] tokens, long currentTokenId, long entityId, long nextTokenId, boolean addition, long txId)\n     {\n         long foundNextTokenId = nextTokenId;\n-        for ( int li = 0; li < tokens.length; li++ )\n+        for (int li = 0; li < tokens.length; li++)\n         {\n             long tokenId = tokens[li];\n-            if ( tokenId == -1 )\n+            if (tokenId == -1)\n             {\n                 break;\n             }\n \n             // Have this check here so that we can pick up the next tokenId in our change set\n-            if ( tokenId == currentTokenId )\n+            if (tokenId == currentTokenId)\n             {\n-                change( currentTokenId, entityId, addition, txId );\n+                change(currentTokenId, entityId, addition, txId);\n \n                 // We can do a little shorter check for next tokenId here straight away,\n                 // we just check the next if it's less than what we currently think is next tokenId\n                 // and then break right after\n-                if ( li + 1 < tokens.length && tokens[li + 1] != -1 )\n+                if (li + 1 < tokens.length && tokens[li + 1] != -1)\n                 {\n                     long nextTokenCandidate = tokens[li + 1];\n-                    if ( nextTokenCandidate < currentTokenId )\n+                    if (nextTokenCandidate < currentTokenId)\n                     {\n                         throw new IllegalArgumentException(\n-                                \"The entity token contained unsorted tokens ids \" + Arrays.toString( tokens ) );\n+                          \"The entity token contained unsorted tokens ids \" + Arrays.toString(tokens));\n                     }\n-                    if ( nextTokenCandidate > currentTokenId )\n+                    if (nextTokenCandidate > currentTokenId)\n                     {\n-                        foundNextTokenId = min( foundNextTokenId, nextTokenCandidate );\n+                        foundNextTokenId = min(foundNextTokenId, nextTokenCandidate);\n                     }\n                 }\n                 break;\n-            }\n-            else if ( tokenId > currentTokenId )\n+            } else if (tokenId > currentTokenId)\n             {\n-                foundNextTokenId = min( foundNextTokenId, tokenId );\n+                foundNextTokenId = min(foundNextTokenId, tokenId);\n             }\n         }\n         return foundNextTokenId;\n     }\n \n-    private void change( long currentTokenId, long entityId, boolean add, long txId )\n+    private void change(long currentTokenId, long entityId, boolean add, long txId)\n     {\n-        int tokenId = toIntExact( currentTokenId );\n-        long idRange = rangeOf( entityId );\n-        if ( tokenId != key.tokenId || idRange != key.idRange || addition != add )\n+        int tokenId = toIntExact(currentTokenId);\n+        long idRange = rangeOf(entityId);\n+        if (tokenId != key.tokenId || idRange != key.idRange || addition != add)\n         {\n             flushPendingRange();\n \n@@ -259,39 +259,37 @@ class TokenIndexUpdater implements IndexUpdater\n             key.tokenId = tokenId;\n             key.idRange = idRange;\n             addition = add;\n-            monitor.range( idRange, tokenId );\n+            monitor.range(idRange, tokenId);\n         }\n \n-        int offset = toIntExact( entityId % RANGE_SIZE );\n-        value.set( offset );\n-        if ( addition )\n+        int offset = toIntExact(entityId % RANGE_SIZE);\n+        value.set(offset);\n+        if (addition)\n         {\n-            monitor.prepareAdd( txId, offset );\n-        }\n-        else\n+            monitor.prepareAdd(txId, offset);\n+        } else\n         {\n-            monitor.prepareRemove( txId, offset );\n+            monitor.prepareRemove(txId, offset);\n         }\n     }\n \n     private void flushPendingRange()\n     {\n-        if ( value.bits != 0 )\n+        if (value.bits != 0)\n         {\n             // There are changes in the current range, flush them\n-            if ( addition )\n+            if (addition)\n             {\n-                writer.merge( key, value, addMerger );\n-            }\n-            else\n+                writer.merge(key, value, addMerger);\n+            } else\n             {\n-                writer.mergeIfExists( key, value, removeMerger );\n+                writer.mergeIfExists(key, value, removeMerger);\n             }\n             value.clear();\n         }\n     }\n \n-    static long rangeOf( long entityId )\n+    static long rangeOf(long entityId)\n     {\n         return entityId / RANGE_SIZE;\n     }\n@@ -307,19 +305,18 @@ class TokenIndexUpdater implements IndexUpdater\n         {\n             flushPendingChanges();\n             monitor.writeSessionEnded();\n-        }\n-        finally\n+        } finally\n         {\n             closed = true;\n-            IOUtils.closeAllUnchecked( writer );\n+            IOUtils.closeAllUnchecked(writer);\n         }\n     }\n \n     private void assertOpen()\n     {\n-        if ( closed )\n+        if (closed)\n         {\n-            throw new IllegalStateException( \"Updater has been closed\" );\n+            throw new IllegalStateException(\"Updater has been closed\");\n         }\n     }\n }\n",
            "diff_size": 67
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "junkdog-artemis-odb",
    "error_id": "37",
    "information": {
        "errors": [
            {
                "line": "29",
                "severity": "error",
                "message": "Line is longer than 105 characters (found 123).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "                new MethodBuilder(boolean.class,\n\n                        Strings.assembleMethodName(component.getPreferences().getPrefixComponentHas(),component.getName()))\n                        .debugNotes(component.getComponentType().getName())\n                        .mapper(\"return \", component, \".has(entityId)\")\n                        .build();",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "29",
                    "severity": "error",
                    "message": "Line is longer than 105 characters (found 167).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/errored/1/37/ComponentExistStrategy.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/styler/37/ComponentExistStrategy.java\nindex b15309ae5d0..b460d946d7f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/errored/1/37/ComponentExistStrategy.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/styler/37/ComponentExistStrategy.java\n@@ -26,7 +26,7 @@ public class ComponentExistStrategy extends IterativeModelStrategy {\n         return\n                 new MethodBuilder(boolean.class,\n \n-                        Strings.assembleMethodName(component.getPreferences().getPrefixComponentHas(),component.getName()))\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tStrings.assembleMethodName(component.getPreferences().getPrefixComponentHas(),component.getName()))\n                         .debugNotes(component.getComponentType().getName())\n                         .mapper(\"return \", component, \".has(entityId)\")\n                         .build();\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/errored/1/37/ComponentExistStrategy.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/intellij/37/ComponentExistStrategy.java\nindex b15309ae5d0..726ec1d3650 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/errored/1/37/ComponentExistStrategy.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/intellij/37/ComponentExistStrategy.java\n@@ -26,7 +26,8 @@ public class ComponentExistStrategy extends IterativeModelStrategy {\n         return\n                 new MethodBuilder(boolean.class,\n \n-                        Strings.assembleMethodName(component.getPreferences().getPrefixComponentHas(),component.getName()))\n+                        Strings.assembleMethodName(component.getPreferences().getPrefixComponentHas(),\n+                                component.getName()))\n                         .debugNotes(component.getComponentType().getName())\n                         .mapper(\"return \", component, \".has(entityId)\")\n                         .build();\n",
            "diff_size": 2
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "25",
                    "severity": "error",
                    "message": "Line is longer than 105 characters (found 144).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/errored/1/37/ComponentExistStrategy.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/naturalize/37/ComponentExistStrategy.java\nindex b15309ae5d0..6ebfa327e8c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/errored/1/37/ComponentExistStrategy.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/naturalize/37/ComponentExistStrategy.java\n@@ -13,8 +13,7 @@ import com.artemis.generator.util.Strings;\n  * @author Daan van Yperen\n  */\n public class ComponentExistStrategy extends IterativeModelStrategy {\n-\n-    @Override\n+\t@Override\n     protected void apply(ComponentDescriptor component, TypeModel model) {\n         model.add(createHasComponentMethod(component));\n     }\n@@ -23,12 +22,9 @@ public class ComponentExistStrategy extends IterativeModelStrategy {\n      * boolean E::hasComponent()\n      */\n     private MethodDescriptor createHasComponentMethod(ComponentDescriptor component) {\n-        return\n-                new MethodBuilder(boolean.class,\n-\n-                        Strings.assembleMethodName(component.getPreferences().getPrefixComponentHas(),component.getName()))\n+\treturn new MethodBuilder(boolean.class, Strings.assembleMethodName(component.getPreferences().getPrefixComponentHas(), component.getName()))\n                         .debugNotes(component.getComponentType().getName())\n                         .mapper(\"return \", component, \".has(entityId)\")\n                         .build();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "Line is longer than 105 characters (found 120).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/errored/1/37/ComponentExistStrategy.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/codebuff/37/ComponentExistStrategy.java\nindex b15309ae5d0..387d96e0330 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/errored/1/37/ComponentExistStrategy.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/codebuff/37/ComponentExistStrategy.java\n@@ -12,23 +12,21 @@ import com.artemis.generator.util.Strings;\n  *\n  * @author Daan van Yperen\n  */\n-public class ComponentExistStrategy extends IterativeModelStrategy {\n \n-    @Override\n-    protected void apply(ComponentDescriptor component, TypeModel model) {\n-        model.add(createHasComponentMethod(component));\n-    }\n+public class ComponentExistStrategy extends IterativeModelStrategy {\n+ @Override\n+ protected void apply(ComponentDescriptor component, TypeModel model) {\n+  model.add(createHasComponentMethod(component));\n+ }\n \n     /**\n      * boolean E::hasComponent()\n      */\n-    private MethodDescriptor createHasComponentMethod(ComponentDescriptor component) {\n-        return\n-                new MethodBuilder(boolean.class,\n \n-                        Strings.assembleMethodName(component.getPreferences().getPrefixComponentHas(),component.getName()))\n-                        .debugNotes(component.getComponentType().getName())\n-                        .mapper(\"return \", component, \".has(entityId)\")\n-                        .build();\n-    }\n-}\n+ private MethodDescriptor createHasComponentMethod(ComponentDescriptor component) {\n+  return new MethodBuilder(boolean.class, Strings.assembleMethodName(component.getPreferences().getPrefixComponentHas(),\n+                            component.getName())).debugNotes(component.getComponentType().getName())\n+                                                 .mapper(\"return \", component, \".has(entityId)\")\n+                                                 .build();\n+ }\n+}\n\\ No newline at end of file\n",
            "diff_size": 16
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "29",
                    "severity": "error",
                    "message": "Line is longer than 105 characters (found 167).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/errored/1/37/ComponentExistStrategy.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/styler_random/37/ComponentExistStrategy.java\nindex b15309ae5d0..b460d946d7f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/errored/1/37/ComponentExistStrategy.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/styler_random/37/ComponentExistStrategy.java\n@@ -26,7 +26,7 @@ public class ComponentExistStrategy extends IterativeModelStrategy {\n         return\n                 new MethodBuilder(boolean.class,\n \n-                        Strings.assembleMethodName(component.getPreferences().getPrefixComponentHas(),component.getName()))\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tStrings.assembleMethodName(component.getPreferences().getPrefixComponentHas(),component.getName()))\n                         .debugNotes(component.getComponentType().getName())\n                         .mapper(\"return \", component, \".has(entityId)\")\n                         .build();\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "28",
                    "severity": "error",
                    "message": "Line is longer than 105 characters (found 223).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/errored/1/37/ComponentExistStrategy.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/styler_three_grams/37/ComponentExistStrategy.java\nindex b15309ae5d0..437c563df35 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/errored/1/37/ComponentExistStrategy.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/junkdog-artemis-odb/styler_three_grams/37/ComponentExistStrategy.java\n@@ -25,9 +25,7 @@ public class ComponentExistStrategy extends IterativeModelStrategy {\n     private MethodDescriptor createHasComponentMethod(ComponentDescriptor component) {\n         return\n                 new MethodBuilder(boolean.class,\n-\n-                        Strings.assembleMethodName(component.getPreferences().getPrefixComponentHas(),component.getName()))\n-                        .debugNotes(component.getComponentType().getName())\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tStrings .assembleMethodName(component. getPreferences (). getPrefixComponentHas (),component.getName())).debugNotes(component.getComponentType().getName())\n                         .mapper(\"return \", component, \".has(entityId)\")\n                         .build();\n     }\n",
            "diff_size": 3
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
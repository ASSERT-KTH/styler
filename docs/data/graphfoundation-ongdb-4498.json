{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4498",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "44",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "60",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "89",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "54",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "130",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "158",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "158",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "111",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "173",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "173",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "177",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "177",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "182",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "198",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "198",
                    "column": "106",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "201",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "201",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "204",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "204",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "219",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "219",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "221",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "221",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "226",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "226",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "228",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "228",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "233",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "233",
                    "column": "19",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "235",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "235",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "237",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "237",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "243",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "243",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "246",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "246",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4498/TraversalDescriptionBuilder.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4498/TraversalDescriptionBuilder.java\nindex dac9f87a366..1a8b347d2cc 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4498/TraversalDescriptionBuilder.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4498/TraversalDescriptionBuilder.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.server.rest.domain;\n \n import java.util.Arrays;\n@@ -38,216 +39,212 @@ import static org.neo4j.graphdb.traversal.Evaluators.excludeStartPosition;\n \n public class TraversalDescriptionBuilder\n {\n-    private final EvaluatorFactory evaluatorFactory;\n+  private final EvaluatorFactory evaluatorFactory;\n+\n+  public TraversalDescriptionBuilder(ScriptExecutionMode executionMode)\n+  {\n+    this.evaluatorFactory = new EvaluatorFactory(executionMode);\n+  }\n \n-    public TraversalDescriptionBuilder( ScriptExecutionMode executionMode )\n+  public TraversalDescription from(Map<String, Object> description)\n+  {\n+    try\n+    {\n+      TraversalDescription result = new MonoDirectionalTraversalDescription();\n+      result = describeOrder(result, description);\n+      result = describeUniqueness(result, description);\n+      result = describeExpander(result, description);\n+      result = describePruneEvaluator(result, description);\n+      result = describeReturnFilter(result, description);\n+      return result;\n+    } catch (NoClassDefFoundError e)\n     {\n-        this.evaluatorFactory = new EvaluatorFactory( executionMode );\n+      // This one can happen if you run on Java 5, but haven't included\n+      // the backported javax.script jar file(s) on the classpath.\n+      throw new EvaluationException(e);\n     }\n-\n-    public TraversalDescription from( Map<String, Object> description )\n+  }\n+\n+  @SuppressWarnings(\"unchecked\")\n+  private TraversalDescription describeReturnFilter(TraversalDescription result,\n+                                                    Map<String, Object> description)\n+  {\n+    Object returnDescription = description.get(\"return_filter\");\n+    if (returnDescription != null)\n     {\n-        try\n-        {\n-            TraversalDescription result = new MonoDirectionalTraversalDescription();\n-            result = describeOrder( result, description );\n-            result = describeUniqueness( result, description );\n-            result = describeExpander( result, description );\n-            result = describePruneEvaluator( result, description );\n-            result = describeReturnFilter( result, description );\n-            return result;\n-        }\n-        catch ( NoClassDefFoundError e )\n-        {\n-            // This one can happen if you run on Java 5, but haven't included\n-            // the backported javax.script jar file(s) on the classpath.\n-            throw new EvaluationException( e );\n-        }\n+      Evaluator filter = evaluatorFactory.returnFilter((Map) returnDescription);\n+      // Filter is null when \"all\" is used, no filter then\n+      if (filter != null)\n+      {\n+        result = result.evaluator(filter);\n+      }\n+    } else\n+    {\n+      // Default return evaluator\n+      result = result.evaluator(excludeStartPosition());\n     }\n-\n-    @SuppressWarnings( \"unchecked\" )\n-    private TraversalDescription describeReturnFilter( TraversalDescription result,\n-            Map<String, Object> description )\n+    return result;\n+  }\n+\n+  @SuppressWarnings(\"unchecked\")\n+  private TraversalDescription describePruneEvaluator(TraversalDescription result,\n+                                                      Map<String, Object> description)\n+  {\n+    Object pruneDescription = description.get(\"prune_evaluator\");\n+    if (pruneDescription != null)\n     {\n-        Object returnDescription = description.get( \"return_filter\" );\n-        if ( returnDescription != null )\n-        {\n-            Evaluator filter = evaluatorFactory.returnFilter( (Map) returnDescription );\n-            // Filter is null when \"all\" is used, no filter then\n-            if ( filter != null )\n-            {\n-                result = result.evaluator( filter );\n-            }\n-        }\n-        else\n-        {\n-            // Default return evaluator\n-            result = result.evaluator( excludeStartPosition() );\n-        }\n-        return result;\n+      Evaluator pruner = evaluatorFactory.pruneEvaluator((Map) pruneDescription);\n+      if (pruner != null)\n+      {\n+        result = result.evaluator(pruner);\n+      }\n     }\n \n-    @SuppressWarnings( \"unchecked\" )\n-    private TraversalDescription describePruneEvaluator( TraversalDescription result,\n-            Map<String, Object> description )\n+    Object maxDepth = description.get(\"max_depth\");\n+    maxDepth = maxDepth != null || pruneDescription != null ? maxDepth : 1;\n+    if (maxDepth != null)\n     {\n-        Object pruneDescription = description.get( \"prune_evaluator\" );\n-        if ( pruneDescription != null )\n-        {\n-            Evaluator pruner = evaluatorFactory.pruneEvaluator( (Map) pruneDescription );\n-            if ( pruner != null )\n-            {\n-                result = result.evaluator( pruner );\n-            }\n-        }\n-\n-        Object maxDepth = description.get( \"max_depth\" );\n-        maxDepth = maxDepth != null || pruneDescription != null ? maxDepth : 1;\n-        if ( maxDepth != null )\n-        {\n-            result = result.evaluator( Evaluators.toDepth( ((Number) maxDepth).intValue() ) );\n-        }\n-        return result;\n+      result = result.evaluator(Evaluators.toDepth(((Number) maxDepth).intValue()));\n     }\n-\n-    @SuppressWarnings( \"unchecked\" )\n-    private TraversalDescription describeExpander( TraversalDescription result,\n-                                                   Map<String, Object> description )\n+    return result;\n+  }\n+\n+  @SuppressWarnings(\"unchecked\")\n+  private TraversalDescription describeExpander(TraversalDescription result,\n+                                                Map<String, Object> description)\n+  {\n+    Object relationshipsDescription = description.get(\"relationships\");\n+    if (relationshipsDescription != null)\n     {\n-        Object relationshipsDescription = description.get( \"relationships\" );\n-        if ( relationshipsDescription != null )\n-        {\n-            Collection<Object> pairDescriptions;\n-            if ( relationshipsDescription instanceof Collection )\n-            {\n-                pairDescriptions = (Collection<Object>) relationshipsDescription;\n-            }\n-            else\n-            {\n-                pairDescriptions = Arrays.asList( relationshipsDescription );\n-            }\n-\n-            PathExpanderBuilder builder = createExpander( description );\n-\n-            for ( Object pairDescription : pairDescriptions )\n-            {\n-                Map map = (Map) pairDescription;\n-                String name = (String) map.get( \"type\" );\n-                RelationshipType type = RelationshipType.withName( name );\n-                String directionName = (String) map.get( \"direction\" );\n-                builder = directionName == null ? builder.add( type ) :\n-                        builder.add( type, stringToEnum( directionName,\n-                                RelationshipDirection.class, true ).internal );\n-            }\n-            PathExpander<Object> expander = builder.build();\n-            result = result.expand( expander );\n-        }\n-        return result;\n+      Collection<Object> pairDescriptions;\n+      if (relationshipsDescription instanceof Collection)\n+      {\n+        pairDescriptions = (Collection<Object>) relationshipsDescription;\n+      } else\n+      {\n+        pairDescriptions = Arrays.asList(relationshipsDescription);\n+      }\n+\n+      PathExpanderBuilder builder = createExpander(description);\n+\n+      for (Object pairDescription : pairDescriptions)\n+      {\n+        Map map = (Map) pairDescription;\n+        String name = (String) map.get(\"type\");\n+        RelationshipType type = RelationshipType.withName(name);\n+        String directionName = (String) map.get(\"direction\");\n+        builder = directionName == null ? builder.add(type) :\n+            builder.add(type, stringToEnum(directionName,\n+                RelationshipDirection.class, true).internal);\n+      }\n+      PathExpander<Object> expander = builder.build();\n+      result = result.expand(expander);\n     }\n+    return result;\n+  }\n \n-    private PathExpanderBuilder createExpander( Map<String, Object> description )\n+  private PathExpanderBuilder createExpander(Map<String, Object> description)\n+  {\n+    if (description.containsKey(\"expander\"))\n     {\n-        if ( description.containsKey( \"expander\" ) )\n-        {\n-            Object expanderDesc = description.get( \"expander\" );\n-            if ( !(expanderDesc instanceof String) )\n-            {\n-                throw new IllegalArgumentException( \"Invalid expander type '\" + expanderDesc + \"', expected a string \" +\n-                        \"name.\" );\n-            }\n-\n-            String expanderName = (String) expanderDesc;\n-            if ( expanderName.equalsIgnoreCase( \"order_by_type\" ) )\n-            {\n-                return PathExpanderBuilder.emptyOrderedByType();\n-            }\n-\n-            throw new IllegalArgumentException( \"Unknown expander type: '\" + expanderName + \"'\" );\n-        }\n-\n-        // Default expander\n-        return PathExpanderBuilder.empty();\n+      Object expanderDesc = description.get(\"expander\");\n+      if (!(expanderDesc instanceof String))\n+      {\n+        throw new IllegalArgumentException(\"Invalid expander type '\" + expanderDesc + \"', expected a string \" +\n+            \"name.\");\n+      }\n+\n+      String expanderName = (String) expanderDesc;\n+      if (expanderName.equalsIgnoreCase(\"order_by_type\"))\n+      {\n+        return PathExpanderBuilder.emptyOrderedByType();\n+      }\n+\n+      throw new IllegalArgumentException(\"Unknown expander type: '\" + expanderName + \"'\");\n     }\n \n-    private TraversalDescription describeUniqueness( TraversalDescription result, Map<String, Object> description )\n+    // Default expander\n+    return PathExpanderBuilder.empty();\n+  }\n+\n+  private TraversalDescription describeUniqueness(TraversalDescription result, Map<String, Object> description)\n+  {\n+    Object uniquenessDescription = description.get(\"uniqueness\");\n+    if (uniquenessDescription != null)\n     {\n-        Object uniquenessDescription = description.get( \"uniqueness\" );\n-        if ( uniquenessDescription != null )\n-        {\n-            String name = null;\n-            Object value = null;\n-            if ( uniquenessDescription instanceof Map )\n-            {\n-                Map map = (Map) uniquenessDescription;\n-                name = (String) map.get( \"name\" );\n-                value = map.get( \"value\" );\n-            }\n-            else\n-            {\n-                name = (String) uniquenessDescription;\n-            }\n-            Uniqueness uniqueness = stringToEnum( enumifyName( name ), Uniqueness.class, true );\n-            result = value == null ? result.uniqueness( uniqueness ) : result.uniqueness( uniqueness, value );\n-        }\n-        return result;\n+      String name = null;\n+      Object value = null;\n+      if (uniquenessDescription instanceof Map)\n+      {\n+        Map map = (Map) uniquenessDescription;\n+        name = (String) map.get(\"name\");\n+        value = map.get(\"value\");\n+      } else\n+      {\n+        name = (String) uniquenessDescription;\n+      }\n+      Uniqueness uniqueness = stringToEnum(enumifyName(name), Uniqueness.class, true);\n+      result = value == null ? result.uniqueness(uniqueness) : result.uniqueness(uniqueness, value);\n     }\n-\n-    private enum Order\n+    return result;\n+  }\n+\n+  private enum Order\n+  {\n+    BREADTH_FIRST,\n+    DEPTH_FIRST\n+  }\n+\n+  private TraversalDescription describeOrder(TraversalDescription result, Map<String, Object> description)\n+  {\n+    String orderDescription = (String) description.get(\"order\");\n+    if (orderDescription != null)\n     {\n-        BREADTH_FIRST,\n-        DEPTH_FIRST\n+      Order order = Objects.requireNonNull(stringToEnum(enumifyName(orderDescription), Order.class, true));\n+      switch (order)\n+      {\n+        case BREADTH_FIRST:\n+          result = result.breadthFirst();\n+          break;\n+        case DEPTH_FIRST:\n+          result = result.depthFirst();\n+          break;\n+        default:\n+          throw new IllegalArgumentException(\"Unknown order: \" + order);\n+      }\n     }\n+    return result;\n+  }\n \n-    private TraversalDescription describeOrder( TraversalDescription result, Map<String, Object> description )\n+  private <T extends Enum<T>> T stringToEnum(String name, Class<T> enumClass, boolean fuzzyMatch)\n+  {\n+    if (name == null)\n     {\n-        String orderDescription = (String) description.get( \"order\" );\n-        if ( orderDescription != null )\n-        {\n-            Order order = Objects.requireNonNull( stringToEnum( enumifyName( orderDescription ), Order.class, true ) );\n-            switch ( order )\n-            {\n-            case BREADTH_FIRST:\n-                result = result.breadthFirst();\n-                break;\n-            case DEPTH_FIRST:\n-                result = result.depthFirst();\n-                break;\n-            default:\n-                throw new IllegalArgumentException( \"Unknown order: \" + order );\n-            }\n-        }\n-        return result;\n+      return null;\n     }\n \n-    private <T extends Enum<T>> T stringToEnum( String name, Class<T> enumClass, boolean fuzzyMatch )\n+    for (T candidate : enumClass.getEnumConstants())\n     {\n-        if ( name == null )\n-        {\n-            return null;\n-        }\n-\n-        for ( T candidate : enumClass.getEnumConstants() )\n-        {\n-            if ( candidate.name().equals( name ) )\n-            {\n-                return candidate;\n-            }\n-        }\n-        if ( fuzzyMatch )\n+      if (candidate.name().equals(name))\n+      {\n+        return candidate;\n+      }\n+    }\n+    if (fuzzyMatch)\n+    {\n+      for (T candidate : enumClass.getEnumConstants())\n+      {\n+        if (candidate.name().startsWith(name))\n         {\n-            for ( T candidate : enumClass.getEnumConstants() )\n-            {\n-                if ( candidate.name().startsWith( name ) )\n-                {\n-                    return candidate;\n-                }\n-            }\n+          return candidate;\n         }\n-        throw new RuntimeException( \"Unregognized \" + enumClass.getSimpleName() + \" '\" + name + \"'\" );\n+      }\n     }\n+    throw new RuntimeException(\"Unregognized \" + enumClass.getSimpleName() + \" '\" + name + \"'\");\n+  }\n \n-    private String enumifyName( String name )\n-    {\n-        return name.replaceAll( \" \", \"_\" ).toUpperCase();\n-    }\n+  private String enumifyName(String name)\n+  {\n+    return name.replaceAll(\" \", \"_\").toUpperCase();\n+  }\n }\n",
            "diff_size": 256
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "bakdata-conquery",
    "error_id": "281",
    "information": {
        "errors": [
            {
                "line": "96",
                "severity": "error",
                "message": "Indent must use tab characters",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
            }
        ]
    },
    "source_code": "\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t\t .orElseGet(() -> BitMapCDateSet.createAll());\n\t\t\t\t// remove all fields from the data line that are not id fields, in case the mapping is not possible we avoid the data columns to be joined\n\t\t\t\tCsvEntityId id = idAccessor.getCsvEntityId(IdAccessorImpl.selectIdFields(row, format));\n",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "96",
                    "column": "17",
                    "severity": "warning",
                    "message": "'.' has incorrect indentation level 16, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/281/CQExternal.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler/281/CQExternal.java\nindex 9cbac6cc8d8..3fbdc46c42c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/281/CQExternal.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler/281/CQExternal.java\n@@ -93,7 +93,7 @@ public class CQExternal implements CQElement {\n \t\t\t\t\t\tthrow new RuntimeException(e);\n \t\t\t\t\t}\n \t\t\t\t})\n-\t\t\t\t\t\t\t\t\t\t\t\t .orElseGet(() -> BitMapCDateSet.createAll());\n+\t\t\t\t.orElseGet(() -> BitMapCDateSet.createAll());\n \t\t\t\t// remove all fields from the data line that are not id fields, in case the mapping is not possible we avoid the data columns to be joined\n \t\t\t\tCsvEntityId id = idAccessor.getCsvEntityId(IdAccessorImpl.selectIdFields(row, format));\n \n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "45",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "46",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "47",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "48",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "49",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "50",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "51",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "54",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "55",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "56",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "59",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "60",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "61",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "62",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "63",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "64",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "65",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "66",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "67",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "69",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "71",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "73",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "74",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "75",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "76",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "77",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "79",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "80",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "81",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "82",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "83",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "84",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "86",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "87",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "88",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "89",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "90",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "91",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "91",
                    "column": "21",
                    "severity": "warning",
                    "message": "'}' at column 21 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "92",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "93",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "94",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "95",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "96",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "97",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "99",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "100",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "101",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "102",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "103",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "104",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "105",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "105",
                    "column": "17",
                    "severity": "warning",
                    "message": "'}' at column 17 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "106",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "107",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "108",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "108",
                    "column": "13",
                    "severity": "warning",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "109",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "110",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "111",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "112",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "113",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "114",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "115",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "116",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "117",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "118",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "119",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "121",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "122",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "124",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "125",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "126",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "128",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "129",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "130",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "131",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "132",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "133",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "134",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "135",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "136",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "137",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "138",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "139",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "140",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "141",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "143",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "144",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "145",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "146",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "146",
                    "column": "17",
                    "severity": "warning",
                    "message": "'}' at column 17 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "147",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "148",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "150",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "151",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "152",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "153",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "154",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "155",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "156",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "157",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "158",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "159",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "160",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "161",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "162",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "163",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "164",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "166",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "167",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "169",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "170",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "171",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "172",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "173",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "174",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "175",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "176",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "177",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "178",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "180",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "181",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "182",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/281/CQExternal.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/intellij/281/CQExternal.java\nindex 9cbac6cc8d8..c7b7b03a3af 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/281/CQExternal.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/intellij/281/CQExternal.java\n@@ -42,146 +42,142 @@ import lombok.extern.slf4j.Slf4j;\n @RequiredArgsConstructor(onConstructor_ = @JsonCreator)\n public class CQExternal implements CQElement {\n \n-\t@Getter\n-\t@NotEmpty\n-\t@ValidCSVFormat\n-\tprivate final List<FormatColumn> format;\n-\t@Getter\n-\t@NotEmpty\n-\tprivate final String[][] values;\n-\n-\t@Override\n-\tpublic QPNode createQueryPlan(QueryPlanContext context, ConceptQueryPlan plan) {\n-\t\tthrow new IllegalStateException(\"CQExternal needs to be resolved before creating a plan\");\n-\t}\n-\n-\n-\t@Override\n-\tpublic CQElement resolve(QueryResolveContext context) {\n-\t\tDirectDictionary primary = context.getNamespace().getStorage().getPrimaryDictionary();\n-\t\tOptional<DateFormat> dateFormat = format.stream()\n-\t\t\t\t\t\t\t\t\t\t\t\t.map(FormatColumn::getDateFormat)\n-\t\t\t\t\t\t\t\t\t\t\t\t.filter(Objects::nonNull)\n-\t\t\t\t\t\t\t\t\t\t\t\t.distinct()\n-\t\t\t\t\t\t\t\t\t\t\t\t.collect(MoreCollectors.toOptional());\n-\t\tint[] dateIndices = format.stream().filter(fc -> fc.getDateFormat() != null).mapToInt(format::indexOf).toArray();\n-\n-\t\tInt2ObjectMap<BitMapCDateSet> includedEntities = new Int2ObjectOpenHashMap<>();\n-\n-\t\tIdMappingConfig mapping = ConqueryConfig.getInstance().getIdMapping();\n-\n-\t\tIdAccessor idAccessor = mapping.mappingFromCsvHeader(\n-\t\t\t\tIdAccessorImpl.selectIdFields(values[0], format),\n-\t\t\t\tcontext.getNamespace().getStorage().getIdMapping()\n-\t\t);\n-\t\tList<List<String>> nonResolved = new ArrayList<>();\n-\n-\t\t// ignore the first row, because this is the header\n-\t\tfor (int i = 1; i < values.length; i++) {\n-\t\t\tString[] row = values[i];\n-\t\t\tif (row.length != format.size()) {\n-\t\t\t\tthrow new ConqueryError.ExternalResolveError(format.size(), row.length);\n-\t\t\t}\n-\n-\t\t\t//read the dates from the row\n-\t\t\ttry {\n-\t\t\t\tBitMapCDateSet dates = dateFormat.map(df -> {\n-\t\t\t\t\ttry {\n-\t\t\t\t\t\treturn df.readDates(dateIndices, row);\n-\t\t\t\t\t}\n-\t\t\t\t\tcatch (Exception e) {\n-\t\t\t\t\t\tthrow new RuntimeException(e);\n-\t\t\t\t\t}\n-\t\t\t\t})\n-\t\t\t\t\t\t\t\t\t\t\t\t .orElseGet(() -> BitMapCDateSet.createAll());\n-\t\t\t\t// remove all fields from the data line that are not id fields, in case the mapping is not possible we avoid the data columns to be joined\n-\t\t\t\tCsvEntityId id = idAccessor.getCsvEntityId(IdAccessorImpl.selectIdFields(row, format));\n-\n-\t\t\t\tint resolvedId;\n-\t\t\t\tif (id != null && (resolvedId = primary.getId(id.getCsvId())) != -1) {\n-\t\t\t\t\tincludedEntities.put(\n-\t\t\t\t\t\t\tresolvedId,\n-\t\t\t\t\t\t\tObjects.requireNonNull(dates)\n-\t\t\t\t\t);\n-\t\t\t\t}\n-\t\t\t\telse {\n-\t\t\t\t\tnonResolved.add(Arrays.asList(row));\n-\t\t\t\t}\n-\t\t\t}\n-\t\t\tcatch (Exception e) {\n-\t\t\t\tlog.warn(\"failed to parse id from \" + Arrays.toString(row), e);\n-\t\t\t}\n-\t\t}\n-\t\tif (!nonResolved.isEmpty()) {\n-\t\t\tlog.warn(\n-\t\t\t\t\t\"Could not resolve {} of the {} rows. Not resolved: {}\",\n-\t\t\t\t\tnonResolved.size(),\n-\t\t\t\t\tvalues.length - 1,\n-\t\t\t\t\tnonResolved.subList(0, Math.min(nonResolved.size(), 10))\n-\t\t\t);\n-\t\t}\n-\n-\t\treturn new CQExternalResolved(includedEntities);\n-\t}\n-\n-\t@Override\n-\tpublic void collectResultInfos(ResultInfoCollector collector) {\n-\t}\n-\n-\tpublic enum DateFormat {\n-\t\tEVENT_DATE {\n-\t\t\t@Override\n-\t\t\tpublic BitMapCDateSet readDates(int[] dateIndices, String[] row) throws ParsingException {\n-\t\t\t\treturn BitMapCDateSet.create(CDateRange.exactly(DateFormats.parseToLocalDate(row[dateIndices[0]])));\n-\t\t\t}\n-\t\t},\n-\t\tSTART_END_DATE {\n-\t\t\t@Override\n-\t\t\tpublic BitMapCDateSet readDates(int[] dateIndices, String[] row) throws ParsingException {\n-\t\t\t\tLocalDate start = row[dateIndices[0]] == null ? null : DateFormats.parseToLocalDate(row[dateIndices[0]]);\n-\t\t\t\tLocalDate end = (dateIndices.length < 2 || row[dateIndices[1]] == null) ?\n-\t\t\t\t\t\t\t\tnull :\n-\t\t\t\t\t\t\t\tDateFormats.parseToLocalDate(row[dateIndices[1]]);\n-\n-\t\t\t\tCDateRange range;\n-\t\t\t\tif (start == null && end == null) {\n-\t\t\t\t\treturn null;\n-\t\t\t\t}\n-\t\t\t\telse {\n-\t\t\t\t\trange = CDateRange.of(start, end);\n-\t\t\t\t}\n-\n-\t\t\t\treturn BitMapCDateSet.create(range);\n-\t\t\t}\n-\t\t},\n-\t\tDATE_RANGE {\n-\t\t\t@Override\n-\t\t\tpublic BitMapCDateSet readDates(int[] dateIndices, String[] row) throws ParsingException {\n-\t\t\t\treturn BitMapCDateSet.create(DateRangeParser.parseISORange(row[dateIndices[0]]));\n-\t\t\t}\n-\t\t},\n-\t\tDATE_SET {\n-\t\t\t@Override\n-\t\t\tpublic BitMapCDateSet readDates(int[] dateIndices, String[] row) throws ParsingException {\n-\t\t\t\treturn BitMapCDateSet.parse(row[dateIndices[0]]);\n-\t\t\t}\n-\t\t};\n-\n-\t\tpublic abstract BitMapCDateSet readDates(int[] dateIndices, String[] row) throws ParsingException;\n-\t}\n-\n-\t@RequiredArgsConstructor\n-\t@Getter\n-\tpublic enum FormatColumn {\n-\t\tID(true, null),\n-\t\tEVENT_DATE(false, DateFormat.EVENT_DATE),\n-\t\tSTART_DATE(false, DateFormat.START_END_DATE),\n-\t\tEND_DATE(false, DateFormat.START_END_DATE),\n-\t\tDATE_RANGE(false, DateFormat.DATE_RANGE),\n-\t\tDATE_SET(false, DateFormat.DATE_SET),\n-\t\tIGNORE(true, null);\n-\n-\t\tprivate final boolean duplicatesAllowed;\n-\t\tprivate final DateFormat dateFormat;\n-\t}\n+    @Getter\n+    @NotEmpty\n+    @ValidCSVFormat\n+    private final List<FormatColumn> format;\n+    @Getter\n+    @NotEmpty\n+    private final String[][] values;\n+\n+    @Override\n+    public QPNode createQueryPlan(QueryPlanContext context, ConceptQueryPlan plan) {\n+        throw new IllegalStateException(\"CQExternal needs to be resolved before creating a plan\");\n+    }\n+\n+\n+    @Override\n+    public CQElement resolve(QueryResolveContext context) {\n+        DirectDictionary primary = context.getNamespace().getStorage().getPrimaryDictionary();\n+        Optional<DateFormat> dateFormat = format.stream()\n+            .map(FormatColumn::getDateFormat)\n+            .filter(Objects::nonNull)\n+            .distinct()\n+            .collect(MoreCollectors.toOptional());\n+        int[] dateIndices = format.stream().filter(fc -> fc.getDateFormat() != null).mapToInt(format::indexOf).toArray();\n+\n+        Int2ObjectMap<BitMapCDateSet> includedEntities = new Int2ObjectOpenHashMap<>();\n+\n+        IdMappingConfig mapping = ConqueryConfig.getInstance().getIdMapping();\n+\n+        IdAccessor idAccessor = mapping.mappingFromCsvHeader(\n+            IdAccessorImpl.selectIdFields(values[0], format),\n+            context.getNamespace().getStorage().getIdMapping()\n+        );\n+        List<List<String>> nonResolved = new ArrayList<>();\n+\n+        // ignore the first row, because this is the header\n+        for (int i = 1; i < values.length; i++) {\n+            String[] row = values[i];\n+            if (row.length != format.size()) {\n+                throw new ConqueryError.ExternalResolveError(format.size(), row.length);\n+            }\n+\n+            //read the dates from the row\n+            try {\n+                BitMapCDateSet dates = dateFormat.map(df -> {\n+                    try {\n+                        return df.readDates(dateIndices, row);\n+                    } catch (Exception e) {\n+                        throw new RuntimeException(e);\n+                    }\n+                })\n+                    .orElseGet(() -> BitMapCDateSet.createAll());\n+                // remove all fields from the data line that are not id fields, in case the mapping is not possible we avoid the data columns to be joined\n+                CsvEntityId id = idAccessor.getCsvEntityId(IdAccessorImpl.selectIdFields(row, format));\n+\n+                int resolvedId;\n+                if (id != null && (resolvedId = primary.getId(id.getCsvId())) != -1) {\n+                    includedEntities.put(\n+                        resolvedId,\n+                        Objects.requireNonNull(dates)\n+                    );\n+                } else {\n+                    nonResolved.add(Arrays.asList(row));\n+                }\n+            } catch (Exception e) {\n+                log.warn(\"failed to parse id from \" + Arrays.toString(row), e);\n+            }\n+        }\n+        if (!nonResolved.isEmpty()) {\n+            log.warn(\n+                \"Could not resolve {} of the {} rows. Not resolved: {}\",\n+                nonResolved.size(),\n+                values.length - 1,\n+                nonResolved.subList(0, Math.min(nonResolved.size(), 10))\n+            );\n+        }\n+\n+        return new CQExternalResolved(includedEntities);\n+    }\n+\n+    @Override\n+    public void collectResultInfos(ResultInfoCollector collector) {\n+    }\n+\n+    public enum DateFormat {\n+        EVENT_DATE {\n+            @Override\n+            public BitMapCDateSet readDates(int[] dateIndices, String[] row) throws ParsingException {\n+                return BitMapCDateSet.create(CDateRange.exactly(DateFormats.parseToLocalDate(row[dateIndices[0]])));\n+            }\n+        },\n+        START_END_DATE {\n+            @Override\n+            public BitMapCDateSet readDates(int[] dateIndices, String[] row) throws ParsingException {\n+                LocalDate start = row[dateIndices[0]] == null ? null : DateFormats.parseToLocalDate(row[dateIndices[0]]);\n+                LocalDate end = (dateIndices.length < 2 || row[dateIndices[1]] == null) ?\n+                    null :\n+                    DateFormats.parseToLocalDate(row[dateIndices[1]]);\n+\n+                CDateRange range;\n+                if (start == null && end == null) {\n+                    return null;\n+                } else {\n+                    range = CDateRange.of(start, end);\n+                }\n+\n+                return BitMapCDateSet.create(range);\n+            }\n+        },\n+        DATE_RANGE {\n+            @Override\n+            public BitMapCDateSet readDates(int[] dateIndices, String[] row) throws ParsingException {\n+                return BitMapCDateSet.create(DateRangeParser.parseISORange(row[dateIndices[0]]));\n+            }\n+        },\n+        DATE_SET {\n+            @Override\n+            public BitMapCDateSet readDates(int[] dateIndices, String[] row) throws ParsingException {\n+                return BitMapCDateSet.parse(row[dateIndices[0]]);\n+            }\n+        };\n+\n+        public abstract BitMapCDateSet readDates(int[] dateIndices, String[] row) throws ParsingException;\n+    }\n+\n+    @RequiredArgsConstructor\n+    @Getter\n+    public enum FormatColumn {\n+        ID(true, null),\n+        EVENT_DATE(false, DateFormat.EVENT_DATE),\n+        START_DATE(false, DateFormat.START_END_DATE),\n+        END_DATE(false, DateFormat.START_END_DATE),\n+        DATE_RANGE(false, DateFormat.DATE_RANGE),\n+        DATE_SET(false, DateFormat.DATE_SET),\n+        IGNORE(true, null);\n+\n+        private final boolean duplicatesAllowed;\n+        private final DateFormat dateFormat;\n+    }\n }\n",
            "diff_size": 142
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "66",
                    "column": "5",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "95",
                    "column": "1",
                    "severity": "warning",
                    "message": "'.' has incorrect indentation level 0, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "96",
                    "column": "1",
                    "severity": "warning",
                    "message": "Comment has incorrect indentation level 0, expected is 4, indentation should be the same level as line 97.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "98",
                    "column": "1",
                    "severity": "warning",
                    "message": "'try' child has incorrect indentation level 0, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "140",
                    "column": "5",
                    "severity": "warning",
                    "message": "'null' has incorrect indentation level 4, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "142",
                    "column": "1",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/281/CQExternal.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/naturalize/281/CQExternal.java\nindex 9cbac6cc8d8..3776c3e2b6a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/281/CQExternal.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/naturalize/281/CQExternal.java\n@@ -59,12 +59,11 @@ public class CQExternal implements CQElement {\n \t@Override\n \tpublic CQElement resolve(QueryResolveContext context) {\n \t\tDirectDictionary primary = context.getNamespace().getStorage().getPrimaryDictionary();\n-\t\tOptional<DateFormat> dateFormat = format.stream()\n-\t\t\t\t\t\t\t\t\t\t\t\t.map(FormatColumn::getDateFormat)\n+\t\tOptional<DateFormat> dateFormat = format.stream().map(FormatColumn::getDateFormat)\n \t\t\t\t\t\t\t\t\t\t\t\t.filter(Objects::nonNull)\n \t\t\t\t\t\t\t\t\t\t\t\t.distinct()\n \t\t\t\t\t\t\t\t\t\t\t\t.collect(MoreCollectors.toOptional());\n-\t\tint[] dateIndices = format.stream().filter(fc -> fc.getDateFormat() != null).mapToInt(format::indexOf).toArray();\n+\tint[] dateIndices = format.stream().filter(fc -> fc.getDateFormat() != null).mapToInt(format::indexOf).toArray();\n \n \t\tInt2ObjectMap<BitMapCDateSet> includedEntities = new Int2ObjectOpenHashMap<>();\n \n@@ -93,11 +92,10 @@ public class CQExternal implements CQElement {\n \t\t\t\t\t\tthrow new RuntimeException(e);\n \t\t\t\t\t}\n \t\t\t\t})\n-\t\t\t\t\t\t\t\t\t\t\t\t .orElseGet(() -> BitMapCDateSet.createAll());\n-\t\t\t\t// remove all fields from the data line that are not id fields, in case the mapping is not possible we avoid the data columns to be joined\n+.orElseGet(() -> BitMapCDateSet.createAll());\n+// remove all fields from the data line that are not id fields, in case the mapping is not possible we avoid the data columns to be joined\n \t\t\t\tCsvEntityId id = idAccessor.getCsvEntityId(IdAccessorImpl.selectIdFields(row, format));\n-\n-\t\t\t\tint resolvedId;\n+int resolvedId;\n \t\t\t\tif (id != null && (resolvedId = primary.getId(id.getCsvId())) != -1) {\n \t\t\t\t\tincludedEntities.put(\n \t\t\t\t\t\t\tresolvedId,\n@@ -116,8 +114,7 @@ public class CQExternal implements CQElement {\n \t\t\tlog.warn(\n \t\t\t\t\t\"Could not resolve {} of the {} rows. Not resolved: {}\",\n \t\t\t\t\tnonResolved.size(),\n-\t\t\t\t\tvalues.length - 1,\n-\t\t\t\t\tnonResolved.subList(0, Math.min(nonResolved.size(), 10))\n+\t\t\t\t\tvalues.length - 1, nonResolved.subList(0, Math.min(nonResolved.size(), 10))\n \t\t\t);\n \t\t}\n \n@@ -140,10 +137,9 @@ public class CQExternal implements CQElement {\n \t\t\tpublic BitMapCDateSet readDates(int[] dateIndices, String[] row) throws ParsingException {\n \t\t\t\tLocalDate start = row[dateIndices[0]] == null ? null : DateFormats.parseToLocalDate(row[dateIndices[0]]);\n \t\t\t\tLocalDate end = (dateIndices.length < 2 || row[dateIndices[1]] == null) ?\n-\t\t\t\t\t\t\t\tnull :\n+\tnull :\n \t\t\t\t\t\t\t\tDateFormats.parseToLocalDate(row[dateIndices[1]]);\n-\n-\t\t\t\tCDateRange range;\n+CDateRange range;\n \t\t\t\tif (start == null && end == null) {\n \t\t\t\t\treturn null;\n \t\t\t\t}\n@@ -184,4 +180,4 @@ public class CQExternal implements CQElement {\n \t\tprivate final boolean duplicatesAllowed;\n \t\tprivate final DateFormat dateFormat;\n \t}\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 13
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "42",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "42",
                    "column": "2",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "43",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "45",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "45",
                    "column": "2",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "46",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "48",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "48",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "49",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "50",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "50",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "51",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "51",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "53",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "54",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "55",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "55",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "56",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "56",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "57",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "57",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "58",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "58",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "59",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "59",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "60",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "60",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "61",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "61",
                    "column": "4",
                    "severity": "warning",
                    "message": "'IdAccessorImpl' has incorrect indentation level 3, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "62",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "62",
                    "column": "4",
                    "severity": "warning",
                    "message": "'context' has incorrect indentation level 3, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "63",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "64",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "64",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "66",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "67",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "67",
                    "column": "3",
                    "severity": "warning",
                    "message": "'for' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "68",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "68",
                    "column": "4",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "69",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "69",
                    "column": "4",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "70",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "70",
                    "column": "5",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 4, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "71",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "71",
                    "column": "4",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "73",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "74",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "74",
                    "column": "4",
                    "severity": "warning",
                    "message": "'try' has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "75",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "75",
                    "column": "5",
                    "severity": "warning",
                    "message": "'try' child has incorrect indentation level 4, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "76",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "76",
                    "column": "29",
                    "severity": "warning",
                    "message": "'try' has incorrect indentation level 28, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "77",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "77",
                    "column": "30",
                    "severity": "warning",
                    "message": "'try' child has incorrect indentation level 29, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "78",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "78",
                    "column": "29",
                    "severity": "warning",
                    "message": "'try rcurly' has incorrect indentation level 28, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "79",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "79",
                    "column": "29",
                    "severity": "warning",
                    "message": "'catch' has incorrect indentation level 28, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "80",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "80",
                    "column": "30",
                    "severity": "warning",
                    "message": "'catch' child has incorrect indentation level 29, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "81",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "81",
                    "column": "29",
                    "severity": "warning",
                    "message": "'catch rcurly' has incorrect indentation level 28, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "82",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "82",
                    "column": "28",
                    "severity": "warning",
                    "message": "'block rcurly' has incorrect indentation level 27, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "83",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "84",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "84",
                    "column": "5",
                    "severity": "warning",
                    "message": "'try' child has incorrect indentation level 4, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "85",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "85",
                    "column": "5",
                    "severity": "warning",
                    "message": "'try' child has incorrect indentation level 4, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "86",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "86",
                    "column": "5",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 4, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "87",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "87",
                    "column": "6",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 5, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "88",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "88",
                    "column": "5",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 4, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "89",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "89",
                    "column": "5",
                    "severity": "warning",
                    "message": "'else' has incorrect indentation level 4, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "90",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "90",
                    "column": "6",
                    "severity": "warning",
                    "message": "'else' child has incorrect indentation level 5, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "91",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "91",
                    "column": "5",
                    "severity": "warning",
                    "message": "'else rcurly' has incorrect indentation level 4, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "92",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "92",
                    "column": "4",
                    "severity": "warning",
                    "message": "'try rcurly' has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "93",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "93",
                    "column": "4",
                    "severity": "warning",
                    "message": "'catch' has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "94",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "94",
                    "column": "5",
                    "severity": "warning",
                    "message": "'catch' child has incorrect indentation level 4, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "95",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "95",
                    "column": "4",
                    "severity": "warning",
                    "message": "'catch rcurly' has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "96",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "96",
                    "column": "3",
                    "severity": "warning",
                    "message": "'for rcurly' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "97",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "97",
                    "column": "3",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "98",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "98",
                    "column": "4",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "99",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "99",
                    "column": "3",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "100",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "100",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "101",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "101",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "103",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "103",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "104",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "106",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "106",
                    "column": "2",
                    "severity": "warning",
                    "message": "'enum def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "107",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "109",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "109",
                    "column": "4",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "110",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "111",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "111",
                    "column": "5",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "112",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "112",
                    "column": "4",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "113",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "114",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "116",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "116",
                    "column": "4",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "117",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "118",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "118",
                    "column": "5",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "119",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "119",
                    "column": "5",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "120",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "120",
                    "column": "5",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "121",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "121",
                    "column": "5",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 4, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "122",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "122",
                    "column": "6",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 5, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "123",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "123",
                    "column": "5",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 4, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "124",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "124",
                    "column": "5",
                    "severity": "warning",
                    "message": "'else' has incorrect indentation level 4, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "125",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "125",
                    "column": "6",
                    "severity": "warning",
                    "message": "'else' child has incorrect indentation level 5, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "126",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "126",
                    "column": "5",
                    "severity": "warning",
                    "message": "'else rcurly' has incorrect indentation level 4, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "127",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "127",
                    "column": "5",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "128",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "128",
                    "column": "4",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "129",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "130",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "132",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "132",
                    "column": "4",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "133",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "134",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "134",
                    "column": "5",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "135",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "135",
                    "column": "4",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "136",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "137",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "139",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "139",
                    "column": "4",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "140",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "141",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "141",
                    "column": "5",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "142",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "142",
                    "column": "4",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "143",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "145",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "145",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "146",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "146",
                    "column": "2",
                    "severity": "warning",
                    "message": "'enum def rcurly' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "148",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "148",
                    "column": "2",
                    "severity": "warning",
                    "message": "'enum def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "149",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "149",
                    "column": "2",
                    "severity": "warning",
                    "message": "'enum def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "150",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "151",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "152",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "153",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "154",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "155",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "156",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "158",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "158",
                    "column": "3",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "159",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "159",
                    "column": "3",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "160",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "160",
                    "column": "2",
                    "severity": "warning",
                    "message": "'enum def rcurly' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/281/CQExternal.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/codebuff/281/CQExternal.java\nindex 9cbac6cc8d8..d04f9e9e2b6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/281/CQExternal.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/codebuff/281/CQExternal.java\n@@ -6,9 +6,7 @@ import java.util.Arrays;\n import java.util.List;\n import java.util.Objects;\n import java.util.Optional;\n-\n import javax.validation.constraints.NotEmpty;\n-\n import com.bakdata.conquery.io.cps.CPSType;\n import com.bakdata.conquery.models.common.BitMapCDateSet;\n import com.bakdata.conquery.models.common.daterange.CDateRange;\n@@ -37,151 +35,127 @@ import lombok.Getter;\n import lombok.RequiredArgsConstructor;\n import lombok.extern.slf4j.Slf4j;\n \n-@Slf4j\n-@CPSType(id = \"EXTERNAL\", base = CQElement.class)\n-@RequiredArgsConstructor(onConstructor_ = @JsonCreator)\n+@Slf4j @CPSType(id=\"EXTERNAL\", base= CQElement.class)\n+@RequiredArgsConstructor(onConstructor_=@JsonCreator)\n public class CQExternal implements CQElement {\n \n-\t@Getter\n-\t@NotEmpty\n-\t@ValidCSVFormat\n-\tprivate final List<FormatColumn> format;\n-\t@Getter\n-\t@NotEmpty\n-\tprivate final String[][] values;\n-\n-\t@Override\n-\tpublic QPNode createQueryPlan(QueryPlanContext context, ConceptQueryPlan plan) {\n-\t\tthrow new IllegalStateException(\"CQExternal needs to be resolved before creating a plan\");\n-\t}\n-\n-\n-\t@Override\n-\tpublic CQElement resolve(QueryResolveContext context) {\n-\t\tDirectDictionary primary = context.getNamespace().getStorage().getPrimaryDictionary();\n-\t\tOptional<DateFormat> dateFormat = format.stream()\n-\t\t\t\t\t\t\t\t\t\t\t\t.map(FormatColumn::getDateFormat)\n-\t\t\t\t\t\t\t\t\t\t\t\t.filter(Objects::nonNull)\n-\t\t\t\t\t\t\t\t\t\t\t\t.distinct()\n-\t\t\t\t\t\t\t\t\t\t\t\t.collect(MoreCollectors.toOptional());\n-\t\tint[] dateIndices = format.stream().filter(fc -> fc.getDateFormat() != null).mapToInt(format::indexOf).toArray();\n-\n-\t\tInt2ObjectMap<BitMapCDateSet> includedEntities = new Int2ObjectOpenHashMap<>();\n-\n-\t\tIdMappingConfig mapping = ConqueryConfig.getInstance().getIdMapping();\n-\n-\t\tIdAccessor idAccessor = mapping.mappingFromCsvHeader(\n-\t\t\t\tIdAccessorImpl.selectIdFields(values[0], format),\n-\t\t\t\tcontext.getNamespace().getStorage().getIdMapping()\n-\t\t);\n-\t\tList<List<String>> nonResolved = new ArrayList<>();\n-\n-\t\t// ignore the first row, because this is the header\n-\t\tfor (int i = 1; i < values.length; i++) {\n-\t\t\tString[] row = values[i];\n-\t\t\tif (row.length != format.size()) {\n-\t\t\t\tthrow new ConqueryError.ExternalResolveError(format.size(), row.length);\n-\t\t\t}\n-\n-\t\t\t//read the dates from the row\n-\t\t\ttry {\n-\t\t\t\tBitMapCDateSet dates = dateFormat.map(df -> {\n-\t\t\t\t\ttry {\n-\t\t\t\t\t\treturn df.readDates(dateIndices, row);\n-\t\t\t\t\t}\n-\t\t\t\t\tcatch (Exception e) {\n-\t\t\t\t\t\tthrow new RuntimeException(e);\n-\t\t\t\t\t}\n-\t\t\t\t})\n-\t\t\t\t\t\t\t\t\t\t\t\t .orElseGet(() -> BitMapCDateSet.createAll());\n-\t\t\t\t// remove all fields from the data line that are not id fields, in case the mapping is not possible we avoid the data columns to be joined\n-\t\t\t\tCsvEntityId id = idAccessor.getCsvEntityId(IdAccessorImpl.selectIdFields(row, format));\n-\n-\t\t\t\tint resolvedId;\n-\t\t\t\tif (id != null && (resolvedId = primary.getId(id.getCsvId())) != -1) {\n-\t\t\t\t\tincludedEntities.put(\n-\t\t\t\t\t\t\tresolvedId,\n-\t\t\t\t\t\t\tObjects.requireNonNull(dates)\n-\t\t\t\t\t);\n-\t\t\t\t}\n-\t\t\t\telse {\n-\t\t\t\t\tnonResolved.add(Arrays.asList(row));\n-\t\t\t\t}\n-\t\t\t}\n-\t\t\tcatch (Exception e) {\n-\t\t\t\tlog.warn(\"failed to parse id from \" + Arrays.toString(row), e);\n-\t\t\t}\n-\t\t}\n-\t\tif (!nonResolved.isEmpty()) {\n-\t\t\tlog.warn(\n-\t\t\t\t\t\"Could not resolve {} of the {} rows. Not resolved: {}\",\n-\t\t\t\t\tnonResolved.size(),\n-\t\t\t\t\tvalues.length - 1,\n-\t\t\t\t\tnonResolved.subList(0, Math.min(nonResolved.size(), 10))\n-\t\t\t);\n-\t\t}\n-\n-\t\treturn new CQExternalResolved(includedEntities);\n-\t}\n-\n-\t@Override\n-\tpublic void collectResultInfos(ResultInfoCollector collector) {\n-\t}\n-\n-\tpublic enum DateFormat {\n-\t\tEVENT_DATE {\n-\t\t\t@Override\n-\t\t\tpublic BitMapCDateSet readDates(int[] dateIndices, String[] row) throws ParsingException {\n-\t\t\t\treturn BitMapCDateSet.create(CDateRange.exactly(DateFormats.parseToLocalDate(row[dateIndices[0]])));\n-\t\t\t}\n-\t\t},\n-\t\tSTART_END_DATE {\n-\t\t\t@Override\n-\t\t\tpublic BitMapCDateSet readDates(int[] dateIndices, String[] row) throws ParsingException {\n-\t\t\t\tLocalDate start = row[dateIndices[0]] == null ? null : DateFormats.parseToLocalDate(row[dateIndices[0]]);\n-\t\t\t\tLocalDate end = (dateIndices.length < 2 || row[dateIndices[1]] == null) ?\n-\t\t\t\t\t\t\t\tnull :\n-\t\t\t\t\t\t\t\tDateFormats.parseToLocalDate(row[dateIndices[1]]);\n-\n-\t\t\t\tCDateRange range;\n-\t\t\t\tif (start == null && end == null) {\n-\t\t\t\t\treturn null;\n-\t\t\t\t}\n-\t\t\t\telse {\n-\t\t\t\t\trange = CDateRange.of(start, end);\n-\t\t\t\t}\n-\n-\t\t\t\treturn BitMapCDateSet.create(range);\n-\t\t\t}\n-\t\t},\n-\t\tDATE_RANGE {\n-\t\t\t@Override\n-\t\t\tpublic BitMapCDateSet readDates(int[] dateIndices, String[] row) throws ParsingException {\n-\t\t\t\treturn BitMapCDateSet.create(DateRangeParser.parseISORange(row[dateIndices[0]]));\n-\t\t\t}\n-\t\t},\n-\t\tDATE_SET {\n-\t\t\t@Override\n-\t\t\tpublic BitMapCDateSet readDates(int[] dateIndices, String[] row) throws ParsingException {\n-\t\t\t\treturn BitMapCDateSet.parse(row[dateIndices[0]]);\n-\t\t\t}\n-\t\t};\n-\n-\t\tpublic abstract BitMapCDateSet readDates(int[] dateIndices, String[] row) throws ParsingException;\n-\t}\n-\n-\t@RequiredArgsConstructor\n-\t@Getter\n-\tpublic enum FormatColumn {\n-\t\tID(true, null),\n-\t\tEVENT_DATE(false, DateFormat.EVENT_DATE),\n-\t\tSTART_DATE(false, DateFormat.START_END_DATE),\n-\t\tEND_DATE(false, DateFormat.START_END_DATE),\n-\t\tDATE_RANGE(false, DateFormat.DATE_RANGE),\n-\t\tDATE_SET(false, DateFormat.DATE_SET),\n-\t\tIGNORE(true, null);\n-\n-\t\tprivate final boolean duplicatesAllowed;\n-\t\tprivate final DateFormat dateFormat;\n-\t}\n-}\n+ @Getter @NotEmpty @ValidCSVFormat\n+ private final List<FormatColumn> format;\n+\n+ @Getter @NotEmpty\n+ private final String[][] values;\n+\n+ @Override\n+ public QPNode createQueryPlan(QueryPlanContext context, ConceptQueryPlan plan) {\n+  throw new IllegalStateException(\"CQExternal needs to be resolved before creating a plan\");\n+ }\n+\n+ @Override\n+ public CQElement resolve(QueryResolveContext context) {\n+  DirectDictionary primary = context.getNamespace().getStorage().getPrimaryDictionary();\n+  Optional<DateFormat> dateFormat = format.stream().map(FormatColumn::getDateFormat).filter(Objects::nonNull).distinct().collect(MoreCollectors.toOptional());\n+  int[] dateIndices = format.stream().filter(fc -> fc.getDateFormat() != null).mapToInt(format::indexOf).toArray();\n+  Int2ObjectMap<BitMapCDateSet> includedEntities = new Int2ObjectOpenHashMap<>();\n+  IdMappingConfig mapping = ConqueryConfig.getInstance().getIdMapping();\n+  IdAccessor idAccessor = mapping.mappingFromCsvHeader(\n+   IdAccessorImpl.selectIdFields(values[0], format),\n+   context.getNamespace().getStorage().getIdMapping()\n+  );\n+  List<List<String>> nonResolved = new ArrayList<>();\n+\n+  // ignore the first row, because this is the header\n+  for(int i = 1;i<values.length;i++) {\n+   String[] row = values[i];\n+   if (row.length != format.size()) {\n+    throw new ConqueryError.ExternalResolveError(format.size(), row.length);\n+   }\n+\n+   //read the dates from the row\n+   try {\n+    BitMapCDateSet dates = dateFormat.map(df -> {\n+                            try {\n+                             return df.readDates(dateIndices, row);\n+                            }\n+                            catch (Exception e) {\n+                             throw new RuntimeException(e);\n+                            }\n+                           }).orElseGet(()-> BitMapCDateSet.createAll());\n+    // remove all fields from the data line that are not id fields, in case the mapping is not possible we avoid the data columns to be joined\n+    CsvEntityId id = idAccessor.getCsvEntityId(IdAccessorImpl.selectIdFields(row, format));\n+    int resolvedId;\n+    if(id != null && (resolvedId = primary.getId(id.getCsvId())) != -1) {\n+     includedEntities.put(resolvedId, Objects.requireNonNull(dates));\n+    }\n+    else {\n+     nonResolved.add(Arrays.asList(row));\n+    }\n+   }\n+   catch (Exception e) {\n+    log.warn(\"failed to parse id from \"+Arrays.toString(row), e);\n+   }\n+  }\n+  if (!nonResolved.isEmpty()) {\n+   log.warn(\"Could not resolve {} of the {} rows. Not resolved: {}\", nonResolved.size(), values.length -1, nonResolved.subList(0, Math.min(nonResolved.size(), 10)));\n+  }\n+  return new CQExternalResolved(includedEntities);\n+ }\n+\n+ @Override\n+ public void collectResultInfos(ResultInfoCollector collector) {}\n+\n+ public enum DateFormat {\n+  EVENT_DATE {\n+\n+   @Override\n+   public BitMapCDateSet readDates(int[] dateIndices, String[] row) throws ParsingException {\n+    return BitMapCDateSet.create(CDateRange.exactly(DateFormats.parseToLocalDate(row[dateIndices[0]])));\n+   }\n+  },\n+  START_END_DATE {\n+\n+   @Override\n+   public BitMapCDateSet readDates(int[] dateIndices, String[] row) throws ParsingException {\n+    LocalDate start = row[dateIndices[0]]== null ? null : DateFormats.parseToLocalDate(row[dateIndices[0]]);\n+    LocalDate end = (dateIndices.length< 2 || row[dateIndices[1]]== null) ? null : DateFormats.parseToLocalDate(row[dateIndices[1]]);\n+    CDateRange range;\n+    if(start == null && end == null) {\n+     return null;\n+    }\n+    else {\n+     range = CDateRange.of(start, end);\n+    }\n+    return BitMapCDateSet.create(range);\n+   }\n+  },\n+  DATE_RANGE {\n+\n+   @Override\n+   public BitMapCDateSet readDates(int[] dateIndices, String[] row) throws ParsingException {\n+    return BitMapCDateSet.create(DateRangeParser.parseISORange(row[dateIndices[0]]));\n+   }\n+  },\n+  DATE_SET {\n+\n+   @Override\n+   public BitMapCDateSet readDates(int[] dateIndices, String[] row) throws ParsingException {\n+    return BitMapCDateSet.parse(row[dateIndices[0]]);\n+   }\n+  };\n+\n+  public abstract BitMapCDateSet readDates(int[] dateIndices, String[] row) throws ParsingException;\n+ }\n+\n+ @RequiredArgsConstructor @Getter\n+ public enum FormatColumn {\n+  ID  (true, null),\n+  EVENT_DATE  (false, DateFormat.EVENT_DATE),\n+  START_DATE  (false, DateFormat.START_END_DATE),\n+  END_DATE  (false, DateFormat.START_END_DATE),\n+  DATE_RANGE  (false, DateFormat.DATE_RANGE),\n+  DATE_SET  (false, DateFormat.DATE_SET),\n+  IGNORE  (true, null);\n+\n+  private final boolean duplicatesAllowed;\n+  private final DateFormat dateFormat;\n+ }\n+}\n\\ No newline at end of file\n",
            "diff_size": 148
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "96",
                    "column": "17",
                    "severity": "warning",
                    "message": "'.' has incorrect indentation level 16, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/281/CQExternal.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler_random/281/CQExternal.java\nindex 9cbac6cc8d8..3fbdc46c42c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/281/CQExternal.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler_random/281/CQExternal.java\n@@ -93,7 +93,7 @@ public class CQExternal implements CQElement {\n \t\t\t\t\t\tthrow new RuntimeException(e);\n \t\t\t\t\t}\n \t\t\t\t})\n-\t\t\t\t\t\t\t\t\t\t\t\t .orElseGet(() -> BitMapCDateSet.createAll());\n+\t\t\t\t.orElseGet(() -> BitMapCDateSet.createAll());\n \t\t\t\t// remove all fields from the data line that are not id fields, in case the mapping is not possible we avoid the data columns to be joined\n \t\t\t\tCsvEntityId id = idAccessor.getCsvEntityId(IdAccessorImpl.selectIdFields(row, format));\n \n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "95",
                    "column": "64",
                    "severity": "warning",
                    "message": "Don't use trailing comments.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/281/CQExternal.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler_three_grams/281/CQExternal.java\nindex 9cbac6cc8d8..532f2575875 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/281/CQExternal.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler_three_grams/281/CQExternal.java\n@@ -92,9 +92,8 @@ public class CQExternal implements CQElement {\n \t\t\t\t\tcatch (Exception e) {\n \t\t\t\t\t\tthrow new RuntimeException(e);\n \t\t\t\t\t}\n-\t\t\t\t})\n-\t\t\t\t\t\t\t\t\t\t\t\t .orElseGet(() -> BitMapCDateSet.createAll());\n-\t\t\t\t// remove all fields from the data line that are not id fields, in case the mapping is not possible we avoid the data columns to be joined\n+\t\t\t\t}).orElseGet(() -> BitMapCDateSet.createAll());// remove all fields from the data line that are not id fields, in case the mapping is not possible we avoid the data columns to be joined\n+\n \t\t\t\tCsvEntityId id = idAccessor.getCsvEntityId(IdAccessorImpl.selectIdFields(row, format));\n \n \t\t\t\tint resolvedId;\n",
            "diff_size": 3
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
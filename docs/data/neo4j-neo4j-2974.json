{
    "project_name": "neo4j-neo4j",
    "error_id": "2974",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "94",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "19",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "153",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "153",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "179",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "179",
                    "column": "60",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "179",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "179",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "184",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "184",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "194",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "194",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "200",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "200",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "211",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "211",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "218",
                    "column": "17",
                    "severity": "error",
                    "message": "'}' at column 17 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "226",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "226",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "229",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "229",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "239",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "239",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "241",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "241",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "243",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "243",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "250",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "250",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "253",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "253",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "255",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "255",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "260",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "260",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "263",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "263",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "274",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "274",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "277",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "277",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "293",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "293",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "296",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "296",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "299",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "299",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "318",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "318",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "328",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "328",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "341",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "341",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "343",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "343",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "363",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "363",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "366",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "366",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "376",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "376",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "378",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "378",
                    "column": "115",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "385",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "385",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "388",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "388",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "407",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "407",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "416",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "416",
                    "column": "104",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "418",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "418",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "424",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "424",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "429",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "429",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "436",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "436",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "443",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "443",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "447",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "447",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "451",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "451",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "454",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "456",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "456",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "458",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "458",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "469",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "469",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "475",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "475",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "481",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "481",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "484",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "490",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "490",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "492",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "492",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "499",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "499",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "502",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "502",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "508",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "508",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "511",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "511",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "518",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "518",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "521",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "521",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "525",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "525",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "530",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "530",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "535",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "535",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "541",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "541",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "554",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "554",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "556",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "556",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "562",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "562",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "568",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "568",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "570",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "570",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "574",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "574",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "581",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "582",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "587",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "587",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "594",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "594",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "597",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "604",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "604",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "610",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "610",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "612",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "612",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "615",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "615",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "619",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "619",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "626",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "626",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "628",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "628",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "633",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "633",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "635",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "635",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "639",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "646",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "646",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "656",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "656",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "661",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "661",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "666",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "666",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2974/PublicApiAnnotationProcessor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2974/PublicApiAnnotationProcessor.java\nindex 6533d2464bc..b354ff6a84e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2974/PublicApiAnnotationProcessor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2974/PublicApiAnnotationProcessor.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.annotations.api;\n \n import java.io.BufferedWriter;\n@@ -90,42 +91,42 @@ public class PublicApiAnnotationProcessor extends AbstractProcessor\n     private boolean inDeprecatedScope;\n     private Types typeUtils;\n \n-    @SuppressWarnings( \"unused\" )\n+    @SuppressWarnings(\"unused\")\n     public PublicApiAnnotationProcessor()\n     {\n-        this( false );\n+        this(false);\n     }\n \n     /**\n      * Used from tests since the in-memory filesystem there does not support all of the needed operations.\n      * Welcome to the world of impossible-to-test annotation processors!\n      */\n-    PublicApiAnnotationProcessor( boolean forTest )\n+    PublicApiAnnotationProcessor(boolean forTest)\n     {\n-        this( forTest, DEFAULT_NEW_LINE );\n+        this(forTest, DEFAULT_NEW_LINE);\n     }\n \n     /**\n      * Used from tests since the in-memory filesystem there does not support all of the needed operations.\n      * Welcome to the world of impossible-to-test annotation processors!\n      */\n-    PublicApiAnnotationProcessor( boolean forTest, String newLine )\n+    PublicApiAnnotationProcessor(boolean forTest, String newLine)\n     {\n         this.testExecution = forTest;\n         this.newLine = newLine;\n     }\n \n     @Override\n-    public synchronized void init( ProcessingEnvironment processingEnv )\n+    public synchronized void init(ProcessingEnvironment processingEnv)\n     {\n-        super.init( processingEnv );\n+        super.init(processingEnv);\n         typeUtils = processingEnv.getTypeUtils();\n     }\n \n     @Override\n     public Set<String> getSupportedAnnotationTypes()\n     {\n-        return Set.of( PublicApi.class.getName() );\n+        return Set.of(PublicApi.class.getName());\n     }\n \n     @Override\n@@ -135,25 +136,23 @@ public class PublicApiAnnotationProcessor extends AbstractProcessor\n     }\n \n     @Override\n-    public boolean process( Set<? extends TypeElement> annotations, RoundEnvironment roundEnv )\n+    public boolean process(Set<? extends TypeElement> annotations, RoundEnvironment roundEnv)\n     {\n         try\n         {\n-            if ( roundEnv.processingOver() )\n+            if (roundEnv.processingOver())\n             {\n-                if ( !roundEnv.errorRaised() )\n+                if (!roundEnv.errorRaised())\n                 {\n                     generateSignature();\n                 }\n-            }\n-            else\n+            } else\n             {\n-                process( roundEnv );\n+                process(roundEnv);\n             }\n-        }\n-        catch ( Exception e )\n+        } catch (Exception e)\n         {\n-            error( \"Public API annotation processor failed: \" + getStackTrace( e ) );\n+            error(\"Public API annotation processor failed: \" + getStackTrace(e));\n         }\n         return false;\n     }\n@@ -161,111 +160,110 @@ public class PublicApiAnnotationProcessor extends AbstractProcessor\n     private void generateSignature() throws IOException\n     {\n         // only verify on request\n-        if ( !Boolean.getBoolean( VERIFY_TOGGLE ) )\n+        if (!Boolean.getBoolean(VERIFY_TOGGLE))\n         {\n             return;\n         }\n \n-        if ( !publicElements.isEmpty() )\n+        if (!publicElements.isEmpty())\n         {\n             StringBuilder sb = new StringBuilder();\n-            for ( final String element : publicElements )\n+            for (final String element : publicElements)\n             {\n-                sb.append( element ).append( newLine );\n+                sb.append(element).append(newLine);\n             }\n             String newSignature = sb.toString();\n \n             // Write new signature\n-            final FileObject file = processingEnv.getFiler().createResource( CLASS_OUTPUT, \"\", GENERATED_SIGNATURE_DESTINATION );\n-            try ( BufferedWriter writer = new BufferedWriter( file.openWriter() ) )\n+            final FileObject file = processingEnv.getFiler().createResource(CLASS_OUTPUT, \"\", GENERATED_SIGNATURE_DESTINATION);\n+            try (BufferedWriter writer = new BufferedWriter(file.openWriter()))\n             {\n-                writer.write( newSignature );\n+                writer.write(newSignature);\n             }\n \n-            if ( !testExecution )\n+            if (!testExecution)\n             {\n                 // Verify files\n-                Path path = Path.of( file.toUri() );\n-                Path metaPath = getAndAssertParent( path, \"META-INF\" );\n-                Path classesPath = getAndAssertParent( metaPath, \"classes\" );\n-                Path targetPath = getAndAssertParent( classesPath, \"target\" );\n+                Path path = Path.of(file.toUri());\n+                Path metaPath = getAndAssertParent(path, \"META-INF\");\n+                Path classesPath = getAndAssertParent(metaPath, \"classes\");\n+                Path targetPath = getAndAssertParent(classesPath, \"target\");\n                 Path mavenModulePath = targetPath.getParent();\n-                Path oldSignaturePath = mavenModulePath.resolve( \"PublicApi.txt\" );\n+                Path oldSignaturePath = mavenModulePath.resolve(\"PublicApi.txt\");\n \n-                if ( Boolean.getBoolean( \"overwrite\" ) )\n+                if (Boolean.getBoolean(\"overwrite\"))\n                 {\n-                    info( \"Overwriting \" + oldSignaturePath );\n-                    Files.writeString( oldSignaturePath, newSignature, UTF_8, WRITE, CREATE, TRUNCATE_EXISTING );\n+                    info(\"Overwriting \" + oldSignaturePath);\n+                    Files.writeString(oldSignaturePath, newSignature, UTF_8, WRITE, CREATE, TRUNCATE_EXISTING);\n                 }\n \n-                if ( !Files.exists( oldSignaturePath ) )\n+                if (!Files.exists(oldSignaturePath))\n                 {\n-                    error( format( \"Missing file %s, use `-Doverwrite` to create it.\", oldSignaturePath ) );\n+                    error(format(\"Missing file %s, use `-Doverwrite` to create it.\", oldSignaturePath));\n                     return;\n                 }\n \n-                String oldSignature = Files.readString( oldSignaturePath, UTF_8 );\n-                if ( !oldSignature.equals( newSignature ) )\n+                String oldSignature = Files.readString(oldSignaturePath, UTF_8);\n+                if (!oldSignature.equals(newSignature))\n                 {\n-                    oldSignature = oldSignature.replace( WINDOWS_NEW_LINE, DEFAULT_NEW_LINE );\n-                    newSignature = newSignature.replace( WINDOWS_NEW_LINE, DEFAULT_NEW_LINE );\n-                    if ( !oldSignature.equals( newSignature ) )\n+                    oldSignature = oldSignature.replace(WINDOWS_NEW_LINE, DEFAULT_NEW_LINE);\n+                    newSignature = newSignature.replace(WINDOWS_NEW_LINE, DEFAULT_NEW_LINE);\n+                    if (!oldSignature.equals(newSignature))\n                     {\n-                        StringBuilder diff = diff( oldSignaturePath );\n-                        error( format( \"Public API signature mismatch. The generated signature, %s, does not match the old signature in %s.%n\" +\n-                                \"Specify `-Doverwrite` to maven to replace it. Changed public elements, compared to the committed PublicApi.txt:%n%s%n\",\n-                                path, oldSignaturePath, diff ) );\n+                        StringBuilder diff = diff(oldSignaturePath);\n+                        error(format(\"Public API signature mismatch. The generated signature, %s, does not match the old signature in %s.%n\" +\n+                            \"Specify `-Doverwrite` to maven to replace it. Changed public elements, compared to the committed PublicApi.txt:%n%s%n\",\n+                          path, oldSignaturePath, diff));\n                     }\n-                }\n-                else\n+                } else\n                 {\n-                    info( \"Public API signature matches. \" + oldSignaturePath );\n+                    info(\"Public API signature matches. \" + oldSignaturePath);\n                 }\n             }\n         }\n     }\n \n-    private StringBuilder diff( Path oldSignaturePath ) throws IOException\n+    private StringBuilder diff(Path oldSignaturePath) throws IOException\n     {\n         Set<String> oldLines = new HashSet<>();\n-        try ( Stream<String> lines = Files.lines( oldSignaturePath, UTF_8 ) )\n+        try (Stream<String> lines = Files.lines(oldSignaturePath, UTF_8))\n         {\n-            lines.forEach( oldLines::add );\n+            lines.forEach(oldLines::add);\n         }\n         StringBuilder diff = new StringBuilder();\n-        diffSide( diff, oldLines, publicElements, '-' );\n-        diffSide( diff, publicElements, oldLines, '+' );\n+        diffSide(diff, oldLines, publicElements, '-');\n+        diffSide(diff, publicElements, oldLines, '+');\n         return diff;\n     }\n \n-    private void diffSide( StringBuilder diff, Set<String> left, Set<String> right, char diffSign )\n+    private void diffSide(StringBuilder diff, Set<String> left, Set<String> right, char diffSign)\n     {\n-        for ( String oldPublicElement : left )\n+        for (String oldPublicElement : left)\n         {\n-            if ( !right.contains( oldPublicElement ) )\n+            if (!right.contains(oldPublicElement))\n             {\n-                diff.append( diffSign ).append( oldPublicElement ).append( format( \"%n\" ) );\n+                diff.append(diffSign).append(oldPublicElement).append(format(\"%n\"));\n             }\n         }\n     }\n \n-    private static Path getAndAssertParent( Path path, String name )\n+    private static Path getAndAssertParent(Path path, String name)\n     {\n         Path parent = path.getParent();\n-        if ( !parent.getFileName().toString().equals( name ) )\n+        if (!parent.getFileName().toString().equals(name))\n         {\n-            throw new IllegalStateException( path.toAbsolutePath() + \" parent is not \" + name );\n+            throw new IllegalStateException(path.toAbsolutePath() + \" parent is not \" + name);\n         }\n         return parent;\n     }\n \n-    private void process( RoundEnvironment roundEnv )\n+    private void process(RoundEnvironment roundEnv)\n     {\n-        final Set<TypeElement> elements = roundEnv.getElementsAnnotatedWith( PublicApi.class ).stream().map( TypeElement.class::cast ).collect( toSet() );\n-        for ( TypeElement publicClass : elements )\n+        final Set<TypeElement> elements = roundEnv.getElementsAnnotatedWith(PublicApi.class).stream().map(TypeElement.class::cast).collect(toSet());\n+        for (TypeElement publicClass : elements)\n         {\n-            pushScope( publicClass.getQualifiedName().toString() );\n-            processType( publicClass );\n+            pushScope(publicClass.getQualifiedName().toString());\n+            processType(publicClass);\n             popScope();\n         }\n     }\n@@ -273,51 +271,51 @@ public class PublicApiAnnotationProcessor extends AbstractProcessor\n     /**\n      * Processing type elements. Class, interface, enum.\n      */\n-    private void processType( TypeElement typeElement )\n+    private void processType(TypeElement typeElement)\n     {\n         // Dummy check for public modifier\n-        if ( !typeElement.getModifiers().contains( Modifier.PUBLIC ) )\n+        if (!typeElement.getModifiers().contains(Modifier.PUBLIC))\n         {\n-            error( \"Class marked as public is not actually public\", typeElement );\n+            error(\"Class marked as public is not actually public\", typeElement);\n         }\n \n         // Add self to public API\n         StringBuilder sb = new StringBuilder();\n-        addTypeName( sb, typeElement );\n-        addModifiers( sb, typeElement );\n-        addKindIdentifier( sb, typeElement );\n-        addSuperClass( sb, typeElement );\n-        addInterfaces( sb, typeElement );\n+        addTypeName(sb, typeElement);\n+        addModifiers(sb, typeElement);\n+        addKindIdentifier(sb, typeElement);\n+        addSuperClass(sb, typeElement);\n+        addInterfaces(sb, typeElement);\n \n-        publicElements.add( sb.toString() );\n+        publicElements.add(sb.toString());\n \n         // Traverse visible child elements\n-        for ( Element element : typeElement.getEnclosedElements() )\n+        for (Element element : typeElement.getEnclosedElements())\n         {\n             Set<Modifier> modifiers = element.getModifiers();\n-            if ( modifiers.contains( Modifier.PUBLIC ) || modifiers.contains( Modifier.PROTECTED ) )\n+            if (modifiers.contains(Modifier.PUBLIC) || modifiers.contains(Modifier.PROTECTED))\n             {\n                 ElementKind kind = element.getKind();\n-                switch ( kind )\n+                switch (kind)\n                 {\n-                case ENUM:\n-                case INTERFACE:\n-                case CLASS:\n-                    pushScope( \".\" + element.getSimpleName() );\n-                    processType( (TypeElement) element );\n-                    break;\n-                case ENUM_CONSTANT:\n-                case FIELD:\n-                    pushScope( \"#\" + element );\n-                    processField( (VariableElement) element );\n-                    break;\n-                case CONSTRUCTOR:\n-                case METHOD:\n-                    pushScope( \"::\" + element );\n-                    processMethod( (ExecutableElement) element );\n-                    break;\n-                default:\n-                    throw new AssertionError( \"???: \" + kind );\n+                    case ENUM:\n+                    case INTERFACE:\n+                    case CLASS:\n+                        pushScope(\".\" + element.getSimpleName());\n+                        processType((TypeElement) element);\n+                        break;\n+                    case ENUM_CONSTANT:\n+                    case FIELD:\n+                        pushScope(\"#\" + element);\n+                        processField((VariableElement) element);\n+                        break;\n+                    case CONSTRUCTOR:\n+                    case METHOD:\n+                        pushScope(\"::\" + element);\n+                        processMethod((ExecutableElement) element);\n+                        break;\n+                    default:\n+                        throw new AssertionError(\"???: \" + kind);\n                 }\n                 popScope();\n             }\n@@ -327,34 +325,34 @@ public class PublicApiAnnotationProcessor extends AbstractProcessor\n     /**\n      * Process variables. Fields, enum constants.\n      */\n-    private void processField( VariableElement variableElement )\n+    private void processField(VariableElement variableElement)\n     {\n         StringBuilder sb = new StringBuilder();\n-        addFieldName( sb, variableElement );\n-        addReturn( sb, variableElement.asType() );\n-        addModifiers( sb, variableElement );\n-        addConstantValue( sb, variableElement );\n-        publicElements.add( sb.toString() );\n+        addFieldName(sb, variableElement);\n+        addReturn(sb, variableElement.asType());\n+        addModifiers(sb, variableElement);\n+        addConstantValue(sb, variableElement);\n+        publicElements.add(sb.toString());\n     }\n \n     /**\n      * Process executables. Constructors, methods.\n      */\n-    private void processMethod( ExecutableElement element )\n+    private void processMethod(ExecutableElement element)\n     {\n-        if ( element.getAnnotation( Deprecated.class ) != null )\n+        if (element.getAnnotation(Deprecated.class) != null)\n         {\n             inDeprecatedScope = true;\n         }\n \n         StringBuilder sb = new StringBuilder();\n-        addMethodName( sb, element );\n-        addParameters( sb, element );\n-        addReturn( sb, element.getReturnType() );\n-        addModifiers( sb, element );\n-        addExceptions( sb, element );\n+        addMethodName(sb, element);\n+        addParameters(sb, element);\n+        addReturn(sb, element.getReturnType());\n+        addModifiers(sb, element);\n+        addExceptions(sb, element);\n \n-        publicElements.add( sb.toString() );\n+        publicElements.add(sb.toString());\n \n         inDeprecatedScope = false;\n     }\n@@ -362,12 +360,12 @@ public class PublicApiAnnotationProcessor extends AbstractProcessor\n     /**\n      * Add implemented interfaces, e.g. {@code \" implements Serializable, Comparable\"}, or nothing if no interfaces are present.\n      */\n-    private void addInterfaces( StringBuilder sb, TypeElement typeElement )\n+    private void addInterfaces(StringBuilder sb, TypeElement typeElement)\n     {\n         List<? extends TypeMirror> interfaces = typeElement.getInterfaces();\n-        if ( !interfaces.isEmpty() )\n+        if (!interfaces.isEmpty())\n         {\n-            sb.append( interfaces.stream().map( this::encodeType ).collect( joining( \", \", \" implements \", \"\" ) ) );\n+            sb.append(interfaces.stream().map(this::encodeType).collect(joining(\", \", \" implements \", \"\")));\n         }\n     }\n \n@@ -375,179 +373,177 @@ public class PublicApiAnnotationProcessor extends AbstractProcessor\n      * Add extended declaration, e.g. {@code \" extends MyParent}. Note that even if {@code extends} is a keyword for interfaces, interfaces does not actually\n      * have a super class.\n      */\n-    private void addSuperClass( StringBuilder sb, TypeElement typeElement )\n+    private void addSuperClass(StringBuilder sb, TypeElement typeElement)\n     {\n-        if ( typeElement.getKind() != ElementKind.INTERFACE && typeElement.getKind() != ElementKind.ANNOTATION_TYPE )\n+        if (typeElement.getKind() != ElementKind.INTERFACE && typeElement.getKind() != ElementKind.ANNOTATION_TYPE)\n         {\n-            sb.append( \" extends \" );\n-            sb.append( encodeType( typeElement.getSuperclass() ) );\n+            sb.append(\" extends \");\n+            sb.append(encodeType(typeElement.getSuperclass()));\n         }\n     }\n \n-    private void addKindIdentifier( StringBuilder sb, TypeElement typeElement )\n+    private void addKindIdentifier(StringBuilder sb, TypeElement typeElement)\n     {\n         ElementKind kind = typeElement.getKind();\n-        switch ( kind )\n+        switch (kind)\n         {\n-        case CLASS:\n-            sb.append( \" class\" );\n-            break;\n-        case INTERFACE:\n-            sb.append( \" interface\" );\n-            break;\n-        case ENUM:\n-            sb.append( \" enum\" );\n-            break;\n-        case ANNOTATION_TYPE:\n-            sb.append( \" annotation\" );\n-            break;\n-        default:\n-            error( \"Unhandled ElementKind: \" + kind );\n+            case CLASS:\n+                sb.append(\" class\");\n+                break;\n+            case INTERFACE:\n+                sb.append(\" interface\");\n+                break;\n+            case ENUM:\n+                sb.append(\" enum\");\n+                break;\n+            case ANNOTATION_TYPE:\n+                sb.append(\" annotation\");\n+                break;\n+            default:\n+                error(\"Unhandled ElementKind: \" + kind);\n         }\n     }\n \n-    private void addTypeName( StringBuilder sb, TypeElement typeElement )\n+    private void addTypeName(StringBuilder sb, TypeElement typeElement)\n     {\n-        sb.append( typeElement.getQualifiedName() );\n-        addTypeParameter( sb, typeElement.getTypeParameters() );\n+        sb.append(typeElement.getQualifiedName());\n+        addTypeParameter(sb, typeElement.getTypeParameters());\n     }\n \n     /**\n      * Takes a list of parameters and append it to the string builder, e.g. {@code \"<K,V extends Object>\"}\n      */\n-    private void addTypeParameter( StringBuilder sb, List<? extends TypeParameterElement> typeParameters )\n+    private void addTypeParameter(StringBuilder sb, List<? extends TypeParameterElement> typeParameters)\n     {\n-        if ( !typeParameters.isEmpty() )\n+        if (!typeParameters.isEmpty())\n         {\n-            sb.append( typeParameters.stream().map( this::getGetBounds ).collect( joining( \", \", \"<\", \">\" ) ) );\n+            sb.append(typeParameters.stream().map(this::getGetBounds).collect(joining(\", \", \"<\", \">\")));\n         }\n     }\n \n-    private String getGetBounds( TypeParameterElement typeParameter )\n+    private String getGetBounds(TypeParameterElement typeParameter)\n     {\n         List<String> bounds = typeParameter.getBounds().stream()\n-                .map( this::encodeType )\n-                .collect( toList() );\n-        if ( bounds.isEmpty() )\n+          .map(this::encodeType)\n+          .collect(toList());\n+        if (bounds.isEmpty())\n         {\n             return typeParameter.toString();\n         }\n-        return typeParameter + \" extends \" + String.join( \" & \", bounds );\n+        return typeParameter + \" extends \" + String.join(\" & \", bounds);\n     }\n \n-    private void addFieldName( StringBuilder sb, VariableElement variableElement )\n+    private void addFieldName(StringBuilder sb, VariableElement variableElement)\n     {\n-        sb.append( encodeType( variableElement.getEnclosingElement().asType() ) );\n-        sb.append( \"::\" );\n-        sb.append( variableElement.getSimpleName() );\n+        sb.append(encodeType(variableElement.getEnclosingElement().asType()));\n+        sb.append(\"::\");\n+        sb.append(variableElement.getSimpleName());\n     }\n \n-    private void addParameters( StringBuilder sb, ExecutableElement element )\n+    private void addParameters(StringBuilder sb, ExecutableElement element)\n     {\n-        sb.append( '(' );\n+        sb.append('(');\n         List<? extends VariableElement> parameters = element.getParameters();\n-        for ( int i = 0; i < parameters.size(); i++ )\n+        for (int i = 0; i < parameters.size(); i++)\n         {\n-            VariableElement parameter = parameters.get( i );\n-            sb.append( encodeType( parameter.asType() ) );\n-            if ( i != parameters.size() - 1 )\n+            VariableElement parameter = parameters.get(i);\n+            sb.append(encodeType(parameter.asType()));\n+            if (i != parameters.size() - 1)\n             {\n-                sb.append( \", \" );\n-            }\n-            else // last\n+                sb.append(\", \");\n+            } else // last\n             {\n-                if ( element.isVarArgs() )\n+                if (element.isVarArgs())\n                 {\n-                    if ( parameter.asType().getKind() == TypeKind.ARRAY )\n+                    if (parameter.asType().getKind() == TypeKind.ARRAY)\n                     {\n-                        sb.setLength( sb.length() - 2 ); // Strip \"[]\"\n+                        sb.setLength(sb.length() - 2); // Strip \"[]\"\n                     }\n-                    sb.append( \"...\" );\n+                    sb.append(\"...\");\n                 }\n             }\n         }\n-        sb.append( ')' );\n+        sb.append(')');\n     }\n \n-    private void addReturn( StringBuilder sb, TypeMirror type )\n+    private void addReturn(StringBuilder sb, TypeMirror type)\n     {\n-        sb.append( ' ' );\n-        sb.append( encodeType( type ) );\n+        sb.append(' ');\n+        sb.append(encodeType(type));\n     }\n \n-    private void addMethodName( StringBuilder sb, ExecutableElement element )\n+    private void addMethodName(StringBuilder sb, ExecutableElement element)\n     {\n-        sb.append( encodeType( element.getEnclosingElement().asType() ) );\n-        sb.append( \"::\" );\n-        addTypeParameter( sb, element.getTypeParameters() );\n+        sb.append(encodeType(element.getEnclosingElement().asType()));\n+        sb.append(\"::\");\n+        addTypeParameter(sb, element.getTypeParameters());\n \n-        if ( element.getKind() == ElementKind.CONSTRUCTOR )\n+        if (element.getKind() == ElementKind.CONSTRUCTOR)\n         {\n-            sb.append( element.getEnclosingElement().getSimpleName() );\n-        }\n-        else\n+            sb.append(element.getEnclosingElement().getSimpleName());\n+        } else\n         {\n-            sb.append( element.getSimpleName() );\n+            sb.append(element.getSimpleName());\n         }\n     }\n \n-    private static void addModifiers( StringBuilder sb, Element element )\n+    private static void addModifiers(StringBuilder sb, Element element)\n     {\n-        for ( Modifier modifier : element.getModifiers() )\n+        for (Modifier modifier : element.getModifiers())\n         {\n-            sb.append( ' ' );\n-            sb.append( modifier );\n+            sb.append(' ');\n+            sb.append(modifier);\n         }\n     }\n \n-    private void addExceptions( StringBuilder sb, ExecutableElement element )\n+    private void addExceptions(StringBuilder sb, ExecutableElement element)\n     {\n         List<? extends TypeMirror> exceptions = element.getThrownTypes();\n-        if ( !exceptions.isEmpty() )\n+        if (!exceptions.isEmpty())\n         {\n-            sb.append( exceptions.stream().map( this::encodeType ).collect( joining( \", \", \" throws \", \"\" ) ) );\n+            sb.append(exceptions.stream().map(this::encodeType).collect(joining(\", \", \" throws \", \"\")));\n         }\n     }\n \n-    private static void addConstantValue( StringBuilder sb, VariableElement variableElement )\n+    private static void addConstantValue(StringBuilder sb, VariableElement variableElement)\n     {\n         Object constantValue = variableElement.getConstantValue();\n-        if ( constantValue != null )\n+        if (constantValue != null)\n         {\n-            sb.append( \" = \" );\n-            sb.append( constantValue );\n+            sb.append(\" = \");\n+            sb.append(constantValue);\n         }\n     }\n \n-    private String encodeType( TypeMirror type )\n+    private String encodeType(TypeMirror type)\n     {\n         TypeKind kind = type.getKind();\n-        if ( kind.isPrimitive() )\n+        if (kind.isPrimitive())\n         {\n-            return kind.toString().toLowerCase( Locale.ROOT );\n+            return kind.toString().toLowerCase(Locale.ROOT);\n         }\n-        if ( kind == TypeKind.ARRAY )\n+        if (kind == TypeKind.ARRAY)\n         {\n             ArrayType arrayType = (ArrayType) type;\n-            return encodeType( arrayType.getComponentType() ) + \"[]\";\n+            return encodeType(arrayType.getComponentType()) + \"[]\";\n         }\n-        if ( kind == TypeKind.TYPEVAR )\n+        if (kind == TypeKind.TYPEVAR)\n         {\n             TypeVariable typeVariable = (TypeVariable) type;\n             return \"#\" + typeVariable;\n         }\n-        if ( kind == TypeKind.DECLARED )\n+        if (kind == TypeKind.DECLARED)\n         {\n             DeclaredType referenceType = (DeclaredType) type;\n-            validatePublicVisibility( referenceType );\n+            validatePublicVisibility(referenceType);\n             return referenceType.toString();\n         }\n-        if ( kind == TypeKind.VOID )\n+        if (kind == TypeKind.VOID)\n         {\n             return \"void\";\n         }\n \n-        error( \"Unhandled type: \" + kind );\n+        error(\"Unhandled type: \" + kind);\n         return \"ERROR\";\n     }\n \n@@ -555,128 +551,126 @@ public class PublicApiAnnotationProcessor extends AbstractProcessor\n      * Verify that the classes in the API is visible and annotated with {@link PublicApi}. The exception to this is when a method is marked as deprecated or\n      * part of the java library.\n      */\n-    private void validatePublicVisibility( DeclaredType declaredType )\n+    private void validatePublicVisibility(DeclaredType declaredType)\n     {\n-        if ( !validatedDeclaredTypes.add( declaredType.toString() ) )\n+        if (!validatedDeclaredTypes.add(declaredType.toString()))\n         {\n             return; // already validated\n         }\n \n-        TypeElement element = (TypeElement) typeUtils.asElement( declaredType );\n-        if ( !element.getModifiers().contains( Modifier.PUBLIC ) )\n+        TypeElement element = (TypeElement) typeUtils.asElement(declaredType);\n+        if (!element.getModifiers().contains(Modifier.PUBLIC))\n         {\n-            error( \"Element that is exposed through the API is not visible\", element );\n+            error(\"Element that is exposed through the API is not visible\", element);\n         }\n \n         // Traverse type arguments, including bounds\n-        for ( TypeMirror typeArgument : declaredType.getTypeArguments() )\n+        for (TypeMirror typeArgument : declaredType.getTypeArguments())\n         {\n-            if ( typeArgument.getKind() == TypeKind.WILDCARD )\n+            if (typeArgument.getKind() == TypeKind.WILDCARD)\n             {\n-                validateWildcard( (WildcardType) typeArgument );\n+                validateWildcard((WildcardType) typeArgument);\n             }\n-            if ( typeArgument.getKind() == TypeKind.DECLARED )\n+            if (typeArgument.getKind() == TypeKind.DECLARED)\n             {\n-                validatePublicVisibility( (DeclaredType) typeArgument );\n+                validatePublicVisibility((DeclaredType) typeArgument);\n             }\n         }\n \n         // We only care about our own classes\n-        if ( !declaredType.toString().startsWith( \"org.neo4j.\" ) &&\n-                !declaredType.toString().startsWith( \"com.neo4j.\" ) )\n+        if (!declaredType.toString().startsWith(\"org.neo4j.\") &&\n+          !declaredType.toString().startsWith(\"com.neo4j.\"))\n         {\n             return;\n         }\n \n-        if ( element.getNestingKind().isNested() )\n+        if (element.getNestingKind().isNested())\n         {\n             TypeElement parent;\n             do\n             {\n                 parent = (TypeElement) element.getEnclosingElement();\n             }\n-            while ( parent.getNestingKind().isNested() );\n+            while (parent.getNestingKind().isNested());\n \n-            assertAnnotated( element, parent, element.getQualifiedName() + \"'s parent, \" + parent.getQualifiedName() + \",\" );\n-        }\n-        else\n+            assertAnnotated(element, parent, element.getQualifiedName() + \"'s parent, \" + parent.getQualifiedName() + \",\");\n+        } else\n         {\n             // Top-level type must be annotated directly\n-            assertAnnotated( element, element, element.getQualifiedName() + \" exposed through the API\" );\n+            assertAnnotated(element, element, element.getQualifiedName() + \" exposed through the API\");\n         }\n     }\n \n-    private void validateWildcard( WildcardType wildcardType )\n+    private void validateWildcard(WildcardType wildcardType)\n     {\n-        filterWildcard( wildcardType.getExtendsBound() );\n-        filterWildcard( wildcardType.getSuperBound() );\n+        filterWildcard(wildcardType.getExtendsBound());\n+        filterWildcard(wildcardType.getSuperBound());\n     }\n \n-    private void filterWildcard( TypeMirror extendsBound )\n+    private void filterWildcard(TypeMirror extendsBound)\n     {\n-        if ( extendsBound != null )\n+        if (extendsBound != null)\n         {\n             TypeKind kind = extendsBound.getKind();\n-            if ( kind == TypeKind.DECLARED )\n+            if (kind == TypeKind.DECLARED)\n             {\n-                validatePublicVisibility( (DeclaredType) extendsBound );\n+                validatePublicVisibility((DeclaredType) extendsBound);\n             }\n-            if ( kind == TypeKind.WILDCARD )\n+            if (kind == TypeKind.WILDCARD)\n             {\n-                validateWildcard( (WildcardType) extendsBound );\n+                validateWildcard((WildcardType) extendsBound);\n             }\n         }\n     }\n \n-    private void assertAnnotated( TypeElement element, TypeElement parent, String msg )\n+    private void assertAnnotated(TypeElement element, TypeElement parent, String msg)\n     {\n-        if ( parent.getAnnotation( IgnoreApiCheck.class ) != null )\n+        if (parent.getAnnotation(IgnoreApiCheck.class) != null)\n         {\n             return; // Stop traversing here\n         }\n \n-        if ( parent.getAnnotation( PublicApi.class ) == null )\n+        if (parent.getAnnotation(PublicApi.class) == null)\n         {\n-            if ( inDeprecatedScope )\n+            if (inDeprecatedScope)\n             {\n-                processingEnv.getMessager().printMessage( WARNING,\n-                        \"Non-public element, \" + element + \", is exposed through the API via a deprecated method\", element );\n-            }\n-            else\n+                processingEnv.getMessager().printMessage(WARNING,\n+                  \"Non-public element, \" + element + \", is exposed through the API via a deprecated method\", element);\n+            } else\n             {\n-                error( msg + \" is not marked with @\" + PublicApi.class.getSimpleName(), element );\n+                error(msg + \" is not marked with @\" + PublicApi.class.getSimpleName(), element);\n             }\n         }\n     }\n \n-    private void pushScope( String e )\n+    private void pushScope(String e)\n     {\n-        scope.add( e );\n+        scope.add(e);\n     }\n \n     private void popScope()\n     {\n-        scope.remove( scope.size() - 1 );\n+        scope.remove(scope.size() - 1);\n     }\n \n-    private void info( String msg )\n+    private void info(String msg)\n     {\n-        processingEnv.getMessager().printMessage( NOTE, msg );\n+        processingEnv.getMessager().printMessage(NOTE, msg);\n     }\n \n-    private void error( String msg )\n+    private void error(String msg)\n     {\n-        processingEnv.getMessager().printMessage( ERROR, msg );\n+        processingEnv.getMessager().printMessage(ERROR, msg);\n     }\n \n-    private void error( String msg, Element element )\n+    private void error(String msg, Element element)\n     {\n         StringBuilder sb = new StringBuilder();\n-        sb.append( \"Error processing \" );\n-        scope.forEach( sb::append );\n-        sb.append( ':' );\n-        sb.append( System.lineSeparator() );\n-        sb.append( msg );\n-        processingEnv.getMessager().printMessage( ERROR, sb.toString(), element );\n+        sb.append(\"Error processing \");\n+        scope.forEach(sb::append);\n+        sb.append(':');\n+        sb.append(System.lineSeparator());\n+        sb.append(msg);\n+        processingEnv.getMessager().printMessage(ERROR, sb.toString(), element);\n     }\n }\n",
            "diff_size": 244
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
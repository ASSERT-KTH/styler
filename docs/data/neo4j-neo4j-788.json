{
    "project_name": "neo4j-neo4j",
    "error_id": "788",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": null,
            "diff": null
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "58",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "229",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "229",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "234",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "234",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "239",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "239",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "244",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "244",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "249",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "249",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "251",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "251",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "254",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "254",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "254",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "256",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "256",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "335",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "335",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "340",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "340",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "358",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "358",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "360",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "360",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "364",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "364",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/788/DatabaseLayout.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/788/DatabaseLayout.java\nindex afe6e7a5365..0ef3e8a80d1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/788/DatabaseLayout.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/788/DatabaseLayout.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.io.layout;\n \n import java.io.IOException;\n@@ -54,45 +55,45 @@ public class DatabaseLayout\n     private final Neo4jLayout neo4jLayout;\n     private final String databaseName;\n \n-    public static DatabaseLayout ofFlat( Path databaseDirectory )\n+    public static DatabaseLayout ofFlat(Path databaseDirectory)\n     {\n-        Path canonical = FileUtils.getCanonicalFile( databaseDirectory );\n+        Path canonical = FileUtils.getCanonicalFile(databaseDirectory);\n         Path home = canonical.getParent();\n         String dbName = canonical.getFileName().toString();\n-        return Neo4jLayout.ofFlat( home ).databaseLayout( dbName );\n+        return Neo4jLayout.ofFlat(home).databaseLayout(dbName);\n     }\n \n-    public static DatabaseLayout of( Config config )\n+    public static DatabaseLayout of(Config config)\n     {\n-        return Neo4jLayout.of( config ).databaseLayout( config.get( GraphDatabaseSettings.default_database ) );\n+        return Neo4jLayout.of(config).databaseLayout(config.get(GraphDatabaseSettings.default_database));\n     }\n \n-    static DatabaseLayout of( Neo4jLayout neo4jLayout, String databaseName )\n+    static DatabaseLayout of(Neo4jLayout neo4jLayout, String databaseName)\n     {\n-        return new DatabaseLayout( neo4jLayout, databaseName );\n+        return new DatabaseLayout(neo4jLayout, databaseName);\n     }\n \n-    protected DatabaseLayout( Neo4jLayout neo4jLayout, String databaseName )\n+    protected DatabaseLayout(Neo4jLayout neo4jLayout, String databaseName)\n     {\n-        var normalizedName = new NormalizedDatabaseName( databaseName ).name();\n+        var normalizedName = new NormalizedDatabaseName(databaseName).name();\n         this.neo4jLayout = neo4jLayout;\n-        this.databaseDirectory = FileUtils.getCanonicalFile( neo4jLayout.databasesDirectory().resolve( normalizedName ) );\n+        this.databaseDirectory = FileUtils.getCanonicalFile(neo4jLayout.databasesDirectory().resolve(normalizedName));\n         this.databaseName = normalizedName;\n     }\n \n     public Path getTransactionLogsDirectory()\n     {\n-        return neo4jLayout.transactionLogsRootDirectory().resolve( getDatabaseName() );\n+        return neo4jLayout.transactionLogsRootDirectory().resolve(getDatabaseName());\n     }\n \n     public Path getScriptDirectory()\n     {\n-        return neo4jLayout.scriptRootDirectory().resolve( getDatabaseName() );\n+        return neo4jLayout.scriptRootDirectory().resolve(getDatabaseName());\n     }\n \n     public Path databaseLockFile()\n     {\n-        return databaseDirectory().resolve( DATABASE_LOCK_FILENAME );\n+        return databaseDirectory().resolve(DATABASE_LOCK_FILENAME);\n     }\n \n     public String getDatabaseName()\n@@ -112,232 +113,231 @@ public class DatabaseLayout\n \n     public Path backupToolsFolder()\n     {\n-        return databaseDirectory().resolve( BACKUP_TOOLS_FOLDER );\n+        return databaseDirectory().resolve(BACKUP_TOOLS_FOLDER);\n     }\n \n     public Path metadataStore()\n     {\n-        return file( DatabaseFile.METADATA_STORE.getName() );\n+        return file(DatabaseFile.METADATA_STORE.getName());\n     }\n \n     public Path labelScanStore()\n     {\n-        return file( DatabaseFile.LABEL_SCAN_STORE.getName() );\n+        return file(DatabaseFile.LABEL_SCAN_STORE.getName());\n     }\n \n     public Path relationshipTypeScanStore()\n     {\n-        return file( DatabaseFile.RELATIONSHIP_TYPE_SCAN_STORE.getName() );\n+        return file(DatabaseFile.RELATIONSHIP_TYPE_SCAN_STORE.getName());\n     }\n \n     public Path countStore()\n     {\n-        return file( DatabaseFile.COUNTS_STORE.getName() );\n+        return file(DatabaseFile.COUNTS_STORE.getName());\n     }\n \n     public Path propertyStringStore()\n     {\n-        return file( DatabaseFile.PROPERTY_STRING_STORE.getName() );\n+        return file(DatabaseFile.PROPERTY_STRING_STORE.getName());\n     }\n \n     public Path relationshipStore()\n     {\n-        return file( DatabaseFile.RELATIONSHIP_STORE.getName() );\n+        return file(DatabaseFile.RELATIONSHIP_STORE.getName());\n     }\n \n     public Path propertyStore()\n     {\n-        return file( DatabaseFile.PROPERTY_STORE.getName() );\n+        return file(DatabaseFile.PROPERTY_STORE.getName());\n     }\n \n     public Path nodeStore()\n     {\n-        return file( DatabaseFile.NODE_STORE.getName() );\n+        return file(DatabaseFile.NODE_STORE.getName());\n     }\n \n     public Path nodeLabelStore()\n     {\n-        return file( DatabaseFile.NODE_LABEL_STORE.getName() );\n+        return file(DatabaseFile.NODE_LABEL_STORE.getName());\n     }\n \n     public Path propertyArrayStore()\n     {\n-        return file( DatabaseFile.PROPERTY_ARRAY_STORE.getName() );\n+        return file(DatabaseFile.PROPERTY_ARRAY_STORE.getName());\n     }\n \n     public Path propertyKeyTokenStore()\n     {\n-        return file( DatabaseFile.PROPERTY_KEY_TOKEN_STORE.getName() );\n+        return file(DatabaseFile.PROPERTY_KEY_TOKEN_STORE.getName());\n     }\n \n     public Path propertyKeyTokenNamesStore()\n     {\n-        return file( DatabaseFile.PROPERTY_KEY_TOKEN_NAMES_STORE.getName() );\n+        return file(DatabaseFile.PROPERTY_KEY_TOKEN_NAMES_STORE.getName());\n     }\n \n     public Path relationshipTypeTokenStore()\n     {\n-        return file( DatabaseFile.RELATIONSHIP_TYPE_TOKEN_STORE.getName() );\n+        return file(DatabaseFile.RELATIONSHIP_TYPE_TOKEN_STORE.getName());\n     }\n \n     public Path relationshipTypeTokenNamesStore()\n     {\n-        return file( DatabaseFile.RELATIONSHIP_TYPE_TOKEN_NAMES_STORE.getName() );\n+        return file(DatabaseFile.RELATIONSHIP_TYPE_TOKEN_NAMES_STORE.getName());\n     }\n \n     public Path labelTokenStore()\n     {\n-        return file( DatabaseFile.LABEL_TOKEN_STORE.getName() );\n+        return file(DatabaseFile.LABEL_TOKEN_STORE.getName());\n     }\n \n     public Path schemaStore()\n     {\n-        return file( DatabaseFile.SCHEMA_STORE.getName() );\n+        return file(DatabaseFile.SCHEMA_STORE.getName());\n     }\n \n     public Path relationshipGroupStore()\n     {\n-        return file( DatabaseFile.RELATIONSHIP_GROUP_STORE.getName() );\n+        return file(DatabaseFile.RELATIONSHIP_GROUP_STORE.getName());\n     }\n \n     public Path labelTokenNamesStore()\n     {\n-        return file( DatabaseFile.LABEL_TOKEN_NAMES_STORE.getName() );\n+        return file(DatabaseFile.LABEL_TOKEN_NAMES_STORE.getName());\n     }\n \n     public Path indexStatisticsStore()\n     {\n-        return file( DatabaseFile.INDEX_STATISTICS_STORE.getName() );\n+        return file(DatabaseFile.INDEX_STATISTICS_STORE.getName());\n     }\n \n     public Set<Path> idFiles()\n     {\n-        return Arrays.stream( DatabaseFile.values() )\n-                .filter( DatabaseFile::hasIdFile )\n-                .flatMap( value -> idFile( value ).stream() )\n-                .collect( Collectors.toSet() );\n+        return Arrays.stream(DatabaseFile.values())\n+          .filter(DatabaseFile::hasIdFile)\n+          .flatMap(value -> idFile(value).stream())\n+          .collect(Collectors.toSet());\n     }\n \n     public Set<Path> storeFiles()\n     {\n-        return Arrays.stream( DatabaseFile.values() )\n-                .map( this::file )\n-                .collect( Collectors.toSet() );\n+        return Arrays.stream(DatabaseFile.values())\n+          .map(this::file)\n+          .collect(Collectors.toSet());\n     }\n \n-    public Optional<Path> idFile( DatabaseFile file )\n+    public Optional<Path> idFile(DatabaseFile file)\n     {\n-        return file.hasIdFile() ? Optional.of( idFile( file.getName() ) ) : Optional.empty();\n+        return file.hasIdFile() ? Optional.of(idFile(file.getName())) : Optional.empty();\n     }\n \n-    public Path file( String fileName )\n+    public Path file(String fileName)\n     {\n-        return databaseDirectory.resolve( fileName );\n+        return databaseDirectory.resolve(fileName);\n     }\n \n-    public Path file( DatabaseFile databaseFile )\n+    public Path file(DatabaseFile databaseFile)\n     {\n-        return file( databaseFile.getName() );\n+        return file(databaseFile.getName());\n     }\n \n-    public Stream<Path> allFiles( DatabaseFile databaseFile )\n+    public Stream<Path> allFiles(DatabaseFile databaseFile)\n     {\n-        return Stream.concat( idFile( databaseFile ).stream(), Stream.of( file( databaseFile ) ) );\n+        return Stream.concat(idFile(databaseFile).stream(), Stream.of(file(databaseFile)));\n     }\n \n-    public Path[] listDatabaseFiles( Predicate<? super Path> filter )\n+    public Path[] listDatabaseFiles(Predicate<? super Path> filter)\n     {\n-        try ( Stream<Path> list = Files.list( databaseDirectory ) )\n+        try (Stream<Path> list = Files.list(databaseDirectory))\n         {\n-            return list.filter( filter ).toArray( Path[]::new );\n-        }\n-        catch ( IOException e )\n+            return list.filter(filter).toArray(Path[]::new);\n+        } catch (IOException e)\n         {\n-            throw new UncheckedIOException( e );\n+            throw new UncheckedIOException(e);\n         }\n     }\n \n     public Path idMetadataStore()\n     {\n-        return idFile( DatabaseFile.METADATA_STORE.getName() );\n+        return idFile(DatabaseFile.METADATA_STORE.getName());\n     }\n \n     public Path idNodeStore()\n     {\n-        return idFile( DatabaseFile.NODE_STORE.getName() );\n+        return idFile(DatabaseFile.NODE_STORE.getName());\n     }\n \n     public Path idNodeLabelStore()\n     {\n-        return idFile( DatabaseFile.NODE_LABEL_STORE.getName() );\n+        return idFile(DatabaseFile.NODE_LABEL_STORE.getName());\n     }\n \n     public Path idPropertyStore()\n     {\n-        return idFile( DatabaseFile.PROPERTY_STORE.getName() );\n+        return idFile(DatabaseFile.PROPERTY_STORE.getName());\n     }\n \n     public Path idPropertyKeyTokenStore()\n     {\n-        return idFile( DatabaseFile.PROPERTY_KEY_TOKEN_STORE.getName() );\n+        return idFile(DatabaseFile.PROPERTY_KEY_TOKEN_STORE.getName());\n     }\n \n     public Path idPropertyKeyTokenNamesStore()\n     {\n-        return idFile( DatabaseFile.PROPERTY_KEY_TOKEN_NAMES_STORE.getName() );\n+        return idFile(DatabaseFile.PROPERTY_KEY_TOKEN_NAMES_STORE.getName());\n     }\n \n     public Path idPropertyStringStore()\n     {\n-        return idFile( DatabaseFile.PROPERTY_STRING_STORE.getName() );\n+        return idFile(DatabaseFile.PROPERTY_STRING_STORE.getName());\n     }\n \n     public Path idPropertyArrayStore()\n     {\n-        return idFile( DatabaseFile.PROPERTY_ARRAY_STORE.getName() );\n+        return idFile(DatabaseFile.PROPERTY_ARRAY_STORE.getName());\n     }\n \n     public Path idRelationshipStore()\n     {\n-        return idFile( DatabaseFile.RELATIONSHIP_STORE.getName() );\n+        return idFile(DatabaseFile.RELATIONSHIP_STORE.getName());\n     }\n \n     public Path idRelationshipGroupStore()\n     {\n-        return idFile( DatabaseFile.RELATIONSHIP_GROUP_STORE.getName() );\n+        return idFile(DatabaseFile.RELATIONSHIP_GROUP_STORE.getName());\n     }\n \n     public Path idRelationshipTypeTokenStore()\n     {\n-        return idFile( DatabaseFile.RELATIONSHIP_TYPE_TOKEN_STORE.getName() );\n+        return idFile(DatabaseFile.RELATIONSHIP_TYPE_TOKEN_STORE.getName());\n     }\n \n     public Path idRelationshipTypeTokenNamesStore()\n     {\n-        return idFile( DatabaseFile.RELATIONSHIP_TYPE_TOKEN_NAMES_STORE.getName() );\n+        return idFile(DatabaseFile.RELATIONSHIP_TYPE_TOKEN_NAMES_STORE.getName());\n     }\n \n     public Path idLabelTokenStore()\n     {\n-        return idFile( DatabaseFile.LABEL_TOKEN_STORE.getName() );\n+        return idFile(DatabaseFile.LABEL_TOKEN_STORE.getName());\n     }\n \n     public Path idLabelTokenNamesStore()\n     {\n-        return idFile( DatabaseFile.LABEL_TOKEN_NAMES_STORE.getName() );\n+        return idFile(DatabaseFile.LABEL_TOKEN_NAMES_STORE.getName());\n     }\n \n     public Path idSchemaStore()\n     {\n-        return idFile( DatabaseFile.SCHEMA_STORE.getName() );\n+        return idFile(DatabaseFile.SCHEMA_STORE.getName());\n     }\n \n-    private Path idFile( String name )\n+    private Path idFile(String name)\n     {\n-        return file( idFileName( name ) );\n+        return file(idFileName(name));\n     }\n \n-    private static String idFileName( String storeName )\n+    private static String idFileName(String storeName)\n     {\n         return storeName + \".id\";\n     }\n@@ -345,7 +345,7 @@ public class DatabaseLayout\n     @Override\n     public int hashCode()\n     {\n-        return Objects.hash( databaseDirectory, neo4jLayout );\n+        return Objects.hash(databaseDirectory, neo4jLayout);\n     }\n \n     @Override\n@@ -355,19 +355,19 @@ public class DatabaseLayout\n     }\n \n     @Override\n-    public boolean equals( Object o )\n+    public boolean equals(Object o)\n     {\n-        if ( this == o )\n+        if (this == o)\n         {\n             return true;\n         }\n-        if ( o == null || getClass() != o.getClass() )\n+        if (o == null || getClass() != o.getClass())\n         {\n             return false;\n         }\n         DatabaseLayout that = (DatabaseLayout) o;\n-        return Objects.equals( databaseDirectory, that.databaseDirectory ) &&\n-               Objects.equals( neo4jLayout, that.neo4jLayout ) &&\n-               getTransactionLogsDirectory().equals( that.getTransactionLogsDirectory() );\n+        return Objects.equals(databaseDirectory, that.databaseDirectory) &&\n+          Objects.equals(neo4jLayout, that.neo4jLayout) &&\n+          getTransactionLogsDirectory().equals(that.getTransactionLogsDirectory());\n     }\n }\n",
            "diff_size": 80
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_three_grams",
            "errors": null,
            "diff": null
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2935",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "39",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "15",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "19",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "63",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "62",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "74",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2935/BetterMessageLogger.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2935/BetterMessageLogger.java\nindex 095d09ea045..a3c3836c4c2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2935/BetterMessageLogger.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2935/BetterMessageLogger.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering.logging;\n \n import java.io.PrintWriter;\n@@ -33,65 +34,64 @@ import static java.lang.String.valueOf;\n \n public class BetterMessageLogger<MEMBER> extends LifecycleAdapter implements MessageLogger<MEMBER>\n {\n-    private enum Direction\n-    {\n-        INFO( \"---\" ),\n-        OUTBOUND( \"-->\" ),\n-        INBOUND( \"<--\" );\n+  private enum Direction\n+  {\n+    INFO(\"---\"),\n+    OUTBOUND(\"-->\"),\n+    INBOUND(\"<--\");\n \n-        public final String arrow;\n+    public final String arrow;\n \n-        Direction( String arrow )\n-        {\n-            this.arrow = arrow;\n-        }\n+    Direction(String arrow)\n+    {\n+      this.arrow = arrow;\n     }\n+  }\n \n-    private final PrintWriter printWriter;\n-    private final Clock clock;\n-    private final DateTimeFormatter dateTimeFormatter = DateTimeFormatter.ofPattern( \"yyyy-MM-dd HH:mm:ss.SSSZ\" );\n+  private final PrintWriter printWriter;\n+  private final Clock clock;\n+  private final DateTimeFormatter dateTimeFormatter = DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm:ss.SSSZ\");\n \n-    public BetterMessageLogger( MEMBER myself, PrintWriter printWriter, Clock clock )\n-    {\n-        this.printWriter = printWriter;\n-        this.clock = clock;\n-        log( myself, Direction.INFO, myself, \"Info\", \"I am \" + myself );\n-    }\n+  public BetterMessageLogger(MEMBER myself, PrintWriter printWriter, Clock clock)\n+  {\n+    this.printWriter = printWriter;\n+    this.clock = clock;\n+    log(myself, Direction.INFO, myself, \"Info\", \"I am \" + myself);\n+  }\n \n-    private void log( MEMBER me, Direction direction, MEMBER remote, String type, String message )\n-    {\n-        printWriter.println( format( \"%s %s %s %s %s \\\"%s\\\"\",\n-                ZonedDateTime.now( clock ).format( dateTimeFormatter ), me, direction.arrow, remote, type, message ) );\n-        printWriter.flush();\n-    }\n+  private void log(MEMBER me, Direction direction, MEMBER remote, String type, String message)\n+  {\n+    printWriter.println(format(\"%s %s %s %s %s \\\"%s\\\"\",\n+        ZonedDateTime.now(clock).format(dateTimeFormatter), me, direction.arrow, remote, type, message));\n+    printWriter.flush();\n+  }\n \n-    @Override\n-    public <M extends RaftMessages.RaftMessage> void logOutbound( MEMBER me, M message, MEMBER remote )\n-    {\n-        log( me, Direction.OUTBOUND, remote, nullSafeMessageType( message ), valueOf( message ) );\n-    }\n+  @Override\n+  public <M extends RaftMessages.RaftMessage> void logOutbound(MEMBER me, M message, MEMBER remote)\n+  {\n+    log(me, Direction.OUTBOUND, remote, nullSafeMessageType(message), valueOf(message));\n+  }\n \n-    @Override\n-    public <M extends RaftMessages.RaftMessage> void logInbound( MEMBER remote, M message, MEMBER me )\n-    {\n-        log( me, Direction.INBOUND, remote, nullSafeMessageType( message ), valueOf( message ) );\n-    }\n+  @Override\n+  public <M extends RaftMessages.RaftMessage> void logInbound(MEMBER remote, M message, MEMBER me)\n+  {\n+    log(me, Direction.INBOUND, remote, nullSafeMessageType(message), valueOf(message));\n+  }\n \n-    private <M extends RaftMessages.RaftMessage> String nullSafeMessageType( M message )\n+  private <M extends RaftMessages.RaftMessage> String nullSafeMessageType(M message)\n+  {\n+    if (Objects.isNull(message))\n     {\n-        if ( Objects.isNull( message ) )\n-        {\n-            return \"null\";\n-        }\n-        else\n-        {\n-            return message.type().toString();\n-        }\n-    }\n-\n-    @Override\n-    public void stop()\n+      return \"null\";\n+    } else\n     {\n-        printWriter.close();\n+      return message.type().toString();\n     }\n+  }\n+\n+  @Override\n+  public void stop()\n+  {\n+    printWriter.close();\n+  }\n }\n",
            "diff_size": 60
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2935/BetterMessageLogger.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2935/BetterMessageLogger.java\nindex 095d09ea045..31607926ef5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2935/BetterMessageLogger.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2935/BetterMessageLogger.java\n@@ -35,9 +35,7 @@ public class BetterMessageLogger<MEMBER> extends LifecycleAdapter implements Mes\n {\n     private enum Direction\n     {\n-        INFO( \"---\" ),\n-        OUTBOUND( \"-->\" ),\n-        INBOUND( \"<--\" );\n+        INFO( \"---\" ), OUTBOUND( \"-->\" ), INBOUND( \"<--\" );\n \n         public final String arrow;\n \n@@ -55,14 +53,15 @@ public class BetterMessageLogger<MEMBER> extends LifecycleAdapter implements Mes\n     {\n         this.printWriter = printWriter;\n         this.clock = clock;\n-        log( myself, Direction.INFO, myself, \"Info\", \"I am \" + myself );\n+\n+log( myself, Direction.INFO, myself, \"Info\", \"I am \" + myself );\n     }\n \n     private void log( MEMBER me, Direction direction, MEMBER remote, String type, String message )\n     {\n         printWriter.println( format( \"%s %s %s %s %s \\\"%s\\\"\",\n                 ZonedDateTime.now( clock ).format( dateTimeFormatter ), me, direction.arrow, remote, type, message ) );\n-        printWriter.flush();\n+printWriter.flush();\n     }\n \n     @Override\n@@ -94,4 +93,4 @@ public class BetterMessageLogger<MEMBER> extends LifecycleAdapter implements Mes\n     {\n         printWriter.close();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "33",
                    "column": "34",
                    "severity": "error",
                    "message": "'<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "36",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "36",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "36",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 165).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2935/BetterMessageLogger.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/2935/BetterMessageLogger.java\nindex 095d09ea045..c97c1ada4b8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2935/BetterMessageLogger.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/2935/BetterMessageLogger.java\n@@ -24,20 +24,17 @@ import java.time.Clock;\n import java.time.ZonedDateTime;\n import java.time.format.DateTimeFormatter;\n import java.util.Objects;\n-\n import org.neo4j.causalclustering.core.consensus.RaftMessages;\n import org.neo4j.kernel.lifecycle.LifecycleAdapter;\n-\n import static java.lang.String.format;\n+\n import static java.lang.String.valueOf;\n \n-public class BetterMessageLogger<MEMBER> extends LifecycleAdapter implements MessageLogger<MEMBER>\n+public class BetterMessageLogger <MEMBER> extends LifecycleAdapter implements MessageLogger<MEMBER>\n {\n     private enum Direction\n-    {\n-        INFO( \"---\" ),\n-        OUTBOUND( \"-->\" ),\n-        INBOUND( \"<--\" );\n+    { INFO( \"---\"), OUTBOUND( \"-->\"), INBOUND( \"<--\")\n+    ;\n \n         public final String arrow;\n \n@@ -45,6 +42,7 @@ public class BetterMessageLogger<MEMBER> extends LifecycleAdapter implements Mes\n         {\n             this.arrow = arrow;\n         }\n+\n     }\n \n     private final PrintWriter printWriter;\n@@ -60,8 +58,7 @@ public class BetterMessageLogger<MEMBER> extends LifecycleAdapter implements Mes\n \n     private void log( MEMBER me, Direction direction, MEMBER remote, String type, String message )\n     {\n-        printWriter.println( format( \"%s %s %s %s %s \\\"%s\\\"\",\n-                ZonedDateTime.now( clock ).format( dateTimeFormatter ), me, direction.arrow, remote, type, message ) );\n+        printWriter.println( format( \"%s %s %s %s %s \\\"%s\\\"\", ZonedDateTime.now( clock ).format( dateTimeFormatter ), me, direction.arrow, remote, type, message ) );\n         printWriter.flush();\n     }\n \n@@ -94,4 +91,4 @@ public class BetterMessageLogger<MEMBER> extends LifecycleAdapter implements Mes\n     {\n         printWriter.close();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 12
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "couchbase-couchbase-jvm-core",
    "error_id": "44",
    "information": {
        "errors": [
            {
                "line": "63",
                "column": "11",
                "severity": "warning",
                "message": "WhitespaceAround: 'if' is not followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
            }
        ]
    },
    "source_code": "     */\n    public static void retry(final CouchbaseRequest request, final EventSink<ResponseEvent> responseBuffer) {\n        if(!responseBuffer.tryPublishEvent(ResponseHandler.RESPONSE_TRANSLATOR, request, request.observable())) {\n            request.observable().onError(CouchbaseCore.BACKPRESSURE_EXCEPTION);\n        }\n    }",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/44/RetryHelper.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/styler/44/RetryHelper.java\nindex 7c5039e5e66..7c79fab163c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/44/RetryHelper.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/styler/44/RetryHelper.java\n@@ -60,7 +60,7 @@ public class RetryHelper {\n      * @param responseBuffer the response buffer to send it into.\n      */\n     public static void retry(final CouchbaseRequest request, final EventSink<ResponseEvent> responseBuffer) {\n-        if(!responseBuffer.tryPublishEvent(ResponseHandler.RESPONSE_TRANSLATOR, request, request.observable())) {\n+        if (!responseBuffer.tryPublishEvent(ResponseHandler.RESPONSE_TRANSLATOR, request, request.observable())) {\n             request.observable().onError(CouchbaseCore.BACKPRESSURE_EXCEPTION);\n         }\n     }\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/44/RetryHelper.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/intellij/44/RetryHelper.java\nindex 7c5039e5e66..74610f98aa6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/44/RetryHelper.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/intellij/44/RetryHelper.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package com.couchbase.client.core.retry;\n \n import com.couchbase.client.core.CouchbaseCore;\n@@ -35,12 +36,12 @@ public class RetryHelper {\n     /**\n      * Either retry or cancel a request, based on the strategy used.\n      *\n-     * @param environment the core environment for context.\n-     * @param request the request to either retry or cancel.\n+     * @param environment    the core environment for context.\n+     * @param request        the request to either retry or cancel.\n      * @param responseBuffer the response buffer where to maybe retry on.\n      */\n     public static void retryOrCancel(final CoreEnvironment environment, final CouchbaseRequest request,\n-        final EventSink<ResponseEvent> responseBuffer) {\n+                                     final EventSink<ResponseEvent> responseBuffer) {\n         if (!request.isActive()) {\n             return;\n         }\n@@ -56,11 +57,11 @@ public class RetryHelper {\n     /**\n      * Always retry the request and send it into the response buffer.\n      *\n-     * @param request the request to retry\n+     * @param request        the request to retry\n      * @param responseBuffer the response buffer to send it into.\n      */\n     public static void retry(final CouchbaseRequest request, final EventSink<ResponseEvent> responseBuffer) {\n-        if(!responseBuffer.tryPublishEvent(ResponseHandler.RESPONSE_TRANSLATOR, request, request.observable())) {\n+        if (!responseBuffer.tryPublishEvent(ResponseHandler.RESPONSE_TRANSLATOR, request, request.observable())) {\n             request.observable().onError(CouchbaseCore.BACKPRESSURE_EXCEPTION);\n         }\n     }\n",
            "diff_size": 6
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "44",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "51",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 140).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/44/RetryHelper.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/naturalize/44/RetryHelper.java\nindex 7c5039e5e66..ab5a040d9c4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/44/RetryHelper.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/naturalize/44/RetryHelper.java\n@@ -41,15 +41,14 @@ public class RetryHelper {\n      */\n     public static void retryOrCancel(final CoreEnvironment environment, final CouchbaseRequest request,\n         final EventSink<ResponseEvent> responseBuffer) {\n-        if (!request.isActive()) {\n+    if (!request.isActive()) {\n             return;\n         }\n \n         if (environment.retryStrategy().shouldRetry(request, environment)) {\n             retry(request, responseBuffer);\n         } else {\n-            request.observable().onError(new RequestCancelledException(\"Could not dispatch request, cancelling \"\n-                + \"instead of retrying.\"));\n+            request.observable().onError(new RequestCancelledException(\"Could not dispatch request, cancelling \" + \"instead of retrying.\"));\n         }\n     }\n \n@@ -60,8 +59,8 @@ public class RetryHelper {\n      * @param responseBuffer the response buffer to send it into.\n      */\n     public static void retry(final CouchbaseRequest request, final EventSink<ResponseEvent> responseBuffer) {\n-        if(!responseBuffer.tryPublishEvent(ResponseHandler.RESPONSE_TRANSLATOR, request, request.observable())) {\n+        if (!responseBuffer.tryPublishEvent(ResponseHandler.RESPONSE_TRANSLATOR, request, request.observable())) {\n             request.observable().onError(CouchbaseCore.BACKPRESSURE_EXCEPTION);\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "45",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 152).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "53",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 140).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/44/RetryHelper.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/codebuff/44/RetryHelper.java\nindex 7c5039e5e66..1d5da81770e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/44/RetryHelper.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/codebuff/44/RetryHelper.java\n@@ -30,6 +30,7 @@ import com.lmax.disruptor.RingBuffer;\n  * @author Michael Nitschinger\n  * @since 1.1.0\n  */\n+\n public class RetryHelper {\n \n     /**\n@@ -39,8 +40,9 @@ public class RetryHelper {\n      * @param request the request to either retry or cancel.\n      * @param responseBuffer the response buffer where to maybe retry on.\n      */\n-    public static void retryOrCancel(final CoreEnvironment environment, final CouchbaseRequest request,\n-        final EventSink<ResponseEvent> responseBuffer) {\n+\n+\n+    public static void retryOrCancel(final CoreEnvironment environment, final CouchbaseRequest request, final EventSink<ResponseEvent> responseBuffer) {\n         if (!request.isActive()) {\n             return;\n         }\n@@ -48,8 +50,7 @@ public class RetryHelper {\n         if (environment.retryStrategy().shouldRetry(request, environment)) {\n             retry(request, responseBuffer);\n         } else {\n-            request.observable().onError(new RequestCancelledException(\"Could not dispatch request, cancelling \"\n-                + \"instead of retrying.\"));\n+            request.observable().onError(new RequestCancelledException(\"Could not dispatch request, cancelling \" + \"instead of retrying.\"));\n         }\n     }\n \n@@ -59,9 +60,10 @@ public class RetryHelper {\n      * @param request the request to retry\n      * @param responseBuffer the response buffer to send it into.\n      */\n+\n     public static void retry(final CouchbaseRequest request, final EventSink<ResponseEvent> responseBuffer) {\n-        if(!responseBuffer.tryPublishEvent(ResponseHandler.RESPONSE_TRANSLATOR, request, request.observable())) {\n+        if (!responseBuffer.tryPublishEvent(ResponseHandler.RESPONSE_TRANSLATOR, request, request.observable())) {\n             request.observable().onError(CouchbaseCore.BACKPRESSURE_EXCEPTION);\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/44/RetryHelper.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/styler_random/44/RetryHelper.java\nindex 7c5039e5e66..7c79fab163c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/44/RetryHelper.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/styler_random/44/RetryHelper.java\n@@ -60,7 +60,7 @@ public class RetryHelper {\n      * @param responseBuffer the response buffer to send it into.\n      */\n     public static void retry(final CouchbaseRequest request, final EventSink<ResponseEvent> responseBuffer) {\n-        if(!responseBuffer.tryPublishEvent(ResponseHandler.RESPONSE_TRANSLATOR, request, request.observable())) {\n+        if (!responseBuffer.tryPublishEvent(ResponseHandler.RESPONSE_TRANSLATOR, request, request.observable())) {\n             request.observable().onError(CouchbaseCore.BACKPRESSURE_EXCEPTION);\n         }\n     }\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/44/RetryHelper.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/styler_three_grams/44/RetryHelper.java\nindex 7c5039e5e66..7c79fab163c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/44/RetryHelper.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/styler_three_grams/44/RetryHelper.java\n@@ -60,7 +60,7 @@ public class RetryHelper {\n      * @param responseBuffer the response buffer to send it into.\n      */\n     public static void retry(final CouchbaseRequest request, final EventSink<ResponseEvent> responseBuffer) {\n-        if(!responseBuffer.tryPublishEvent(ResponseHandler.RESPONSE_TRANSLATOR, request, request.observable())) {\n+        if (!responseBuffer.tryPublishEvent(ResponseHandler.RESPONSE_TRANSLATOR, request, request.observable())) {\n             request.observable().onError(CouchbaseCore.BACKPRESSURE_EXCEPTION);\n         }\n     }\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
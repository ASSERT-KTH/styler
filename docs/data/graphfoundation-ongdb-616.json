{
    "project_name": "graphfoundation-ongdb",
    "error_id": "616",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "41",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "113",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "59",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/616/InMemoryAcceptorInstanceStore.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/616/InMemoryAcceptorInstanceStore.java\nindex 4b75ace24f9..60ac00b1cce 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/616/InMemoryAcceptorInstanceStore.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/616/InMemoryAcceptorInstanceStore.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.cluster.protocol.atomicbroadcast.multipaxos;\n \n import java.util.HashMap;\n@@ -28,103 +29,103 @@ import java.util.concurrent.BlockingQueue;\n  * In memory version of an acceptor instance store.\n  */\n public class InMemoryAcceptorInstanceStore\n-        implements AcceptorInstanceStore\n+    implements AcceptorInstanceStore\n {\n-    private final Map<InstanceId, AcceptorInstance> instances;\n-    private final BlockingQueue<InstanceId> currentInstances;\n-\n-    private long lastDeliveredInstanceId;\n-\n-    public InMemoryAcceptorInstanceStore()\n+  private final Map<InstanceId, AcceptorInstance> instances;\n+  private final BlockingQueue<InstanceId> currentInstances;\n+\n+  private long lastDeliveredInstanceId;\n+\n+  public InMemoryAcceptorInstanceStore()\n+  {\n+    this(new HashMap<>(), new ArrayBlockingQueue<>(1000), -1);\n+  }\n+\n+  private InMemoryAcceptorInstanceStore(Map<InstanceId, AcceptorInstance> instances,\n+                                        BlockingQueue<InstanceId> currentInstances, long lastDeliveredInstanceId)\n+  {\n+    this.instances = instances;\n+    this.lastDeliveredInstanceId = lastDeliveredInstanceId;\n+    this.currentInstances = currentInstances;\n+  }\n+\n+  @Override\n+  public AcceptorInstance getAcceptorInstance(InstanceId instanceId)\n+  {\n+    AcceptorInstance instance = instances.get(instanceId);\n+    if (instance == null)\n     {\n-        this( new HashMap<>(), new ArrayBlockingQueue<>( 1000 ), -1 );\n+      instance = new AcceptorInstance();\n+      instances.put(instanceId, instance);\n+\n+      // Make sure we only keep a maximum number of instances, to not run out of memory\n+      if (!currentInstances.offer(instanceId))\n+      {\n+        instances.remove(currentInstances.poll());\n+        currentInstances.offer(instanceId);\n+      }\n     }\n \n-    private InMemoryAcceptorInstanceStore( Map<InstanceId,AcceptorInstance> instances,\n-            BlockingQueue<InstanceId> currentInstances, long lastDeliveredInstanceId )\n+    return instance;\n+  }\n+\n+  @Override\n+  public void promise(AcceptorInstance instance, long ballot)\n+  {\n+    instance.promise(ballot);\n+  }\n+\n+  @Override\n+  public void accept(AcceptorInstance instance, Object value)\n+  {\n+    instance.accept(value);\n+  }\n+\n+  @Override\n+  public void lastDelivered(InstanceId instanceId)\n+  {\n+    lastDeliveredInstanceId = instanceId.getId();\n+  }\n+\n+  @Override\n+  public void clear()\n+  {\n+    instances.clear();\n+  }\n+\n+  public InMemoryAcceptorInstanceStore snapshot()\n+  {\n+    return new InMemoryAcceptorInstanceStore(new HashMap<>(instances),\n+        new ArrayBlockingQueue<>(currentInstances.size() + currentInstances.remainingCapacity(), false,\n+            currentInstances), lastDeliveredInstanceId);\n+  }\n+\n+  @Override\n+  public boolean equals(Object o)\n+  {\n+    if (this == o)\n     {\n-        this.instances = instances;\n-        this.lastDeliveredInstanceId = lastDeliveredInstanceId;\n-        this.currentInstances = currentInstances;\n+      return true;\n     }\n-\n-    @Override\n-    public AcceptorInstance getAcceptorInstance( InstanceId instanceId )\n+    if (o == null || getClass() != o.getClass())\n     {\n-        AcceptorInstance instance = instances.get( instanceId );\n-        if ( instance == null )\n-        {\n-            instance = new AcceptorInstance();\n-            instances.put( instanceId, instance );\n-\n-            // Make sure we only keep a maximum number of instances, to not run out of memory\n-            if ( !currentInstances.offer( instanceId ) )\n-            {\n-                instances.remove( currentInstances.poll() );\n-                currentInstances.offer( instanceId );\n-            }\n-        }\n-\n-        return instance;\n+      return false;\n     }\n \n-    @Override\n-    public void promise( AcceptorInstance instance, long ballot )\n-    {\n-        instance.promise( ballot );\n-    }\n-\n-    @Override\n-    public void accept( AcceptorInstance instance, Object value )\n-    {\n-        instance.accept( value );\n-    }\n-\n-    @Override\n-    public void lastDelivered( InstanceId instanceId )\n-    {\n-        lastDeliveredInstanceId = instanceId.getId();\n-    }\n-\n-    @Override\n-    public void clear()\n-    {\n-        instances.clear();\n-    }\n-\n-    public InMemoryAcceptorInstanceStore snapshot()\n-    {\n-        return new InMemoryAcceptorInstanceStore( new HashMap<>( instances ),\n-                new ArrayBlockingQueue<>( currentInstances.size() + currentInstances.remainingCapacity(), false,\n-                        currentInstances ), lastDeliveredInstanceId );\n-    }\n-\n-    @Override\n-    public boolean equals( Object o )\n-    {\n-        if ( this == o )\n-        {\n-            return true;\n-        }\n-        if ( o == null || getClass() != o.getClass() )\n-        {\n-            return false;\n-        }\n-\n-        InMemoryAcceptorInstanceStore that = (InMemoryAcceptorInstanceStore) o;\n-\n-        if ( lastDeliveredInstanceId != that.lastDeliveredInstanceId )\n-        {\n-            return false;\n-        }\n-        return instances.equals( that.instances );\n-    }\n+    InMemoryAcceptorInstanceStore that = (InMemoryAcceptorInstanceStore) o;\n \n-    @Override\n-    public int hashCode()\n+    if (lastDeliveredInstanceId != that.lastDeliveredInstanceId)\n     {\n-        int result = instances.hashCode();\n-        result = 31 * result + (int) (lastDeliveredInstanceId ^ (lastDeliveredInstanceId >>> 32));\n-        return result;\n+      return false;\n     }\n+    return instances.equals(that.instances);\n+  }\n+\n+  @Override\n+  public int hashCode()\n+  {\n+    int result = instances.hashCode();\n+    result = 31 * result + (int) (lastDeliveredInstanceId ^ (lastDeliveredInstanceId >>> 32));\n+    return result;\n+  }\n }\n",
            "diff_size": 159
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "42",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 161).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "95",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 174).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "126",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/616/InMemoryAcceptorInstanceStore.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/616/InMemoryAcceptorInstanceStore.java\nindex 4b75ace24f9..4f2ac06b303 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/616/InMemoryAcceptorInstanceStore.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/616/InMemoryAcceptorInstanceStore.java\n@@ -27,10 +27,9 @@ import java.util.concurrent.BlockingQueue;\n /**\n  * In memory version of an acceptor instance store.\n  */\n-public class InMemoryAcceptorInstanceStore\n-        implements AcceptorInstanceStore\n+public class InMemoryAcceptorInstanceStore implements AcceptorInstanceStore\n {\n-    private final Map<InstanceId, AcceptorInstance> instances;\n+    private final Map<InstanceId,AcceptorInstance> instances;\n     private final BlockingQueue<InstanceId> currentInstances;\n \n     private long lastDeliveredInstanceId;\n@@ -40,8 +39,7 @@ public class InMemoryAcceptorInstanceStore\n         this( new HashMap<>(), new ArrayBlockingQueue<>( 1000 ), -1 );\n     }\n \n-    private InMemoryAcceptorInstanceStore( Map<InstanceId,AcceptorInstance> instances,\n-            BlockingQueue<InstanceId> currentInstances, long lastDeliveredInstanceId )\n+    private InMemoryAcceptorInstanceStore( Map<InstanceId,AcceptorInstance> instances, BlockingQueue<InstanceId> currentInstances, long lastDeliveredInstanceId )\n     {\n         this.instances = instances;\n         this.lastDeliveredInstanceId = lastDeliveredInstanceId;\n@@ -94,8 +92,7 @@ public class InMemoryAcceptorInstanceStore\n \n     public InMemoryAcceptorInstanceStore snapshot()\n     {\n-        return new InMemoryAcceptorInstanceStore( new HashMap<>( instances ),\n-                new ArrayBlockingQueue<>( currentInstances.size() + currentInstances.remainingCapacity(), false,\n+        return new InMemoryAcceptorInstanceStore( new HashMap<>( instances ), new ArrayBlockingQueue<>( currentInstances.size() + currentInstances.remainingCapacity(), false,\n                         currentInstances ), lastDeliveredInstanceId );\n     }\n \n@@ -106,7 +103,8 @@ public class InMemoryAcceptorInstanceStore\n         {\n             return true;\n         }\n-        if ( o == null || getClass() != o.getClass() )\n+\n+if ( o == null || getClass() != o.getClass() )\n         {\n             return false;\n         }\n@@ -117,14 +115,15 @@ public class InMemoryAcceptorInstanceStore\n         {\n             return false;\n         }\n-        return instances.equals( that.instances );\n+\n+return instances.equals( that.instances );\n     }\n \n     @Override\n     public int hashCode()\n     {\n         int result = instances.hashCode();\n-        result = 31 * result + (int) (lastDeliveredInstanceId ^ (lastDeliveredInstanceId >>> 32));\n+        result = 31 * result + ( int) ( lastDeliveredInstanceId ^ ( lastDeliveredInstanceId >>> 32 ));\n         return result;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 13
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "42",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 161).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "95",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 221).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "106",
                    "column": "23",
                    "severity": "error",
                    "message": "'||' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "124",
                    "column": "20",
                    "severity": "error",
                    "message": "'*' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "124",
                    "column": "62",
                    "severity": "error",
                    "message": "'^' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "124",
                    "column": "89",
                    "severity": "error",
                    "message": "'>>>' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/616/InMemoryAcceptorInstanceStore.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/616/InMemoryAcceptorInstanceStore.java\nindex 4b75ace24f9..2f39f3a0e91 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/616/InMemoryAcceptorInstanceStore.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/616/InMemoryAcceptorInstanceStore.java\n@@ -27,21 +27,19 @@ import java.util.concurrent.BlockingQueue;\n /**\n  * In memory version of an acceptor instance store.\n  */\n-public class InMemoryAcceptorInstanceStore\n-        implements AcceptorInstanceStore\n+\n+public class InMemoryAcceptorInstanceStore implements AcceptorInstanceStore\n {\n-    private final Map<InstanceId, AcceptorInstance> instances;\n+    private final Map<InstanceId,AcceptorInstance> instances;\n     private final BlockingQueue<InstanceId> currentInstances;\n-\n     private long lastDeliveredInstanceId;\n \n     public InMemoryAcceptorInstanceStore()\n     {\n-        this( new HashMap<>(), new ArrayBlockingQueue<>( 1000 ), -1 );\n+        this( new HashMap<>(), new ArrayBlockingQueue<>( 1000 ), - 1 );\n     }\n \n-    private InMemoryAcceptorInstanceStore( Map<InstanceId,AcceptorInstance> instances,\n-            BlockingQueue<InstanceId> currentInstances, long lastDeliveredInstanceId )\n+    private InMemoryAcceptorInstanceStore( Map<InstanceId,AcceptorInstance> instances, BlockingQueue<InstanceId> currentInstances, long lastDeliveredInstanceId )\n     {\n         this.instances = instances;\n         this.lastDeliveredInstanceId = lastDeliveredInstanceId;\n@@ -58,7 +56,7 @@ public class InMemoryAcceptorInstanceStore\n             instances.put( instanceId, instance );\n \n             // Make sure we only keep a maximum number of instances, to not run out of memory\n-            if ( !currentInstances.offer( instanceId ) )\n+            if ( ! currentInstances.offer( instanceId ) )\n             {\n                 instances.remove( currentInstances.poll() );\n                 currentInstances.offer( instanceId );\n@@ -94,9 +92,7 @@ public class InMemoryAcceptorInstanceStore\n \n     public InMemoryAcceptorInstanceStore snapshot()\n     {\n-        return new InMemoryAcceptorInstanceStore( new HashMap<>( instances ),\n-                new ArrayBlockingQueue<>( currentInstances.size() + currentInstances.remainingCapacity(), false,\n-                        currentInstances ), lastDeliveredInstanceId );\n+        return new InMemoryAcceptorInstanceStore( new HashMap<>( instances ), new ArrayBlockingQueue<>( currentInstances.size() + currentInstances.remainingCapacity(), false, currentInstances ), lastDeliveredInstanceId );\n     }\n \n     @Override\n@@ -106,17 +102,18 @@ public class InMemoryAcceptorInstanceStore\n         {\n             return true;\n         }\n-        if ( o == null || getClass() != o.getClass() )\n+\n+        if ( o == null|| getClass() != o.getClass() )\n         {\n             return false;\n         }\n \n         InMemoryAcceptorInstanceStore that = (InMemoryAcceptorInstanceStore) o;\n-\n         if ( lastDeliveredInstanceId != that.lastDeliveredInstanceId )\n         {\n             return false;\n         }\n+\n         return instances.equals( that.instances );\n     }\n \n@@ -124,7 +121,7 @@ public class InMemoryAcceptorInstanceStore\n     public int hashCode()\n     {\n         int result = instances.hashCode();\n-        result = 31 * result + (int) (lastDeliveredInstanceId ^ (lastDeliveredInstanceId >>> 32));\n+        result = 31* result + (int) ( lastDeliveredInstanceId^ ( lastDeliveredInstanceId>>> 32));\n         return result;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 17
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
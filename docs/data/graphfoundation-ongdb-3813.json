{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3813",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "37",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3813/CapabilityValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3813/CapabilityValidator.java\nindex 882fdfd271b..184f60a0da5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3813/CapabilityValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3813/CapabilityValidator.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.index.schema;\n \n import org.apache.commons.lang3.ArrayUtils;\n@@ -33,19 +34,19 @@ import static java.lang.String.format;\n \n class CapabilityValidator\n {\n-    static void validateQuery( IndexCapability capability, IndexOrder indexOrder, IndexQuery[] predicates )\n+  static void validateQuery(IndexCapability capability, IndexOrder indexOrder, IndexQuery[] predicates)\n+  {\n+    if (indexOrder != IndexOrder.NONE)\n     {\n-        if ( indexOrder != IndexOrder.NONE )\n-        {\n-            ValueCategory valueCategory = predicates[0].valueGroup().category();\n-            IndexOrder[] orderCapability = capability.orderCapability( valueCategory );\n-            if ( !ArrayUtil.contains( orderCapability, indexOrder ) )\n-            {\n-                orderCapability = ArrayUtils.add( orderCapability, IndexOrder.NONE );\n-                throw new UnsupportedOperationException(\n-                        format( \"Tried to query index with unsupported order %s. Supported orders for query %s are %s.\", indexOrder,\n-                                Arrays.toString( predicates ), Arrays.toString( orderCapability ) ) );\n-            }\n-        }\n+      ValueCategory valueCategory = predicates[0].valueGroup().category();\n+      IndexOrder[] orderCapability = capability.orderCapability(valueCategory);\n+      if (!ArrayUtil.contains(orderCapability, indexOrder))\n+      {\n+        orderCapability = ArrayUtils.add(orderCapability, IndexOrder.NONE);\n+        throw new UnsupportedOperationException(\n+            format(\"Tried to query index with unsupported order %s. Supported orders for query %s are %s.\", indexOrder,\n+                Arrays.toString(predicates), Arrays.toString(orderCapability)));\n+      }\n     }\n+  }\n }\n",
            "diff_size": 17
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "45",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 165).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3813/CapabilityValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3813/CapabilityValidator.java\nindex 882fdfd271b..d8edf34e7d2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3813/CapabilityValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3813/CapabilityValidator.java\n@@ -42,10 +42,9 @@ class CapabilityValidator\n             if ( !ArrayUtil.contains( orderCapability, indexOrder ) )\n             {\n                 orderCapability = ArrayUtils.add( orderCapability, IndexOrder.NONE );\n-                throw new UnsupportedOperationException(\n-                        format( \"Tried to query index with unsupported order %s. Supported orders for query %s are %s.\", indexOrder,\n+                throw new UnsupportedOperationException( format( \"Tried to query index with unsupported order %s. Supported orders for query %s are %s.\", indexOrder,\n                                 Arrays.toString( predicates ), Arrays.toString( orderCapability ) ) );\n-            }\n+    }\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
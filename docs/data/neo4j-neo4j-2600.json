{
    "project_name": "neo4j-neo4j",
    "error_id": "2600",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "153",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "106",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "54",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "187",
                    "column": "87",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "187",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "189",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "190",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "192",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "192",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "196",
                    "column": "70",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "196",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "199",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "200",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "206",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "206",
                    "column": "152",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "208",
                    "column": "73",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "208",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "67",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "214",
                    "column": "108",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "222",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "222",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "224",
                    "column": "60",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "224",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "235",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "235",
                    "column": "58",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "235",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "236",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "240",
                    "column": "60",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "240",
                    "column": "116",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "242",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "242",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "260",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "260",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "267",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "267",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "270",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "270",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "276",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "276",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "307",
                    "column": "68",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "308",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "310",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "310",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "319",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "319",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "320",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "320",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "320",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "328",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "328",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "338",
                    "column": "68",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "338",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "340",
                    "column": "59",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "340",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "344",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "344",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "347",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "347",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "352",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "352",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "367",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "368",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "371",
                    "column": "87",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "372",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "375",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "375",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "382",
                    "column": "79",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "382",
                    "column": "111",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "385",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "385",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "392",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "395",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "395",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "397",
                    "column": "87",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "397",
                    "column": "108",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "398",
                    "column": "17",
                    "severity": "error",
                    "message": "'}' at column 17 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "403",
                    "column": "59",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "403",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "405",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "405",
                    "column": "118",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2600/GlobalModule.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2600/GlobalModule.java\nindex b90270d0856..95d802be088 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2600/GlobalModule.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2600/GlobalModule.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.graphdb.factory.module;\n \n import java.util.function.Supplier;\n@@ -145,140 +146,140 @@ public class GlobalModule\n     private final SystemGraphComponents systemGraphComponents;\n \n     /**\n-     * @param globalConfig configuration affecting global aspects of the system.\n-     * @param dbmsInfo the type of dbms this module manages.\n+     * @param globalConfig         configuration affecting global aspects of the system.\n+     * @param dbmsInfo             the type of dbms this module manages.\n      * @param externalDependencies optional external dependencies provided by caller.\n      */\n-    public GlobalModule( Config globalConfig, DbmsInfo dbmsInfo, ExternalDependencies externalDependencies )\n+    public GlobalModule(Config globalConfig, DbmsInfo dbmsInfo, ExternalDependencies externalDependencies)\n     {\n         externalDependencyResolver = externalDependencies.dependencies() != null ? externalDependencies.dependencies() : new Dependencies();\n \n         this.dbmsInfo = dbmsInfo;\n \n         globalDependencies = new Dependencies();\n-        globalDependencies.satisfyDependency( dbmsInfo );\n+        globalDependencies.satisfyDependency(dbmsInfo);\n \n-        globalClock = globalDependencies.satisfyDependency( createClock() );\n+        globalClock = globalDependencies.satisfyDependency(createClock());\n         globalLife = createLife();\n \n-        this.neo4jLayout = Neo4jLayout.of( globalConfig );\n+        this.neo4jLayout = Neo4jLayout.of(globalConfig);\n \n-        this.globalConfig = globalDependencies.satisfyDependency( globalConfig );\n+        this.globalConfig = globalDependencies.satisfyDependency(globalConfig);\n \n-        fileSystem = tryResolveOrCreate( FileSystemAbstraction.class, this::createFileSystemAbstraction );\n-        globalDependencies.satisfyDependency( fileSystem );\n-        globalLife.add( new FileSystemLifecycleAdapter( fileSystem ) );\n+        fileSystem = tryResolveOrCreate(FileSystemAbstraction.class, this::createFileSystemAbstraction);\n+        globalDependencies.satisfyDependency(fileSystem);\n+        globalLife.add(new FileSystemLifecycleAdapter(fileSystem));\n \n         // If no logging was passed in from the outside then create logging and register\n         // with this life\n-        logService = globalDependencies.satisfyDependency( createLogService( externalDependencies.userLogProvider() ) );\n-        globalConfig.setLogger( logService.getInternalLog( Config.class ) );\n+        logService = globalDependencies.satisfyDependency(createLogService(externalDependencies.userLogProvider()));\n+        globalConfig.setLogger(logService.getInternalLog(Config.class));\n \n         // Component monitoring\n         globalMonitors = externalDependencies.monitors() == null ? new Monitors() : externalDependencies.monitors();\n-        globalDependencies.satisfyDependency( globalMonitors );\n+        globalDependencies.satisfyDependency(globalMonitors);\n \n-        JobScheduler createdOrResolvedScheduler = tryResolveOrCreate( JobScheduler.class, this::createJobScheduler );\n-        jobScheduler = globalLife.add( globalDependencies.satisfyDependency( createdOrResolvedScheduler ) );\n+        JobScheduler createdOrResolvedScheduler = tryResolveOrCreate(JobScheduler.class, this::createJobScheduler);\n+        jobScheduler = globalLife.add(globalDependencies.satisfyDependency(createdOrResolvedScheduler));\n \n         fileLockerService = createFileLockerService();\n-        Locker storeLocker = fileLockerService.createStoreLocker( fileSystem, neo4jLayout );\n-        globalLife.add( globalDependencies.satisfyDependency( new LockerLifecycleAdapter( storeLocker ) ) );\n+        Locker storeLocker = fileLockerService.createStoreLocker(fileSystem, neo4jLayout);\n+        globalLife.add(globalDependencies.satisfyDependency(new LockerLifecycleAdapter(storeLocker)));\n \n-        new JvmChecker( logService.getInternalLog( JvmChecker.class ),\n-                new JvmMetadataRepository() ).checkJvmCompatibilityAndIssueWarning();\n+        new JvmChecker(logService.getInternalLog(JvmChecker.class),\n+          new JvmMetadataRepository()).checkJvmCompatibilityAndIssueWarning();\n \n-        memoryPools = new MemoryPools( globalConfig.get( memory_tracking ) );\n-        otherMemoryPool = memoryPools.pool( MemoryGroup.OTHER, 0, null );\n+        memoryPools = new MemoryPools(globalConfig.get(memory_tracking));\n+        otherMemoryPool = memoryPools.pool(MemoryGroup.OTHER, 0, null);\n         transactionsMemoryPool =\n-                memoryPools.pool( MemoryGroup.TRANSACTION, globalConfig.get( memory_transaction_global_max_size ), memory_transaction_global_max_size.name() );\n-        globalConfig.addListener( memory_transaction_global_max_size, ( before, after ) -> transactionsMemoryPool.setSize( after ) );\n-        globalDependencies.satisfyDependency( memoryPools );\n+          memoryPools.pool(MemoryGroup.TRANSACTION, globalConfig.get(memory_transaction_global_max_size), memory_transaction_global_max_size.name());\n+        globalConfig.addListener(memory_transaction_global_max_size, (before, after) -> transactionsMemoryPool.setSize(after));\n+        globalDependencies.satisfyDependency(memoryPools);\n \n-        recentQueryBuffer = new RecentQueryBuffer( globalConfig.get( data_collector_max_recent_query_count ),\n-                                                   memoryPools.pool( MemoryGroup.RECENT_QUERY_BUFFER, 0, null ).getPoolMemoryTracker() );\n-        globalDependencies.satisfyDependency( recentQueryBuffer );\n+        recentQueryBuffer = new RecentQueryBuffer(globalConfig.get(data_collector_max_recent_query_count),\n+          memoryPools.pool(MemoryGroup.RECENT_QUERY_BUFFER, 0, null).getPoolMemoryTracker());\n+        globalDependencies.satisfyDependency(recentQueryBuffer);\n \n-        systemGraphComponents = tryResolveOrCreate( SystemGraphComponents.class, SystemGraphComponents::new );\n-        globalDependencies.satisfyDependency( systemGraphComponents );\n+        systemGraphComponents = tryResolveOrCreate(SystemGraphComponents.class, SystemGraphComponents::new);\n+        globalDependencies.satisfyDependency(systemGraphComponents);\n \n-        globalLife.add( new VmPauseMonitorComponent( globalConfig, logService.getInternalLog( VmPauseMonitorComponent.class ), jobScheduler, globalMonitors ) );\n+        globalLife.add(new VmPauseMonitorComponent(globalConfig, logService.getInternalLog(VmPauseMonitorComponent.class), jobScheduler, globalMonitors));\n \n-        globalAvailabilityGuard = new CompositeDatabaseAvailabilityGuard( globalClock );\n-        globalDependencies.satisfyDependency( globalAvailabilityGuard );\n-        globalLife.setLast( globalAvailabilityGuard );\n+        globalAvailabilityGuard = new CompositeDatabaseAvailabilityGuard(globalClock);\n+        globalDependencies.satisfyDependency(globalAvailabilityGuard);\n+        globalLife.setLast(globalAvailabilityGuard);\n \n-        String desiredImplementationName = globalConfig.get( GraphDatabaseInternalSettings.tracer );\n-        tracers = globalDependencies.satisfyDependency( new Tracers( desiredImplementationName,\n-                logService.getInternalLog( Tracers.class ), globalMonitors, jobScheduler, globalClock, globalConfig ) );\n-        globalDependencies.satisfyDependency( tracers.getPageCacheTracer() );\n+        String desiredImplementationName = globalConfig.get(GraphDatabaseInternalSettings.tracer);\n+        tracers = globalDependencies.satisfyDependency(new Tracers(desiredImplementationName,\n+          logService.getInternalLog(Tracers.class), globalMonitors, jobScheduler, globalClock, globalConfig));\n+        globalDependencies.satisfyDependency(tracers.getPageCacheTracer());\n \n-        collectionsFactorySupplier = createCollectionsFactorySupplier( globalConfig, globalLife );\n+        collectionsFactorySupplier = createCollectionsFactorySupplier(globalConfig, globalLife);\n \n-        pageCache = tryResolveOrCreate( PageCache.class,\n-                () -> createPageCache( fileSystem, globalConfig, logService, tracers, jobScheduler, globalClock, memoryPools ) );\n+        pageCache = tryResolveOrCreate(PageCache.class,\n+          () -> createPageCache(fileSystem, globalConfig, logService, tracers, jobScheduler, globalClock, memoryPools));\n \n-        globalLife.add( new PageCacheLifecycle( pageCache ) );\n+        globalLife.add(new PageCacheLifecycle(pageCache));\n \n-        dbmsDiagnosticsManager = new DbmsDiagnosticsManager( globalDependencies, logService );\n-        globalDependencies.satisfyDependency( dbmsDiagnosticsManager );\n+        dbmsDiagnosticsManager = new DbmsDiagnosticsManager(globalDependencies, logService);\n+        globalDependencies.satisfyDependency(dbmsDiagnosticsManager);\n \n         dbmsDiagnosticsManager.dumpSystemDiagnostics();\n \n-        fileSystemWatcher = createFileSystemWatcherService( fileSystem, logService, jobScheduler, globalConfig );\n-        globalLife.add( fileSystemWatcher );\n-        globalDependencies.satisfyDependency( fileSystemWatcher );\n+        fileSystemWatcher = createFileSystemWatcherService(fileSystem, logService, jobScheduler, globalConfig);\n+        globalLife.add(fileSystemWatcher);\n+        globalDependencies.satisfyDependency(fileSystemWatcher);\n \n         extensionFactories = externalDependencies.extensions();\n         globalExtensions = globalDependencies.satisfyDependency(\n-                new GlobalExtensions( new GlobalExtensionContext( neo4jLayout, dbmsInfo, globalDependencies ), extensionFactories, globalDependencies,\n-                        ExtensionFailureStrategies.fail() ) );\n+          new GlobalExtensions(new GlobalExtensionContext(neo4jLayout, dbmsInfo, globalDependencies), extensionFactories, globalDependencies,\n+            ExtensionFailureStrategies.fail()));\n \n-        globalDependencies.satisfyDependency( URLAccessRules.combined( externalDependencies.urlAccessRules() ) );\n+        globalDependencies.satisfyDependency(URLAccessRules.combined(externalDependencies.urlAccessRules()));\n \n-        databaseEventListeners = new DatabaseEventListeners( logService.getInternalLog( DatabaseEventListeners.class ) );\n+        databaseEventListeners = new DatabaseEventListeners(logService.getInternalLog(DatabaseEventListeners.class));\n         Iterable<? extends DatabaseEventListener> externalListeners = externalDependencies.databaseEventListeners();\n-        for ( DatabaseEventListener databaseListener : externalListeners )\n+        for (DatabaseEventListener databaseListener : externalListeners)\n         {\n-            databaseEventListeners.registerDatabaseEventListener( databaseListener );\n+            databaseEventListeners.registerDatabaseEventListener(databaseListener);\n         }\n         transactionEventListeners = new GlobalTransactionEventListeners();\n-        globalDependencies.satisfyDependency( transactionEventListeners );\n+        globalDependencies.satisfyDependency(transactionEventListeners);\n \n         connectorPortRegister = new ConnectorPortRegister();\n-        globalDependencies.satisfyDependency( connectorPortRegister );\n+        globalDependencies.satisfyDependency(connectorPortRegister);\n \n         // There's no way of actually configuring storage engine right now and this is on purpose since\n         // we have neither figured out the surface, use cases nor other storage engines.\n         storageEngineFactory = StorageEngineFactory.selectStorageEngine();\n-        globalDependencies.satisfyDependency( storageEngineFactory );\n+        globalDependencies.satisfyDependency(storageEngineFactory);\n \n         checkLegacyDefaultDatabase();\n     }\n \n-    private <T> T tryResolveOrCreate( Class<T> clazz, Supplier<T> newInstanceMethod )\n+    private <T> T tryResolveOrCreate(Class<T> clazz, Supplier<T> newInstanceMethod)\n     {\n-        return externalDependencyResolver.containsDependency( clazz ) ? externalDependencyResolver.resolveDependency( clazz ) : newInstanceMethod.get();\n+        return externalDependencyResolver.containsDependency(clazz) ? externalDependencyResolver.resolveDependency(clazz) : newInstanceMethod.get();\n     }\n \n     private void checkLegacyDefaultDatabase()\n     {\n-        if ( !globalConfig.isExplicitlySet( default_database ) )\n+        if (!globalConfig.isExplicitlySet(default_database))\n         {\n-            DatabaseLayout defaultDatabaseLayout = neo4jLayout.databaseLayout( globalConfig.get( default_database ) );\n-            if ( storageEngineFactory.storageExists( fileSystem, defaultDatabaseLayout, pageCache ) )\n+            DatabaseLayout defaultDatabaseLayout = neo4jLayout.databaseLayout(globalConfig.get(default_database));\n+            if (storageEngineFactory.storageExists(fileSystem, defaultDatabaseLayout, pageCache))\n             {\n                 return;\n             }\n             final String legacyDatabaseName = \"graph.db\";\n-            DatabaseLayout legacyDatabaseLayout = neo4jLayout.databaseLayout( legacyDatabaseName );\n-            if ( storageEngineFactory.storageExists( fileSystem, legacyDatabaseLayout, pageCache ) )\n+            DatabaseLayout legacyDatabaseLayout = neo4jLayout.databaseLayout(legacyDatabaseName);\n+            if (storageEngineFactory.storageExists(fileSystem, legacyDatabaseLayout, pageCache))\n             {\n-                Log internalLog = logService.getInternalLog( getClass() );\n-                globalConfig.set( default_database, legacyDatabaseName );\n+                Log internalLog = logService.getInternalLog(getClass());\n+                globalConfig.set(default_database, legacyDatabaseName);\n                 internalLog.warn(\n-                        \"Legacy `%s` database was found and default database was set to point to into it. Please consider setting default database explicitly.\",\n-                        legacyDatabaseName );\n+                  \"Legacy `%s` database was found and default database was set to point to into it. Please consider setting default database explicitly.\",\n+                  legacyDatabaseName);\n             }\n         }\n     }\n@@ -303,107 +304,105 @@ public class GlobalModule\n         return new DefaultFileSystemAbstraction();\n     }\n \n-    private FileSystemWatcherService createFileSystemWatcherService( FileSystemAbstraction fileSystem, LogService logging, JobScheduler jobScheduler,\n-            Config config )\n+    private FileSystemWatcherService createFileSystemWatcherService(FileSystemAbstraction fileSystem, LogService logging, JobScheduler jobScheduler,\n+                                                                    Config config)\n     {\n-        if ( !config.get( filewatcher_enabled ) )\n+        if (!config.get(filewatcher_enabled))\n         {\n-            Log log = logging.getInternalLog( getClass() );\n-            log.info( \"File watcher disabled by configuration.\" );\n+            Log log = logging.getInternalLog(getClass());\n+            log.info(\"File watcher disabled by configuration.\");\n             return FileSystemWatcherService.EMPTY_WATCHER;\n         }\n \n         try\n         {\n-            return new DefaultFileSystemWatcherService( jobScheduler, fileSystem.fileWatcher() );\n-        }\n-        catch ( Exception e )\n+            return new DefaultFileSystemWatcherService(jobScheduler, fileSystem.fileWatcher());\n+        } catch (Exception e)\n         {\n-            Log log = logging.getInternalLog( getClass() );\n-            log.warn( \"Can not create file watcher for current file system. File monitoring capabilities for store files will be disabled.\", e );\n+            Log log = logging.getInternalLog(getClass());\n+            log.warn(\"Can not create file watcher for current file system. File monitoring capabilities for store files will be disabled.\", e);\n             return FileSystemWatcherService.EMPTY_WATCHER;\n         }\n     }\n \n-    protected LogService createLogService( LogProvider userLogProvider )\n+    protected LogService createLogService(LogProvider userLogProvider)\n     {\n         // Will get diagnostics as header in each newly created log file (diagnostics in the first file is printed during start up).\n         Neo4jLoggerContext loggerContext =\n-                LogConfig.createBuilder( fileSystem, globalConfig.get( store_internal_log_path ), globalConfig.get( store_internal_log_level ) )\n-                         .withFormat( globalConfig.get( log_format ) )\n-                .withTimezone( globalConfig.get( db_timezone ) )\n-                .withHeaderLogger( log -> dbmsDiagnosticsManager.dumpAll(log), DiagnosticsManager.class.getCanonicalName() )\n-                .withRotation( globalConfig.get( store_internal_log_rotation_threshold ), globalConfig.get( store_internal_log_max_archives ) )\n-                .build();\n-        Log4jLogProvider internalLogProvider = new Log4jLogProvider( loggerContext );\n+          LogConfig.createBuilder(fileSystem, globalConfig.get(store_internal_log_path), globalConfig.get(store_internal_log_level))\n+            .withFormat(globalConfig.get(log_format))\n+            .withTimezone(globalConfig.get(db_timezone))\n+            .withHeaderLogger(log -> dbmsDiagnosticsManager.dumpAll(log), DiagnosticsManager.class.getCanonicalName())\n+            .withRotation(globalConfig.get(store_internal_log_rotation_threshold), globalConfig.get(store_internal_log_max_archives))\n+            .build();\n+        Log4jLogProvider internalLogProvider = new Log4jLogProvider(loggerContext);\n         userLogProvider = userLogProvider == null ? NullLogProvider.getInstance() : userLogProvider;\n-        SimpleLogService logService = new SimpleLogService( userLogProvider, internalLogProvider );\n+        SimpleLogService logService = new SimpleLogService(userLogProvider, internalLogProvider);\n \n         // Listen to changes to the dynamic log level settings.\n-        globalConfig.addListener( store_internal_log_level,\n-                ( before, after ) -> internalLogProvider.updateLogLevel( after ) );\n+        globalConfig.addListener(store_internal_log_level,\n+          (before, after) -> internalLogProvider.updateLogLevel(after));\n \n         // If the user log provider comes from us we make sure that it starts with the default log level and listens to updates.\n-        if ( userLogProvider instanceof Log4jLogProvider )\n+        if (userLogProvider instanceof Log4jLogProvider)\n         {\n             Log4jLogProvider provider = (Log4jLogProvider) userLogProvider;\n-            provider.updateLogLevel( globalConfig.get( store_internal_log_level) );\n-            globalConfig.addListener( store_internal_log_level,\n-                    ( before, after ) -> provider.updateLogLevel( after ) );\n+            provider.updateLogLevel(globalConfig.get(store_internal_log_level));\n+            globalConfig.addListener(store_internal_log_level,\n+              (before, after) -> provider.updateLogLevel(after));\n         }\n-        return globalLife.add( logService );\n+        return globalLife.add(logService);\n     }\n \n     private JobScheduler createJobScheduler()\n     {\n-        JobScheduler jobScheduler = JobSchedulerFactory.createInitialisedScheduler( globalClock );\n-        jobScheduler.setParallelism( Group.INDEX_SAMPLING, globalConfig.get( GraphDatabaseInternalSettings.index_sampling_parallelism ) );\n-        jobScheduler.setParallelism( Group.INDEX_POPULATION, globalConfig.get( GraphDatabaseInternalSettings.index_population_parallelism ) );\n-        jobScheduler.setParallelism( Group.INDEX_POPULATION_WORK, globalConfig.get( GraphDatabaseInternalSettings.index_population_workers ) );\n-        jobScheduler.setParallelism( Group.PAGE_CACHE_PRE_FETCHER, globalConfig.get( GraphDatabaseSettings.pagecache_scan_prefetch ) );\n+        JobScheduler jobScheduler = JobSchedulerFactory.createInitialisedScheduler(globalClock);\n+        jobScheduler.setParallelism(Group.INDEX_SAMPLING, globalConfig.get(GraphDatabaseInternalSettings.index_sampling_parallelism));\n+        jobScheduler.setParallelism(Group.INDEX_POPULATION, globalConfig.get(GraphDatabaseInternalSettings.index_population_parallelism));\n+        jobScheduler.setParallelism(Group.INDEX_POPULATION_WORK, globalConfig.get(GraphDatabaseInternalSettings.index_population_workers));\n+        jobScheduler.setParallelism(Group.PAGE_CACHE_PRE_FETCHER, globalConfig.get(GraphDatabaseSettings.pagecache_scan_prefetch));\n         return jobScheduler;\n     }\n \n-    protected PageCache createPageCache( FileSystemAbstraction fileSystem, Config config, LogService logging, Tracers tracers, JobScheduler jobScheduler,\n-            SystemNanoClock clock, MemoryPools memoryPools )\n+    protected PageCache createPageCache(FileSystemAbstraction fileSystem, Config config, LogService logging, Tracers tracers, JobScheduler jobScheduler,\n+                                        SystemNanoClock clock, MemoryPools memoryPools)\n     {\n-        Log pageCacheLog = logging.getInternalLog( PageCache.class );\n-        ConfiguringPageCacheFactory pageCacheFactory = new ConfiguringPageCacheFactory( fileSystem, config, tracers.getPageCacheTracer(), pageCacheLog,\n-                GuardVersionContextSupplier.INSTANCE, jobScheduler, clock, memoryPools );\n+        Log pageCacheLog = logging.getInternalLog(PageCache.class);\n+        ConfiguringPageCacheFactory pageCacheFactory = new ConfiguringPageCacheFactory(fileSystem, config, tracers.getPageCacheTracer(), pageCacheLog,\n+          GuardVersionContextSupplier.INSTANCE, jobScheduler, clock, memoryPools);\n         PageCache pageCache = pageCacheFactory.getOrCreatePageCache();\n \n-        if ( config.get( GraphDatabaseInternalSettings.dump_configuration ) )\n+        if (config.get(GraphDatabaseInternalSettings.dump_configuration))\n         {\n             pageCacheFactory.dumpConfiguration();\n         }\n         return pageCache;\n     }\n \n-    private static CollectionsFactorySupplier createCollectionsFactorySupplier( Config config, LifeSupport life )\n+    private static CollectionsFactorySupplier createCollectionsFactorySupplier(Config config, LifeSupport life)\n     {\n-        final TransactionStateMemoryAllocation allocation = config.get( tx_state_memory_allocation );\n-        switch ( allocation )\n+        final TransactionStateMemoryAllocation allocation = config.get(tx_state_memory_allocation);\n+        switch (allocation)\n         {\n-        case ON_HEAP:\n-            return CollectionsFactorySupplier.ON_HEAP;\n-        case OFF_HEAP:\n-            final CachingOffHeapBlockAllocator allocator = new CachingOffHeapBlockAllocator(\n-                    config.get( tx_state_off_heap_max_cacheable_block_size ),\n-                    config.get( tx_state_off_heap_block_cache_size ) );\n-            final OffHeapBlockAllocator sharedBlockAllocator;\n-            final long maxMemory = config.get( tx_state_max_off_heap_memory );\n-            if ( maxMemory > 0 )\n-            {\n-                sharedBlockAllocator = new CapacityLimitingBlockAllocatorDecorator( allocator, maxMemory );\n-            }\n-            else\n-            {\n-                sharedBlockAllocator = allocator;\n-            }\n-            life.add( onShutdown( sharedBlockAllocator::release ) );\n-            return () -> new OffHeapCollectionsFactory( sharedBlockAllocator );\n-        default:\n-            throw new IllegalArgumentException( \"Unknown transaction state memory allocation value: \" + allocation );\n+            case ON_HEAP:\n+                return CollectionsFactorySupplier.ON_HEAP;\n+            case OFF_HEAP:\n+                final CachingOffHeapBlockAllocator allocator = new CachingOffHeapBlockAllocator(\n+                  config.get(tx_state_off_heap_max_cacheable_block_size),\n+                  config.get(tx_state_off_heap_block_cache_size));\n+                final OffHeapBlockAllocator sharedBlockAllocator;\n+                final long maxMemory = config.get(tx_state_max_off_heap_memory);\n+                if (maxMemory > 0)\n+                {\n+                    sharedBlockAllocator = new CapacityLimitingBlockAllocatorDecorator(allocator, maxMemory);\n+                } else\n+                {\n+                    sharedBlockAllocator = allocator;\n+                }\n+                life.add(onShutdown(sharedBlockAllocator::release));\n+                return () -> new OffHeapCollectionsFactory(sharedBlockAllocator);\n+            default:\n+                throw new IllegalArgumentException(\"Unknown transaction state memory allocation value: \" + allocation);\n         }\n     }\n \n",
            "diff_size": 127
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2636",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "39",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "56",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "65",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "106",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2636/BranchDetectingTxVerifier.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2636/BranchDetectingTxVerifier.java\nindex 72b2619173b..6b883c8180b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2636/BranchDetectingTxVerifier.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2636/BranchDetectingTxVerifier.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.ha;\n \n import java.io.IOException;\n@@ -32,54 +33,52 @@ import org.neo4j.logging.LogProvider;\n  */\n public class BranchDetectingTxVerifier implements TxChecksumVerifier\n {\n-    private final Log log;\n-    private final TransactionChecksumLookup txChecksumLookup;\n+  private final Log log;\n+  private final TransactionChecksumLookup txChecksumLookup;\n+\n+  public BranchDetectingTxVerifier(LogProvider logProvider, TransactionChecksumLookup txChecksumLookup)\n+  {\n+    this.log = logProvider.getLog(getClass());\n+    this.txChecksumLookup = txChecksumLookup;\n+  }\n \n-    public BranchDetectingTxVerifier( LogProvider logProvider, TransactionChecksumLookup txChecksumLookup )\n+  @Override\n+  public void assertMatch(long txId, long checksum)\n+  {\n+    if (txId == 0)\n     {\n-        this.log = logProvider.getLog( getClass() );\n-        this.txChecksumLookup = txChecksumLookup;\n+      return;\n     }\n-\n-    @Override\n-    public void assertMatch( long txId, long checksum )\n+    long readChecksum;\n+    try\n     {\n-        if ( txId == 0 )\n-        {\n-            return;\n-        }\n-        long readChecksum;\n-        try\n-        {\n-            readChecksum = txChecksumLookup.lookup( txId );\n-        }\n-        catch ( NoSuchTransactionException e )\n-        {\n-            // This can happen if it's the first commit from a slave in a cluster where all instances\n-            // just restored from backup (i.e. no previous tx logs exist), OR if a reporting instance\n-            // is so far behind that logs have been pruned to the point where the slave cannot catch up anymore.\n-            // In the first case it's fine (slave had to do checksum match to join cluster), and the second case\n-            // it's an operational issue solved by making sure enough logs are retained.\n-\n-            return; // Ok!\n-        }\n-        catch ( IOException e )\n-        {\n-            log.error( \"Couldn't verify checksum for \" + stringify( txId, checksum ), e );\n-            throw new BranchedDataException( \"Unable to perform a mandatory sanity check due to an IO error.\", e );\n-        }\n+      readChecksum = txChecksumLookup.lookup(txId);\n+    } catch (NoSuchTransactionException e)\n+    {\n+      // This can happen if it's the first commit from a slave in a cluster where all instances\n+      // just restored from backup (i.e. no previous tx logs exist), OR if a reporting instance\n+      // is so far behind that logs have been pruned to the point where the slave cannot catch up anymore.\n+      // In the first case it's fine (slave had to do checksum match to join cluster), and the second case\n+      // it's an operational issue solved by making sure enough logs are retained.\n \n-        if ( checksum != readChecksum )\n-        {\n-            throw new BranchedDataException(\n-                    \"The cluster contains two logically different versions of the database. \" +\n-                            \"This will be automatically resolved. Details: \" + stringify( txId, checksum ) +\n-                            \" does not match \" + readChecksum );\n-        }\n+      return; // Ok!\n+    } catch (IOException e)\n+    {\n+      log.error(\"Couldn't verify checksum for \" + stringify(txId, checksum), e);\n+      throw new BranchedDataException(\"Unable to perform a mandatory sanity check due to an IO error.\", e);\n     }\n \n-    private String stringify( long txId, long checksum )\n+    if (checksum != readChecksum)\n     {\n-        return \"txId:\" + txId + \", checksum:\" + checksum;\n+      throw new BranchedDataException(\n+          \"The cluster contains two logically different versions of the database. \" +\n+              \"This will be automatically resolved. Details: \" + stringify(txId, checksum) +\n+              \" does not match \" + readChecksum);\n     }\n+  }\n+\n+  private String stringify(long txId, long checksum)\n+  {\n+    return \"txId:\" + txId + \", checksum:\" + checksum;\n+  }\n }\n",
            "diff_size": 60
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "74",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 238).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2636/BranchDetectingTxVerifier.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2636/BranchDetectingTxVerifier.java\nindex 72b2619173b..83344a12c95 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2636/BranchDetectingTxVerifier.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2636/BranchDetectingTxVerifier.java\n@@ -71,15 +71,12 @@ public class BranchDetectingTxVerifier implements TxChecksumVerifier\n \n         if ( checksum != readChecksum )\n         {\n-            throw new BranchedDataException(\n-                    \"The cluster contains two logically different versions of the database. \" +\n-                            \"This will be automatically resolved. Details: \" + stringify( txId, checksum ) +\n-                            \" does not match \" + readChecksum );\n-        }\n+            throw new BranchedDataException( \"The cluster contains two logically different versions of the database. \" + \"This will be automatically resolved. Details: \" + stringify( txId, checksum ) + \" does not match \" + readChecksum );\n+    }\n     }\n \n     private String stringify( long txId, long checksum )\n     {\n         return \"txId:\" + txId + \", checksum:\" + checksum;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
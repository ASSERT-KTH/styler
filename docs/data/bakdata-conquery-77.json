{
    "project_name": "bakdata-conquery",
    "error_id": "77",
    "information": {
        "errors": [
            {
                "line": "46",
                "severity": "warning",
                "message": "trailing whitespaces",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
            }
        ]
    },
    "source_code": "\t\t\t\tClass<?> superclass = node.getSuperclass();\n\t\t\t\tList<Class<?>> interfaces = Arrays.asList(node.getInterfaces());\n\t\t\t\treturn superclass == null \n\t\t\t\t\t? interfaces\n\t\t\t\t\t: Iterables.concat(interfaces, Collections.singleton(superclass));\n\t\t\t}",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/77/CPSTypeIdResolver.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler/77/CPSTypeIdResolver.java\nindex 457bf63b5c8..41d56af35a6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/77/CPSTypeIdResolver.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler/77/CPSTypeIdResolver.java\n@@ -43,7 +43,7 @@ public class CPSTypeIdResolver implements TypeIdResolver {\n \t\t\t(SuccessorsFunction<Class<?>>) node -> {\n \t\t\t\tClass<?> superclass = node.getSuperclass();\n \t\t\t\tList<Class<?>> interfaces = Arrays.asList(node.getInterfaces());\n-\t\t\t\treturn superclass == null \n+\t\t\t\treturn superclass == null\n \t\t\t\t\t? interfaces\n \t\t\t\t\t: Iterables.concat(interfaces, Collections.singleton(superclass));\n \t\t\t}\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "29",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "31",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "33",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "34",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "36",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "37",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "38",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "39",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "41",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "42",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "43",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "44",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "45",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "46",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "47",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "48",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "49",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "50",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "52",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "54",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "55",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "56",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "57",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "59",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "60",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "62",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "63",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "64",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "66",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "67",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "68",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "69",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "70",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "71",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "72",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "73",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "74",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "75",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "76",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "77",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "79",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "80",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "81",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "82",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "84",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "85",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "86",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "87",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "88",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "90",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "91",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "92",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "93",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "94",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "95",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "96",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "97",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "99",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "100",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "101",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "103",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "104",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "105",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "106",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "107",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "108",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "108",
                    "column": "13",
                    "severity": "warning",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "109",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "110",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "111",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "112",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "113",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "114",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "116",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "117",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "119",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "120",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "121",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "122",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "123",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "124",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "124",
                    "column": "9",
                    "severity": "warning",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "125",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "126",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "127",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "129",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "130",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "131",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "132",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "133",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "134",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "134",
                    "column": "9",
                    "severity": "warning",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "135",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "136",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "137",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "139",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "140",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "141",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "142",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "143",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "144",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "145",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "146",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "147",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "148",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "149",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "150",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "152",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "153",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "154",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "155",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "156",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "157",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "158",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "159",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "160",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "160",
                    "column": "13",
                    "severity": "warning",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "161",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "162",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "163",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "163",
                    "column": "9",
                    "severity": "warning",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "164",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "165",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "166",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "168",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "169",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "170",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "171",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "173",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "174",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "175",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "176",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "178",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "179",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "180",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "181",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "183",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "184",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "185",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "186",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/77/CPSTypeIdResolver.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/intellij/77/CPSTypeIdResolver.java\nindex 457bf63b5c8..a65a4a9cbe1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/77/CPSTypeIdResolver.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/intellij/77/CPSTypeIdResolver.java\n@@ -26,165 +26,162 @@ import org.apache.commons.lang3.tuple.Pair;\n @Slf4j\n public class CPSTypeIdResolver implements TypeIdResolver {\n \n-\tprivate static HashMap<Class<?>, CPSMap> globalMap;\n-\n-\tpublic static final ScanResult SCAN_RESULT;\n-\t\n-\tprivate JavaType baseType;\n-\tprivate CPSMap cpsMap;\n-\n-\t@Override\n-\tpublic void init(JavaType baseType) {\n-\t\tthis.baseType = baseType;\n-\t\tthis.cpsMap = new CPSMap();\n-\t\t\n-\t\t//this creates an aggregate map of all the children\n-\t\tIterable<Class<?>> types = Traverser.forGraph(\n-\t\t\t(SuccessorsFunction<Class<?>>) node -> {\n-\t\t\t\tClass<?> superclass = node.getSuperclass();\n-\t\t\t\tList<Class<?>> interfaces = Arrays.asList(node.getInterfaces());\n-\t\t\t\treturn superclass == null \n-\t\t\t\t\t? interfaces\n-\t\t\t\t\t: Iterables.concat(interfaces, Collections.singleton(superclass));\n-\t\t\t}\n-\t\t).breadthFirst(baseType.getRawClass());\n-\t\t\n-\t\tfor(Class<?> type : types) {\n-\t\t\tCPSMap local = globalMap.get(type);\n-\t\t\tif(local != null) {\n-\t\t\t\tcpsMap.merge(local);\n-\t\t\t}\n-\t\t}\n-\n-\t\tcpsMap.calculateInverse();\n-\t}\n-\n-\tstatic {\n-\t\tlog.info(\"Scanning Classpath\");\n-\t\t//scan classpaths for annotated child classes\n-\t\t\n-\t\tSCAN_RESULT = new ClassGraph()\n-\t\t\t.enableClassInfo()\n-\t\t\t.enableAnnotationInfo()\n-\t\t\t//blacklist some packages that contain large libraries\n-\t\t\t.blacklistPackages(\n-\t\t\t\t\"groovy\",\n-\t\t\t\t\"org.codehaus.groovy\",\n-\t\t\t\t\"org.apache\",\n-\t\t\t\t\"org.eclipse\",\n-\t\t\t\t\"com.google\"\n-\t\t\t)\n-\t\t\t.scan();\n-\t\t\n-\t\tlog.info(\"Scanned: {} classes in classpath\", SCAN_RESULT.getAllClasses().size());\n-\t\tSet<Class<?>> types = new HashSet<>();\n-\t\ttypes.addAll(SCAN_RESULT.getClassesWithAnnotation(CPSTypes.class.getName()).loadClasses());\n-\t\ttypes.addAll(SCAN_RESULT.getClassesWithAnnotation(CPSType.class.getName()).loadClasses());\n-\t\t\n-\t\tglobalMap = new HashMap<>();\n-\t\tfor(Class<?> type:types) {\n-\t\t\tCPSType[] annos = type.getAnnotationsByType(CPSType.class);\n-\t\t\tfor(CPSType anno:annos) {\n-\t\t\t\tCPSMap map = globalMap.computeIfAbsent(anno.base(), b->new CPSMap());\n-\t\t\t\t\n-\t\t\t\t//check if base is marked as base\n-\t\t\t\tCPSBase baseAnno = anno.base().getAnnotation(CPSBase.class);\n-\t\t\t\tif(baseAnno==null) {\n-\t\t\t\t\tthrow new IllegalStateException(\"The class \"+anno.base()+\" is used as a CPSBase in \"+type+\" but not annotated as such.\");\n-\t\t\t\t}\n-\t\t\t\tif(!anno.base().isAssignableFrom(type)) {\n-\t\t\t\t\tthrow new IllegalStateException(\"The class \"+anno.base()+\" is used as a CPSBase in \"+type+\" but type is no subclass of it.\");\n-\t\t\t\t}\n-\t\t\t\t\n-\t\t\t\tmap.add(anno.id(), type);\n-\t\t\t}\n-\t\t}\n-\t\t\n-\t\tList<Class<?>> bases = SCAN_RESULT.getClassesWithAnnotation(CPSBase.class.getName()).loadClasses();\n-\t\tfor(Class<?> b:bases) {\n-\t\t\tCPSMap map = globalMap.get(b);\n-\t\t\tif(map==null) {\n-\t\t\t\tlog.warn(\"\\tBase Class {}:\\tNo registered types\", b);\n-\t\t\t}\n-\t\t\telse {\n-\t\t\t\tlog.info(\"\\tBase Class {}\", b.getSimpleName());\n-\t\t\t\tmap.calculateInverse();\n-\t\t\t\tfor(Entry<Class<?>, String> e:map) {\n-\t\t\t\t\tlog.info(\"\\t\\t{}\\t->\\t{}\", e.getValue(), e.getKey().getSimpleName());\n-\t\t\t\t}\n-\t\t\t}\n-\t\t\t\n-\t\t}\n-\t}\n-\n-\t@Override\n-\tpublic JavaType typeFromId(DatabindContext context, String id) {\n-\t\tClass<?> result = cpsMap.getClassFromId(id);\n-\t\tif(result == null) {\n-\t\t\tthrow new IllegalStateException(\"There is no type \"+id+\" for \"+baseType.getTypeName()+\". Try: \"+getDescForKnownTypeIds());\n-\t\t}\n-\t\telse {\n-\t\t\treturn TypeFactory.defaultInstance().constructSpecializedType(baseType, result);\n-\t\t}\n-\t}\n-\t\n-\tpublic static <T> Set<Class<? extends T>> listImplementations(Class<T> base) {\n-\t\tCPSMap map = globalMap.get(base);\n-\t\tif(map == null) {\n-\t\t\tlog.warn(\"No implementations for {}\", base);\n-\t\t\treturn Collections.emptySet();\n-\t\t}\n-\t\telse {\n-\t\t\treturn (Set<Class<? extends T>>)(Set)map.getClasses();\n-\t\t}\n-\t}\n-\t\n-\tpublic static Set<Pair<Class<?>, Class<?>>> listImplementations() {\n-\t\treturn globalMap\n-\t\t\t\t.entrySet()\n-\t\t\t\t.stream()\n-\t\t\t\t.<Pair<Class<?>, Class<?>>>flatMap(e->\n-\t\t\t\t\te.getValue()\n-\t\t\t\t\t\t.getClasses()\n-\t\t\t\t\t\t.stream()\n-\t\t\t\t\t\t.map(v->Pair.of(e.getKey(), v))\n-\t\t\t\t)\n-\t\t\t\t.collect(Collectors.toSet());\n-\t}\n-\n-\t@Override\n-\tpublic String idFromValueAndType(Object value, Class<?> suggestedType) {\n-\t\tString result = cpsMap.getTypeIdForClass(suggestedType);\n-\t\tif(result == null) {\n-\t\t\t//check if other base\n-\t\t\tCPSType anno = value.getClass().getAnnotation(CPSType.class);\n-\t\t\tif(anno == null)\n-\t\t\t\tthrow new IllegalStateException(\"There is no id for the class \"+suggestedType+\" for \"+baseType.getTypeName()+\".\");\n-\t\t\telse\n-\t\t\t\treturn anno.id();\n-\t\t}\n-\t\telse {\n-\t\t\treturn result;\n-\t\t}\n-\t}\n-\t\n-\t@Override\n-\tpublic String getDescForKnownTypeIds() {\n-\t\treturn new TreeSet<>(cpsMap.getTypeIds()).toString();\n-\t}\n-\t\n-\t@Override\n-\tpublic String idFromValue(Object value) {\n-\t\treturn idFromValueAndType(value, value.getClass());\n-\t}\n-\n-\t@Override\n-\tpublic String idFromBaseType() {\n-\t\treturn \"DEFAULT\";\n-\t}\n-\n-\t@Override\n-\tpublic Id getMechanism() {\n-\t\treturn Id.CUSTOM;\n-\t}\n+    private static HashMap<Class<?>, CPSMap> globalMap;\n+\n+    public static final ScanResult SCAN_RESULT;\n+\n+    private JavaType baseType;\n+    private CPSMap cpsMap;\n+\n+    @Override\n+    public void init(JavaType baseType) {\n+        this.baseType = baseType;\n+        this.cpsMap = new CPSMap();\n+\n+        //this creates an aggregate map of all the children\n+        Iterable<Class<?>> types = Traverser.forGraph(\n+            (SuccessorsFunction<Class<?>>) node -> {\n+                Class<?> superclass = node.getSuperclass();\n+                List<Class<?>> interfaces = Arrays.asList(node.getInterfaces());\n+                return superclass == null\n+                    ? interfaces\n+                    : Iterables.concat(interfaces, Collections.singleton(superclass));\n+            }\n+        ).breadthFirst(baseType.getRawClass());\n+\n+        for (Class<?> type : types) {\n+            CPSMap local = globalMap.get(type);\n+            if (local != null) {\n+                cpsMap.merge(local);\n+            }\n+        }\n+\n+        cpsMap.calculateInverse();\n+    }\n+\n+    static {\n+        log.info(\"Scanning Classpath\");\n+        //scan classpaths for annotated child classes\n+\n+        SCAN_RESULT = new ClassGraph()\n+            .enableClassInfo()\n+            .enableAnnotationInfo()\n+            //blacklist some packages that contain large libraries\n+            .blacklistPackages(\n+                \"groovy\",\n+                \"org.codehaus.groovy\",\n+                \"org.apache\",\n+                \"org.eclipse\",\n+                \"com.google\"\n+            )\n+            .scan();\n+\n+        log.info(\"Scanned: {} classes in classpath\", SCAN_RESULT.getAllClasses().size());\n+        Set<Class<?>> types = new HashSet<>();\n+        types.addAll(SCAN_RESULT.getClassesWithAnnotation(CPSTypes.class.getName()).loadClasses());\n+        types.addAll(SCAN_RESULT.getClassesWithAnnotation(CPSType.class.getName()).loadClasses());\n+\n+        globalMap = new HashMap<>();\n+        for (Class<?> type : types) {\n+            CPSType[] annos = type.getAnnotationsByType(CPSType.class);\n+            for (CPSType anno : annos) {\n+                CPSMap map = globalMap.computeIfAbsent(anno.base(), b -> new CPSMap());\n+\n+                //check if base is marked as base\n+                CPSBase baseAnno = anno.base().getAnnotation(CPSBase.class);\n+                if (baseAnno == null) {\n+                    throw new IllegalStateException(\"The class \" + anno.base() + \" is used as a CPSBase in \" + type + \" but not annotated as such.\");\n+                }\n+                if (!anno.base().isAssignableFrom(type)) {\n+                    throw new IllegalStateException(\"The class \" + anno.base() + \" is used as a CPSBase in \" + type + \" but type is no subclass of it.\");\n+                }\n+\n+                map.add(anno.id(), type);\n+            }\n+        }\n+\n+        List<Class<?>> bases = SCAN_RESULT.getClassesWithAnnotation(CPSBase.class.getName()).loadClasses();\n+        for (Class<?> b : bases) {\n+            CPSMap map = globalMap.get(b);\n+            if (map == null) {\n+                log.warn(\"\\tBase Class {}:\\tNo registered types\", b);\n+            } else {\n+                log.info(\"\\tBase Class {}\", b.getSimpleName());\n+                map.calculateInverse();\n+                for (Entry<Class<?>, String> e : map) {\n+                    log.info(\"\\t\\t{}\\t->\\t{}\", e.getValue(), e.getKey().getSimpleName());\n+                }\n+            }\n+\n+        }\n+    }\n+\n+    @Override\n+    public JavaType typeFromId(DatabindContext context, String id) {\n+        Class<?> result = cpsMap.getClassFromId(id);\n+        if (result == null) {\n+            throw new IllegalStateException(\"There is no type \" + id + \" for \" + baseType.getTypeName() + \". Try: \" + getDescForKnownTypeIds());\n+        } else {\n+            return TypeFactory.defaultInstance().constructSpecializedType(baseType, result);\n+        }\n+    }\n+\n+    public static <T> Set<Class<? extends T>> listImplementations(Class<T> base) {\n+        CPSMap map = globalMap.get(base);\n+        if (map == null) {\n+            log.warn(\"No implementations for {}\", base);\n+            return Collections.emptySet();\n+        } else {\n+            return (Set<Class<? extends T>>) (Set) map.getClasses();\n+        }\n+    }\n+\n+    public static Set<Pair<Class<?>, Class<?>>> listImplementations() {\n+        return globalMap\n+            .entrySet()\n+            .stream()\n+            .<Pair<Class<?>, Class<?>>>flatMap(e ->\n+                e.getValue()\n+                    .getClasses()\n+                    .stream()\n+                    .map(v -> Pair.of(e.getKey(), v))\n+            )\n+            .collect(Collectors.toSet());\n+    }\n+\n+    @Override\n+    public String idFromValueAndType(Object value, Class<?> suggestedType) {\n+        String result = cpsMap.getTypeIdForClass(suggestedType);\n+        if (result == null) {\n+            //check if other base\n+            CPSType anno = value.getClass().getAnnotation(CPSType.class);\n+            if (anno == null) {\n+                throw new IllegalStateException(\"There is no id for the class \" + suggestedType + \" for \" + baseType.getTypeName() + \".\");\n+            } else {\n+                return anno.id();\n+            }\n+        } else {\n+            return result;\n+        }\n+    }\n+\n+    @Override\n+    public String getDescForKnownTypeIds() {\n+        return new TreeSet<>(cpsMap.getTypeIds()).toString();\n+    }\n+\n+    @Override\n+    public String idFromValue(Object value) {\n+        return idFromValueAndType(value, value.getClass());\n+    }\n+\n+    @Override\n+    public String idFromBaseType() {\n+        return \"DEFAULT\";\n+    }\n+\n+    @Override\n+    public Id getMechanism() {\n+        return Id.CUSTOM;\n+    }\n }\n\\ No newline at end of file\n",
            "diff_size": 161
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/77/CPSTypeIdResolver.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler_random/77/CPSTypeIdResolver.java\nindex 457bf63b5c8..41d56af35a6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/77/CPSTypeIdResolver.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler_random/77/CPSTypeIdResolver.java\n@@ -43,7 +43,7 @@ public class CPSTypeIdResolver implements TypeIdResolver {\n \t\t\t(SuccessorsFunction<Class<?>>) node -> {\n \t\t\t\tClass<?> superclass = node.getSuperclass();\n \t\t\t\tList<Class<?>> interfaces = Arrays.asList(node.getInterfaces());\n-\t\t\t\treturn superclass == null \n+\t\t\t\treturn superclass == null\n \t\t\t\t\t? interfaces\n \t\t\t\t\t: Iterables.concat(interfaces, Collections.singleton(superclass));\n \t\t\t}\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/77/CPSTypeIdResolver.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler_three_grams/77/CPSTypeIdResolver.java\nindex 457bf63b5c8..41d56af35a6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/77/CPSTypeIdResolver.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler_three_grams/77/CPSTypeIdResolver.java\n@@ -43,7 +43,7 @@ public class CPSTypeIdResolver implements TypeIdResolver {\n \t\t\t(SuccessorsFunction<Class<?>>) node -> {\n \t\t\t\tClass<?> superclass = node.getSuperclass();\n \t\t\t\tList<Class<?>> interfaces = Arrays.asList(node.getInterfaces());\n-\t\t\t\treturn superclass == null \n+\t\t\t\treturn superclass == null\n \t\t\t\t\t? interfaces\n \t\t\t\t\t: Iterables.concat(interfaces, Collections.singleton(superclass));\n \t\t\t}\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "intellij",
        "naturalize",
        "codebuff"
    ]
}
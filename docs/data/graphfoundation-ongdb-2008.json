{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2008",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "31",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "31",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "36",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "36",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2008/MoveAfterCopy.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2008/MoveAfterCopy.java\nindex 938a30daa0f..1511a15c7b6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2008/MoveAfterCopy.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2008/MoveAfterCopy.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.com.storecopy;\n \n import java.io.File;\n@@ -27,18 +28,18 @@ import java.util.stream.Stream;\n @FunctionalInterface\n public interface MoveAfterCopy\n {\n-    void move( Stream<FileMoveAction> moves, File fromDirectory, Function<File, File> destinationFunction ) throws\n-            Exception;\n+  void move(Stream<FileMoveAction> moves, File fromDirectory, Function<File, File> destinationFunction) throws\n+      Exception;\n \n-    static MoveAfterCopy moveReplaceExisting()\n+  static MoveAfterCopy moveReplaceExisting()\n+  {\n+    return (moves, fromDirectory, destinationFunction) ->\n     {\n-        return ( moves, fromDirectory, destinationFunction ) ->\n-        {\n-            Iterable<FileMoveAction> itr = moves::iterator;\n-            for ( FileMoveAction move : itr )\n-            {\n-                move.move( destinationFunction.apply( move.file() ), StandardCopyOption.REPLACE_EXISTING );\n-            }\n-        };\n-    }\n+      Iterable<FileMoveAction> itr = moves::iterator;\n+      for (FileMoveAction move : itr)\n+      {\n+        move.move(destinationFunction.apply(move.file()), StandardCopyOption.REPLACE_EXISTING);\n+      }\n+    };\n+  }\n }\n",
            "diff_size": 15
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "30",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 167).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2008/MoveAfterCopy.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2008/MoveAfterCopy.java\nindex 938a30daa0f..b7456921e50 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2008/MoveAfterCopy.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2008/MoveAfterCopy.java\n@@ -27,10 +27,7 @@ import java.util.stream.Stream;\n @FunctionalInterface\n public interface MoveAfterCopy\n {\n-    void move( Stream<FileMoveAction> moves, File fromDirectory, Function<File, File> destinationFunction ) throws\n-            Exception;\n-\n-    static MoveAfterCopy moveReplaceExisting()\n+    void move( Stream<FileMoveAction> moves, File fromDirectory, Function<File,File> destinationFunction ) throws Exception; static MoveAfterCopy moveReplaceExisting()\n     {\n         return ( moves, fromDirectory, destinationFunction ) ->\n         {\n@@ -41,4 +38,4 @@ public interface MoveAfterCopy\n             }\n         };\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "26",
                    "severity": "error",
                    "message": "Annotation 'FunctionalInterface' should be alone on line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationLocationCheck"
                },
                {
                    "line": "34",
                    "column": "20",
                    "severity": "error",
                    "message": "'for' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "34",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2008/MoveAfterCopy.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/2008/MoveAfterCopy.java\nindex 938a30daa0f..ed14592e214 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2008/MoveAfterCopy.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/2008/MoveAfterCopy.java\n@@ -23,22 +23,19 @@ import java.io.File;\n import java.nio.file.StandardCopyOption;\n import java.util.function.Function;\n import java.util.stream.Stream;\n-\n-@FunctionalInterface\n-public interface MoveAfterCopy\n+@FunctionalInterface public interface MoveAfterCopy\n {\n-    void move( Stream<FileMoveAction> moves, File fromDirectory, Function<File, File> destinationFunction ) throws\n-            Exception;\n-\n+    void move( Stream<FileMoveAction> moves, File fromDirectory, Function<File,File> destinationFunction ) throws Exception ;\n     static MoveAfterCopy moveReplaceExisting()\n     {\n         return ( moves, fromDirectory, destinationFunction ) ->\n-        {\n-            Iterable<FileMoveAction> itr = moves::iterator;\n-            for ( FileMoveAction move : itr )\n-            {\n-                move.move( destinationFunction.apply( move.file() ), StandardCopyOption.REPLACE_EXISTING );\n-            }\n-        };\n+               {\n+                   Iterable<FileMoveAction> itr = moves::iterator;\n+                   for( FileMoveAction move : itr)\n+                   {\n+                       move.move( destinationFunction.apply( move.file() ), StandardCopyOption.REPLACE_EXISTING );\n+                   }\n+               };\n     }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 15
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
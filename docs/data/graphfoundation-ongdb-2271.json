{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2271",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "65",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "61",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "114",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "100",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "15",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "130",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "185",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "185",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "187",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "187",
                    "column": "16",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "195",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "195",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "195",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "197",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "197",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "210",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "210",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "220",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "220",
                    "column": "16",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "225",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "225",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "225",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "227",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "227",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "231",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "231",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "233",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "233",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "245",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "245",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "250",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "250",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "254",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "254",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "257",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "257",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "265",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "265",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "268",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "268",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "285",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "285",
                    "column": "115",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "288",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "288",
                    "column": "19",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "290",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "290",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "292",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "292",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "294",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "294",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "296",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "296",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "298",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "298",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "300",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "300",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "308",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "308",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "308",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "310",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "310",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "314",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "314",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "319",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "319",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "319",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "323",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "323",
                    "column": "133",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "335",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "335",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2271/IdContainer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2271/IdContainer.java\nindex 1b61dd6bbde..51b9f323570 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2271/IdContainer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2271/IdContainer.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.store.id;\n \n import java.io.File;\n@@ -35,312 +36,306 @@ import org.neo4j.kernel.impl.store.UnderlyingStorageException;\n  * This class handles the persisting of a highest id in use. A sticky byte is present in the header to indicate\n  * whether the file was closed properly. It also handel delegation of reusable ids to the {@link FreeIdKeeper}\n  * class.\n- *\n+ * <p>\n  * This class is <b>not thread-safe</b> and synchronization need to be handed by the caller.\n  */\n public class IdContainer\n {\n-    public static final long NO_RESULT = -1;\n-\n-    // header format: sticky(byte), nextFreeId(long)\n-    static final int HEADER_SIZE = Byte.BYTES + Long.BYTES;\n-\n-    // if sticky the id generator wasn't closed properly so it has to be\n-    // rebuilt (go through the node, relationship, property, rel type etc files)\n-    private static final byte CLEAN_GENERATOR = (byte) 0;\n-    private static final byte STICKY_GENERATOR = (byte) 1;\n+  public static final long NO_RESULT = -1;\n \n-    private final File file;\n-    private final FileSystemAbstraction fs;\n-    private StoreChannel fileChannel;\n-    private boolean closed = true;\n+  // header format: sticky(byte), nextFreeId(long)\n+  static final int HEADER_SIZE = Byte.BYTES + Long.BYTES;\n \n-    private final int grabSize;\n-    private final boolean aggressiveReuse;\n-    private FreeIdKeeper freeIdKeeper;\n+  // if sticky the id generator wasn't closed properly so it has to be\n+  // rebuilt (go through the node, relationship, property, rel type etc files)\n+  private static final byte CLEAN_GENERATOR = (byte) 0;\n+  private static final byte STICKY_GENERATOR = (byte) 1;\n \n-    private long initialHighId;\n+  private final File file;\n+  private final FileSystemAbstraction fs;\n+  private StoreChannel fileChannel;\n+  private boolean closed = true;\n \n-    public IdContainer( FileSystemAbstraction fs, File file, int grabSize, boolean aggressiveReuse )\n-    {\n-        if ( grabSize < 1 )\n-        {\n-            throw new IllegalArgumentException( \"Illegal grabSize: \" + grabSize );\n-        }\n-\n-        this.file = file;\n-        this.fs = fs;\n-        this.grabSize = grabSize;\n-        this.aggressiveReuse = aggressiveReuse;\n-    }\n+  private final int grabSize;\n+  private final boolean aggressiveReuse;\n+  private FreeIdKeeper freeIdKeeper;\n \n-    /**\n-     * Initializes the id generator and performs a simple validation. Returns true if the initialization restored\n-     * properly on disk state, false otherwise (such as creating an id file from scratch).\n-     * Will throw {@link InvalidIdGeneratorException} if the id file is found to be damaged or unclean.\n-     */\n-    public boolean init()\n-    {\n-        boolean result = true;\n-        try\n-        {\n-            if ( !fs.fileExists( file ) )\n-            {\n-                createEmptyIdFile( fs, file, 0, false );\n-                result = false;\n-            }\n-\n-            fileChannel = fs.open( file, OpenMode.READ_WRITE );\n-            initialHighId = readAndValidateHeader();\n-            markAsSticky();\n-\n-            this.freeIdKeeper = new FreeIdKeeper( new OffsetChannel( fileChannel, HEADER_SIZE ), grabSize, aggressiveReuse );\n-            closed = false;\n-        }\n-        catch ( IOException e )\n-        {\n-            throw new UnderlyingStorageException( \"Unable to init id file \" + file, e );\n-        }\n-        return result;\n-    }\n+  private long initialHighId;\n \n-    public boolean isClosed()\n+  public IdContainer(FileSystemAbstraction fs, File file, int grabSize, boolean aggressiveReuse)\n+  {\n+    if (grabSize < 1)\n     {\n-        return closed;\n+      throw new IllegalArgumentException(\"Illegal grabSize: \" + grabSize);\n     }\n \n-    long getInitialHighId()\n+    this.file = file;\n+    this.fs = fs;\n+    this.grabSize = grabSize;\n+    this.aggressiveReuse = aggressiveReuse;\n+  }\n+\n+  /**\n+   * Initializes the id generator and performs a simple validation. Returns true if the initialization restored\n+   * properly on disk state, false otherwise (such as creating an id file from scratch).\n+   * Will throw {@link InvalidIdGeneratorException} if the id file is found to be damaged or unclean.\n+   */\n+  public boolean init()\n+  {\n+    boolean result = true;\n+    try\n     {\n-        return initialHighId;\n-    }\n-\n-    void assertStillOpen()\n-    {\n-        if ( closed )\n-        {\n-            throw new IllegalStateException( \"Closed id file \" + file );\n-        }\n-    }\n-\n-    private long readAndValidateHeader() throws IOException\n-    {\n-        try\n-        {\n-            return readAndValidate( fileChannel, file );\n-        }\n-        catch ( InvalidIdGeneratorException e )\n-        {\n-            fileChannel.close();\n-            throw e;\n-        }\n-    }\n-\n-    private static long readAndValidate( StoreChannel channel, File fileName ) throws IOException\n+      if (!fs.fileExists(file))\n+      {\n+        createEmptyIdFile(fs, file, 0, false);\n+        result = false;\n+      }\n+\n+      fileChannel = fs.open(file, OpenMode.READ_WRITE);\n+      initialHighId = readAndValidateHeader();\n+      markAsSticky();\n+\n+      this.freeIdKeeper = new FreeIdKeeper(new OffsetChannel(fileChannel, HEADER_SIZE), grabSize, aggressiveReuse);\n+      closed = false;\n+    } catch (IOException e)\n     {\n-        ByteBuffer buffer = ByteBuffer.allocate( HEADER_SIZE );\n-        readHeader( channel, buffer );\n-        buffer.flip();\n-        byte storageStatus = buffer.get();\n-        if ( storageStatus != CLEAN_GENERATOR )\n-        {\n-            throw new InvalidIdGeneratorException( \"Id file not properly shutdown [ \" +\n-                    fileName + \" ], delete this id file and build a new one\" );\n-        }\n-        return buffer.getLong();\n+      throw new UnderlyingStorageException(\"Unable to init id file \" + file, e);\n     }\n-\n-    static long readHighId( FileSystemAbstraction fileSystem, File file ) throws IOException\n+    return result;\n+  }\n+\n+  public boolean isClosed()\n+  {\n+    return closed;\n+  }\n+\n+  long getInitialHighId()\n+  {\n+    return initialHighId;\n+  }\n+\n+  void assertStillOpen()\n+  {\n+    if (closed)\n     {\n-        try ( StoreChannel channel = fileSystem.open( file, OpenMode.READ ) )\n-        {\n-            return readAndValidate( channel, file );\n-        }\n+      throw new IllegalStateException(\"Closed id file \" + file);\n     }\n+  }\n \n-    static long readDefragCount( FileSystemAbstraction fileSystem, File file ) throws IOException\n+  private long readAndValidateHeader() throws IOException\n+  {\n+    try\n     {\n-        try ( StoreChannel channel = fileSystem.open( file, OpenMode.READ ) )\n-        {\n-            return FreeIdKeeper.countFreeIds( new OffsetChannel( channel, HEADER_SIZE ) );\n-        }\n-    }\n-\n-    private void markAsSticky() throws IOException\n+      return readAndValidate(fileChannel, file);\n+    } catch (InvalidIdGeneratorException e)\n     {\n-        ByteBuffer buffer = ByteBuffer.allocate( Byte.BYTES );\n-        buffer.put( STICKY_GENERATOR ).flip();\n-        fileChannel.position( 0 );\n-        fileChannel.writeAll( buffer );\n-        fileChannel.force( false );\n+      fileChannel.close();\n+      throw e;\n     }\n-\n-    private void markAsCleanlyClosed(  ) throws IOException\n+  }\n+\n+  private static long readAndValidate(StoreChannel channel, File fileName) throws IOException\n+  {\n+    ByteBuffer buffer = ByteBuffer.allocate(HEADER_SIZE);\n+    readHeader(channel, buffer);\n+    buffer.flip();\n+    byte storageStatus = buffer.get();\n+    if (storageStatus != CLEAN_GENERATOR)\n     {\n-        // remove sticky\n-        ByteBuffer buffer = ByteBuffer.allocate( Byte.BYTES );\n-        buffer.put( CLEAN_GENERATOR ).flip();\n-        fileChannel.position( 0 );\n-        fileChannel.writeAll( buffer );\n+      throw new InvalidIdGeneratorException(\"Id file not properly shutdown [ \" +\n+          fileName + \" ], delete this id file and build a new one\");\n     }\n+    return buffer.getLong();\n+  }\n \n-    public void close( long highId )\n+  static long readHighId(FileSystemAbstraction fileSystem, File file) throws IOException\n+  {\n+    try (StoreChannel channel = fileSystem.open(file, OpenMode.READ))\n     {\n-        if ( !closed )\n-        {\n-            try\n-            {\n-                freeIdKeeper.close();\n-                writeHeader( highId );\n-                markAsCleanlyClosed();\n-                closeChannel();\n-            }\n-            catch ( IOException e )\n-            {\n-                throw new UnderlyingStorageException( \"Unable to close id file \" + file, e );\n-            }\n-        }\n+      return readAndValidate(channel, file);\n     }\n+  }\n \n-    private void closeChannel() throws IOException\n+  static long readDefragCount(FileSystemAbstraction fileSystem, File file) throws IOException\n+  {\n+    try (StoreChannel channel = fileSystem.open(file, OpenMode.READ))\n     {\n-        fileChannel.force( false );\n-        fileChannel.close();\n-        fileChannel = null;\n-        closed = true;\n+      return FreeIdKeeper.countFreeIds(new OffsetChannel(channel, HEADER_SIZE));\n     }\n-\n-    private void writeHeader( long highId ) throws IOException\n+  }\n+\n+  private void markAsSticky() throws IOException\n+  {\n+    ByteBuffer buffer = ByteBuffer.allocate(Byte.BYTES);\n+    buffer.put(STICKY_GENERATOR).flip();\n+    fileChannel.position(0);\n+    fileChannel.writeAll(buffer);\n+    fileChannel.force(false);\n+  }\n+\n+  private void markAsCleanlyClosed() throws IOException\n+  {\n+    // remove sticky\n+    ByteBuffer buffer = ByteBuffer.allocate(Byte.BYTES);\n+    buffer.put(CLEAN_GENERATOR).flip();\n+    fileChannel.position(0);\n+    fileChannel.writeAll(buffer);\n+  }\n+\n+  public void close(long highId)\n+  {\n+    if (!closed)\n     {\n-        ByteBuffer buffer = ByteBuffer.allocate( HEADER_SIZE );\n-        buffer.put( STICKY_GENERATOR ).putLong( highId ).flip();\n-        fileChannel.position( 0 );\n-        fileChannel.writeAll( buffer );\n+      try\n+      {\n+        freeIdKeeper.close();\n+        writeHeader(highId);\n+        markAsCleanlyClosed();\n+        closeChannel();\n+      } catch (IOException e)\n+      {\n+        throw new UnderlyingStorageException(\"Unable to close id file \" + file, e);\n+      }\n     }\n-\n-    public void delete()\n+  }\n+\n+  private void closeChannel() throws IOException\n+  {\n+    fileChannel.force(false);\n+    fileChannel.close();\n+    fileChannel = null;\n+    closed = true;\n+  }\n+\n+  private void writeHeader(long highId) throws IOException\n+  {\n+    ByteBuffer buffer = ByteBuffer.allocate(HEADER_SIZE);\n+    buffer.put(STICKY_GENERATOR).putLong(highId).flip();\n+    fileChannel.position(0);\n+    fileChannel.writeAll(buffer);\n+  }\n+\n+  public void delete()\n+  {\n+    if (!closed)\n     {\n-        if ( !closed )\n-        {\n-            try\n-            {\n-                closeChannel();\n-            }\n-            catch ( IOException e )\n-            {\n-                throw new UnderlyingStorageException( \"Unable to close id file \" + file, e );\n-            }\n-        }\n-\n-        if ( !fs.deleteFile( file ) )\n-        {\n-            throw new UnderlyingStorageException( \"Unable to delete id file \" + file );\n-        }\n+      try\n+      {\n+        closeChannel();\n+      } catch (IOException e)\n+      {\n+        throw new UnderlyingStorageException(\"Unable to close id file \" + file, e);\n+      }\n     }\n \n-    /**\n-     * @return next free id or {@link IdContainer#NO_RESULT} if not available\n-     */\n-    public long getReusableId()\n+    if (!fs.deleteFile(file))\n     {\n-        return freeIdKeeper.getId();\n+      throw new UnderlyingStorageException(\"Unable to delete id file \" + file);\n     }\n-\n-    public long[] getReusableIds( int numberOfIds )\n+  }\n+\n+  /**\n+   * @return next free id or {@link IdContainer#NO_RESULT} if not available\n+   */\n+  public long getReusableId()\n+  {\n+    return freeIdKeeper.getId();\n+  }\n+\n+  public long[] getReusableIds(int numberOfIds)\n+  {\n+    return freeIdKeeper.getIds(numberOfIds);\n+  }\n+\n+  public IdRange getReusableIdBatch(int maxSize)\n+  {\n+    long[] tmpIdArr = new long[maxSize];\n+    int count = 0;\n+    while (count < maxSize)\n     {\n-        return freeIdKeeper.getIds( numberOfIds );\n+      long id = freeIdKeeper.getId();\n+      if (id == NO_RESULT)\n+      {\n+        break;\n+      }\n+      tmpIdArr[count++] = id;\n     }\n \n-    public IdRange getReusableIdBatch( int maxSize )\n+    long[] defragIdArr = count == maxSize ? tmpIdArr : Arrays.copyOfRange(tmpIdArr, 0, count);\n+    return new IdRange(defragIdArr, 0, 0);\n+  }\n+\n+  public void freeId(long id)\n+  {\n+    freeIdKeeper.freeId(id);\n+  }\n+\n+  public long getFreeIdCount()\n+  {\n+    return freeIdKeeper.getCount();\n+  }\n+\n+  /**\n+   * Creates a new id file.\n+   *\n+   * @param file              The name of the id generator\n+   * @param throwIfFileExists if {@code true} will cause an {@link IllegalStateException} to be thrown if\n+   *                          the file already exists. if {@code false} will truncate the file writing the header in it.\n+   */\n+  public static void createEmptyIdFile(FileSystemAbstraction fs, File file, long highId, boolean throwIfFileExists)\n+  {\n+    // sanity checks\n+    if (fs == null)\n     {\n-        long[] tmpIdArr = new long[maxSize];\n-        int count = 0;\n-        while ( count < maxSize )\n-        {\n-            long id = freeIdKeeper.getId();\n-            if ( id == NO_RESULT )\n-            {\n-                break;\n-            }\n-            tmpIdArr[count++] = id;\n-        }\n-\n-        long[] defragIdArr = count == maxSize ? tmpIdArr : Arrays.copyOfRange( tmpIdArr, 0, count );\n-        return new IdRange( defragIdArr, 0, 0 );\n+      throw new IllegalArgumentException(\"Null filesystem\");\n     }\n-\n-    public void freeId( long id )\n+    if (file == null)\n     {\n-        freeIdKeeper.freeId( id );\n+      throw new IllegalArgumentException(\"Null filename\");\n     }\n-\n-    public long getFreeIdCount()\n+    if (throwIfFileExists && fs.fileExists(file))\n     {\n-        return freeIdKeeper.getCount();\n+      throw new IllegalStateException(\"Can't create id file [\" + file + \"], file already exists\");\n     }\n-\n-    /**\n-     * Creates a new id file.\n-     *\n-     * @param file The name of the id generator\n-     * @param throwIfFileExists if {@code true} will cause an {@link IllegalStateException} to be thrown if\n-     * the file already exists. if {@code false} will truncate the file writing the header in it.\n-     */\n-    public static void createEmptyIdFile( FileSystemAbstraction fs, File file, long highId, boolean throwIfFileExists )\n+    try (StoreChannel channel = fs.create(file))\n     {\n-        // sanity checks\n-        if ( fs == null )\n-        {\n-            throw new IllegalArgumentException( \"Null filesystem\" );\n-        }\n-        if ( file == null )\n-        {\n-            throw new IllegalArgumentException( \"Null filename\" );\n-        }\n-        if ( throwIfFileExists && fs.fileExists( file ) )\n-        {\n-            throw new IllegalStateException( \"Can't create id file [\" + file + \"], file already exists\" );\n-        }\n-        try ( StoreChannel channel = fs.create( file ) )\n-        {\n-            // write the header\n-            channel.truncate( 0 );\n-            ByteBuffer buffer = ByteBuffer.allocate( HEADER_SIZE );\n-            buffer.put( CLEAN_GENERATOR ).putLong( highId ).flip();\n-            channel.writeAll( buffer );\n-            channel.force( false );\n-        }\n-        catch ( IOException e )\n-        {\n-            throw new UnderlyingStorageException( \"Unable to create id file \" + file, e );\n-        }\n-    }\n-\n-    private static void readHeader( StoreChannel channel, ByteBuffer buffer ) throws IOException\n+      // write the header\n+      channel.truncate(0);\n+      ByteBuffer buffer = ByteBuffer.allocate(HEADER_SIZE);\n+      buffer.put(CLEAN_GENERATOR).putLong(highId).flip();\n+      channel.writeAll(buffer);\n+      channel.force(false);\n+    } catch (IOException e)\n     {\n-        try\n-        {\n-            channel.readAll( buffer );\n-        }\n-        catch ( IllegalStateException e )\n-        {\n-            ByteBuffer exceptionBuffer = buffer.duplicate();\n-            exceptionBuffer.flip();\n-            throw new InvalidIdGeneratorException( \"Unable to read header, bytes read: \" + Arrays.toString( getBufferBytes( exceptionBuffer ) ) );\n-        }\n+      throw new UnderlyingStorageException(\"Unable to create id file \" + file, e);\n     }\n+  }\n \n-    @Override\n-    public String toString()\n+  private static void readHeader(StoreChannel channel, ByteBuffer buffer) throws IOException\n+  {\n+    try\n     {\n-        return \"IdContainer{\" + \"file=\" + file + \", fs=\" + fs + \", fileChannel=\" + fileChannel + \", defragCount=\" +\n-                freeIdKeeper.getCount() + \", grabSize=\" + grabSize + \", aggressiveReuse=\" +\n-                aggressiveReuse + \", closed=\" + closed + '}';\n-    }\n-\n-    private static byte[] getBufferBytes( ByteBuffer buffer )\n+      channel.readAll(buffer);\n+    } catch (IllegalStateException e)\n     {\n-        byte[] bytes = new byte[buffer.limit()];\n-        buffer.get( bytes );\n-        return bytes;\n+      ByteBuffer exceptionBuffer = buffer.duplicate();\n+      exceptionBuffer.flip();\n+      throw new InvalidIdGeneratorException(\"Unable to read header, bytes read: \" + Arrays.toString(getBufferBytes(exceptionBuffer)));\n     }\n+  }\n+\n+  @Override\n+  public String toString()\n+  {\n+    return \"IdContainer{\" + \"file=\" + file + \", fs=\" + fs + \", fileChannel=\" + fileChannel + \", defragCount=\" +\n+        freeIdKeeper.getCount() + \", grabSize=\" + grabSize + \", aggressiveReuse=\" +\n+        aggressiveReuse + \", closed=\" + closed + '}';\n+  }\n+\n+  private static byte[] getBufferBytes(ByteBuffer buffer)\n+  {\n+    byte[] bytes = new byte[buffer.limit()];\n+    buffer.get(bytes);\n+    return bytes;\n+  }\n }\n",
            "diff_size": 418
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
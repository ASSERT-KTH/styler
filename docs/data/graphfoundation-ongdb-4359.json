{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4359",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "39",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4359/NodeRecordFormat.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4359/NodeRecordFormat.java\nindex a7c84fe4f06..206b1b0eab9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4359/NodeRecordFormat.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4359/NodeRecordFormat.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.store.format.standard;\n \n import java.io.IOException;\n@@ -30,79 +31,78 @@ import org.neo4j.kernel.impl.store.record.RecordLoad;\n \n public class NodeRecordFormat extends BaseOneByteHeaderRecordFormat<NodeRecord>\n {\n-    // in_use(byte)+next_rel_id(int)+next_prop_id(int)+labels(5)+extra(byte)\n-    public static final int RECORD_SIZE = 15;\n+  // in_use(byte)+next_rel_id(int)+next_prop_id(int)+labels(5)+extra(byte)\n+  public static final int RECORD_SIZE = 15;\n \n-    public NodeRecordFormat()\n-    {\n-        super( fixedRecordSize( RECORD_SIZE ), 0, IN_USE_BIT, StandardFormatSettings.NODE_MAXIMUM_ID_BITS );\n-    }\n+  public NodeRecordFormat()\n+  {\n+    super(fixedRecordSize(RECORD_SIZE), 0, IN_USE_BIT, StandardFormatSettings.NODE_MAXIMUM_ID_BITS);\n+  }\n \n-    @Override\n-    public NodeRecord newRecord()\n+  @Override\n+  public NodeRecord newRecord()\n+  {\n+    return new NodeRecord(-1);\n+  }\n+\n+  @Override\n+  public void read(NodeRecord record, PageCursor cursor, RecordLoad mode, int recordSize)\n+  {\n+    byte headerByte = cursor.getByte();\n+    boolean inUse = isInUse(headerByte);\n+    record.setInUse(inUse);\n+    if (mode.shouldLoad(inUse))\n     {\n-        return new NodeRecord( -1 );\n+      long nextRel = cursor.getInt() & 0xFFFFFFFFL;\n+      long nextProp = cursor.getInt() & 0xFFFFFFFFL;\n+\n+      long relModifier = (headerByte & 0xEL) << 31;\n+      long propModifier = (headerByte & 0xF0L) << 28;\n+\n+      long lsbLabels = cursor.getInt() & 0xFFFFFFFFL;\n+      long hsbLabels = cursor.getByte() & 0xFF; // so that a negative byte won't fill the \"extended\" bits with ones.\n+      long labels = lsbLabels | (hsbLabels << 32);\n+      byte extra = cursor.getByte();\n+      boolean dense = (extra & 0x1) > 0;\n+\n+      record.initialize(inUse,\n+          BaseRecordFormat.longFromIntAndMod(nextProp, propModifier), dense,\n+          BaseRecordFormat.longFromIntAndMod(nextRel, relModifier), labels);\n     }\n+  }\n \n-    @Override\n-    public void read( NodeRecord record, PageCursor cursor, RecordLoad mode, int recordSize )\n+  @Override\n+  public void write(NodeRecord record, PageCursor cursor, int recordSize)\n+  {\n+    if (record.inUse())\n     {\n-        byte headerByte = cursor.getByte();\n-        boolean inUse = isInUse( headerByte );\n-        record.setInUse( inUse );\n-        if ( mode.shouldLoad( inUse ) )\n-        {\n-            long nextRel = cursor.getInt() & 0xFFFFFFFFL;\n-            long nextProp = cursor.getInt() & 0xFFFFFFFFL;\n-\n-            long relModifier = (headerByte & 0xEL) << 31;\n-            long propModifier = (headerByte & 0xF0L) << 28;\n-\n-            long lsbLabels = cursor.getInt() & 0xFFFFFFFFL;\n-            long hsbLabels = cursor.getByte() & 0xFF; // so that a negative byte won't fill the \"extended\" bits with ones.\n-            long labels = lsbLabels | (hsbLabels << 32);\n-            byte extra = cursor.getByte();\n-            boolean dense = (extra & 0x1) > 0;\n-\n-            record.initialize( inUse,\n-                    BaseRecordFormat.longFromIntAndMod( nextProp, propModifier ), dense,\n-                    BaseRecordFormat.longFromIntAndMod( nextRel, relModifier ), labels );\n-        }\n-    }\n+      long nextRel = record.getNextRel();\n+      long nextProp = record.getNextProp();\n+\n+      short relModifier = nextRel == Record.NO_NEXT_RELATIONSHIP.intValue() ? 0 : (short) ((nextRel & 0x700000000L) >> 31);\n+      short propModifier = nextProp == Record.NO_NEXT_PROPERTY.intValue() ? 0 : (short) ((nextProp & 0xF00000000L) >> 28);\n+\n+      // [    ,   x] in use bit\n+      // [    ,xxx ] higher bits for rel id\n+      // [xxxx,    ] higher bits for prop id\n+      short inUseUnsignedByte = (record.inUse() ? Record.IN_USE : Record.NOT_IN_USE).byteValue();\n+      inUseUnsignedByte = (short) (inUseUnsignedByte | relModifier | propModifier);\n+\n+      cursor.putByte((byte) inUseUnsignedByte);\n+      cursor.putInt((int) nextRel);\n+      cursor.putInt((int) nextProp);\n+\n+      // lsb of labels\n+      long labelField = record.getLabelField();\n+      cursor.putInt((int) labelField);\n+      // msb of labels\n+      cursor.putByte((byte) ((labelField & 0xFF00000000L) >> 32));\n \n-    @Override\n-    public void write( NodeRecord record, PageCursor cursor, int recordSize )\n+      byte extra = record.isDense() ? (byte) 1 : (byte) 0;\n+      cursor.putByte(extra);\n+    } else\n     {\n-        if ( record.inUse() )\n-        {\n-            long nextRel = record.getNextRel();\n-            long nextProp = record.getNextProp();\n-\n-            short relModifier = nextRel == Record.NO_NEXT_RELATIONSHIP.intValue() ? 0 : (short)((nextRel & 0x700000000L) >> 31);\n-            short propModifier = nextProp == Record.NO_NEXT_PROPERTY.intValue() ? 0 : (short)((nextProp & 0xF00000000L) >> 28);\n-\n-            // [    ,   x] in use bit\n-            // [    ,xxx ] higher bits for rel id\n-            // [xxxx,    ] higher bits for prop id\n-            short inUseUnsignedByte = ( record.inUse() ? Record.IN_USE : Record.NOT_IN_USE ).byteValue();\n-            inUseUnsignedByte = (short) ( inUseUnsignedByte | relModifier | propModifier );\n-\n-            cursor.putByte( (byte) inUseUnsignedByte );\n-            cursor.putInt( (int) nextRel );\n-            cursor.putInt( (int) nextProp );\n-\n-            // lsb of labels\n-            long labelField = record.getLabelField();\n-            cursor.putInt( (int) labelField );\n-            // msb of labels\n-            cursor.putByte( (byte) ((labelField & 0xFF00000000L) >> 32) );\n-\n-            byte extra = record.isDense() ? (byte)1 : (byte)0;\n-            cursor.putByte( extra );\n-        }\n-        else\n-        {\n-            markAsUnused( cursor );\n-        }\n+      markAsUnused(cursor);\n     }\n+  }\n }\n",
            "diff_size": 97
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "90",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4359/NodeRecordFormat.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4359/NodeRecordFormat.java\nindex a7c84fe4f06..e6aa5e23131 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4359/NodeRecordFormat.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4359/NodeRecordFormat.java\n@@ -60,14 +60,14 @@ public class NodeRecordFormat extends BaseOneByteHeaderRecordFormat<NodeRecord>\n \n             long lsbLabels = cursor.getInt() & 0xFFFFFFFFL;\n             long hsbLabels = cursor.getByte() & 0xFF; // so that a negative byte won't fill the \"extended\" bits with ones.\n-            long labels = lsbLabels | (hsbLabels << 32);\n+            long labels = lsbLabels | ( hsbLabels << 32 );\n             byte extra = cursor.getByte();\n             boolean dense = (extra & 0x1) > 0;\n \n             record.initialize( inUse,\n                     BaseRecordFormat.longFromIntAndMod( nextProp, propModifier ), dense,\n                     BaseRecordFormat.longFromIntAndMod( nextRel, relModifier ), labels );\n-        }\n+    }\n     }\n \n     @Override\n@@ -78,22 +78,21 @@ public class NodeRecordFormat extends BaseOneByteHeaderRecordFormat<NodeRecord>\n             long nextRel = record.getNextRel();\n             long nextProp = record.getNextProp();\n \n-            short relModifier = nextRel == Record.NO_NEXT_RELATIONSHIP.intValue() ? 0 : (short)((nextRel & 0x700000000L) >> 31);\n-            short propModifier = nextProp == Record.NO_NEXT_PROPERTY.intValue() ? 0 : (short)((nextProp & 0xF00000000L) >> 28);\n+            short relModifier = nextRel == Record.NO_NEXT_RELATIONSHIP.intValue() ? 0 : (short)((nextRel & 0x700000000L) >> 31 );\n+            short propModifier = nextProp == Record.NO_NEXT_PROPERTY.intValue() ? 0 : (short)((nextProp & 0xF00000000L) >> 28 );\n \n             // [    ,   x] in use bit\n             // [    ,xxx ] higher bits for rel id\n             // [xxxx,    ] higher bits for prop id\n             short inUseUnsignedByte = ( record.inUse() ? Record.IN_USE : Record.NOT_IN_USE ).byteValue();\n             inUseUnsignedByte = (short) ( inUseUnsignedByte | relModifier | propModifier );\n-\n-            cursor.putByte( (byte) inUseUnsignedByte );\n-            cursor.putInt( (int) nextRel );\n-            cursor.putInt( (int) nextProp );\n+cursor.putByte( (byte) inUseUnsignedByte );\n+            cursor.putInt( ( int) nextRel );\n+            cursor.putInt( ( int) nextProp );\n \n             // lsb of labels\n             long labelField = record.getLabelField();\n-            cursor.putInt( (int) labelField );\n+            cursor.putInt( ( int) labelField );\n             // msb of labels\n             cursor.putByte( (byte) ((labelField & 0xFF00000000L) >> 32) );\n \n@@ -105,4 +104,4 @@ public class NodeRecordFormat extends BaseOneByteHeaderRecordFormat<NodeRecord>\n             markAsUnused( cursor );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 10
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
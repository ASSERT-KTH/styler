{
    "project_name": "graphfoundation-ongdb",
    "error_id": "33",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "38",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/33/TaskCoordinator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/33/TaskCoordinator.java\nindex 50497fecf8f..315549ea3dd 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/33/TaskCoordinator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/33/TaskCoordinator.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.helpers;\n \n import java.util.concurrent.TimeUnit;\n@@ -31,61 +32,61 @@ import org.neo4j.function.Factory;\n  */\n public class TaskCoordinator implements Cancelable, Factory<TaskControl>\n {\n-    private static final AtomicIntegerFieldUpdater<TaskCoordinator> TASKS_UPDATER =\n-            AtomicIntegerFieldUpdater.newUpdater( TaskCoordinator.class, \"tasks\" );\n-    private volatile boolean cancelled;\n-    @SuppressWarnings( \"UnusedDeclaration\"/*updated through the updater*/ )\n-    private volatile int tasks;\n-    private final long sleepTime;\n-    private final TimeUnit sleepUnit;\n+  private static final AtomicIntegerFieldUpdater<TaskCoordinator> TASKS_UPDATER =\n+      AtomicIntegerFieldUpdater.newUpdater(TaskCoordinator.class, \"tasks\");\n+  private volatile boolean cancelled;\n+  @SuppressWarnings(\"UnusedDeclaration\"/*updated through the updater*/)\n+  private volatile int tasks;\n+  private final long sleepTime;\n+  private final TimeUnit sleepUnit;\n \n-    public TaskCoordinator( long sleepTime, TimeUnit sleepUnit )\n-    {\n-        this.sleepTime = sleepTime;\n-        this.sleepUnit = sleepUnit;\n-    }\n+  public TaskCoordinator(long sleepTime, TimeUnit sleepUnit)\n+  {\n+    this.sleepTime = sleepTime;\n+    this.sleepUnit = sleepUnit;\n+  }\n \n-    @Override\n-    public void cancel()\n+  @Override\n+  public void cancel()\n+  {\n+    cancelled = true;\n+  }\n+\n+  public void awaitCompletion() throws InterruptedException\n+  {\n+    while (tasks != 0)\n     {\n-        cancelled = true;\n+      sleepUnit.sleep(sleepTime);\n     }\n+  }\n \n-    public void awaitCompletion() throws InterruptedException\n+  @Override\n+  public TaskControl newInstance()\n+  {\n+    if (cancelled)\n     {\n-        while ( tasks != 0 )\n-        {\n-            sleepUnit.sleep( sleepTime );\n-        }\n+      throw new IllegalStateException(\"This manager has already been cancelled.\");\n     }\n-\n-    @Override\n-    public TaskControl newInstance()\n+    TASKS_UPDATER.incrementAndGet(this);\n+    return new TaskControl()\n     {\n-        if ( cancelled )\n+      private volatile boolean closed;\n+\n+      @Override\n+      public void close()\n+      {\n+        if (!closed)\n         {\n-            throw new IllegalStateException( \"This manager has already been cancelled.\" );\n+          closed = true;\n+          TASKS_UPDATER.decrementAndGet(TaskCoordinator.this);\n         }\n-        TASKS_UPDATER.incrementAndGet( this );\n-        return new TaskControl()\n-        {\n-            private volatile boolean closed;\n+      }\n \n-            @Override\n-            public void close()\n-            {\n-                if ( !closed )\n-                {\n-                    closed = true;\n-                    TASKS_UPDATER.decrementAndGet( TaskCoordinator.this );\n-                }\n-            }\n-\n-            @Override\n-            public boolean cancellationRequested()\n-            {\n-                return cancelled;\n-            }\n-        };\n-    }\n+      @Override\n+      public boolean cancellationRequested()\n+      {\n+        return cancelled;\n+      }\n+    };\n+  }\n }\n",
            "diff_size": 64
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/33/TaskCoordinator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/33/TaskCoordinator.java\nindex 50497fecf8f..a1de2f5185a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/33/TaskCoordinator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/33/TaskCoordinator.java\n@@ -31,10 +31,10 @@ import org.neo4j.function.Factory;\n  */\n public class TaskCoordinator implements Cancelable, Factory<TaskControl>\n {\n-    private static final AtomicIntegerFieldUpdater<TaskCoordinator> TASKS_UPDATER =\n-            AtomicIntegerFieldUpdater.newUpdater( TaskCoordinator.class, \"tasks\" );\n-    private volatile boolean cancelled;\n-    @SuppressWarnings( \"UnusedDeclaration\"/*updated through the updater*/ )\n+    private static final AtomicIntegerFieldUpdater<TaskCoordinator> TASKS_UPDATER = AtomicIntegerFieldUpdater.newUpdater( TaskCoordinator.class, \"tasks\" );\n+private volatile boolean cancelled;\n+\n+@SuppressWarnings( \"UnusedDeclaration\"/*updated through the updater*/ )\n     private volatile int tasks;\n     private final long sleepTime;\n     private final TimeUnit sleepUnit;\n@@ -88,4 +88,4 @@ public class TaskCoordinator implements Cancelable, Factory<TaskControl>\n             }\n         };\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
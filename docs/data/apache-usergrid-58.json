{
    "project_name": "apache-usergrid",
    "error_id": "58",
    "information": {
        "errors": [
            {
                "line": "23",
                "severity": "warning",
                "message": "Use of @author javadoc keyword is prohibited.",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "\n\n/** @author tnine */\npublic class SingleOrderBySameRangeScanLessThanEqualConnectionIT extends AbstractIteratingQueryIT {\n    @Test\n    public void singleOrderBySameRangeScanLessThanEqualConnection() throws Exception {",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "23",
                    "severity": "warning",
                    "message": "Use of @author javadoc keyword is prohibited.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "25",
                    "severity": "warning",
                    "message": "Use of @author javadoc keyword is prohibited.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/errored/1/58/SingleOrderBySameRangeScanLessThanEqualConnectionIT.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/intellij/58/SingleOrderBySameRangeScanLessThanEqualConnectionIT.java\nindex 967b0efb5ab..92a79c64127 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/errored/1/58/SingleOrderBySameRangeScanLessThanEqualConnectionIT.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/intellij/58/SingleOrderBySameRangeScanLessThanEqualConnectionIT.java\n@@ -14,16 +14,19 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.apache.usergrid.persistence.query;\n \n \n import org.junit.Test;\n \n \n-/** @author tnine */\n+/**\n+ * @author tnine\n+ */\n public class SingleOrderBySameRangeScanLessThanEqualConnectionIT extends AbstractIteratingQueryIT {\n     @Test\n     public void singleOrderBySameRangeScanLessThanEqualConnection() throws Exception {\n-        singleOrderBySameRangeScanLessThanEqual( new ConnectionHelper(app) );\n+        singleOrderBySameRangeScanLessThanEqual(new ConnectionHelper(app));\n     }\n }\n",
            "diff_size": 5
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "23",
                    "severity": "warning",
                    "message": "Use of @author javadoc keyword is prohibited.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/errored/1/58/SingleOrderBySameRangeScanLessThanEqualConnectionIT.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/naturalize/58/SingleOrderBySameRangeScanLessThanEqualConnectionIT.java\nindex 967b0efb5ab..a40ac486f9d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/errored/1/58/SingleOrderBySameRangeScanLessThanEqualConnectionIT.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/naturalize/58/SingleOrderBySameRangeScanLessThanEqualConnectionIT.java\n@@ -26,4 +26,4 @@ public class SingleOrderBySameRangeScanLessThanEqualConnectionIT extends Abstrac\n     public void singleOrderBySameRangeScanLessThanEqualConnection() throws Exception {\n         singleOrderBySameRangeScanLessThanEqual( new ConnectionHelper(app) );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "23",
                    "severity": "warning",
                    "message": "Use of @author javadoc keyword is prohibited.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/errored/1/58/SingleOrderBySameRangeScanLessThanEqualConnectionIT.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/codebuff/58/SingleOrderBySameRangeScanLessThanEqualConnectionIT.java\nindex 967b0efb5ab..1facf34d381 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/errored/1/58/SingleOrderBySameRangeScanLessThanEqualConnectionIT.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/codebuff/58/SingleOrderBySameRangeScanLessThanEqualConnectionIT.java\n@@ -21,9 +21,12 @@ import org.junit.Test;\n \n \n /** @author tnine */\n+\n+\n public class SingleOrderBySameRangeScanLessThanEqualConnectionIT extends AbstractIteratingQueryIT {\n+\n     @Test\n     public void singleOrderBySameRangeScanLessThanEqualConnection() throws Exception {\n-        singleOrderBySameRangeScanLessThanEqual( new ConnectionHelper(app) );\n+        singleOrderBySameRangeScanLessThanEqual( new ConnectionHelper( app ) );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "23",
                    "severity": "warning",
                    "message": "Use of @author javadoc keyword is prohibited.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "21",
                    "severity": "warning",
                    "message": "Use of @author javadoc keyword is prohibited.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/errored/1/58/SingleOrderBySameRangeScanLessThanEqualConnectionIT.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/styler_three_grams/58/SingleOrderBySameRangeScanLessThanEqualConnectionIT.java\nindex 967b0efb5ab..f81ad2ae8e1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/errored/1/58/SingleOrderBySameRangeScanLessThanEqualConnectionIT.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-usergrid/styler_three_grams/58/SingleOrderBySameRangeScanLessThanEqualConnectionIT.java\n@@ -18,10 +18,7 @@ package org.apache.usergrid.persistence.query;\n \n \n import org.junit.Test;\n-\n-\n-/** @author tnine */\n-public class SingleOrderBySameRangeScanLessThanEqualConnectionIT extends AbstractIteratingQueryIT {\n+/** @author tnine */ public class SingleOrderBySameRangeScanLessThanEqualConnectionIT extends AbstractIteratingQueryIT {\n     @Test\n     public void singleOrderBySameRangeScanLessThanEqualConnection() throws Exception {\n         singleOrderBySameRangeScanLessThanEqual( new ConnectionHelper(app) );\n",
            "diff_size": 4
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "O2-Czech-Republic-proxima-platform",
    "error_id": "107",
    "information": {
        "errors": [
            {
                "line": "182",
                "severity": "error",
                "message": "Line is longer than 90 characters (found 93).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "        .write(\n            StreamElement.upsert(\n                entity, attr, UUID.randomUUID().toString(), key, attr.getName(), now, value),\n            CommitCallback.noop());\n  }\n}",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/107/BatchLogReaderTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/styler/107/BatchLogReaderTest.java\nindex a4104ef2bd1..89bd7dcbefc 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/107/BatchLogReaderTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/styler/107/BatchLogReaderTest.java\n@@ -179,7 +179,8 @@ public class BatchLogReaderTest {\n     Optionals.get(direct.getWriter(attr))\n         .write(\n             StreamElement.upsert(\n-                entity, attr, UUID.randomUUID().toString(), key, attr.getName(), now, value),\n-            CommitCallback.noop());\n+                entity,\n+                attr, UUID.randomUUID().toString() ,key ,attr.getName(),now,value),\n+                CommitCallback.noop());\n   }\n }\n",
            "diff_size": 3
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/107/BatchLogReaderTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/intellij/107/BatchLogReaderTest.java\nindex a4104ef2bd1..2ff78faf897 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/107/BatchLogReaderTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/intellij/107/BatchLogReaderTest.java\n@@ -1,18 +1,19 @@\n /**\n  * Copyright 2017-2021 O2 Czech Republic, a.s.\n- *\n+ * <p>\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *\n- *    http://www.apache.org/licenses/LICENSE-2.0\n- *\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package cz.o2.proxima.direct.batch;\n \n import static cz.o2.proxima.direct.commitlog.CommitLogReaderTest.withNumRecordsPerSec;\n@@ -179,7 +180,8 @@ public class BatchLogReaderTest {\n     Optionals.get(direct.getWriter(attr))\n         .write(\n             StreamElement.upsert(\n-                entity, attr, UUID.randomUUID().toString(), key, attr.getName(), now, value),\n+                entity, attr, UUID.randomUUID().toString(), key, attr.getName(), now,\n+                value),\n             CommitCallback.noop());\n   }\n }\n",
            "diff_size": 7
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "73",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 2, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "98",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 2, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "123",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 2, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "129",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "150",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "156",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 2, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "162",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "183",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 117).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/107/BatchLogReaderTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/naturalize/107/BatchLogReaderTest.java\nindex a4104ef2bd1..c518b3d11c2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/107/BatchLogReaderTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/naturalize/107/BatchLogReaderTest.java\n@@ -69,7 +69,8 @@ public class BatchLogReaderTest {\n         reader.getPartitions(),\n         Collections.singletonList(attr),\n         new BatchLogObserver() {\n-          @Override\n+\n+  @Override\n           public boolean onNext(StreamElement element) {\n             ExceptionUtils.unchecked(() -> read.put(element));\n             return false;\n@@ -93,7 +94,8 @@ public class BatchLogReaderTest {\n         reader.getPartitions(),\n         Collections.singletonList(attr),\n         new BatchLogObserver() {\n-          @Override\n+\n+  @Override\n           public boolean onNext(StreamElement element, OnNextContext context) {\n             assertEquals(0, context.getPartition().getId());\n             assertEquals(Long.MIN_VALUE, context.getWatermark());\n@@ -117,14 +119,14 @@ public class BatchLogReaderTest {\n         reader.getPartitions(),\n         Collections.singletonList(attr),\n         new BatchLogObserver() {\n-          @Override\n+\n+  @Override\n           public boolean onNext(StreamElement element) {\n             ExceptionUtils.unchecked(() -> read.put(element));\n             return true;\n           }\n         });\n-\n-    List<Integer> values = new ArrayList<>();\n+List<Integer> values = new ArrayList<>();\n     for (int i = 0; i < numElements; i++) {\n       StreamElement element = read.take();\n       assertNotNull(element.getValue());\n@@ -143,22 +145,21 @@ public class BatchLogReaderTest {\n     for (int i = 0; i < numElements; i++) {\n       write(\"gw\" + i, new byte[] {(byte) i});\n     }\n-    BatchLogReader reader =\n-        BatchLogReaders.withLimitedThroughput(\n+    BatchLogReader reader = BatchLogReaders.withLimitedThroughput(\n             getBatchReader(), withNumRecordsPerSec(numElements / 2));\n-    BlockingQueue<StreamElement> read = new SynchronousQueue<>();\n+BlockingQueue<StreamElement> read = new SynchronousQueue<>();\n     reader.observe(\n         reader.getPartitions(),\n         Collections.singletonList(attr),\n         new BatchLogObserver() {\n-          @Override\n+\n+  @Override\n           public boolean onNext(StreamElement element) {\n             ExceptionUtils.unchecked(() -> read.put(element));\n             return true;\n           }\n         });\n-\n-    List<Integer> values = new ArrayList<>();\n+List<Integer> values = new ArrayList<>();\n     for (int i = 0; i < numElements; i++) {\n       StreamElement element = read.take();\n       assertNotNull(element.getValue());\n@@ -179,7 +180,6 @@ public class BatchLogReaderTest {\n     Optionals.get(direct.getWriter(attr))\n         .write(\n             StreamElement.upsert(\n-                entity, attr, UUID.randomUUID().toString(), key, attr.getName(), now, value),\n-            CommitCallback.noop());\n+                entity, attr, UUID.randomUUID().toString(), key, attr.getName(), now, value), CommitCallback.noop());\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 18
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "66",
                    "severity": "error",
                    "message": "'array initialization' child has incorrect indentation level 18, expected level should be one of the following: 6, 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "67",
                    "severity": "error",
                    "message": "'array initialization rcurly' has incorrect indentation level 0, expected level should be one of the following: 4, 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "70",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 100).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "72",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 78, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "73",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 124).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "74",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 80, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "74",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 130).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "75",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 80, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "75",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 93).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "76",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 78, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "77",
                    "severity": "error",
                    "message": "'object def rcurly' has incorrect indentation level 76, expected level should be one of the following: 4, 6, 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "90",
                    "severity": "error",
                    "message": "'array initialization' child has incorrect indentation level 18, expected level should be one of the following: 6, 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "91",
                    "severity": "error",
                    "message": "'array initialization rcurly' has incorrect indentation level 0, expected level should be one of the following: 4, 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "94",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 100).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "96",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 78, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "97",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 147).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "98",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 80, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "98",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 128).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "99",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 80, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "99",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 133).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "100",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 80, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "100",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 130).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "101",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 80, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "101",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 93).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "102",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 78, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "103",
                    "severity": "error",
                    "message": "'object def rcurly' has incorrect indentation level 76, expected level should be one of the following: 4, 6, 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "113",
                    "severity": "error",
                    "message": "'array initialization' child has incorrect indentation level 24, expected level should be one of the following: 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "114",
                    "severity": "error",
                    "message": "'array initialization rcurly' has incorrect indentation level 0, expected level should be one of the following: 6, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "118",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 100).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "120",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 78, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "121",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 124).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "122",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 80, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "122",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 130).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "123",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 80, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "123",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 92).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "124",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 78, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "125",
                    "severity": "error",
                    "message": "'object def rcurly' has incorrect indentation level 76, expected level should be one of the following: 4, 6, 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "134",
                    "severity": "error",
                    "message": "'IntStream' has incorrect indentation level 6, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "136",
                    "severity": "error",
                    "message": "'values' has incorrect indentation level 6, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "146",
                    "severity": "error",
                    "message": "'array initialization' child has incorrect indentation level 24, expected level should be one of the following: 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "147",
                    "severity": "error",
                    "message": "'array initialization rcurly' has incorrect indentation level 0, expected level should be one of the following: 6, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "149",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 123).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "151",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 100).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "153",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 78, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "154",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 124).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "155",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 80, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "155",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 130).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "156",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 80, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "156",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 92).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "157",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 78, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "158",
                    "severity": "error",
                    "message": "'object def rcurly' has incorrect indentation level 76, expected level should be one of the following: 4, 6, 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "167",
                    "severity": "error",
                    "message": "'IntStream' has incorrect indentation level 6, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "169",
                    "severity": "error",
                    "message": "'values' has incorrect indentation level 6, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "180",
                    "severity": "error",
                    "message": "'StreamElement' has incorrect indentation level 6, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "180",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 104).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "181",
                    "severity": "error",
                    "message": "'CommitCallback' has incorrect indentation level 6, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/107/BatchLogReaderTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/codebuff/107/BatchLogReaderTest.java\nindex a4104ef2bd1..a5343e8c967 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/107/BatchLogReaderTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/codebuff/107/BatchLogReaderTest.java\n@@ -17,7 +17,6 @@ package cz.o2.proxima.direct.batch;\n \n import static cz.o2.proxima.direct.commitlog.CommitLogReaderTest.withNumRecordsPerSec;\n import static org.junit.Assert.*;\n-\n import com.typesafe.config.ConfigFactory;\n import cz.o2.proxima.direct.core.CommitCallback;\n import cz.o2.proxima.direct.core.DirectDataOperator;\n@@ -41,13 +40,14 @@ import org.junit.Before;\n import org.junit.Test;\n \n /** Test suite for {@link BatchLogReader BatchLogReaders}. */\n+\n+\n public class BatchLogReaderTest {\n \n   private Repository repo;\n   private DirectDataOperator direct;\n   private EntityDescriptor entity;\n   private AttributeDescriptor<byte[]> attr;\n-\n   private long now;\n \n   @Before\n@@ -62,19 +62,19 @@ public class BatchLogReaderTest {\n \n   @Test\n   public void testSimpleObserve() throws InterruptedException {\n-    write(\"gw\", new byte[] {1});\n+    write(\"gw\", new byte[] {\n+                  1\n+});\n     BatchLogReader reader = getBatchReader();\n     BlockingQueue<StreamElement> read = new SynchronousQueue<>();\n-    reader.observe(\n-        reader.getPartitions(),\n-        Collections.singletonList(attr),\n-        new BatchLogObserver() {\n-          @Override\n-          public boolean onNext(StreamElement element) {\n-            ExceptionUtils.unchecked(() -> read.put(element));\n-            return false;\n-          }\n-        });\n+    reader.observe(reader.getPartitions(), Collections.singletonList(attr), new BatchLogObserver() {\n+\n+                                                                              @Override\n+                                                                              public boolean onNext(StreamElement element) {\n+                                                                                ExceptionUtils.unchecked(() -> read.put(element));\n+                                                                                return false;\n+                                                                              }\n+                                                                            });\n     StreamElement element = read.take();\n     assertEquals(\"gw\", element.getKey());\n   }\n@@ -86,21 +86,21 @@ public class BatchLogReaderTest {\n \n   @Test(timeout = 5000)\n   public void testObserveWithContext() throws InterruptedException {\n-    write(\"gw\", new byte[] {1});\n+    write(\"gw\", new byte[] {\n+                  1\n+});\n     BatchLogReader reader = getBatchReader();\n     BlockingQueue<StreamElement> read = new SynchronousQueue<>();\n-    reader.observe(\n-        reader.getPartitions(),\n-        Collections.singletonList(attr),\n-        new BatchLogObserver() {\n-          @Override\n-          public boolean onNext(StreamElement element, OnNextContext context) {\n-            assertEquals(0, context.getPartition().getId());\n-            assertEquals(Long.MIN_VALUE, context.getWatermark());\n-            ExceptionUtils.unchecked(() -> read.put(element));\n-            return false;\n-          }\n-        });\n+    reader.observe(reader.getPartitions(), Collections.singletonList(attr), new BatchLogObserver() {\n+\n+                                                                              @Override\n+                                                                              public boolean onNext(StreamElement element, OnNextContext context) {\n+                                                                                assertEquals(0, context.getPartition().getId());\n+                                                                                assertEquals(Long.MIN_VALUE, context.getWatermark());\n+                                                                                ExceptionUtils.unchecked(() -> read.put(element));\n+                                                                                return false;\n+                                                                              }\n+                                                                            });\n     StreamElement element = read.take();\n     assertEquals(\"gw\", element.getKey());\n   }\n@@ -109,21 +109,20 @@ public class BatchLogReaderTest {\n   public void testObserveWithoutThroughputLimit() throws InterruptedException {\n     int numElements = 100;\n     for (int i = 0; i < numElements; i++) {\n-      write(\"gw\" + i, new byte[] {(byte) i});\n+      write(\"gw\" + i, new byte[] {\n+                        (byte) i\n+});\n     }\n     BatchLogReader reader = getBatchReader();\n     BlockingQueue<StreamElement> read = new SynchronousQueue<>();\n-    reader.observe(\n-        reader.getPartitions(),\n-        Collections.singletonList(attr),\n-        new BatchLogObserver() {\n-          @Override\n-          public boolean onNext(StreamElement element) {\n-            ExceptionUtils.unchecked(() -> read.put(element));\n-            return true;\n-          }\n-        });\n+    reader.observe(reader.getPartitions(), Collections.singletonList(attr), new BatchLogObserver() {\n \n+                                                                              @Override\n+                                                                              public boolean onNext(StreamElement element) {\n+                                                                                ExceptionUtils.unchecked(() -> read.put(element));\n+                                                                                return true;\n+                                                                              }\n+                                                                            });\n     List<Integer> values = new ArrayList<>();\n     for (int i = 0; i < numElements; i++) {\n       StreamElement element = read.take();\n@@ -132,8 +131,10 @@ public class BatchLogReaderTest {\n       values.add((int) element.getValue()[0]);\n     }\n     assertEquals(\n-        IntStream.range(0, numElements).boxed().collect(Collectors.toList()),\n-        values.stream().sorted().collect(Collectors.toList()));\n+      IntStream.range(0, numElements).boxed()\n+                                     .collect(Collectors.toList()),\n+      values.stream().sorted()\n+                     .collect(Collectors.toList()));\n     assertTrue(System.currentTimeMillis() - now < 1000);\n   }\n \n@@ -141,23 +142,20 @@ public class BatchLogReaderTest {\n   public void testObserveWithThroughputLimit() throws InterruptedException {\n     int numElements = 100;\n     for (int i = 0; i < numElements; i++) {\n-      write(\"gw\" + i, new byte[] {(byte) i});\n+      write(\"gw\" + i, new byte[] {\n+                        (byte) i\n+});\n     }\n-    BatchLogReader reader =\n-        BatchLogReaders.withLimitedThroughput(\n-            getBatchReader(), withNumRecordsPerSec(numElements / 2));\n+    BatchLogReader reader = BatchLogReaders.withLimitedThroughput(getBatchReader(), withNumRecordsPerSec(numElements / 2));\n     BlockingQueue<StreamElement> read = new SynchronousQueue<>();\n-    reader.observe(\n-        reader.getPartitions(),\n-        Collections.singletonList(attr),\n-        new BatchLogObserver() {\n-          @Override\n-          public boolean onNext(StreamElement element) {\n-            ExceptionUtils.unchecked(() -> read.put(element));\n-            return true;\n-          }\n-        });\n+    reader.observe(reader.getPartitions(), Collections.singletonList(attr), new BatchLogObserver() {\n \n+                                                                              @Override\n+                                                                              public boolean onNext(StreamElement element) {\n+                                                                                ExceptionUtils.unchecked(() -> read.put(element));\n+                                                                                return true;\n+                                                                              }\n+                                                                            });\n     List<Integer> values = new ArrayList<>();\n     for (int i = 0; i < numElements; i++) {\n       StreamElement element = read.take();\n@@ -166,8 +164,10 @@ public class BatchLogReaderTest {\n       values.add((int) element.getValue()[0]);\n     }\n     assertEquals(\n-        IntStream.range(0, numElements).boxed().collect(Collectors.toList()),\n-        values.stream().sorted().collect(Collectors.toList()));\n+      IntStream.range(0, numElements).boxed()\n+                                     .collect(Collectors.toList()),\n+      values.stream().sorted()\n+                     .collect(Collectors.toList()));\n     assertTrue(System.currentTimeMillis() - now > 1000);\n   }\n \n@@ -176,10 +176,8 @@ public class BatchLogReaderTest {\n   }\n \n   private void write(String key, byte[] value) {\n-    Optionals.get(direct.getWriter(attr))\n-        .write(\n-            StreamElement.upsert(\n-                entity, attr, UUID.randomUUID().toString(), key, attr.getName(), now, value),\n-            CommitCallback.noop());\n+    Optionals.get(direct.getWriter(attr)).write(\n+      StreamElement.upsert(entity, attr, UUID.randomUUID().toString(), key, attr.getName(), now, value),\n+      CommitCallback.noop());\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 87
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "182",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 93).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/107/BatchLogReaderTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/styler_random/107/BatchLogReaderTest.java\nindex a4104ef2bd1..1f5fb19cebd 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/107/BatchLogReaderTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/styler_random/107/BatchLogReaderTest.java\n@@ -180,6 +180,6 @@ public class BatchLogReaderTest {\n         .write(\n             StreamElement.upsert(\n                 entity, attr, UUID.randomUUID().toString(), key, attr.getName(), now, value),\n-            CommitCallback.noop());\n+                CommitCallback.noop());\n   }\n }\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/107/BatchLogReaderTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/styler_three_grams/107/BatchLogReaderTest.java\nindex a4104ef2bd1..89bd7dcbefc 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/107/BatchLogReaderTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/styler_three_grams/107/BatchLogReaderTest.java\n@@ -179,7 +179,8 @@ public class BatchLogReaderTest {\n     Optionals.get(direct.getWriter(attr))\n         .write(\n             StreamElement.upsert(\n-                entity, attr, UUID.randomUUID().toString(), key, attr.getName(), now, value),\n-            CommitCallback.noop());\n+                entity,\n+                attr, UUID.randomUUID().toString() ,key ,attr.getName(),now,value),\n+                CommitCallback.noop());\n   }\n }\n",
            "diff_size": 3
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff",
        "styler_random"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "965",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "38",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/965/TypedId.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/965/TypedId.java\nindex 2c423de6a0b..781308cd188 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/965/TypedId.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/965/TypedId.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.shell.kernel.apps;\n \n import org.neo4j.graphdb.Node;\n@@ -27,86 +28,86 @@ import org.neo4j.graphdb.Relationship;\n  */\n class TypedId\n {\n-    private final String type;\n-    private final long id;\n-    private final boolean isNode;\n+  private final String type;\n+  private final long id;\n+  private final boolean isNode;\n \n-    /**\n-     * @param typedId the serialized string.\n-     */\n-    TypedId( String typedId )\n-    {\n-        this( typedId.substring( 0, 1 ),\n-            Long.parseLong( typedId.substring( 1 ) ) );\n-    }\n+  /**\n+   * @param typedId the serialized string.\n+   */\n+  TypedId(String typedId)\n+  {\n+    this(typedId.substring(0, 1),\n+        Long.parseLong(typedId.substring(1)));\n+  }\n \n-    /**\n-     * @param type the type\n-     * @param id the object's id.\n-     */\n-    TypedId( String type, long id )\n-    {\n-        this.type = type;\n-        this.id = id;\n-        this.isNode = type.equals( NodeOrRelationship.TYPE_NODE );\n-    }\n+  /**\n+   * @param type the type\n+   * @param id   the object's id.\n+   */\n+  TypedId(String type, long id)\n+  {\n+    this.type = type;\n+    this.id = id;\n+    this.isNode = type.equals(NodeOrRelationship.TYPE_NODE);\n+  }\n \n-    /**\n-     * @return the type.\n-     */\n-    public String getType()\n-    {\n-        return this.type;\n-    }\n+  /**\n+   * @return the type.\n+   */\n+  public String getType()\n+  {\n+    return this.type;\n+  }\n \n-    /**\n-     * @return the object's id.\n-     */\n-    public long getId()\n-    {\n-        return this.id;\n-    }\n+  /**\n+   * @return the object's id.\n+   */\n+  public long getId()\n+  {\n+    return this.id;\n+  }\n \n-    /**\n-     * @return whether or not the type is a {@link Node}.\n-     */\n-    public boolean isNode()\n-    {\n-        return this.isNode;\n-    }\n+  /**\n+   * @return whether or not the type is a {@link Node}.\n+   */\n+  public boolean isNode()\n+  {\n+    return this.isNode;\n+  }\n \n-    /**\n-     * @return whether or not the type is a {@link Relationship}.\n-     */\n-    public boolean isRelationship()\n-    {\n-        return !this.isNode;\n-    }\n+  /**\n+   * @return whether or not the type is a {@link Relationship}.\n+   */\n+  public boolean isRelationship()\n+  {\n+    return !this.isNode;\n+  }\n \n-    @Override\n-    public boolean equals( Object o )\n+  @Override\n+  public boolean equals(Object o)\n+  {\n+    if (!(o instanceof TypedId))\n     {\n-        if ( !( o instanceof TypedId ) )\n-        {\n-            return false;\n-        }\n-        TypedId other = (TypedId) o;\n-        return this.type.equals( other.type ) &&\n-            this.id == other.id;\n+      return false;\n     }\n+    TypedId other = (TypedId) o;\n+    return this.type.equals(other.type) &&\n+        this.id == other.id;\n+  }\n \n-    @Override\n-    public int hashCode()\n-    {\n-        int code = 7;\n-        code = 31 * code + Long.valueOf( this.id ).hashCode();\n-        code = 31 * code + this.type.hashCode();\n-        return code;\n-    }\n+  @Override\n+  public int hashCode()\n+  {\n+    int code = 7;\n+    code = 31 * code + Long.valueOf(this.id).hashCode();\n+    code = 31 * code + this.type.hashCode();\n+    return code;\n+  }\n \n-    @Override\n-    public String toString()\n-    {\n-        return this.type + this.id;\n-    }\n+  @Override\n+  public String toString()\n+  {\n+    return this.type + this.id;\n+  }\n }\n",
            "diff_size": 78
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/965/TypedId.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/965/TypedId.java\nindex 2c423de6a0b..bf91a7f0420 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/965/TypedId.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/965/TypedId.java\n@@ -36,9 +36,8 @@ class TypedId\n      */\n     TypedId( String typedId )\n     {\n-        this( typedId.substring( 0, 1 ),\n-            Long.parseLong( typedId.substring( 1 ) ) );\n-    }\n+        this( typedId.substring( 0, 1 ), Long.parseLong( typedId.substring( 1 ) ) );\n+            }\n \n     /**\n      * @param type the type\n@@ -90,7 +89,8 @@ class TypedId\n         {\n             return false;\n         }\n-        TypedId other = (TypedId) o;\n+\n+TypedId other = (TypedId) o;\n         return this.type.equals( other.type ) &&\n             this.id == other.id;\n     }\n@@ -109,4 +109,4 @@ class TypedId\n     {\n         return this.type + this.id;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
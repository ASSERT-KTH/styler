{
    "project_name": "neo4j-neo4j",
    "error_id": "372",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "60",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "125",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "113",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "74",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "121",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "21",
                    "severity": "error",
                    "message": "'}' at column 21 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "125",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "137",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "140",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "143",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "192",
                    "column": "87",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "192",
                    "column": "108",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "209",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "211",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "211",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "218",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "228",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "228",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "230",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "230",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "232",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "232",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "240",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "240",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "242",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "242",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "245",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/372/AuthorizationEnabledFilter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/372/AuthorizationEnabledFilter.java\nindex bf88f34e3d5..c6d9b99487b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/372/AuthorizationEnabledFilter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/372/AuthorizationEnabledFilter.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.server.rest.dbms;\n \n import java.io.IOException;\n@@ -56,48 +57,48 @@ public class AuthorizationEnabledFilter extends AuthorizationFilter\n     private final Log log;\n     private final List<Pattern> uriWhitelist;\n \n-    public AuthorizationEnabledFilter( Supplier<AuthManager> authManager, LogProvider logProvider, List<Pattern> uriWhitelist )\n+    public AuthorizationEnabledFilter(Supplier<AuthManager> authManager, LogProvider logProvider, List<Pattern> uriWhitelist)\n     {\n         this.authManagerSupplier = authManager;\n-        this.log = logProvider.getLog( getClass() );\n+        this.log = logProvider.getLog(getClass());\n         this.uriWhitelist = uriWhitelist;\n     }\n \n     @Override\n-    public void doFilter( ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain )\n-            throws IOException, ServletException\n+    public void doFilter(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain)\n+      throws IOException, ServletException\n     {\n-        validateRequestType( servletRequest );\n-        validateResponseType( servletResponse );\n+        validateRequestType(servletRequest);\n+        validateResponseType(servletResponse);\n \n         final HttpServletRequest request = (HttpServletRequest) servletRequest;\n         final HttpServletResponse response = (HttpServletResponse) servletResponse;\n \n-        String userAgent = request.getHeader( HttpHeaders.USER_AGENT );\n+        String userAgent = request.getHeader(HttpHeaders.USER_AGENT);\n         // username is only known after authentication, make connection aware of the user-agent\n-        JettyHttpConnection.updateUserForCurrentConnection( null, userAgent );\n+        JettyHttpConnection.updateUserForCurrentConnection(null, userAgent);\n \n-        final String path = request.getContextPath() + ( request.getPathInfo() == null ? \"\" : request.getPathInfo() );\n+        final String path = request.getContextPath() + (request.getPathInfo() == null ? \"\" : request.getPathInfo());\n \n-        if ( request.getMethod().equals( \"OPTIONS\" ) || whitelisted( path ) )\n+        if (request.getMethod().equals(\"OPTIONS\") || whitelisted(path))\n         {\n             // NOTE: If starting transactions with access mode on whitelisted uris should be possible we need to\n             //       wrap servletRequest in an AuthorizedRequestWrapper here\n-            filterChain.doFilter( servletRequest, servletResponse );\n+            filterChain.doFilter(servletRequest, servletResponse);\n             return;\n         }\n \n-        final String header = request.getHeader( HttpHeaders.AUTHORIZATION );\n-        if ( header == null )\n+        final String header = request.getHeader(HttpHeaders.AUTHORIZATION);\n+        if (header == null)\n         {\n-            requestAuthentication( request, noHeader ).accept( response );\n+            requestAuthentication(request, noHeader).accept(response);\n             return;\n         }\n \n-        final String[] usernameAndPassword = extractCredential( header );\n-        if ( usernameAndPassword == null )\n+        final String[] usernameAndPassword = extractCredential(header);\n+        if (usernameAndPassword == null)\n         {\n-            badHeader.accept( response );\n+            badHeader.accept(response);\n             return;\n         }\n \n@@ -106,134 +107,129 @@ public class AuthorizationEnabledFilter extends AuthorizationFilter\n \n         try\n         {\n-            LoginContext securityContext = authenticate( username, password );\n+            LoginContext securityContext = authenticate(username, password);\n             // username is now known, make connection aware of both username and user-agent\n-            JettyHttpConnection.updateUserForCurrentConnection( username, userAgent );\n+            JettyHttpConnection.updateUserForCurrentConnection(username, userAgent);\n \n-            switch ( securityContext.subject().getAuthenticationResult() )\n+            switch (securityContext.subject().getAuthenticationResult())\n             {\n-            case PASSWORD_CHANGE_REQUIRED:\n-                // Fall through\n-                // You should be able to authenticate with PASSWORD_CHANGE_REQUIRED but will be stopped\n-                // from the server side if you try to do anything else than changing you own password.\n-            case SUCCESS:\n-                try\n-                {\n-                    filterChain.doFilter( new AuthorizedRequestWrapper( BASIC_AUTH, username, request, securityContext ),\n-                            servletResponse );\n-                }\n-                catch ( AuthorizationViolationException e )\n-                {\n-                    unauthorizedAccess( e.getMessage() ).accept( response );\n-                }\n-                return;\n-            case TOO_MANY_ATTEMPTS:\n-                tooManyAttempts.accept( response );\n-                return;\n-            default:\n-                log.warn( \"Failed authentication attempt for '%s' from %s\", username, request.getRemoteAddr() );\n-                requestAuthentication( request, invalidCredential ).accept( response );\n+                case PASSWORD_CHANGE_REQUIRED:\n+                    // Fall through\n+                    // You should be able to authenticate with PASSWORD_CHANGE_REQUIRED but will be stopped\n+                    // from the server side if you try to do anything else than changing you own password.\n+                case SUCCESS:\n+                    try\n+                    {\n+                        filterChain.doFilter(new AuthorizedRequestWrapper(BASIC_AUTH, username, request, securityContext),\n+                          servletResponse);\n+                    } catch (AuthorizationViolationException e)\n+                    {\n+                        unauthorizedAccess(e.getMessage()).accept(response);\n+                    }\n+                    return;\n+                case TOO_MANY_ATTEMPTS:\n+                    tooManyAttempts.accept(response);\n+                    return;\n+                default:\n+                    log.warn(\"Failed authentication attempt for '%s' from %s\", username, request.getRemoteAddr());\n+                    requestAuthentication(request, invalidCredential).accept(response);\n             }\n-        }\n-        catch ( InvalidAuthTokenException e )\n+        } catch (InvalidAuthTokenException e)\n         {\n-            requestAuthentication( request, invalidAuthToken( e.getMessage() ) ).accept( response );\n-        }\n-        catch ( AuthProviderTimeoutException e )\n+            requestAuthentication(request, invalidAuthToken(e.getMessage())).accept(response);\n+        } catch (AuthProviderTimeoutException e)\n         {\n-            authProviderTimeout.accept( response );\n-        }\n-        catch ( AuthProviderFailedException e )\n+            authProviderTimeout.accept(response);\n+        } catch (AuthProviderFailedException e)\n         {\n-            authProviderFailed.accept( response );\n+            authProviderFailed.accept(response);\n         }\n     }\n \n-    private LoginContext authenticate( String username, String password ) throws InvalidAuthTokenException\n+    private LoginContext authenticate(String username, String password) throws InvalidAuthTokenException\n     {\n         AuthManager authManager = authManagerSupplier.get();\n-        Map<String,Object> authToken = newBasicAuthToken( username, password != null ? UTF8.encode( password ) : null );\n-        return authManager.login( authToken );\n+        Map<String, Object> authToken = newBasicAuthToken(username, password != null ? UTF8.encode(password) : null);\n+        return authManager.login(authToken);\n     }\n \n     private static final ThrowingConsumer<HttpServletResponse, IOException> noHeader =\n-            error( 401,\n-                    map( \"errors\", singletonList( map(\n-                            \"code\", Status.Security.Unauthorized.code().serialize(),\n-                            \"message\", \"No authentication header supplied.\" ) ) ) );\n+      error(401,\n+        map(\"errors\", singletonList(map(\n+          \"code\", Status.Security.Unauthorized.code().serialize(),\n+          \"message\", \"No authentication header supplied.\"))));\n \n     private static final ThrowingConsumer<HttpServletResponse, IOException> badHeader =\n-            error( 400,\n-                    map( \"errors\", singletonList( map(\n-                            \"code\", Status.Request.InvalidFormat.code().serialize(),\n-                            \"message\", \"Invalid authentication header.\" ) ) ) );\n+      error(400,\n+        map(\"errors\", singletonList(map(\n+          \"code\", Status.Request.InvalidFormat.code().serialize(),\n+          \"message\", \"Invalid authentication header.\"))));\n \n     private static final ThrowingConsumer<HttpServletResponse, IOException> invalidCredential =\n-            error( 401,\n-                    map( \"errors\", singletonList( map(\n-                            \"code\", Status.Security.Unauthorized.code().serialize(),\n-                            \"message\", \"Invalid username or password.\" ) ) ) );\n+      error(401,\n+        map(\"errors\", singletonList(map(\n+          \"code\", Status.Security.Unauthorized.code().serialize(),\n+          \"message\", \"Invalid username or password.\"))));\n \n     private static final ThrowingConsumer<HttpServletResponse, IOException> tooManyAttempts =\n-            error( 429,\n-                    map( \"errors\", singletonList( map(\n-                            \"code\", Status.Security.AuthenticationRateLimit.code().serialize(),\n-                            \"message\", \"Too many failed authentication requests. Please wait 5 seconds and try again.\" ) ) ) );\n+      error(429,\n+        map(\"errors\", singletonList(map(\n+          \"code\", Status.Security.AuthenticationRateLimit.code().serialize(),\n+          \"message\", \"Too many failed authentication requests. Please wait 5 seconds and try again.\"))));\n \n     private static final ThrowingConsumer<HttpServletResponse, IOException> authProviderFailed =\n-            error( 502,\n-                    map( \"errors\", singletonList( map(\n-                            \"code\", Status.Security.AuthProviderFailed.code().serialize(),\n-                            \"message\", \"An auth provider request failed.\" ) ) ) );\n+      error(502,\n+        map(\"errors\", singletonList(map(\n+          \"code\", Status.Security.AuthProviderFailed.code().serialize(),\n+          \"message\", \"An auth provider request failed.\"))));\n \n     private static final ThrowingConsumer<HttpServletResponse, IOException> authProviderTimeout =\n-            error( 504,\n-                    map( \"errors\", singletonList( map(\n-                            \"code\", Status.Security.AuthProviderTimeout.code().serialize(),\n-                            \"message\", \"An auth provider request timed out.\" ) ) ) );\n+      error(504,\n+        map(\"errors\", singletonList(map(\n+          \"code\", Status.Security.AuthProviderTimeout.code().serialize(),\n+          \"message\", \"An auth provider request timed out.\"))));\n \n-    private static ThrowingConsumer<HttpServletResponse, IOException> invalidAuthToken( final String message )\n+    private static ThrowingConsumer<HttpServletResponse, IOException> invalidAuthToken(final String message)\n     {\n-        return error( 401,\n-                map( \"errors\", singletonList( map(\n-                        \"code\", Status.Security.Unauthorized.code().serialize(),\n-                        \"message\", message ) ) ) );\n+        return error(401,\n+          map(\"errors\", singletonList(map(\n+            \"code\", Status.Security.Unauthorized.code().serialize(),\n+            \"message\", message))));\n     }\n \n     /**\n      * In order to avoid browsers popping up an auth box when using the Neo4j Browser, it sends us a special header.\n      * When we get that special header, we send a crippled authentication challenge back that the browser does not\n      * understand, which lets the Neo4j Browser handle auth on its own.\n-     *\n+     * <p>\n      * Otherwise, we send a regular basic auth challenge. This method adds the appropriate header depending on the\n      * inbound request.\n      */\n     private static ThrowingConsumer<HttpServletResponse, IOException> requestAuthentication(\n-            HttpServletRequest req, ThrowingConsumer<HttpServletResponse, IOException> responseGen )\n+      HttpServletRequest req, ThrowingConsumer<HttpServletResponse, IOException> responseGen)\n     {\n-        if ( \"true\".equals( req.getHeader( \"X-Ajax-Browser-Auth\" ) ) )\n+        if (\"true\".equals(req.getHeader(\"X-Ajax-Browser-Auth\")))\n         {\n             return res ->\n             {\n-                responseGen.accept( res );\n-                res.addHeader( HttpHeaders.WWW_AUTHENTICATE, \"None\" );\n+                responseGen.accept(res);\n+                res.addHeader(HttpHeaders.WWW_AUTHENTICATE, \"None\");\n             };\n-        }\n-        else\n+        } else\n         {\n             return res ->\n             {\n-                responseGen.accept( res );\n-                res.addHeader( HttpHeaders.WWW_AUTHENTICATE, \"Basic realm=\\\"Neo4j\\\"\" );\n+                responseGen.accept(res);\n+                res.addHeader(HttpHeaders.WWW_AUTHENTICATE, \"Basic realm=\\\"Neo4j\\\"\");\n             };\n         }\n     }\n \n-    private boolean whitelisted( String path )\n+    private boolean whitelisted(String path)\n     {\n-        for ( Pattern pattern : uriWhitelist )\n+        for (Pattern pattern : uriWhitelist)\n         {\n-            if ( pattern.matcher( path ).matches() )\n+            if (pattern.matcher(path).matches())\n             {\n                 return true;\n             }\n@@ -241,15 +237,14 @@ public class AuthorizationEnabledFilter extends AuthorizationFilter\n         return false;\n     }\n \n-    private String[] extractCredential( String header )\n+    private String[] extractCredential(String header)\n     {\n-        if ( header == null )\n+        if (header == null)\n         {\n             return null;\n-        }\n-        else\n+        } else\n         {\n-            return AuthorizationHeaders.decode( header );\n+            return AuthorizationHeaders.decode(header);\n         }\n     }\n }\n",
            "diff_size": 100
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
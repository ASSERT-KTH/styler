{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3456",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "40",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "114",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3456/BatchAppendLogEntries.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3456/BatchAppendLogEntries.java\nindex 22f8b3fad9a..3dbd10912f0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3456/BatchAppendLogEntries.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3456/BatchAppendLogEntries.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering.core.consensus.outcome;\n \n import java.io.IOException;\n@@ -32,68 +33,68 @@ import static java.lang.String.format;\n \n public class BatchAppendLogEntries implements RaftLogCommand\n {\n-    public final long baseIndex;\n-    public final int offset;\n-    public final RaftLogEntry[] entries;\n+  public final long baseIndex;\n+  public final int offset;\n+  public final RaftLogEntry[] entries;\n \n-    public BatchAppendLogEntries( long baseIndex, int offset, RaftLogEntry[] entries )\n-    {\n-        this.baseIndex = baseIndex;\n-        this.offset = offset;\n-        this.entries = entries;\n-    }\n+  public BatchAppendLogEntries(long baseIndex, int offset, RaftLogEntry[] entries)\n+  {\n+    this.baseIndex = baseIndex;\n+    this.offset = offset;\n+    this.entries = entries;\n+  }\n \n-    @Override\n-    public void dispatch( Handler handler ) throws IOException\n-    {\n-        handler.append( baseIndex + offset, Arrays.copyOfRange( entries, offset, entries.length ) );\n-    }\n+  @Override\n+  public void dispatch(Handler handler) throws IOException\n+  {\n+    handler.append(baseIndex + offset, Arrays.copyOfRange(entries, offset, entries.length));\n+  }\n \n-    @Override\n-    public void applyTo( RaftLog raftLog, Log log ) throws IOException\n+  @Override\n+  public void applyTo(RaftLog raftLog, Log log) throws IOException\n+  {\n+    long lastIndex = baseIndex + offset;\n+    if (lastIndex <= raftLog.appendIndex())\n     {\n-        long lastIndex = baseIndex + offset;\n-        if ( lastIndex <= raftLog.appendIndex() )\n-        {\n-            throw new IllegalStateException( \"Attempted to append over an existing entry starting at index \" + lastIndex );\n-        }\n-\n-        raftLog.append( Arrays.copyOfRange( entries, offset, entries.length ) );\n+      throw new IllegalStateException(\"Attempted to append over an existing entry starting at index \" + lastIndex);\n     }\n \n-    @Override\n-    public void applyTo( InFlightCache inFlightCache, Log log )\n-    {\n-        for ( int i = offset; i < entries.length; i++ )\n-        {\n-            inFlightCache.put( baseIndex + i , entries[i]);\n-        }\n-    }\n+    raftLog.append(Arrays.copyOfRange(entries, offset, entries.length));\n+  }\n \n-    @Override\n-    public boolean equals( Object o )\n+  @Override\n+  public void applyTo(InFlightCache inFlightCache, Log log)\n+  {\n+    for (int i = offset; i < entries.length; i++)\n     {\n-        if ( this == o )\n-        {\n-            return true;\n-        }\n-        if ( o == null || getClass() != o.getClass() )\n-        {\n-            return false;\n-        }\n-        BatchAppendLogEntries that = (BatchAppendLogEntries) o;\n-        return baseIndex == that.baseIndex && offset == that.offset && Arrays.equals( entries, that.entries );\n+      inFlightCache.put(baseIndex + i, entries[i]);\n     }\n+  }\n \n-    @Override\n-    public int hashCode()\n+  @Override\n+  public boolean equals(Object o)\n+  {\n+    if (this == o)\n     {\n-        return Objects.hash( baseIndex, offset, Arrays.hashCode( entries ) );\n+      return true;\n     }\n-\n-    @Override\n-    public String toString()\n+    if (o == null || getClass() != o.getClass())\n     {\n-        return format( \"BatchAppendLogEntries{baseIndex=%d, offset=%d, entries=%s}\", baseIndex, offset, Arrays.toString( entries ) );\n+      return false;\n     }\n+    BatchAppendLogEntries that = (BatchAppendLogEntries) o;\n+    return baseIndex == that.baseIndex && offset == that.offset && Arrays.equals(entries, that.entries);\n+  }\n+\n+  @Override\n+  public int hashCode()\n+  {\n+    return Objects.hash(baseIndex, offset, Arrays.hashCode(entries));\n+  }\n+\n+  @Override\n+  public String toString()\n+  {\n+    return format(\"BatchAppendLogEntries{baseIndex=%d, offset=%d, entries=%s}\", baseIndex, offset, Arrays.toString(entries));\n+  }\n }\n",
            "diff_size": 74
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3456/BatchAppendLogEntries.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3456/BatchAppendLogEntries.java\nindex 22f8b3fad9a..fe8c0fa949b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3456/BatchAppendLogEntries.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3456/BatchAppendLogEntries.java\n@@ -33,8 +33,10 @@ import static java.lang.String.format;\n public class BatchAppendLogEntries implements RaftLogCommand\n {\n     public final long baseIndex;\n-    public final int offset;\n-    public final RaftLogEntry[] entries;\n+\n+public final int offset;\n+\n+public final RaftLogEntry[] entries;\n \n     public BatchAppendLogEntries( long baseIndex, int offset, RaftLogEntry[] entries )\n     {\n@@ -66,7 +68,7 @@ public class BatchAppendLogEntries implements RaftLogCommand\n     {\n         for ( int i = offset; i < entries.length; i++ )\n         {\n-            inFlightCache.put( baseIndex + i , entries[i]);\n+            inFlightCache.put( baseIndex + i, entries[i]);\n         }\n     }\n \n@@ -77,11 +79,13 @@ public class BatchAppendLogEntries implements RaftLogCommand\n         {\n             return true;\n         }\n-        if ( o == null || getClass() != o.getClass() )\n+\n+if ( o == null || getClass() != o.getClass() )\n         {\n             return false;\n         }\n-        BatchAppendLogEntries that = (BatchAppendLogEntries) o;\n+\n+BatchAppendLogEntries that = (BatchAppendLogEntries) o;\n         return baseIndex == that.baseIndex && offset == that.offset && Arrays.equals( entries, that.entries );\n     }\n \n@@ -96,4 +100,4 @@ public class BatchAppendLogEntries implements RaftLogCommand\n     {\n         return format( \"BatchAppendLogEntries{baseIndex=%d, offset=%d, entries=%s}\", baseIndex, offset, Arrays.toString( entries ) );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 10
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
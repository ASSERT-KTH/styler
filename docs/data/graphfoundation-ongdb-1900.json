{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1900",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "84",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "97",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "104",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "125",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "130",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "58",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "15",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "172",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "172",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "174",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "174",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "193",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "194",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "205",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "205",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "205",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "208",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "208",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "208",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "210",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "210",
                    "column": "109",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "211",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "211",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "211",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "217",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "217",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "222",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "222",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "224",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "224",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "228",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "228",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "228",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "230",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "231",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "237",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "237",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "239",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "239",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "241",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "241",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "248",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "248",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "257",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "257",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "259",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "259",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "261",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "261",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "265",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "265",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "269",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "269",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "270",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "270",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "270",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "272",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "272",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "276",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "276",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "283",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "283",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "283",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "285",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "285",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "292",
                    "column": "62",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "292",
                    "column": "109",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "293",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "293",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "293",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "295",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "295",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "299",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "299",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "301",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "301",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "303",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "303",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "307",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "307",
                    "column": "19",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "311",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "311",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "314",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "314",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "319",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "319",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "327",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "327",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "329",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "329",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "332",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "332",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "334",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "334",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1900/BackupTool.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1900/BackupTool.java\nindex f522a16146e..1aebafdb5fa 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1900/BackupTool.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1900/BackupTool.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.backup;\n \n import java.io.File;\n@@ -52,295 +53,285 @@ import static org.neo4j.helpers.collection.MapUtil.stringMap;\n \n public class BackupTool\n {\n-    private static final String TO = \"to\";\n-    private static final String HOST = \"host\";\n-    private static final String PORT = \"port\";\n+  private static final String TO = \"to\";\n+  private static final String HOST = \"host\";\n+  private static final String PORT = \"port\";\n+\n+  private static final String FROM = \"from\";\n \n-    private static final String FROM = \"from\";\n+  private static final String VERIFY = \"verify\";\n+  private static final String CONFIG = \"config\";\n \n-    private static final String VERIFY = \"verify\";\n-    private static final String CONFIG = \"config\";\n+  private static final String CONSISTENCY_CHECKER = \"consistency-checker\";\n \n-    private static final String CONSISTENCY_CHECKER = \"consistency-checker\";\n+  private static final String TIMEOUT = \"timeout\";\n+  private static final String FORENSICS = \"gather-forensics\";\n+  public static final String DEFAULT_SCHEME = \"single\";\n+  static final String MISMATCHED_STORE_ID = \"You tried to perform a backup from database %s, \" +\n+      \"but the target directory contained a backup from database %s. \";\n \n-    private static final String TIMEOUT = \"timeout\";\n-    private static final String FORENSICS = \"gather-forensics\";\n-    public static final String DEFAULT_SCHEME = \"single\";\n-    static final String MISMATCHED_STORE_ID = \"You tried to perform a backup from database %s, \" +\n-            \"but the target directory contained a backup from database %s. \";\n+  static final String WRONG_FROM_ADDRESS_SYNTAX = \"Please properly specify a location to backup in the\" +\n+      \" form \" + dash(HOST) + \" <host> \" + dash(PORT) + \" <port>\";\n \n-    static final String WRONG_FROM_ADDRESS_SYNTAX = \"Please properly specify a location to backup in the\" +\n-            \" form \" + dash( HOST ) + \" <host> \" + dash( PORT ) + \" <port>\";\n+  static final String UNKNOWN_SCHEMA_MESSAGE_PATTERN = \"%s was specified as a backup module but it was not found. \" +\n+      \"Please make sure that the implementing service is on the classpath.\";\n \n-    static final String UNKNOWN_SCHEMA_MESSAGE_PATTERN = \"%s was specified as a backup module but it was not found. \" +\n-            \"Please make sure that the implementing service is on the classpath.\";\n+  static final String NO_SOURCE_SPECIFIED = \"Please specify \" + dash(HOST) + \" and optionally \" + dash(PORT) +\n+      \", examples:\\n\" +\n+      \"  \" + dash(HOST) + \" 192.168.1.34\\n\" +\n+      \"  \" + dash(HOST) + \" 192.168.1.34 \" + dash(PORT) + \" 1234\";\n \n-    static final String NO_SOURCE_SPECIFIED = \"Please specify \" + dash( HOST ) + \" and optionally \" + dash( PORT ) +\n-            \", examples:\\n\" +\n-            \"  \" + dash( HOST ) + \" 192.168.1.34\\n\" +\n-            \"  \" + dash( HOST ) + \" 192.168.1.34 \" + dash( PORT ) + \" 1234\";\n+  public static void main(String[] args)\n+  {\n+    System.err.println(\"WARNING: neo4j-backup is deprecated and support for it will be removed in a future\\n\" +\n+        \"version of Neo4j; please use neo4j-admin backup instead.\\n\");\n+    BackupTool tool = new BackupTool(new BackupProtocolService(), System.out);\n+    try\n+    {\n+      BackupOutcome backupOutcome = tool.run(args);\n \n-    public static void main( String[] args )\n+      if (!backupOutcome.isConsistent())\n+      {\n+        exitFailure(\"WARNING: The database is inconsistent.\");\n+      }\n+    } catch (ToolFailureException e)\n     {\n-        System.err.println(\"WARNING: neo4j-backup is deprecated and support for it will be removed in a future\\n\" +\n-                \"version of Neo4j; please use neo4j-admin backup instead.\\n\");\n-        BackupTool tool = new BackupTool( new BackupProtocolService(), System.out );\n-        try\n-        {\n-            BackupOutcome backupOutcome = tool.run( args );\n-\n-            if ( !backupOutcome.isConsistent() )\n-            {\n-                exitFailure( \"WARNING: The database is inconsistent.\" );\n-            }\n-        }\n-        catch ( ToolFailureException e )\n-        {\n-            System.out.println( \"Backup failed.\" );\n-            exitFailure( e.getMessage() );\n-        }\n+      System.out.println(\"Backup failed.\");\n+      exitFailure(e.getMessage());\n     }\n+  }\n+\n+  private final BackupProtocolService backupProtocolService;\n+  private final PrintStream systemOut;\n \n-    private final BackupProtocolService backupProtocolService;\n-    private final PrintStream systemOut;\n+  BackupTool(BackupProtocolService backupProtocolService, PrintStream systemOut)\n+  {\n+    this.backupProtocolService = backupProtocolService;\n+    this.systemOut = systemOut;\n+  }\n \n-    BackupTool( BackupProtocolService backupProtocolService, PrintStream systemOut )\n+  BackupOutcome run(String[] args) throws ToolFailureException\n+  {\n+    Args arguments = Args.withFlags(VERIFY).parse(args);\n+\n+    if (!arguments.hasNonNull(TO))\n     {\n-        this.backupProtocolService = backupProtocolService;\n-        this.systemOut = systemOut;\n+      throw new ToolFailureException(\"Specify target location with \" + dash(TO) + \" <target-directory>\");\n     }\n \n-    BackupOutcome run( String[] args ) throws ToolFailureException\n+    if (arguments.hasNonNull(FROM) && !arguments.has(HOST) && !arguments.has(PORT))\n+    {\n+      return runBackupWithLegacyArgs(arguments);\n+    } else if (arguments.hasNonNull(HOST))\n+    {\n+      return runBackup(arguments);\n+    } else\n     {\n-        Args arguments = Args.withFlags( VERIFY ).parse( args );\n-\n-        if ( !arguments.hasNonNull( TO ) )\n-        {\n-            throw new ToolFailureException( \"Specify target location with \" + dash( TO ) + \" <target-directory>\" );\n-        }\n-\n-        if ( arguments.hasNonNull( FROM ) && !arguments.has( HOST ) && !arguments.has( PORT ) )\n-        {\n-            return runBackupWithLegacyArgs( arguments );\n-        }\n-        else if ( arguments.hasNonNull( HOST ) )\n-        {\n-            return runBackup( arguments );\n-        }\n-        else\n-        {\n-            throw new ToolFailureException( NO_SOURCE_SPECIFIED );\n-        }\n+      throw new ToolFailureException(NO_SOURCE_SPECIFIED);\n     }\n+  }\n \n-    private BackupOutcome runBackupWithLegacyArgs( Args args ) throws ToolFailureException\n-    {\n-        String from = args.get( FROM ).trim();\n-        Path to = Paths.get( args.get( TO ).trim() );\n-        Config tuningConfiguration = readConfiguration( args );\n-        boolean forensics = args.getBoolean( FORENSICS, false, true );\n-        ConsistencyCheck consistencyCheck = parseConsistencyChecker( args );\n+  private BackupOutcome runBackupWithLegacyArgs(Args args) throws ToolFailureException\n+  {\n+    String from = args.get(FROM).trim();\n+    Path to = Paths.get(args.get(TO).trim());\n+    Config tuningConfiguration = readConfiguration(args);\n+    boolean forensics = args.getBoolean(FORENSICS, false, true);\n+    ConsistencyCheck consistencyCheck = parseConsistencyChecker(args);\n \n-        long timeout = args.getDuration( TIMEOUT, BackupClient.BIG_READ_TIMEOUT );\n+    long timeout = args.getDuration(TIMEOUT, BackupClient.BIG_READ_TIMEOUT);\n \n-        URI backupURI = resolveBackupUri( from, args, tuningConfiguration );\n+    URI backupURI = resolveBackupUri(from, args, tuningConfiguration);\n \n-        HostnamePort hostnamePort = newHostnamePort( backupURI );\n+    HostnamePort hostnamePort = newHostnamePort(backupURI);\n \n-        return executeBackup( hostnamePort, to, consistencyCheck, tuningConfiguration, timeout, forensics );\n-    }\n+    return executeBackup(hostnamePort, to, consistencyCheck, tuningConfiguration, timeout, forensics);\n+  }\n \n-    private static ConsistencyCheck parseConsistencyChecker( Args args )\n+  private static ConsistencyCheck parseConsistencyChecker(Args args)\n+  {\n+    boolean verify = args.getBoolean(VERIFY, true, true);\n+    if (verify)\n     {\n-        boolean verify = args.getBoolean( VERIFY, true, true );\n-        if ( verify )\n-        {\n-            String consistencyCheckerName = args.get( CONSISTENCY_CHECKER, ConsistencyCheck.FULL.name(),\n-                    ConsistencyCheck.FULL.name() );\n-            return ConsistencyCheck.fromString( consistencyCheckerName );\n-        }\n-        return ConsistencyCheck.NONE;\n+      String consistencyCheckerName = args.get(CONSISTENCY_CHECKER, ConsistencyCheck.FULL.name(),\n+          ConsistencyCheck.FULL.name());\n+      return ConsistencyCheck.fromString(consistencyCheckerName);\n     }\n-\n-    private BackupOutcome runBackup( Args args ) throws ToolFailureException\n+    return ConsistencyCheck.NONE;\n+  }\n+\n+  private BackupOutcome runBackup(Args args) throws ToolFailureException\n+  {\n+    String host = args.get(HOST).trim();\n+    int port = args.getNumber(PORT, BackupServer.DEFAULT_PORT).intValue();\n+    Path to = Paths.get(args.get(TO).trim());\n+    Config tuningConfiguration = readConfiguration(args);\n+    boolean forensics = args.getBoolean(FORENSICS, false, true);\n+    ConsistencyCheck consistencyCheck = parseConsistencyChecker(args);\n+\n+    if (host.contains(\":\"))\n     {\n-        String host = args.get( HOST ).trim();\n-        int port = args.getNumber( PORT, BackupServer.DEFAULT_PORT ).intValue();\n-        Path to = Paths.get( args.get( TO ).trim() );\n-        Config tuningConfiguration = readConfiguration( args );\n-        boolean forensics = args.getBoolean( FORENSICS, false, true );\n-        ConsistencyCheck consistencyCheck = parseConsistencyChecker( args );\n-\n-        if ( host.contains( \":\" ) )\n-        {\n-            if ( !host.startsWith( \"[\" ) )\n-            {\n-                host = \"[\" + host;\n-            }\n-            if ( !host.endsWith( \"]\" ) )\n-            {\n-                host += \"]\";\n-            }\n-        }\n-\n-        long timeout = args.getDuration( TIMEOUT, BackupClient.BIG_READ_TIMEOUT );\n-\n-        URI backupURI = newURI( DEFAULT_SCHEME + \"://\" + host + \":\" + port ); // a bit of validation\n-\n-        HostnamePort hostnamePort = newHostnamePort( backupURI );\n-\n-        return executeBackup( hostnamePort, to, consistencyCheck, tuningConfiguration, timeout, forensics );\n+      if (!host.startsWith(\"[\"))\n+      {\n+        host = \"[\" + host;\n+      }\n+      if (!host.endsWith(\"]\"))\n+      {\n+        host += \"]\";\n+      }\n     }\n \n-    BackupOutcome executeBackup( HostnamePort hostnamePort, Path to, ConsistencyCheck consistencyCheck,\n-                                 Config config, long timeout, boolean forensics ) throws ToolFailureException\n+    long timeout = args.getDuration(TIMEOUT, BackupClient.BIG_READ_TIMEOUT);\n+\n+    URI backupURI = newURI(DEFAULT_SCHEME + \"://\" + host + \":\" + port); // a bit of validation\n+\n+    HostnamePort hostnamePort = newHostnamePort(backupURI);\n+\n+    return executeBackup(hostnamePort, to, consistencyCheck, tuningConfiguration, timeout, forensics);\n+  }\n+\n+  BackupOutcome executeBackup(HostnamePort hostnamePort, Path to, ConsistencyCheck consistencyCheck,\n+                              Config config, long timeout, boolean forensics) throws ToolFailureException\n+  {\n+    try\n+    {\n+      systemOut.println(\"Performing backup from '\" + hostnamePort + \"'\");\n+      String host = hostnamePort.getHost();\n+      int port = hostnamePort.getPort();\n+\n+      BackupOutcome outcome = backupProtocolService.doIncrementalBackupOrFallbackToFull(host, port, to, consistencyCheck, config, timeout, forensics);\n+      systemOut.println(\"Done\");\n+      return outcome;\n+    } catch (UnexpectedStoreVersionException | IncrementalBackupNotPossibleException e)\n+    {\n+      throw new ToolFailureException(e.getMessage(), e);\n+    } catch (MismatchingStoreIdException e)\n+    {\n+      throw new ToolFailureException(String.format(MISMATCHED_STORE_ID, e.getExpected(), e.getEncountered()));\n+    } catch (ComException e)\n     {\n-        try\n-        {\n-            systemOut.println( \"Performing backup from '\" + hostnamePort + \"'\" );\n-            String host = hostnamePort.getHost();\n-            int port = hostnamePort.getPort();\n-\n-            BackupOutcome outcome = backupProtocolService.doIncrementalBackupOrFallbackToFull( host, port, to, consistencyCheck, config, timeout, forensics );\n-            systemOut.println( \"Done\" );\n-            return outcome;\n-        }\n-        catch ( UnexpectedStoreVersionException | IncrementalBackupNotPossibleException e )\n-        {\n-            throw new ToolFailureException( e.getMessage(), e );\n-        }\n-        catch ( MismatchingStoreIdException e )\n-        {\n-            throw new ToolFailureException( String.format( MISMATCHED_STORE_ID, e.getExpected(), e.getEncountered() ) );\n-        }\n-        catch ( ComException e )\n-        {\n-            throw new ToolFailureException( \"Couldn't connect to '\" + hostnamePort + \"'\", e );\n-        }\n+      throw new ToolFailureException(\"Couldn't connect to '\" + hostnamePort + \"'\", e);\n     }\n+  }\n \n-    private static Config readConfiguration( Args arguments ) throws ToolFailureException\n+  private static Config readConfiguration(Args arguments) throws ToolFailureException\n+  {\n+    Map<String, String> specifiedConfig = stringMap();\n+\n+    String configFilePath = arguments.get(CONFIG, null);\n+    if (configFilePath != null)\n     {\n-        Map<String, String> specifiedConfig = stringMap();\n-\n-        String configFilePath = arguments.get( CONFIG, null );\n-        if ( configFilePath != null )\n-        {\n-            File configFile = new File( configFilePath );\n-            try\n-            {\n-                specifiedConfig = MapUtil.load( configFile );\n-            }\n-            catch ( IOException e )\n-            {\n-                throw new ToolFailureException( String.format( \"Could not read configuration file [%s]\",\n-                        configFilePath ), e );\n-            }\n-        }\n-        return Config.defaults( specifiedConfig );\n+      File configFile = new File(configFilePath);\n+      try\n+      {\n+        specifiedConfig = MapUtil.load(configFile);\n+      } catch (IOException e)\n+      {\n+        throw new ToolFailureException(String.format(\"Could not read configuration file [%s]\",\n+            configFilePath), e);\n+      }\n     }\n+    return Config.defaults(specifiedConfig);\n+  }\n \n-    private static URI resolveBackupUri( String from, Args arguments, Config config ) throws ToolFailureException\n+  private static URI resolveBackupUri(String from, Args arguments, Config config) throws ToolFailureException\n+  {\n+    if (from.contains(\",\"))\n     {\n-        if ( from.contains( \",\" ) )\n-        {\n-            if ( !from.startsWith( \"ha://\" ) )\n-            {\n-                checkNoSchemaIsPresent( from );\n-                from = \"ha://\" + from;\n-            }\n-            return resolveUriWithProvider( \"ha\", config, from, arguments );\n-        }\n-        if ( !from.startsWith( \"single://\" ) )\n-        {\n-            from = from.replace( \"ha://\", \"\" );\n-            checkNoSchemaIsPresent( from );\n-            from = \"single://\" + from;\n-        }\n-        return newURI( from );\n+      if (!from.startsWith(\"ha://\"))\n+      {\n+        checkNoSchemaIsPresent(from);\n+        from = \"ha://\" + from;\n+      }\n+      return resolveUriWithProvider(\"ha\", config, from, arguments);\n     }\n-\n-    private static void checkNoSchemaIsPresent( String address ) throws ToolFailureException\n+    if (!from.startsWith(\"single://\"))\n     {\n-        if ( address.contains( \"://\" ) )\n-        {\n-            throw new ToolFailureException( WRONG_FROM_ADDRESS_SYNTAX );\n-        }\n+      from = from.replace(\"ha://\", \"\");\n+      checkNoSchemaIsPresent(from);\n+      from = \"single://\" + from;\n     }\n+    return newURI(from);\n+  }\n \n-    private static URI newURI( String uriString ) throws ToolFailureException\n+  private static void checkNoSchemaIsPresent(String address) throws ToolFailureException\n+  {\n+    if (address.contains(\"://\"))\n     {\n-        try\n-        {\n-            return new URI( uriString );\n-        }\n-        catch ( URISyntaxException e )\n-        {\n-            throw new ToolFailureException( WRONG_FROM_ADDRESS_SYNTAX );\n-        }\n+      throw new ToolFailureException(WRONG_FROM_ADDRESS_SYNTAX);\n     }\n+  }\n \n-    private static URI resolveUriWithProvider( String providerName, Config config, String from, Args args )\n-            throws ToolFailureException\n+  private static URI newURI(String uriString) throws ToolFailureException\n+  {\n+    try\n+    {\n+      return new URI(uriString);\n+    } catch (URISyntaxException e)\n     {\n-        BackupExtensionService service;\n-        try\n-        {\n-            service = Service.load( BackupExtensionService.class, providerName );\n-        }\n-        catch ( NoSuchElementException e )\n-        {\n-            throw new ToolFailureException( String.format( UNKNOWN_SCHEMA_MESSAGE_PATTERN, providerName ) );\n-        }\n-\n-        try\n-        {\n-            ZoneId logTimeZone = config.get( GraphDatabaseSettings.db_timezone ).getZoneId();\n-            FormattedLogProvider userLogProvider = FormattedLogProvider.withZoneId( logTimeZone ).toOutputStream( System.out );\n-            return service.resolve( from, args, new SimpleLogService( userLogProvider, NullLogProvider.getInstance() ) );\n-        }\n-        catch ( Throwable t )\n-        {\n-            throw new ToolFailureException( t.getMessage() );\n-        }\n+      throw new ToolFailureException(WRONG_FROM_ADDRESS_SYNTAX);\n     }\n+  }\n \n-    private static HostnamePort newHostnamePort( URI backupURI ) throws ToolFailureException\n+  private static URI resolveUriWithProvider(String providerName, Config config, String from, Args args)\n+      throws ToolFailureException\n+  {\n+    BackupExtensionService service;\n+    try\n     {\n-        if ( backupURI == null || backupURI.getHost() == null )\n-        {\n-            throw new ToolFailureException( WRONG_FROM_ADDRESS_SYNTAX );\n-        }\n-        String host = backupURI.getHost();\n-        int port = backupURI.getPort();\n-        if ( port == -1 )\n-        {\n-            port = BackupServer.DEFAULT_PORT;\n-        }\n-        return new HostnamePort( host, port );\n+      service = Service.load(BackupExtensionService.class, providerName);\n+    } catch (NoSuchElementException e)\n+    {\n+      throw new ToolFailureException(String.format(UNKNOWN_SCHEMA_MESSAGE_PATTERN, providerName));\n     }\n \n-    private static String dash( String name )\n+    try\n+    {\n+      ZoneId logTimeZone = config.get(GraphDatabaseSettings.db_timezone).getZoneId();\n+      FormattedLogProvider userLogProvider = FormattedLogProvider.withZoneId(logTimeZone).toOutputStream(System.out);\n+      return service.resolve(from, args, new SimpleLogService(userLogProvider, NullLogProvider.getInstance()));\n+    } catch (Throwable t)\n     {\n-        return \"-\" + name;\n+      throw new ToolFailureException(t.getMessage());\n     }\n+  }\n \n-    static void exitFailure( String msg )\n+  private static HostnamePort newHostnamePort(URI backupURI) throws ToolFailureException\n+  {\n+    if (backupURI == null || backupURI.getHost() == null)\n+    {\n+      throw new ToolFailureException(WRONG_FROM_ADDRESS_SYNTAX);\n+    }\n+    String host = backupURI.getHost();\n+    int port = backupURI.getPort();\n+    if (port == -1)\n+    {\n+      port = BackupServer.DEFAULT_PORT;\n+    }\n+    return new HostnamePort(host, port);\n+  }\n+\n+  private static String dash(String name)\n+  {\n+    return \"-\" + name;\n+  }\n+\n+  static void exitFailure(String msg)\n+  {\n+    System.out.println(msg);\n+    System.exit(1);\n+  }\n+\n+  static class ToolFailureException extends Exception\n+  {\n+    ToolFailureException(String message)\n     {\n-        System.out.println( msg );\n-        System.exit( 1 );\n+      super(message);\n     }\n \n-    static class ToolFailureException extends Exception\n+    ToolFailureException(String message, Throwable cause)\n     {\n-        ToolFailureException( String message )\n-        {\n-            super( message );\n-        }\n-\n-        ToolFailureException( String message, Throwable cause )\n-        {\n-            super( message, cause );\n-        }\n+      super(message, cause);\n     }\n+  }\n }\n",
            "diff_size": 370
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "70",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 758).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "70",
                    "column": "333",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "70",
                    "column": "520",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "70",
                    "column": "758",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "74",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 180).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "176",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 180).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1900/BackupTool.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1900/BackupTool.java\nindex f522a16146e..f6c17f0c4dd 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1900/BackupTool.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1900/BackupTool.java\n@@ -65,31 +65,18 @@ public class BackupTool\n \n     private static final String TIMEOUT = \"timeout\";\n     private static final String FORENSICS = \"gather-forensics\";\n-    public static final String DEFAULT_SCHEME = \"single\";\n-    static final String MISMATCHED_STORE_ID = \"You tried to perform a backup from database %s, \" +\n-            \"but the target directory contained a backup from database %s. \";\n \n-    static final String WRONG_FROM_ADDRESS_SYNTAX = \"Please properly specify a location to backup in the\" +\n-            \" form \" + dash( HOST ) + \" <host> \" + dash( PORT ) + \" <port>\";\n+public static final String DEFAULT_SCHEME = \"single\";\n+    static final String MISMATCHED_STORE_ID = \"You tried to perform a backup from database %s, \" + \"but the target directory contained a backup from database %s. \"; static final String WRONG_FROM_ADDRESS_SYNTAX = \"Please properly specify a location to backup in the\" + \" form \" + dash( HOST ) + \" <host> \" + dash( PORT ) + \" <port>\"; static final String UNKNOWN_SCHEMA_MESSAGE_PATTERN = \"%s was specified as a backup module but it was not found. \" + \"Please make sure that the implementing service is on the classpath.\"; static final String NO_SOURCE_SPECIFIED = \"Please specify \" + dash( HOST ) + \" and optionally \" + dash( PORT ) + \", examples:\\n\" + \"  \" + dash( HOST ) + \" 192.168.1.34\\n\" + \"  \" + dash( HOST ) + \" 192.168.1.34 \" + dash( PORT ) + \" 1234\";\n \n-    static final String UNKNOWN_SCHEMA_MESSAGE_PATTERN = \"%s was specified as a backup module but it was not found. \" +\n-            \"Please make sure that the implementing service is on the classpath.\";\n-\n-    static final String NO_SOURCE_SPECIFIED = \"Please specify \" + dash( HOST ) + \" and optionally \" + dash( PORT ) +\n-            \", examples:\\n\" +\n-            \"  \" + dash( HOST ) + \" 192.168.1.34\\n\" +\n-            \"  \" + dash( HOST ) + \" 192.168.1.34 \" + dash( PORT ) + \" 1234\";\n-\n-    public static void main( String[] args )\n+public static void main( String[] args )\n     {\n-        System.err.println(\"WARNING: neo4j-backup is deprecated and support for it will be removed in a future\\n\" +\n-                \"version of Neo4j; please use neo4j-admin backup instead.\\n\");\n-        BackupTool tool = new BackupTool( new BackupProtocolService(), System.out );\n+        System.err.println( \"WARNING: neo4j-backup is deprecated and support for it will be removed in a future\\n\" + \"version of Neo4j; please use neo4j-admin backup instead.\\n\" );\n+BackupTool tool = new BackupTool( new BackupProtocolService(), System.out );\n         try\n         {\n             BackupOutcome backupOutcome = tool.run( args );\n-\n-            if ( !backupOutcome.isConsistent() )\n+if ( !backupOutcome.isConsistent() )\n             {\n                 exitFailure( \"WARNING: The database is inconsistent.\" );\n             }\n@@ -113,8 +100,7 @@ public class BackupTool\n     BackupOutcome run( String[] args ) throws ToolFailureException\n     {\n         Args arguments = Args.withFlags( VERIFY ).parse( args );\n-\n-        if ( !arguments.hasNonNull( TO ) )\n+if ( !arguments.hasNonNull( TO ) )\n         {\n             throw new ToolFailureException( \"Specify target location with \" + dash( TO ) + \" <target-directory>\" );\n         }\n@@ -142,12 +128,9 @@ public class BackupTool\n         ConsistencyCheck consistencyCheck = parseConsistencyChecker( args );\n \n         long timeout = args.getDuration( TIMEOUT, BackupClient.BIG_READ_TIMEOUT );\n-\n-        URI backupURI = resolveBackupUri( from, args, tuningConfiguration );\n-\n-        HostnamePort hostnamePort = newHostnamePort( backupURI );\n-\n-        return executeBackup( hostnamePort, to, consistencyCheck, tuningConfiguration, timeout, forensics );\n+URI backupURI = resolveBackupUri( from, args, tuningConfiguration );\n+HostnamePort hostnamePort = newHostnamePort( backupURI );\n+return executeBackup( hostnamePort, to, consistencyCheck, tuningConfiguration, timeout, forensics );\n     }\n \n     private static ConsistencyCheck parseConsistencyChecker( Args args )\n@@ -155,11 +138,11 @@ public class BackupTool\n         boolean verify = args.getBoolean( VERIFY, true, true );\n         if ( verify )\n         {\n-            String consistencyCheckerName = args.get( CONSISTENCY_CHECKER, ConsistencyCheck.FULL.name(),\n-                    ConsistencyCheck.FULL.name() );\n-            return ConsistencyCheck.fromString( consistencyCheckerName );\n+            String consistencyCheckerName = args.get( CONSISTENCY_CHECKER, ConsistencyCheck.FULL.name(), ConsistencyCheck.FULL.name() );\n+return ConsistencyCheck.fromString( consistencyCheckerName );\n         }\n-        return ConsistencyCheck.NONE;\n+\n+return ConsistencyCheck.NONE;\n     }\n \n     private BackupOutcome runBackup( Args args ) throws ToolFailureException\n@@ -170,38 +153,34 @@ public class BackupTool\n         Config tuningConfiguration = readConfiguration( args );\n         boolean forensics = args.getBoolean( FORENSICS, false, true );\n         ConsistencyCheck consistencyCheck = parseConsistencyChecker( args );\n-\n-        if ( host.contains( \":\" ) )\n+if ( host.contains( \":\" ) )\n         {\n             if ( !host.startsWith( \"[\" ) )\n             {\n                 host = \"[\" + host;\n             }\n-            if ( !host.endsWith( \"]\" ) )\n+\n+if ( !host.endsWith( \"]\" ) )\n             {\n                 host += \"]\";\n             }\n         }\n \n         long timeout = args.getDuration( TIMEOUT, BackupClient.BIG_READ_TIMEOUT );\n-\n-        URI backupURI = newURI( DEFAULT_SCHEME + \"://\" + host + \":\" + port ); // a bit of validation\n+URI backupURI = newURI( DEFAULT_SCHEME + \"://\" + host + \":\" + port ); // a bit of validation\n \n         HostnamePort hostnamePort = newHostnamePort( backupURI );\n-\n-        return executeBackup( hostnamePort, to, consistencyCheck, tuningConfiguration, timeout, forensics );\n+return executeBackup( hostnamePort, to, consistencyCheck, tuningConfiguration, timeout, forensics );\n     }\n \n-    BackupOutcome executeBackup( HostnamePort hostnamePort, Path to, ConsistencyCheck consistencyCheck,\n-                                 Config config, long timeout, boolean forensics ) throws ToolFailureException\n-    {\n+    BackupOutcome executeBackup( HostnamePort hostnamePort, Path to, ConsistencyCheck consistencyCheck, Config config, long timeout, boolean forensics ) throws ToolFailureException\n+{\n         try\n         {\n             systemOut.println( \"Performing backup from '\" + hostnamePort + \"'\" );\n             String host = hostnamePort.getHost();\n             int port = hostnamePort.getPort();\n-\n-            BackupOutcome outcome = backupProtocolService.doIncrementalBackupOrFallbackToFull( host, port, to, consistencyCheck, config, timeout, forensics );\n+BackupOutcome outcome = backupProtocolService.doIncrementalBackupOrFallbackToFull( host, port, to, consistencyCheck, config, timeout, forensics );\n             systemOut.println( \"Done\" );\n             return outcome;\n         }\n@@ -221,9 +200,8 @@ public class BackupTool\n \n     private static Config readConfiguration( Args arguments ) throws ToolFailureException\n     {\n-        Map<String, String> specifiedConfig = stringMap();\n-\n-        String configFilePath = arguments.get( CONFIG, null );\n+        Map<String,String> specifiedConfig = stringMap();\n+String configFilePath = arguments.get( CONFIG, null );\n         if ( configFilePath != null )\n         {\n             File configFile = new File( configFilePath );\n@@ -235,7 +213,7 @@ public class BackupTool\n             {\n                 throw new ToolFailureException( String.format( \"Could not read configuration file [%s]\",\n                         configFilePath ), e );\n-            }\n+    }\n         }\n         return Config.defaults( specifiedConfig );\n     }\n@@ -249,15 +227,18 @@ public class BackupTool\n                 checkNoSchemaIsPresent( from );\n                 from = \"ha://\" + from;\n             }\n-            return resolveUriWithProvider( \"ha\", config, from, arguments );\n+\n+return resolveUriWithProvider( \"ha\", config, from, arguments );\n         }\n-        if ( !from.startsWith( \"single://\" ) )\n+\n+if ( !from.startsWith( \"single://\" ) )\n         {\n             from = from.replace( \"ha://\", \"\" );\n             checkNoSchemaIsPresent( from );\n             from = \"single://\" + from;\n         }\n-        return newURI( from );\n+\n+return newURI( from );\n     }\n \n     private static void checkNoSchemaIsPresent( String address ) throws ToolFailureException\n@@ -280,9 +261,8 @@ public class BackupTool\n         }\n     }\n \n-    private static URI resolveUriWithProvider( String providerName, Config config, String from, Args args )\n-            throws ToolFailureException\n-    {\n+    private static URI resolveUriWithProvider( String providerName, Config config, String from, Args args ) throws ToolFailureException\n+{\n         BackupExtensionService service;\n         try\n         {\n@@ -311,7 +291,8 @@ public class BackupTool\n         {\n             throw new ToolFailureException( WRONG_FROM_ADDRESS_SYNTAX );\n         }\n-        String host = backupURI.getHost();\n+\n+String host = backupURI.getHost();\n         int port = backupURI.getPort();\n         if ( port == -1 )\n         {\n@@ -343,4 +324,4 @@ public class BackupTool\n             super( message, cause );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 61
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
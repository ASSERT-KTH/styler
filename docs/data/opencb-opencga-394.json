{
    "project_name": "opencb-opencga",
    "error_id": "394",
    "information": {
        "errors": [
            {
                "line": "40",
                "severity": "error",
                "message": "Line is longer than 140 characters (found 168).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "                assertEquals(sample.getSampleId(), sample.getData().get(study.getSampleDataKeyPosition(\"NAME\")));\n            }\n            assertEquals(study.getSamples(), engine.getSampleData(variant.toString(), study.getStudyId(), new QueryOptions()).first().getStudies().get(0).getSamples());\n        }\n    }\n",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "40",
                    "severity": "error",
                    "message": "Line is longer than 140 characters (found 152).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/errored/1/394/VariantStorageEngineNumericSampleTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/styler/394/VariantStorageEngineNumericSampleTest.java\nindex 37a76156285..963b48e133a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/errored/1/394/VariantStorageEngineNumericSampleTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/styler/394/VariantStorageEngineNumericSampleTest.java\n@@ -37,7 +37,9 @@ public abstract class VariantStorageEngineNumericSampleTest extends VariantStora\n             for (SampleEntry sample : study.getSamples()) {\n                 assertEquals(sample.getSampleId(), sample.getData().get(study.getSampleDataKeyPosition(\"NAME\")));\n             }\n-            assertEquals(study.getSamples(), engine.getSampleData(variant.toString(), study.getStudyId(), new QueryOptions()).first().getStudies().get(0).getSamples());\n+            assertEquals(study.getSamples(), engine.getSampleData(variant.toString(), study.getStudyId(), new QueryOptions()).first().getStudies().get(0\n+        )\n+        .getSamples());\n         }\n     }\n \n",
            "diff_size": 3
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/errored/1/394/VariantStorageEngineNumericSampleTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/intellij/394/VariantStorageEngineNumericSampleTest.java\nindex 37a76156285..f0df1a1adef 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/errored/1/394/VariantStorageEngineNumericSampleTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/intellij/394/VariantStorageEngineNumericSampleTest.java\n@@ -18,27 +18,28 @@ import static org.junit.Assert.assertEquals;\n \n public abstract class VariantStorageEngineNumericSampleTest extends VariantStorageBaseTest {\n \n-    public static final List<String> SAMPLES = Arrays.asList(\"SAMPLE_1\", \"1\", \"2\", \"4\");\n+  public static final List<String> SAMPLES = Arrays.asList(\"SAMPLE_1\", \"1\", \"2\", \"4\");\n \n-    @Test\n-    public void index() throws Exception {\n-        StudyMetadata studyMetadata = newStudyMetadata();\n-        VariantStorageEngine engine = getVariantStorageEngine();\n-        runDefaultETL(getResourceUri(\"variant-test-numeric-sample.vcf\"), engine, studyMetadata,\n-                new ObjectMap()\n-                        .append(VariantStorageOptions.ANNOTATE.key(), true)\n-                        .append(VariantStorageOptions.STATS_CALCULATE.key(), true)\n-        );\n-        VariantDBIterator iterator = engine.iterator(new Query(VariantQueryParam.INCLUDE_SAMPLE_ID.key(), true), new QueryOptions());\n-        while (iterator.hasNext()) {\n-            Variant variant = iterator.next();\n-            StudyEntry study = variant.getStudy(STUDY_NAME);\n-            assertEquals(SAMPLES, study.getOrderedSamplesName());\n-            for (SampleEntry sample : study.getSamples()) {\n-                assertEquals(sample.getSampleId(), sample.getData().get(study.getSampleDataKeyPosition(\"NAME\")));\n-            }\n-            assertEquals(study.getSamples(), engine.getSampleData(variant.toString(), study.getStudyId(), new QueryOptions()).first().getStudies().get(0).getSamples());\n-        }\n+  @Test\n+  public void index() throws Exception {\n+    StudyMetadata studyMetadata = newStudyMetadata();\n+    VariantStorageEngine engine = getVariantStorageEngine();\n+    runDefaultETL(getResourceUri(\"variant-test-numeric-sample.vcf\"), engine, studyMetadata,\n+        new ObjectMap()\n+            .append(VariantStorageOptions.ANNOTATE.key(), true)\n+            .append(VariantStorageOptions.STATS_CALCULATE.key(), true)\n+    );\n+    VariantDBIterator iterator = engine.iterator(new Query(VariantQueryParam.INCLUDE_SAMPLE_ID.key(), true), new QueryOptions());\n+    while (iterator.hasNext()) {\n+      Variant variant = iterator.next();\n+      StudyEntry study = variant.getStudy(STUDY_NAME);\n+      assertEquals(SAMPLES, study.getOrderedSamplesName());\n+      for (SampleEntry sample : study.getSamples()) {\n+        assertEquals(sample.getSampleId(), sample.getData().get(study.getSampleDataKeyPosition(\"NAME\")));\n+      }\n+      assertEquals(study.getSamples(),\n+          engine.getSampleData(variant.toString(), study.getStudyId(), new QueryOptions()).first().getStudies().get(0).getSamples());\n     }\n+  }\n \n }\n",
            "diff_size": 21
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "39",
                    "severity": "error",
                    "message": "Line is longer than 140 characters (found 168).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/errored/1/394/VariantStorageEngineNumericSampleTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/naturalize/394/VariantStorageEngineNumericSampleTest.java\nindex 37a76156285..bb259a31c27 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/errored/1/394/VariantStorageEngineNumericSampleTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/naturalize/394/VariantStorageEngineNumericSampleTest.java\n@@ -27,8 +27,7 @@ public abstract class VariantStorageEngineNumericSampleTest extends VariantStora\n         runDefaultETL(getResourceUri(\"variant-test-numeric-sample.vcf\"), engine, studyMetadata,\n                 new ObjectMap()\n                         .append(VariantStorageOptions.ANNOTATE.key(), true)\n-                        .append(VariantStorageOptions.STATS_CALCULATE.key(), true)\n-        );\n+                        .append(VariantStorageOptions.STATS_CALCULATE.key(), true));\n         VariantDBIterator iterator = engine.iterator(new Query(VariantQueryParam.INCLUDE_SAMPLE_ID.key(), true), new QueryOptions());\n         while (iterator.hasNext()) {\n             Variant variant = iterator.next();\n@@ -41,4 +40,4 @@ public abstract class VariantStorageEngineNumericSampleTest extends VariantStora\n         }\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "40",
                    "severity": "error",
                    "message": "Line is longer than 140 characters (found 152).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/errored/1/394/VariantStorageEngineNumericSampleTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/styler_random/394/VariantStorageEngineNumericSampleTest.java\nindex 37a76156285..963b48e133a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/errored/1/394/VariantStorageEngineNumericSampleTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/styler_random/394/VariantStorageEngineNumericSampleTest.java\n@@ -37,7 +37,9 @@ public abstract class VariantStorageEngineNumericSampleTest extends VariantStora\n             for (SampleEntry sample : study.getSamples()) {\n                 assertEquals(sample.getSampleId(), sample.getData().get(study.getSampleDataKeyPosition(\"NAME\")));\n             }\n-            assertEquals(study.getSamples(), engine.getSampleData(variant.toString(), study.getStudyId(), new QueryOptions()).first().getStudies().get(0).getSamples());\n+            assertEquals(study.getSamples(), engine.getSampleData(variant.toString(), study.getStudyId(), new QueryOptions()).first().getStudies().get(0\n+        )\n+        .getSamples());\n         }\n     }\n \n",
            "diff_size": 3
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "41",
                    "column": "12",
                    "severity": "error",
                    "message": "',' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                },
                {
                    "line": "43",
                    "column": "8",
                    "severity": "error",
                    "message": "',' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/errored/1/394/VariantStorageEngineNumericSampleTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/styler_three_grams/394/VariantStorageEngineNumericSampleTest.java\nindex 37a76156285..732b427ba00 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/errored/1/394/VariantStorageEngineNumericSampleTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/styler_three_grams/394/VariantStorageEngineNumericSampleTest.java\n@@ -37,7 +37,10 @@ public abstract class VariantStorageEngineNumericSampleTest extends VariantStora\n             for (SampleEntry sample : study.getSamples()) {\n                 assertEquals(sample.getSampleId(), sample.getData().get(study.getSampleDataKeyPosition(\"NAME\")));\n             }\n-            assertEquals(study.getSamples(), engine.getSampleData(variant.toString(), study.getStudyId(), new QueryOptions()).first().getStudies().get(0).getSamples());\n+            assertEquals(study.getSamples()\n+            , engine .getSampleData(variant.toString(\n+        )\n+        , study.getStudyId(), new QueryOptions()).first().getStudies().get(0).getSamples());\n         }\n     }\n \n",
            "diff_size": 4
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
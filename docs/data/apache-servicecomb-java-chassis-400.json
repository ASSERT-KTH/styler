{
    "project_name": "apache-servicecomb-java-chassis",
    "error_id": "400",
    "information": {
        "errors": [
            {
                "line": "199",
                "column": "80",
                "severity": "warning",
                "message": "'>' should be on a new line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
            }
        ]
    },
    "source_code": "\n  private boolean isInQueueTimeout() {\n    return System.nanoTime() - invocation.getInvocationStageTrace().getStart() >\n        invocation.getOperationMeta().getConfig().getNanoRestRequestWaitInPoolTimeout();\n  }\n",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/400/AbstractRestInvocation.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler/400/AbstractRestInvocation.java\nindex 5041d6c1b89..476a84bb441 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/400/AbstractRestInvocation.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler/400/AbstractRestInvocation.java\n@@ -196,8 +196,8 @@ public abstract class AbstractRestInvocation {\n   }\n \n   private boolean isInQueueTimeout() {\n-    return System.nanoTime() - invocation.getInvocationStageTrace().getStart() >\n-        invocation.getOperationMeta().getConfig().getNanoRestRequestWaitInPoolTimeout();\n+    return System.nanoTime() - invocation.getInvocationStageTrace().getStart()\n+        > invocation.getOperationMeta().getConfig().getNanoRestRequestWaitInPoolTimeout();\n   }\n \n   protected void runOnExecutor() {\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "199",
                    "column": "80",
                    "severity": "warning",
                    "message": "'>' should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/400/AbstractRestInvocation.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/intellij/400/AbstractRestInvocation.java\nindex 5041d6c1b89..1b638a93ee2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/400/AbstractRestInvocation.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/intellij/400/AbstractRestInvocation.java\n@@ -133,7 +133,7 @@ public abstract class AbstractRestInvocation {\n       sendFailResponse(e);\n       return;\n     }\n-    \n+\n     invocation.onStart(requestEx, start);\n     invocation.getInvocationStageTrace().startSchedule();\n     OperationMeta operationMeta = restOperationMeta.getOperationMeta();\n",
            "diff_size": 1
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "199",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 161).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/400/AbstractRestInvocation.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/naturalize/400/AbstractRestInvocation.java\nindex 5041d6c1b89..1f74961b783 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/400/AbstractRestInvocation.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/naturalize/400/AbstractRestInvocation.java\n@@ -133,8 +133,8 @@ public abstract class AbstractRestInvocation {\n       sendFailResponse(e);\n       return;\n     }\n-    \n-    invocation.onStart(requestEx, start);\n+\n+invocation.onStart(requestEx, start);\n     invocation.getInvocationStageTrace().startSchedule();\n     OperationMeta operationMeta = restOperationMeta.getOperationMeta();\n \n@@ -196,8 +196,7 @@ public abstract class AbstractRestInvocation {\n   }\n \n   private boolean isInQueueTimeout() {\n-    return System.nanoTime() - invocation.getInvocationStageTrace().getStart() >\n-        invocation.getOperationMeta().getConfig().getNanoRestRequestWaitInPoolTimeout();\n+    return System.nanoTime() - invocation.getInvocationStageTrace().getStart() > invocation.getOperationMeta().getConfig().getNanoRestRequestWaitInPoolTimeout();\n   }\n \n   protected void runOnExecutor() {\n@@ -326,4 +325,4 @@ public abstract class AbstractRestInvocation {\n   private String getMicroserviceQualifiedName() {\n     return null == invocation ? UNKNOWN_OPERATION_ID : invocation.getMicroserviceQualifiedName();\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "199",
                    "column": "80",
                    "severity": "warning",
                    "message": "'>' should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/400/AbstractRestInvocation.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler_three_grams/400/AbstractRestInvocation.java\nindex 5041d6c1b89..476a84bb441 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/400/AbstractRestInvocation.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler_three_grams/400/AbstractRestInvocation.java\n@@ -196,8 +196,8 @@ public abstract class AbstractRestInvocation {\n   }\n \n   private boolean isInQueueTimeout() {\n-    return System.nanoTime() - invocation.getInvocationStageTrace().getStart() >\n-        invocation.getOperationMeta().getConfig().getNanoRestRequestWaitInPoolTimeout();\n+    return System.nanoTime() - invocation.getInvocationStageTrace().getStart()\n+        > invocation.getOperationMeta().getConfig().getNanoRestRequestWaitInPoolTimeout();\n   }\n \n   protected void runOnExecutor() {\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random"
    ]
}
{
    "project_name": "Angel-ML-angel",
    "error_id": "947",
    "information": {
        "errors": [
            {
                "line": "6",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 102).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * Copyright (C) 2017-2018 THL A29 Limited, a Tencent company. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in\n * compliance with the License. You may obtain a copy of the License at\n *\n * https://opensource.org/licenses/Apache-2.0",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/947/PSMatrixFilesUtils.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/947/PSMatrixFilesUtils.java\nindex eea11e280c0..edf4e4171f4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/947/PSMatrixFilesUtils.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/947/PSMatrixFilesUtils.java\n@@ -31,7 +31,7 @@ public class PSMatrixFilesUtils {\n    * Init loader/saver according to matrix format\n    *\n    * @param format matrix format\n-   * @param conf configuration\n+   * @param conf   configuration\n    * @return PS loader/saver\n    */\n   public static PSMatrixLoaderSaver initLoaderSaver(Format format, Configuration conf) {\n@@ -43,8 +43,8 @@ public class PSMatrixFilesUtils {\n       return new PSRowLoaderSaver((RowFormat) format, conf);\n     } else if (format instanceof ComplexRowFormat) {\n       return new PSComplexRowLoaderSaver((ComplexRowFormat) format, conf);\n-    } else if(format instanceof SnapshotFormat) {\n-      return new SnapshotLoaderSaver((SnapshotFormat)format, conf);\n+    } else if (format instanceof SnapshotFormat) {\n+      return new SnapshotLoaderSaver((SnapshotFormat) format, conf);\n     } else {\n       throw new UnsupportedOperationException(\n           \"format \" + format.getClass().getName() + \" not support now!\");\n",
            "diff_size": 3
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "49",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 109).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/947/PSMatrixFilesUtils.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/947/PSMatrixFilesUtils.java\nindex eea11e280c0..14bbfcbf6cf 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/947/PSMatrixFilesUtils.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/947/PSMatrixFilesUtils.java\n@@ -43,11 +43,10 @@ public class PSMatrixFilesUtils {\n       return new PSRowLoaderSaver((RowFormat) format, conf);\n     } else if (format instanceof ComplexRowFormat) {\n       return new PSComplexRowLoaderSaver((ComplexRowFormat) format, conf);\n-    } else if(format instanceof SnapshotFormat) {\n+    } else if (format instanceof SnapshotFormat) {\n       return new SnapshotLoaderSaver((SnapshotFormat)format, conf);\n     } else {\n-      throw new UnsupportedOperationException(\n-          \"format \" + format.getClass().getName() + \" not support now!\");\n+      throw new UnsupportedOperationException(\"format \" + format.getClass().getName() + \" not support now!\");\n     }\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "50",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 123).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/947/PSMatrixFilesUtils.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/947/PSMatrixFilesUtils.java\nindex eea11e280c0..4bce194023a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/947/PSMatrixFilesUtils.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/947/PSMatrixFilesUtils.java\n@@ -34,20 +34,21 @@ public class PSMatrixFilesUtils {\n    * @param conf configuration\n    * @return PS loader/saver\n    */\n+\n   public static PSMatrixLoaderSaver initLoaderSaver(Format format, Configuration conf) {\n     if (format instanceof ElementFormat) {\n       return new PSRowElementLoaderSaver((ElementFormat) format, conf);\n     } else if (format instanceof ColumnFormat) {\n-      return new PSColumnLoaderSaver((ColumnFormat) format, conf);\n+             return new PSColumnLoaderSaver((ColumnFormat) format, conf);\n     } else if (format instanceof RowFormat) {\n-      return new PSRowLoaderSaver((RowFormat) format, conf);\n-    } else if (format instanceof ComplexRowFormat) {\n-      return new PSComplexRowLoaderSaver((ComplexRowFormat) format, conf);\n-    } else if(format instanceof SnapshotFormat) {\n-      return new SnapshotLoaderSaver((SnapshotFormat)format, conf);\n-    } else {\n-      throw new UnsupportedOperationException(\n-          \"format \" + format.getClass().getName() + \" not support now!\");\n-    }\n+             return new PSRowLoaderSaver((RowFormat) format, conf);\n+           } else if (format instanceof ComplexRowFormat) {\n+                    return new PSComplexRowLoaderSaver((ComplexRowFormat) format, conf);\n+           } else if (format instanceof SnapshotFormat) {\n+                    return new SnapshotLoaderSaver((SnapshotFormat) format, conf);\n+                  } else {\n+                    throw new UnsupportedOperationException(\"format \" + format.getClass().getName() + \" not support now!\");\n+                  }\n   }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 13
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
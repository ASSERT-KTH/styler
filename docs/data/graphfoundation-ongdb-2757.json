{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2757",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "42",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2757/SameGroupDetector.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2757/SameGroupDetector.java\nindex 267163d98f4..9f748d27713 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2757/SameGroupDetector.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2757/SameGroupDetector.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.unsafe.impl.batchimport.cache.idmapping.string;\n \n import java.util.Arrays;\n@@ -29,55 +30,55 @@ import static org.neo4j.unsafe.impl.batchimport.cache.idmapping.IdMapper.ID_NOT_\n  */\n class SameGroupDetector\n {\n-    // Alternating data index, group id\n-    private long[] seen = new long[100]; // grows on demand\n-    private int cursor;\n+  // Alternating data index, group id\n+  private long[] seen = new long[100]; // grows on demand\n+  private int cursor;\n \n-    /**\n-     * @return -1 if no collision within the same group, or an actual data index which collides with the\n-     * supplied data index and group id. In the case of <strong>not</strong> {@code -1} both {@code dataIndexB}\n-     * and the returned data index should be marked as collisions.\n-     */\n-    long collisionWithinSameGroup( long dataIndexA, int groupIdA, long dataIndexB, int groupIdB )\n+  /**\n+   * @return -1 if no collision within the same group, or an actual data index which collides with the\n+   * supplied data index and group id. In the case of <strong>not</strong> {@code -1} both {@code dataIndexB}\n+   * and the returned data index should be marked as collisions.\n+   */\n+  long collisionWithinSameGroup(long dataIndexA, int groupIdA, long dataIndexB, int groupIdB)\n+  {\n+    // The first call, add both the entries. For consecutive calls for this same collision stretch\n+    // only add and compare the second. The reason it's done in here instead of having a method signature\n+    // of one data index and group id and having the caller call two times is that we're better suited\n+    // to decide if this is the first or consecutive call for this collision stretch.\n+    if (cursor == 0)\n     {\n-        // The first call, add both the entries. For consecutive calls for this same collision stretch\n-        // only add and compare the second. The reason it's done in here instead of having a method signature\n-        // of one data index and group id and having the caller call two times is that we're better suited\n-        // to decide if this is the first or consecutive call for this collision stretch.\n-        if ( cursor == 0 )\n-        {\n-            add( dataIndexA, groupIdA );\n-        }\n-\n-        long collision = ID_NOT_FOUND;\n-        for ( int i = 0; i < cursor; i++ )\n-        {\n-            long dataIndexAtCursor = seen[i++];\n-            long groupIdAtCursor = seen[i];\n-            if ( groupIdAtCursor == groupIdB )\n-            {\n-                collision = dataIndexAtCursor;\n-                break;\n-            }\n-        }\n-\n-        add( dataIndexB, groupIdB );\n-\n-        return collision;\n+      add(dataIndexA, groupIdA);\n     }\n \n-    private void add( long dataIndex, int groupId )\n+    long collision = ID_NOT_FOUND;\n+    for (int i = 0; i < cursor; i++)\n     {\n-        if ( cursor == seen.length )\n-        {\n-            seen = Arrays.copyOf( seen, seen.length * 2 );\n-        }\n-        seen[cursor++] = dataIndex;\n-        seen[cursor++] = groupId;\n+      long dataIndexAtCursor = seen[i++];\n+      long groupIdAtCursor = seen[i];\n+      if (groupIdAtCursor == groupIdB)\n+      {\n+        collision = dataIndexAtCursor;\n+        break;\n+      }\n     }\n \n-    void reset()\n+    add(dataIndexB, groupIdB);\n+\n+    return collision;\n+  }\n+\n+  private void add(long dataIndex, int groupId)\n+  {\n+    if (cursor == seen.length)\n     {\n-        cursor = 0;\n+      seen = Arrays.copyOf(seen, seen.length * 2);\n     }\n+    seen[cursor++] = dataIndex;\n+    seen[cursor++] = groupId;\n+  }\n+\n+  void reset()\n+  {\n+    cursor = 0;\n+  }\n }\n",
            "diff_size": 66
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2757/SameGroupDetector.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2757/SameGroupDetector.java\nindex 267163d98f4..6e9835bb7f6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2757/SameGroupDetector.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2757/SameGroupDetector.java\n@@ -62,8 +62,7 @@ class SameGroupDetector\n         }\n \n         add( dataIndexB, groupIdB );\n-\n-        return collision;\n+return collision;\n     }\n \n     private void add( long dataIndex, int groupId )\n@@ -72,7 +71,8 @@ class SameGroupDetector\n         {\n             seen = Arrays.copyOf( seen, seen.length * 2 );\n         }\n-        seen[cursor++] = dataIndex;\n+\n+seen[cursor++] = dataIndex;\n         seen[cursor++] = groupId;\n     }\n \n@@ -80,4 +80,4 @@ class SameGroupDetector\n     {\n         cursor = 0;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
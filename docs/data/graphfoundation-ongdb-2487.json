{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2487",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "33",
                    "column": "99",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "33",
                    "column": "104",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "117",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "124",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "54",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "112",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "54",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "19",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "150",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "150",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2487/PrimitiveLongResourceCollections.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2487/PrimitiveLongResourceCollections.java\nindex 04b94cd91ef..8b454f97d35 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2487/PrimitiveLongResourceCollections.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2487/PrimitiveLongResourceCollections.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.collection.primitive;\n \n import java.util.Arrays;\n@@ -29,123 +30,123 @@ import static org.neo4j.collection.primitive.PrimitiveLongCollections.resourceIt\n \n public class PrimitiveLongResourceCollections\n {\n-    private static final PrimitiveLongResourceIterator EMPTY = new PrimitiveLongBaseResourceIterator( null )\n+  private static final PrimitiveLongResourceIterator EMPTY = new PrimitiveLongBaseResourceIterator(null)\n+  {\n+    @Override\n+    protected boolean fetchNext()\n     {\n-        @Override\n-        protected boolean fetchNext()\n-        {\n-            return false;\n-        }\n+      return false;\n+    }\n+  };\n+\n+  public static PrimitiveLongResourceIterator emptyIterator()\n+  {\n+    return EMPTY;\n+  }\n+\n+  public static PrimitiveLongResourceIterator iterator(Resource resource, final long... items)\n+  {\n+    return resourceIterator(PrimitiveLongCollections.iterator(items), resource);\n+  }\n+\n+  public static PrimitiveLongResourceIterator concat(PrimitiveLongResourceIterator... primitiveLongResourceIterators)\n+  {\n+    return concat(Arrays.asList(primitiveLongResourceIterators));\n+  }\n+\n+  public static PrimitiveLongResourceIterator concat(Iterable<PrimitiveLongResourceIterator> primitiveLongResourceIterators)\n+  {\n+    return new PrimitiveLongConcatingResourceIterator(primitiveLongResourceIterators);\n+  }\n+\n+  public static PrimitiveLongResourceIterator filter(PrimitiveLongResourceIterator source, LongPredicate filter)\n+  {\n+    return new PrimitiveLongFilteringResourceIterator(source)\n+    {\n+      @Override\n+      public boolean test(long item)\n+      {\n+        return filter.test(item);\n+      }\n     };\n+  }\n \n-    public static PrimitiveLongResourceIterator emptyIterator()\n-    {\n-        return EMPTY;\n-    }\n+  abstract static class PrimitiveLongBaseResourceIterator extends PrimitiveLongCollections.PrimitiveLongBaseIterator\n+      implements PrimitiveLongResourceIterator\n+  {\n+    private Resource resource;\n \n-    public static PrimitiveLongResourceIterator iterator( Resource resource, final long... items )\n+    PrimitiveLongBaseResourceIterator(Resource resource)\n     {\n-        return resourceIterator( PrimitiveLongCollections.iterator( items ), resource );\n+      this.resource = resource;\n     }\n \n-    public static PrimitiveLongResourceIterator concat( PrimitiveLongResourceIterator... primitiveLongResourceIterators )\n+    @Override\n+    public void close()\n     {\n-        return concat( Arrays.asList( primitiveLongResourceIterators ) );\n+      if (resource != null)\n+      {\n+        resource.close();\n+        resource = null;\n+      }\n     }\n+  }\n \n-    public static PrimitiveLongResourceIterator concat( Iterable<PrimitiveLongResourceIterator> primitiveLongResourceIterators )\n-    {\n-        return new PrimitiveLongConcatingResourceIterator( primitiveLongResourceIterators );\n-    }\n+  private static class PrimitiveLongConcatingResourceIterator extends PrimitiveLongCollections.PrimitiveLongConcatingIterator\n+      implements PrimitiveLongResourceIterator\n+  {\n+    private final Iterable<PrimitiveLongResourceIterator> iterators;\n+    private volatile boolean closed;\n \n-    public static PrimitiveLongResourceIterator filter( PrimitiveLongResourceIterator source, LongPredicate filter )\n+    private PrimitiveLongConcatingResourceIterator(Iterable<PrimitiveLongResourceIterator> iterators)\n     {\n-        return new PrimitiveLongFilteringResourceIterator( source )\n-        {\n-            @Override\n-            public boolean test( long item )\n-            {\n-                return filter.test( item );\n-            }\n-        };\n+      super(iterators.iterator());\n+      this.iterators = iterators;\n     }\n \n-    abstract static class PrimitiveLongBaseResourceIterator extends PrimitiveLongCollections.PrimitiveLongBaseIterator\n-            implements PrimitiveLongResourceIterator\n+    @Override\n+    protected boolean fetchNext()\n     {\n-        private Resource resource;\n-\n-        PrimitiveLongBaseResourceIterator( Resource resource )\n-        {\n-            this.resource = resource;\n-        }\n-\n-        @Override\n-        public void close()\n-        {\n-            if ( resource != null )\n-            {\n-                resource.close();\n-                resource = null;\n-            }\n-        }\n+      return !closed && super.fetchNext();\n     }\n \n-    private static class PrimitiveLongConcatingResourceIterator extends PrimitiveLongCollections.PrimitiveLongConcatingIterator\n-            implements PrimitiveLongResourceIterator\n+    @Override\n+    public void close()\n     {\n-        private final Iterable<PrimitiveLongResourceIterator> iterators;\n-        private volatile boolean closed;\n-\n-        private PrimitiveLongConcatingResourceIterator( Iterable<PrimitiveLongResourceIterator> iterators )\n-        {\n-            super( iterators.iterator() );\n-            this.iterators = iterators;\n-        }\n+      if (!closed)\n+      {\n+        closed = true;\n+        ResourceUtils.closeAll(iterators);\n+      }\n+    }\n \n-        @Override\n-        protected boolean fetchNext()\n-        {\n-            return !closed && super.fetchNext();\n-        }\n+  }\n \n-        @Override\n-        public void close()\n-        {\n-            if ( !closed )\n-            {\n-                closed = true;\n-                ResourceUtils.closeAll( iterators );\n-            }\n-        }\n+  private abstract static class PrimitiveLongFilteringResourceIterator extends PrimitiveLongBaseResourceIterator implements LongPredicate\n+  {\n+    private final PrimitiveLongIterator source;\n \n+    private PrimitiveLongFilteringResourceIterator(PrimitiveLongResourceIterator source)\n+    {\n+      super(source);\n+      this.source = source;\n     }\n \n-    private abstract static class PrimitiveLongFilteringResourceIterator extends PrimitiveLongBaseResourceIterator implements LongPredicate\n+    @Override\n+    protected boolean fetchNext()\n     {\n-        private final PrimitiveLongIterator source;\n-\n-        private PrimitiveLongFilteringResourceIterator( PrimitiveLongResourceIterator source )\n+      while (source.hasNext())\n+      {\n+        long testItem = source.next();\n+        if (test(testItem))\n         {\n-            super( source );\n-            this.source = source;\n+          return next(testItem);\n         }\n-\n-        @Override\n-        protected boolean fetchNext()\n-        {\n-            while ( source.hasNext() )\n-            {\n-                long testItem = source.next();\n-                if ( test( testItem ) )\n-                {\n-                    return next( testItem );\n-                }\n-            }\n-            return false;\n-        }\n-\n-        @Override\n-        public abstract boolean test( long testItem );\n+      }\n+      return false;\n     }\n+\n+    @Override\n+    public abstract boolean test(long testItem);\n+  }\n }\n",
            "diff_size": 142
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "93",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 168).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2487/PrimitiveLongResourceCollections.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2487/PrimitiveLongResourceCollections.java\nindex 04b94cd91ef..5a6bc970980 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2487/PrimitiveLongResourceCollections.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2487/PrimitiveLongResourceCollections.java\n@@ -70,9 +70,8 @@ public class PrimitiveLongResourceCollections\n         };\n     }\n \n-    abstract static class PrimitiveLongBaseResourceIterator extends PrimitiveLongCollections.PrimitiveLongBaseIterator\n-            implements PrimitiveLongResourceIterator\n-    {\n+    abstract static class PrimitiveLongBaseResourceIterator extends PrimitiveLongCollections.PrimitiveLongBaseIterator implements PrimitiveLongResourceIterator\n+{\n         private Resource resource;\n \n         PrimitiveLongBaseResourceIterator( Resource resource )\n@@ -91,9 +90,8 @@ public class PrimitiveLongResourceCollections\n         }\n     }\n \n-    private static class PrimitiveLongConcatingResourceIterator extends PrimitiveLongCollections.PrimitiveLongConcatingIterator\n-            implements PrimitiveLongResourceIterator\n-    {\n+    private static class PrimitiveLongConcatingResourceIterator extends PrimitiveLongCollections.PrimitiveLongConcatingIterator implements PrimitiveLongResourceIterator\n+{\n         private final Iterable<PrimitiveLongResourceIterator> iterators;\n         private volatile boolean closed;\n \n@@ -118,7 +116,6 @@ public class PrimitiveLongResourceCollections\n                 ResourceUtils.closeAll( iterators );\n             }\n         }\n-\n     }\n \n     private abstract static class PrimitiveLongFilteringResourceIterator extends PrimitiveLongBaseResourceIterator implements LongPredicate\n@@ -148,4 +145,4 @@ public class PrimitiveLongResourceCollections\n         @Override\n         public abstract boolean test( long testItem );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
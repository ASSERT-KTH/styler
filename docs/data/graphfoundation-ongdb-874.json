{
    "project_name": "graphfoundation-ongdb",
    "error_id": "874",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "40",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/874/AsyncLog.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/874/AsyncLog.java\nindex a67e7a2fc5c..649016f4745 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/874/AsyncLog.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/874/AsyncLog.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.logging.async;\n \n import java.util.function.Consumer;\n@@ -33,90 +34,90 @@ import static org.neo4j.logging.async.AsyncLogEvent.logEvent;\n \n public class AsyncLog extends AbstractLog\n {\n-    private final Log log;\n+  private final Log log;\n+  private final AsyncEventSender<AsyncLogEvent> events;\n+\n+  public AsyncLog(@Nonnull AsyncEventSender<AsyncLogEvent> events, @Nonnull Log log)\n+  {\n+    this.log = requireNonNull(log, \"Log\");\n+    this.events = requireNonNull(events, \"AsyncEventSender<AsyncLogEvent>\");\n+  }\n+\n+  @Override\n+  public boolean isDebugEnabled()\n+  {\n+    return log.isDebugEnabled();\n+  }\n+\n+  @Nonnull\n+  @Override\n+  public Logger debugLogger()\n+  {\n+    return new AsyncLogger(events, log.debugLogger());\n+  }\n+\n+  @Nonnull\n+  @Override\n+  public Logger infoLogger()\n+  {\n+    return new AsyncLogger(events, log.infoLogger());\n+  }\n+\n+  @Nonnull\n+  @Override\n+  public Logger warnLogger()\n+  {\n+    return new AsyncLogger(events, log.warnLogger());\n+  }\n+\n+  @Nonnull\n+  @Override\n+  public Logger errorLogger()\n+  {\n+    return new AsyncLogger(events, log.errorLogger());\n+  }\n+\n+  @Override\n+  public void bulk(@Nonnull Consumer<Log> consumer)\n+  {\n+    events.send(bulkLogEvent(log, consumer));\n+  }\n+\n+  private static class AsyncLogger implements Logger\n+  {\n+    private final Logger logger;\n     private final AsyncEventSender<AsyncLogEvent> events;\n \n-    public AsyncLog( @Nonnull AsyncEventSender<AsyncLogEvent> events, @Nonnull Log log )\n-    {\n-        this.log = requireNonNull( log, \"Log\" );\n-        this.events = requireNonNull( events, \"AsyncEventSender<AsyncLogEvent>\" );\n-    }\n-\n-    @Override\n-    public boolean isDebugEnabled()\n-    {\n-        return log.isDebugEnabled();\n-    }\n-\n-    @Nonnull\n-    @Override\n-    public Logger debugLogger()\n+    AsyncLogger(@Nonnull AsyncEventSender<AsyncLogEvent> events, @Nonnull Logger logger)\n     {\n-        return new AsyncLogger( events, log.debugLogger() );\n+      this.logger = requireNonNull(logger, \"Logger\");\n+      this.events = requireNonNull(events);\n     }\n \n-    @Nonnull\n     @Override\n-    public Logger infoLogger()\n+    public void log(@Nonnull String message)\n     {\n-        return new AsyncLogger( events, log.infoLogger() );\n+      events.send(logEvent(logger, message));\n     }\n \n-    @Nonnull\n     @Override\n-    public Logger warnLogger()\n+    public void log(@Nonnull String message, @Nonnull Throwable throwable)\n     {\n-        return new AsyncLogger( events, log.warnLogger() );\n+      requireNonNull(throwable);\n+      events.send(logEvent(logger, message, throwable));\n     }\n \n-    @Nonnull\n     @Override\n-    public Logger errorLogger()\n+    public void log(@Nonnull String format, @Nonnull Object... arguments)\n     {\n-        return new AsyncLogger( events, log.errorLogger() );\n+      requireNonNull(arguments);\n+      events.send(logEvent(logger, format, arguments));\n     }\n \n     @Override\n-    public void bulk( @Nonnull Consumer<Log> consumer )\n-    {\n-        events.send( bulkLogEvent( log, consumer ) );\n-    }\n-\n-    private static class AsyncLogger implements Logger\n+    public void bulk(@Nonnull Consumer<Logger> consumer)\n     {\n-        private final Logger logger;\n-        private final AsyncEventSender<AsyncLogEvent> events;\n-\n-        AsyncLogger( @Nonnull AsyncEventSender<AsyncLogEvent> events, @Nonnull Logger logger )\n-        {\n-            this.logger = requireNonNull( logger, \"Logger\" );\n-            this.events = requireNonNull( events );\n-        }\n-\n-        @Override\n-        public void log( @Nonnull String message )\n-        {\n-            events.send( logEvent( logger, message ) );\n-        }\n-\n-        @Override\n-        public void log( @Nonnull String message, @Nonnull Throwable throwable )\n-        {\n-            requireNonNull( throwable );\n-            events.send( logEvent( logger, message, throwable ) );\n-        }\n-\n-        @Override\n-        public void log( @Nonnull String format, @Nonnull Object... arguments )\n-        {\n-            requireNonNull( arguments );\n-            events.send( logEvent( logger, format, arguments ) );\n-        }\n-\n-        @Override\n-        public void bulk( @Nonnull Consumer<Logger> consumer )\n-        {\n-            events.send( bulkLogEvent( logger, consumer ) );\n-        }\n+      events.send(bulkLogEvent(logger, consumer));\n     }\n+  }\n }\n",
            "diff_size": 122
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/874/AsyncLog.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/874/AsyncLog.java\nindex a67e7a2fc5c..44df1f13884 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/874/AsyncLog.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/874/AsyncLog.java\n@@ -119,4 +119,4 @@ public class AsyncLog extends AbstractLog\n             events.send( bulkLogEvent( logger, consumer ) );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/874/AsyncLog.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/874/AsyncLog.java\nindex a67e7a2fc5c..35c5e81775b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/874/AsyncLog.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/874/AsyncLog.java\n@@ -21,14 +21,14 @@ package org.neo4j.logging.async;\n \n import java.util.function.Consumer;\n import javax.annotation.Nonnull;\n-\n import org.neo4j.concurrent.AsyncEventSender;\n import org.neo4j.logging.AbstractLog;\n import org.neo4j.logging.Log;\n import org.neo4j.logging.Logger;\n-\n import static java.util.Objects.requireNonNull;\n+\n import static org.neo4j.logging.async.AsyncLogEvent.bulkLogEvent;\n+\n import static org.neo4j.logging.async.AsyncLogEvent.logEvent;\n \n public class AsyncLog extends AbstractLog\n@@ -107,7 +107,7 @@ public class AsyncLog extends AbstractLog\n         }\n \n         @Override\n-        public void log( @Nonnull String format, @Nonnull Object... arguments )\n+        public void log( @Nonnull String format, @Nonnull Object ... arguments )\n         {\n             requireNonNull( arguments );\n             events.send( logEvent( logger, format, arguments ) );\n@@ -119,4 +119,4 @@ public class AsyncLog extends AbstractLog\n             events.send( bulkLogEvent( logger, consumer ) );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "neo4j-neo4j",
    "error_id": "710",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "46",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "111",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "71",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "83",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "87",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "91",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "60",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "82",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "17",
                    "severity": "error",
                    "message": "'}' at column 17 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "126",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "130",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/710/JMXDumper.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/710/JMXDumper.java\nindex a9e0ae17dd2..530146d8e94 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/710/JMXDumper.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/710/JMXDumper.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.dbms.diagnostics.jmx;\n \n import java.io.BufferedReader;\n@@ -42,7 +43,7 @@ public class JMXDumper\n     private final boolean verbose;\n     private PrintStream out;\n \n-    public JMXDumper( Path homeDir, FileSystemAbstraction fs, PrintStream out, PrintStream err, boolean verbose )\n+    public JMXDumper(Path homeDir, FileSystemAbstraction fs, PrintStream out, PrintStream err, boolean verbose)\n     {\n         this.homeDir = homeDir;\n         this.fs = fs;\n@@ -53,89 +54,82 @@ public class JMXDumper\n \n     public Optional<JmxDump> getJMXDump()\n     {\n-        out.println( \"Finding running instance of neo4j\" );\n+        out.println(\"Finding running instance of neo4j\");\n \n         Optional<Long> pid = getPid();\n-        if ( pid.isPresent() )\n+        if (pid.isPresent())\n         {\n-            return getJMXDump( pid.get() );\n-        }\n-        else\n+            return getJMXDump(pid.get());\n+        } else\n         {\n-            out.println( \"No running instance of neo4j was found. Online reports will be omitted.\" );\n-            out.println( \"If neo4j is running but not detected, you can supply the process id of the running instance with --pid\" );\n+            out.println(\"No running instance of neo4j was found. Online reports will be omitted.\");\n+            out.println(\"If neo4j is running but not detected, you can supply the process id of the running instance with --pid\");\n             return Optional.empty();\n         }\n     }\n \n-    public Optional<JmxDump> getJMXDump( long pid )\n+    public Optional<JmxDump> getJMXDump(long pid)\n     {\n         try\n         {\n-            LocalVirtualMachine vm = LocalVirtualMachine.from( pid );\n-            out.println( \"Attached to running process with process id \" + pid );\n+            LocalVirtualMachine vm = LocalVirtualMachine.from(pid);\n+            out.println(\"Attached to running process with process id \" + pid);\n             try\n             {\n-                JmxDump jmxDump = JmxDump.connectTo( vm.getJmxAddress() );\n-                jmxDump.attachSystemProperties( vm.getSystemProperties() );\n-                out.println( \"Connected to JMX endpoint\" );\n-                return Optional.of( jmxDump );\n-            }\n-            catch ( IOException e )\n+                JmxDump jmxDump = JmxDump.connectTo(vm.getJmxAddress());\n+                jmxDump.attachSystemProperties(vm.getSystemProperties());\n+                out.println(\"Connected to JMX endpoint\");\n+                return Optional.of(jmxDump);\n+            } catch (IOException e)\n             {\n-                printError( \"Unable to communicate with JMX endpoint. Reason: \" + e.getMessage(), e );\n+                printError(\"Unable to communicate with JMX endpoint. Reason: \" + e.getMessage(), e);\n             }\n-        }\n-        catch ( java.lang.NoClassDefFoundError e )\n+        } catch (java.lang.NoClassDefFoundError e)\n         {\n-            printError( \"Unable to attach to process. Reason: JDK is not available, please point \" +\n-                    \"environment variable JAVA_HOME to a valid JDK location.\", e);\n-        }\n-        catch ( IOException e )\n+            printError(\"Unable to attach to process. Reason: JDK is not available, please point \" +\n+              \"environment variable JAVA_HOME to a valid JDK location.\", e);\n+        } catch (IOException e)\n         {\n-            printError( \"Unable to connect to process with process id \" + pid + \". Reason: \" + e.getMessage(), e );\n+            printError(\"Unable to connect to process with process id \" + pid + \". Reason: \" + e.getMessage(), e);\n         }\n \n         return Optional.empty();\n     }\n \n-    private void printError( String message, Throwable e )\n+    private void printError(String message, Throwable e)\n     {\n-        err.println( message );\n-        if ( verbose && e != null )\n+        err.println(message);\n+        if (verbose && e != null)\n         {\n-            e.printStackTrace( err );\n+            e.printStackTrace(err);\n         }\n     }\n \n-    private void printError( String message )\n+    private void printError(String message)\n     {\n-        printError( message, null );\n+        printError(message, null);\n     }\n \n     private Optional<Long> getPid()\n     {\n-        Path pidFile = this.homeDir.resolve( \"run/neo4j.pid\" );\n-        if ( this.fs.fileExists( pidFile ) )\n+        Path pidFile = this.homeDir.resolve(\"run/neo4j.pid\");\n+        if (this.fs.fileExists(pidFile))\n         {\n             // The file cannot be opened with write permissions on Windows\n-            try ( InputStream inputStream = Files.newInputStream( pidFile, StandardOpenOption.READ );\n-                    BufferedReader reader = new BufferedReader( new InputStreamReader( inputStream ) ) )\n+            try (InputStream inputStream = Files.newInputStream(pidFile, StandardOpenOption.READ);\n+                 BufferedReader reader = new BufferedReader(new InputStreamReader(inputStream)))\n             {\n                 String pidFileContent = reader.readLine();\n                 try\n                 {\n-                    return Optional.of( Long.parseLong( pidFileContent ) );\n-                }\n-\n-                catch ( NumberFormatException e )\n+                    return Optional.of(Long.parseLong(pidFileContent));\n+                } catch (NumberFormatException e)\n                 {\n-                    printError( pidFile + \" does not contain a valid id. Found: \" + pidFileContent );\n+                    printError(pidFile + \" does not contain a valid id. Found: \" + pidFileContent);\n                 }\n-            }\n-            catch ( IOException e )\n+            } catch (IOException e)\n             {\n-                printError( \"Error reading the .pid file. Reason: \" + e.getMessage(), e );\n+                printError(\"Error reading the .pid file. Reason: \" + e.getMessage(), e);\n             }\n         }\n         return Optional.empty();\n",
            "diff_size": 44
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/710/JMXDumper.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/710/JMXDumper.java\nindex a9e0ae17dd2..65fac50b641 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/710/JMXDumper.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/710/JMXDumper.java\n@@ -89,7 +89,7 @@ public class JMXDumper\n         catch ( java.lang.NoClassDefFoundError e )\n         {\n             printError( \"Unable to attach to process. Reason: JDK is not available, please point \" +\n-                    \"environment variable JAVA_HOME to a valid JDK location.\", e);\n+                    \"environment variable JAVA_HOME to a valid JDK location.\", e );\n         }\n         catch ( IOException e )\n         {\n@@ -140,4 +140,4 @@ public class JMXDumper\n         }\n         return Optional.empty();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
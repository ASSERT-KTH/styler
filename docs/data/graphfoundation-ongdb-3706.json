{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3706",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "33",
                    "column": "58",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "33",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "36",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "36",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3706/LocalVariables.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3706/LocalVariables.java\nindex 3f4296dbd8d..571266470ff 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3706/LocalVariables.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3706/LocalVariables.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.codegen;\n \n import java.util.HashMap;\n@@ -29,36 +30,36 @@ import java.util.concurrent.atomic.AtomicInteger;\n  */\n public class LocalVariables\n {\n-    private final AtomicInteger counter = new AtomicInteger( 0 );\n-    private final Map<String,LocalVariable> localVariables = new HashMap<>();\n+  private final AtomicInteger counter = new AtomicInteger(0);\n+  private final Map<String, LocalVariable> localVariables = new HashMap<>();\n \n-    public LocalVariable createNew( TypeReference type, String name )\n+  public LocalVariable createNew(TypeReference type, String name)\n+  {\n+    LocalVariable localVariable = new LocalVariable(type, name, counter.getAndIncrement());\n+    localVariables.put(name, localVariable);\n+    //if 64 bit types we need to give it one more index\n+    if (type.simpleName().equals(\"double\") || type.simpleName().equals(\"long\"))\n     {\n-        LocalVariable localVariable = new LocalVariable( type, name, counter.getAndIncrement() );\n-        localVariables.put( name, localVariable );\n-        //if 64 bit types we need to give it one more index\n-        if ( type.simpleName().equals( \"double\" ) || type.simpleName().equals( \"long\" ) )\n-        {\n-            counter.incrementAndGet();\n-        }\n-        return localVariable;\n+      counter.incrementAndGet();\n     }\n+    return localVariable;\n+  }\n \n-    public LocalVariable get( String name )\n+  public LocalVariable get(String name)\n+  {\n+    LocalVariable localVariable = localVariables.get(name);\n+    if (localVariable == null)\n     {\n-        LocalVariable localVariable = localVariables.get( name );\n-        if ( localVariable == null )\n-        {\n-            throw new NoSuchElementException( \"No variable \" + name + \" in scope\" );\n-        }\n-        return localVariable;\n+      throw new NoSuchElementException(\"No variable \" + name + \" in scope\");\n     }\n+    return localVariable;\n+  }\n \n-    public static LocalVariables copy( LocalVariables original )\n-    {\n-        LocalVariables variables = new LocalVariables();\n-        variables.counter.set( original.counter.get() );\n-        original.localVariables.forEach( variables.localVariables::put );\n-        return variables;\n-    }\n+  public static LocalVariables copy(LocalVariables original)\n+  {\n+    LocalVariables variables = new LocalVariables();\n+    variables.counter.set(original.counter.get());\n+    original.localVariables.forEach(variables.localVariables::put);\n+    return variables;\n+  }\n }\n",
            "diff_size": 38
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3706/LocalVariables.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3706/LocalVariables.java\nindex 3f4296dbd8d..17642f66a53 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3706/LocalVariables.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3706/LocalVariables.java\n@@ -41,7 +41,8 @@ public class LocalVariables\n         {\n             counter.incrementAndGet();\n         }\n-        return localVariable;\n+\n+return localVariable;\n     }\n \n     public LocalVariable get( String name )\n@@ -51,7 +52,8 @@ public class LocalVariables\n         {\n             throw new NoSuchElementException( \"No variable \" + name + \" in scope\" );\n         }\n-        return localVariable;\n+\n+return localVariable;\n     }\n \n     public static LocalVariables copy( LocalVariables original )\n@@ -61,4 +63,4 @@ public class LocalVariables\n         original.localVariables.forEach( variables.localVariables::put );\n         return variables;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
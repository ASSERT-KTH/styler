{
    "project_name": "Angel-ML-angel",
    "error_id": "973",
    "information": {
        "errors": [
            {
                "line": "11",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 103).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * https://opensource.org/licenses/BSD-3-Clause\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n * either express or implied. See the License for the specific language governing permissions and\n * limitations under the License.",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/973/PSAttemptStateUpdateEvent.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/973/PSAttemptStateUpdateEvent.java\nindex 714aaa79ad7..779be3a0a98 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/973/PSAttemptStateUpdateEvent.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/973/PSAttemptStateUpdateEvent.java\n@@ -24,12 +24,15 @@ import com.tencent.angel.ps.PSAttemptId;\n  * Update the counters for ps attempt.\n  */\n public class PSAttemptStateUpdateEvent extends PSAttemptEvent {\n-  /**ps attempt counters*/\n+  /**\n+   * ps attempt counters\n+   */\n   private final Map<String, String> params;\n \n   /**\n    * Create a PSAttemptStateUpdateEvent\n-   * @param id ps attempt id\n+   *\n+   * @param id     ps attempt id\n    * @param params counters\n    */\n   public PSAttemptStateUpdateEvent(PSAttemptId id, Map<String, String> params) {\n@@ -39,6 +42,7 @@ public class PSAttemptStateUpdateEvent extends PSAttemptEvent {\n \n   /**\n    * Get counters\n+   *\n    * @return counters\n    */\n   public Map<String, String> getParams() {\n",
            "diff_size": 6
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/973/PSAttemptStateUpdateEvent.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/973/PSAttemptStateUpdateEvent.java\nindex 714aaa79ad7..0da4ef50361 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/973/PSAttemptStateUpdateEvent.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/973/PSAttemptStateUpdateEvent.java\n@@ -44,4 +44,4 @@ public class PSAttemptStateUpdateEvent extends PSAttemptEvent {\n   public Map<String, String> getParams() {\n     return params;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/973/PSAttemptStateUpdateEvent.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/973/PSAttemptStateUpdateEvent.java\nindex 714aaa79ad7..7dd8e8d29fa 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/973/PSAttemptStateUpdateEvent.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/973/PSAttemptStateUpdateEvent.java\n@@ -17,14 +17,15 @@\n package com.tencent.angel.master.ps.attempt;\n \n import java.util.Map;\n-\n import com.tencent.angel.ps.PSAttemptId;\n \n /**\n  * Update the counters for ps attempt.\n  */\n+\n public class PSAttemptStateUpdateEvent extends PSAttemptEvent {\n   /**ps attempt counters*/\n+\n   private final Map<String, String> params;\n \n   /**\n@@ -32,6 +33,7 @@ public class PSAttemptStateUpdateEvent extends PSAttemptEvent {\n    * @param id ps attempt id\n    * @param params counters\n    */\n+\n   public PSAttemptStateUpdateEvent(PSAttemptId id, Map<String, String> params) {\n     super(PSAttemptEventType.PA_UPDATE_STATE, id);\n     this.params = params;\n@@ -41,7 +43,9 @@ public class PSAttemptStateUpdateEvent extends PSAttemptEvent {\n    * Get counters\n    * @return counters\n    */\n+\n   public Map<String, String> getParams() {\n     return params;\n   }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
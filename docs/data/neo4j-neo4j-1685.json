{
    "project_name": "neo4j-neo4j",
    "error_id": "1685",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "41",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "86",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "17",
                    "severity": "error",
                    "message": "'}' at column 17 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "139",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1685/BestFirstSelectorFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1685/BestFirstSelectorFactory.java\nindex afdbd6e965d..3e08e658730 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1685/BestFirstSelectorFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1685/BestFirstSelectorFactory.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.graphalgo.impl.util;\n \n import java.util.HashMap;\n@@ -33,19 +34,19 @@ import org.neo4j.graphdb.traversal.TraversalBranch;\n import org.neo4j.graphdb.traversal.TraversalContext;\n \n public abstract class BestFirstSelectorFactory<P extends Comparable<P>, D>\n-        implements BranchOrderingPolicy\n+  implements BranchOrderingPolicy\n {\n     private final PathInterest<P> interest;\n \n-    public BestFirstSelectorFactory( PathInterest<P> interest )\n+    public BestFirstSelectorFactory(PathInterest<P> interest)\n     {\n         this.interest = interest;\n     }\n \n     @Override\n-    public BranchSelector create( TraversalBranch startSource, PathExpander expander )\n+    public BranchSelector create(TraversalBranch startSource, PathExpander expander)\n     {\n-        return new BestFirstSelector( startSource, getStartData(), expander );\n+        return new BestFirstSelector(startSource, getStartData(), expander);\n     }\n \n     protected abstract P getStartData();\n@@ -55,28 +56,28 @@ public abstract class BestFirstSelectorFactory<P extends Comparable<P>, D>\n         private P cost;\n         private int visitCount;\n \n-        Visit( P cost )\n+        Visit(P cost)\n         {\n             this.cost = cost;\n         }\n \n         @Override\n-        public int compareTo( P o )\n+        public int compareTo(P o)\n         {\n-            return cost.compareTo( o );\n+            return cost.compareTo(o);\n         }\n     }\n \n     public final class BestFirstSelector implements BranchSelector\n     {\n-        private final PriorityMap<TraversalBranch, Node, P> queue = new PriorityMap<>( CONVERTER, interest.comparator(),\n-                interest.stopAfterLowestCost() );\n+        private final PriorityMap<TraversalBranch, Node, P> queue = new PriorityMap<>(CONVERTER, interest.comparator(),\n+          interest.stopAfterLowestCost());\n         private TraversalBranch current;\n         private P currentAggregatedValue;\n         private final PathExpander expander;\n         private final Map<Long, Visit<P>> visits = new HashMap<>();\n \n-        public BestFirstSelector( TraversalBranch source, P startData, PathExpander expander )\n+        public BestFirstSelector(TraversalBranch source, P startData, PathExpander expander)\n         {\n             this.current = source;\n             this.currentAggregatedValue = startData;\n@@ -84,36 +85,36 @@ public abstract class BestFirstSelectorFactory<P extends Comparable<P>, D>\n         }\n \n         @Override\n-        public TraversalBranch next( TraversalContext metadata )\n+        public TraversalBranch next(TraversalContext metadata)\n         {\n             // Exhaust current if not already exhausted\n-            while ( true )\n+            while (true)\n             {\n-                TraversalBranch next = current.next( expander, metadata );\n-                if ( next == null )\n+                TraversalBranch next = current.next(expander, metadata);\n+                if (next == null)\n                 {\n                     break;\n                 }\n \n                 long endNodeId = next.endNode().getId();\n-                Visit<P> stay = visits.get( endNodeId );\n+                Visit<P> stay = visits.get(endNodeId);\n \n-                D cost = calculateValue( next );\n-                P newPriority = addPriority( next, currentAggregatedValue, cost );\n+                D cost = calculateValue(next);\n+                P newPriority = addPriority(next, currentAggregatedValue, cost);\n \n                 boolean newStay = stay == null;\n-                if ( newStay )\n+                if (newStay)\n                 {\n-                    stay = new Visit<>( newPriority );\n-                    visits.put( endNodeId, stay );\n+                    stay = new Visit<>(newPriority);\n+                    visits.put(endNodeId, stay);\n                 }\n-                if ( newStay || !interest.canBeRuledOut( stay.visitCount, newPriority, stay.cost ) )\n+                if (newStay || !interest.canBeRuledOut(stay.visitCount, newPriority, stay.cost))\n                 {\n-                    if ( interest.comparator().compare( newPriority, stay.cost ) < 0 )\n+                    if (interest.comparator().compare(newPriority, stay.cost) < 0)\n                     {\n                         stay.cost = newPriority;\n                     }\n-                    queue.put( next, newPriority );\n+                    queue.put(next, newPriority);\n                 }\n             }\n \n@@ -121,29 +122,28 @@ public abstract class BestFirstSelectorFactory<P extends Comparable<P>, D>\n             {\n                 // Pop the top from priorityMap\n                 Entry<TraversalBranch, P> entry = queue.pop();\n-                if ( entry != null )\n+                if (entry != null)\n                 {\n                     current = entry.getEntity();\n-                    Visit<P> stay = visits.get( current.endNode().getId() );\n+                    Visit<P> stay = visits.get(current.endNode().getId());\n                     stay.visitCount++;\n-                    if ( interest.stillInteresting( stay.visitCount ) )\n+                    if (interest.stillInteresting(stay.visitCount))\n                     {\n                         currentAggregatedValue = entry.getPriority();\n                         return current;\n                     }\n-                }\n-                else\n+                } else\n                 {\n                     return null;\n                 }\n-            } while ( true );\n+            } while (true);\n         }\n     }\n \n-    protected abstract P addPriority( TraversalBranch source,\n-            P currentAggregatedValue, D value );\n+    protected abstract P addPriority(TraversalBranch source,\n+                                     P currentAggregatedValue, D value);\n \n-    protected abstract D calculateValue( TraversalBranch next );\n+    protected abstract D calculateValue(TraversalBranch next);\n \n     public static final Converter<Node, TraversalBranch> CONVERTER = Path::endNode;\n }\n",
            "diff_size": 33
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1685/BestFirstSelectorFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/1685/BestFirstSelectorFactory.java\nindex afdbd6e965d..90ac102a4f2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1685/BestFirstSelectorFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/1685/BestFirstSelectorFactory.java\n@@ -146,4 +146,4 @@ public abstract class BestFirstSelectorFactory<P extends Comparable<P>, D>\n     protected abstract D calculateValue( TraversalBranch next );\n \n     public static final Converter<Node, TraversalBranch> CONVERTER = Path::endNode;\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
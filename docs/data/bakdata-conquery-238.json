{
    "project_name": "bakdata-conquery",
    "error_id": "238",
    "information": {
        "errors": [
            {
                "line": "71",
                "column": "13",
                "severity": "warning",
                "message": "'}' at column 4 should be alone on a line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
            }
        ]
    },
    "source_code": "\t\t\ttry {\n\t\t\t\ttable.setResolvedConnector(concept.getConnectorByName(table.getId().getConnector()));\n\t\t\t}catch (NoSuchElementException exc){\n\t\t\t\tlog.warn(\"Unable to resolve connector `{}` in dataset `{}`.\",table.getId().getConnector(), concept.getDataset(), exc);\n\t\t\t\tcontinue;\n\t\t\t}",
    "results": [
        {
            "tool": "styler",
            "errors": null,
            "diff": null
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "48",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "49",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "50",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "51",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "52",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "54",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "55",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "57",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "58",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "59",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "60",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "62",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "64",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "65",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "66",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "68",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "70",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "72",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "73",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "74",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "75",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "76",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "76",
                    "column": "13",
                    "severity": "warning",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "77",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "78",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "79",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "81",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "84",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "85",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "86",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "87",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "88",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "89",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "90",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "91",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "93",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "94",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "96",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "97",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "99",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "100",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "101",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "102",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "103",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "104",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "106",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "107",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "108",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "109",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "110",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "111",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "112",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "113",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "114",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "115",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "116",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "117",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "119",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "120",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "121",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "123",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "124",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "126",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "127",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "128",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "129",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "130",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "131",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "132",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "134",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "135",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "136",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "137",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "138",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "139",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "140",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "142",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "143",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "144",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "145",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "146",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "147",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "148",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "150",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "152",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "154",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "155",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "156",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "157",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "158",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "159",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "160",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "162",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "163",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "164",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "165",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "166",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "167",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "169",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "170",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "171",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "172",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "172",
                    "column": "9",
                    "severity": "warning",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "173",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "174",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "175",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "177",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "178",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "179",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "180",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "181",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "182",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "183",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "185",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "186",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "187",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "188",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "189",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "191",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "193",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "194",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "195",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "196",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/238/CQConcept.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/intellij/238/CQConcept.java\nindex 4d65deefae3..6d3c626626a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/238/CQConcept.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/intellij/238/CQConcept.java\n@@ -39,155 +39,159 @@ import java.util.List;\n import java.util.NoSuchElementException;\n import java.util.Set;\n \n-@Getter @Setter\n-@CPSType(id=\"CONCEPT\", base=CQElement.class)\n+@Getter\n+@Setter\n+@CPSType(id = \"CONCEPT\", base = CQElement.class)\n @Slf4j\n public class CQConcept implements CQElement {\n \n-\tprivate String label;\n-\t@Valid @NotEmpty\n-\tprivate List<ConceptElementId<?>> ids;\n-\t@Valid @NotEmpty @JsonManagedReference\n-\tprivate List<CQTable> tables;\n-\n-\t@Valid @NotNull\n-\t@NsIdRefCollection\n-\tprivate List<Select> selects = new ArrayList<>();\n-\n-\tprivate boolean excludeFromTimeAggregation = false;\n-\n-\t@Override\n-\tpublic QPNode createQueryPlan(QueryPlanContext context, ConceptQueryPlan plan) {\n-\t\tConceptElement<?>[] concepts = resolveConcepts(ids, context.getCentralRegistry());\n-\n-\t\tList<AggregatorNode<?>> conceptAggregators = createConceptAggregators(plan, selects);\n-\n-\t\tConcept<?> concept = concepts[0].getConcept();\n-\n-\t\tList<QPNode> tableNodes = new ArrayList<>();\n-\t\tfor(CQTable table : tables) {\n-\t\t\ttry {\n-\t\t\t\ttable.setResolvedConnector(concept.getConnectorByName(table.getId().getConnector()));\n-\t\t\t}catch (NoSuchElementException exc){\n-\t\t\t\tlog.warn(\"Unable to resolve connector `{}` in dataset `{}`.\",table.getId().getConnector(), concept.getDataset(), exc);\n-\t\t\t\tcontinue;\n-\t\t\t}\n-\n-\t\t\tList<Select> resolvedSelects = table.getSelects();\n-\n-\n-\t\t\tList<FilterNode<?>> filters = new ArrayList<>(table.getFilters().size());\n-\t\t\t//add filter to children\n-\t\t\tfor(FilterValue f : table.getFilters()) {\n-\t\t\t\tFilterNode agg = f.getFilter().createAggregator(f.getValue());\n-\t\t\t\tif(agg != null) {\n-\t\t\t\t\tfilters.add(agg);\n-\t\t\t\t}\n-\t\t\t}\n-\n-\t\t\tList<QPNode> aggregators = new ArrayList<>();\n-\t\t\t//add aggregators\n-\n-\t\t\taggregators.addAll(conceptAggregators);\n-\t\t\taggregators.addAll(createConceptAggregators(plan, resolvedSelects));\n-\n-\t\t\tif(!excludeFromTimeAggregation && context.isGenerateSpecialDateUnion()) {\n-\t\t\t\taggregators.add(new SpecialDateUnionAggregatorNode(\n-\t\t\t\t\ttable.getResolvedConnector().getTable().getId(),\n-\t\t\t\t\tplan.getSpecialDateUnion()\n-\t\t\t\t));\n-\t\t\t}\n-\n-\t\t\ttableNodes.add(\n-\t\t\t\tnew ConceptNode(\n-\t\t\t\t\tconcepts,\n-\t\t\t\t\tcalculateBitMask(concepts),\n-\t\t\t\t\ttable,\n-\t\t\t\t\tnew ValidityDateNode(\n-\t\t\t\t\t\tselectValidityDateColumn(table),\n-\t\t\t\t\t\tconceptChild(filters, aggregators)\n-\t\t\t\t\t)\n-\t\t\t\t)\n-\t\t\t);\n-\t\t}\n-\n-\t\tif(tableNodes.isEmpty()){\n-\t\t\tthrow new IllegalStateException(String.format(\"Unable to resolve any connector for query `%s`\", label));\n-\t\t}\n-\n-\t\treturn OrNode.of(tableNodes);\n-\t}\n-\n-\tprivate long calculateBitMask(ConceptElement<?>[] concepts) {\n-\t\tlong mask = 0;\n-\t\tfor(ConceptElement<?> concept : concepts) {\n-\t\t\tmask |= concept.calculateBitMask();\n-\t\t}\n-\t\treturn mask;\n-\t}\n-\n-\tprivate ConceptElement[] resolveConcepts(List<ConceptElementId<?>> ids, CentralRegistry centralRegistry) {\n-\t\treturn\n-\t\t\t\tids\n-\t\t\t\t\t.stream()\n-\t\t\t\t\t.map(id -> centralRegistry.resolve(id.findConcept()).getElementById(id))\n-\t\t\t\t\t.toArray(ConceptElement[]::new);\n-\t}\n-\n-\tprivate QPNode conceptChild(List<FilterNode<?>> filters, List<QPNode> aggregators) {\n-\t\tQPNode result = AndNode.of(aggregators);\n-\t\tif(!filters.isEmpty()) {\n-\t\t\tresult = new FiltersNode(filters, result);\n-\t\t}\n-\t\treturn result;\n-\t}\n-\n-\tprivate static List<AggregatorNode<?>> createConceptAggregators(ConceptQueryPlan plan, List<Select> select) {\n-\n-\t\tList<AggregatorNode<?>> nodes = new ArrayList<>();\n-\n-\t\tfor (Select s : select) {\n-\t\t\tAggregatorNode<?> agg = new AggregatorNode<>(s.createAggregator());\n-\t\t\tplan.addAggregator(agg.getAggregator());\n-\t\t\tnodes.add(agg);\n-\t\t}\n-\t\treturn nodes;\n-\t}\n-\n-\tprivate Column selectValidityDateColumn(CQTable t) {\n-\t\tif(t.selectedValidityDate() != null) {\n-\t\t\treturn t\n-\t\t\t\t.getResolvedConnector()\n-\t\t\t\t.getValidityDateColumn(t.selectedValidityDate());\n-\t\t}\n-\n-\t\t//else use this first defined validity date column\n-\t\telse if(!t.getResolvedConnector().getValidityDates().isEmpty()) {\n-\t\t\treturn t.getResolvedConnector().getValidityDates().get(0).getColumn();\n-\t\t}\n-\t\telse {\n-\t\t\treturn null;\n-\t\t}\n-\t}\n-\n-\t@Override\n-\tpublic void collectResultInfos(ResultInfoCollector collector) {\n-\t\tselects.forEach(sel -> collector.add(new SelectResultInfo(sel,this)));\n-\t\tfor (CQTable table : tables) {\n-\t\t\ttable.getSelects().forEach(sel -> collector.add(new SelectResultInfo(sel,this)));\n-\t\t}\n-\t}\n-\n-\t@Override\n-\tpublic void collectNamespacedIds(Set<NamespacedId> namespacedIds) {\n-\t\tnamespacedIds.addAll(ids);\n-\t\tselects.forEach(select -> namespacedIds.add(select.getId()));\n-\t\ttables.forEach(table -> namespacedIds.add(table.getId()));\n-\t\t\n-\t}\n-\t\n-\t@Override\n-\tpublic void visit(QueryVisitor visitor) {\n-\t\tvisitor.visitConcept(this);\n-\t}\n+    private String label;\n+    @Valid\n+    @NotEmpty\n+    private List<ConceptElementId<?>> ids;\n+    @Valid\n+    @NotEmpty\n+    @JsonManagedReference\n+    private List<CQTable> tables;\n+\n+    @Valid\n+    @NotNull\n+    @NsIdRefCollection\n+    private List<Select> selects = new ArrayList<>();\n+\n+    private boolean excludeFromTimeAggregation = false;\n+\n+    @Override\n+    public QPNode createQueryPlan(QueryPlanContext context, ConceptQueryPlan plan) {\n+        ConceptElement<?>[] concepts = resolveConcepts(ids, context.getCentralRegistry());\n+\n+        List<AggregatorNode<?>> conceptAggregators = createConceptAggregators(plan, selects);\n+\n+        Concept<?> concept = concepts[0].getConcept();\n+\n+        List<QPNode> tableNodes = new ArrayList<>();\n+        for (CQTable table : tables) {\n+            try {\n+                table.setResolvedConnector(concept.getConnectorByName(table.getId().getConnector()));\n+            } catch (NoSuchElementException exc) {\n+                log.warn(\"Unable to resolve connector `{}` in dataset `{}`.\", table.getId().getConnector(), concept.getDataset(), exc);\n+                continue;\n+            }\n+\n+            List<Select> resolvedSelects = table.getSelects();\n+\n+\n+            List<FilterNode<?>> filters = new ArrayList<>(table.getFilters().size());\n+            //add filter to children\n+            for (FilterValue f : table.getFilters()) {\n+                FilterNode agg = f.getFilter().createAggregator(f.getValue());\n+                if (agg != null) {\n+                    filters.add(agg);\n+                }\n+            }\n+\n+            List<QPNode> aggregators = new ArrayList<>();\n+            //add aggregators\n+\n+            aggregators.addAll(conceptAggregators);\n+            aggregators.addAll(createConceptAggregators(plan, resolvedSelects));\n+\n+            if (!excludeFromTimeAggregation && context.isGenerateSpecialDateUnion()) {\n+                aggregators.add(new SpecialDateUnionAggregatorNode(\n+                    table.getResolvedConnector().getTable().getId(),\n+                    plan.getSpecialDateUnion()\n+                ));\n+            }\n+\n+            tableNodes.add(\n+                new ConceptNode(\n+                    concepts,\n+                    calculateBitMask(concepts),\n+                    table,\n+                    new ValidityDateNode(\n+                        selectValidityDateColumn(table),\n+                        conceptChild(filters, aggregators)\n+                    )\n+                )\n+            );\n+        }\n+\n+        if (tableNodes.isEmpty()) {\n+            throw new IllegalStateException(String.format(\"Unable to resolve any connector for query `%s`\", label));\n+        }\n+\n+        return OrNode.of(tableNodes);\n+    }\n+\n+    private long calculateBitMask(ConceptElement<?>[] concepts) {\n+        long mask = 0;\n+        for (ConceptElement<?> concept : concepts) {\n+            mask |= concept.calculateBitMask();\n+        }\n+        return mask;\n+    }\n+\n+    private ConceptElement[] resolveConcepts(List<ConceptElementId<?>> ids, CentralRegistry centralRegistry) {\n+        return\n+            ids\n+                .stream()\n+                .map(id -> centralRegistry.resolve(id.findConcept()).getElementById(id))\n+                .toArray(ConceptElement[]::new);\n+    }\n+\n+    private QPNode conceptChild(List<FilterNode<?>> filters, List<QPNode> aggregators) {\n+        QPNode result = AndNode.of(aggregators);\n+        if (!filters.isEmpty()) {\n+            result = new FiltersNode(filters, result);\n+        }\n+        return result;\n+    }\n+\n+    private static List<AggregatorNode<?>> createConceptAggregators(ConceptQueryPlan plan, List<Select> select) {\n+\n+        List<AggregatorNode<?>> nodes = new ArrayList<>();\n+\n+        for (Select s : select) {\n+            AggregatorNode<?> agg = new AggregatorNode<>(s.createAggregator());\n+            plan.addAggregator(agg.getAggregator());\n+            nodes.add(agg);\n+        }\n+        return nodes;\n+    }\n+\n+    private Column selectValidityDateColumn(CQTable t) {\n+        if (t.selectedValidityDate() != null) {\n+            return t\n+                .getResolvedConnector()\n+                .getValidityDateColumn(t.selectedValidityDate());\n+        }\n+\n+        //else use this first defined validity date column\n+        else if (!t.getResolvedConnector().getValidityDates().isEmpty()) {\n+            return t.getResolvedConnector().getValidityDates().get(0).getColumn();\n+        } else {\n+            return null;\n+        }\n+    }\n+\n+    @Override\n+    public void collectResultInfos(ResultInfoCollector collector) {\n+        selects.forEach(sel -> collector.add(new SelectResultInfo(sel, this)));\n+        for (CQTable table : tables) {\n+            table.getSelects().forEach(sel -> collector.add(new SelectResultInfo(sel, this)));\n+        }\n+    }\n+\n+    @Override\n+    public void collectNamespacedIds(Set<NamespacedId> namespacedIds) {\n+        namespacedIds.addAll(ids);\n+        selects.forEach(select -> namespacedIds.add(select.getId()));\n+        tables.forEach(table -> namespacedIds.add(table.getId()));\n+\n+    }\n+\n+    @Override\n+    public void visit(QueryVisitor visitor) {\n+        visitor.visitConcept(this);\n+    }\n }\n",
            "diff_size": 152
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_three_grams",
            "errors": null,
            "diff": null
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3767",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "58",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "94",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "103",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "103",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "127",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "105",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "173",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "173",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "178",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "185",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "185",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "190",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "190",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "195",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "195",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "200",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "200",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "205",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "205",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "211",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "211",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "216",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "216",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "216",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "220",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "220",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "224",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "224",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "226",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "226",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "228",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "228",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "234",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "235",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "242",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "243",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "246",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "246",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "258",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "258",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "265",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "265",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "269",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "269",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "269",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "271",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "271",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "278",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "278",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "278",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "280",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "280",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "285",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "285",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "297",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "297",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "297",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "299",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "299",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "300",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "306",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "306",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "309",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "309",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "313",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "313",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "321",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "321",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "326",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "326",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3767/IndexConfigStore.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3767/IndexConfigStore.java\nindex 96e9da876d7..c42bfd413b3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3767/IndexConfigStore.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3767/IndexConfigStore.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.index;\n \n import java.io.File;\n@@ -40,300 +41,290 @@ import org.neo4j.kernel.lifecycle.LifecycleAdapter;\n \n public class IndexConfigStore extends LifecycleAdapter\n {\n-    public static final String INDEX_DB_FILE_NAME = \"index.db\";\n-    private static final String OLD_INDEX_DB_FILE_NAME = INDEX_DB_FILE_NAME + \".old\";\n-    private static final String TMP_INDEX_DB_FILE_NAME = INDEX_DB_FILE_NAME + \".tmp\";\n+  public static final String INDEX_DB_FILE_NAME = \"index.db\";\n+  private static final String OLD_INDEX_DB_FILE_NAME = INDEX_DB_FILE_NAME + \".old\";\n+  private static final String TMP_INDEX_DB_FILE_NAME = INDEX_DB_FILE_NAME + \".tmp\";\n \n-    private static final byte[] MAGIC = new byte[] { 'n', 'e', 'o', '4', 'j', '-', 'i', 'n', 'd', 'e', 'x' };\n-    private static final int VERSION = 1;\n+  private static final byte[] MAGIC = new byte[] {'n', 'e', 'o', '4', 'j', '-', 'i', 'n', 'd', 'e', 'x'};\n+  private static final int VERSION = 1;\n \n-    private final File file;\n-    private final File oldFile;\n-    private final Map<String, Map<String, String>> nodeConfig = new ConcurrentHashMap<>();\n-    private final Map<String, Map<String, String>> relConfig = new ConcurrentHashMap<>();\n-    private ByteBuffer dontUseBuffer = ByteBuffer.allocate( 100 );\n-    private final FileSystemAbstraction fileSystem;\n+  private final File file;\n+  private final File oldFile;\n+  private final Map<String, Map<String, String>> nodeConfig = new ConcurrentHashMap<>();\n+  private final Map<String, Map<String, String>> relConfig = new ConcurrentHashMap<>();\n+  private ByteBuffer dontUseBuffer = ByteBuffer.allocate(100);\n+  private final FileSystemAbstraction fileSystem;\n \n-    public IndexConfigStore( File graphDbStoreDir, FileSystemAbstraction fileSystem )\n-    {\n-        this.fileSystem = fileSystem;\n-        this.file = new File( graphDbStoreDir, INDEX_DB_FILE_NAME );\n-        this.oldFile = new File( graphDbStoreDir, OLD_INDEX_DB_FILE_NAME );\n-    }\n+  public IndexConfigStore(File graphDbStoreDir, FileSystemAbstraction fileSystem)\n+  {\n+    this.fileSystem = fileSystem;\n+    this.file = new File(graphDbStoreDir, INDEX_DB_FILE_NAME);\n+    this.oldFile = new File(graphDbStoreDir, OLD_INDEX_DB_FILE_NAME);\n+  }\n \n-    private ByteBuffer buffer( int size )\n+  private ByteBuffer buffer(int size)\n+  {\n+    if (dontUseBuffer.capacity() < size)\n     {\n-        if ( dontUseBuffer.capacity() < size )\n-        {\n-            dontUseBuffer = ByteBuffer.allocate( size * 2 );\n-        }\n-        return dontUseBuffer;\n+      dontUseBuffer = ByteBuffer.allocate(size * 2);\n     }\n+    return dontUseBuffer;\n+  }\n \n-    private void read()\n+  private void read()\n+  {\n+    File fileToReadFrom = fileSystem.fileExists(file) ? file : oldFile;\n+    if (!fileSystem.fileExists(fileToReadFrom))\n     {\n-        File fileToReadFrom = fileSystem.fileExists( file ) ? file : oldFile;\n-        if ( !fileSystem.fileExists( fileToReadFrom ) )\n-        {\n-            return;\n-        }\n-\n-        StoreChannel channel = null;\n-        try\n-        {\n-            channel = fileSystem.open( fileToReadFrom, OpenMode.READ );\n-            Integer version = tryToReadVersion( channel );\n-            if ( version == null )\n-            {\n-                close( channel );\n-                channel = fileSystem.open( fileToReadFrom, OpenMode.READ );\n-                // Legacy format, TODO\n-                readMap( channel, nodeConfig, null );\n-                relConfig.putAll( nodeConfig );\n-            }\n-            else if ( version < VERSION )\n-            {\n-                // ...add version upgrade code here\n-                throw new UnsupportedOperationException( \"\" + version );\n-            }\n-            else\n-            {\n-                readMap( channel, nodeConfig, readNextInt( channel ) );\n-                readMap( channel, relConfig, readNextInt( channel ) );\n-            }\n-        }\n-        catch ( IOException e )\n-        {\n-            throw new RuntimeException( e );\n-        }\n-        finally\n-        {\n-            close( channel );\n-        }\n+      return;\n     }\n \n-    @Override\n-    public void init()\n+    StoreChannel channel = null;\n+    try\n     {\n-        read();\n-    }\n-\n-    @Override\n-    public void start()\n+      channel = fileSystem.open(fileToReadFrom, OpenMode.READ);\n+      Integer version = tryToReadVersion(channel);\n+      if (version == null)\n+      {\n+        close(channel);\n+        channel = fileSystem.open(fileToReadFrom, OpenMode.READ);\n+        // Legacy format, TODO\n+        readMap(channel, nodeConfig, null);\n+        relConfig.putAll(nodeConfig);\n+      } else if (version < VERSION)\n+      {\n+        // ...add version upgrade code here\n+        throw new UnsupportedOperationException(\"\" + version);\n+      } else\n+      {\n+        readMap(channel, nodeConfig, readNextInt(channel));\n+        readMap(channel, relConfig, readNextInt(channel));\n+      }\n+    } catch (IOException e)\n     {\n-        // Refresh the read config\n-        nodeConfig.clear();\n-        relConfig.clear();\n-        read();\n-    }\n-\n-    private void readMap( StoreChannel channel, Map<String,Map<String,String>> map, Integer sizeOrTillEof )\n-            throws IOException\n+      throw new RuntimeException(e);\n+    } finally\n     {\n-        for ( int i = 0; sizeOrTillEof == null || i < sizeOrTillEof; i++ )\n-        {\n-            String indexName = readNextString( channel );\n-            if ( indexName == null )\n-            {\n-                break;\n-            }\n-            Integer propertyCount = readNextInt( channel );\n-            if ( propertyCount == null )\n-            {\n-                break;\n-            }\n-            Map<String, String> properties = new HashMap<>();\n-            for ( int p = 0; p < propertyCount; p++ )\n-            {\n-                String key = readNextString( channel );\n-                if ( key == null )\n-                {\n-                    break;\n-                }\n-                String value = readNextString( channel );\n-                if ( value == null )\n-                {\n-                    break;\n-                }\n-                properties.put( key, value );\n-            }\n-            map.put( indexName, properties );\n-        }\n+      close(channel);\n     }\n+  }\n+\n+  @Override\n+  public void init()\n+  {\n+    read();\n+  }\n \n-    private Integer tryToReadVersion( ReadableByteChannel channel ) throws IOException\n+  @Override\n+  public void start()\n+  {\n+    // Refresh the read config\n+    nodeConfig.clear();\n+    relConfig.clear();\n+    read();\n+  }\n+\n+  private void readMap(StoreChannel channel, Map<String, Map<String, String>> map, Integer sizeOrTillEof)\n+      throws IOException\n+  {\n+    for (int i = 0; sizeOrTillEof == null || i < sizeOrTillEof; i++)\n     {\n-        byte[] array = IoPrimitiveUtils.readBytes( channel, new byte[MAGIC.length] );\n-        if ( !Arrays.equals( MAGIC, array ) )\n+      String indexName = readNextString(channel);\n+      if (indexName == null)\n+      {\n+        break;\n+      }\n+      Integer propertyCount = readNextInt(channel);\n+      if (propertyCount == null)\n+      {\n+        break;\n+      }\n+      Map<String, String> properties = new HashMap<>();\n+      for (int p = 0; p < propertyCount; p++)\n+      {\n+        String key = readNextString(channel);\n+        if (key == null)\n         {\n-            return null;\n+          break;\n         }\n-        return array != null ? readNextInt( channel ) : null;\n-    }\n-\n-    private void close( StoreChannel channel )\n-    {\n-        if ( channel != null )\n+        String value = readNextString(channel);\n+        if (value == null)\n         {\n-            try\n-            {\n-                channel.close();\n-            }\n-            catch ( IOException e )\n-            {\n-                e.printStackTrace();\n-            }\n+          break;\n         }\n+        properties.put(key, value);\n+      }\n+      map.put(indexName, properties);\n     }\n+  }\n \n-    private Integer readNextInt( ReadableByteChannel channel ) throws IOException\n+  private Integer tryToReadVersion(ReadableByteChannel channel) throws IOException\n+  {\n+    byte[] array = IoPrimitiveUtils.readBytes(channel, new byte[MAGIC.length]);\n+    if (!Arrays.equals(MAGIC, array))\n     {\n-        return IoPrimitiveUtils.readInt( channel, buffer( 4 ) );\n+      return null;\n     }\n+    return array != null ? readNextInt(channel) : null;\n+  }\n \n-    private String readNextString( ReadableByteChannel channel ) throws IOException\n+  private void close(StoreChannel channel)\n+  {\n+    if (channel != null)\n     {\n-        return IoPrimitiveUtils.readLengthAndString( channel, buffer( 100 ) );\n+      try\n+      {\n+        channel.close();\n+      } catch (IOException e)\n+      {\n+        e.printStackTrace();\n+      }\n     }\n+  }\n \n-    public boolean has( Class<? extends PropertyContainer> cls, String indexName )\n-    {\n-        return map( cls ).containsKey( indexName );\n-    }\n+  private Integer readNextInt(ReadableByteChannel channel) throws IOException\n+  {\n+    return IoPrimitiveUtils.readInt(channel, buffer(4));\n+  }\n \n-    public Map<String, String> get( Class<? extends PropertyContainer> cls, String indexName )\n-    {\n-        return map( cls ).get( indexName );\n-    }\n+  private String readNextString(ReadableByteChannel channel) throws IOException\n+  {\n+    return IoPrimitiveUtils.readLengthAndString(channel, buffer(100));\n+  }\n \n-    public String[] getNames( Class<? extends PropertyContainer> cls )\n-    {\n-        Map<String, Map<String, String>> indexMap = map( cls );\n-        return indexMap.keySet().toArray( new String[indexMap.size()] );\n-    }\n+  public boolean has(Class<? extends PropertyContainer> cls, String indexName)\n+  {\n+    return map(cls).containsKey(indexName);\n+  }\n \n-    private Map<String, Map<String, String>> map( Class<? extends PropertyContainer> cls )\n-    {\n-        if ( cls.equals( Node.class ) )\n-        {\n-            return nodeConfig;\n-        }\n-        else if ( cls.equals( Relationship.class ) )\n-        {\n-            return relConfig;\n-        }\n-        throw new IllegalArgumentException( cls.toString() );\n-    }\n+  public Map<String, String> get(Class<? extends PropertyContainer> cls, String indexName)\n+  {\n+    return map(cls).get(indexName);\n+  }\n \n-    // Synchronized since only one thread are allowed to write at any given time\n-    public synchronized void remove( Class<? extends PropertyContainer> cls, String indexName )\n-    {\n-        if ( map( cls ).remove( indexName ) == null )\n-        {\n-            throw new RuntimeException( \"Index config for '\" + indexName + \"' not found\" );\n-        }\n-        write();\n-    }\n+  public String[] getNames(Class<? extends PropertyContainer> cls)\n+  {\n+    Map<String, Map<String, String>> indexMap = map(cls);\n+    return indexMap.keySet().toArray(new String[indexMap.size()]);\n+  }\n \n-    // Synchronized since only one thread are allowed to write at any given time\n-    public synchronized void set( Class<? extends PropertyContainer> cls,\n-            String name, Map<String, String> config )\n+  private Map<String, Map<String, String>> map(Class<? extends PropertyContainer> cls)\n+  {\n+    if (cls.equals(Node.class))\n+    {\n+      return nodeConfig;\n+    } else if (cls.equals(Relationship.class))\n     {\n-        map( cls ).put( name, Collections.unmodifiableMap( config ) );\n-        write();\n+      return relConfig;\n     }\n+    throw new IllegalArgumentException(cls.toString());\n+  }\n \n-    // Synchronized since only one thread are allowed to write at any given time\n-    public synchronized boolean setIfNecessary( Class<? extends PropertyContainer> cls,\n-            String name, Map<String, String> config )\n+  // Synchronized since only one thread are allowed to write at any given time\n+  public synchronized void remove(Class<? extends PropertyContainer> cls, String indexName)\n+  {\n+    if (map(cls).remove(indexName) == null)\n     {\n-        Map<String, Map<String, String>> map = map( cls );\n-        if ( map.containsKey( name ) )\n-        {\n-            return false;\n-        }\n-        map.put( name, Collections.unmodifiableMap( config ) );\n-        write();\n-        return true;\n+      throw new RuntimeException(\"Index config for '\" + indexName + \"' not found\");\n     }\n+    write();\n+  }\n \n-    private void write()\n+  // Synchronized since only one thread are allowed to write at any given time\n+  public synchronized void set(Class<? extends PropertyContainer> cls,\n+                               String name, Map<String, String> config)\n+  {\n+    map(cls).put(name, Collections.unmodifiableMap(config));\n+    write();\n+  }\n+\n+  // Synchronized since only one thread are allowed to write at any given time\n+  public synchronized boolean setIfNecessary(Class<? extends PropertyContainer> cls,\n+                                             String name, Map<String, String> config)\n+  {\n+    Map<String, Map<String, String>> map = map(cls);\n+    if (map.containsKey(name))\n     {\n-        // Write to a .tmp file\n-        File tmpFile = new File( this.file.getParentFile(), TMP_INDEX_DB_FILE_NAME );\n-        write( tmpFile );\n+      return false;\n+    }\n+    map.put(name, Collections.unmodifiableMap(config));\n+    write();\n+    return true;\n+  }\n \n-        // Make sure the .old file doesn't exist, then rename the current one to .old\n-        fileSystem.deleteFile( oldFile );\n-        try\n-        {\n-            if ( fileSystem.fileExists( file ) )\n-            {\n-                fileSystem.renameFile( file, oldFile );\n-            }\n-        }\n-        catch ( IOException e )\n-        {\n-            throw new RuntimeException( \"Couldn't rename \" + file + \" -> \" + oldFile, e );\n-        }\n+  private void write()\n+  {\n+    // Write to a .tmp file\n+    File tmpFile = new File(this.file.getParentFile(), TMP_INDEX_DB_FILE_NAME);\n+    write(tmpFile);\n \n-        // Rename the .tmp file to the current name\n-        try\n-        {\n-            fileSystem.renameFile( tmpFile, this.file );\n-        }\n-        catch ( IOException e )\n-        {\n-            throw new RuntimeException( \"Couldn't rename \" + tmpFile + \" -> \" + file, e );\n-        }\n-        fileSystem.deleteFile( oldFile );\n+    // Make sure the .old file doesn't exist, then rename the current one to .old\n+    fileSystem.deleteFile(oldFile);\n+    try\n+    {\n+      if (fileSystem.fileExists(file))\n+      {\n+        fileSystem.renameFile(file, oldFile);\n+      }\n+    } catch (IOException e)\n+    {\n+      throw new RuntimeException(\"Couldn't rename \" + file + \" -> \" + oldFile, e);\n     }\n \n-    private void write( File file )\n+    // Rename the .tmp file to the current name\n+    try\n     {\n-        StoreChannel channel = null;\n-        try\n-        {\n-\n-            channel = fileSystem.open( file, OpenMode.READ_WRITE );\n-            channel.writeAll( ByteBuffer.wrap( MAGIC ) );\n-            IoPrimitiveUtils.writeInt( channel, buffer( 4 ), VERSION );\n-            writeMap( channel, nodeConfig );\n-            writeMap( channel, relConfig );\n-            channel.force( false );\n-        }\n-        catch ( IOException e )\n-        {\n-            throw new RuntimeException( e );\n-        }\n-        finally\n-        {\n-            close( channel );\n-        }\n+      fileSystem.renameFile(tmpFile, this.file);\n+    } catch (IOException e)\n+    {\n+      throw new RuntimeException(\"Couldn't rename \" + tmpFile + \" -> \" + file, e);\n     }\n+    fileSystem.deleteFile(oldFile);\n+  }\n \n-    private void writeMap( StoreChannel channel, Map<String, Map<String, String>> map ) throws IOException\n+  private void write(File file)\n+  {\n+    StoreChannel channel = null;\n+    try\n     {\n-        IoPrimitiveUtils.writeInt( channel, buffer( 4 ), map.size() );\n-        for ( Map.Entry<String, Map<String, String>> entry : map.entrySet() )\n-        {\n-            writeString( channel, entry.getKey() );\n-            writeInt( channel, entry.getValue().size() );\n-            for ( Map.Entry<String, String> propertyEntry : entry.getValue().entrySet() )\n-            {\n-                writeString( channel, propertyEntry.getKey() );\n-                writeString( channel, propertyEntry.getValue() );\n-            }\n-        }\n-    }\n \n-    private void writeInt( StoreChannel channel, int value ) throws IOException\n+      channel = fileSystem.open(file, OpenMode.READ_WRITE);\n+      channel.writeAll(ByteBuffer.wrap(MAGIC));\n+      IoPrimitiveUtils.writeInt(channel, buffer(4), VERSION);\n+      writeMap(channel, nodeConfig);\n+      writeMap(channel, relConfig);\n+      channel.force(false);\n+    } catch (IOException e)\n+    {\n+      throw new RuntimeException(e);\n+    } finally\n     {\n-        IoPrimitiveUtils.writeInt( channel, buffer( 4 ), value );\n+      close(channel);\n     }\n+  }\n \n-    private void writeString( StoreChannel channel, String value ) throws IOException\n+  private void writeMap(StoreChannel channel, Map<String, Map<String, String>> map) throws IOException\n+  {\n+    IoPrimitiveUtils.writeInt(channel, buffer(4), map.size());\n+    for (Map.Entry<String, Map<String, String>> entry : map.entrySet())\n     {\n-        IoPrimitiveUtils.writeLengthAndString( channel, buffer( 200 ), value );\n+      writeString(channel, entry.getKey());\n+      writeInt(channel, entry.getValue().size());\n+      for (Map.Entry<String, String> propertyEntry : entry.getValue().entrySet())\n+      {\n+        writeString(channel, propertyEntry.getKey());\n+        writeString(channel, propertyEntry.getValue());\n+      }\n     }\n+  }\n+\n+  private void writeInt(StoreChannel channel, int value) throws IOException\n+  {\n+    IoPrimitiveUtils.writeInt(channel, buffer(4), value);\n+  }\n+\n+  private void writeString(StoreChannel channel, String value) throws IOException\n+  {\n+    IoPrimitiveUtils.writeLengthAndString(channel, buffer(200), value);\n+  }\n }\n",
            "diff_size": 375
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
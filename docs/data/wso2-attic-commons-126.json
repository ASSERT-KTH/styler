{
    "project_name": "wso2-attic-commons",
    "error_id": "126",
    "information": {
        "errors": [
            {
                "line": "44",
                "severity": "error",
                "message": "Line is longer than 120 characters (found 124).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "        storage.put(index, customer);\n\n        EndpointReference targetEPR = new EndpointReference(\"http://127.0.0.1:8080/axis2/services/WSTransferSampleService\");\n\n        OMFactory fac = OMAbstractFactory.getOMFactory();\n        OMElement refProperty = fac.createOMElement(Q_ELEM_CUSTOMER_ID, null);",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/126/WSTransferSampleService.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler/126/WSTransferSampleService.java\nindex 8dbe8370813..645b7c4bafe 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/126/WSTransferSampleService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler/126/WSTransferSampleService.java\n@@ -41,7 +41,8 @@ public class WSTransferSampleService extends WSTransferAdapter {\n         Customer customer = CustomerUtil.fromOM(resource);\n         storage.put(index, customer);\n \n-        EndpointReference targetEPR = new EndpointReference(\"http://127.0.0.1:8080/axis2/services/WSTransferSampleService\");\n+        EndpointReference targetEPR = new EndpointReference(\n+                \"http://127.0.0.1:8080/axis2/services/WSTransferSampleService\");\n \n         OMFactory fac = OMAbstractFactory.getOMFactory();\n         OMElement refProperty = fac.createOMElement(Q_ELEM_CUSTOMER_ID, null);\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/126/WSTransferSampleService.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/intellij/126/WSTransferSampleService.java\nindex 8dbe8370813..8d7f1ec9554 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/126/WSTransferSampleService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/intellij/126/WSTransferSampleService.java\n@@ -1,18 +1,19 @@\n /*\n  * Copyright 2001-2004 The Apache Software Foundation.\n- * \n+ *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- * \n+ *\n  *      http://www.apache.org/licenses/LICENSE-2.0\n- * \n+ *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.wso2.sample;\n \n import javax.xml.namespace.QName;\n@@ -29,63 +30,63 @@ import java.util.Hashtable;\n \n public class WSTransferSampleService extends WSTransferAdapter {\n \n-    public static final QName Q_ELEM_CUSTOMER_ID = new QName(Customer.NS_URI, Customer.CUSTOMER_ID, \"xxx\");\n+  public static final QName Q_ELEM_CUSTOMER_ID = new QName(Customer.NS_URI, Customer.CUSTOMER_ID, \"xxx\");\n \n-    private Hashtable storage = new Hashtable();\n+  private Hashtable storage = new Hashtable();\n \n-    private static int index = 1;\n+  private static int index = 1;\n \n-    public EndpointReference create(OMElement resource) throws WSTransferException {\n-        Integer index = newIndex();\n+  public EndpointReference create(OMElement resource) throws WSTransferException {\n+    Integer index = newIndex();\n \n-        Customer customer = CustomerUtil.fromOM(resource);\n-        storage.put(index, customer);\n+    Customer customer = CustomerUtil.fromOM(resource);\n+    storage.put(index, customer);\n \n-        EndpointReference targetEPR = new EndpointReference(\"http://127.0.0.1:8080/axis2/services/WSTransferSampleService\");\n+    EndpointReference targetEPR = new EndpointReference(\"http://127.0.0.1:8080/axis2/services/WSTransferSampleService\");\n \n-        OMFactory fac = OMAbstractFactory.getOMFactory();\n-        OMElement refProperty = fac.createOMElement(Q_ELEM_CUSTOMER_ID, null);\n-        refProperty.setText(index.toString());\n-        targetEPR.addExtensibleElement(refProperty);\n+    OMFactory fac = OMAbstractFactory.getOMFactory();\n+    OMElement refProperty = fac.createOMElement(Q_ELEM_CUSTOMER_ID, null);\n+    refProperty.setText(index.toString());\n+    targetEPR.addExtensibleElement(refProperty);\n \n-        return targetEPR;\n-    }\n+    return targetEPR;\n+  }\n \n-    public OMElement delete(OMElement headers) throws WSTransferException {\n-        OMElement identifierHeader = headers.getFirstChildWithName(Q_ELEM_CUSTOMER_ID);\n+  public OMElement delete(OMElement headers) throws WSTransferException {\n+    OMElement identifierHeader = headers.getFirstChildWithName(Q_ELEM_CUSTOMER_ID);\n \n-        Object removed = storage.remove(identifierHeader.getText());\n+    Object removed = storage.remove(identifierHeader.getText());\n \n-        if (removed == null) {\n-            throw new WSTransferException(null, null, null, null);\n-        }\n-        return identifierHeader; // TODO\n+    if (removed == null) {\n+      throw new WSTransferException(null, null, null, null);\n     }\n+    return identifierHeader; // TODO\n+  }\n \n-    public OMElement get(OMElement headers) throws WSTransferException {\n-        OMElement identifierHeader = headers.getFirstChildWithName(Customer.Q_ELEM_CUSTOMER_ID);\n-        Integer index = new Integer(identifierHeader.getText());\n-        Customer customer = (Customer) storage.get(index);\n-\n-        if (customer == null){\n-            throw new WSTransferException(null, null, null, null);\n-        }\n+  public OMElement get(OMElement headers) throws WSTransferException {\n+    OMElement identifierHeader = headers.getFirstChildWithName(Customer.Q_ELEM_CUSTOMER_ID);\n+    Integer index = new Integer(identifierHeader.getText());\n+    Customer customer = (Customer) storage.get(index);\n \n-        return CustomerUtil.toOM(customer);\n+    if (customer == null) {\n+      throw new WSTransferException(null, null, null, null);\n     }\n \n-    public OMElement put(OMElement headers, OMElement resource) throws WSTransferException {\n-        OMElement customerIdHeader = headers.getFirstChildWithName(Q_ELEM_CUSTOMER_ID);\n+    return CustomerUtil.toOM(customer);\n+  }\n \n-        String customerId = customerIdHeader.getText();\n-        Customer customer = CustomerUtil.fromOM(resource);\n+  public OMElement put(OMElement headers, OMElement resource) throws WSTransferException {\n+    OMElement customerIdHeader = headers.getFirstChildWithName(Q_ELEM_CUSTOMER_ID);\n \n-        storage.put(customerId, customer);\n+    String customerId = customerIdHeader.getText();\n+    Customer customer = CustomerUtil.fromOM(resource);\n \n-        return null;\n-    }\n+    storage.put(customerId, customer);\n \n-    private Integer newIndex() {\n-        return new Integer(index++);\n-    }\n+    return null;\n+  }\n+\n+  private Integer newIndex() {\n+    return new Integer(index++);\n+  }\n }\n",
            "diff_size": 51
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "44",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 124).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/126/WSTransferSampleService.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/naturalize/126/WSTransferSampleService.java\nindex 8dbe8370813..ec35535a822 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/126/WSTransferSampleService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/naturalize/126/WSTransferSampleService.java\n@@ -88,4 +88,4 @@ public class WSTransferSampleService extends WSTransferAdapter {\n     private Integer newIndex() {\n         return new Integer(index++);\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "44",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 124).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/126/WSTransferSampleService.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler_three_grams/126/WSTransferSampleService.java\nindex 8dbe8370813..645b7c4bafe 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/126/WSTransferSampleService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler_three_grams/126/WSTransferSampleService.java\n@@ -41,7 +41,8 @@ public class WSTransferSampleService extends WSTransferAdapter {\n         Customer customer = CustomerUtil.fromOM(resource);\n         storage.put(index, customer);\n \n-        EndpointReference targetEPR = new EndpointReference(\"http://127.0.0.1:8080/axis2/services/WSTransferSampleService\");\n+        EndpointReference targetEPR = new EndpointReference(\n+                \"http://127.0.0.1:8080/axis2/services/WSTransferSampleService\");\n \n         OMFactory fac = OMAbstractFactory.getOMFactory();\n         OMElement refProperty = fac.createOMElement(Q_ELEM_CUSTOMER_ID, null);\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff",
        "styler_random"
    ]
}
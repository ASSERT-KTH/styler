{
    "project_name": "Activiti-Activiti",
    "error_id": "516",
    "information": {
        "errors": [
            {
                "line": "16",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * limitations under the License.\n */\npackage org.activiti.runtime.api.impl;\n\nimport java.util.Map;\nimport java.util.Optional;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/516/JsonMessagePayloadMappingProvider.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler/516/JsonMessagePayloadMappingProvider.java\nindex 2b96b4c8111..35343229350 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/516/JsonMessagePayloadMappingProvider.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler/516/JsonMessagePayloadMappingProvider.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.runtime.api.impl;\n \n import java.util.Map;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/516/JsonMessagePayloadMappingProvider.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/intellij/516/JsonMessagePayloadMappingProvider.java\nindex 2b96b4c8111..33df9037519 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/516/JsonMessagePayloadMappingProvider.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/intellij/516/JsonMessagePayloadMappingProvider.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.runtime.api.impl;\n \n import java.util.Map;\n@@ -25,7 +26,7 @@ import org.activiti.engine.impl.delegate.MessagePayloadMappingProvider;\n import org.activiti.engine.impl.el.ExpressionManager;\n \n public class JsonMessagePayloadMappingProvider implements MessagePayloadMappingProvider {\n-    \n+\n     private final Event bpmnEvent;\n     private final MessageEventDefinition messageEventDefinition;\n     private final ExpressionManager expressionManager;\n@@ -40,24 +41,24 @@ public class JsonMessagePayloadMappingProvider implements MessagePayloadMappingP\n         this.expressionManager = expressionManager;\n         this.variablesMappingProvider = variablesMappingProvider;\n     }\n-    \n+\n     public Optional<Map<String, Object>> getMessagePayload(DelegateExecution execution) {\n         return Optional.of(variablesMappingProvider.calculateInputVariables(execution))\n-                       .filter(payload -> !payload.isEmpty());\n+                .filter(payload -> !payload.isEmpty());\n     }\n-    \n+\n     public Event getBpmnEvent() {\n         return bpmnEvent;\n     }\n-    \n+\n     public MessageEventDefinition getMessageEventDefinition() {\n         return messageEventDefinition;\n     }\n-    \n+\n     public ExpressionManager getExpressionManager() {\n         return expressionManager;\n     }\n-    \n+\n     public VariablesMappingProvider getVariablesMappingProvider() {\n         return variablesMappingProvider;\n     }\n",
            "diff_size": 8
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "16",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'CLASS_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/516/JsonMessagePayloadMappingProvider.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/codebuff/516/JsonMessagePayloadMappingProvider.java\nindex 2b96b4c8111..eca0d11f168 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/516/JsonMessagePayloadMappingProvider.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/codebuff/516/JsonMessagePayloadMappingProvider.java\n@@ -17,48 +17,50 @@ package org.activiti.runtime.api.impl;\n \n import java.util.Map;\n import java.util.Optional;\n-\n import org.activiti.bpmn.model.Event;\n import org.activiti.bpmn.model.MessageEventDefinition;\n import org.activiti.engine.delegate.DelegateExecution;\n import org.activiti.engine.impl.delegate.MessagePayloadMappingProvider;\n import org.activiti.engine.impl.el.ExpressionManager;\n \n+\n public class JsonMessagePayloadMappingProvider implements MessagePayloadMappingProvider {\n-    \n-    private final Event bpmnEvent;\n-    private final MessageEventDefinition messageEventDefinition;\n-    private final ExpressionManager expressionManager;\n-    private final VariablesMappingProvider variablesMappingProvider;\n \n-    public JsonMessagePayloadMappingProvider(Event bpmnEvent,\n-                                             MessageEventDefinition messageEventDefinition,\n-                                             ExpressionManager expressionManager,\n-                                             VariablesMappingProvider variablesMappingProvider) {\n-        this.bpmnEvent = bpmnEvent;\n-        this.messageEventDefinition = messageEventDefinition;\n-        this.expressionManager = expressionManager;\n-        this.variablesMappingProvider = variablesMappingProvider;\n-    }\n-    \n-    public Optional<Map<String, Object>> getMessagePayload(DelegateExecution execution) {\n-        return Optional.of(variablesMappingProvider.calculateInputVariables(execution))\n-                       .filter(payload -> !payload.isEmpty());\n-    }\n-    \n-    public Event getBpmnEvent() {\n-        return bpmnEvent;\n-    }\n-    \n-    public MessageEventDefinition getMessageEventDefinition() {\n-        return messageEventDefinition;\n-    }\n-    \n-    public ExpressionManager getExpressionManager() {\n-        return expressionManager;\n-    }\n-    \n-    public VariablesMappingProvider getVariablesMappingProvider() {\n-        return variablesMappingProvider;\n-    }\n-}\n+  private final Event bpmnEvent;\n+\n+  private final MessageEventDefinition messageEventDefinition;\n+\n+  private final ExpressionManager expressionManager;\n+\n+  private final VariablesMappingProvider variablesMappingProvider;\n+\n+  public JsonMessagePayloadMappingProvider(Event bpmnEvent,\n+                                           MessageEventDefinition messageEventDefinition,\n+                                           ExpressionManager expressionManager, VariablesMappingProvider variablesMappingProvider) {\n+    this.bpmnEvent = bpmnEvent;\n+    this.messageEventDefinition = messageEventDefinition;\n+    this.expressionManager = expressionManager;\n+    this.variablesMappingProvider = variablesMappingProvider;\n+  }\n+\n+  public Optional<Map<String, Object>> getMessagePayload(DelegateExecution execution) {\n+    return Optional.of(variablesMappingProvider.calculateInputVariables(execution)).filter(payload -> !payload.isEmpty());\n+  }\n+\n+  public Event getBpmnEvent() {\n+    return bpmnEvent;\n+  }\n+\n+  public MessageEventDefinition getMessageEventDefinition() {\n+    return messageEventDefinition;\n+  }\n+\n+  public ExpressionManager getExpressionManager() {\n+    return expressionManager;\n+  }\n+\n+  public VariablesMappingProvider getVariablesMappingProvider() {\n+    return variablesMappingProvider;\n+  }\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 45
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/516/JsonMessagePayloadMappingProvider.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_random/516/JsonMessagePayloadMappingProvider.java\nindex 2b96b4c8111..35343229350 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/516/JsonMessagePayloadMappingProvider.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_random/516/JsonMessagePayloadMappingProvider.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.runtime.api.impl;\n \n import java.util.Map;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/516/JsonMessagePayloadMappingProvider.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_three_grams/516/JsonMessagePayloadMappingProvider.java\nindex 2b96b4c8111..35343229350 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/516/JsonMessagePayloadMappingProvider.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_three_grams/516/JsonMessagePayloadMappingProvider.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.runtime.api.impl;\n \n import java.util.Map;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "927",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "28",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "28",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "33",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "33",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/927/IdGenerator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/927/IdGenerator.java\nindex 89e02b88ffe..f718ebad90e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/927/IdGenerator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/927/IdGenerator.java\n@@ -17,105 +17,111 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.store.id;\n \n import java.io.Closeable;\n \n public interface IdGenerator extends IdSequence, Closeable\n {\n+  @Override\n+  IdRange nextIdBatch(int size);\n+\n+  /**\n+   * @param id the highest in use + 1\n+   */\n+  void setHighId(long id);\n+\n+  long getHighId();\n+\n+  long getHighestPossibleIdInUse();\n+\n+  void freeId(long id);\n+\n+  /**\n+   * Closes the id generator, marking it as clean.\n+   */\n+  @Override\n+  void close();\n+\n+  long getNumberOfIdsInUse();\n+\n+  long getDefragCount();\n+\n+  /**\n+   * Closes the id generator as dirty and deletes it right after closed. This operation is safe, in the sense\n+   * that the id generator file is closed but not marked as clean. This has the net result that a crash in the\n+   * middle will still leave the file marked as dirty so it will be deleted on the next open call.\n+   */\n+  void delete();\n+\n+  class Delegate implements IdGenerator\n+  {\n+    private final IdGenerator delegate;\n+\n+    public Delegate(IdGenerator delegate)\n+    {\n+      this.delegate = delegate;\n+    }\n+\n+    @Override\n+    public long nextId()\n+    {\n+      return delegate.nextId();\n+    }\n+\n+    @Override\n+    public IdRange nextIdBatch(int size)\n+    {\n+      return delegate.nextIdBatch(size);\n+    }\n+\n     @Override\n-    IdRange nextIdBatch( int size );\n-\n-    /**\n-     * @param id the highest in use + 1\n-     */\n-    void setHighId( long id );\n-    long getHighId();\n-    long getHighestPossibleIdInUse();\n-    void freeId( long id );\n-\n-    /**\n-     * Closes the id generator, marking it as clean.\n-     */\n+    public void setHighId(long id)\n+    {\n+      delegate.setHighId(id);\n+    }\n+\n+    @Override\n+    public long getHighId()\n+    {\n+      return delegate.getHighId();\n+    }\n+\n+    @Override\n+    public long getHighestPossibleIdInUse()\n+    {\n+      return delegate.getHighestPossibleIdInUse();\n+    }\n+\n+    @Override\n+    public void freeId(long id)\n+    {\n+      delegate.freeId(id);\n+    }\n+\n+    @Override\n+    public void close()\n+    {\n+      delegate.close();\n+    }\n+\n+    @Override\n+    public long getNumberOfIdsInUse()\n+    {\n+      return delegate.getNumberOfIdsInUse();\n+    }\n+\n+    @Override\n+    public long getDefragCount()\n+    {\n+      return delegate.getDefragCount();\n+    }\n+\n     @Override\n-    void close();\n-    long getNumberOfIdsInUse();\n-    long getDefragCount();\n-\n-    /**\n-     * Closes the id generator as dirty and deletes it right after closed. This operation is safe, in the sense\n-     * that the id generator file is closed but not marked as clean. This has the net result that a crash in the\n-     * middle will still leave the file marked as dirty so it will be deleted on the next open call.\n-     */\n-    void delete();\n-\n-    class Delegate implements IdGenerator\n+    public void delete()\n     {\n-        private final IdGenerator delegate;\n-\n-        public Delegate( IdGenerator delegate )\n-        {\n-            this.delegate = delegate;\n-        }\n-\n-        @Override\n-        public long nextId()\n-        {\n-            return delegate.nextId();\n-        }\n-\n-        @Override\n-        public IdRange nextIdBatch( int size )\n-        {\n-            return delegate.nextIdBatch( size );\n-        }\n-\n-        @Override\n-        public void setHighId( long id )\n-        {\n-            delegate.setHighId( id );\n-        }\n-\n-        @Override\n-        public long getHighId()\n-        {\n-            return delegate.getHighId();\n-        }\n-\n-        @Override\n-        public long getHighestPossibleIdInUse()\n-        {\n-            return delegate.getHighestPossibleIdInUse();\n-        }\n-\n-        @Override\n-        public void freeId( long id )\n-        {\n-            delegate.freeId( id );\n-        }\n-\n-        @Override\n-        public void close()\n-        {\n-            delegate.close();\n-        }\n-\n-        @Override\n-        public long getNumberOfIdsInUse()\n-        {\n-            return delegate.getNumberOfIdsInUse();\n-        }\n-\n-        @Override\n-        public long getDefragCount()\n-        {\n-            return delegate.getDefragCount();\n-        }\n-\n-        @Override\n-        public void delete()\n-        {\n-            delegate.delete();\n-        }\n+      delegate.delete();\n     }\n+  }\n }\n",
            "diff_size": 173
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/927/IdGenerator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/927/IdGenerator.java\nindex 89e02b88ffe..33951abda67 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/927/IdGenerator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/927/IdGenerator.java\n@@ -118,4 +118,4 @@ public interface IdGenerator extends IdSequence, Closeable\n             delegate.delete();\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
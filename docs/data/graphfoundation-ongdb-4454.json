{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4454",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "39",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "111",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "53",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4454/AuthorizationDisabledFilter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4454/AuthorizationDisabledFilter.java\nindex 6cd092a103f..c540d439524 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4454/AuthorizationDisabledFilter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4454/AuthorizationDisabledFilter.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.server.rest.dbms;\n \n import java.io.IOException;\n@@ -34,30 +35,29 @@ import static javax.servlet.http.HttpServletRequest.BASIC_AUTH;\n \n public class AuthorizationDisabledFilter extends AuthorizationFilter\n {\n-    @Override\n-    public void doFilter( ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain )\n-            throws IOException, ServletException\n-    {\n-        validateRequestType( servletRequest );\n-        validateResponseType( servletResponse );\n-\n-        final HttpServletRequest request = (HttpServletRequest) servletRequest;\n-        final HttpServletResponse response = (HttpServletResponse) servletResponse;\n-\n-        try\n-        {\n-            filterChain.doFilter(\n-                    new AuthorizedRequestWrapper( BASIC_AUTH, \"neo4j\", request, getAuthDisabledLoginContext() ),\n-                    servletResponse );\n-        }\n-        catch ( AuthorizationViolationException e )\n-        {\n-            unauthorizedAccess( e.getMessage() ).accept( response );\n-        }\n-    }\n+  @Override\n+  public void doFilter(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain)\n+      throws IOException, ServletException\n+  {\n+    validateRequestType(servletRequest);\n+    validateResponseType(servletResponse);\n \n-    protected LoginContext getAuthDisabledLoginContext()\n+    final HttpServletRequest request = (HttpServletRequest) servletRequest;\n+    final HttpServletResponse response = (HttpServletResponse) servletResponse;\n+\n+    try\n+    {\n+      filterChain.doFilter(\n+          new AuthorizedRequestWrapper(BASIC_AUTH, \"neo4j\", request, getAuthDisabledLoginContext()),\n+          servletResponse);\n+    } catch (AuthorizationViolationException e)\n     {\n-        return LoginContext.AUTH_DISABLED;\n+      unauthorizedAccess(e.getMessage()).accept(response);\n     }\n+  }\n+\n+  protected LoginContext getAuthDisabledLoginContext()\n+  {\n+    return LoginContext.AUTH_DISABLED;\n+  }\n }\n",
            "diff_size": 38
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4454/AuthorizationDisabledFilter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4454/AuthorizationDisabledFilter.java\nindex 6cd092a103f..54275c23f46 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4454/AuthorizationDisabledFilter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4454/AuthorizationDisabledFilter.java\n@@ -35,9 +35,8 @@ import static javax.servlet.http.HttpServletRequest.BASIC_AUTH;\n public class AuthorizationDisabledFilter extends AuthorizationFilter\n {\n     @Override\n-    public void doFilter( ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain )\n-            throws IOException, ServletException\n-    {\n+    public void doFilter( ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain ) throws IOException, ServletException\n+{\n         validateRequestType( servletRequest );\n         validateResponseType( servletResponse );\n \n@@ -46,10 +45,8 @@ public class AuthorizationDisabledFilter extends AuthorizationFilter\n \n         try\n         {\n-            filterChain.doFilter(\n-                    new AuthorizedRequestWrapper( BASIC_AUTH, \"neo4j\", request, getAuthDisabledLoginContext() ),\n-                    servletResponse );\n-        }\n+            filterChain.doFilter( new AuthorizedRequestWrapper( BASIC_AUTH, \"neo4j\", request, getAuthDisabledLoginContext() ), servletResponse );\n+    }\n         catch ( AuthorizationViolationException e )\n         {\n             unauthorizedAccess( e.getMessage() ).accept( response );\n@@ -60,4 +57,4 @@ public class AuthorizationDisabledFilter extends AuthorizationFilter\n     {\n         return LoginContext.AUTH_DISABLED;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3730",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "44",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3730/TypeMirrorUtils.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3730/TypeMirrorUtils.java\nindex 9b6c2582c45..86c49d5a9ad 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3730/TypeMirrorUtils.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3730/TypeMirrorUtils.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.tooling.procedure.compilerutils;\n \n import java.util.Collection;\n@@ -37,38 +38,38 @@ import static java.util.Arrays.asList;\n public class TypeMirrorUtils\n {\n \n-    private Types typeUtils;\n-    private Elements elementUtils;\n+  private Types typeUtils;\n+  private Elements elementUtils;\n \n-    public TypeMirrorUtils( Types typeUtils, Elements elementUtils )\n-    {\n-        this.typeUtils = typeUtils;\n-        this.elementUtils = elementUtils;\n-    }\n+  public TypeMirrorUtils(Types typeUtils, Elements elementUtils)\n+  {\n+    this.typeUtils = typeUtils;\n+    this.elementUtils = elementUtils;\n+  }\n \n-    public final Collection<TypeMirror> procedureAllowedTypes()\n-    {\n-        PrimitiveType bool = primitive( TypeKind.BOOLEAN );\n-        PrimitiveType longType = primitive( TypeKind.LONG );\n-        PrimitiveType doubleType = primitive( TypeKind.DOUBLE );\n-        return asList( bool, boxed( bool ), longType, boxed( longType ), doubleType, boxed( doubleType ),\n-                typeMirror( String.class ), typeMirror( Number.class ), typeMirror( Object.class ),\n-                typeMirror( Map.class ), typeMirror( List.class ), typeMirror( Node.class ),\n-                typeMirror( Relationship.class ), typeMirror( Path.class ) );\n-    }\n+  public final Collection<TypeMirror> procedureAllowedTypes()\n+  {\n+    PrimitiveType bool = primitive(TypeKind.BOOLEAN);\n+    PrimitiveType longType = primitive(TypeKind.LONG);\n+    PrimitiveType doubleType = primitive(TypeKind.DOUBLE);\n+    return asList(bool, boxed(bool), longType, boxed(longType), doubleType, boxed(doubleType),\n+        typeMirror(String.class), typeMirror(Number.class), typeMirror(Object.class),\n+        typeMirror(Map.class), typeMirror(List.class), typeMirror(Node.class),\n+        typeMirror(Relationship.class), typeMirror(Path.class));\n+  }\n \n-    public PrimitiveType primitive( TypeKind kind )\n-    {\n-        return typeUtils.getPrimitiveType( kind );\n-    }\n+  public PrimitiveType primitive(TypeKind kind)\n+  {\n+    return typeUtils.getPrimitiveType(kind);\n+  }\n \n-    public TypeMirror typeMirror( Class<?> type )\n-    {\n-        return elementUtils.getTypeElement( type.getName() ).asType();\n-    }\n+  public TypeMirror typeMirror(Class<?> type)\n+  {\n+    return elementUtils.getTypeElement(type.getName()).asType();\n+  }\n \n-    private TypeMirror boxed( PrimitiveType bool )\n-    {\n-        return typeUtils.boxedClass( bool ).asType();\n-    }\n+  private TypeMirror boxed(PrimitiveType bool)\n+  {\n+    return typeUtils.boxedClass(bool).asType();\n+  }\n }\n",
            "diff_size": 30
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 328).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3730/TypeMirrorUtils.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3730/TypeMirrorUtils.java\nindex 9b6c2582c45..719d7f53ad6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3730/TypeMirrorUtils.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3730/TypeMirrorUtils.java\n@@ -36,7 +36,6 @@ import static java.util.Arrays.asList;\n \n public class TypeMirrorUtils\n {\n-\n     private Types typeUtils;\n     private Elements elementUtils;\n \n@@ -51,10 +50,7 @@ public class TypeMirrorUtils\n         PrimitiveType bool = primitive( TypeKind.BOOLEAN );\n         PrimitiveType longType = primitive( TypeKind.LONG );\n         PrimitiveType doubleType = primitive( TypeKind.DOUBLE );\n-        return asList( bool, boxed( bool ), longType, boxed( longType ), doubleType, boxed( doubleType ),\n-                typeMirror( String.class ), typeMirror( Number.class ), typeMirror( Object.class ),\n-                typeMirror( Map.class ), typeMirror( List.class ), typeMirror( Node.class ),\n-                typeMirror( Relationship.class ), typeMirror( Path.class ) );\n+        return asList( bool, boxed( bool ), longType, boxed( longType ), doubleType, boxed( doubleType ), typeMirror( String.class ), typeMirror( Number.class ), typeMirror( Object.class ), typeMirror( Map.class ), typeMirror( List.class ), typeMirror( Node.class ), typeMirror( Relationship.class ), typeMirror( Path.class ) );\n     }\n \n     public PrimitiveType primitive( TypeKind kind )\n@@ -71,4 +67,4 @@ public class TypeMirrorUtils\n     {\n         return typeUtils.boxedClass( bool ).asType();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
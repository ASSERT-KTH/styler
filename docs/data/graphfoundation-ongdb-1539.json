{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1539",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "59",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1539/ArrayValue.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1539/ArrayValue.java\nindex 8f37b695ec0..06b996cbc4c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1539/ArrayValue.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1539/ArrayValue.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.values.storable;\n \n import java.util.Iterator;\n@@ -30,84 +31,84 @@ import org.neo4j.values.SequenceValue;\n  */\n public abstract class ArrayValue extends Value implements SequenceValue\n {\n-    @Override\n-    public abstract int length();\n+  @Override\n+  public abstract int length();\n \n-    @Override\n-    public IterationPreference iterationPreference()\n-    {\n-        return IterationPreference.RANDOM_ACCESS;\n-    }\n+  @Override\n+  public IterationPreference iterationPreference()\n+  {\n+    return IterationPreference.RANDOM_ACCESS;\n+  }\n \n-    @Override\n-    public Iterator<AnyValue> iterator()\n+  @Override\n+  public Iterator<AnyValue> iterator()\n+  {\n+    return new Iterator<AnyValue>()\n     {\n-        return new Iterator<AnyValue>()\n-        {\n-            private int offset;\n-\n-            @Override\n-            public boolean hasNext()\n-            {\n-                return offset < length();\n-            }\n-\n-            @Override\n-            public AnyValue next()\n-            {\n-                if ( !hasNext() )\n-                {\n-                    throw new NoSuchElementException();\n-                }\n-                return value( offset++ );\n-            }\n-        };\n-    }\n+      private int offset;\n \n-    @Override\n-    public final boolean eq( Object other )\n-    {\n-        if ( other == null )\n+      @Override\n+      public boolean hasNext()\n+      {\n+        return offset < length();\n+      }\n+\n+      @Override\n+      public AnyValue next()\n+      {\n+        if (!hasNext())\n         {\n-            return false;\n+          throw new NoSuchElementException();\n         }\n+        return value(offset++);\n+      }\n+    };\n+  }\n \n-        return other instanceof SequenceValue && this.equals( (SequenceValue) other );\n-    }\n-\n-    @Override\n-    public final boolean equals( boolean x )\n+  @Override\n+  public final boolean eq(Object other)\n+  {\n+    if (other == null)\n     {\n-        return false;\n+      return false;\n     }\n \n-    @Override\n-    public final boolean equals( long x )\n-    {\n-        return false;\n-    }\n+    return other instanceof SequenceValue && this.equals((SequenceValue) other);\n+  }\n \n-    @Override\n-    public final boolean equals( double x )\n-    {\n-        return false;\n-    }\n+  @Override\n+  public final boolean equals(boolean x)\n+  {\n+    return false;\n+  }\n \n-    @Override\n-    public final boolean equals( char x )\n-    {\n-        return false;\n-    }\n+  @Override\n+  public final boolean equals(long x)\n+  {\n+    return false;\n+  }\n \n-    @Override\n-    public final boolean equals( String x )\n-    {\n-        return false;\n-    }\n+  @Override\n+  public final boolean equals(double x)\n+  {\n+    return false;\n+  }\n \n-    @Override\n-    public boolean isSequenceValue()\n-    {\n-        return true;\n-    }\n+  @Override\n+  public final boolean equals(char x)\n+  {\n+    return false;\n+  }\n+\n+  @Override\n+  public final boolean equals(String x)\n+  {\n+    return false;\n+  }\n+\n+  @Override\n+  public boolean isSequenceValue()\n+  {\n+    return true;\n+  }\n }\n",
            "diff_size": 91
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1539/ArrayValue.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1539/ArrayValue.java\nindex 8f37b695ec0..98a77f24ddc 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1539/ArrayValue.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1539/ArrayValue.java\n@@ -59,7 +59,8 @@ public abstract class ArrayValue extends Value implements SequenceValue\n                 {\n                     throw new NoSuchElementException();\n                 }\n-                return value( offset++ );\n+\n+return value( offset++ );\n             }\n         };\n     }\n@@ -110,4 +111,4 @@ public abstract class ArrayValue extends Value implements SequenceValue\n     {\n         return true;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
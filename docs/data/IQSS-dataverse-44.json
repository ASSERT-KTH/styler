{
    "project_name": "IQSS-dataverse",
    "error_id": "44",
    "information": {
        "errors": [
            {
                "line": "40",
                "column": "1",
                "severity": "error",
                "message": "File contains tab characters (this is the first instance).",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
            }
        ]
    },
    "source_code": "            @UniqueConstraint(columnNames={\"dataverse_id\", \"datasetfieldtype_id\"})}\n        , indexes = {@Index(columnList=\"dataverse_id\")\n\t\t, @Index(columnList=\"datasetfieldtype_id\")\n\t\t, @Index(columnList=\"required\")}\n)\n@Entity",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "41",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/44/DataverseFieldTypeInputLevel.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/styler/44/DataverseFieldTypeInputLevel.java\nindex 92b1ff7c2cf..16617ddcc38 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/44/DataverseFieldTypeInputLevel.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/styler/44/DataverseFieldTypeInputLevel.java\n@@ -37,7 +37,7 @@ import javax.persistence.UniqueConstraint;\n         ,  uniqueConstraints={\n             @UniqueConstraint(columnNames={\"dataverse_id\", \"datasetfieldtype_id\"})}\n         , indexes = {@Index(columnList=\"dataverse_id\")\n-\t\t, @Index(columnList=\"datasetfieldtype_id\")\n+                    , @Index(columnList=\"datasetfieldtype_id\")\n \t\t, @Index(columnList=\"required\")}\n )\n @Entity\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/44/DataverseFieldTypeInputLevel.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/intellij/44/DataverseFieldTypeInputLevel.java\nindex 92b1ff7c2cf..d88bafbe308 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/44/DataverseFieldTypeInputLevel.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/intellij/44/DataverseFieldTypeInputLevel.java\n@@ -3,6 +3,7 @@\n  * To change this template file, choose Tools | Templates\n  * and open the template in the editor.\n  */\n+\n package edu.harvard.iq.dataverse;\n \n import java.io.Serializable;\n@@ -19,117 +20,118 @@ import javax.persistence.Table;\n import javax.persistence.UniqueConstraint;\n \n /**\n- *\n  * @author skraffmiller\n  */\n @NamedQueries({\n-    @NamedQuery(name = \"DataverseFieldTypeInputLevel.removeByOwnerId\",\n-            query = \"DELETE FROM DataverseFieldTypeInputLevel f WHERE f.dataverse.id=:ownerId\"),\n-    @NamedQuery(name = \"DataverseFieldTypeInputLevel.findByDataverseId\",\n-            query = \"select f from DataverseFieldTypeInputLevel f where f.dataverse.id = :dataverseId\"),\n-    @NamedQuery(name = \"DataverseFieldTypeInputLevel.findByDataverseIdDatasetFieldTypeId\",\n-            query = \"select f from DataverseFieldTypeInputLevel f where f.dataverse.id = :dataverseId and f.datasetFieldType.id = :datasetFieldTypeId\"),\n-    @NamedQuery(name = \"DataverseFieldTypeInputLevel.findByDataverseIdAndDatasetFieldTypeIdList\",\n-            query = \"select f from DataverseFieldTypeInputLevel f where f.dataverse.id = :dataverseId and f.datasetFieldType.id in :datasetFieldIdList\")\n- \n+  @NamedQuery(name = \"DataverseFieldTypeInputLevel.removeByOwnerId\",\n+    query = \"DELETE FROM DataverseFieldTypeInputLevel f WHERE f.dataverse.id=:ownerId\"),\n+  @NamedQuery(name = \"DataverseFieldTypeInputLevel.findByDataverseId\",\n+    query = \"select f from DataverseFieldTypeInputLevel f where f.dataverse.id = :dataverseId\"),\n+  @NamedQuery(name = \"DataverseFieldTypeInputLevel.findByDataverseIdDatasetFieldTypeId\",\n+    query = \"select f from DataverseFieldTypeInputLevel f where f.dataverse.id = :dataverseId and f.datasetFieldType.id = :datasetFieldTypeId\"),\n+  @NamedQuery(name = \"DataverseFieldTypeInputLevel.findByDataverseIdAndDatasetFieldTypeIdList\",\n+    query = \"select f from DataverseFieldTypeInputLevel f where f.dataverse.id = :dataverseId and f.datasetFieldType.id in :datasetFieldIdList\")\n+\n })\n-@Table(name=\"DataverseFieldTypeInputLevel\"\n-        ,  uniqueConstraints={\n-            @UniqueConstraint(columnNames={\"dataverse_id\", \"datasetfieldtype_id\"})}\n-        , indexes = {@Index(columnList=\"dataverse_id\")\n-\t\t, @Index(columnList=\"datasetfieldtype_id\")\n-\t\t, @Index(columnList=\"required\")}\n+@Table(name = \"DataverseFieldTypeInputLevel\"\n+  , uniqueConstraints = {\n+  @UniqueConstraint(columnNames = {\"dataverse_id\", \"datasetfieldtype_id\"})}\n+  , indexes = {@Index(columnList = \"dataverse_id\")\n+  , @Index(columnList = \"datasetfieldtype_id\")\n+  , @Index(columnList = \"required\")}\n )\n @Entity\n public class DataverseFieldTypeInputLevel implements Serializable {\n \n-    private static final long serialVersionUID = 1L;\n-    @Id\n-    @GeneratedValue(strategy = GenerationType.IDENTITY)\n-    private Long id;\n-\n-    @ManyToOne\n-    @JoinColumn(name = \"dataverse_id\")\n-    private Dataverse dataverse;\n-\n-    @ManyToOne\n-    @JoinColumn(name = \"datasetfieldtype_id\")\n-    private DatasetFieldType datasetFieldType;\n-    private boolean include;\n-    private boolean required;\n-    \n-    public DataverseFieldTypeInputLevel () {}\n-  \n-    public DataverseFieldTypeInputLevel (DatasetFieldType fieldType, Dataverse dataverse, boolean required, boolean include) {\n-        this.datasetFieldType = fieldType;\n-        this.dataverse = dataverse;\n-        this.required = required;\n-        this.include = include;\n-    }    \n-\n-    public Long getId() {\n-        return id;\n-    }\n-\n-    public void setId(Long id) {\n-        this.id = id;\n-    }\n-\n-    @Override\n-    public int hashCode() {\n-        int hash = 0;\n-        hash += (id != null ? id.hashCode() : 0);\n-        return hash;\n-    }\n-\n-    public Dataverse getDataverse() {\n-        return dataverse;\n-    }\n-\n-    public void setDataverse(Dataverse dataverse) {\n-        this.dataverse = dataverse;\n-    }\n-\n-    public DatasetFieldType getDatasetFieldType() {\n-        return datasetFieldType;\n+  private static final long serialVersionUID = 1L;\n+  @Id\n+  @GeneratedValue(strategy = GenerationType.IDENTITY)\n+  private Long id;\n+\n+  @ManyToOne\n+  @JoinColumn(name = \"dataverse_id\")\n+  private Dataverse dataverse;\n+\n+  @ManyToOne\n+  @JoinColumn(name = \"datasetfieldtype_id\")\n+  private DatasetFieldType datasetFieldType;\n+  private boolean include;\n+  private boolean required;\n+\n+  public DataverseFieldTypeInputLevel() {\n+  }\n+\n+  public DataverseFieldTypeInputLevel(DatasetFieldType fieldType, Dataverse dataverse, boolean required,\n+                                      boolean include) {\n+    this.datasetFieldType = fieldType;\n+    this.dataverse = dataverse;\n+    this.required = required;\n+    this.include = include;\n+  }\n+\n+  public Long getId() {\n+    return id;\n+  }\n+\n+  public void setId(Long id) {\n+    this.id = id;\n+  }\n+\n+  @Override\n+  public int hashCode() {\n+    int hash = 0;\n+    hash += (id != null ? id.hashCode() : 0);\n+    return hash;\n+  }\n+\n+  public Dataverse getDataverse() {\n+    return dataverse;\n+  }\n+\n+  public void setDataverse(Dataverse dataverse) {\n+    this.dataverse = dataverse;\n+  }\n+\n+  public DatasetFieldType getDatasetFieldType() {\n+    return datasetFieldType;\n+  }\n+\n+  public void setDatasetFieldType(DatasetFieldType datasetFieldType) {\n+    this.datasetFieldType = datasetFieldType;\n+  }\n+\n+  public boolean isInclude() {\n+    return include;\n+  }\n+\n+  public void setInclude(boolean include) {\n+    this.include = include;\n+  }\n+\n+  public boolean isRequired() {\n+    return required;\n+  }\n+\n+  public void setRequired(boolean required) {\n+    this.required = required;\n+  }\n+\n+  @Override\n+  public boolean equals(Object object) {\n+    // TODO: Warning - this method won't work in the case the id fields are not set\n+    if (!(object instanceof DataverseFieldTypeInputLevel)) {\n+      return false;\n     }\n-\n-    public void setDatasetFieldType(DatasetFieldType datasetFieldType) {\n-        this.datasetFieldType = datasetFieldType;\n-    }\n-\n-    public boolean isInclude() {\n-        return include;\n-    }\n-\n-    public void setInclude(boolean include) {\n-        this.include = include;\n-    }\n-\n-    public boolean isRequired() {\n-        return required;\n-    }\n-\n-    public void setRequired(boolean required) {\n-        this.required = required;\n+    DataverseFieldTypeInputLevel other = (DataverseFieldTypeInputLevel) object;\n+    if ((this.id == null && other.id != null) || (this.id != null && !this.id.equals(other.id))) {\n+      return false;\n     }\n+    return true;\n+  }\n \n-    @Override\n-    public boolean equals(Object object) {\n-        // TODO: Warning - this method won't work in the case the id fields are not set\n-        if (!(object instanceof DataverseFieldTypeInputLevel)) {\n-            return false;\n-        }\n-        DataverseFieldTypeInputLevel other = (DataverseFieldTypeInputLevel) object;\n-        if ((this.id == null && other.id != null) || (this.id != null && !this.id.equals(other.id))) {\n-            return false;\n-        }\n-        return true;\n-    }\n-\n-    @Override\n-    public String toString() {\n-        return \"edu.harvard.iq.dataverse.DataverseFieldTypeInputLevel[ id=\" + id + \" ]\";\n-    }\n+  @Override\n+  public String toString() {\n+    return \"edu.harvard.iq.dataverse.DataverseFieldTypeInputLevel[ id=\" + id + \" ]\";\n+  }\n \n }\n",
            "diff_size": 133
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/44/DataverseFieldTypeInputLevel.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/naturalize/44/DataverseFieldTypeInputLevel.java\nindex 92b1ff7c2cf..e62f387f2f1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/44/DataverseFieldTypeInputLevel.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/naturalize/44/DataverseFieldTypeInputLevel.java\n@@ -30,16 +30,10 @@ import javax.persistence.UniqueConstraint;\n     @NamedQuery(name = \"DataverseFieldTypeInputLevel.findByDataverseIdDatasetFieldTypeId\",\n             query = \"select f from DataverseFieldTypeInputLevel f where f.dataverse.id = :dataverseId and f.datasetFieldType.id = :datasetFieldTypeId\"),\n     @NamedQuery(name = \"DataverseFieldTypeInputLevel.findByDataverseIdAndDatasetFieldTypeIdList\",\n-            query = \"select f from DataverseFieldTypeInputLevel f where f.dataverse.id = :dataverseId and f.datasetFieldType.id in :datasetFieldIdList\")\n- \n-})\n-@Table(name=\"DataverseFieldTypeInputLevel\"\n-        ,  uniqueConstraints={\n-            @UniqueConstraint(columnNames={\"dataverse_id\", \"datasetfieldtype_id\"})}\n-        , indexes = {@Index(columnList=\"dataverse_id\")\n-\t\t, @Index(columnList=\"datasetfieldtype_id\")\n-\t\t, @Index(columnList=\"required\")}\n-)\n+            query = \"select f from DataverseFieldTypeInputLevel f where f.dataverse.id = :dataverseId and f.datasetFieldType.id in :datasetFieldIdList\")})\n+@Table(name=\"DataverseFieldTypeInputLevel\", uniqueConstraints={\n+            @UniqueConstraint(columnNames={\"dataverse_id\", \"datasetfieldtype_id\"})\n+    }, indexes = {@Index(columnList=\"dataverse_id\"), @Index(columnList=\"datasetfieldtype_id\"), @Index(columnList=\"required\")})\n @Entity\n public class DataverseFieldTypeInputLevel implements Serializable {\n \n@@ -58,10 +52,12 @@ public class DataverseFieldTypeInputLevel implements Serializable {\n     private boolean include;\n     private boolean required;\n     \n-    public DataverseFieldTypeInputLevel () {}\n-  \n+    public DataverseFieldTypeInputLevel () {\n+\n+  }\n+\n     public DataverseFieldTypeInputLevel (DatasetFieldType fieldType, Dataverse dataverse, boolean required, boolean include) {\n-        this.datasetFieldType = fieldType;\n+    this.datasetFieldType = fieldType;\n         this.dataverse = dataverse;\n         this.required = required;\n         this.include = include;\n@@ -132,4 +128,4 @@ public class DataverseFieldTypeInputLevel implements Serializable {\n         return \"edu.harvard.iq.dataverse.DataverseFieldTypeInputLevel[ id=\" + id + \" ]\";\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 16
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/44/DataverseFieldTypeInputLevel.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/codebuff/44/DataverseFieldTypeInputLevel.java\nindex 92b1ff7c2cf..871b6ec639e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/44/DataverseFieldTypeInputLevel.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/codebuff/44/DataverseFieldTypeInputLevel.java\n@@ -22,28 +22,26 @@ import javax.persistence.UniqueConstraint;\n  *\n  * @author skraffmiller\n  */\n+\n+\n @NamedQueries({\n     @NamedQuery(name = \"DataverseFieldTypeInputLevel.removeByOwnerId\",\n-            query = \"DELETE FROM DataverseFieldTypeInputLevel f WHERE f.dataverse.id=:ownerId\"),\n+        query = \"DELETE FROM DataverseFieldTypeInputLevel f WHERE f.dataverse.id=:ownerId\"),\n     @NamedQuery(name = \"DataverseFieldTypeInputLevel.findByDataverseId\",\n-            query = \"select f from DataverseFieldTypeInputLevel f where f.dataverse.id = :dataverseId\"),\n+        query = \"select f from DataverseFieldTypeInputLevel f where f.dataverse.id = :dataverseId\"),\n     @NamedQuery(name = \"DataverseFieldTypeInputLevel.findByDataverseIdDatasetFieldTypeId\",\n-            query = \"select f from DataverseFieldTypeInputLevel f where f.dataverse.id = :dataverseId and f.datasetFieldType.id = :datasetFieldTypeId\"),\n+        query = \"select f from DataverseFieldTypeInputLevel f where f.dataverse.id = :dataverseId and f.datasetFieldType.id = :datasetFieldTypeId\"),\n     @NamedQuery(name = \"DataverseFieldTypeInputLevel.findByDataverseIdAndDatasetFieldTypeIdList\",\n-            query = \"select f from DataverseFieldTypeInputLevel f where f.dataverse.id = :dataverseId and f.datasetFieldType.id in :datasetFieldIdList\")\n- \n+        query = \"select f from DataverseFieldTypeInputLevel f where f.dataverse.id = :dataverseId and f.datasetFieldType.id in :datasetFieldIdList\")\n })\n-@Table(name=\"DataverseFieldTypeInputLevel\"\n-        ,  uniqueConstraints={\n-            @UniqueConstraint(columnNames={\"dataverse_id\", \"datasetfieldtype_id\"})}\n-        , indexes = {@Index(columnList=\"dataverse_id\")\n-\t\t, @Index(columnList=\"datasetfieldtype_id\")\n-\t\t, @Index(columnList=\"required\")}\n-)\n+@Table(name = \"DataverseFieldTypeInputLevel\",\n+       uniqueConstraints = {@UniqueConstraint(columnNames = {\"dataverse_id\", \"datasetfieldtype_id\"})},\n+       indexes = {@Index(columnList = \"dataverse_id\"), @Index(columnList = \"datasetfieldtype_id\"), @Index(columnList = \"required\")})\n @Entity\n public class DataverseFieldTypeInputLevel implements Serializable {\n \n     private static final long serialVersionUID = 1L;\n+\n     @Id\n     @GeneratedValue(strategy = GenerationType.IDENTITY)\n     private Long id;\n@@ -57,15 +55,15 @@ public class DataverseFieldTypeInputLevel implements Serializable {\n     private DatasetFieldType datasetFieldType;\n     private boolean include;\n     private boolean required;\n-    \n-    public DataverseFieldTypeInputLevel () {}\n-  \n-    public DataverseFieldTypeInputLevel (DatasetFieldType fieldType, Dataverse dataverse, boolean required, boolean include) {\n+\n+    public DataverseFieldTypeInputLevel() {}\n+\n+    public DataverseFieldTypeInputLevel(DatasetFieldType fieldType, Dataverse dataverse, boolean required, boolean include) {\n         this.datasetFieldType = fieldType;\n         this.dataverse = dataverse;\n         this.required = required;\n         this.include = include;\n-    }    \n+    }\n \n     public Long getId() {\n         return id;\n@@ -120,6 +118,7 @@ public class DataverseFieldTypeInputLevel implements Serializable {\n         if (!(object instanceof DataverseFieldTypeInputLevel)) {\n             return false;\n         }\n+\n         DataverseFieldTypeInputLevel other = (DataverseFieldTypeInputLevel) object;\n         if ((this.id == null && other.id != null) || (this.id != null && !this.id.equals(other.id))) {\n             return false;\n@@ -132,4 +131,4 @@ public class DataverseFieldTypeInputLevel implements Serializable {\n         return \"edu.harvard.iq.dataverse.DataverseFieldTypeInputLevel[ id=\" + id + \" ]\";\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 22
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "41",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/44/DataverseFieldTypeInputLevel.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/styler_random/44/DataverseFieldTypeInputLevel.java\nindex 92b1ff7c2cf..16617ddcc38 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/44/DataverseFieldTypeInputLevel.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/styler_random/44/DataverseFieldTypeInputLevel.java\n@@ -37,7 +37,7 @@ import javax.persistence.UniqueConstraint;\n         ,  uniqueConstraints={\n             @UniqueConstraint(columnNames={\"dataverse_id\", \"datasetfieldtype_id\"})}\n         , indexes = {@Index(columnList=\"dataverse_id\")\n-\t\t, @Index(columnList=\"datasetfieldtype_id\")\n+                    , @Index(columnList=\"datasetfieldtype_id\")\n \t\t, @Index(columnList=\"required\")}\n )\n @Entity\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "41",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/44/DataverseFieldTypeInputLevel.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/styler_three_grams/44/DataverseFieldTypeInputLevel.java\nindex 92b1ff7c2cf..5aed18b7d73 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/44/DataverseFieldTypeInputLevel.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/styler_three_grams/44/DataverseFieldTypeInputLevel.java\n@@ -37,7 +37,7 @@ import javax.persistence.UniqueConstraint;\n         ,  uniqueConstraints={\n             @UniqueConstraint(columnNames={\"dataverse_id\", \"datasetfieldtype_id\"})}\n         , indexes = {@Index(columnList=\"dataverse_id\")\n-\t\t, @Index(columnList=\"datasetfieldtype_id\")\n+                , @Index(columnList=\"datasetfieldtype_id\")\n \t\t, @Index(columnList=\"required\")}\n )\n @Entity\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "intellij",
        "naturalize",
        "codebuff"
    ],
    "not_repaired_by": [
        "styler",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1115",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "30",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "30",
                    "column": "117",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "32",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "32",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1115/NodePropertyExistenceConstraintDefinition.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1115/NodePropertyExistenceConstraintDefinition.java\nindex ae92d03cbff..4458a16426d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1115/NodePropertyExistenceConstraintDefinition.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1115/NodePropertyExistenceConstraintDefinition.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.coreapi.schema;\n \n import org.neo4j.graphdb.Label;\n@@ -26,37 +27,36 @@ import static java.lang.String.format;\n \n public class NodePropertyExistenceConstraintDefinition extends NodeConstraintDefinition\n {\n-    public NodePropertyExistenceConstraintDefinition( InternalSchemaActions actions, Label label, String[] propertyKeys )\n-    {\n-        super( actions, label, propertyKeys );\n-    }\n+  public NodePropertyExistenceConstraintDefinition(InternalSchemaActions actions, Label label, String[] propertyKeys)\n+  {\n+    super(actions, label, propertyKeys);\n+  }\n \n-    @Override\n-    public void drop()\n-    {\n-        assertInUnterminatedTransaction();\n-        actions.dropNodePropertyExistenceConstraint( label, propertyKeys );\n-    }\n+  @Override\n+  public void drop()\n+  {\n+    assertInUnterminatedTransaction();\n+    actions.dropNodePropertyExistenceConstraint(label, propertyKeys);\n+  }\n \n-    @Override\n-    public ConstraintType getConstraintType()\n-    {\n-        assertInUnterminatedTransaction();\n-        return ConstraintType.NODE_PROPERTY_EXISTENCE;\n-    }\n+  @Override\n+  public ConstraintType getConstraintType()\n+  {\n+    assertInUnterminatedTransaction();\n+    return ConstraintType.NODE_PROPERTY_EXISTENCE;\n+  }\n \n-    @Override\n-    public String toString()\n+  @Override\n+  public String toString()\n+  {\n+    if (propertyKeys.length == 1)\n+    {\n+      return format(\"ON (%1$s:%2$s) ASSERT exists(%3$s)\",\n+          label.name().toLowerCase(), label.name(), propertyText());\n+    } else\n     {\n-        if ( propertyKeys.length == 1 )\n-        {\n-            return format( \"ON (%1$s:%2$s) ASSERT exists(%3$s)\",\n-                    label.name().toLowerCase(), label.name(), propertyText() );\n-        }\n-        else\n-        {\n-            return format( \"ON (%1$s:%2$s) ASSERT %3$s IS COMPOSITE KEY\",\n-                    label.name().toLowerCase(), label.name(), propertyText() );\n-        }\n+      return format(\"ON (%1$s:%2$s) ASSERT %3$s IS COMPOSITE KEY\",\n+          label.name().toLowerCase(), label.name(), propertyText());\n     }\n+  }\n }\n",
            "diff_size": 36
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1115/NodePropertyExistenceConstraintDefinition.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1115/NodePropertyExistenceConstraintDefinition.java\nindex ae92d03cbff..fa810c181d2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1115/NodePropertyExistenceConstraintDefinition.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1115/NodePropertyExistenceConstraintDefinition.java\n@@ -57,6 +57,6 @@ public class NodePropertyExistenceConstraintDefinition extends NodeConstraintDef\n         {\n             return format( \"ON (%1$s:%2$s) ASSERT %3$s IS COMPOSITE KEY\",\n                     label.name().toLowerCase(), label.name(), propertyText() );\n-        }\n     }\n-}\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1943",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "61",
                    "column": "6",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "16",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "110",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "106",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "125",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "16",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "150",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "150",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "157",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "105",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "185",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "186",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "192",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "195",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "200",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "200",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "211",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "211",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "218",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "218",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "232",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "232",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "238",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "238",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "244",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "244",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "249",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "249",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "260",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "260",
                    "column": "107",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "267",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "267",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "272",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "272",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "272",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "280",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "280",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "285",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "285",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "285",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "298",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "298",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "298",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "311",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "311",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "311",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "319",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "319",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "324",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "324",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "324",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1943/TransactionalService.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1943/TransactionalService.java\nindex da8fb8d423b..5d076d16812 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1943/TransactionalService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1943/TransactionalService.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.server.rest.web;\n \n import java.io.IOException;\n@@ -57,287 +58,279 @@ import static org.neo4j.udc.UsageDataKeys.features;\n  * This does basic mapping from HTTP to {@link org.neo4j.server.rest.transactional.TransactionFacade}, and should not\n  * do anything more complicated than that.\n  */\n-@Path( \"/transaction\" )\n+@Path(\"/transaction\")\n public class TransactionalService\n {\n-    private final TransactionFacade facade;\n-    private final UsageData usage;\n-    private final TransactionUriScheme uriScheme;\n-    private Log log;\n+  private final TransactionFacade facade;\n+  private final UsageData usage;\n+  private final TransactionUriScheme uriScheme;\n+  private Log log;\n+\n+  public TransactionalService(@Context TransactionFacade facade, @Context UriInfo uriInfo, @Context UsageData usage,\n+                              @Context Log log)\n+  {\n+    this.facade = facade;\n+    this.usage = usage;\n+    this.uriScheme = new TransactionUriBuilder(uriInfo);\n+    this.log = log;\n+  }\n \n-    public TransactionalService( @Context TransactionFacade facade, @Context UriInfo uriInfo, @Context UsageData usage,\n-            @Context Log log )\n+  @POST\n+  @Consumes({MediaType.APPLICATION_JSON})\n+  @Produces({MediaType.APPLICATION_JSON})\n+  public Response executeStatementsInNewTransaction(final InputStream input, @Context final UriInfo uriInfo,\n+                                                    @Context final HttpServletRequest request)\n+  {\n+    usage.get(features).flag(http_tx_endpoint);\n+    LoginContext loginContext = AuthorizedRequestWrapper.getLoginContextFromHttpServletRequest(request);\n+    long customTransactionTimeout = HttpHeaderUtils.getTransactionTimeout(request, log);\n+    TransactionHandle transactionHandle =\n+        facade.newTransactionHandle(uriScheme, false, loginContext, customTransactionTimeout);\n+    return createdResponse(\n+        transactionHandle,\n+        executeStatements(input, transactionHandle, uriInfo.getBaseUri(), request)\n+    );\n+  }\n+\n+  @POST\n+  @Path(\"/{id}\")\n+  @Consumes({MediaType.APPLICATION_JSON})\n+  @Produces({MediaType.APPLICATION_JSON})\n+  public Response executeStatements(@PathParam(\"id\") final long id, final InputStream input,\n+                                    @Context final UriInfo uriInfo, @Context final HttpServletRequest request)\n+  {\n+    final TransactionHandle transactionHandle;\n+    try\n+    {\n+      transactionHandle = facade.findTransactionHandle(id);\n+    } catch (TransactionLifecycleException e)\n     {\n-        this.facade = facade;\n-        this.usage = usage;\n-        this.uriScheme = new TransactionUriBuilder( uriInfo );\n-        this.log = log;\n+      return invalidTransaction(e, uriInfo.getBaseUri());\n     }\n+    return okResponse(executeStatements(input, transactionHandle, uriInfo.getBaseUri(), request));\n+  }\n \n-    @POST\n-    @Consumes( {MediaType.APPLICATION_JSON} )\n-    @Produces( {MediaType.APPLICATION_JSON} )\n-    public Response executeStatementsInNewTransaction( final InputStream input, @Context final UriInfo uriInfo,\n-                                                       @Context final HttpServletRequest request )\n+  @POST\n+  @Path(\"/{id}/commit\")\n+  @Consumes({MediaType.APPLICATION_JSON})\n+  @Produces({MediaType.APPLICATION_JSON})\n+  public Response commitTransaction(@PathParam(\"id\") final long id, final InputStream input, @Context final\n+  UriInfo uriInfo,\n+                                    @Context final HttpServletRequest request)\n+  {\n+    final TransactionHandle transactionHandle;\n+    try\n     {\n-        usage.get( features ).flag( http_tx_endpoint );\n-        LoginContext loginContext = AuthorizedRequestWrapper.getLoginContextFromHttpServletRequest( request );\n-        long customTransactionTimeout = HttpHeaderUtils.getTransactionTimeout( request, log );\n-        TransactionHandle transactionHandle =\n-                facade.newTransactionHandle( uriScheme, false, loginContext, customTransactionTimeout );\n-        return createdResponse(\n-                transactionHandle,\n-                executeStatements( input, transactionHandle, uriInfo.getBaseUri(), request )\n-            );\n+      transactionHandle = facade.findTransactionHandle(id);\n+    } catch (TransactionLifecycleException e)\n+    {\n+      return invalidTransaction(e, uriInfo.getBaseUri());\n     }\n+    return okResponse(executeStatementsAndCommit(input, transactionHandle, uriInfo.getBaseUri(), request));\n+  }\n+\n+  @POST\n+  @Path(\"/commit\")\n+  @Consumes({MediaType.APPLICATION_JSON})\n+  @Produces({MediaType.APPLICATION_JSON})\n+  public Response commitNewTransaction(final InputStream input, @Context final UriInfo uriInfo,\n+                                       @Context final HttpServletRequest request)\n+  {\n+    final TransactionHandle transactionHandle;\n+    LoginContext loginContext = AuthorizedRequestWrapper.getLoginContextFromHttpServletRequest(request);\n+    long customTransactionTimeout = HttpHeaderUtils.getTransactionTimeout(request, log);\n+    transactionHandle = facade.newTransactionHandle(uriScheme, true, loginContext, customTransactionTimeout);\n+    final StreamingOutput streamingResults =\n+        executeStatementsAndCommit(input, transactionHandle, uriInfo.getBaseUri(), request);\n+    return okResponse(streamingResults);\n+  }\n \n-    @POST\n-    @Path( \"/{id}\" )\n-    @Consumes( {MediaType.APPLICATION_JSON} )\n-    @Produces( {MediaType.APPLICATION_JSON} )\n-    public Response executeStatements( @PathParam( \"id\" ) final long id, final InputStream input,\n-                                       @Context final UriInfo uriInfo, @Context final HttpServletRequest request )\n+  @DELETE\n+  @Path(\"/{id}\")\n+  @Consumes({MediaType.APPLICATION_JSON})\n+  public Response rollbackTransaction(@PathParam(\"id\") final long id, @Context UriInfo uriInfo)\n+  {\n+    final TransactionHandle transactionHandle;\n+    try\n     {\n-        final TransactionHandle transactionHandle;\n-        try\n-        {\n-            transactionHandle = facade.findTransactionHandle( id );\n-        }\n-        catch ( TransactionLifecycleException e )\n-        {\n-            return invalidTransaction( e, uriInfo.getBaseUri() );\n-        }\n-        return okResponse( executeStatements( input, transactionHandle, uriInfo.getBaseUri(), request ) );\n+      transactionHandle = facade.terminate(id);\n+    } catch (TransactionLifecycleException e)\n+    {\n+      return invalidTransaction(e, uriInfo.getBaseUri());\n     }\n+    return okResponse(rollback(transactionHandle, uriInfo.getBaseUri()));\n+  }\n+\n+  private Response invalidTransaction(final TransactionLifecycleException e, final URI baseUri)\n+  {\n+    return Response.status(Response.Status.NOT_FOUND)\n+        .entity(serializeError(e.toNeo4jError(), baseUri))\n+        .build();\n+  }\n \n-    @POST\n-    @Path( \"/{id}/commit\" )\n-    @Consumes( {MediaType.APPLICATION_JSON} )\n-    @Produces( {MediaType.APPLICATION_JSON} )\n-    public Response commitTransaction( @PathParam( \"id\" ) final long id, final InputStream input, @Context final\n-    UriInfo uriInfo,\n-                                       @Context final HttpServletRequest request )\n+  private Response createdResponse(TransactionHandle transactionHandle, StreamingOutput streamingResults)\n+  {\n+    return Response.created(transactionHandle.uri())\n+        .entity(streamingResults)\n+        .build();\n+  }\n+\n+  private Response okResponse(StreamingOutput streamingResults)\n+  {\n+    return Response.ok()\n+        .entity(streamingResults)\n+        .build();\n+  }\n+\n+  private StreamingOutput executeStatements(final InputStream input, final TransactionHandle transactionHandle,\n+                                            final URI baseUri, final HttpServletRequest request)\n+  {\n+    return output -> transactionHandle.execute(\n+        facade.deserializer(input), facade.serializer(output, baseUri), request);\n+  }\n+\n+  private StreamingOutput executeStatementsAndCommit(final InputStream input,\n+                                                     final TransactionHandle transactionHandle,\n+                                                     final URI baseUri,\n+                                                     final HttpServletRequest request)\n+  {\n+    return output ->\n     {\n-        final TransactionHandle transactionHandle;\n-        try\n-        {\n-            transactionHandle = facade.findTransactionHandle( id );\n-        }\n-        catch ( TransactionLifecycleException e )\n-        {\n-            return invalidTransaction( e, uriInfo.getBaseUri() );\n-        }\n-        return okResponse( executeStatementsAndCommit( input, transactionHandle, uriInfo.getBaseUri(), request ) );\n-    }\n+      OutputStream wrappedOutput = transactionHandle.isImplicit()\n+          ? new InterruptingOutputStream(output, transactionHandle)\n+          : output;\n+      transactionHandle.commit(\n+          facade.deserializer(input), facade.serializer(wrappedOutput, baseUri), request);\n+    };\n+  }\n \n-    @POST\n-    @Path( \"/commit\" )\n-    @Consumes( {MediaType.APPLICATION_JSON} )\n-    @Produces( {MediaType.APPLICATION_JSON} )\n-    public Response commitNewTransaction( final InputStream input, @Context final UriInfo uriInfo,\n-                                          @Context final HttpServletRequest request )\n+  private StreamingOutput rollback(final TransactionHandle transactionHandle, final URI baseUri)\n+  {\n+    return output ->\n     {\n-        final TransactionHandle transactionHandle;\n-        LoginContext loginContext = AuthorizedRequestWrapper.getLoginContextFromHttpServletRequest( request );\n-        long customTransactionTimeout = HttpHeaderUtils.getTransactionTimeout( request, log );\n-        transactionHandle = facade.newTransactionHandle( uriScheme, true, loginContext, customTransactionTimeout );\n-        final StreamingOutput streamingResults =\n-                executeStatementsAndCommit( input, transactionHandle, uriInfo.getBaseUri(), request );\n-        return okResponse( streamingResults );\n-    }\n+      if (transactionHandle != null)\n+      {\n+        transactionHandle.rollback(facade.serializer(output, baseUri));\n+      }\n+    };\n+  }\n \n-    @DELETE\n-    @Path( \"/{id}\" )\n-    @Consumes( {MediaType.APPLICATION_JSON} )\n-    public Response rollbackTransaction( @PathParam( \"id\" ) final long id, @Context UriInfo uriInfo )\n+  private StreamingOutput serializeError(final Neo4jError neo4jError, final URI baseUri)\n+  {\n+    return output ->\n     {\n-        final TransactionHandle transactionHandle;\n-        try\n-        {\n-            transactionHandle = facade.terminate( id );\n-        }\n-        catch ( TransactionLifecycleException e )\n-        {\n-            return invalidTransaction( e, uriInfo.getBaseUri() );\n-        }\n-        return okResponse( rollback( transactionHandle, uriInfo.getBaseUri() ) );\n-    }\n+      ExecutionResultSerializer serializer = facade.serializer(output, baseUri);\n+      serializer.errors(Collections.singletonList(neo4jError));\n+      serializer.finish();\n+    };\n+  }\n+\n+  public static class TransactionUriBuilder implements TransactionUriScheme\n+  {\n+    private final UriInfo uriInfo;\n \n-    private Response invalidTransaction( final TransactionLifecycleException e, final URI baseUri )\n+    public TransactionUriBuilder(UriInfo uriInfo)\n     {\n-        return Response.status( Response.Status.NOT_FOUND )\n-                .entity( serializeError( e.toNeo4jError(), baseUri ) )\n-                .build();\n+      this.uriInfo = uriInfo;\n     }\n \n-    private Response createdResponse( TransactionHandle transactionHandle, StreamingOutput streamingResults )\n+    @Override\n+    public URI txUri(long id)\n     {\n-        return Response.created( transactionHandle.uri() )\n-                .entity( streamingResults )\n-                .build();\n+      return builder(id).build();\n     }\n \n-    private Response okResponse( StreamingOutput streamingResults )\n+    @Override\n+    public URI txCommitUri(long id)\n     {\n-        return Response.ok()\n-                .entity( streamingResults )\n-                .build();\n+      return builder(id).path(\"/commit\").build();\n     }\n \n-    private StreamingOutput executeStatements( final InputStream input, final TransactionHandle transactionHandle,\n-                                               final URI baseUri, final HttpServletRequest request )\n+    private UriBuilder builder(long id)\n     {\n-        return output -> transactionHandle.execute(\n-                facade.deserializer( input ), facade.serializer( output, baseUri ), request );\n+      return uriInfo.getBaseUriBuilder().path(TransactionalService.class).path(\"/\" + id);\n     }\n+  }\n \n-    private StreamingOutput executeStatementsAndCommit( final InputStream input,\n-                                                        final TransactionHandle transactionHandle,\n-                                                        final URI baseUri,\n-                                                        final HttpServletRequest request )\n+  private class InterruptingOutputStream extends OutputStream\n+  {\n+    private final OutputStream delegate;\n+    private final TransactionTerminationHandle terminationHandle;\n+\n+    private InterruptingOutputStream(OutputStream delegate, TransactionTerminationHandle terminationHandle)\n     {\n-        return output ->\n-        {\n-            OutputStream wrappedOutput = transactionHandle.isImplicit()\n-                                         ? new InterruptingOutputStream( output, transactionHandle )\n-                                         : output;\n-            transactionHandle.commit(\n-                    facade.deserializer( input ), facade.serializer( wrappedOutput, baseUri ), request );\n-        };\n+      this.delegate = delegate;\n+      this.terminationHandle = terminationHandle;\n     }\n \n-    private StreamingOutput rollback( final TransactionHandle transactionHandle, final URI baseUri )\n+    @Override\n+    public void write(byte[] b) throws IOException\n     {\n-        return output ->\n-        {\n-            if ( transactionHandle != null )\n-            {\n-                transactionHandle.rollback( facade.serializer( output, baseUri ) );\n-            }\n-        };\n+      try\n+      {\n+        delegate.write(b);\n+      } catch (IOException e)\n+      {\n+        terminate();\n+        throw e;\n+      }\n     }\n \n-    private StreamingOutput serializeError( final Neo4jError neo4jError, final URI baseUri )\n+    @Override\n+    public void write(byte[] b, int off, int len) throws IOException\n     {\n-        return output ->\n-        {\n-            ExecutionResultSerializer serializer = facade.serializer( output, baseUri );\n-            serializer.errors( Collections.singletonList( neo4jError ) );\n-            serializer.finish();\n-        };\n+      try\n+      {\n+        delegate.write(b, off, len);\n+      } catch (IOException e)\n+      {\n+        terminate();\n+        throw e;\n+      }\n     }\n \n-    public static class TransactionUriBuilder implements TransactionUriScheme\n+    @Override\n+    public void flush() throws IOException\n     {\n-        private final UriInfo uriInfo;\n-\n-        public TransactionUriBuilder( UriInfo uriInfo )\n-        {\n-            this.uriInfo = uriInfo;\n-        }\n-\n-        @Override\n-        public URI txUri( long id )\n-        {\n-            return builder( id ).build();\n-        }\n-\n-        @Override\n-        public URI txCommitUri( long id )\n-        {\n-            return builder( id ).path( \"/commit\" ).build();\n-        }\n-\n-        private UriBuilder builder( long id )\n-        {\n-            return uriInfo.getBaseUriBuilder().path( TransactionalService.class ).path( \"/\" + id );\n-        }\n+      try\n+      {\n+        delegate.flush();\n+      } catch (IOException e)\n+      {\n+        terminate();\n+        throw e;\n+      }\n     }\n \n-    private class InterruptingOutputStream extends OutputStream\n+    @Override\n+    public void close() throws IOException\n     {\n-        private final OutputStream delegate;\n-        private final TransactionTerminationHandle terminationHandle;\n-\n-        private InterruptingOutputStream( OutputStream delegate, TransactionTerminationHandle terminationHandle )\n-        {\n-            this.delegate = delegate;\n-            this.terminationHandle = terminationHandle;\n-        }\n-\n-        @Override\n-        public void write( byte[] b ) throws IOException\n-        {\n-            try\n-            {\n-                delegate.write( b );\n-            }\n-            catch ( IOException e )\n-            {\n-                terminate();\n-                throw e;\n-            }\n-        }\n-\n-        @Override\n-        public void write( byte[] b, int off, int len ) throws IOException\n-        {\n-            try\n-            {\n-                delegate.write( b, off, len );\n-            }\n-            catch ( IOException e )\n-            {\n-                terminate();\n-                throw e;\n-            }\n-        }\n-\n-        @Override\n-        public void flush() throws IOException\n-        {\n-            try\n-            {\n-                delegate.flush();\n-            }\n-            catch ( IOException e )\n-            {\n-                terminate();\n-                throw e;\n-            }\n-        }\n-\n-        @Override\n-        public void close() throws IOException\n-        {\n-            try\n-            {\n-                delegate.close();\n-            }\n-            catch ( IOException e )\n-            {\n-                terminate();\n-                throw e;\n-            }\n-        }\n+      try\n+      {\n+        delegate.close();\n+      } catch (IOException e)\n+      {\n+        terminate();\n+        throw e;\n+      }\n+    }\n \n-        @Override\n-        public void write( int b ) throws IOException\n-        {\n-            try\n-            {\n-                delegate.write( b );\n-            }\n-            catch ( IOException e )\n-            {\n-                terminate();\n-                throw e;\n-            }\n-        }\n+    @Override\n+    public void write(int b) throws IOException\n+    {\n+      try\n+      {\n+        delegate.write(b);\n+      } catch (IOException e)\n+      {\n+        terminate();\n+        throw e;\n+      }\n+    }\n \n-        private void terminate()\n-        {\n-            terminationHandle.terminate();\n-        }\n+    private void terminate()\n+    {\n+      terminationHandle.terminate();\n     }\n+  }\n }\n",
            "diff_size": 342
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "93",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 173).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "112",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 173).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "176",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 168).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "181",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 177).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1943/TransactionalService.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1943/TransactionalService.java\nindex da8fb8d423b..6122b1fcfc0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1943/TransactionalService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1943/TransactionalService.java\n@@ -77,27 +77,21 @@ public class TransactionalService\n     @POST\n     @Consumes( {MediaType.APPLICATION_JSON} )\n     @Produces( {MediaType.APPLICATION_JSON} )\n-    public Response executeStatementsInNewTransaction( final InputStream input, @Context final UriInfo uriInfo,\n-                                                       @Context final HttpServletRequest request )\n-    {\n+    public Response executeStatementsInNewTransaction( final InputStream input, @Context final UriInfo uriInfo, @Context final HttpServletRequest request )\n+{\n         usage.get( features ).flag( http_tx_endpoint );\n         LoginContext loginContext = AuthorizedRequestWrapper.getLoginContextFromHttpServletRequest( request );\n         long customTransactionTimeout = HttpHeaderUtils.getTransactionTimeout( request, log );\n-        TransactionHandle transactionHandle =\n-                facade.newTransactionHandle( uriScheme, false, loginContext, customTransactionTimeout );\n-        return createdResponse(\n-                transactionHandle,\n-                executeStatements( input, transactionHandle, uriInfo.getBaseUri(), request )\n-            );\n+        TransactionHandle transactionHandle = facade.newTransactionHandle( uriScheme, false, loginContext, customTransactionTimeout );\n+return createdResponse( transactionHandle, executeStatements( input, transactionHandle, uriInfo.getBaseUri(), request ) );\n     }\n \n     @POST\n     @Path( \"/{id}\" )\n     @Consumes( {MediaType.APPLICATION_JSON} )\n     @Produces( {MediaType.APPLICATION_JSON} )\n-    public Response executeStatements( @PathParam( \"id\" ) final long id, final InputStream input,\n-                                       @Context final UriInfo uriInfo, @Context final HttpServletRequest request )\n-    {\n+    public Response executeStatements( @PathParam( \"id\" ) final long id, final InputStream input, @Context final UriInfo uriInfo, @Context final HttpServletRequest request )\n+{\n         final TransactionHandle transactionHandle;\n         try\n         {\n@@ -107,17 +101,16 @@ public class TransactionalService\n         {\n             return invalidTransaction( e, uriInfo.getBaseUri() );\n         }\n-        return okResponse( executeStatements( input, transactionHandle, uriInfo.getBaseUri(), request ) );\n+\n+return okResponse( executeStatements( input, transactionHandle, uriInfo.getBaseUri(), request ) );\n     }\n \n     @POST\n     @Path( \"/{id}/commit\" )\n     @Consumes( {MediaType.APPLICATION_JSON} )\n     @Produces( {MediaType.APPLICATION_JSON} )\n-    public Response commitTransaction( @PathParam( \"id\" ) final long id, final InputStream input, @Context final\n-    UriInfo uriInfo,\n-                                       @Context final HttpServletRequest request )\n-    {\n+    public Response commitTransaction( @PathParam( \"id\" ) final long id, final InputStream input, @Context final UriInfo uriInfo, @Context final HttpServletRequest request )\n+{\n         final TransactionHandle transactionHandle;\n         try\n         {\n@@ -127,23 +120,22 @@ public class TransactionalService\n         {\n             return invalidTransaction( e, uriInfo.getBaseUri() );\n         }\n-        return okResponse( executeStatementsAndCommit( input, transactionHandle, uriInfo.getBaseUri(), request ) );\n+\n+return okResponse( executeStatementsAndCommit( input, transactionHandle, uriInfo.getBaseUri(), request ) );\n     }\n \n     @POST\n     @Path( \"/commit\" )\n     @Consumes( {MediaType.APPLICATION_JSON} )\n     @Produces( {MediaType.APPLICATION_JSON} )\n-    public Response commitNewTransaction( final InputStream input, @Context final UriInfo uriInfo,\n-                                          @Context final HttpServletRequest request )\n-    {\n+    public Response commitNewTransaction( final InputStream input, @Context final UriInfo uriInfo, @Context final HttpServletRequest request )\n+{\n         final TransactionHandle transactionHandle;\n         LoginContext loginContext = AuthorizedRequestWrapper.getLoginContextFromHttpServletRequest( request );\n         long customTransactionTimeout = HttpHeaderUtils.getTransactionTimeout( request, log );\n         transactionHandle = facade.newTransactionHandle( uriScheme, true, loginContext, customTransactionTimeout );\n-        final StreamingOutput streamingResults =\n-                executeStatementsAndCommit( input, transactionHandle, uriInfo.getBaseUri(), request );\n-        return okResponse( streamingResults );\n+        final StreamingOutput streamingResults = executeStatementsAndCommit( input, transactionHandle, uriInfo.getBaseUri(), request );\n+return okResponse( streamingResults );\n     }\n \n     @DELETE\n@@ -160,50 +152,39 @@ public class TransactionalService\n         {\n             return invalidTransaction( e, uriInfo.getBaseUri() );\n         }\n-        return okResponse( rollback( transactionHandle, uriInfo.getBaseUri() ) );\n+\n+return okResponse( rollback( transactionHandle, uriInfo.getBaseUri() ) );\n     }\n \n     private Response invalidTransaction( final TransactionLifecycleException e, final URI baseUri )\n     {\n-        return Response.status( Response.Status.NOT_FOUND )\n-                .entity( serializeError( e.toNeo4jError(), baseUri ) )\n-                .build();\n+        return Response.status( Response.Status.NOT_FOUND ).entity( serializeError( e.toNeo4jError(), baseUri ) ).build();\n     }\n \n     private Response createdResponse( TransactionHandle transactionHandle, StreamingOutput streamingResults )\n     {\n-        return Response.created( transactionHandle.uri() )\n-                .entity( streamingResults )\n+        return Response.created( transactionHandle.uri() ).entity( streamingResults )\n                 .build();\n     }\n \n     private Response okResponse( StreamingOutput streamingResults )\n     {\n-        return Response.ok()\n-                .entity( streamingResults )\n+        return Response.ok().entity( streamingResults )\n                 .build();\n     }\n \n-    private StreamingOutput executeStatements( final InputStream input, final TransactionHandle transactionHandle,\n-                                               final URI baseUri, final HttpServletRequest request )\n-    {\n-        return output -> transactionHandle.execute(\n-                facade.deserializer( input ), facade.serializer( output, baseUri ), request );\n+    private StreamingOutput executeStatements( final InputStream input, final TransactionHandle transactionHandle, final URI baseUri, final HttpServletRequest request )\n+{\n+        return output -> transactionHandle.execute( facade.deserializer( input ), facade.serializer( output, baseUri ), request );\n     }\n \n-    private StreamingOutput executeStatementsAndCommit( final InputStream input,\n-                                                        final TransactionHandle transactionHandle,\n-                                                        final URI baseUri,\n-                                                        final HttpServletRequest request )\n-    {\n+    private StreamingOutput executeStatementsAndCommit( final InputStream input, final TransactionHandle transactionHandle, final URI baseUri, final HttpServletRequest request )\n+{\n         return output ->\n         {\n-            OutputStream wrappedOutput = transactionHandle.isImplicit()\n-                                         ? new InterruptingOutputStream( output, transactionHandle )\n-                                         : output;\n-            transactionHandle.commit(\n-                    facade.deserializer( input ), facade.serializer( wrappedOutput, baseUri ), request );\n-        };\n+            OutputStream wrappedOutput = transactionHandle.isImplicit() ? new InterruptingOutputStream( output, transactionHandle ) : output;\n+transactionHandle.commit( facade.deserializer( input ), facade.serializer( wrappedOutput, baseUri ), request );\n+    };\n     }\n \n     private StreamingOutput rollback( final TransactionHandle transactionHandle, final URI baseUri )\n@@ -340,4 +321,4 @@ public class TransactionalService\n             terminationHandle.terminate();\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 52
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
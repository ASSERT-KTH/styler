{
    "project_name": "blockchain-lab-ScaleOutDistributedLedger",
    "error_id": "2",
    "information": {
        "errors": [
            {
                "line": "31",
                "column": "9",
                "severity": "warning",
                "message": "'if' is not followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
            }
        ]
    },
    "source_code": "    public void channelRead(ChannelHandlerContext ctx, Object msg) {\n        Log.log(Level.INFO, \"Server received message\");\n        if(msg instanceof Message) {\n            ((Message) msg).handle(localStore);\n        } else {\n            Log.log(Level.SEVERE, \"Invalid message, not a message instance\");",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/blockchain-lab-ScaleOutDistributedLedger/errored/1/2/SocketServerHandler.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/blockchain-lab-ScaleOutDistributedLedger/styler/2/SocketServerHandler.java\nindex 25e7bcc451c..4830fff3874 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/blockchain-lab-ScaleOutDistributedLedger/errored/1/2/SocketServerHandler.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/blockchain-lab-ScaleOutDistributedLedger/styler/2/SocketServerHandler.java\n@@ -27,8 +27,8 @@ public class SocketServerHandler extends ChannelInboundHandlerAdapter {\n \n     @Override\n     public void channelRead(ChannelHandlerContext ctx, Object msg) {\n-        Log.log(Level.INFO, \"Server received message\");\n-        if(msg instanceof Message) {\n+        Log.log(Level.INFO, \"Server received message\"); if\n+            (msg instanceof Message) {\n             ((Message) msg).handle(localStore);\n         } else {\n             Log.log(Level.SEVERE, \"Invalid message, not a message instance\");\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/blockchain-lab-ScaleOutDistributedLedger/errored/1/2/SocketServerHandler.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/blockchain-lab-ScaleOutDistributedLedger/intellij/2/SocketServerHandler.java\nindex 25e7bcc451c..b5f1661da77 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/blockchain-lab-ScaleOutDistributedLedger/errored/1/2/SocketServerHandler.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/blockchain-lab-ScaleOutDistributedLedger/intellij/2/SocketServerHandler.java\n@@ -19,6 +19,7 @@ public class SocketServerHandler extends ChannelInboundHandlerAdapter {\n \n     /**\n      * Constructor.\n+     *\n      * @param localStore - the localstor of the node\n      */\n     public SocketServerHandler(LocalStore localStore) {\n@@ -28,7 +29,7 @@ public class SocketServerHandler extends ChannelInboundHandlerAdapter {\n     @Override\n     public void channelRead(ChannelHandlerContext ctx, Object msg) {\n         Log.log(Level.INFO, \"Server received message\");\n-        if(msg instanceof Message) {\n+        if (msg instanceof Message) {\n             ((Message) msg).handle(localStore);\n         } else {\n             Log.log(Level.SEVERE, \"Invalid message, not a message instance\");\n",
            "diff_size": 2
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "36",
                    "column": "9",
                    "severity": "warning",
                    "message": "'if' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "41",
                    "column": "5",
                    "severity": "warning",
                    "message": "'}' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "43",
                    "column": "60",
                    "severity": "warning",
                    "message": "';' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "43",
                    "column": "72",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "51",
                    "column": "89",
                    "severity": "warning",
                    "message": "';' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "51",
                    "column": "101",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/blockchain-lab-ScaleOutDistributedLedger/errored/1/2/SocketServerHandler.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/blockchain-lab-ScaleOutDistributedLedger/naturalize/2/SocketServerHandler.java\nindex 25e7bcc451c..835d3aca144 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/blockchain-lab-ScaleOutDistributedLedger/errored/1/2/SocketServerHandler.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/blockchain-lab-ScaleOutDistributedLedger/naturalize/2/SocketServerHandler.java\n@@ -1,11 +1,17 @@\n package nl.tudelft.blockchain.scaleoutdistributedledger.sockets;\n \n import io.netty.channel.ChannelHandlerContext;\n+\n import io.netty.channel.ChannelInboundHandlerAdapter;\n+\n import io.netty.handler.timeout.IdleState;\n+\n import io.netty.handler.timeout.IdleStateEvent;\n+\n import nl.tudelft.blockchain.scaleoutdistributedledger.LocalStore;\n+\n import nl.tudelft.blockchain.scaleoutdistributedledger.message.Message;\n+\n import nl.tudelft.blockchain.scaleoutdistributedledger.utils.Log;\n \n import java.util.logging.Level;\n@@ -14,8 +20,7 @@ import java.util.logging.Level;\n  * Handler for socket server.\n  */\n public class SocketServerHandler extends ChannelInboundHandlerAdapter {\n-\n-    private LocalStore localStore;\n+private LocalStore localStore;\n \n     /**\n      * Constructor.\n@@ -33,12 +38,9 @@ public class SocketServerHandler extends ChannelInboundHandlerAdapter {\n         } else {\n             Log.log(Level.SEVERE, \"Invalid message, not a message instance\");\n         }\n-    }\n-\n-    @Override\n+    }@Override\n     public void exceptionCaught(ChannelHandlerContext ctx, Throwable cause) {\n-        Log.log(Level.SEVERE, \"Server socket error\", cause);\n-        ctx.close();\n+        Log.log(Level.SEVERE, \"Server socket error\", cause);ctx.close();\n     }\n \n     @Override\n@@ -46,9 +48,8 @@ public class SocketServerHandler extends ChannelInboundHandlerAdapter {\n         if (evt instanceof IdleStateEvent) {\n             IdleStateEvent e = (IdleStateEvent) evt;\n             if (e.state() == IdleState.ALL_IDLE) {\n-                Log.log(Level.INFO, \"Server detected idle channel, closing connection!\");\n-                ctx.close();\n+                Log.log(Level.INFO, \"Server detected idle channel, closing connection!\");ctx.close();\n             }\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 16
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "1",
                    "column": "64",
                    "severity": "warning",
                    "message": "';' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "1",
                    "column": "110",
                    "severity": "warning",
                    "message": "';' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "1",
                    "column": "110",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "1",
                    "column": "163",
                    "severity": "warning",
                    "message": "';' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "1",
                    "column": "163",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "1",
                    "column": "205",
                    "severity": "warning",
                    "message": "';' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "1",
                    "column": "205",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "1",
                    "column": "252",
                    "severity": "warning",
                    "message": "';' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "1",
                    "column": "252",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "1",
                    "column": "318",
                    "severity": "warning",
                    "message": "';' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "1",
                    "column": "318",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "1",
                    "column": "389",
                    "severity": "warning",
                    "message": "';' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "1",
                    "column": "389",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "1",
                    "column": "454",
                    "severity": "warning",
                    "message": "';' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "1",
                    "column": "454",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "1",
                    "column": "485",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "13",
                    "severity": "warning",
                    "message": "Line is longer than 160 characters (found 358).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "13",
                    "column": "35",
                    "severity": "warning",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "13",
                    "column": "60",
                    "severity": "warning",
                    "message": "'{' at column 60 should have line break after.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
                },
                {
                    "line": "13",
                    "column": "77",
                    "severity": "warning",
                    "message": "'=' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "13",
                    "column": "89",
                    "severity": "warning",
                    "message": "';' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "13",
                    "column": "90",
                    "severity": "warning",
                    "message": "'}' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "13",
                    "column": "166",
                    "severity": "warning",
                    "message": "'{' at column 166 should have line break after.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
                },
                {
                    "line": "13",
                    "column": "186",
                    "severity": "warning",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "13",
                    "column": "214",
                    "severity": "warning",
                    "message": "';' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                },
                {
                    "line": "13",
                    "column": "214",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "13",
                    "column": "216",
                    "severity": "warning",
                    "message": "'if' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "13",
                    "column": "218",
                    "severity": "warning",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "13",
                    "column": "244",
                    "severity": "warning",
                    "message": "'{' at column 244 should have line break after.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
                },
                {
                    "line": "13",
                    "column": "246",
                    "severity": "warning",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "13",
                    "column": "248",
                    "severity": "warning",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck"
                },
                {
                    "line": "13",
                    "column": "270",
                    "severity": "warning",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "13",
                    "column": "284",
                    "severity": "warning",
                    "message": "';' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "13",
                    "column": "284",
                    "severity": "warning",
                    "message": "';' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                },
                {
                    "line": "13",
                    "column": "284",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "13",
                    "column": "285",
                    "severity": "warning",
                    "message": "'}' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "13",
                    "column": "285",
                    "severity": "warning",
                    "message": "'}' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "13",
                    "column": "286",
                    "severity": "warning",
                    "message": "'else' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "13",
                    "column": "291",
                    "severity": "warning",
                    "message": "'{' at column 291 should have line break after.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
                },
                {
                    "line": "13",
                    "column": "313",
                    "severity": "warning",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "13",
                    "column": "357",
                    "severity": "warning",
                    "message": "';' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "13",
                    "column": "357",
                    "severity": "warning",
                    "message": "';' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                },
                {
                    "line": "13",
                    "column": "357",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "13",
                    "column": "358",
                    "severity": "warning",
                    "message": "'}' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "14",
                    "severity": "warning",
                    "message": "Line is longer than 160 characters (found 667).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "14",
                    "column": "294",
                    "severity": "warning",
                    "message": "'{' at column 294 should have line break after.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
                },
                {
                    "line": "14",
                    "column": "316",
                    "severity": "warning",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "14",
                    "column": "338",
                    "severity": "warning",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "14",
                    "column": "346",
                    "severity": "warning",
                    "message": "';' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                },
                {
                    "line": "14",
                    "column": "360",
                    "severity": "warning",
                    "message": "';' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "14",
                    "column": "360",
                    "severity": "warning",
                    "message": "';' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                },
                {
                    "line": "14",
                    "column": "360",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "14",
                    "column": "361",
                    "severity": "warning",
                    "message": "'}' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "14",
                    "column": "461",
                    "severity": "warning",
                    "message": "'{' at column 461 should have line break after.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
                },
                {
                    "line": "14",
                    "column": "463",
                    "severity": "warning",
                    "message": "'if' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "14",
                    "column": "465",
                    "severity": "warning",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "14",
                    "column": "498",
                    "severity": "warning",
                    "message": "'{' at column 498 should have line break after.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
                },
                {
                    "line": "14",
                    "column": "516",
                    "severity": "warning",
                    "message": "'=' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "14",
                    "column": "518",
                    "severity": "warning",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck"
                },
                {
                    "line": "14",
                    "column": "539",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "14",
                    "column": "541",
                    "severity": "warning",
                    "message": "'if' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "14",
                    "column": "543",
                    "severity": "warning",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "14",
                    "column": "578",
                    "severity": "warning",
                    "message": "'{' at column 578 should have line break after.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
                },
                {
                    "line": "14",
                    "column": "598",
                    "severity": "warning",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "14",
                    "column": "652",
                    "severity": "warning",
                    "message": "';' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                },
                {
                    "line": "14",
                    "column": "652",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "14",
                    "column": "666",
                    "severity": "warning",
                    "message": "';' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "14",
                    "column": "666",
                    "severity": "warning",
                    "message": "';' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                },
                {
                    "line": "14",
                    "column": "666",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "14",
                    "column": "667",
                    "severity": "warning",
                    "message": "'}' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "15",
                    "severity": "warning",
                    "message": "Line is longer than 160 characters (found 498).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "16",
                    "severity": "warning",
                    "message": "Line is longer than 160 characters (found 363).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/blockchain-lab-ScaleOutDistributedLedger/errored/1/2/SocketServerHandler.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/blockchain-lab-ScaleOutDistributedLedger/codebuff/2/SocketServerHandler.java\nindex 25e7bcc451c..59914f2d6d5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/blockchain-lab-ScaleOutDistributedLedger/errored/1/2/SocketServerHandler.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/blockchain-lab-ScaleOutDistributedLedger/codebuff/2/SocketServerHandler.java\n@@ -1,54 +1,17 @@\n-package nl.tudelft.blockchain.scaleoutdistributedledger.sockets;\n-\n-import io.netty.channel.ChannelHandlerContext;\n-import io.netty.channel.ChannelInboundHandlerAdapter;\n-import io.netty.handler.timeout.IdleState;\n-import io.netty.handler.timeout.IdleStateEvent;\n-import nl.tudelft.blockchain.scaleoutdistributedledger.LocalStore;\n-import nl.tudelft.blockchain.scaleoutdistributedledger.message.Message;\n-import nl.tudelft.blockchain.scaleoutdistributedledger.utils.Log;\n-\n-import java.util.logging.Level;\n+package nl.tudelft.blockchain.scaleoutdistributedledger.sockets;import io.netty.channel.ChannelHandlerContext;import io.netty.channel.ChannelInboundHandlerAdapter;import io.netty.handler.timeout.IdleState;import io.netty.handler.timeout.IdleStateEvent;import nl.tudelft.blockchain.scaleoutdistributedledger.LocalStore;import nl.tudelft.blockchain.scaleoutdistributedledger.message.Message;import nl.tudelft.blockchain.scaleoutdistributedledger.utils.Log;import java.util.logging.Level;\n \n /**\n  * Handler for socket server.\n  */\n-public class SocketServerHandler extends ChannelInboundHandlerAdapter {\n \n+public class SocketServerHandler extends ChannelInboundHandlerAdapter {\n     private LocalStore localStore;\n \n     /**\n      * Constructor.\n      * @param localStore - the localstor of the node\n-     */\n-    public SocketServerHandler(LocalStore localStore) {\n-        this.localStore = localStore;\n-    }\n-\n-    @Override\n-    public void channelRead(ChannelHandlerContext ctx, Object msg) {\n-        Log.log(Level.INFO, \"Server received message\");\n-        if(msg instanceof Message) {\n-            ((Message) msg).handle(localStore);\n-        } else {\n-            Log.log(Level.SEVERE, \"Invalid message, not a message instance\");\n-        }\n-    }\n-\n-    @Override\n-    public void exceptionCaught(ChannelHandlerContext ctx, Throwable cause) {\n-        Log.log(Level.SEVERE, \"Server socket error\", cause);\n-        ctx.close();\n-    }\n-\n-    @Override\n-    public void userEventTriggered(ChannelHandlerContext ctx, Object evt) throws Exception {\n-        if (evt instanceof IdleStateEvent) {\n-            IdleStateEvent e = (IdleStateEvent) evt;\n-            if (e.state() == IdleState.ALL_IDLE) {\n-                Log.log(Level.INFO, \"Server detected idle channel, closing connection!\");\n-                ctx.close();\n-            }\n-        }\n-    }\n-}\n+     */ public SocketServerHandler( LocalStore localStore) { this.localStore= localStore;} @ Override public void channelRead(ChannelHandlerContext ctx, Object msg) { Log.log(Level.INFO,\"Server received message\") ; if( msg instanceof Message) { ( ( Message) msg).handle( localStore) ;}else { Log.log(Level.SEVERE,\"Invalid message, not a message instance\") ;}\n+                                                                                                                                                                                                                } @ Override public void exceptionCaught(ChannelHandlerContext ctx, Throwable cause) { Log.log(Level.SEVERE,\"Server socket error\",cause) ; ctx.close() ;} @ Override public void userEventTriggered(ChannelHandlerContext ctx, Object evt) throws Exception { if( evt instanceof IdleStateEvent) { IdleStateEvent e= ( IdleStateEvent) evt; if( e.state() == IdleState.ALL_IDLE) { Log.log(Level.INFO,\"Server detected idle channel, closing connection!\") ; ctx.close() ;}\n+                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 }\n+                                                                                                                                                                                                                                                                                                                                                                          }\n+}\n\\ No newline at end of file\n",
            "diff_size": 45
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/blockchain-lab-ScaleOutDistributedLedger/errored/1/2/SocketServerHandler.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/blockchain-lab-ScaleOutDistributedLedger/styler_random/2/SocketServerHandler.java\nindex 25e7bcc451c..4830fff3874 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/blockchain-lab-ScaleOutDistributedLedger/errored/1/2/SocketServerHandler.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/blockchain-lab-ScaleOutDistributedLedger/styler_random/2/SocketServerHandler.java\n@@ -27,8 +27,8 @@ public class SocketServerHandler extends ChannelInboundHandlerAdapter {\n \n     @Override\n     public void channelRead(ChannelHandlerContext ctx, Object msg) {\n-        Log.log(Level.INFO, \"Server received message\");\n-        if(msg instanceof Message) {\n+        Log.log(Level.INFO, \"Server received message\"); if\n+            (msg instanceof Message) {\n             ((Message) msg).handle(localStore);\n         } else {\n             Log.log(Level.SEVERE, \"Invalid message, not a message instance\");\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/blockchain-lab-ScaleOutDistributedLedger/errored/1/2/SocketServerHandler.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/blockchain-lab-ScaleOutDistributedLedger/styler_three_grams/2/SocketServerHandler.java\nindex 25e7bcc451c..cc41c0f01c5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/blockchain-lab-ScaleOutDistributedLedger/errored/1/2/SocketServerHandler.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/blockchain-lab-ScaleOutDistributedLedger/styler_three_grams/2/SocketServerHandler.java\n@@ -27,8 +27,8 @@ public class SocketServerHandler extends ChannelInboundHandlerAdapter {\n \n     @Override\n     public void channelRead(ChannelHandlerContext ctx, Object msg) {\n-        Log.log(Level.INFO, \"Server received message\");\n-        if(msg instanceof Message) {\n+        Log.log(Level.INFO, \"Server received message\"); if\n+        (msg instanceof Message) {\n             ((Message) msg).handle(localStore);\n         } else {\n             Log.log(Level.SEVERE, \"Invalid message, not a message instance\");\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
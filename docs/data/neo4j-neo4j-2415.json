{
    "project_name": "neo4j-neo4j",
    "error_id": "2415",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "65",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "141",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "115",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "116",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "69",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "111",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "122",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "128",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2415/RelationshipGroupDefragmenter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2415/RelationshipGroupDefragmenter.java\nindex ba7ab49ba3b..61b6a3903c6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2415/RelationshipGroupDefragmenter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2415/RelationshipGroupDefragmenter.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.internal.batchimport;\n \n import org.neo4j.internal.batchimport.cache.ByteArray;\n@@ -59,9 +60,9 @@ public class RelationshipGroupDefragmenter\n          * Every time a chunk is selected this method is called.\n          *\n          * @param fromNodeId low node id in the range to process (inclusive).\n-         * @param toNodeId high node id in the range to process (exclusive).\n+         * @param toNodeId   high node id in the range to process (exclusive).\n          */\n-        default void defragmentingNodeRange( long fromNodeId, long toNodeId )\n+        default void defragmentingNodeRange(long fromNodeId, long toNodeId)\n         {   // empty\n         }\n \n@@ -70,8 +71,8 @@ public class RelationshipGroupDefragmenter\n         };\n     }\n \n-    public RelationshipGroupDefragmenter( Configuration config, ExecutionMonitor executionMonitor, Monitor monitor,\n-            NumberArrayFactory numberArrayFactory, PageCacheTracer pageCacheTracer, MemoryTracker memoryTracker )\n+    public RelationshipGroupDefragmenter(Configuration config, ExecutionMonitor executionMonitor, Monitor monitor,\n+                                         NumberArrayFactory numberArrayFactory, PageCacheTracer pageCacheTracer, MemoryTracker memoryTracker)\n     {\n         this.config = config;\n         this.executionMonitor = executionMonitor;\n@@ -81,10 +82,10 @@ public class RelationshipGroupDefragmenter\n         this.memoryTracker = memoryTracker;\n     }\n \n-    public void run( long memoryWeCanHoldForCertain, BatchingNeoStores neoStore, long highNodeId )\n+    public void run(long memoryWeCanHoldForCertain, BatchingNeoStores neoStore, long highNodeId)\n     {\n-        try ( RelationshipGroupCache groupCache =\n-                new RelationshipGroupCache( numberArrayFactory, memoryWeCanHoldForCertain, highNodeId, memoryTracker ) )\n+        try (RelationshipGroupCache groupCache =\n+               new RelationshipGroupCache(numberArrayFactory, memoryWeCanHoldForCertain, highNodeId, memoryTracker))\n         {\n             // Read from the temporary relationship group store...\n             RecordStore<RelationshipGroupRecord> fromStore = neoStore.getTemporaryRelationshipGroupStore();\n@@ -93,20 +94,20 @@ public class RelationshipGroupDefragmenter\n \n             // Count all nodes, how many groups each node has each\n             Configuration groupConfig =\n-                    Configuration.withBatchSize( config, neoStore.getRelationshipGroupStore().getRecordsPerPage() );\n-            StatsProvider memoryUsage = new MemoryUsageStatsProvider( neoStore, groupCache );\n-            executeStage( new CountGroupsStage( groupConfig, fromStore, groupCache, pageCacheTracer, memoryUsage ) );\n+              Configuration.withBatchSize(config, neoStore.getRelationshipGroupStore().getRecordsPerPage());\n+            StatsProvider memoryUsage = new MemoryUsageStatsProvider(neoStore, groupCache);\n+            executeStage(new CountGroupsStage(groupConfig, fromStore, groupCache, pageCacheTracer, memoryUsage));\n             long fromNodeId = 0;\n-            while ( fromNodeId < highNodeId )\n+            while (fromNodeId < highNodeId)\n             {\n                 // See how many nodes' groups we can fit into the cache this iteration of the loop.\n                 // Groups that doesn't fit in this round will be included in consecutive rounds.\n-                long toNodeId = groupCache.prepare( fromNodeId );\n-                monitor.defragmentingNodeRange( fromNodeId, toNodeId );\n+                long toNodeId = groupCache.prepare(fromNodeId);\n+                monitor.defragmentingNodeRange(fromNodeId, toNodeId);\n                 // Cache those groups\n-                executeStage( new ScanAndCacheGroupsStage( groupConfig, fromStore, groupCache, pageCacheTracer, memoryUsage ) );\n+                executeStage(new ScanAndCacheGroupsStage(groupConfig, fromStore, groupCache, pageCacheTracer, memoryUsage));\n                 // And write them in sequential order in the store\n-                executeStage( new WriteGroupsStage( groupConfig, groupCache, toStore, pageCacheTracer ) );\n+                executeStage(new WriteGroupsStage(groupConfig, groupCache, toStore, pageCacheTracer));\n \n                 // Make adjustments for the next iteration\n                 fromNodeId = toNodeId;\n@@ -115,13 +116,13 @@ public class RelationshipGroupDefragmenter\n             // Now update nodes to point to the new groups\n             ByteArray groupCountCache = groupCache.getGroupCountCache();\n             groupCountCache.clear();\n-            Configuration nodeConfig = Configuration.withBatchSize( config, neoStore.getNodeStore().getRecordsPerPage() );\n-            executeStage( new NodeFirstGroupStage( nodeConfig, toStore, neoStore.getNodeStore(), groupCountCache, pageCacheTracer ) );\n+            Configuration nodeConfig = Configuration.withBatchSize(config, neoStore.getNodeStore().getRecordsPerPage());\n+            executeStage(new NodeFirstGroupStage(nodeConfig, toStore, neoStore.getNodeStore(), groupCountCache, pageCacheTracer));\n         }\n     }\n \n-    private void executeStage( Stage stage )\n+    private void executeStage(Stage stage)\n     {\n-        ExecutionSupervisors.superviseExecution( executionMonitor, stage );\n+        ExecutionSupervisors.superviseExecution(executionMonitor, stage);\n     }\n }\n",
            "diff_size": 20
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
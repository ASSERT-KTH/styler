{
    "project_name": "neo4j-neo4j",
    "error_id": "381",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "41",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "17",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "56",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "63",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "104",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "179",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "179",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/381/NodeRecord.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/381/NodeRecord.java\nindex 80dc6a1f02e..83002d7d6ab 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/381/NodeRecord.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/381/NodeRecord.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.store.record;\n \n import java.util.ArrayList;\n@@ -30,42 +31,41 @@ import static org.neo4j.memory.HeapEstimator.shallowSizeOfInstance;\n \n public class NodeRecord extends PrimitiveRecord\n {\n-    public static final long SHALLOW_SIZE = shallowSizeOfInstance( NodeRecord.class );\n+    public static final long SHALLOW_SIZE = shallowSizeOfInstance(NodeRecord.class);\n     private long nextRel;\n     private long labels;\n     private Collection<DynamicRecord> dynamicLabelRecords;\n     private boolean isLight;\n     private boolean dense;\n \n-    public NodeRecord( long id )\n+    public NodeRecord(long id)\n     {\n-        super( id );\n+        super(id);\n     }\n \n-    public NodeRecord( NodeRecord other )\n+    public NodeRecord(NodeRecord other)\n     {\n-        super( other );\n+        super(other);\n         this.nextRel = other.nextRel;\n         this.labels = other.labels;\n-        if ( other.dynamicLabelRecords.isEmpty() )\n+        if (other.dynamicLabelRecords.isEmpty())\n         {\n             this.dynamicLabelRecords = emptyList();\n-        }\n-        else\n+        } else\n         {\n-            this.dynamicLabelRecords = new ArrayList<>( other.dynamicLabelRecords.size() );\n-            for ( DynamicRecord labelRecord : other.dynamicLabelRecords )\n+            this.dynamicLabelRecords = new ArrayList<>(other.dynamicLabelRecords.size());\n+            for (DynamicRecord labelRecord : other.dynamicLabelRecords)\n             {\n-                this.dynamicLabelRecords.add( new DynamicRecord( labelRecord ) );\n+                this.dynamicLabelRecords.add(new DynamicRecord(labelRecord));\n             }\n         }\n         this.isLight = other.isLight;\n         this.dense = other.dense;\n     }\n \n-    public NodeRecord initialize( boolean inUse, long nextProp, boolean dense, long nextRel, long labels )\n+    public NodeRecord initialize(boolean inUse, long nextProp, boolean dense, long nextRel, long labels)\n     {\n-        super.initialize( inUse, nextProp );\n+        super.initialize(inUse, nextProp);\n         this.nextRel = nextRel;\n         this.dense = dense;\n         this.labels = labels;\n@@ -77,8 +77,8 @@ public class NodeRecord extends PrimitiveRecord\n     @Override\n     public void clear()\n     {\n-        initialize( false, Record.NO_NEXT_PROPERTY.intValue(), false,\n-                Record.NO_NEXT_RELATIONSHIP.intValue(), Record.NO_LABELS_FIELD.intValue() );\n+        initialize(false, Record.NO_NEXT_PROPERTY.intValue(), false,\n+          Record.NO_NEXT_RELATIONSHIP.intValue(), Record.NO_LABELS_FIELD.intValue());\n     }\n \n     public long getNextRel()\n@@ -86,7 +86,7 @@ public class NodeRecord extends PrimitiveRecord\n         return nextRel;\n     }\n \n-    public void setNextRel( long nextRel )\n+    public void setNextRel(long nextRel)\n     {\n         this.nextRel = nextRel;\n     }\n@@ -95,10 +95,10 @@ public class NodeRecord extends PrimitiveRecord\n      * Sets the label field to a pointer to the first changed dynamic record. All changed\n      * dynamic records by doing this are supplied here.\n      *\n-     * @param labels this will be either in-lined labels, or an id where to get the labels\n+     * @param labels         this will be either in-lined labels, or an id where to get the labels\n      * @param dynamicRecords all changed dynamic records by doing this.\n      */\n-    public void setLabelField( long labels, Collection<DynamicRecord> dynamicRecords )\n+    public void setLabelField(long labels, Collection<DynamicRecord> dynamicRecords)\n     {\n         this.labels = labels;\n         this.dynamicLabelRecords = dynamicRecords;\n@@ -126,7 +126,7 @@ public class NodeRecord extends PrimitiveRecord\n \n     public Iterable<DynamicRecord> getUsedDynamicLabelRecords()\n     {\n-        return filter( AbstractBaseRecord::inUse, dynamicLabelRecords );\n+        return filter(AbstractBaseRecord::inUse, dynamicLabelRecords);\n     }\n \n     public boolean isDense()\n@@ -134,7 +134,7 @@ public class NodeRecord extends PrimitiveRecord\n         return dense;\n     }\n \n-    public void setDense( boolean dense )\n+    public void setDense(boolean dense)\n     {\n         this.dense = dense;\n     }\n@@ -144,41 +144,41 @@ public class NodeRecord extends PrimitiveRecord\n     {\n         String denseInfo = (dense ? \"group\" : \"rel\") + \"=\" + nextRel;\n         String lightHeavyInfo = isLight ? \"light\" :\n-                                dynamicLabelRecords.isEmpty() ?\n-                                \"heavy\" : \"heavy,dynlabels=\" + dynamicLabelRecords;\n+          dynamicLabelRecords.isEmpty() ?\n+            \"heavy\" : \"heavy,dynlabels=\" + dynamicLabelRecords;\n \n         return \"Node[\" + getId() +\n-               \",used=\" + inUse() +\n-               \",created=\" + isCreated() +\n-               \",\" + denseInfo +\n-               \",prop=\" + getNextProp() +\n-               \",labels=\" + parseLabelsField( this ) +\n-               \",\" + lightHeavyInfo +\n-               secondaryUnitToString() + \"]\";\n+          \",used=\" + inUse() +\n+          \",created=\" + isCreated() +\n+          \",\" + denseInfo +\n+          \",prop=\" + getNextProp() +\n+          \",labels=\" + parseLabelsField(this) +\n+          \",\" + lightHeavyInfo +\n+          secondaryUnitToString() + \"]\";\n     }\n \n     @Override\n-    public void setIdTo( PropertyRecord property )\n+    public void setIdTo(PropertyRecord property)\n     {\n-        property.setNodeId( getId() );\n+        property.setNodeId(getId());\n     }\n \n     @Override\n     public NodeRecord copy()\n     {\n-        return new NodeRecord( this );\n+        return new NodeRecord(this);\n     }\n \n     @Override\n     public int hashCode()\n     {\n-        return Objects.hash( super.hashCode(), nextRel, labels, dense );\n+        return Objects.hash(super.hashCode(), nextRel, labels, dense);\n     }\n \n     @Override\n-    public boolean equals( Object obj )\n+    public boolean equals(Object obj)\n     {\n-        if ( !super.equals( obj ) )\n+        if (!super.equals(obj))\n         {\n             return false;\n         }\n",
            "diff_size": 36
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
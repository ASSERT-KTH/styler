{
    "project_name": "IQSS-dataverse",
    "error_id": "48",
    "information": {
        "errors": [
            {
                "line": "20",
                "column": "1",
                "severity": "error",
                "message": "File contains tab characters (this is the first instance).",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
            }
        ]
    },
    "source_code": "@Table( uniqueConstraints = @UniqueConstraint(columnNames={\"foreignMetadataFormatMapping_id\",\"foreignFieldXpath\"}) \n      , indexes = {@Index(columnList=\"foreignmetadataformatmapping_id\")\n\t\t, @Index(columnList=\"foreignfieldxpath\")\n\t\t, @Index(columnList=\"parentfieldmapping_id\")})\n@NamedQueries({\n  @NamedQuery( name=\"ForeignMetadataFieldMapping.findByPath\",",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "21",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/48/ForeignMetadataFieldMapping.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/styler/48/ForeignMetadataFieldMapping.java\nindex 40d219d2638..7290f8a0c27 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/48/ForeignMetadataFieldMapping.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/styler/48/ForeignMetadataFieldMapping.java\n@@ -17,7 +17,7 @@ import java.util.TreeMap;\n  */\n @Table( uniqueConstraints = @UniqueConstraint(columnNames={\"foreignMetadataFormatMapping_id\",\"foreignFieldXpath\"}) \n       , indexes = {@Index(columnList=\"foreignmetadataformatmapping_id\")\n-\t\t, @Index(columnList=\"foreignfieldxpath\")\n+                            , @Index(columnList=\"foreignfieldxpath\")\n \t\t, @Index(columnList=\"parentfieldmapping_id\")})\n @NamedQueries({\n   @NamedQuery( name=\"ForeignMetadataFieldMapping.findByPath\",\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/48/ForeignMetadataFieldMapping.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/intellij/48/ForeignMetadataFieldMapping.java\nindex 40d219d2638..a68832f909c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/48/ForeignMetadataFieldMapping.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/intellij/48/ForeignMetadataFieldMapping.java\n@@ -12,83 +12,82 @@ import java.util.Set;\n import java.util.TreeMap;\n \n /**\n- *\n  * @author Leonid Andreev\n  */\n-@Table( uniqueConstraints = @UniqueConstraint(columnNames={\"foreignMetadataFormatMapping_id\",\"foreignFieldXpath\"}) \n-      , indexes = {@Index(columnList=\"foreignmetadataformatmapping_id\")\n-\t\t, @Index(columnList=\"foreignfieldxpath\")\n-\t\t, @Index(columnList=\"parentfieldmapping_id\")})\n+@Table(uniqueConstraints = @UniqueConstraint(columnNames = {\"foreignMetadataFormatMapping_id\", \"foreignFieldXpath\"})\n+  , indexes = {@Index(columnList = \"foreignmetadataformatmapping_id\")\n+  , @Index(columnList = \"foreignfieldxpath\")\n+  , @Index(columnList = \"parentfieldmapping_id\")})\n @NamedQueries({\n-  @NamedQuery( name=\"ForeignMetadataFieldMapping.findByPath\",\n-               query=\"SELECT fmfm FROM ForeignMetadataFieldMapping fmfm WHERE fmfm.foreignMetadataFormatMapping.name=:formatName AND fmfm.foreignFieldXPath=:xPath\")  \n+  @NamedQuery(name = \"ForeignMetadataFieldMapping.findByPath\",\n+    query = \"SELECT fmfm FROM ForeignMetadataFieldMapping fmfm WHERE fmfm.foreignMetadataFormatMapping.name=:formatName AND fmfm.foreignFieldXPath=:xPath\")\n })\n @Entity\n public class ForeignMetadataFieldMapping implements Serializable {\n-    private static final long serialVersionUID = 1L;\n-    @Id\n-    @GeneratedValue(strategy = GenerationType.IDENTITY)\n-    private Long id;\n+  private static final long serialVersionUID = 1L;\n+  @Id\n+  @GeneratedValue(strategy = GenerationType.IDENTITY)\n+  private Long id;\n \n-    public Long getId() {\n-        return id;\n-    }\n+  public Long getId() {\n+    return id;\n+  }\n \n-    public void setId(Long id) {\n-        this.id = id;\n-    }\n-    \n-    @ManyToOne(cascade = CascadeType.MERGE)\n-    private ForeignMetadataFormatMapping foreignMetadataFormatMapping;\n+  public void setId(Long id) {\n+    this.id = id;\n+  }\n \n-    @Column(name = \"foreignFieldXPath\", columnDefinition = \"TEXT\")\n-    private String foreignFieldXPath;\n-    \n-    @Column(name = \"datasetfieldName\", columnDefinition = \"TEXT\")\n-    private String datasetfieldName;    \n-\n-    @OneToMany(mappedBy = \"parentFieldMapping\", cascade = {CascadeType.REMOVE, CascadeType.MERGE, CascadeType.PERSIST})\n-    private Collection<ForeignMetadataFieldMapping> childFieldMappings;\n-        \n-    @ManyToOne(cascade = CascadeType.MERGE)\n-    private ForeignMetadataFieldMapping parentFieldMapping;\n-    \n-    private boolean isAttribute;\n-    \n-    /* getters/setters: */\n+  @ManyToOne(cascade = CascadeType.MERGE)\n+  private ForeignMetadataFormatMapping foreignMetadataFormatMapping;\n \n-    public ForeignMetadataFormatMapping getForeignMetadataFormatMapping() {\n-        return foreignMetadataFormatMapping;\n-    }\n+  @Column(name = \"foreignFieldXPath\", columnDefinition = \"TEXT\")\n+  private String foreignFieldXPath;\n \n-    public void setForeignMetadataFormatMapping(ForeignMetadataFormatMapping foreignMetadataFormatMapping) {\n-        this.foreignMetadataFormatMapping = foreignMetadataFormatMapping;\n-    }\n-    \n-    public String getForeignFieldXPath() {\n-        return foreignFieldXPath;\n-    }\n+  @Column(name = \"datasetfieldName\", columnDefinition = \"TEXT\")\n+  private String datasetfieldName;\n \n-    public void setForeignFieldXPath(String foreignFieldXPath) {\n-        this.foreignFieldXPath = foreignFieldXPath;\n-    }\n-    \n-    public String getDatasetfieldName() {\n-        return datasetfieldName;\n-    }\n+  @OneToMany(mappedBy = \"parentFieldMapping\", cascade = {CascadeType.REMOVE, CascadeType.MERGE, CascadeType.PERSIST})\n+  private Collection<ForeignMetadataFieldMapping> childFieldMappings;\n \n-    public void setDatasetfieldName(String datasetfieldName) {\n-        this.datasetfieldName = datasetfieldName;\n-    }\n-    \n-    \n-    public Collection<ForeignMetadataFieldMapping> getChildFieldMappings() {\n-        return this.childFieldMappings;\n-    }\n+  @ManyToOne(cascade = CascadeType.MERGE)\n+  private ForeignMetadataFieldMapping parentFieldMapping;\n \n-    public void setChildFieldMappings(Collection<ForeignMetadataFieldMapping> childFieldMappings) {\n-        this.childFieldMappings = childFieldMappings;\n-    }\n+  private boolean isAttribute;\n+\n+  /* getters/setters: */\n+\n+  public ForeignMetadataFormatMapping getForeignMetadataFormatMapping() {\n+    return foreignMetadataFormatMapping;\n+  }\n+\n+  public void setForeignMetadataFormatMapping(ForeignMetadataFormatMapping foreignMetadataFormatMapping) {\n+    this.foreignMetadataFormatMapping = foreignMetadataFormatMapping;\n+  }\n+\n+  public String getForeignFieldXPath() {\n+    return foreignFieldXPath;\n+  }\n+\n+  public void setForeignFieldXPath(String foreignFieldXPath) {\n+    this.foreignFieldXPath = foreignFieldXPath;\n+  }\n+\n+  public String getDatasetfieldName() {\n+    return datasetfieldName;\n+  }\n+\n+  public void setDatasetfieldName(String datasetfieldName) {\n+    this.datasetfieldName = datasetfieldName;\n+  }\n+\n+\n+  public Collection<ForeignMetadataFieldMapping> getChildFieldMappings() {\n+    return this.childFieldMappings;\n+  }\n+\n+  public void setChildFieldMappings(Collection<ForeignMetadataFieldMapping> childFieldMappings) {\n+    this.childFieldMappings = childFieldMappings;\n+  }\n     \n     /*\n     public Collection<ForeignMetadataFieldMapping> getAttributeMappings() {\n@@ -99,33 +98,33 @@ public class ForeignMetadataFieldMapping implements Serializable {\n         this.attributeMappings = attributeMappings;\n     }\n     */\n-    \n-    \n-    public ForeignMetadataFieldMapping getParentFieldMapping() {\n-        return parentFieldMapping;\n-    }\n \n-    public void setParentFieldMapping(ForeignMetadataFieldMapping parentFieldMapping) {\n-        this.parentFieldMapping = parentFieldMapping;\n-    }\n-    \n-    public boolean isAttribute() {\n-        return isAttribute;\n-    }\n \n-    public void setIsAttribute(boolean isAttribute) {\n-        this.isAttribute = isAttribute;\n-    }\n-    \n-    /* logical: */\n-    \n-    public boolean isChild() {\n-        return this.parentFieldMapping != null;        \n-    }    \n-    \n-    public boolean HasChildren() {\n-        return !this.childFieldMappings.isEmpty();\n-    }\n+  public ForeignMetadataFieldMapping getParentFieldMapping() {\n+    return parentFieldMapping;\n+  }\n+\n+  public void setParentFieldMapping(ForeignMetadataFieldMapping parentFieldMapping) {\n+    this.parentFieldMapping = parentFieldMapping;\n+  }\n+\n+  public boolean isAttribute() {\n+    return isAttribute;\n+  }\n+\n+  public void setIsAttribute(boolean isAttribute) {\n+    this.isAttribute = isAttribute;\n+  }\n+\n+  /* logical: */\n+\n+  public boolean isChild() {\n+    return this.parentFieldMapping != null;\n+  }\n+\n+  public boolean HasChildren() {\n+    return !this.childFieldMappings.isEmpty();\n+  }\n     \n     /*\n     public boolean HasAttributes() {\n@@ -133,30 +132,30 @@ public class ForeignMetadataFieldMapping implements Serializable {\n     }\n     */\n \n-    public boolean HasParent() {\n-        return this.parentFieldMapping != null;\n-    }\n-    /* overrides: */ \n+  public boolean HasParent() {\n+    return this.parentFieldMapping != null;\n+  }\n+  /* overrides: */\n \n-    @Override\n-    public int hashCode() {\n-        int hash = 0;\n-        hash += (id != null ? id.hashCode() : 0);\n-        return hash;\n-    }\n+  @Override\n+  public int hashCode() {\n+    int hash = 0;\n+    hash += (id != null ? id.hashCode() : 0);\n+    return hash;\n+  }\n \n-    @Override\n-    public boolean equals(Object object) {\n-        if (!(object instanceof ForeignMetadataFieldMapping)) {\n-            return false;\n-        }\n-        ForeignMetadataFieldMapping other = (ForeignMetadataFieldMapping) object;\n-        return !((this.id == null && other.id != null) || (this.id != null && !this.id.equals(other.id)));\n+  @Override\n+  public boolean equals(Object object) {\n+    if (!(object instanceof ForeignMetadataFieldMapping)) {\n+      return false;\n     }\n+    ForeignMetadataFieldMapping other = (ForeignMetadataFieldMapping) object;\n+    return !((this.id == null && other.id != null) || (this.id != null && !this.id.equals(other.id)));\n+  }\n+\n+  @Override\n+  public String toString() {\n+    return \"edu.harvard.iq.dataverse.ForeignMetadataFieldMapping[ id=\" + id + \" ]\";\n+  }\n \n-    @Override\n-    public String toString() {\n-        return \"edu.harvard.iq.dataverse.ForeignMetadataFieldMapping[ id=\" + id + \" ]\";\n-    }\n-    \n }\n",
            "diff_size": 163
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/48/ForeignMetadataFieldMapping.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/codebuff/48/ForeignMetadataFieldMapping.java\nindex 40d219d2638..0ea89262215 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/48/ForeignMetadataFieldMapping.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/codebuff/48/ForeignMetadataFieldMapping.java\n@@ -15,17 +15,17 @@ import java.util.TreeMap;\n  *\n  * @author Leonid Andreev\n  */\n-@Table( uniqueConstraints = @UniqueConstraint(columnNames={\"foreignMetadataFormatMapping_id\",\"foreignFieldXpath\"}) \n-      , indexes = {@Index(columnList=\"foreignmetadataformatmapping_id\")\n-\t\t, @Index(columnList=\"foreignfieldxpath\")\n-\t\t, @Index(columnList=\"parentfieldmapping_id\")})\n-@NamedQueries({\n-  @NamedQuery( name=\"ForeignMetadataFieldMapping.findByPath\",\n-               query=\"SELECT fmfm FROM ForeignMetadataFieldMapping fmfm WHERE fmfm.foreignMetadataFormatMapping.name=:formatName AND fmfm.foreignFieldXPath=:xPath\")  \n-})\n+\n+\n+@Table(uniqueConstraints = @UniqueConstraint(columnNames = {\"foreignMetadataFormatMapping_id\", \"foreignFieldXpath\"}),\n+       indexes = {@Index(columnList = \"foreignmetadataformatmapping_id\"), @Index(columnList = \"foreignfieldxpath\"), @Index(columnList = \"parentfieldmapping_id\")})\n+@NamedQueries({@NamedQuery(name = \"ForeignMetadataFieldMapping.findByPath\",\n+    query = \"SELECT fmfm FROM ForeignMetadataFieldMapping fmfm WHERE fmfm.foreignMetadataFormatMapping.name=:formatName AND fmfm.foreignFieldXPath=:xPath\")})\n @Entity\n public class ForeignMetadataFieldMapping implements Serializable {\n+\n     private static final long serialVersionUID = 1L;\n+\n     @Id\n     @GeneratedValue(strategy = GenerationType.IDENTITY)\n     private Long id;\n@@ -37,22 +37,21 @@ public class ForeignMetadataFieldMapping implements Serializable {\n     public void setId(Long id) {\n         this.id = id;\n     }\n-    \n+\n     @ManyToOne(cascade = CascadeType.MERGE)\n     private ForeignMetadataFormatMapping foreignMetadataFormatMapping;\n \n     @Column(name = \"foreignFieldXPath\", columnDefinition = \"TEXT\")\n     private String foreignFieldXPath;\n-    \n+\n     @Column(name = \"datasetfieldName\", columnDefinition = \"TEXT\")\n-    private String datasetfieldName;    \n+    private String datasetfieldName;\n \n     @OneToMany(mappedBy = \"parentFieldMapping\", cascade = {CascadeType.REMOVE, CascadeType.MERGE, CascadeType.PERSIST})\n     private Collection<ForeignMetadataFieldMapping> childFieldMappings;\n-        \n+\n     @ManyToOne(cascade = CascadeType.MERGE)\n     private ForeignMetadataFieldMapping parentFieldMapping;\n-    \n     private boolean isAttribute;\n     \n     /* getters/setters: */\n@@ -64,7 +63,7 @@ public class ForeignMetadataFieldMapping implements Serializable {\n     public void setForeignMetadataFormatMapping(ForeignMetadataFormatMapping foreignMetadataFormatMapping) {\n         this.foreignMetadataFormatMapping = foreignMetadataFormatMapping;\n     }\n-    \n+\n     public String getForeignFieldXPath() {\n         return foreignFieldXPath;\n     }\n@@ -72,7 +71,7 @@ public class ForeignMetadataFieldMapping implements Serializable {\n     public void setForeignFieldXPath(String foreignFieldXPath) {\n         this.foreignFieldXPath = foreignFieldXPath;\n     }\n-    \n+\n     public String getDatasetfieldName() {\n         return datasetfieldName;\n     }\n@@ -80,8 +79,7 @@ public class ForeignMetadataFieldMapping implements Serializable {\n     public void setDatasetfieldName(String datasetfieldName) {\n         this.datasetfieldName = datasetfieldName;\n     }\n-    \n-    \n+\n     public Collection<ForeignMetadataFieldMapping> getChildFieldMappings() {\n         return this.childFieldMappings;\n     }\n@@ -99,8 +97,7 @@ public class ForeignMetadataFieldMapping implements Serializable {\n         this.attributeMappings = attributeMappings;\n     }\n     */\n-    \n-    \n+\n     public ForeignMetadataFieldMapping getParentFieldMapping() {\n         return parentFieldMapping;\n     }\n@@ -108,7 +105,7 @@ public class ForeignMetadataFieldMapping implements Serializable {\n     public void setParentFieldMapping(ForeignMetadataFieldMapping parentFieldMapping) {\n         this.parentFieldMapping = parentFieldMapping;\n     }\n-    \n+\n     public boolean isAttribute() {\n         return isAttribute;\n     }\n@@ -118,11 +115,11 @@ public class ForeignMetadataFieldMapping implements Serializable {\n     }\n     \n     /* logical: */\n-    \n+\n     public boolean isChild() {\n-        return this.parentFieldMapping != null;        \n-    }    \n-    \n+        return this.parentFieldMapping != null;\n+    }\n+\n     public boolean HasChildren() {\n         return !this.childFieldMappings.isEmpty();\n     }\n@@ -136,7 +133,7 @@ public class ForeignMetadataFieldMapping implements Serializable {\n     public boolean HasParent() {\n         return this.parentFieldMapping != null;\n     }\n-    /* overrides: */ \n+    /* overrides: */\n \n     @Override\n     public int hashCode() {\n@@ -150,6 +147,7 @@ public class ForeignMetadataFieldMapping implements Serializable {\n         if (!(object instanceof ForeignMetadataFieldMapping)) {\n             return false;\n         }\n+\n         ForeignMetadataFieldMapping other = (ForeignMetadataFieldMapping) object;\n         return !((this.id == null && other.id != null) || (this.id != null && !this.id.equals(other.id)));\n     }\n@@ -158,5 +156,4 @@ public class ForeignMetadataFieldMapping implements Serializable {\n     public String toString() {\n         return \"edu.harvard.iq.dataverse.ForeignMetadataFieldMapping[ id=\" + id + \" ]\";\n     }\n-    \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 30
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "21",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/48/ForeignMetadataFieldMapping.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/styler_random/48/ForeignMetadataFieldMapping.java\nindex 40d219d2638..7290f8a0c27 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/48/ForeignMetadataFieldMapping.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/styler_random/48/ForeignMetadataFieldMapping.java\n@@ -17,7 +17,7 @@ import java.util.TreeMap;\n  */\n @Table( uniqueConstraints = @UniqueConstraint(columnNames={\"foreignMetadataFormatMapping_id\",\"foreignFieldXpath\"}) \n       , indexes = {@Index(columnList=\"foreignmetadataformatmapping_id\")\n-\t\t, @Index(columnList=\"foreignfieldxpath\")\n+                            , @Index(columnList=\"foreignfieldxpath\")\n \t\t, @Index(columnList=\"parentfieldmapping_id\")})\n @NamedQueries({\n   @NamedQuery( name=\"ForeignMetadataFieldMapping.findByPath\",\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "21",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/48/ForeignMetadataFieldMapping.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/styler_three_grams/48/ForeignMetadataFieldMapping.java\nindex 40d219d2638..a4070196e19 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/48/ForeignMetadataFieldMapping.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/styler_three_grams/48/ForeignMetadataFieldMapping.java\n@@ -17,7 +17,7 @@ import java.util.TreeMap;\n  */\n @Table( uniqueConstraints = @UniqueConstraint(columnNames={\"foreignMetadataFormatMapping_id\",\"foreignFieldXpath\"}) \n       , indexes = {@Index(columnList=\"foreignmetadataformatmapping_id\")\n-\t\t, @Index(columnList=\"foreignfieldxpath\")\n+              , @Index(columnList=\"foreignfieldxpath\")\n \t\t, @Index(columnList=\"parentfieldmapping_id\")})\n @NamedQueries({\n   @NamedQuery( name=\"ForeignMetadataFieldMapping.findByPath\",\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "intellij",
        "codebuff"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ]
}
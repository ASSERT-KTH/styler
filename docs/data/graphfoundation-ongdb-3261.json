{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3261",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "44",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3261/IndexReferenceFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3261/IndexReferenceFactory.java\nindex 7b637710f4e..e53177e0a05 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3261/IndexReferenceFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3261/IndexReferenceFactory.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.index.impl.lucene.explicit;\n \n import org.apache.lucene.index.DirectoryReader;\n@@ -36,65 +37,65 @@ import org.neo4j.internal.kernel.api.exceptions.explicitindex.ExplicitIndexNotFo\n  */\n abstract class IndexReferenceFactory\n {\n-    private final File baseStorePath;\n-    private final IndexTypeCache typeCache;\n-    private final LuceneDataSource.LuceneFilesystemFacade filesystemFacade;\n+  private final File baseStorePath;\n+  private final IndexTypeCache typeCache;\n+  private final LuceneDataSource.LuceneFilesystemFacade filesystemFacade;\n \n-    IndexReferenceFactory( LuceneDataSource.LuceneFilesystemFacade filesystemFacade, File baseStorePath,\n-            IndexTypeCache typeCache )\n-    {\n-        this.filesystemFacade = filesystemFacade;\n-        this.baseStorePath = baseStorePath;\n-        this.typeCache = typeCache;\n-    }\n+  IndexReferenceFactory(LuceneDataSource.LuceneFilesystemFacade filesystemFacade, File baseStorePath,\n+                        IndexTypeCache typeCache)\n+  {\n+    this.filesystemFacade = filesystemFacade;\n+    this.baseStorePath = baseStorePath;\n+    this.typeCache = typeCache;\n+  }\n \n-    /**\n-     * Create new {@link IndexReference} for provided {@link IndexIdentifier}.\n-     * @param indexIdentifier index identifier to build index for.\n-     * @return newly create {@link IndexReference}\n-     *\n-     * @throws IOException in case of exception during accessing lucene reader/writer.\n-     * @throws ExplicitIndexNotFoundKernelException if the index is dropped prior to, or concurrently with, this\n-     * operation.\n-     */\n-    abstract IndexReference createIndexReference( IndexIdentifier indexIdentifier )\n-            throws IOException, ExplicitIndexNotFoundKernelException;\n+  /**\n+   * Create new {@link IndexReference} for provided {@link IndexIdentifier}.\n+   *\n+   * @param indexIdentifier index identifier to build index for.\n+   * @return newly create {@link IndexReference}\n+   * @throws IOException                          in case of exception during accessing lucene reader/writer.\n+   * @throws ExplicitIndexNotFoundKernelException if the index is dropped prior to, or concurrently with, this\n+   *                                              operation.\n+   */\n+  abstract IndexReference createIndexReference(IndexIdentifier indexIdentifier)\n+      throws IOException, ExplicitIndexNotFoundKernelException;\n \n-    /**\n-     * If nothing has changed underneath (since the searcher was last created or refreshed) {@code searcher} is\n-     * returned. But if something has changed a refreshed searcher is returned. It makes use if the\n-     * {@link DirectoryReader#openIfChanged(DirectoryReader, IndexWriter, boolean)} which faster than opening an index\n-     * from scratch.\n-     *\n-     * @param indexReference the {@link IndexReference} to refresh.\n-     * @return a refreshed version of the searcher or, if nothing has changed,\n-     *         {@code null}.\n-     * @throws RuntimeException if there's a problem with the index.\n-     * @throws ExplicitIndexNotFoundKernelException if the index is dropped prior to, or concurrently with, this\n-     * operation.\n-     */\n-    abstract IndexReference refresh( IndexReference indexReference ) throws ExplicitIndexNotFoundKernelException;\n+  /**\n+   * If nothing has changed underneath (since the searcher was last created or refreshed) {@code searcher} is\n+   * returned. But if something has changed a refreshed searcher is returned. It makes use if the\n+   * {@link DirectoryReader#openIfChanged(DirectoryReader, IndexWriter, boolean)} which faster than opening an index\n+   * from scratch.\n+   *\n+   * @param indexReference the {@link IndexReference} to refresh.\n+   * @return a refreshed version of the searcher or, if nothing has changed,\n+   * {@code null}.\n+   * @throws RuntimeException                     if there's a problem with the index.\n+   * @throws ExplicitIndexNotFoundKernelException if the index is dropped prior to, or concurrently with, this\n+   *                                              operation.\n+   */\n+  abstract IndexReference refresh(IndexReference indexReference) throws ExplicitIndexNotFoundKernelException;\n \n-    Directory getIndexDirectory( IndexIdentifier identifier ) throws IOException\n-    {\n-        return filesystemFacade.getDirectory( baseStorePath, identifier );\n-    }\n+  Directory getIndexDirectory(IndexIdentifier identifier) throws IOException\n+  {\n+    return filesystemFacade.getDirectory(baseStorePath, identifier);\n+  }\n \n-    IndexSearcher newIndexSearcher( IndexIdentifier identifier, IndexReader reader )\n-            throws ExplicitIndexNotFoundKernelException\n+  IndexSearcher newIndexSearcher(IndexIdentifier identifier, IndexReader reader)\n+      throws ExplicitIndexNotFoundKernelException\n+  {\n+    IndexSearcher searcher = new IndexSearcher(reader);\n+    IndexType type = getType(identifier);\n+    if (type.getSimilarity() != null)\n     {\n-        IndexSearcher searcher = new IndexSearcher( reader );\n-        IndexType type = getType( identifier );\n-        if ( type.getSimilarity() != null )\n-        {\n-            searcher.setSimilarity( type.getSimilarity() );\n-        }\n-        return searcher;\n+      searcher.setSimilarity(type.getSimilarity());\n     }\n+    return searcher;\n+  }\n \n-    IndexType getType( IndexIdentifier identifier ) throws ExplicitIndexNotFoundKernelException\n-    {\n-        return typeCache.getIndexType( identifier, false );\n-    }\n+  IndexType getType(IndexIdentifier identifier) throws ExplicitIndexNotFoundKernelException\n+  {\n+    return typeCache.getIndexType(identifier, false);\n+  }\n }\n \n",
            "diff_size": 59
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3261/IndexReferenceFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3261/IndexReferenceFactory.java\nindex 7b637710f4e..657385b5ad9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3261/IndexReferenceFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3261/IndexReferenceFactory.java\n@@ -57,10 +57,9 @@ abstract class IndexReferenceFactory\n      * @throws ExplicitIndexNotFoundKernelException if the index is dropped prior to, or concurrently with, this\n      * operation.\n      */\n-    abstract IndexReference createIndexReference( IndexIdentifier indexIdentifier )\n-            throws IOException, ExplicitIndexNotFoundKernelException;\n+    abstract IndexReference createIndexReference( IndexIdentifier indexIdentifier ) throws IOException, ExplicitIndexNotFoundKernelException;\n \n-    /**\n+/**\n      * If nothing has changed underneath (since the searcher was last created or refreshed) {@code searcher} is\n      * returned. But if something has changed a refreshed searcher is returned. It makes use if the\n      * {@link DirectoryReader#openIfChanged(DirectoryReader, IndexWriter, boolean)} which faster than opening an index\n@@ -80,21 +79,20 @@ abstract class IndexReferenceFactory\n         return filesystemFacade.getDirectory( baseStorePath, identifier );\n     }\n \n-    IndexSearcher newIndexSearcher( IndexIdentifier identifier, IndexReader reader )\n-            throws ExplicitIndexNotFoundKernelException\n-    {\n+    IndexSearcher newIndexSearcher( IndexIdentifier identifier, IndexReader reader ) throws ExplicitIndexNotFoundKernelException\n+{\n         IndexSearcher searcher = new IndexSearcher( reader );\n         IndexType type = getType( identifier );\n         if ( type.getSimilarity() != null )\n         {\n             searcher.setSimilarity( type.getSimilarity() );\n         }\n-        return searcher;\n+\n+return searcher;\n     }\n \n     IndexType getType( IndexIdentifier identifier ) throws ExplicitIndexNotFoundKernelException\n     {\n         return typeCache.getIndexType( identifier, false );\n     }\n-}\n-\n+}\n\\ No newline at end of file\n",
            "diff_size": 10
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
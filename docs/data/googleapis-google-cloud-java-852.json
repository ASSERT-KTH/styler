{
    "project_name": "googleapis-google-cloud-java",
    "error_id": "852",
    "information": {
        "errors": [
            {
                "line": "38",
                "severity": "warning",
                "message": "Line is longer than 100 characters (found 101).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "   * MessageReceiver receiver =\n   *     new MessageReceiver() {\n   *       public void receiveMessage(final PubsubMessage message, final AckReplyConsumer consumer) {\n   *         if (blockingQueue.offer(message)) {\n   *           consumer.ack();\n   *         } else {",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "38",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "40",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/852/MessageReceiver.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/intellij/852/MessageReceiver.java\nindex d1428a6d5cc..97cf67d9db7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/852/MessageReceiver.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/intellij/852/MessageReceiver.java\n@@ -18,7 +18,9 @@ package com.google.cloud.pubsub.v1;\n \n import com.google.pubsub.v1.PubsubMessage;\n \n-/** This interface can be implemented by users of {@link Subscriber} to receive messages. */\n+/**\n+ * This interface can be implemented by users of {@link Subscriber} to receive messages.\n+ */\n public interface MessageReceiver {\n   /**\n    * Called when a message is received by the subscriber. The implementation must arrange for {@link\n@@ -45,7 +47,7 @@ public interface MessageReceiver {\n    *     };\n    *\n    * }</pre>\n-   *\n+   * <p>\n    * <!--SNIPPET receiveMessage-->\n    */\n   void receiveMessage(final PubsubMessage message, final AckReplyConsumer consumer);\n",
            "diff_size": 4
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "39",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/852/MessageReceiver.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/naturalize/852/MessageReceiver.java\nindex d1428a6d5cc..5cdb70aeaa6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/852/MessageReceiver.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/naturalize/852/MessageReceiver.java\n@@ -20,6 +20,7 @@ import com.google.pubsub.v1.PubsubMessage;\n \n /** This interface can be implemented by users of {@link Subscriber} to receive messages. */\n public interface MessageReceiver {\n+\n   /**\n    * Called when a message is received by the subscriber. The implementation must arrange for {@link\n    * AckReplyConsumer#ack()} or {@link AckReplyConsumer#nack()} to be called after processing the\n@@ -49,4 +50,4 @@ public interface MessageReceiver {\n    * <!--SNIPPET receiveMessage-->\n    */\n   void receiveMessage(final PubsubMessage message, final AckReplyConsumer consumer);\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "40",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/852/MessageReceiver.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/codebuff/852/MessageReceiver.java\nindex d1428a6d5cc..3f2dcd139a1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/852/MessageReceiver.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/codebuff/852/MessageReceiver.java\n@@ -19,6 +19,8 @@ package com.google.cloud.pubsub.v1;\n import com.google.pubsub.v1.PubsubMessage;\n \n /** This interface can be implemented by users of {@link Subscriber} to receive messages. */\n+\n+\n public interface MessageReceiver {\n   /**\n    * Called when a message is received by the subscriber. The implementation must arrange for {@link\n@@ -48,5 +50,6 @@ public interface MessageReceiver {\n    *\n    * <!--SNIPPET receiveMessage-->\n    */\n+\n   void receiveMessage(final PubsubMessage message, final AckReplyConsumer consumer);\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "38",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "38",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
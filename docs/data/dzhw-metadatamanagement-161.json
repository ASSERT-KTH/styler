{
    "project_name": "dzhw-metadatamanagement",
    "error_id": "161",
    "information": {
        "errors": [
            {
                "line": "27",
                "severity": "error",
                "message": "'CLASS_DEF' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " *\n */\n@Slf4j\n@Service\npublic class StudyListService {\n  @Autowired",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/161/StudyListService.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/styler/161/StudyListService.java\nindex 66e74472a60..0f785856d93 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/161/StudyListService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/styler/161/StudyListService.java\n@@ -24,6 +24,7 @@ import lombok.extern.slf4j.Slf4j;\n  * @author tgehrke\n  *\n  */\n+\n @Slf4j\n @Service\n public class StudyListService {\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/161/StudyListService.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/intellij/161/StudyListService.java\nindex 66e74472a60..78f1042a6eb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/161/StudyListService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/intellij/161/StudyListService.java\n@@ -19,10 +19,11 @@ import io.searchbox.client.JestClient;\n import io.searchbox.client.JestResult;\n import io.searchbox.core.Search;\n import lombok.extern.slf4j.Slf4j;\n+\n /**\n  * Service to get released studies out of elastic search.\n- * @author tgehrke\n  *\n+ * @author tgehrke\n  */\n @Slf4j\n @Service\n@@ -32,7 +33,7 @@ public class StudyListService {\n \n   /**\n    * Request released studies sort by title (DE) with a pagination defined by page and size.\n-   * \n+   *\n    * @param page the pagination page\n    * @param size the count of items to query\n    * @return a list of searched study documents wrapped in a page object.\n",
            "diff_size": 4
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/161/StudyListService.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/naturalize/161/StudyListService.java\nindex 66e74472a60..d84a8497e1d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/161/StudyListService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/naturalize/161/StudyListService.java\n@@ -19,6 +19,7 @@ import io.searchbox.client.JestClient;\n import io.searchbox.client.JestResult;\n import io.searchbox.core.Search;\n import lombok.extern.slf4j.Slf4j;\n+\n /**\n  * Service to get released studies out of elastic search.\n  * @author tgehrke\n@@ -61,4 +62,4 @@ public class StudyListService {\n \n     return resultPage;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "42",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 113).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "43",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 139).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "60",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/161/StudyListService.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/codebuff/161/StudyListService.java\nindex 66e74472a60..a9252f82e78 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/161/StudyListService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/codebuff/161/StudyListService.java\n@@ -2,7 +2,6 @@ package eu.dzhw.fdz.metadatamanagement.studymanagement.service;\n \n import java.io.IOException;\n import java.util.List;\n-\n import org.elasticsearch.index.query.QueryBuilders;\n import org.elasticsearch.search.builder.SearchSourceBuilder;\n import org.elasticsearch.search.sort.SortOrder;\n@@ -11,9 +10,7 @@ import org.springframework.data.domain.Page;\n import org.springframework.data.domain.PageImpl;\n import org.springframework.data.domain.PageRequest;\n import org.springframework.stereotype.Service;\n-\n import com.google.gson.JsonObject;\n-\n import eu.dzhw.fdz.metadatamanagement.searchmanagement.documents.StudySearchDocument;\n import io.searchbox.client.JestClient;\n import io.searchbox.client.JestResult;\n@@ -24,11 +21,13 @@ import lombok.extern.slf4j.Slf4j;\n  * @author tgehrke\n  *\n  */\n+\n+\n @Slf4j\n @Service\n public class StudyListService {\n-  @Autowired\n-  JestClient jestClient;\n+\n+  @Autowired JestClient jestClient;\n \n   /**\n    * Request released studies sort by title (DE) with a pagination defined by page and size.\n@@ -40,25 +39,25 @@ public class StudyListService {\n    */\n   public Page<StudySearchDocument> loadStudies(int page, int size) throws IOException {\n     SearchSourceBuilder sourceBuilder = new SearchSourceBuilder();\n-    sourceBuilder.query(QueryBuilders.boolQuery().filter(QueryBuilders.existsQuery(\"release\")))\n-        .from(page * size).size(size).sort(\"title.de\", SortOrder.ASC);\n-    Search search = new Search.Builder(sourceBuilder.toString()).addIndex(\"studies\").build();\n+    sourceBuilder.query(QueryBuilders.boolQuery().filter(QueryBuilders.existsQuery(\"release\"))).from(page * size)\n+                                                                                               .size(size).sort(\"title.de\", SortOrder.ASC);\n+    Search search = new Search.Builder(sourceBuilder.toString()).addIndex(\"studies\")\n+                                                                .build();\n     JestResult searchResult = jestClient.execute(search);\n     List<StudySearchDocument> hits = searchResult.getSourceAsObjectList(StudySearchDocument.class);\n     long total;\n     try {\n       JsonObject jsonObject = searchResult.getJsonObject();\n-      String asString = jsonObject.get(\"hits\").getAsJsonObject().get(\"total\").getAsString();\n+      String asString = jsonObject.get(\"hits\").getAsJsonObject()\n+                                              .get(\"total\")\n+                                              .getAsString();\n       total = Long.parseLong(asString);\n     } catch (Exception e) {\n       log.warn(\"failed to get total number of elemets from search result\", e);\n       total = 0;\n     }\n-\n     PageRequest pageRequest = PageRequest.of(page, size);\n-    Page<StudySearchDocument> resultPage =\n-        new PageImpl<StudySearchDocument>(hits, pageRequest, total);\n-\n+    Page<StudySearchDocument> resultPage = new PageImpl<StudySearchDocument>(hits, pageRequest, total);\n     return resultPage;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 19
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/161/StudyListService.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/styler_random/161/StudyListService.java\nindex 66e74472a60..0f785856d93 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/161/StudyListService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/styler_random/161/StudyListService.java\n@@ -24,6 +24,7 @@ import lombok.extern.slf4j.Slf4j;\n  * @author tgehrke\n  *\n  */\n+\n @Slf4j\n @Service\n public class StudyListService {\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/161/StudyListService.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/styler_three_grams/161/StudyListService.java\nindex 66e74472a60..0f785856d93 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/161/StudyListService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/styler_three_grams/161/StudyListService.java\n@@ -24,6 +24,7 @@ import lombok.extern.slf4j.Slf4j;\n  * @author tgehrke\n  *\n  */\n+\n @Slf4j\n @Service\n public class StudyListService {\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "codebuff"
    ]
}
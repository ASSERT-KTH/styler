{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1445",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "153",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "105",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "196",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "196",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "215",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "215",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "215",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "232",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "232",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "233",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "242",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "242",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "255",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "255",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "276",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "276",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "283",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "283",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "291",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "291",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "309",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "309",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "329",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "329",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "329",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "340",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "340",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "344",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "344",
                    "column": "107",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "349",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "349",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "351",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "351",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "353",
                    "column": "58",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "353",
                    "column": "119",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "359",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "359",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "369",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "396",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "396",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "434",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "434",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "447",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "447",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "448",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "448",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "449",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "449",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "450",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "450",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "451",
                    "column": "58",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "451",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "454",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "454",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "456",
                    "column": "82",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "456",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "458",
                    "column": "83",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "458",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "460",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "460",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "461",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "461",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "462",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "462",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "467",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "467",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "468",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "468",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "476",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "476",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "477",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "477",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "479",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "479",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "481",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "481",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "490",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "490",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "495",
                    "column": "67",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "503",
                    "column": "4",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "518",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "518",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1445/AbstractNeoServer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1445/AbstractNeoServer.java\nindex a8d594a4575..aaea86a1fa0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1445/AbstractNeoServer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1445/AbstractNeoServer.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.server;\n \n import org.apache.commons.configuration.Configuration;\n@@ -101,439 +102,437 @@ import static org.neo4j.server.exception.ServerStartupErrors.translateToServerSt\n \n public abstract class AbstractNeoServer implements NeoServer\n {\n-    private static final long MINIMUM_TIMEOUT = 1000L;\n-    /**\n-     * We add a second to the timeout if the user configures a 1-second timeout.\n-     * <p>\n-     * This ensures the expiry time displayed to the user is always at least 1 second, even after it is rounded down.\n-     */\n-    private static final long ROUNDING_SECOND = 1000L;\n-\n-    private static final Pattern[] DEFAULT_URI_WHITELIST = new Pattern[]{\n-            Pattern.compile( \"/browser.*\" ),\n-            Pattern.compile( \"/\" )\n-    };\n-    public static final String NEO4J_IS_STARTING_MESSAGE = \"======== Neo4j \" + Version.getNeo4jVersion() + \" ========\";\n-\n-    private final Database.Factory dbFactory;\n-    private final GraphDatabaseFacadeFactory.Dependencies dependencies;\n-    protected final LogProvider logProvider;\n-    protected final Log log;\n-\n-    private final List<ServerModule> serverModules = new ArrayList<>();\n-    private final SimpleUriBuilder uriBuilder = new SimpleUriBuilder();\n-    private final Config config;\n-    private final LifeSupport life = new LifeSupport();\n-    private final ListenSocketAddress httpListenAddress;\n-    private final Optional<ListenSocketAddress> httpsListenAddress;\n-    private AdvertisedSocketAddress httpAdvertisedAddress;\n-    private Optional<AdvertisedSocketAddress> httpsAdvertisedAddress;\n-\n-    protected Database database;\n-    protected CypherExecutor cypherExecutor;\n-    protected WebServer webServer;\n-    protected Supplier<AuthManager> authManagerSupplier;\n-    protected Supplier<UserManagerSupplier> userManagerSupplier;\n-    protected Supplier<SslPolicyLoader> sslPolicyFactorySupplier;\n-    private DatabaseActions databaseActions;\n-    private TransactionFacade transactionFacade;\n-\n-    private TransactionHandleRegistry transactionRegistry;\n-    private boolean initialized;\n-    private LifecycleAdapter serverComponents;\n-    protected ConnectorPortRegister connectorPortRegister;\n-    private HttpConnector httpConnector;\n-    private Optional<HttpConnector> httpsConnector;\n-\n-    protected abstract Iterable<ServerModule> createServerModules();\n-\n-    protected abstract WebServer createWebServer();\n-\n-    public AbstractNeoServer( Config config, Database.Factory dbFactory,\n-            GraphDatabaseFacadeFactory.Dependencies dependencies, LogProvider logProvider )\n-    {\n-        this.config = config;\n-        this.dbFactory = dbFactory;\n-        this.dependencies = dependencies;\n-        this.logProvider = logProvider;\n-        this.log = logProvider.getLog( getClass() );\n-        log.info( NEO4J_IS_STARTING_MESSAGE );\n-\n-        List<HttpConnector> httpConnectors = config.enabledHttpConnectors();\n-\n-        httpConnector = httpConnectors.stream()\n-                .filter( c -> Encryption.NONE.equals( c.encryptionLevel() ) )\n-                .findFirst().orElseThrow( () ->\n-                        new IllegalArgumentException( \"An HTTP connector must be configured to run the server\" ) );\n-\n-        httpListenAddress = config.get( httpConnector.listen_address );\n-        httpAdvertisedAddress = config.get( httpConnector.advertised_address );\n-\n-        httpsConnector = httpConnectors.stream()\n-                .filter( c -> Encryption.TLS.equals( c.encryptionLevel() ) )\n-                .findFirst();\n-        httpsListenAddress = httpsConnector.map( connector -> config.get( connector.listen_address ) );\n-        httpsAdvertisedAddress = httpsConnector.map( connector -> config.get( connector.advertised_address ) );\n+  private static final long MINIMUM_TIMEOUT = 1000L;\n+  /**\n+   * We add a second to the timeout if the user configures a 1-second timeout.\n+   * <p>\n+   * This ensures the expiry time displayed to the user is always at least 1 second, even after it is rounded down.\n+   */\n+  private static final long ROUNDING_SECOND = 1000L;\n+\n+  private static final Pattern[] DEFAULT_URI_WHITELIST = new Pattern[] {\n+      Pattern.compile(\"/browser.*\"),\n+      Pattern.compile(\"/\")\n+  };\n+  public static final String NEO4J_IS_STARTING_MESSAGE = \"======== Neo4j \" + Version.getNeo4jVersion() + \" ========\";\n+\n+  private final Database.Factory dbFactory;\n+  private final GraphDatabaseFacadeFactory.Dependencies dependencies;\n+  protected final LogProvider logProvider;\n+  protected final Log log;\n+\n+  private final List<ServerModule> serverModules = new ArrayList<>();\n+  private final SimpleUriBuilder uriBuilder = new SimpleUriBuilder();\n+  private final Config config;\n+  private final LifeSupport life = new LifeSupport();\n+  private final ListenSocketAddress httpListenAddress;\n+  private final Optional<ListenSocketAddress> httpsListenAddress;\n+  private AdvertisedSocketAddress httpAdvertisedAddress;\n+  private Optional<AdvertisedSocketAddress> httpsAdvertisedAddress;\n+\n+  protected Database database;\n+  protected CypherExecutor cypherExecutor;\n+  protected WebServer webServer;\n+  protected Supplier<AuthManager> authManagerSupplier;\n+  protected Supplier<UserManagerSupplier> userManagerSupplier;\n+  protected Supplier<SslPolicyLoader> sslPolicyFactorySupplier;\n+  private DatabaseActions databaseActions;\n+  private TransactionFacade transactionFacade;\n+\n+  private TransactionHandleRegistry transactionRegistry;\n+  private boolean initialized;\n+  private LifecycleAdapter serverComponents;\n+  protected ConnectorPortRegister connectorPortRegister;\n+  private HttpConnector httpConnector;\n+  private Optional<HttpConnector> httpsConnector;\n+\n+  protected abstract Iterable<ServerModule> createServerModules();\n+\n+  protected abstract WebServer createWebServer();\n+\n+  public AbstractNeoServer(Config config, Database.Factory dbFactory,\n+                           GraphDatabaseFacadeFactory.Dependencies dependencies, LogProvider logProvider)\n+  {\n+    this.config = config;\n+    this.dbFactory = dbFactory;\n+    this.dependencies = dependencies;\n+    this.logProvider = logProvider;\n+    this.log = logProvider.getLog(getClass());\n+    log.info(NEO4J_IS_STARTING_MESSAGE);\n+\n+    List<HttpConnector> httpConnectors = config.enabledHttpConnectors();\n+\n+    httpConnector = httpConnectors.stream()\n+        .filter(c -> Encryption.NONE.equals(c.encryptionLevel()))\n+        .findFirst().orElseThrow(() ->\n+            new IllegalArgumentException(\"An HTTP connector must be configured to run the server\"));\n+\n+    httpListenAddress = config.get(httpConnector.listen_address);\n+    httpAdvertisedAddress = config.get(httpConnector.advertised_address);\n+\n+    httpsConnector = httpConnectors.stream()\n+        .filter(c -> Encryption.TLS.equals(c.encryptionLevel()))\n+        .findFirst();\n+    httpsListenAddress = httpsConnector.map(connector -> config.get(connector.listen_address));\n+    httpsAdvertisedAddress = httpsConnector.map(connector -> config.get(connector.advertised_address));\n+  }\n+\n+  @Override\n+  public void init()\n+  {\n+    if (initialized)\n+    {\n+      return;\n     }\n \n-    @Override\n-    public void init()\n-    {\n-        if ( initialized )\n-        {\n-            return;\n-        }\n-\n-        this.database =\n-                life.add( dependencyResolver.satisfyDependency( dbFactory.newDatabase( config, dependencies ) ) );\n+    this.database =\n+        life.add(dependencyResolver.satisfyDependency(dbFactory.newDatabase(config, dependencies)));\n \n-        this.authManagerSupplier = dependencyResolver.provideDependency( AuthManager.class );\n-        this.userManagerSupplier = dependencyResolver.provideDependency( UserManagerSupplier.class );\n-        this.sslPolicyFactorySupplier = dependencyResolver.provideDependency( SslPolicyLoader.class );\n-        this.webServer = createWebServer();\n+    this.authManagerSupplier = dependencyResolver.provideDependency(AuthManager.class);\n+    this.userManagerSupplier = dependencyResolver.provideDependency(UserManagerSupplier.class);\n+    this.sslPolicyFactorySupplier = dependencyResolver.provideDependency(SslPolicyLoader.class);\n+    this.webServer = createWebServer();\n \n-        for ( ServerModule moduleClass : createServerModules() )\n-        {\n-            registerModule( moduleClass );\n-        }\n-\n-        serverComponents = new ServerComponentsLifecycleAdapter();\n-        life.add( serverComponents );\n-\n-        this.initialized = true;\n-    }\n-\n-    @Override\n-    public void start() throws ServerStartupException\n+    for (ServerModule moduleClass : createServerModules())\n     {\n-        init();\n-        try\n-        {\n-            life.start();\n-\n-        }\n-        catch ( Throwable t )\n-        {\n-            // If the database has been started, attempt to cleanly shut it down to avoid unclean shutdowns.\n-            life.shutdown();\n-\n-            throw translateToServerStartupError( t );\n-        }\n+      registerModule(moduleClass);\n     }\n \n-    public DependencyResolver getDependencyResolver()\n-    {\n-        return dependencyResolver;\n-    }\n+    serverComponents = new ServerComponentsLifecycleAdapter();\n+    life.add(serverComponents);\n \n-    protected DatabaseActions createDatabaseActions()\n-    {\n-        return new DatabaseActions(\n-                new LeaseManager( Clocks.systemClock() ),\n-                ScriptExecutionMode.getConfiguredMode( config ), database.getGraph() );\n-    }\n+    this.initialized = true;\n+  }\n \n-    private TransactionFacade createTransactionalActions()\n+  @Override\n+  public void start() throws ServerStartupException\n+  {\n+    init();\n+    try\n     {\n-        final long timeoutMillis = getTransactionTimeoutMillis();\n-        final Clock clock = Clocks.systemClock();\n-\n-        transactionRegistry =\n-                new TransactionHandleRegistry( clock, timeoutMillis, logProvider );\n-\n-        // ensure that this is > 0\n-        long runEvery = round( timeoutMillis / 2.0 );\n-\n-        resolveDependency( JobScheduler.class ).scheduleRecurring( serverTransactionTimeout, () ->\n-        {\n-            long maxAge = clock.millis() - timeoutMillis;\n-            transactionRegistry.rollbackSuspendedTransactionsIdleSince( maxAge );\n-        }, runEvery, MILLISECONDS );\n-\n-        DependencyResolver dependencyResolver = database.getGraph().getDependencyResolver();\n-        return new TransactionFacade(\n-                new TransitionalPeriodTransactionMessContainer( database.getGraph() ),\n-                dependencyResolver.resolveDependency( QueryExecutionEngine.class ),\n-                dependencyResolver.resolveDependency( GraphDatabaseQueryService.class ), transactionRegistry,\n-                logProvider\n-        );\n-    }\n+      life.start();\n \n-    /**\n-     * We are going to ensure the minimum timeout is 2 seconds. The timeout value is communicated to the user in\n-     * seconds rounded down, meaning if a user set a 1 second timeout, he would be told there was less than 1 second\n-     * remaining before he would need to renew the timeout.\n-     */\n-    private long getTransactionTimeoutMillis()\n+    } catch (Throwable t)\n     {\n-        final long timeout = config.get( ServerSettings.transaction_idle_timeout ).toMillis();\n-        return Math.max( timeout, MINIMUM_TIMEOUT + ROUNDING_SECOND );\n-    }\n+      // If the database has been started, attempt to cleanly shut it down to avoid unclean shutdowns.\n+      life.shutdown();\n \n-    /**\n-     * Use this method to register server modules from subclasses\n-     */\n-    protected final void registerModule( ServerModule module )\n-    {\n-        serverModules.add( module );\n+      throw translateToServerStartupError(t);\n     }\n-\n-    private void startModules()\n-    {\n-        for ( ServerModule module : serverModules )\n-        {\n-            module.start();\n-        }\n+  }\n+\n+  public DependencyResolver getDependencyResolver()\n+  {\n+    return dependencyResolver;\n+  }\n+\n+  protected DatabaseActions createDatabaseActions()\n+  {\n+    return new DatabaseActions(\n+        new LeaseManager(Clocks.systemClock()),\n+        ScriptExecutionMode.getConfiguredMode(config), database.getGraph());\n+  }\n+\n+  private TransactionFacade createTransactionalActions()\n+  {\n+    final long timeoutMillis = getTransactionTimeoutMillis();\n+    final Clock clock = Clocks.systemClock();\n+\n+    transactionRegistry =\n+        new TransactionHandleRegistry(clock, timeoutMillis, logProvider);\n+\n+    // ensure that this is > 0\n+    long runEvery = round(timeoutMillis / 2.0);\n+\n+    resolveDependency(JobScheduler.class).scheduleRecurring(serverTransactionTimeout, () ->\n+    {\n+      long maxAge = clock.millis() - timeoutMillis;\n+      transactionRegistry.rollbackSuspendedTransactionsIdleSince(maxAge);\n+    }, runEvery, MILLISECONDS);\n+\n+    DependencyResolver dependencyResolver = database.getGraph().getDependencyResolver();\n+    return new TransactionFacade(\n+        new TransitionalPeriodTransactionMessContainer(database.getGraph()),\n+        dependencyResolver.resolveDependency(QueryExecutionEngine.class),\n+        dependencyResolver.resolveDependency(GraphDatabaseQueryService.class), transactionRegistry,\n+        logProvider\n+    );\n+  }\n+\n+  /**\n+   * We are going to ensure the minimum timeout is 2 seconds. The timeout value is communicated to the user in\n+   * seconds rounded down, meaning if a user set a 1 second timeout, he would be told there was less than 1 second\n+   * remaining before he would need to renew the timeout.\n+   */\n+  private long getTransactionTimeoutMillis()\n+  {\n+    final long timeout = config.get(ServerSettings.transaction_idle_timeout).toMillis();\n+    return Math.max(timeout, MINIMUM_TIMEOUT + ROUNDING_SECOND);\n+  }\n+\n+  /**\n+   * Use this method to register server modules from subclasses\n+   */\n+  protected final void registerModule(ServerModule module)\n+  {\n+    serverModules.add(module);\n+  }\n+\n+  private void startModules()\n+  {\n+    for (ServerModule module : serverModules)\n+    {\n+      module.start();\n     }\n-\n-    private void stopModules()\n-    {\n-        new RunCarefully( map( module -> module::stop, serverModules ) ).run();\n+  }\n+\n+  private void stopModules()\n+  {\n+    new RunCarefully(map(module -> module::stop, serverModules)).run();\n+  }\n+\n+  @Override\n+  public Config getConfig()\n+  {\n+    return config;\n+  }\n+\n+  private void configureWebServer()\n+  {\n+    webServer.setAddress(httpListenAddress);\n+    webServer.setHttpsAddress(httpsListenAddress);\n+    webServer.setMaxThreads(config.get(ServerSettings.webserver_max_threads));\n+    webServer.setWadlEnabled(config.get(ServerSettings.wadl_enabled));\n+    webServer.setDefaultInjectables(createDefaultInjectables());\n+\n+    String sslPolicyName = config.get(ServerSettings.ssl_policy);\n+    if (sslPolicyName != null)\n+    {\n+      SslPolicy sslPolicy = sslPolicyFactorySupplier.get().getPolicy(sslPolicyName);\n+      webServer.setSslPolicy(sslPolicy);\n     }\n-\n-    @Override\n-    public Config getConfig()\n-    {\n-        return config;\n+  }\n+\n+  private void startWebServer() throws Exception\n+  {\n+    try\n+    {\n+      setUpHttpLogging();\n+      webServer.start();\n+      InetSocketAddress localHttpAddress = webServer.getLocalHttpAddress();\n+      connectorPortRegister.register(httpConnector.key(), localHttpAddress);\n+      httpsConnector.ifPresent(connector -> connectorPortRegister.register(connector.key(), webServer\n+          .getLocalHttpsAddress()));\n+      checkHttpAdvertisedAddress(localHttpAddress);\n+      checkHttpsAdvertisedAddress();\n+      log.info(\"Remote interface available at %s\", baseUri());\n+    } catch (Exception e)\n+    {\n+      log.error(\"Failed to start Neo4j on %s: %s\", getAddress(), e.getMessage());\n+      throw e;\n     }\n-\n-    private void configureWebServer()\n-    {\n-        webServer.setAddress( httpListenAddress );\n-        webServer.setHttpsAddress( httpsListenAddress );\n-        webServer.setMaxThreads( config.get( ServerSettings.webserver_max_threads ) );\n-        webServer.setWadlEnabled( config.get( ServerSettings.wadl_enabled ) );\n-        webServer.setDefaultInjectables( createDefaultInjectables() );\n-\n-        String sslPolicyName = config.get( ServerSettings.ssl_policy );\n-        if ( sslPolicyName != null )\n-        {\n-            SslPolicy sslPolicy = sslPolicyFactorySupplier.get().getPolicy( sslPolicyName );\n-            webServer.setSslPolicy( sslPolicy );\n-        }\n+  }\n+\n+  private void checkHttpsAdvertisedAddress()\n+  {\n+    httpsAdvertisedAddress.ifPresent(address ->\n+    {\n+      if (address.getPort() == 0)\n+      {\n+        InetSocketAddress localHttpsAddress = webServer.getLocalHttpsAddress();\n+        httpsAdvertisedAddress = Optional\n+            .of(new AdvertisedSocketAddress(localHttpsAddress.getHostString(), localHttpsAddress.getPort()));\n+      }\n+    });\n+  }\n+\n+  private void checkHttpAdvertisedAddress(InetSocketAddress localHttpAddress)\n+  {\n+    if (httpAdvertisedAddress.getPort() == 0)\n+    {\n+      httpAdvertisedAddress = new AdvertisedSocketAddress(localHttpAddress.getHostString(), localHttpAddress.getPort());\n     }\n+  }\n \n-    private void startWebServer() throws Exception\n+  private void setUpHttpLogging() throws IOException\n+  {\n+    if (!getConfig().get(http_logging_enabled))\n     {\n-        try\n-        {\n-            setUpHttpLogging();\n-            webServer.start();\n-            InetSocketAddress localHttpAddress = webServer.getLocalHttpAddress();\n-            connectorPortRegister.register( httpConnector.key(), localHttpAddress );\n-            httpsConnector.ifPresent( connector -> connectorPortRegister.register( connector.key(), webServer\n-                    .getLocalHttpsAddress() ) );\n-            checkHttpAdvertisedAddress( localHttpAddress );\n-            checkHttpsAdvertisedAddress();\n-            log.info( \"Remote interface available at %s\", baseUri() );\n-        }\n-        catch ( Exception e )\n-        {\n-            log.error( \"Failed to start Neo4j on %s: %s\", getAddress(), e.getMessage() );\n-            throw e;\n-        }\n+      return;\n     }\n \n-    private void checkHttpsAdvertisedAddress()\n-    {\n-        httpsAdvertisedAddress.ifPresent( address ->\n-        {\n-            if ( address.getPort() == 0 )\n-            {\n-                InetSocketAddress localHttpsAddress = webServer.getLocalHttpsAddress();\n-                httpsAdvertisedAddress = Optional\n-                        .of( new AdvertisedSocketAddress( localHttpsAddress.getHostString(), localHttpsAddress.getPort() ) );\n-            }\n-        } );\n+    AsyncRequestLog requestLog = new AsyncRequestLog(\n+        dependencyResolver.resolveDependency(FileSystemAbstraction.class),\n+        config.get(db_timezone).getZoneId(),\n+        config.get(http_log_path).toString(),\n+        config.get(http_logging_rotation_size),\n+        config.get(http_logging_rotation_keep_number));\n+    webServer.setRequestLog(requestLog);\n+  }\n+\n+  public ListenSocketAddress getAddress()\n+  {\n+    return httpListenAddress;\n+  }\n+\n+  protected boolean httpsIsEnabled()\n+  {\n+    return httpsListenAddress.isPresent();\n+  }\n+\n+  protected Pattern[] getUriWhitelist()\n+  {\n+    return DEFAULT_URI_WHITELIST;\n+  }\n+\n+  @Override\n+  public void stop()\n+  {\n+    life.stop();\n+  }\n+\n+  private void stopWebServer()\n+  {\n+    if (webServer != null)\n+    {\n+      webServer.stop();\n     }\n-\n-    private void checkHttpAdvertisedAddress( InetSocketAddress localHttpAddress )\n-    {\n-        if ( httpAdvertisedAddress.getPort() == 0 )\n-        {\n-            httpAdvertisedAddress = new AdvertisedSocketAddress( localHttpAddress.getHostString(), localHttpAddress.getPort() );\n-        }\n+  }\n+\n+  @Override\n+  public Database getDatabase()\n+  {\n+    return database;\n+  }\n+\n+  @Override\n+  public TransactionRegistry getTransactionRegistry()\n+  {\n+    return transactionRegistry;\n+  }\n+\n+  @Override\n+  public URI baseUri()\n+  {\n+    return uriBuilder.buildURI(httpAdvertisedAddress, false);\n+  }\n+\n+  public Optional<URI> httpsUri()\n+  {\n+    return httpsAdvertisedAddress.map(address -> uriBuilder.buildURI(address, true));\n+  }\n+\n+  public WebServer getWebServer()\n+  {\n+    return webServer;\n+  }\n+\n+  @Override\n+  public PluginManager getExtensionManager()\n+  {\n+    RESTApiModule module = getModule(RESTApiModule.class);\n+    if (module != null)\n+    {\n+      return module.getPlugins();\n     }\n+    return null;\n+  }\n \n-    private void setUpHttpLogging() throws IOException\n-    {\n-        if ( !getConfig().get( http_logging_enabled ) )\n-        {\n-            return;\n-        }\n-\n-        AsyncRequestLog requestLog = new AsyncRequestLog(\n-                dependencyResolver.resolveDependency( FileSystemAbstraction.class ),\n-                config.get( db_timezone ).getZoneId(),\n-                config.get( http_log_path ).toString(),\n-                config.get( http_logging_rotation_size ),\n-                config.get( http_logging_rotation_keep_number ) );\n-        webServer.setRequestLog( requestLog );\n-    }\n+  protected Collection<InjectableProvider<?>> createDefaultInjectables()\n+  {\n+    Collection<InjectableProvider<?>> singletons = new ArrayList<>();\n \n-    public ListenSocketAddress getAddress()\n-    {\n-        return httpListenAddress;\n-    }\n+    Database database = getDatabase();\n \n-    protected boolean httpsIsEnabled()\n-    {\n-        return httpsListenAddress.isPresent();\n-    }\n+    singletons.add(new DatabaseProvider(database));\n+    singletons.add(new DatabaseActions.Provider(databaseActions));\n+    singletons.add(new GraphDatabaseServiceProvider(database));\n+    singletons.add(new NeoServerProvider(this));\n+    singletons.add(providerForSingleton(new ConfigAdapter(getConfig()), Configuration.class));\n+    singletons.add(providerForSingleton(getConfig(), Config.class));\n \n-    protected Pattern[] getUriWhitelist()\n-    {\n-        return DEFAULT_URI_WHITELIST;\n-    }\n+    singletons.add(new WebServerProvider(getWebServer()));\n \n-    @Override\n-    public void stop()\n-    {\n-        life.stop();\n-    }\n+    PluginInvocatorProvider pluginInvocatorProvider = new PluginInvocatorProvider(this);\n+    singletons.add(pluginInvocatorProvider);\n+    RepresentationFormatRepository repository = new RepresentationFormatRepository(this);\n \n-    private void stopWebServer()\n-    {\n-        if ( webServer != null )\n-        {\n-            webServer.stop();\n-        }\n-    }\n+    singletons.add(new InputFormatProvider(repository));\n+    singletons.add(new OutputFormatProvider(repository));\n+    singletons.add(new CypherExecutorProvider(cypherExecutor));\n \n-    @Override\n-    public Database getDatabase()\n-    {\n-        return database;\n-    }\n+    singletons.add(providerForSingleton(transactionFacade, TransactionFacade.class));\n+    singletons.add(providerFromSupplier(authManagerSupplier, AuthManager.class));\n+    singletons.add(providerFromSupplier(userManagerSupplier, UserManagerSupplier.class));\n+    singletons.add(new TransactionFilter(database));\n+    singletons.add(new LoggingProvider(logProvider));\n+    singletons.add(providerForSingleton(logProvider.getLog(NeoServer.class), Log.class));\n \n-    @Override\n-    public TransactionRegistry getTransactionRegistry()\n-    {\n-        return transactionRegistry;\n-    }\n+    singletons.add(providerForSingleton(resolveDependency(UsageData.class), UsageData.class));\n \n-    @Override\n-    public URI baseUri()\n-    {\n-        return uriBuilder.buildURI( httpAdvertisedAddress, false );\n-    }\n+    return singletons;\n+  }\n \n-    public Optional<URI> httpsUri()\n+  @SuppressWarnings(\"unchecked\")\n+  private <T extends ServerModule> T getModule(Class<T> clazz)\n+  {\n+    for (ServerModule sm : serverModules)\n     {\n-        return httpsAdvertisedAddress.map( address -> uriBuilder.buildURI( address, true ) );\n+      if (sm.getClass() == clazz)\n+      {\n+        return (T) sm;\n+      }\n     }\n \n-    public WebServer getWebServer()\n-    {\n-        return webServer;\n-    }\n+    return null;\n+  }\n \n+  protected <T> T resolveDependency(Class<T> type)\n+  {\n+    return dependencyResolver.resolveDependency(type);\n+  }\n+\n+  private final Dependencies dependencyResolver = new Dependencies(new Supplier<DependencyResolver>()\n+  {\n     @Override\n-    public PluginManager getExtensionManager()\n+    public DependencyResolver get()\n     {\n-        RESTApiModule module = getModule( RESTApiModule.class );\n-        if ( module != null )\n-        {\n-            return module.getPlugins();\n-        }\n-        return null;\n+      Database db = dependencyResolver.resolveDependency(Database.class);\n+      return db.getGraph().getDependencyResolver();\n     }\n+  });\n \n-    protected Collection<InjectableProvider<?>> createDefaultInjectables()\n+  private class ServerComponentsLifecycleAdapter extends LifecycleAdapter\n+  {\n+    @Override\n+    public void start() throws Throwable\n     {\n-        Collection<InjectableProvider<?>> singletons = new ArrayList<>();\n+      DiagnosticsManager diagnosticsManager = resolveDependency(DiagnosticsManager.class);\n+      Log diagnosticsLog = diagnosticsManager.getTargetLog();\n+      diagnosticsLog.info(\"--- SERVER STARTED START ---\");\n+      connectorPortRegister = dependencyResolver.resolveDependency(ConnectorPortRegister.class);\n+      databaseActions = createDatabaseActions();\n \n-        Database database = getDatabase();\n+      transactionFacade = createTransactionalActions();\n \n-        singletons.add( new DatabaseProvider( database ) );\n-        singletons.add( new DatabaseActions.Provider( databaseActions ) );\n-        singletons.add( new GraphDatabaseServiceProvider( database ) );\n-        singletons.add( new NeoServerProvider( this ) );\n-        singletons.add( providerForSingleton( new ConfigAdapter( getConfig() ), Configuration.class ) );\n-        singletons.add( providerForSingleton( getConfig(), Config.class ) );\n+      cypherExecutor = new CypherExecutor(database, logProvider);\n \n-        singletons.add( new WebServerProvider( getWebServer() ) );\n+      configureWebServer();\n \n-        PluginInvocatorProvider pluginInvocatorProvider = new PluginInvocatorProvider( this );\n-        singletons.add( pluginInvocatorProvider );\n-        RepresentationFormatRepository repository = new RepresentationFormatRepository( this );\n+      cypherExecutor.start();\n \n-        singletons.add( new InputFormatProvider( repository ) );\n-        singletons.add( new OutputFormatProvider( repository ) );\n-        singletons.add( new CypherExecutorProvider( cypherExecutor ) );\n+      startModules();\n \n-        singletons.add( providerForSingleton( transactionFacade, TransactionFacade.class ) );\n-        singletons.add( providerFromSupplier( authManagerSupplier, AuthManager.class ) );\n-        singletons.add( providerFromSupplier( userManagerSupplier, UserManagerSupplier.class ) );\n-        singletons.add( new TransactionFilter( database ) );\n-        singletons.add( new LoggingProvider( logProvider ) );\n-        singletons.add( providerForSingleton( logProvider.getLog( NeoServer.class ), Log.class ) );\n+      startWebServer();\n \n-        singletons.add( providerForSingleton( resolveDependency( UsageData.class ), UsageData.class ) );\n-\n-        return singletons;\n+      diagnosticsLog.info(\"--- SERVER STARTED END ---\");\n     }\n \n-    @SuppressWarnings( \"unchecked\" )\n-    private <T extends ServerModule> T getModule( Class<T> clazz )\n-    {\n-        for ( ServerModule sm : serverModules )\n-        {\n-            if ( sm.getClass() == clazz )\n-            {\n-                return (T) sm;\n-            }\n-        }\n-\n-        return null;\n-    }\n-\n-    protected <T> T resolveDependency( Class<T> type )\n-    {\n-        return dependencyResolver.resolveDependency( type );\n-    }\n-\n-    private final Dependencies dependencyResolver = new Dependencies( new Supplier<DependencyResolver>()\n-    {\n-        @Override\n-        public DependencyResolver get()\n-        {\n-            Database db = dependencyResolver.resolveDependency( Database.class );\n-            return db.getGraph().getDependencyResolver();\n-        }\n-    } );\n-\n-    private class ServerComponentsLifecycleAdapter extends LifecycleAdapter\n+    @Override\n+    public void stop()\n     {\n-        @Override\n-        public void start() throws Throwable\n-        {\n-            DiagnosticsManager diagnosticsManager = resolveDependency( DiagnosticsManager.class );\n-            Log diagnosticsLog = diagnosticsManager.getTargetLog();\n-            diagnosticsLog.info( \"--- SERVER STARTED START ---\" );\n-            connectorPortRegister = dependencyResolver.resolveDependency( ConnectorPortRegister.class );\n-            databaseActions = createDatabaseActions();\n-\n-            transactionFacade = createTransactionalActions();\n-\n-            cypherExecutor = new CypherExecutor( database, logProvider );\n-\n-            configureWebServer();\n-\n-            cypherExecutor.start();\n-\n-            startModules();\n-\n-            startWebServer();\n-\n-            diagnosticsLog.info( \"--- SERVER STARTED END ---\" );\n-        }\n-\n-        @Override\n-        public void stop()\n-        {\n-            stopWebServer();\n-            stopModules();\n-        }\n+      stopWebServer();\n+      stopModules();\n     }\n+  }\n }\n",
            "diff_size": 576
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "162",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 231).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "235",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 270).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "339",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 298).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1445/AbstractNeoServer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1445/AbstractNeoServer.java\nindex a8d594a4575..55fda8011ff 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1445/AbstractNeoServer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1445/AbstractNeoServer.java\n@@ -102,20 +102,18 @@ import static org.neo4j.server.exception.ServerStartupErrors.translateToServerSt\n public abstract class AbstractNeoServer implements NeoServer\n {\n     private static final long MINIMUM_TIMEOUT = 1000L;\n-    /**\n+\n+/**\n      * We add a second to the timeout if the user configures a 1-second timeout.\n      * <p>\n      * This ensures the expiry time displayed to the user is always at least 1 second, even after it is rounded down.\n      */\n     private static final long ROUNDING_SECOND = 1000L;\n \n-    private static final Pattern[] DEFAULT_URI_WHITELIST = new Pattern[]{\n-            Pattern.compile( \"/browser.*\" ),\n-            Pattern.compile( \"/\" )\n-    };\n-    public static final String NEO4J_IS_STARTING_MESSAGE = \"======== Neo4j \" + Version.getNeo4jVersion() + \" ========\";\n+    private static final Pattern[] DEFAULT_URI_WHITELIST = new Pattern[]{Pattern.compile( \"/browser.*\" ), Pattern.compile( \"/\" )};\n \n-    private final Database.Factory dbFactory;\n+public static final String NEO4J_IS_STARTING_MESSAGE = \"======== Neo4j \" + Version.getNeo4jVersion() + \" ========\";\n+private final Database.Factory dbFactory;\n     private final GraphDatabaseFacadeFactory.Dependencies dependencies;\n     protected final LogProvider logProvider;\n     protected final Log log;\n@@ -161,18 +159,11 @@ public abstract class AbstractNeoServer implements NeoServer\n \n         List<HttpConnector> httpConnectors = config.enabledHttpConnectors();\n \n-        httpConnector = httpConnectors.stream()\n-                .filter( c -> Encryption.NONE.equals( c.encryptionLevel() ) )\n-                .findFirst().orElseThrow( () ->\n-                        new IllegalArgumentException( \"An HTTP connector must be configured to run the server\" ) );\n-\n-        httpListenAddress = config.get( httpConnector.listen_address );\n+        httpConnector = httpConnectors.stream().filter( c -> Encryption.NONE.equals( c.encryptionLevel() ) ).findFirst().orElseThrow( () -> new IllegalArgumentException( \"An HTTP connector must be configured to run the server\" ) );\n+httpListenAddress = config.get( httpConnector.listen_address );\n         httpAdvertisedAddress = config.get( httpConnector.advertised_address );\n-\n-        httpsConnector = httpConnectors.stream()\n-                .filter( c -> Encryption.TLS.equals( c.encryptionLevel() ) )\n-                .findFirst();\n-        httpsListenAddress = httpsConnector.map( connector -> config.get( connector.listen_address ) );\n+httpsConnector = httpConnectors.stream().filter( c -> Encryption.TLS.equals( c.encryptionLevel() ) ).findFirst();\n+httpsListenAddress = httpsConnector.map( connector -> config.get( connector.listen_address ) );\n         httpsAdvertisedAddress = httpsConnector.map( connector -> config.get( connector.advertised_address ) );\n     }\n \n@@ -184,23 +175,19 @@ public abstract class AbstractNeoServer implements NeoServer\n             return;\n         }\n \n-        this.database =\n-                life.add( dependencyResolver.satisfyDependency( dbFactory.newDatabase( config, dependencies ) ) );\n-\n-        this.authManagerSupplier = dependencyResolver.provideDependency( AuthManager.class );\n+        this.database = life.add( dependencyResolver.satisfyDependency( dbFactory.newDatabase( config, dependencies ) ) );\n+this.authManagerSupplier = dependencyResolver.provideDependency( AuthManager.class );\n         this.userManagerSupplier = dependencyResolver.provideDependency( UserManagerSupplier.class );\n         this.sslPolicyFactorySupplier = dependencyResolver.provideDependency( SslPolicyLoader.class );\n         this.webServer = createWebServer();\n-\n-        for ( ServerModule moduleClass : createServerModules() )\n+for ( ServerModule moduleClass : createServerModules() )\n         {\n             registerModule( moduleClass );\n         }\n \n         serverComponents = new ServerComponentsLifecycleAdapter();\n         life.add( serverComponents );\n-\n-        this.initialized = true;\n+this.initialized = true;\n     }\n \n     @Override\n@@ -210,8 +197,7 @@ public abstract class AbstractNeoServer implements NeoServer\n         try\n         {\n             life.start();\n-\n-        }\n+    }\n         catch ( Throwable t )\n         {\n             // If the database has been started, attempt to cleanly shut it down to avoid unclean shutdowns.\n@@ -228,9 +214,7 @@ public abstract class AbstractNeoServer implements NeoServer\n \n     protected DatabaseActions createDatabaseActions()\n     {\n-        return new DatabaseActions(\n-                new LeaseManager( Clocks.systemClock() ),\n-                ScriptExecutionMode.getConfiguredMode( config ), database.getGraph() );\n+        return new DatabaseActions( new LeaseManager( Clocks.systemClock() ), ScriptExecutionMode.getConfiguredMode( config ), database.getGraph() );\n     }\n \n     private TransactionFacade createTransactionalActions()\n@@ -238,10 +222,8 @@ public abstract class AbstractNeoServer implements NeoServer\n         final long timeoutMillis = getTransactionTimeoutMillis();\n         final Clock clock = Clocks.systemClock();\n \n-        transactionRegistry =\n-                new TransactionHandleRegistry( clock, timeoutMillis, logProvider );\n-\n-        // ensure that this is > 0\n+        transactionRegistry = new TransactionHandleRegistry( clock, timeoutMillis, logProvider );\n+    // ensure that this is > 0\n         long runEvery = round( timeoutMillis / 2.0 );\n \n         resolveDependency( JobScheduler.class ).scheduleRecurring( serverTransactionTimeout, () ->\n@@ -249,14 +231,9 @@ public abstract class AbstractNeoServer implements NeoServer\n             long maxAge = clock.millis() - timeoutMillis;\n             transactionRegistry.rollbackSuspendedTransactionsIdleSince( maxAge );\n         }, runEvery, MILLISECONDS );\n-\n-        DependencyResolver dependencyResolver = database.getGraph().getDependencyResolver();\n-        return new TransactionFacade(\n-                new TransitionalPeriodTransactionMessContainer( database.getGraph() ),\n-                dependencyResolver.resolveDependency( QueryExecutionEngine.class ),\n-                dependencyResolver.resolveDependency( GraphDatabaseQueryService.class ), transactionRegistry,\n-                logProvider\n-        );\n+DependencyResolver dependencyResolver = database.getGraph().getDependencyResolver();\n+        return new TransactionFacade( new TransitionalPeriodTransactionMessContainer( database.getGraph() ), dependencyResolver.resolveDependency( QueryExecutionEngine.class ), dependencyResolver.resolveDependency( GraphDatabaseQueryService.class ), transactionRegistry,\n+                logProvider );\n     }\n \n     /**\n@@ -304,8 +281,7 @@ public abstract class AbstractNeoServer implements NeoServer\n         webServer.setMaxThreads( config.get( ServerSettings.webserver_max_threads ) );\n         webServer.setWadlEnabled( config.get( ServerSettings.wadl_enabled ) );\n         webServer.setDefaultInjectables( createDefaultInjectables() );\n-\n-        String sslPolicyName = config.get( ServerSettings.ssl_policy );\n+String sslPolicyName = config.get( ServerSettings.ssl_policy );\n         if ( sslPolicyName != null )\n         {\n             SslPolicy sslPolicy = sslPolicyFactorySupplier.get().getPolicy( sslPolicyName );\n@@ -321,9 +297,8 @@ public abstract class AbstractNeoServer implements NeoServer\n             webServer.start();\n             InetSocketAddress localHttpAddress = webServer.getLocalHttpAddress();\n             connectorPortRegister.register( httpConnector.key(), localHttpAddress );\n-            httpsConnector.ifPresent( connector -> connectorPortRegister.register( connector.key(), webServer\n-                    .getLocalHttpsAddress() ) );\n-            checkHttpAdvertisedAddress( localHttpAddress );\n+            httpsConnector.ifPresent( connector -> connectorPortRegister.register( connector.key(), webServer.getLocalHttpsAddress() ) );\n+checkHttpAdvertisedAddress( localHttpAddress );\n             checkHttpsAdvertisedAddress();\n             log.info( \"Remote interface available at %s\", baseUri() );\n         }\n@@ -341,9 +316,8 @@ public abstract class AbstractNeoServer implements NeoServer\n             if ( address.getPort() == 0 )\n             {\n                 InetSocketAddress localHttpsAddress = webServer.getLocalHttpsAddress();\n-                httpsAdvertisedAddress = Optional\n-                        .of( new AdvertisedSocketAddress( localHttpsAddress.getHostString(), localHttpsAddress.getPort() ) );\n-            }\n+                httpsAdvertisedAddress = Optional.of( new AdvertisedSocketAddress( localHttpsAddress.getHostString(), localHttpsAddress.getPort() ) );\n+    }\n         } );\n     }\n \n@@ -362,13 +336,8 @@ public abstract class AbstractNeoServer implements NeoServer\n             return;\n         }\n \n-        AsyncRequestLog requestLog = new AsyncRequestLog(\n-                dependencyResolver.resolveDependency( FileSystemAbstraction.class ),\n-                config.get( db_timezone ).getZoneId(),\n-                config.get( http_log_path ).toString(),\n-                config.get( http_logging_rotation_size ),\n-                config.get( http_logging_rotation_keep_number ) );\n-        webServer.setRequestLog( requestLog );\n+        AsyncRequestLog requestLog = new AsyncRequestLog( dependencyResolver.resolveDependency( FileSystemAbstraction.class ), config.get( db_timezone ).getZoneId(), config.get( http_log_path ).toString(), config.get( http_logging_rotation_size ), config.get( http_logging_rotation_keep_number ) );\n+webServer.setRequestLog( requestLog );\n     }\n \n     public ListenSocketAddress getAddress()\n@@ -442,36 +411,28 @@ public abstract class AbstractNeoServer implements NeoServer\n     protected Collection<InjectableProvider<?>> createDefaultInjectables()\n     {\n         Collection<InjectableProvider<?>> singletons = new ArrayList<>();\n-\n-        Database database = getDatabase();\n-\n-        singletons.add( new DatabaseProvider( database ) );\n+Database database = getDatabase();\n+singletons.add( new DatabaseProvider( database ) );\n         singletons.add( new DatabaseActions.Provider( databaseActions ) );\n         singletons.add( new GraphDatabaseServiceProvider( database ) );\n         singletons.add( new NeoServerProvider( this ) );\n         singletons.add( providerForSingleton( new ConfigAdapter( getConfig() ), Configuration.class ) );\n         singletons.add( providerForSingleton( getConfig(), Config.class ) );\n-\n-        singletons.add( new WebServerProvider( getWebServer() ) );\n-\n-        PluginInvocatorProvider pluginInvocatorProvider = new PluginInvocatorProvider( this );\n+singletons.add( new WebServerProvider( getWebServer() ) );\n+PluginInvocatorProvider pluginInvocatorProvider = new PluginInvocatorProvider( this );\n         singletons.add( pluginInvocatorProvider );\n         RepresentationFormatRepository repository = new RepresentationFormatRepository( this );\n-\n-        singletons.add( new InputFormatProvider( repository ) );\n+singletons.add( new InputFormatProvider( repository ) );\n         singletons.add( new OutputFormatProvider( repository ) );\n         singletons.add( new CypherExecutorProvider( cypherExecutor ) );\n-\n-        singletons.add( providerForSingleton( transactionFacade, TransactionFacade.class ) );\n+singletons.add( providerForSingleton( transactionFacade, TransactionFacade.class ) );\n         singletons.add( providerFromSupplier( authManagerSupplier, AuthManager.class ) );\n         singletons.add( providerFromSupplier( userManagerSupplier, UserManagerSupplier.class ) );\n         singletons.add( new TransactionFilter( database ) );\n         singletons.add( new LoggingProvider( logProvider ) );\n         singletons.add( providerForSingleton( logProvider.getLog( NeoServer.class ), Log.class ) );\n-\n-        singletons.add( providerForSingleton( resolveDependency( UsageData.class ), UsageData.class ) );\n-\n-        return singletons;\n+singletons.add( providerForSingleton( resolveDependency( UsageData.class ), UsageData.class ) );\n+return singletons;\n     }\n \n     @SuppressWarnings( \"unchecked\" )\n@@ -519,14 +480,12 @@ public abstract class AbstractNeoServer implements NeoServer\n             cypherExecutor = new CypherExecutor( database, logProvider );\n \n             configureWebServer();\n-\n-            cypherExecutor.start();\n+cypherExecutor.start();\n \n             startModules();\n \n             startWebServer();\n-\n-            diagnosticsLog.info( \"--- SERVER STARTED END ---\" );\n+diagnosticsLog.info( \"--- SERVER STARTED END ---\" );\n         }\n \n         @Override\n@@ -536,4 +495,4 @@ public abstract class AbstractNeoServer implements NeoServer\n             stopModules();\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 81
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
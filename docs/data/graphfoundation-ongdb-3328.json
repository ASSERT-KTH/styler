{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3328",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "49",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3328/GlobalMemoryTracker.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3328/GlobalMemoryTracker.java\nindex 6513c61e2d7..d4179ceafe8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3328/GlobalMemoryTracker.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3328/GlobalMemoryTracker.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.memory;\n \n import java.util.concurrent.atomic.LongAdder;\n@@ -24,34 +25,35 @@ import java.util.concurrent.atomic.LongAdder;\n /**\n  * Global memory tracker that can be used in a global multi threaded context to record\n  * allocation and de-allocation of native memory.\n+ *\n  * @see org.neo4j.memory.MemoryAllocationTracker\n  * @see MemoryTracker\n  */\n public class GlobalMemoryTracker implements MemoryAllocationTracker\n {\n-    public static final GlobalMemoryTracker INSTANCE = new GlobalMemoryTracker();\n-\n-    private final LongAdder allocatedBytes = new LongAdder();\n-\n-    private GlobalMemoryTracker()\n-    {\n-    }\n-\n-    @Override\n-    public long usedDirectMemory()\n-    {\n-        return allocatedBytes.sum();\n-    }\n-\n-    @Override\n-    public void allocated( long bytes )\n-    {\n-        allocatedBytes.add( bytes );\n-    }\n-\n-    @Override\n-    public void deallocated( long bytes )\n-    {\n-        allocatedBytes.add( -bytes );\n-    }\n+  public static final GlobalMemoryTracker INSTANCE = new GlobalMemoryTracker();\n+\n+  private final LongAdder allocatedBytes = new LongAdder();\n+\n+  private GlobalMemoryTracker()\n+  {\n+  }\n+\n+  @Override\n+  public long usedDirectMemory()\n+  {\n+    return allocatedBytes.sum();\n+  }\n+\n+  @Override\n+  public void allocated(long bytes)\n+  {\n+    allocatedBytes.add(bytes);\n+  }\n+\n+  @Override\n+  public void deallocated(long bytes)\n+  {\n+    allocatedBytes.add(-bytes);\n+  }\n }\n",
            "diff_size": 27
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3328/GlobalMemoryTracker.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3328/GlobalMemoryTracker.java\nindex 6513c61e2d7..aae1c4a3255 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3328/GlobalMemoryTracker.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3328/GlobalMemoryTracker.java\n@@ -54,4 +54,4 @@ public class GlobalMemoryTracker implements MemoryAllocationTracker\n     {\n         allocatedBytes.add( -bytes );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2948",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "44",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "60",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "106",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "107",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "11",
                    "severity": "error",
                    "message": "'}' at column 11 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "88",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "88",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2948/OnlineIndexSamplingJob.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2948/OnlineIndexSamplingJob.java\nindex fdcf5040273..278ffcf6906 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2948/OnlineIndexSamplingJob.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2948/OnlineIndexSamplingJob.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.api.index.sampling;\n \n import org.neo4j.kernel.api.exceptions.index.IndexNotFoundKernelException;\n@@ -34,64 +35,62 @@ import static org.neo4j.internal.kernel.api.InternalIndexState.ONLINE;\n \n class OnlineIndexSamplingJob implements IndexSamplingJob\n {\n-    private final long indexId;\n-    private final IndexProxy indexProxy;\n-    private final IndexStoreView storeView;\n-    private final Log log;\n-    private final String indexUserDescription;\n+  private final long indexId;\n+  private final IndexProxy indexProxy;\n+  private final IndexStoreView storeView;\n+  private final Log log;\n+  private final String indexUserDescription;\n \n-    OnlineIndexSamplingJob( long indexId, IndexProxy indexProxy, IndexStoreView storeView, String indexUserDescription,\n-            LogProvider logProvider )\n-    {\n-        this.indexId = indexId;\n-        this.indexProxy = indexProxy;\n-        this.storeView = storeView;\n-        this.log = logProvider.getLog( getClass() );\n-        this.indexUserDescription = indexUserDescription;\n-    }\n+  OnlineIndexSamplingJob(long indexId, IndexProxy indexProxy, IndexStoreView storeView, String indexUserDescription,\n+                         LogProvider logProvider)\n+  {\n+    this.indexId = indexId;\n+    this.indexProxy = indexProxy;\n+    this.storeView = storeView;\n+    this.log = logProvider.getLog(getClass());\n+    this.indexUserDescription = indexUserDescription;\n+  }\n \n-    @Override\n-    public long indexId()\n-    {\n-        return indexId;\n-    }\n+  @Override\n+  public long indexId()\n+  {\n+    return indexId;\n+  }\n \n-    @Override\n-    public void run()\n+  @Override\n+  public void run()\n+  {\n+    try (DurationLogger durationLogger = new DurationLogger(log, \"Sampling index \" + indexUserDescription))\n     {\n-        try ( DurationLogger durationLogger = new DurationLogger( log, \"Sampling index \" + indexUserDescription ) )\n+      try\n+      {\n+        try (IndexReader reader = indexProxy.newReader();\n+             IndexSampler sampler = reader.createSampler())\n         {\n-            try\n-            {\n-                try ( IndexReader reader = indexProxy.newReader();\n-                      IndexSampler sampler = reader.createSampler() )\n-                {\n-                    IndexSample sample = sampler.sampleIndex();\n+          IndexSample sample = sampler.sampleIndex();\n \n-                    // check again if the index is online before saving the counts in the store\n-                    if ( indexProxy.getState() == ONLINE )\n-                    {\n-                        storeView.replaceIndexCounts( indexId, sample.uniqueValues(), sample.sampleSize(),\n-                                sample.indexSize() );\n-                        durationLogger.markAsFinished();\n-                        log.debug(\n-                                format( \"Sampled index %s with %d unique values in sample of avg size %d taken from \" +\n-                                        \"index containing %d entries\",\n-                                        indexUserDescription, sample.uniqueValues(), sample.sampleSize(),\n-                                        sample.indexSize() ) );\n-                    }\n-                    else\n-                    {\n-                        durationLogger.markAsAborted( \"Index no longer ONLINE\" );\n-                    }\n-                }\n-            }\n-            catch ( IndexNotFoundKernelException e )\n-            {\n-                durationLogger.markAsAborted(\n-                        \"Attempted to sample missing/already deleted index \" + indexUserDescription );\n-            }\n+          // check again if the index is online before saving the counts in the store\n+          if (indexProxy.getState() == ONLINE)\n+          {\n+            storeView.replaceIndexCounts(indexId, sample.uniqueValues(), sample.sampleSize(),\n+                sample.indexSize());\n+            durationLogger.markAsFinished();\n+            log.debug(\n+                format(\"Sampled index %s with %d unique values in sample of avg size %d taken from \" +\n+                        \"index containing %d entries\",\n+                    indexUserDescription, sample.uniqueValues(), sample.sampleSize(),\n+                    sample.indexSize()));\n+          } else\n+          {\n+            durationLogger.markAsAborted(\"Index no longer ONLINE\");\n+          }\n         }\n+      } catch (IndexNotFoundKernelException e)\n+      {\n+        durationLogger.markAsAborted(\n+            \"Attempted to sample missing/already deleted index \" + indexUserDescription);\n+      }\n     }\n+  }\n \n }\n",
            "diff_size": 63
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "76",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 243).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2948/OnlineIndexSamplingJob.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2948/OnlineIndexSamplingJob.java\nindex fdcf5040273..ae7d811baae 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2948/OnlineIndexSamplingJob.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2948/OnlineIndexSamplingJob.java\n@@ -64,22 +64,17 @@ class OnlineIndexSamplingJob implements IndexSamplingJob\n             try\n             {\n                 try ( IndexReader reader = indexProxy.newReader();\n-                      IndexSampler sampler = reader.createSampler() )\n-                {\n+IndexSampler sampler = reader.createSampler() )\n+{\n                     IndexSample sample = sampler.sampleIndex();\n \n                     // check again if the index is online before saving the counts in the store\n                     if ( indexProxy.getState() == ONLINE )\n                     {\n-                        storeView.replaceIndexCounts( indexId, sample.uniqueValues(), sample.sampleSize(),\n-                                sample.indexSize() );\n-                        durationLogger.markAsFinished();\n-                        log.debug(\n-                                format( \"Sampled index %s with %d unique values in sample of avg size %d taken from \" +\n-                                        \"index containing %d entries\",\n-                                        indexUserDescription, sample.uniqueValues(), sample.sampleSize(),\n-                                        sample.indexSize() ) );\n-                    }\n+                        storeView.replaceIndexCounts( indexId, sample.uniqueValues(), sample.sampleSize(), sample.indexSize() );\n+durationLogger.markAsFinished();\n+                        log.debug( format( \"Sampled index %s with %d unique values in sample of avg size %d taken from \" + \"index containing %d entries\", indexUserDescription, sample.uniqueValues(), sample.sampleSize(), sample.indexSize() ) );\n+    }\n                     else\n                     {\n                         durationLogger.markAsAborted( \"Index no longer ONLINE\" );\n@@ -88,10 +83,8 @@ class OnlineIndexSamplingJob implements IndexSamplingJob\n             }\n             catch ( IndexNotFoundKernelException e )\n             {\n-                durationLogger.markAsAborted(\n-                        \"Attempted to sample missing/already deleted index \" + indexUserDescription );\n-            }\n+                durationLogger.markAsAborted( \"Attempted to sample missing/already deleted index \" + indexUserDescription );\n+    }\n         }\n     }\n-\n-}\n+    }\n\\ No newline at end of file\n",
            "diff_size": 16
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
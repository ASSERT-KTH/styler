{
    "project_name": "tmobile-kardio",
    "error_id": "104",
    "information": {
        "errors": [
            {
                "line": "44",
                "column": "1",
                "severity": "error",
                "message": "File contains tab characters (this is the first instance).",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
            }
        ]
    },
    "source_code": "public class K8sTpsLatencyDaoImpl implements K8sTpsLatencyDao {\n\n\t@Autowired\n\tprivate SessionFactory sessionFactory;\n\n\t@Autowired",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "45",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/tmobile-kardio/errored/1/104/K8sTpsLatencyDaoImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/tmobile-kardio/styler/104/K8sTpsLatencyDaoImpl.java\nindex 4ee4421d94d..6676e670fa6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/tmobile-kardio/errored/1/104/K8sTpsLatencyDaoImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/tmobile-kardio/styler/104/K8sTpsLatencyDaoImpl.java\n@@ -41,7 +41,7 @@ import com.tmobile.kardio.util.DaoUtil;\n @Repository\n public class K8sTpsLatencyDaoImpl implements K8sTpsLatencyDao {\n \n-\t@Autowired\n+@Autowired\n \tprivate SessionFactory sessionFactory;\n \n \t@Autowired\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/tmobile-kardio/errored/1/104/K8sTpsLatencyDaoImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/tmobile-kardio/intellij/104/K8sTpsLatencyDaoImpl.java\nindex 4ee4421d94d..454b59c1b7a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/tmobile-kardio/errored/1/104/K8sTpsLatencyDaoImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/tmobile-kardio/intellij/104/K8sTpsLatencyDaoImpl.java\n@@ -1,12 +1,12 @@\n /*******************************************************************************\n  * Copyright 2019 T-Mobile USA, Inc.\n- * \n+ *\n  * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n  * use this file except in compliance with the License.  You may obtain a copy\n  * of the License at\n- * \n+ *\n  *   http://www.apache.org/licenses/LICENSE-2.0\n- * \n+ *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the\n@@ -17,6 +17,7 @@\n  * its contributors may be used to endorse or promote products derived from this\n  * software without specific prior written permission.\n  ******************************************************************************/\n+\n package com.tmobile.kardio.dao;\n \n import java.text.ParseException;\n@@ -41,51 +42,51 @@ import com.tmobile.kardio.util.DaoUtil;\n @Repository\n public class K8sTpsLatencyDaoImpl implements K8sTpsLatencyDao {\n \n-\t@Autowired\n-\tprivate SessionFactory sessionFactory;\n+    @Autowired\n+    private SessionFactory sessionFactory;\n+\n+    @Autowired\n+    private EnvironmentDao environmentDao;\n \n-\t@Autowired\n-\tprivate EnvironmentDao environmentDao;\n+    @SuppressWarnings(\"unchecked\")\n+    @Override\n+    public List<TpsLatency> getCurrentTpsLatency(String environment) {\n+        Session session = sessionFactory.openSession();\n+        Criteria tpsLatCriteria = session.createCriteria(TpsServiceEntity.class);\n+        int envId = environmentDao.getEnironmentIdFromName(environment);\n+        tpsLatCriteria.add(Restrictions.eq(\"environment.environmentId\", envId));\n+        List<TpsServiceEntity> apiTpsLatList = (List<TpsServiceEntity>) tpsLatCriteria.list();\n \n-\t@SuppressWarnings(\"unchecked\")\n-\t@Override\n-\tpublic List<TpsLatency> getCurrentTpsLatency(String environment) {\n-\t\tSession session = sessionFactory.openSession();\n-\t\tCriteria tpsLatCriteria = session.createCriteria(TpsServiceEntity.class);\n-\t\tint envId = environmentDao.getEnironmentIdFromName(environment);\n-\t\ttpsLatCriteria.add(Restrictions.eq(\"environment.environmentId\", envId));\n-\t\tList<TpsServiceEntity> apiTpsLatList = (List<TpsServiceEntity>) tpsLatCriteria.list();\n+        Query appTpsLatQuery = session.createQuery(HQLConstants.QUERY_GET_SUM_TPS_VALUE);\n+        appTpsLatQuery.setParameter(\"envId\", envId);\n+        List<TpsLatency> rettps = DaoUtil.convertToTpsLatency(apiTpsLatList, appTpsLatQuery);\n+        session.close();\n+        return rettps;\n+    }\n \n-\t\tQuery appTpsLatQuery = session.createQuery(HQLConstants.QUERY_GET_SUM_TPS_VALUE);\n-\t\tappTpsLatQuery.setParameter(\"envId\", envId);\n-\t\tList<TpsLatency> rettps = DaoUtil.convertToTpsLatency(apiTpsLatList, appTpsLatQuery);\n-\t\tsession.close();\n-\t\treturn rettps;\n-\t}\n-\t\n-\t/* Get the TPS & Latency history */\n-\t@Override\n-\tpublic List<TpsLatencyHistory> getTpsAndLatOfParent(String startDate, String endDate, String environment,\n-\t\t\tString componentIdsStrg,String platform) throws ParseException {\n-\t\tList<TpsLatencyHistory> tpsLatList = DaoUtil.getTpsAndLatOfParent(startDate, endDate, environment, componentIdsStrg,\n-\t\t\t\tplatform, K8sTpsLatencyHistoryEntity.class, sessionFactory, environmentDao);\n+    /* Get the TPS & Latency history */\n+    @Override\n+    public List<TpsLatencyHistory> getTpsAndLatOfParent(String startDate, String endDate, String environment,\n+                                                        String componentIdsStrg, String platform) throws ParseException {\n+        List<TpsLatencyHistory> tpsLatList = DaoUtil.getTpsAndLatOfParent(startDate, endDate, environment, componentIdsStrg,\n+            platform, K8sTpsLatencyHistoryEntity.class, sessionFactory, environmentDao);\n         return tpsLatList;\n-\t        \n-\t}\n+\n+    }\n \n \n-\t@Override\n-\tpublic List<TpsLatencyHistory> getTpsAndLatOfComponent(String startDate, String endDate, String environment,\n-\t\t\tString componentIdsStrg,String platform) throws ParseException {\n-\t\tList<TpsLatencyHistory> listOfTpsLatency = DaoUtil.getTpsAndLatOfComponent(startDate, endDate, environment,\n-\t\t\t\tcomponentIdsStrg, Constants.PLATFORM_K8S, K8sTpsLatencyHistoryEntity.class, sessionFactory, environmentDao);\n-\t\treturn listOfTpsLatency;\n-\t}\n+    @Override\n+    public List<TpsLatencyHistory> getTpsAndLatOfComponent(String startDate, String endDate, String environment,\n+                                                           String componentIdsStrg, String platform) throws ParseException {\n+        List<TpsLatencyHistory> listOfTpsLatency = DaoUtil.getTpsAndLatOfComponent(startDate, endDate, environment,\n+            componentIdsStrg, Constants.PLATFORM_K8S, K8sTpsLatencyHistoryEntity.class, sessionFactory, environmentDao);\n+        return listOfTpsLatency;\n+    }\n \n-\t@Override\n-\tpublic TpsLatency getCurrentTpsAndLatency(String environment, String componentIdsStrg, boolean isParent) {\n-\t\tTpsLatency tpsLat = DaoUtil.getCurrentTpsAndLatency(environment, componentIdsStrg, \n-\t\t\t\tisParent, null, sessionFactory, environmentDao);\n-\t\treturn tpsLat;\n-\t}\n+    @Override\n+    public TpsLatency getCurrentTpsAndLatency(String environment, String componentIdsStrg, boolean isParent) {\n+        TpsLatency tpsLat = DaoUtil.getCurrentTpsAndLatency(environment, componentIdsStrg,\n+            isParent, null, sessionFactory, environmentDao);\n+        return tpsLat;\n+    }\n }\n",
            "diff_size": 53
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "45",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                },
                {
                    "line": "68",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 178).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "70",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 197).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "75",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 181).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "77",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 220).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/tmobile-kardio/errored/1/104/K8sTpsLatencyDaoImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/tmobile-kardio/naturalize/104/K8sTpsLatencyDaoImpl.java\nindex 4ee4421d94d..1938b4b2ead 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/tmobile-kardio/errored/1/104/K8sTpsLatencyDaoImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/tmobile-kardio/naturalize/104/K8sTpsLatencyDaoImpl.java\n@@ -41,7 +41,7 @@ import com.tmobile.kardio.util.DaoUtil;\n @Repository\n public class K8sTpsLatencyDaoImpl implements K8sTpsLatencyDao {\n \n-\t@Autowired\n+    @Autowired\n \tprivate SessionFactory sessionFactory;\n \n \t@Autowired\n@@ -50,7 +50,7 @@ public class K8sTpsLatencyDaoImpl implements K8sTpsLatencyDao {\n \t@SuppressWarnings(\"unchecked\")\n \t@Override\n \tpublic List<TpsLatency> getCurrentTpsLatency(String environment) {\n-\t\tSession session = sessionFactory.openSession();\n+    Session session = sessionFactory.openSession();\n \t\tCriteria tpsLatCriteria = session.createCriteria(TpsServiceEntity.class);\n \t\tint envId = environmentDao.getEnironmentIdFromName(environment);\n \t\ttpsLatCriteria.add(Restrictions.eq(\"environment.environmentId\", envId));\n@@ -61,31 +61,27 @@ public class K8sTpsLatencyDaoImpl implements K8sTpsLatencyDao {\n \t\tList<TpsLatency> rettps = DaoUtil.convertToTpsLatency(apiTpsLatList, appTpsLatQuery);\n \t\tsession.close();\n \t\treturn rettps;\n-\t}\n-\t\n-\t/* Get the TPS & Latency history */\n-\t@Override\n-\tpublic List<TpsLatencyHistory> getTpsAndLatOfParent(String startDate, String endDate, String environment,\n-\t\t\tString componentIdsStrg,String platform) throws ParseException {\n-\t\tList<TpsLatencyHistory> tpsLatList = DaoUtil.getTpsAndLatOfParent(startDate, endDate, environment, componentIdsStrg,\n-\t\t\t\tplatform, K8sTpsLatencyHistoryEntity.class, sessionFactory, environmentDao);\n-        return tpsLatList;\n-\t        \n-\t}\n+    }\n \n+/* Get the TPS & Latency history */\n+@Override\n+\tpublic List<TpsLatencyHistory> getTpsAndLatOfParent(String startDate, String endDate, String environment, String componentIdsStrg,String platform) throws ParseException {\n \n-\t@Override\n-\tpublic List<TpsLatencyHistory> getTpsAndLatOfComponent(String startDate, String endDate, String environment,\n-\t\t\tString componentIdsStrg,String platform) throws ParseException {\n-\t\tList<TpsLatencyHistory> listOfTpsLatency = DaoUtil.getTpsAndLatOfComponent(startDate, endDate, environment,\n-\t\t\t\tcomponentIdsStrg, Constants.PLATFORM_K8S, K8sTpsLatencyHistoryEntity.class, sessionFactory, environmentDao);\n-\t\treturn listOfTpsLatency;\n-\t}\n+    List<TpsLatencyHistory> tpsLatList = DaoUtil.getTpsAndLatOfParent(startDate, endDate, environment, componentIdsStrg, platform, K8sTpsLatencyHistoryEntity.class, sessionFactory, environmentDao);\n+return tpsLatList;\n+    }\n+\n+@Override\n+\tpublic List<TpsLatencyHistory> getTpsAndLatOfComponent(String startDate, String endDate, String environment, String componentIdsStrg,String platform) throws ParseException {\n+\n+    List<TpsLatencyHistory> listOfTpsLatency = DaoUtil.getTpsAndLatOfComponent(startDate, endDate, environment, componentIdsStrg, Constants.PLATFORM_K8S, K8sTpsLatencyHistoryEntity.class, sessionFactory, environmentDao);\n+return listOfTpsLatency;\n+    }\n \n \t@Override\n \tpublic TpsLatency getCurrentTpsAndLatency(String environment, String componentIdsStrg, boolean isParent) {\n-\t\tTpsLatency tpsLat = DaoUtil.getCurrentTpsAndLatency(environment, componentIdsStrg, \n-\t\t\t\tisParent, null, sessionFactory, environmentDao);\n-\t\treturn tpsLat;\n-\t}\n-}\n+    TpsLatency tpsLat = DaoUtil.getCurrentTpsAndLatency(environment, componentIdsStrg, isParent, null, sessionFactory, environmentDao);\n+return tpsLat;\n+    }\n+\n+    }\n\\ No newline at end of file\n",
            "diff_size": 31
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "68",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 175).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "69",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 201).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "75",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 178).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "76",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 224).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/tmobile-kardio/errored/1/104/K8sTpsLatencyDaoImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/tmobile-kardio/codebuff/104/K8sTpsLatencyDaoImpl.java\nindex 4ee4421d94d..0f294000be9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/tmobile-kardio/errored/1/104/K8sTpsLatencyDaoImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/tmobile-kardio/codebuff/104/K8sTpsLatencyDaoImpl.java\n@@ -21,7 +21,6 @@ package com.tmobile.kardio.dao;\n \n import java.text.ParseException;\n import java.util.List;\n-\n import org.hibernate.Criteria;\n import org.hibernate.Query;\n import org.hibernate.Session;\n@@ -29,7 +28,6 @@ import org.hibernate.SessionFactory;\n import org.hibernate.criterion.Restrictions;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Repository;\n-\n import com.tmobile.kardio.bean.TpsLatency;\n import com.tmobile.kardio.bean.TpsLatencyHistory;\n import com.tmobile.kardio.constants.Constants;\n@@ -38,54 +36,52 @@ import com.tmobile.kardio.db.entity.K8sTpsLatencyHistoryEntity;\n import com.tmobile.kardio.db.entity.TpsServiceEntity;\n import com.tmobile.kardio.util.DaoUtil;\n \n+\n @Repository\n public class K8sTpsLatencyDaoImpl implements K8sTpsLatencyDao {\n \n-\t@Autowired\n-\tprivate SessionFactory sessionFactory;\n+    @Autowired\n+    private SessionFactory sessionFactory;\n \n-\t@Autowired\n-\tprivate EnvironmentDao environmentDao;\n+    @Autowired\n+    private EnvironmentDao environmentDao;\n \n-\t@SuppressWarnings(\"unchecked\")\n-\t@Override\n-\tpublic List<TpsLatency> getCurrentTpsLatency(String environment) {\n-\t\tSession session = sessionFactory.openSession();\n-\t\tCriteria tpsLatCriteria = session.createCriteria(TpsServiceEntity.class);\n-\t\tint envId = environmentDao.getEnironmentIdFromName(environment);\n-\t\ttpsLatCriteria.add(Restrictions.eq(\"environment.environmentId\", envId));\n-\t\tList<TpsServiceEntity> apiTpsLatList = (List<TpsServiceEntity>) tpsLatCriteria.list();\n+    @SuppressWarnings(\"unchecked\")\n+    @Override\n+    public List<TpsLatency> getCurrentTpsLatency(String environment) {\n+        Session session = sessionFactory.openSession();\n+        Criteria tpsLatCriteria = session.createCriteria(TpsServiceEntity.class);\n+        int envId = environmentDao.getEnironmentIdFromName(environment);\n+        tpsLatCriteria.add(Restrictions.eq(\"environment.environmentId\", envId));\n+        List<TpsServiceEntity> apiTpsLatList = (List<TpsServiceEntity>) tpsLatCriteria.list();\n+        Query appTpsLatQuery = session.createQuery(HQLConstants.QUERY_GET_SUM_TPS_VALUE);\n+        appTpsLatQuery.setParameter(\"envId\", envId);\n+        List<TpsLatency> rettps = DaoUtil.convertToTpsLatency(apiTpsLatList, appTpsLatQuery);\n+        session.close();\n+        return rettps;\n+    }\n+    \n+    /* Get the TPS & Latency history */\n \n-\t\tQuery appTpsLatQuery = session.createQuery(HQLConstants.QUERY_GET_SUM_TPS_VALUE);\n-\t\tappTpsLatQuery.setParameter(\"envId\", envId);\n-\t\tList<TpsLatency> rettps = DaoUtil.convertToTpsLatency(apiTpsLatList, appTpsLatQuery);\n-\t\tsession.close();\n-\t\treturn rettps;\n-\t}\n-\t\n-\t/* Get the TPS & Latency history */\n-\t@Override\n-\tpublic List<TpsLatencyHistory> getTpsAndLatOfParent(String startDate, String endDate, String environment,\n-\t\t\tString componentIdsStrg,String platform) throws ParseException {\n-\t\tList<TpsLatencyHistory> tpsLatList = DaoUtil.getTpsAndLatOfParent(startDate, endDate, environment, componentIdsStrg,\n-\t\t\t\tplatform, K8sTpsLatencyHistoryEntity.class, sessionFactory, environmentDao);\n+\n+    @Override\n+    public List<TpsLatencyHistory> getTpsAndLatOfParent(String startDate, String endDate, String environment, String componentIdsStrg, String platform) throws ParseException {\n+        List<TpsLatencyHistory> tpsLatList = DaoUtil.getTpsAndLatOfParent(startDate, endDate, environment, componentIdsStrg, platform, K8sTpsLatencyHistoryEntity.class, sessionFactory, environmentDao);\n         return tpsLatList;\n-\t        \n-\t}\n+    }\n+\n+\n+    @Override\n+    public List<TpsLatencyHistory> getTpsAndLatOfComponent(String startDate, String endDate, String environment, String componentIdsStrg, String platform) throws ParseException {\n+        List<TpsLatencyHistory> listOfTpsLatency = DaoUtil.getTpsAndLatOfComponent(startDate, endDate, environment, componentIdsStrg, Constants.PLATFORM_K8S, K8sTpsLatencyHistoryEntity.class, sessionFactory, environmentDao);\n+        return listOfTpsLatency;\n+    }\n \n \n-\t@Override\n-\tpublic List<TpsLatencyHistory> getTpsAndLatOfComponent(String startDate, String endDate, String environment,\n-\t\t\tString componentIdsStrg,String platform) throws ParseException {\n-\t\tList<TpsLatencyHistory> listOfTpsLatency = DaoUtil.getTpsAndLatOfComponent(startDate, endDate, environment,\n-\t\t\t\tcomponentIdsStrg, Constants.PLATFORM_K8S, K8sTpsLatencyHistoryEntity.class, sessionFactory, environmentDao);\n-\t\treturn listOfTpsLatency;\n-\t}\n+    @Override\n+    public TpsLatency getCurrentTpsAndLatency(String environment, String componentIdsStrg, boolean isParent) {\n+        TpsLatency tpsLat = DaoUtil.getCurrentTpsAndLatency(environment, componentIdsStrg, isParent, null, sessionFactory, environmentDao);\n+        return tpsLat;\n+    }\n \n-\t@Override\n-\tpublic TpsLatency getCurrentTpsAndLatency(String environment, String componentIdsStrg, boolean isParent) {\n-\t\tTpsLatency tpsLat = DaoUtil.getCurrentTpsAndLatency(environment, componentIdsStrg, \n-\t\t\t\tisParent, null, sessionFactory, environmentDao);\n-\t\treturn tpsLat;\n-\t}\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 58
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "45",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/tmobile-kardio/errored/1/104/K8sTpsLatencyDaoImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/tmobile-kardio/styler_random/104/K8sTpsLatencyDaoImpl.java\nindex 4ee4421d94d..6676e670fa6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/tmobile-kardio/errored/1/104/K8sTpsLatencyDaoImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/tmobile-kardio/styler_random/104/K8sTpsLatencyDaoImpl.java\n@@ -41,7 +41,7 @@ import com.tmobile.kardio.util.DaoUtil;\n @Repository\n public class K8sTpsLatencyDaoImpl implements K8sTpsLatencyDao {\n \n-\t@Autowired\n+@Autowired\n \tprivate SessionFactory sessionFactory;\n \n \t@Autowired\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "45",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/tmobile-kardio/errored/1/104/K8sTpsLatencyDaoImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/tmobile-kardio/styler_three_grams/104/K8sTpsLatencyDaoImpl.java\nindex 4ee4421d94d..b38a599e4a8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/tmobile-kardio/errored/1/104/K8sTpsLatencyDaoImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/tmobile-kardio/styler_three_grams/104/K8sTpsLatencyDaoImpl.java\n@@ -41,7 +41,7 @@ import com.tmobile.kardio.util.DaoUtil;\n @Repository\n public class K8sTpsLatencyDaoImpl implements K8sTpsLatencyDao {\n \n-\t@Autowired\n+    @Autowired\n \tprivate SessionFactory sessionFactory;\n \n \t@Autowired\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
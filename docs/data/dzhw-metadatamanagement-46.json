{
    "project_name": "dzhw-metadatamanagement",
    "error_id": "46",
    "information": {
        "errors": [
            {
                "line": "22",
                "column": "81",
                "severity": "error",
                "message": "'}' at column 81 should be alone on a line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
            }
        ]
    },
    "source_code": "   */\n  @Override\n  public void initialize(ValidDerivedVariablesIdentifier constraintAnnotation) {}\n\n  /*\n   * (non-Javadoc)",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "22",
                    "column": "81",
                    "severity": "error",
                    "message": "'}' at column 81 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/46/ValidDerivedVariablesIdentifierValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/intellij/46/ValidDerivedVariablesIdentifierValidator.java\nindex d8d75ed987a..599b2361b82 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/46/ValidDerivedVariablesIdentifierValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/intellij/46/ValidDerivedVariablesIdentifierValidator.java\n@@ -15,15 +15,16 @@ public class ValidDerivedVariablesIdentifierValidator\n \n   /*\n    * (non-Javadoc)\n-   * \n+   *\n    * @see javax.validation.ConstraintValidator#initialize(java.lang.annotation.Annotation)\n    */\n   @Override\n-  public void initialize(ValidDerivedVariablesIdentifier constraintAnnotation) {}\n+  public void initialize(ValidDerivedVariablesIdentifier constraintAnnotation) {\n+  }\n \n   /*\n    * (non-Javadoc)\n-   * \n+   *\n    * @see javax.validation.ConstraintValidator#isValid(java.lang.Object,\n    * javax.validation.ConstraintValidatorContext)\n    */\n",
            "diff_size": 4
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "22",
                    "column": "81",
                    "severity": "error",
                    "message": "'}' at column 81 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/46/ValidDerivedVariablesIdentifierValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/naturalize/46/ValidDerivedVariablesIdentifierValidator.java\nindex d8d75ed987a..ab8793795ca 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/46/ValidDerivedVariablesIdentifierValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/naturalize/46/ValidDerivedVariablesIdentifierValidator.java\n@@ -39,4 +39,4 @@ public class ValidDerivedVariablesIdentifierValidator\n           .getDataAcquisitionProjectId() + \"-ds\" + variable.getDataSetNumber() + \"-\");\n     }\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "14",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 129).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "37",
                    "severity": "error",
                    "message": "'ConstraintValidatorContext' has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "45",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 147).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/46/ValidDerivedVariablesIdentifierValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/codebuff/46/ValidDerivedVariablesIdentifierValidator.java\nindex d8d75ed987a..e2b7260c29b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/46/ValidDerivedVariablesIdentifierValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/codebuff/46/ValidDerivedVariablesIdentifierValidator.java\n@@ -2,7 +2,6 @@ package eu.dzhw.fdz.metadatamanagement.variablemanagement.domain.validation;\n \n import javax.validation.ConstraintValidator;\n import javax.validation.ConstraintValidatorContext;\n-\n import eu.dzhw.fdz.metadatamanagement.variablemanagement.domain.Variable;\n \n /**\n@@ -10,16 +9,20 @@ import eu.dzhw.fdz.metadatamanagement.variablemanagement.domain.Variable;\n  *\n  * @author Daniel Katzberg\n  */\n-public class ValidDerivedVariablesIdentifierValidator\n-    implements ConstraintValidator<ValidDerivedVariablesIdentifier, Variable> {\n+\n+\n+public class ValidDerivedVariablesIdentifierValidator implements ConstraintValidator<ValidDerivedVariablesIdentifier, Variable> {\n \n   /*\n    * (non-Javadoc)\n    * \n    * @see javax.validation.ConstraintValidator#initialize(java.lang.annotation.Annotation)\n    */\n+\n   @Override\n-  public void initialize(ValidDerivedVariablesIdentifier constraintAnnotation) {}\n+  public void initialize(ValidDerivedVariablesIdentifier constraintAnnotation) {\n+\n+  }\n \n   /*\n    * (non-Javadoc)\n@@ -27,16 +30,19 @@ public class ValidDerivedVariablesIdentifierValidator\n    * @see javax.validation.ConstraintValidator#isValid(java.lang.Object,\n    * javax.validation.ConstraintValidatorContext)\n    */\n+\n+\n   @Override\n-  public boolean isValid(Variable variable, ConstraintValidatorContext context) {\n+  public boolean isValid(Variable variable,\n+    ConstraintValidatorContext context) {\n     if (variable.isShadow()) {\n       return true;\n     } else {\n       if (variable.getDerivedVariablesIdentifier() == null) {\n         return true;\n       }\n-      return variable.getDerivedVariablesIdentifier().contains(variable\n-          .getDataAcquisitionProjectId() + \"-ds\" + variable.getDataSetNumber() + \"-\");\n+\n+      return variable.getDerivedVariablesIdentifier().contains(variable.getDataAcquisitionProjectId() + \"-ds\" + variable.getDataSetNumber() + \"-\");\n     }\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 15
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "22",
                    "column": "81",
                    "severity": "error",
                    "message": "'}' at column 81 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "22",
                    "column": "81",
                    "severity": "error",
                    "message": "'}' at column 81 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "29",
                    "severity": "error",
                    "message": "'METHOD_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/46/ValidDerivedVariablesIdentifierValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/styler_three_grams/46/ValidDerivedVariablesIdentifierValidator.java\nindex d8d75ed987a..599f981b47e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/46/ValidDerivedVariablesIdentifierValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/styler_three_grams/46/ValidDerivedVariablesIdentifierValidator.java\n@@ -20,7 +20,6 @@ public class ValidDerivedVariablesIdentifierValidator\n    */\n   @Override\n   public void initialize(ValidDerivedVariablesIdentifier constraintAnnotation) {}\n-\n   /*\n    * (non-Javadoc)\n    * \n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
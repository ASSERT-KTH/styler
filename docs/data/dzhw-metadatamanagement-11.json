{
    "project_name": "dzhw-metadatamanagement",
    "error_id": "11",
    "information": {
        "errors": [
            {
                "line": "52",
                "column": "21",
                "severity": "error",
                "message": "'}' at column 21 should be alone on a line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
            }
        ]
    },
    "source_code": "  private boolean welcomeDialogDeactivated;\n\n  public UserDto() {}\n\n  /**\n   * Create the dto.",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "52",
                    "column": "21",
                    "severity": "error",
                    "message": "'}' at column 21 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/11/UserDto.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/intellij/11/UserDto.java\nindex 052d0d34e51..6eceaf278db 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/11/UserDto.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/intellij/11/UserDto.java\n@@ -49,7 +49,8 @@ public class UserDto {\n \n   private boolean welcomeDialogDeactivated;\n \n-  public UserDto() {}\n+  public UserDto() {\n+  }\n \n   /**\n    * Create the dto.\n@@ -57,17 +58,17 @@ public class UserDto {\n   public UserDto(User user) {\n     this(user.getLogin(), null, user.getFirstName(), user.getLastName(), user.getEmail(),\n         user.isActivated(), user.getLangKey(), user.getAuthorities()\n-          .stream()\n-          .map(Authority::getName)\n-          .collect(Collectors.toSet()), user.isWelcomeDialogDeactivated());\n+            .stream()\n+            .map(Authority::getName)\n+            .collect(Collectors.toSet()), user.isWelcomeDialogDeactivated());\n   }\n \n   /**\n    * Create the dto.\n    */\n   public UserDto(String login, String password, String firstName, String lastName, String email,\n-      boolean activated, String langKey, Set<String> authorities,\n-      boolean welcomeDialogDeactivated) {\n+                 boolean activated, String langKey, Set<String> authorities,\n+                 boolean welcomeDialogDeactivated) {\n \n     this.login = login;\n     this.password = password;\n",
            "diff_size": 7
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "52",
                    "column": "21",
                    "severity": "error",
                    "message": "'}' at column 21 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "68",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 156).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "70",
                    "severity": "error",
                    "message": "'ctor def' child has incorrect indentation level 2, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/11/UserDto.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/naturalize/11/UserDto.java\nindex 052d0d34e51..8d67c94dbac 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/11/UserDto.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/naturalize/11/UserDto.java\n@@ -65,11 +65,9 @@ public class UserDto {\n   /**\n    * Create the dto.\n    */\n-  public UserDto(String login, String password, String firstName, String lastName, String email,\n-      boolean activated, String langKey, Set<String> authorities,\n+  public UserDto(String login, String password, String firstName, String lastName, String email, boolean activated, String langKey, Set<String> authorities,\n       boolean welcomeDialogDeactivated) {\n-\n-    this.login = login;\n+  this.login = login;\n     this.password = password;\n     this.firstName = firstName;\n     this.lastName = lastName;\n@@ -115,4 +113,4 @@ public class UserDto {\n   public boolean isWelcomeDialogDeactivated() {\n     return welcomeDialogDeactivated;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "60",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 159).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "61",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 174).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "62",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 215).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "71",
                    "severity": "error",
                    "message": "'String' has incorrect indentation level 0, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "72",
                    "severity": "error",
                    "message": "'String' has incorrect indentation level 0, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "73",
                    "severity": "error",
                    "message": "'String' has incorrect indentation level 0, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "74",
                    "severity": "error",
                    "message": "'String' has incorrect indentation level 0, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "75",
                    "severity": "error",
                    "message": "'boolean' has incorrect indentation level 0, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "76",
                    "severity": "error",
                    "message": "'String' has incorrect indentation level 0, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "77",
                    "severity": "error",
                    "message": "'Set' has incorrect indentation level 0, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/11/UserDto.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/codebuff/11/UserDto.java\nindex 052d0d34e51..8781375186a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/11/UserDto.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/codebuff/11/UserDto.java\n@@ -2,12 +2,10 @@ package eu.dzhw.fdz.metadatamanagement.usermanagement.rest.dto;\n \n import java.util.Set;\n import java.util.stream.Collectors;\n-\n import javax.validation.constraints.Email;\n import javax.validation.constraints.NotNull;\n import javax.validation.constraints.Pattern;\n import javax.validation.constraints.Size;\n-\n import eu.dzhw.fdz.metadatamanagement.usermanagement.domain.Authority;\n import eu.dzhw.fdz.metadatamanagement.usermanagement.domain.User;\n import lombok.ToString;\n@@ -15,9 +13,10 @@ import lombok.ToString;\n /**\n  * A DTO representing a user, with his authorities.\n  */\n+\n+\n @ToString\n public class UserDto {\n-\n   public static final int PASSWORD_MIN_LENGTH = 5;\n   public static final int PASSWORD_MAX_LENGTH = 100;\n \n@@ -49,26 +48,33 @@ public class UserDto {\n \n   private boolean welcomeDialogDeactivated;\n \n-  public UserDto() {}\n+  public UserDto() {\n+  }\n \n   /**\n    * Create the dto.\n    */\n+\n+\n   public UserDto(User user) {\n-    this(user.getLogin(), null, user.getFirstName(), user.getLastName(), user.getEmail(),\n-        user.isActivated(), user.getLangKey(), user.getAuthorities()\n-          .stream()\n-          .map(Authority::getName)\n-          .collect(Collectors.toSet()), user.isWelcomeDialogDeactivated());\n+    this(user.getLogin(), null, user.getFirstName(), user.getLastName(), user.getEmail(), user.isActivated(), user.getLangKey(), user.getAuthorities().stream()\n+                                                                                                                                                      .map(Authority::getName)\n+                                                                                                                                                      .collect(Collectors.toSet()), user.isWelcomeDialogDeactivated());\n   }\n \n   /**\n    * Create the dto.\n    */\n-  public UserDto(String login, String password, String firstName, String lastName, String email,\n-      boolean activated, String langKey, Set<String> authorities,\n-      boolean welcomeDialogDeactivated) {\n \n+\n+  public UserDto(String login,\n+String password,\n+String firstName,\n+String lastName,\n+String email,\n+boolean activated,\n+String langKey,\n+Set<String> authorities, boolean welcomeDialogDeactivated) {\n     this.login = login;\n     this.password = password;\n     this.firstName = firstName;\n@@ -115,4 +121,4 @@ public class UserDto {\n   public boolean isWelcomeDialogDeactivated() {\n     return welcomeDialogDeactivated;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 27
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "52",
                    "column": "21",
                    "severity": "error",
                    "message": "'}' at column 21 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "52",
                    "column": "21",
                    "severity": "error",
                    "message": "'}' at column 21 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "56",
                    "severity": "error",
                    "message": "'CTOR_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/11/UserDto.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/styler_three_grams/11/UserDto.java\nindex 052d0d34e51..2f531d12103 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/11/UserDto.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/styler_three_grams/11/UserDto.java\n@@ -50,7 +50,6 @@ public class UserDto {\n   private boolean welcomeDialogDeactivated;\n \n   public UserDto() {}\n-\n   /**\n    * Create the dto.\n    */\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "LoboEvolution-LoboEvolution",
    "error_id": "565",
    "information": {
        "errors": [
            {
                "line": "25",
                "column": "92",
                "severity": "error",
                "message": "'||' should be on a new line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
            }
        ]
    },
    "source_code": "        Class<?>[] context = getClassContext();\n        for (Class<?> c : context) {\n            if (c != InterpretedFunction.class && NativeFunction.class.isAssignableFrom(c) ||\n                    PolicySecurityController.SecureCaller.class.isAssignableFrom(c)) {\n                return c;\n            }",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/LoboEvolution-LoboEvolution/errored/1/565/RhinoSecurityManager.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/LoboEvolution-LoboEvolution/styler/565/RhinoSecurityManager.java\nindex 942b9290e9d..0a5398c2b06 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/LoboEvolution-LoboEvolution/errored/1/565/RhinoSecurityManager.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/LoboEvolution-LoboEvolution/styler/565/RhinoSecurityManager.java\n@@ -22,8 +22,7 @@ public class RhinoSecurityManager extends SecurityManager {\n     protected Class<?> getCurrentScriptClass() {\n         Class<?>[] context = getClassContext();\n         for (Class<?> c : context) {\n-            if (c != InterpretedFunction.class && NativeFunction.class.isAssignableFrom(c) ||\n-                    PolicySecurityController.SecureCaller.class.isAssignableFrom(c)) {\n+            if (c != InterpretedFunction.class && NativeFunction.class.isAssignableFrom(c) || PolicySecurityController.SecureCaller.class.isAssignableFrom(c)) {\n                 return c;\n             }\n         }\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "26",
                    "column": "92",
                    "severity": "error",
                    "message": "'||' should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/LoboEvolution-LoboEvolution/errored/1/565/RhinoSecurityManager.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/LoboEvolution-LoboEvolution/intellij/565/RhinoSecurityManager.java\nindex 942b9290e9d..d5861bcb523 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/LoboEvolution-LoboEvolution/errored/1/565/RhinoSecurityManager.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/LoboEvolution-LoboEvolution/intellij/565/RhinoSecurityManager.java\n@@ -16,14 +16,15 @@ public class RhinoSecurityManager extends SecurityManager {\n \n     /**\n      * Get the class of the top-most stack element representing a script.\n+     *\n      * @return The class of the top-most script in the current stack,\n-     *         or null if no script is currently running\n+     * or null if no script is currently running\n      */\n     protected Class<?> getCurrentScriptClass() {\n         Class<?>[] context = getClassContext();\n         for (Class<?> c : context) {\n             if (c != InterpretedFunction.class && NativeFunction.class.isAssignableFrom(c) ||\n-                    PolicySecurityController.SecureCaller.class.isAssignableFrom(c)) {\n+                PolicySecurityController.SecureCaller.class.isAssignableFrom(c)) {\n                 return c;\n             }\n         }\n",
            "diff_size": 3
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/LoboEvolution-LoboEvolution/errored/1/565/RhinoSecurityManager.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/LoboEvolution-LoboEvolution/codebuff/565/RhinoSecurityManager.java\nindex 942b9290e9d..50987df31c9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/LoboEvolution-LoboEvolution/errored/1/565/RhinoSecurityManager.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/LoboEvolution-LoboEvolution/codebuff/565/RhinoSecurityManager.java\n@@ -12,6 +12,8 @@ package org.mozilla.javascript;\n  * <code>ProtectionDomain</code> as the script code that created them.\n  * Embeddings that implement their own SecurityManager can use this as base class.\n  */\n+\n+\n public class RhinoSecurityManager extends SecurityManager {\n \n     /**\n@@ -19,15 +21,16 @@ public class RhinoSecurityManager extends SecurityManager {\n      * @return The class of the top-most script in the current stack,\n      *         or null if no script is currently running\n      */\n+\n     protected Class<?> getCurrentScriptClass() {\n         Class<?>[] context = getClassContext();\n         for (Class<?> c : context) {\n-            if (c != InterpretedFunction.class && NativeFunction.class.isAssignableFrom(c) ||\n-                    PolicySecurityController.SecureCaller.class.isAssignableFrom(c)) {\n+            if (c != InterpretedFunction.class && NativeFunction.class\n+                .isAssignableFrom(c) || PolicySecurityController.SecureCaller.class\n+                .isAssignableFrom(c)) {\n                 return c;\n             }\n         }\n         return null;\n     }\n-\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "25",
                    "column": "91",
                    "severity": "error",
                    "message": "'||' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/LoboEvolution-LoboEvolution/errored/1/565/RhinoSecurityManager.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/LoboEvolution-LoboEvolution/styler_random/565/RhinoSecurityManager.java\nindex 942b9290e9d..2d3a34f33f8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/LoboEvolution-LoboEvolution/errored/1/565/RhinoSecurityManager.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/LoboEvolution-LoboEvolution/styler_random/565/RhinoSecurityManager.java\n@@ -22,8 +22,7 @@ public class RhinoSecurityManager extends SecurityManager {\n     protected Class<?> getCurrentScriptClass() {\n         Class<?>[] context = getClassContext();\n         for (Class<?> c : context) {\n-            if (c != InterpretedFunction.class && NativeFunction.class.isAssignableFrom(c) ||\n-                    PolicySecurityController.SecureCaller.class.isAssignableFrom(c)) {\n+            if (c != InterpretedFunction.class && NativeFunction.class.isAssignableFrom(c)|| PolicySecurityController.SecureCaller.class.isAssignableFrom(c)) {\n                 return c;\n             }\n         }\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/LoboEvolution-LoboEvolution/errored/1/565/RhinoSecurityManager.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/LoboEvolution-LoboEvolution/styler_three_grams/565/RhinoSecurityManager.java\nindex 942b9290e9d..0a5398c2b06 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/LoboEvolution-LoboEvolution/errored/1/565/RhinoSecurityManager.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/LoboEvolution-LoboEvolution/styler_three_grams/565/RhinoSecurityManager.java\n@@ -22,8 +22,7 @@ public class RhinoSecurityManager extends SecurityManager {\n     protected Class<?> getCurrentScriptClass() {\n         Class<?>[] context = getClassContext();\n         for (Class<?> c : context) {\n-            if (c != InterpretedFunction.class && NativeFunction.class.isAssignableFrom(c) ||\n-                    PolicySecurityController.SecureCaller.class.isAssignableFrom(c)) {\n+            if (c != InterpretedFunction.class && NativeFunction.class.isAssignableFrom(c) || PolicySecurityController.SecureCaller.class.isAssignableFrom(c)) {\n                 return c;\n             }\n         }\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "codebuff",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "intellij",
        "naturalize",
        "styler_random"
    ]
}
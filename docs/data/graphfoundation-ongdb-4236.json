{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4236",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "53",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "58",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "123",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "100",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "111",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "63",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "148",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "148",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4236/HandshakeClientInitializer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4236/HandshakeClientInitializer.java\nindex fb3afc8647c..8e03c367831 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4236/HandshakeClientInitializer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4236/HandshakeClientInitializer.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering.protocol.handshake;\n \n import io.netty.channel.Channel;\n@@ -41,117 +42,114 @@ import static java.util.concurrent.TimeUnit.MILLISECONDS;\n \n public class HandshakeClientInitializer extends ChannelInitializer<SocketChannel>\n {\n-    private final ApplicationProtocolRepository applicationProtocolRepository;\n-    private final ModifierProtocolRepository modifierProtocolRepository;\n-    private final Duration timeout;\n-    private final ProtocolInstallerRepository<ProtocolInstaller.Orientation.Client> protocolInstaller;\n-    private final NettyPipelineBuilderFactory pipelineBuilderFactory;\n-    private final TimeoutStrategy handshakeDelay;\n-    private final Log log;\n-\n-    public HandshakeClientInitializer( ApplicationProtocolRepository applicationProtocolRepository, ModifierProtocolRepository modifierProtocolRepository,\n-            ProtocolInstallerRepository<ProtocolInstaller.Orientation.Client> protocolInstallerRepository, NettyPipelineBuilderFactory pipelineBuilderFactory,\n-            Duration handshakeTimeout, LogProvider logProvider )\n-    {\n-        this.log = logProvider.getLog( getClass() );\n-        this.applicationProtocolRepository = applicationProtocolRepository;\n-        this.modifierProtocolRepository = modifierProtocolRepository;\n-        this.timeout = handshakeTimeout;\n-        this.protocolInstaller = protocolInstallerRepository;\n-        this.pipelineBuilderFactory = pipelineBuilderFactory;\n-        this.handshakeDelay = new ExponentialBackoffStrategy( 1, 2000, MILLISECONDS );\n-    }\n-\n-    private void installHandlers( Channel channel, HandshakeClient handshakeClient ) throws Exception\n+  private final ApplicationProtocolRepository applicationProtocolRepository;\n+  private final ModifierProtocolRepository modifierProtocolRepository;\n+  private final Duration timeout;\n+  private final ProtocolInstallerRepository<ProtocolInstaller.Orientation.Client> protocolInstaller;\n+  private final NettyPipelineBuilderFactory pipelineBuilderFactory;\n+  private final TimeoutStrategy handshakeDelay;\n+  private final Log log;\n+\n+  public HandshakeClientInitializer(ApplicationProtocolRepository applicationProtocolRepository, ModifierProtocolRepository modifierProtocolRepository,\n+                                    ProtocolInstallerRepository<ProtocolInstaller.Orientation.Client> protocolInstallerRepository,\n+                                    NettyPipelineBuilderFactory pipelineBuilderFactory,\n+                                    Duration handshakeTimeout, LogProvider logProvider)\n+  {\n+    this.log = logProvider.getLog(getClass());\n+    this.applicationProtocolRepository = applicationProtocolRepository;\n+    this.modifierProtocolRepository = modifierProtocolRepository;\n+    this.timeout = handshakeTimeout;\n+    this.protocolInstaller = protocolInstallerRepository;\n+    this.pipelineBuilderFactory = pipelineBuilderFactory;\n+    this.handshakeDelay = new ExponentialBackoffStrategy(1, 2000, MILLISECONDS);\n+  }\n+\n+  private void installHandlers(Channel channel, HandshakeClient handshakeClient) throws Exception\n+  {\n+    pipelineBuilderFactory.client(channel, log)\n+        .addFraming()\n+        .add(\"handshake_client_encoder\", new ClientMessageEncoder())\n+        .add(\"handshake_client_decoder\", new ClientMessageDecoder())\n+        .add(\"handshake_client\", new NettyHandshakeClient(handshakeClient))\n+        .addGate(msg -> !(msg instanceof ServerMessage))\n+        .install();\n+  }\n+\n+  @Override\n+  protected void initChannel(SocketChannel channel) throws Exception\n+  {\n+    HandshakeClient handshakeClient = new HandshakeClient();\n+    installHandlers(channel, handshakeClient);\n+\n+    log.info(\"Scheduling handshake (and timeout) local %s remote %s\", channel.localAddress(), channel.remoteAddress());\n+\n+    scheduleHandshake(channel, handshakeClient, handshakeDelay.newTimeout());\n+    scheduleTimeout(channel, handshakeClient);\n+  }\n+\n+  /**\n+   * schedules the handshake initiation after the connection attempt\n+   */\n+  private void scheduleHandshake(SocketChannel ch, HandshakeClient handshakeClient, TimeoutStrategy.Timeout handshakeDelay)\n+  {\n+    ch.eventLoop().schedule(() ->\n     {\n-        pipelineBuilderFactory.client( channel, log )\n-                .addFraming()\n-                .add( \"handshake_client_encoder\", new ClientMessageEncoder() )\n-                .add( \"handshake_client_decoder\", new ClientMessageDecoder() )\n-                .add( \"handshake_client\", new NettyHandshakeClient( handshakeClient ) )\n-                .addGate( msg -> !(msg instanceof ServerMessage) )\n-                .install();\n-    }\n-\n-    @Override\n-    protected void initChannel( SocketChannel channel ) throws Exception\n-    {\n-        HandshakeClient handshakeClient = new HandshakeClient();\n-        installHandlers( channel, handshakeClient );\n-\n-        log.info( \"Scheduling handshake (and timeout) local %s remote %s\", channel.localAddress(), channel.remoteAddress() );\n-\n-        scheduleHandshake( channel, handshakeClient, handshakeDelay.newTimeout() );\n-        scheduleTimeout( channel, handshakeClient );\n-    }\n-\n-    /**\n-     * schedules the handshake initiation after the connection attempt\n-     */\n-    private void scheduleHandshake( SocketChannel ch, HandshakeClient handshakeClient, TimeoutStrategy.Timeout handshakeDelay )\n+      if (ch.isActive())\n+      {\n+        initiateHandshake(ch, handshakeClient);\n+      } else if (ch.isOpen())\n+      {\n+        handshakeDelay.increment();\n+        scheduleHandshake(ch, handshakeClient, handshakeDelay);\n+      } else\n+      {\n+        handshakeClient.failIfNotDone(\"Channel closed\");\n+      }\n+    }, handshakeDelay.getMillis(), MILLISECONDS);\n+  }\n+\n+  private void scheduleTimeout(SocketChannel ch, HandshakeClient handshakeClient)\n+  {\n+    ch.eventLoop().schedule(() -> {\n+      if (handshakeClient.failIfNotDone(\"Timed out after \" + timeout))\n+      {\n+        log.warn(\"Failed handshake after timeout\");\n+      }\n+    }, timeout.toMillis(), TimeUnit.MILLISECONDS);\n+  }\n+\n+  private void initiateHandshake(Channel channel, HandshakeClient handshakeClient)\n+  {\n+    log.info(\"Initiating handshake local %s remote %s\", channel.localAddress(), channel.remoteAddress());\n+\n+    SimpleNettyChannel channelWrapper = new SimpleNettyChannel(channel, log);\n+    CompletableFuture<ProtocolStack> handshake = handshakeClient.initiate(channelWrapper, applicationProtocolRepository, modifierProtocolRepository);\n+\n+    handshake.whenComplete((protocolStack, failure) -> onHandshakeComplete(protocolStack, channel, failure));\n+  }\n+\n+  private void onHandshakeComplete(ProtocolStack protocolStack, Channel channel, Throwable failure)\n+  {\n+    if (failure != null)\n     {\n-        ch.eventLoop().schedule( () ->\n-        {\n-            if ( ch.isActive() )\n-            {\n-                initiateHandshake( ch, handshakeClient );\n-            }\n-            else if ( ch.isOpen() )\n-            {\n-                handshakeDelay.increment();\n-                scheduleHandshake( ch, handshakeClient, handshakeDelay );\n-            }\n-            else\n-            {\n-                handshakeClient.failIfNotDone( \"Channel closed\" );\n-            }\n-        }, handshakeDelay.getMillis(), MILLISECONDS );\n-    }\n-\n-    private void scheduleTimeout( SocketChannel ch, HandshakeClient handshakeClient )\n-    {\n-        ch.eventLoop().schedule( () -> {\n-            if ( handshakeClient.failIfNotDone( \"Timed out after \" + timeout ) )\n-            {\n-                log.warn( \"Failed handshake after timeout\" );\n-            }\n-        }, timeout.toMillis(), TimeUnit.MILLISECONDS );\n-    }\n-\n-    private void initiateHandshake( Channel channel, HandshakeClient handshakeClient )\n-    {\n-        log.info( \"Initiating handshake local %s remote %s\", channel.localAddress(), channel.remoteAddress() );\n-\n-        SimpleNettyChannel channelWrapper = new SimpleNettyChannel( channel, log );\n-        CompletableFuture<ProtocolStack> handshake = handshakeClient.initiate( channelWrapper, applicationProtocolRepository, modifierProtocolRepository );\n-\n-        handshake.whenComplete( ( protocolStack, failure ) -> onHandshakeComplete( protocolStack, channel, failure ) );\n-    }\n-\n-    private void onHandshakeComplete( ProtocolStack protocolStack, Channel channel, Throwable failure )\n+      log.error(\"Error when negotiating protocol stack\", failure);\n+      channel.pipeline().fireUserEventTriggered(GateEvent.getFailure());\n+      channel.close();\n+    } else\n     {\n-        if ( failure != null )\n-        {\n-            log.error( \"Error when negotiating protocol stack\", failure );\n-            channel.pipeline().fireUserEventTriggered( GateEvent.getFailure() );\n-            channel.close();\n-        }\n-        else\n-        {\n-            try\n-            {\n-                log.info( \"Installing: \" + protocolStack );\n-                protocolInstaller.installerFor( protocolStack ).install( channel );\n-                channel.attr( ReconnectingChannel.PROTOCOL_STACK_KEY ).set( protocolStack );\n-\n-                channel.pipeline().fireUserEventTriggered( GateEvent.getSuccess() );\n-                channel.flush();\n-            }\n-            catch ( Exception e )\n-            {\n-                log.error( \"Error installing pipeline\", e );\n-                channel.close();\n-            }\n-        }\n+      try\n+      {\n+        log.info(\"Installing: \" + protocolStack);\n+        protocolInstaller.installerFor(protocolStack).install(channel);\n+        channel.attr(ReconnectingChannel.PROTOCOL_STACK_KEY).set(protocolStack);\n+\n+        channel.pipeline().fireUserEventTriggered(GateEvent.getSuccess());\n+        channel.flush();\n+      } catch (Exception e)\n+      {\n+        log.error(\"Error installing pipeline\", e);\n+        channel.close();\n+      }\n     }\n+  }\n }\n",
            "diff_size": 152
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "52",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 301).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "66",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 323).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4236/HandshakeClientInitializer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4236/HandshakeClientInitializer.java\nindex fb3afc8647c..0e7300a485c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4236/HandshakeClientInitializer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4236/HandshakeClientInitializer.java\n@@ -49,8 +49,7 @@ public class HandshakeClientInitializer extends ChannelInitializer<SocketChannel\n     private final TimeoutStrategy handshakeDelay;\n     private final Log log;\n \n-    public HandshakeClientInitializer( ApplicationProtocolRepository applicationProtocolRepository, ModifierProtocolRepository modifierProtocolRepository,\n-            ProtocolInstallerRepository<ProtocolInstaller.Orientation.Client> protocolInstallerRepository, NettyPipelineBuilderFactory pipelineBuilderFactory,\n+    public HandshakeClientInitializer( ApplicationProtocolRepository applicationProtocolRepository, ModifierProtocolRepository modifierProtocolRepository, ProtocolInstallerRepository<ProtocolInstaller.Orientation.Client> protocolInstallerRepository, NettyPipelineBuilderFactory pipelineBuilderFactory,\n             Duration handshakeTimeout, LogProvider logProvider )\n     {\n         this.log = logProvider.getLog( getClass() );\n@@ -64,13 +63,7 @@ public class HandshakeClientInitializer extends ChannelInitializer<SocketChannel\n \n     private void installHandlers( Channel channel, HandshakeClient handshakeClient ) throws Exception\n     {\n-        pipelineBuilderFactory.client( channel, log )\n-                .addFraming()\n-                .add( \"handshake_client_encoder\", new ClientMessageEncoder() )\n-                .add( \"handshake_client_decoder\", new ClientMessageDecoder() )\n-                .add( \"handshake_client\", new NettyHandshakeClient( handshakeClient ) )\n-                .addGate( msg -> !(msg instanceof ServerMessage) )\n-                .install();\n+        pipelineBuilderFactory.client( channel, log ).addFraming().add( \"handshake_client_encoder\", new ClientMessageEncoder() ).add( \"handshake_client_decoder\", new ClientMessageDecoder() ).add( \"handshake_client\", new NettyHandshakeClient( handshakeClient ) ).addGate( msg -> !( msg instanceof ServerMessage) ).install();\n     }\n \n     @Override\n@@ -78,8 +71,7 @@ public class HandshakeClientInitializer extends ChannelInitializer<SocketChannel\n     {\n         HandshakeClient handshakeClient = new HandshakeClient();\n         installHandlers( channel, handshakeClient );\n-\n-        log.info( \"Scheduling handshake (and timeout) local %s remote %s\", channel.localAddress(), channel.remoteAddress() );\n+log.info( \"Scheduling handshake (and timeout) local %s remote %s\", channel.localAddress(), channel.remoteAddress() );\n \n         scheduleHandshake( channel, handshakeClient, handshakeDelay.newTimeout() );\n         scheduleTimeout( channel, handshakeClient );\n@@ -110,7 +102,8 @@ public class HandshakeClientInitializer extends ChannelInitializer<SocketChannel\n \n     private void scheduleTimeout( SocketChannel ch, HandshakeClient handshakeClient )\n     {\n-        ch.eventLoop().schedule( () -> {\n+        ch.eventLoop().schedule( () ->\n+{\n             if ( handshakeClient.failIfNotDone( \"Timed out after \" + timeout ) )\n             {\n                 log.warn( \"Failed handshake after timeout\" );\n@@ -121,11 +114,9 @@ public class HandshakeClientInitializer extends ChannelInitializer<SocketChannel\n     private void initiateHandshake( Channel channel, HandshakeClient handshakeClient )\n     {\n         log.info( \"Initiating handshake local %s remote %s\", channel.localAddress(), channel.remoteAddress() );\n-\n-        SimpleNettyChannel channelWrapper = new SimpleNettyChannel( channel, log );\n+SimpleNettyChannel channelWrapper = new SimpleNettyChannel( channel, log );\n         CompletableFuture<ProtocolStack> handshake = handshakeClient.initiate( channelWrapper, applicationProtocolRepository, modifierProtocolRepository );\n-\n-        handshake.whenComplete( ( protocolStack, failure ) -> onHandshakeComplete( protocolStack, channel, failure ) );\n+handshake.whenComplete( ( protocolStack, failure ) -> onHandshakeComplete( protocolStack, channel, failure ) );\n     }\n \n     private void onHandshakeComplete( ProtocolStack protocolStack, Channel channel, Throwable failure )\n@@ -143,8 +134,7 @@ public class HandshakeClientInitializer extends ChannelInitializer<SocketChannel\n                 log.info( \"Installing: \" + protocolStack );\n                 protocolInstaller.installerFor( protocolStack ).install( channel );\n                 channel.attr( ReconnectingChannel.PROTOCOL_STACK_KEY ).set( protocolStack );\n-\n-                channel.pipeline().fireUserEventTriggered( GateEvent.getSuccess() );\n+channel.pipeline().fireUserEventTriggered( GateEvent.getSuccess() );\n                 channel.flush();\n             }\n             catch ( Exception e )\n@@ -154,4 +144,4 @@ public class HandshakeClientInitializer extends ChannelInitializer<SocketChannel\n             }\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 20
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
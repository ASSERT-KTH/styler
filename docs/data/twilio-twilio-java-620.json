{
    "project_name": "twilio-twilio-java",
    "error_id": "620",
    "information": {
        "errors": [
            {
                "line": "291",
                "severity": "error",
                "message": "'if' child has incorrect indentation level 11, expected level should be 12.",
                "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
            }
        ]
    },
    "source_code": "                throw new ApiException(\"Server Error, no content\");\n            }\n           throw new ApiException(restException);\n        }\n\n        return Page.fromJson(",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/620/CallReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler/620/CallReader.java\nindex a79ebf9c96b..6fa757505c4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/620/CallReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler/620/CallReader.java\n@@ -288,7 +288,7 @@ public class CallReader extends Reader<Call> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/620/CallReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/intellij/620/CallReader.java\nindex a79ebf9c96b..f85e4cb604e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/620/CallReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/intellij/620/CallReader.java\n@@ -1,8 +1,8 @@\n /**\n  * This code was generated by\n  * \\ / _    _  _|   _  _\n- *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n- *       /       /\n+ * | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n+ * /       /\n  */\n \n package com.twilio.rest.api.v2010.account;\n@@ -288,7 +288,7 @@ public class CallReader extends Reader<Call> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 3
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/620/CallReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/codebuff/620/CallReader.java\nindex a79ebf9c96b..741280d958e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/620/CallReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/codebuff/620/CallReader.java\n@@ -37,6 +37,8 @@ public class CallReader extends Reader<Call> {\n     /**\n      * Construct a new CallReader.\n      */\n+\n+\n     public CallReader() {\n     }\n \n@@ -46,6 +48,8 @@ public class CallReader extends Reader<Call> {\n      * @param pathAccountSid The SID of the Account that created the resource(s) to\n      *                       read\n      */\n+\n+\n     public CallReader(final String pathAccountSid) {\n         this.pathAccountSid = pathAccountSid;\n     }\n@@ -57,6 +61,8 @@ public class CallReader extends Reader<Call> {\n      * @param to Phone number or Client identifier of calls to include\n      * @return this\n      */\n+\n+\n     public CallReader setTo(final com.twilio.type.PhoneNumber to) {\n         this.to = to;\n         return this;\n@@ -69,6 +75,8 @@ public class CallReader extends Reader<Call> {\n      * @param to Phone number or Client identifier of calls to include\n      * @return this\n      */\n+\n+\n     public CallReader setTo(final String to) {\n         return setTo(Promoter.phoneNumberFromString(to));\n     }\n@@ -80,6 +88,8 @@ public class CallReader extends Reader<Call> {\n      * @param from Phone number or Client identifier to filter `from` on\n      * @return this\n      */\n+\n+\n     public CallReader setFrom(final com.twilio.type.PhoneNumber from) {\n         this.from = from;\n         return this;\n@@ -92,6 +102,8 @@ public class CallReader extends Reader<Call> {\n      * @param from Phone number or Client identifier to filter `from` on\n      * @return this\n      */\n+\n+\n     public CallReader setFrom(final String from) {\n         return setFrom(Promoter.phoneNumberFromString(from));\n     }\n@@ -102,6 +114,8 @@ public class CallReader extends Reader<Call> {\n      * @param parentCallSid Parent call SID to filter on\n      * @return this\n      */\n+\n+\n     public CallReader setParentCallSid(final String parentCallSid) {\n         this.parentCallSid = parentCallSid;\n         return this;\n@@ -114,6 +128,8 @@ public class CallReader extends Reader<Call> {\n      * @param status The status of the resources to read\n      * @return this\n      */\n+\n+\n     public CallReader setStatus(final Call.Status status) {\n         this.status = status;\n         return this;\n@@ -130,6 +146,8 @@ public class CallReader extends Reader<Call> {\n      * @param absoluteStartTime Only include calls that started on this date\n      * @return this\n      */\n+\n+\n     public CallReader setStartTime(final DateTime absoluteStartTime) {\n         this.rangeStartTime = null;\n         this.absoluteStartTime = absoluteStartTime;\n@@ -147,6 +165,8 @@ public class CallReader extends Reader<Call> {\n      * @param rangeStartTime Only include calls that started on this date\n      * @return this\n      */\n+\n+\n     public CallReader setStartTime(final Range<DateTime> rangeStartTime) {\n         this.absoluteStartTime = null;\n         this.rangeStartTime = rangeStartTime;\n@@ -164,6 +184,8 @@ public class CallReader extends Reader<Call> {\n      * @param absoluteEndTime Only include calls that ended on this date\n      * @return this\n      */\n+\n+\n     public CallReader setEndTime(final DateTime absoluteEndTime) {\n         this.rangeEndTime = null;\n         this.absoluteEndTime = absoluteEndTime;\n@@ -181,6 +203,8 @@ public class CallReader extends Reader<Call> {\n      * @param rangeEndTime Only include calls that ended on this date\n      * @return this\n      */\n+\n+\n     public CallReader setEndTime(final Range<DateTime> rangeEndTime) {\n         this.absoluteEndTime = null;\n         this.rangeEndTime = rangeEndTime;\n@@ -193,6 +217,7 @@ public class CallReader extends Reader<Call> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Call ResourceSet\n      */\n+\n     @Override\n     public ResourceSet<Call> read(final TwilioRestClient client) {\n         return new ResourceSet<>(this, client, firstPage(client));\n@@ -204,14 +229,15 @@ public class CallReader extends Reader<Call> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Call ResourceSet\n      */\n+\n     @Override\n     @SuppressWarnings(\"checkstyle:linelength\")\n     public Page<Call> firstPage(final TwilioRestClient client) {\n         this.pathAccountSid = this.pathAccountSid == null ? client.getAccountSid() : this.pathAccountSid;\n         Request request = new Request(\n-            HttpMethod.GET,\n-            Domains.API.toString(),\n-            \"/2010-04-01/Accounts/\" + this.pathAccountSid + \"/Calls.json\"\n+                              HttpMethod.GET,\n+                              Domains.API.toString(),\n+                              \"/2010-04-01/Accounts/\" + this.pathAccountSid + \"/Calls.json\"\n         );\n \n         addQueryParams(request);\n@@ -225,15 +251,13 @@ public class CallReader extends Reader<Call> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Call ResourceSet\n      */\n+\n     @Override\n     @SuppressWarnings(\"checkstyle:linelength\")\n-    public Page<Call> getPage(final String targetUrl, final TwilioRestClient client) {\n+    public Page<Call> getPage(final String targetUrl,\n+                              final TwilioRestClient client) {\n         this.pathAccountSid = this.pathAccountSid == null ? client.getAccountSid() : this.pathAccountSid;\n-        Request request = new Request(\n-            HttpMethod.GET,\n-            targetUrl\n-        );\n-\n+        Request request = new Request(HttpMethod.GET, targetUrl);\n         return pageForRequest(client, request);\n     }\n \n@@ -244,13 +268,11 @@ public class CallReader extends Reader<Call> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Next Page\n      */\n+\n     @Override\n     public Page<Call> nextPage(final Page<Call> page,\n                                final TwilioRestClient client) {\n-        Request request = new Request(\n-            HttpMethod.GET,\n-            page.getNextPageUrl(Domains.API.toString())\n-        );\n+        Request request = new Request(HttpMethod.GET, page.getNextPageUrl(Domains.API.toString()));\n         return pageForRequest(client, request);\n     }\n \n@@ -261,13 +283,11 @@ public class CallReader extends Reader<Call> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Previous Page\n      */\n+\n     @Override\n     public Page<Call> previousPage(final Page<Call> page,\n                                    final TwilioRestClient client) {\n-        Request request = new Request(\n-            HttpMethod.GET,\n-            page.getPreviousPageUrl(Domains.API.toString())\n-        );\n+        Request request = new Request(HttpMethod.GET, page.getPreviousPageUrl(Domains.API.toString()));\n         return pageForRequest(client, request);\n     }\n \n@@ -278,9 +298,11 @@ public class CallReader extends Reader<Call> {\n      * @param request Request to generate a page for\n      * @return Page for the Request\n      */\n-    private Page<Call> pageForRequest(final TwilioRestClient client, final Request request) {\n-        Response response = client.request(request);\n \n+\n+    private Page<Call> pageForRequest(final TwilioRestClient client,\n+                                      final Request request) {\n+        Response response = client.request(request);\n         if (response == null) {\n             throw new ApiConnectionException(\"Call read failed: Unable to connect to server\");\n         } else if (!TwilioRestClient.SUCCESS.apply(response.getStatusCode())) {\n@@ -288,15 +310,11 @@ public class CallReader extends Reader<Call> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+\n+            throw new ApiException(restException);\n         }\n \n-        return Page.fromJson(\n-            \"calls\",\n-            response.getContent(),\n-            Call.class,\n-            client.getObjectMapper()\n-        );\n+        return Page.fromJson(\"calls\", response.getContent(), Call.class, client.getObjectMapper());\n     }\n \n     /**\n@@ -304,6 +322,8 @@ public class CallReader extends Reader<Call> {\n      *\n      * @param request Request to add query string arguments to\n      */\n+\n+\n     private void addQueryParams(final Request request) {\n         if (to != null) {\n             request.addQueryParam(\"To\", to.toString());\n@@ -322,7 +342,8 @@ public class CallReader extends Reader<Call> {\n         }\n \n         if (absoluteStartTime != null) {\n-            request.addQueryParam(\"StartTime\", absoluteStartTime.toString(Request.QUERY_STRING_DATE_TIME_FORMAT));\n+            request.addQueryParam(\"StartTime\",\n+                                  absoluteStartTime.toString(Request.QUERY_STRING_DATE_TIME_FORMAT));\n         } else if (rangeStartTime != null) {\n             request.addQueryDateTimeRange(\"StartTime\", rangeStartTime);\n         }\n",
            "diff_size": 65
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/620/CallReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler_random/620/CallReader.java\nindex a79ebf9c96b..6fa757505c4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/620/CallReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler_random/620/CallReader.java\n@@ -288,7 +288,7 @@ public class CallReader extends Reader<Call> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/620/CallReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler_three_grams/620/CallReader.java\nindex a79ebf9c96b..f12cb850a40 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/620/CallReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler_three_grams/620/CallReader.java\n@@ -288,7 +288,8 @@ public class CallReader extends Reader<Call> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize"
    ]
}
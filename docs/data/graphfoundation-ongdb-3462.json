{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3462",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "60",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3462/NodeValueIndexCursor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3462/NodeValueIndexCursor.java\nindex 221f8480773..6ccfe43dc69 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3462/NodeValueIndexCursor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3462/NodeValueIndexCursor.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.internal.kernel.api;\n \n import org.neo4j.values.storable.Value;\n@@ -29,7 +30,7 @@ import static org.neo4j.values.storable.Values.NO_VALUE;\n  * Usage pattern:\n  * <pre><code>\n  *     int nbrOfProps = cursor.numberOfProperties();\n-\n+ *\n  *     Value[] values = new Value[nbrOfProps];\n  *     while ( cursor.next() )\n  *     {\n@@ -51,80 +52,80 @@ import static org.neo4j.values.storable.Values.NO_VALUE;\n  */\n public interface NodeValueIndexCursor extends NodeIndexCursor\n {\n-    /**\n-     * @return the number of properties accessible within the index, and thus from this cursor.\n-     */\n-    int numberOfProperties();\n+  /**\n+   * @return the number of properties accessible within the index, and thus from this cursor.\n+   */\n+  int numberOfProperties();\n+\n+  int propertyKey(int offset);\n \n-    int propertyKey( int offset );\n+  /**\n+   * Check before trying to access values with {@link #propertyValue(int)}. Result can change with each call to {@link #next()}.\n+   *\n+   * @return {@code true} if {@link #propertyValue(int)} can be used to get property value on cursor's current location,\n+   * else {@code false}.\n+   */\n+  boolean hasValue();\n \n-    /**\n-     * Check before trying to access values with {@link #propertyValue(int)}. Result can change with each call to {@link #next()}.\n-     *\n-     * @return {@code true} if {@link #propertyValue(int)} can be used to get property value on cursor's current location,\n-     * else {@code false}.\n-     */\n-    boolean hasValue();\n+  Value propertyValue(int offset);\n \n-    Value propertyValue( int offset );\n+  class Empty implements NodeValueIndexCursor\n+  {\n \n-    class Empty implements NodeValueIndexCursor\n+    @Override\n+    public void node(NodeCursor cursor)\n     {\n \n-        @Override\n-        public void node( NodeCursor cursor )\n-        {\n-\n-        }\n-\n-        @Override\n-        public long nodeReference()\n-        {\n-            return -1L;\n-        }\n-\n-        @Override\n-        public boolean next()\n-        {\n-            return false;\n-        }\n-\n-        @Override\n-        public void close()\n-        {\n-\n-        }\n-\n-        @Override\n-        public boolean isClosed()\n-        {\n-            return false;\n-        }\n-\n-        @Override\n-        public int numberOfProperties()\n-        {\n-            return 0;\n-        }\n-\n-        @Override\n-        public int propertyKey( int offset )\n-        {\n-            return -1;\n-        }\n-\n-        @Override\n-        public boolean hasValue()\n-        {\n-            return false;\n-        }\n-\n-        @Override\n-        public Value propertyValue( int offset )\n-        {\n-            return NO_VALUE;\n-        }\n     }\n \n-    NodeValueIndexCursor EMPTY = new Empty();\n+    @Override\n+    public long nodeReference()\n+    {\n+      return -1L;\n+    }\n+\n+    @Override\n+    public boolean next()\n+    {\n+      return false;\n+    }\n+\n+    @Override\n+    public void close()\n+    {\n+\n+    }\n+\n+    @Override\n+    public boolean isClosed()\n+    {\n+      return false;\n+    }\n+\n+    @Override\n+    public int numberOfProperties()\n+    {\n+      return 0;\n+    }\n+\n+    @Override\n+    public int propertyKey(int offset)\n+    {\n+      return -1;\n+    }\n+\n+    @Override\n+    public boolean hasValue()\n+    {\n+      return false;\n+    }\n+\n+    @Override\n+    public Value propertyValue(int offset)\n+    {\n+      return NO_VALUE;\n+    }\n+  }\n+\n+  NodeValueIndexCursor EMPTY = new Empty();\n }\n",
            "diff_size": 129
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3462/NodeValueIndexCursor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3462/NodeValueIndexCursor.java\nindex 221f8480773..c935dd1b990 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3462/NodeValueIndexCursor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3462/NodeValueIndexCursor.java\n@@ -70,12 +70,10 @@ public interface NodeValueIndexCursor extends NodeIndexCursor\n \n     class Empty implements NodeValueIndexCursor\n     {\n-\n-        @Override\n+    @Override\n         public void node( NodeCursor cursor )\n         {\n-\n-        }\n+}\n \n         @Override\n         public long nodeReference()\n@@ -92,8 +90,7 @@ public interface NodeValueIndexCursor extends NodeIndexCursor\n         @Override\n         public void close()\n         {\n-\n-        }\n+}\n \n         @Override\n         public boolean isClosed()\n@@ -127,4 +124,4 @@ public interface NodeValueIndexCursor extends NodeIndexCursor\n     }\n \n     NodeValueIndexCursor EMPTY = new Empty();\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
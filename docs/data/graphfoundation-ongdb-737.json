{
    "project_name": "graphfoundation-ongdb",
    "error_id": "737",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "39",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "16",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "19",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "150",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "150",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "200",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "200",
                    "column": "16",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "202",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "202",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "206",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "206",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "208",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "208",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "215",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "215",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "217",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "217",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "221",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "226",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "226",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/737/DeferringLockClient.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/737/DeferringLockClient.java\nindex e084e305958..4e60111f15c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/737/DeferringLockClient.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/737/DeferringLockClient.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.locking;\n \n import org.apache.commons.lang3.mutable.MutableInt;\n@@ -31,201 +32,200 @@ import org.neo4j.storageengine.api.lock.ResourceType;\n \n public class DeferringLockClient implements Locks.Client\n {\n-    private final Locks.Client clientDelegate;\n-    private final Map<LockUnit,MutableInt> locks = new TreeMap<>();\n-    private volatile boolean stopped;\n-\n-    public DeferringLockClient( Locks.Client clientDelegate )\n-    {\n-        this.clientDelegate = clientDelegate;\n-    }\n-\n-    @Override\n-    public void acquireShared( LockTracer tracer, ResourceType resourceType, long... resourceIds ) throws AcquireLockTimeoutException\n-    {\n-        assertNotStopped();\n-\n-        for ( long resourceId : resourceIds )\n-        {\n-            addLock( resourceType, resourceId, false );\n-        }\n-    }\n-\n-    @Override\n-    public void acquireExclusive( LockTracer tracer, ResourceType resourceType, long... resourceIds )\n-            throws AcquireLockTimeoutException\n-    {\n-        assertNotStopped();\n-\n-        for ( long resourceId : resourceIds )\n-        {\n-            addLock( resourceType, resourceId, true );\n-        }\n-    }\n-\n-    @Override\n-    public boolean tryExclusiveLock( ResourceType resourceType, long resourceId )\n-    {\n-        throw new UnsupportedOperationException( \"Should not be needed\" );\n-    }\n-\n-    @Override\n-    public boolean trySharedLock( ResourceType resourceType, long resourceId )\n-    {\n-        throw new UnsupportedOperationException( \"Should not be needed\" );\n-    }\n-\n-    @Override\n-    public boolean reEnterShared( ResourceType resourceType, long resourceId )\n-    {\n-        throw new UnsupportedOperationException( \"Should not be needed\" );\n-    }\n-\n-    @Override\n-    public boolean reEnterExclusive( ResourceType resourceType, long resourceId )\n-    {\n-        throw new UnsupportedOperationException( \"Should not be needed\" );\n-    }\n-\n-    @Override\n-    public void releaseShared( ResourceType resourceType, long... resourceIds )\n-    {\n-        assertNotStopped();\n-        for ( long resourceId : resourceIds )\n-        {\n-            removeLock( resourceType, resourceId, false );\n-        }\n-\n-    }\n-\n-    @Override\n-    public void releaseExclusive( ResourceType resourceType, long... resourceIds )\n-    {\n-        assertNotStopped();\n-        for ( long resourceId : resourceIds )\n-        {\n-            removeLock( resourceType, resourceId, true );\n-        }\n-    }\n+  private final Locks.Client clientDelegate;\n+  private final Map<LockUnit, MutableInt> locks = new TreeMap<>();\n+  private volatile boolean stopped;\n+\n+  public DeferringLockClient(Locks.Client clientDelegate)\n+  {\n+    this.clientDelegate = clientDelegate;\n+  }\n \n-    void acquireDeferredLocks( LockTracer lockTracer )\n-    {\n-        assertNotStopped();\n-\n-        long[] current = new long[10];\n-        int cursor = 0;\n-        ResourceType currentType = null;\n-        boolean currentExclusive = false;\n-        for ( LockUnit lockUnit : locks.keySet() )\n-        {\n-            if ( currentType == null ||\n-                 (currentType.typeId() != lockUnit.resourceType().typeId() ||\n-                  currentExclusive != lockUnit.isExclusive()) )\n-            {\n-                // New type, i.e. flush the current array down to delegate in one call\n-                flushLocks( lockTracer, current, cursor, currentType, currentExclusive );\n-\n-                cursor = 0;\n-                currentType = lockUnit.resourceType();\n-                currentExclusive = lockUnit.isExclusive();\n-            }\n-\n-            // Queue into current batch\n-            if ( cursor == current.length )\n-            {\n-                current = Arrays.copyOf( current, cursor * 2 );\n-            }\n-            current[cursor++] = lockUnit.resourceId();\n-        }\n-        flushLocks( lockTracer, current, cursor, currentType, currentExclusive );\n-    }\n-\n-    private void flushLocks( LockTracer lockTracer, long[] current, int cursor, ResourceType currentType, boolean\n-            exclusive )\n-    {\n-        if ( cursor > 0 )\n-        {\n-            long[] resourceIds = Arrays.copyOf( current, cursor );\n-            if ( exclusive )\n-            {\n-                clientDelegate.acquireExclusive( lockTracer, currentType, resourceIds );\n-            }\n-            else\n-            {\n-                clientDelegate.acquireShared( lockTracer, currentType, resourceIds );\n-            }\n-        }\n-    }\n-\n-    @Override\n-    public void prepare()\n-    {\n-        clientDelegate.prepare();\n-    }\n+  @Override\n+  public void acquireShared(LockTracer tracer, ResourceType resourceType, long... resourceIds) throws AcquireLockTimeoutException\n+  {\n+    assertNotStopped();\n \n-    @Override\n-    public void stop()\n-    {\n-        stopped = true;\n-        clientDelegate.stop();\n-    }\n-\n-    @Override\n-    public void close()\n-    {\n-        stopped = true;\n-        clientDelegate.close();\n-    }\n-\n-    @Override\n-    public int getLockSessionId()\n-    {\n-        return clientDelegate.getLockSessionId();\n-    }\n-\n-    @Override\n-    public Stream<? extends ActiveLock> activeLocks()\n-    {\n-        return locks.keySet().stream();\n-    }\n-\n-    @Override\n-    public long activeLockCount()\n-    {\n-        return locks.size();\n-    }\n-\n-    private void assertNotStopped()\n-    {\n-        if ( stopped )\n-        {\n-            throw new LockClientStoppedException( this );\n-        }\n-    }\n-\n-    private void addLock( ResourceType resourceType, long resourceId, boolean exclusive )\n-    {\n-        LockUnit lockUnit = new LockUnit( resourceType, resourceId, exclusive );\n-        MutableInt lockCount = locks.computeIfAbsent( lockUnit, k -> new MutableInt() );\n-        lockCount.increment();\n-    }\n-\n-    private void removeLock( ResourceType resourceType, long resourceId, boolean exclusive )\n-    {\n-        LockUnit lockUnit = new LockUnit( resourceType, resourceId, exclusive );\n-        MutableInt lockCount = locks.get( lockUnit );\n-        if ( lockCount == null )\n-        {\n-            throw new IllegalStateException(\n-                    \"Cannot release \" + (exclusive ? \"exclusive\" : \"shared\") + \" lock that it \" +\n-                    \"does not hold: \" + resourceType + \"[\" + resourceId + \"].\" );\n-        }\n-\n-        lockCount.decrement();\n-\n-        if ( lockCount.intValue() == 0 )\n-        {\n-            locks.remove( lockUnit );\n-        }\n-    }\n+    for (long resourceId : resourceIds)\n+    {\n+      addLock(resourceType, resourceId, false);\n+    }\n+  }\n+\n+  @Override\n+  public void acquireExclusive(LockTracer tracer, ResourceType resourceType, long... resourceIds)\n+      throws AcquireLockTimeoutException\n+  {\n+    assertNotStopped();\n+\n+    for (long resourceId : resourceIds)\n+    {\n+      addLock(resourceType, resourceId, true);\n+    }\n+  }\n+\n+  @Override\n+  public boolean tryExclusiveLock(ResourceType resourceType, long resourceId)\n+  {\n+    throw new UnsupportedOperationException(\"Should not be needed\");\n+  }\n+\n+  @Override\n+  public boolean trySharedLock(ResourceType resourceType, long resourceId)\n+  {\n+    throw new UnsupportedOperationException(\"Should not be needed\");\n+  }\n+\n+  @Override\n+  public boolean reEnterShared(ResourceType resourceType, long resourceId)\n+  {\n+    throw new UnsupportedOperationException(\"Should not be needed\");\n+  }\n+\n+  @Override\n+  public boolean reEnterExclusive(ResourceType resourceType, long resourceId)\n+  {\n+    throw new UnsupportedOperationException(\"Should not be needed\");\n+  }\n+\n+  @Override\n+  public void releaseShared(ResourceType resourceType, long... resourceIds)\n+  {\n+    assertNotStopped();\n+    for (long resourceId : resourceIds)\n+    {\n+      removeLock(resourceType, resourceId, false);\n+    }\n+\n+  }\n+\n+  @Override\n+  public void releaseExclusive(ResourceType resourceType, long... resourceIds)\n+  {\n+    assertNotStopped();\n+    for (long resourceId : resourceIds)\n+    {\n+      removeLock(resourceType, resourceId, true);\n+    }\n+  }\n+\n+  void acquireDeferredLocks(LockTracer lockTracer)\n+  {\n+    assertNotStopped();\n+\n+    long[] current = new long[10];\n+    int cursor = 0;\n+    ResourceType currentType = null;\n+    boolean currentExclusive = false;\n+    for (LockUnit lockUnit : locks.keySet())\n+    {\n+      if (currentType == null ||\n+          (currentType.typeId() != lockUnit.resourceType().typeId() ||\n+              currentExclusive != lockUnit.isExclusive()))\n+      {\n+        // New type, i.e. flush the current array down to delegate in one call\n+        flushLocks(lockTracer, current, cursor, currentType, currentExclusive);\n+\n+        cursor = 0;\n+        currentType = lockUnit.resourceType();\n+        currentExclusive = lockUnit.isExclusive();\n+      }\n+\n+      // Queue into current batch\n+      if (cursor == current.length)\n+      {\n+        current = Arrays.copyOf(current, cursor * 2);\n+      }\n+      current[cursor++] = lockUnit.resourceId();\n+    }\n+    flushLocks(lockTracer, current, cursor, currentType, currentExclusive);\n+  }\n+\n+  private void flushLocks(LockTracer lockTracer, long[] current, int cursor, ResourceType currentType, boolean\n+      exclusive)\n+  {\n+    if (cursor > 0)\n+    {\n+      long[] resourceIds = Arrays.copyOf(current, cursor);\n+      if (exclusive)\n+      {\n+        clientDelegate.acquireExclusive(lockTracer, currentType, resourceIds);\n+      } else\n+      {\n+        clientDelegate.acquireShared(lockTracer, currentType, resourceIds);\n+      }\n+    }\n+  }\n+\n+  @Override\n+  public void prepare()\n+  {\n+    clientDelegate.prepare();\n+  }\n+\n+  @Override\n+  public void stop()\n+  {\n+    stopped = true;\n+    clientDelegate.stop();\n+  }\n+\n+  @Override\n+  public void close()\n+  {\n+    stopped = true;\n+    clientDelegate.close();\n+  }\n+\n+  @Override\n+  public int getLockSessionId()\n+  {\n+    return clientDelegate.getLockSessionId();\n+  }\n+\n+  @Override\n+  public Stream<? extends ActiveLock> activeLocks()\n+  {\n+    return locks.keySet().stream();\n+  }\n+\n+  @Override\n+  public long activeLockCount()\n+  {\n+    return locks.size();\n+  }\n+\n+  private void assertNotStopped()\n+  {\n+    if (stopped)\n+    {\n+      throw new LockClientStoppedException(this);\n+    }\n+  }\n+\n+  private void addLock(ResourceType resourceType, long resourceId, boolean exclusive)\n+  {\n+    LockUnit lockUnit = new LockUnit(resourceType, resourceId, exclusive);\n+    MutableInt lockCount = locks.computeIfAbsent(lockUnit, k -> new MutableInt());\n+    lockCount.increment();\n+  }\n+\n+  private void removeLock(ResourceType resourceType, long resourceId, boolean exclusive)\n+  {\n+    LockUnit lockUnit = new LockUnit(resourceType, resourceId, exclusive);\n+    MutableInt lockCount = locks.get(lockUnit);\n+    if (lockCount == null)\n+    {\n+      throw new IllegalStateException(\n+          \"Cannot release \" + (exclusive ? \"exclusive\" : \"shared\") + \" lock that it \" +\n+              \"does not hold: \" + resourceType + \"[\" + resourceId + \"].\");\n+    }\n+\n+    lockCount.decrement();\n+\n+    if (lockCount.intValue() == 0)\n+    {\n+      locks.remove(lockUnit);\n+    }\n+  }\n }\n",
            "diff_size": 313
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "214",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 185).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/737/DeferringLockClient.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/737/DeferringLockClient.java\nindex e084e305958..af18bc9bdea 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/737/DeferringLockClient.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/737/DeferringLockClient.java\n@@ -44,20 +44,17 @@ public class DeferringLockClient implements Locks.Client\n     public void acquireShared( LockTracer tracer, ResourceType resourceType, long... resourceIds ) throws AcquireLockTimeoutException\n     {\n         assertNotStopped();\n-\n-        for ( long resourceId : resourceIds )\n+for ( long resourceId : resourceIds )\n         {\n             addLock( resourceType, resourceId, false );\n         }\n     }\n \n     @Override\n-    public void acquireExclusive( LockTracer tracer, ResourceType resourceType, long... resourceIds )\n-            throws AcquireLockTimeoutException\n-    {\n+    public void acquireExclusive( LockTracer tracer, ResourceType resourceType, long... resourceIds ) throws AcquireLockTimeoutException\n+{\n         assertNotStopped();\n-\n-        for ( long resourceId : resourceIds )\n+for ( long resourceId : resourceIds )\n         {\n             addLock( resourceType, resourceId, true );\n         }\n@@ -95,7 +92,6 @@ public class DeferringLockClient implements Locks.Client\n         {\n             removeLock( resourceType, resourceId, false );\n         }\n-\n     }\n \n     @Override\n@@ -118,14 +114,11 @@ public class DeferringLockClient implements Locks.Client\n         boolean currentExclusive = false;\n         for ( LockUnit lockUnit : locks.keySet() )\n         {\n-            if ( currentType == null ||\n-                 (currentType.typeId() != lockUnit.resourceType().typeId() ||\n-                  currentExclusive != lockUnit.isExclusive()) )\n-            {\n+            if ( currentType == null || (currentType.typeId() != lockUnit.resourceType().typeId() || currentExclusive != lockUnit.isExclusive()) )\n+{\n                 // New type, i.e. flush the current array down to delegate in one call\n                 flushLocks( lockTracer, current, cursor, currentType, currentExclusive );\n-\n-                cursor = 0;\n+cursor = 0;\n                 currentType = lockUnit.resourceType();\n                 currentExclusive = lockUnit.isExclusive();\n             }\n@@ -135,9 +128,11 @@ public class DeferringLockClient implements Locks.Client\n             {\n                 current = Arrays.copyOf( current, cursor * 2 );\n             }\n-            current[cursor++] = lockUnit.resourceId();\n+\n+current[cursor++] = lockUnit.resourceId();\n         }\n-        flushLocks( lockTracer, current, cursor, currentType, currentExclusive );\n+\n+flushLocks( lockTracer, current, cursor, currentType, currentExclusive );\n     }\n \n     private void flushLocks( LockTracer lockTracer, long[] current, int cursor, ResourceType currentType, boolean\n@@ -216,16 +211,13 @@ public class DeferringLockClient implements Locks.Client\n         MutableInt lockCount = locks.get( lockUnit );\n         if ( lockCount == null )\n         {\n-            throw new IllegalStateException(\n-                    \"Cannot release \" + (exclusive ? \"exclusive\" : \"shared\") + \" lock that it \" +\n-                    \"does not hold: \" + resourceType + \"[\" + resourceId + \"].\" );\n+            throw new IllegalStateException( \"Cannot release \" + ( exclusive ? \"exclusive\" : \"shared\") + \" lock that it \" + \"does not hold: \" + resourceType + \"[\" + resourceId + \"].\" );\n         }\n \n         lockCount.decrement();\n-\n-        if ( lockCount.intValue() == 0 )\n+if ( lockCount.intValue() == 0 )\n         {\n             locks.remove( lockUnit );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 24
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "45",
                    "column": "9",
                    "severity": "error",
                    "message": "'for' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "45",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "9",
                    "severity": "error",
                    "message": "'for' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "55",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "9",
                    "severity": "error",
                    "message": "'for' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "89",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "9",
                    "severity": "error",
                    "message": "'for' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "99",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "9",
                    "severity": "error",
                    "message": "'for' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "115",
                    "column": "37",
                    "severity": "error",
                    "message": "'||' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "115",
                    "column": "98",
                    "severity": "error",
                    "message": "'||' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "128",
                    "column": "57",
                    "severity": "error",
                    "message": "'*' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "212",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 184).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "212",
                    "column": "157",
                    "severity": "error",
                    "message": "'+' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/737/DeferringLockClient.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/737/DeferringLockClient.java\nindex e084e305958..08558d129b0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/737/DeferringLockClient.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/737/DeferringLockClient.java\n@@ -20,12 +20,10 @@\n package org.neo4j.kernel.impl.locking;\n \n import org.apache.commons.lang3.mutable.MutableInt;\n-\n import java.util.Arrays;\n import java.util.Map;\n import java.util.TreeMap;\n import java.util.stream.Stream;\n-\n import org.neo4j.storageengine.api.lock.AcquireLockTimeoutException;\n import org.neo4j.storageengine.api.lock.ResourceType;\n \n@@ -44,20 +42,17 @@ public class DeferringLockClient implements Locks.Client\n     public void acquireShared( LockTracer tracer, ResourceType resourceType, long... resourceIds ) throws AcquireLockTimeoutException\n     {\n         assertNotStopped();\n-\n-        for ( long resourceId : resourceIds )\n+        for( long resourceId : resourceIds)\n         {\n             addLock( resourceType, resourceId, false );\n         }\n     }\n \n     @Override\n-    public void acquireExclusive( LockTracer tracer, ResourceType resourceType, long... resourceIds )\n-            throws AcquireLockTimeoutException\n+    public void acquireExclusive( LockTracer tracer, ResourceType resourceType, long... resourceIds ) throws AcquireLockTimeoutException\n     {\n         assertNotStopped();\n-\n-        for ( long resourceId : resourceIds )\n+        for( long resourceId : resourceIds)\n         {\n             addLock( resourceType, resourceId, true );\n         }\n@@ -91,18 +86,17 @@ public class DeferringLockClient implements Locks.Client\n     public void releaseShared( ResourceType resourceType, long... resourceIds )\n     {\n         assertNotStopped();\n-        for ( long resourceId : resourceIds )\n+        for( long resourceId : resourceIds)\n         {\n             removeLock( resourceType, resourceId, false );\n         }\n-\n     }\n \n     @Override\n     public void releaseExclusive( ResourceType resourceType, long... resourceIds )\n     {\n         assertNotStopped();\n-        for ( long resourceId : resourceIds )\n+        for( long resourceId : resourceIds)\n         {\n             removeLock( resourceType, resourceId, true );\n         }\n@@ -111,37 +105,36 @@ public class DeferringLockClient implements Locks.Client\n     void acquireDeferredLocks( LockTracer lockTracer )\n     {\n         assertNotStopped();\n-\n         long[] current = new long[10];\n         int cursor = 0;\n         ResourceType currentType = null;\n         boolean currentExclusive = false;\n-        for ( LockUnit lockUnit : locks.keySet() )\n+        for( LockUnit lockUnit : locks.keySet()\n+        )\n         {\n-            if ( currentType == null ||\n-                 (currentType.typeId() != lockUnit.resourceType().typeId() ||\n-                  currentExclusive != lockUnit.isExclusive()) )\n+            if ( currentType == null|| ( currentType.typeId() != lockUnit.resourceType().typeId()|| currentExclusive != lockUnit.isExclusive()) )\n             {\n                 // New type, i.e. flush the current array down to delegate in one call\n                 flushLocks( lockTracer, current, cursor, currentType, currentExclusive );\n-\n                 cursor = 0;\n                 currentType = lockUnit.resourceType();\n                 currentExclusive = lockUnit.isExclusive();\n             }\n \n             // Queue into current batch\n+\n             if ( cursor == current.length )\n             {\n-                current = Arrays.copyOf( current, cursor * 2 );\n+                current = Arrays.copyOf( current, cursor* 2 );\n             }\n-            current[cursor++] = lockUnit.resourceId();\n+\n+            current[cursor ++] = lockUnit.resourceId();\n         }\n+\n         flushLocks( lockTracer, current, cursor, currentType, currentExclusive );\n     }\n \n-    private void flushLocks( LockTracer lockTracer, long[] current, int cursor, ResourceType currentType, boolean\n-            exclusive )\n+    private void flushLocks( LockTracer lockTracer, long[] current, int cursor, ResourceType currentType, boolean exclusive )\n     {\n         if ( cursor > 0 )\n         {\n@@ -216,16 +209,13 @@ public class DeferringLockClient implements Locks.Client\n         MutableInt lockCount = locks.get( lockUnit );\n         if ( lockCount == null )\n         {\n-            throw new IllegalStateException(\n-                    \"Cannot release \" + (exclusive ? \"exclusive\" : \"shared\") + \" lock that it \" +\n-                    \"does not hold: \" + resourceType + \"[\" + resourceId + \"].\" );\n+            throw new IllegalStateException( \"Cannot release \" + ( exclusive ? \"exclusive\" : \"shared\") + \" lock that it \" + \"does not hold: \" + resourceType+ \"[\" + resourceId + \"].\" );\n         }\n \n         lockCount.decrement();\n-\n         if ( lockCount.intValue() == 0 )\n         {\n             locks.remove( lockUnit );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 30
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "couchbase-couchbase-jvm-core",
    "error_id": "56",
    "information": {
        "errors": [
            {
                "line": "54",
                "severity": "warning",
                "message": "Line is longer than 120 characters (found 136).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "     * <li>Key and value pairs in JSON documents, or the key exclusively\n     * <li>Application/Admin usernames that identify the human person\n     * <li>Query statements included in the log file collected by support that leak the document fields (Select floor_price from stock).\n     * <li>Names and email addresses asked during product registration and alerting\n     * <li>Usernames\n     * <li>Document xattrs",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "54",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 136).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "54",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 136).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/56/RedactableArgument.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/intellij/56/RedactableArgument.java\nindex c4205bf92c7..db1e589160a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/56/RedactableArgument.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/intellij/56/RedactableArgument.java\n@@ -37,7 +37,7 @@ public class RedactableArgument {\n     /**\n      * Creates a new {@link RedactableArgument}.\n      *\n-     * @param type type of the redactable argument.\n+     * @param type    type of the redactable argument.\n      * @param message message of the redactable argument.\n      */\n     private RedactableArgument(final ArgumentType type, final String message) {\n",
            "diff_size": 1
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "54",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 136).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/56/RedactableArgument.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/naturalize/56/RedactableArgument.java\nindex c4205bf92c7..414e227884b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/56/RedactableArgument.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/naturalize/56/RedactableArgument.java\n@@ -143,4 +143,4 @@ public class RedactableArgument {\n         SYSTEM\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "58",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 136).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/56/RedactableArgument.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/codebuff/56/RedactableArgument.java\nindex c4205bf92c7..03009451e81 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/56/RedactableArgument.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/codebuff/56/RedactableArgument.java\n@@ -22,11 +22,14 @@ package com.couchbase.client.core.logging;\n  * @author Michael Nitschinger\n  * @since 1.5.3\n  */\n+\n+\n public class RedactableArgument {\n \n     /**\n      * The type of the redactable argument.\n      */\n+\n     private final ArgumentType type;\n \n     /**\n@@ -40,6 +43,7 @@ public class RedactableArgument {\n      * @param type type of the redactable argument.\n      * @param message message of the redactable argument.\n      */\n+\n     private RedactableArgument(final ArgumentType type, final String message) {\n         this.type = type;\n         this.message = message;\n@@ -60,6 +64,7 @@ public class RedactableArgument {\n      * @param message the message to redact.\n      * @return a new {@link RedactableArgument}.\n      */\n+\n     public static RedactableArgument user(final String message) {\n         return new RedactableArgument(ArgumentType.USER, message);\n     }\n@@ -81,6 +86,7 @@ public class RedactableArgument {\n      * @param message the message to redact.\n      * @return a new {@link RedactableArgument}.\n      */\n+\n     public static RedactableArgument meta(final String message) {\n         return new RedactableArgument(ArgumentType.META, message);\n     }\n@@ -99,6 +105,7 @@ public class RedactableArgument {\n      * @param message the message to redact.\n      * @return a new {@link RedactableArgument}.\n      */\n+\n     public static RedactableArgument system(final String message) {\n         return new RedactableArgument(ArgumentType.SYSTEM, message);\n     }\n@@ -106,6 +113,7 @@ public class RedactableArgument {\n     /**\n      * The type of this redactable argument.\n      */\n+\n     public ArgumentType type() {\n         return type;\n     }\n@@ -113,10 +121,12 @@ public class RedactableArgument {\n     /**\n      * The message of this redactable argument.\n      */\n+\n     public String message() {\n         return message;\n     }\n \n+\n     @Override\n     public String toString() {\n         return message;\n@@ -125,22 +135,28 @@ public class RedactableArgument {\n     /**\n      * The type of the redactable argument.\n      */\n+\n     public enum ArgumentType {\n         /**\n          * User data is data that is stored into Couchbase by\n          * the application user account.\n          */\n+\n+\n         USER,\n         /**\n          * Metadata is logical data needed by Couchbase to\n          * store and process user data.\n          */\n+\n+\n         META,\n         /**\n          * System data is data from other parts of the system\n          * Couchbase interacts with over the network.\n          */\n+\n+\n         SYSTEM\n     }\n-\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 19
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "54",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 136).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "54",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 136).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
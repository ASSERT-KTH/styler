{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4339",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "44",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "72",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4339/ReadGroupsFromCacheStep.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4339/ReadGroupsFromCacheStep.java\nindex cb1392767b8..47625c35d33 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4339/ReadGroupsFromCacheStep.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4339/ReadGroupsFromCacheStep.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.unsafe.impl.batchimport;\n \n import java.util.Arrays;\n@@ -35,62 +36,61 @@ import static org.neo4j.helpers.collection.Iterators.prefetching;\n  */\n public class ReadGroupsFromCacheStep extends PullingProducerStep\n {\n-    private final int itemSize;\n-    private final PrefetchingIterator<RelationshipGroupRecord> data;\n-    private RelationshipGroupRecord[] scratch;\n-    private int cursor;\n+  private final int itemSize;\n+  private final PrefetchingIterator<RelationshipGroupRecord> data;\n+  private RelationshipGroupRecord[] scratch;\n+  private int cursor;\n+\n+  public ReadGroupsFromCacheStep(StageControl control, Configuration config,\n+                                 Iterator<RelationshipGroupRecord> groups, int itemSize)\n+  {\n+    super(control, config);\n+    this.data = prefetching(groups);\n+    this.itemSize = itemSize;\n+    this.scratch = new RelationshipGroupRecord[config.batchSize() * 2]; // grows on demand\n+  }\n \n-    public ReadGroupsFromCacheStep( StageControl control, Configuration config,\n-            Iterator<RelationshipGroupRecord> groups, int itemSize )\n+  @Override\n+  protected Object nextBatchOrNull(long ticket, int batchSize)\n+  {\n+    if (!data.hasNext())\n     {\n-        super( control, config );\n-        this.data = prefetching( groups );\n-        this.itemSize = itemSize;\n-        this.scratch = new RelationshipGroupRecord[config.batchSize() * 2]; // grows on demand\n+      return null;\n     }\n \n-    @Override\n-    protected Object nextBatchOrNull( long ticket, int batchSize )\n+    int i = 0;\n+    long lastOwner = -1;\n+    for (; data.hasNext(); i++)\n     {\n-        if ( !data.hasNext() )\n+      // Logic below makes it so that all groups for a specific node ends up in the same batch,\n+      // which means that batches are slightly bigger (varying) than the requested size.\n+      RelationshipGroupRecord item = data.peek();\n+      if (i == batchSize - 1)\n+      {\n+        // Remember which owner this \"last\" group has...\n+        lastOwner = item.getOwningNode();\n+      } else if (i >= batchSize)\n+      {\n+        // ...and continue including groups in this batch until next owner comes\n+        if (item.getOwningNode() != lastOwner)\n         {\n-            return null;\n+          break;\n         }\n+      }\n \n-        int i = 0;\n-        long lastOwner = -1;\n-        for ( ; data.hasNext(); i++ )\n-        {\n-            // Logic below makes it so that all groups for a specific node ends up in the same batch,\n-            // which means that batches are slightly bigger (varying) than the requested size.\n-            RelationshipGroupRecord item = data.peek();\n-            if ( i == batchSize - 1 )\n-            {\n-                // Remember which owner this \"last\" group has...\n-                lastOwner = item.getOwningNode();\n-            }\n-            else if ( i >= batchSize )\n-            {\n-                // ...and continue including groups in this batch until next owner comes\n-                if ( item.getOwningNode() != lastOwner )\n-                {\n-                    break;\n-                }\n-            }\n-\n-            if ( i >= scratch.length )\n-            {\n-                scratch = Arrays.copyOf( scratch, scratch.length * 2 );\n-            }\n-            scratch[i] = data.next(); // which is \"item\", but also advances the iterator\n-            cursor++;\n-        }\n-        return Arrays.copyOf( scratch, i );\n+      if (i >= scratch.length)\n+      {\n+        scratch = Arrays.copyOf(scratch, scratch.length * 2);\n+      }\n+      scratch[i] = data.next(); // which is \"item\", but also advances the iterator\n+      cursor++;\n     }\n+    return Arrays.copyOf(scratch, i);\n+  }\n \n-    @Override\n-    protected long position()\n-    {\n-        return cursor * itemSize;\n-    }\n+  @Override\n+  protected long position()\n+  {\n+    return cursor * itemSize;\n+  }\n }\n",
            "diff_size": 74
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4339/ReadGroupsFromCacheStep.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4339/ReadGroupsFromCacheStep.java\nindex cb1392767b8..6bcb41ed74f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4339/ReadGroupsFromCacheStep.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4339/ReadGroupsFromCacheStep.java\n@@ -40,8 +40,7 @@ public class ReadGroupsFromCacheStep extends PullingProducerStep\n     private RelationshipGroupRecord[] scratch;\n     private int cursor;\n \n-    public ReadGroupsFromCacheStep( StageControl control, Configuration config,\n-            Iterator<RelationshipGroupRecord> groups, int itemSize )\n+    public ReadGroupsFromCacheStep( StageControl control, Configuration config, Iterator<RelationshipGroupRecord> groups, int itemSize )\n     {\n         super( control, config );\n         this.data = prefetching( groups );\n@@ -82,10 +81,12 @@ public class ReadGroupsFromCacheStep extends PullingProducerStep\n             {\n                 scratch = Arrays.copyOf( scratch, scratch.length * 2 );\n             }\n-            scratch[i] = data.next(); // which is \"item\", but also advances the iterator\n+\n+scratch[i] = data.next(); // which is \"item\", but also advances the iterator\n             cursor++;\n         }\n-        return Arrays.copyOf( scratch, i );\n+\n+return Arrays.copyOf( scratch, i );\n     }\n \n     @Override\n@@ -93,4 +94,4 @@ public class ReadGroupsFromCacheStep extends PullingProducerStep\n     {\n         return cursor * itemSize;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
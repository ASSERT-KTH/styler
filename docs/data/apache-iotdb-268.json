{
    "project_name": "apache-iotdb",
    "error_id": "268",
    "information": {
        "errors": [
            {
                "line": "19",
                "severity": "warning",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * under the License.\n */\npackage org.apache.iotdb.db.writelog.io;\n\nimport org.apache.iotdb.db.qp.physical.PhysicalPlan;\n",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/268/SingleFileLogReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler/268/SingleFileLogReader.java\nindex b742984cbf7..f8b8350c1b2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/268/SingleFileLogReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler/268/SingleFileLogReader.java\n@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n package org.apache.iotdb.db.writelog.io;\n \n import org.apache.iotdb.db.qp.physical.PhysicalPlan;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/268/SingleFileLogReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/intellij/268/SingleFileLogReader.java\nindex b742984cbf7..f8b8350c1b2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/268/SingleFileLogReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/intellij/268/SingleFileLogReader.java\n@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n package org.apache.iotdb.db.writelog.io;\n \n import org.apache.iotdb.db.qp.physical.PhysicalPlan;\n",
            "diff_size": 1
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "19",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "54",
                    "severity": "warning",
                    "message": "'throws' has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/268/SingleFileLogReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/codebuff/268/SingleFileLogReader.java\nindex b742984cbf7..0a58e4fb8fe 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/268/SingleFileLogReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/codebuff/268/SingleFileLogReader.java\n@@ -19,10 +19,8 @@\n package org.apache.iotdb.db.writelog.io;\n \n import org.apache.iotdb.db.qp.physical.PhysicalPlan;\n-\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n-\n import java.io.BufferedInputStream;\n import java.io.DataInputStream;\n import java.io.File;\n@@ -37,25 +35,23 @@ import java.util.zip.CRC32;\n  * SingleFileLogReader reads binarized WAL logs from a file through a DataInputStream by scanning\n  * the file from head to tail.\n  */\n+\n public class SingleFileLogReader implements ILogReader {\n \n   private static final Logger logger = LoggerFactory.getLogger(SingleFileLogReader.class);\n   public static final int LEAST_LOG_SIZE = 12; // size + checksum\n-\n   private DataInputStream logStream;\n   private String filepath;\n-\n   private byte[] buffer;\n   private CRC32 checkSummer = new CRC32();\n \n   // used to indicate the position of the broken log\n   private int idx;\n-\n   private BatchLogReader batchLogReader;\n-\n   private boolean fileCorrupted = false;\n \n-  public SingleFileLogReader(File logFile) throws FileNotFoundException {\n+  public SingleFileLogReader(File logFile)\n+    throws FileNotFoundException {\n     open(logFile);\n   }\n \n@@ -65,34 +61,29 @@ public class SingleFileLogReader implements ILogReader {\n       if (batchLogReader != null && batchLogReader.hasNext()) {\n         return true;\n       }\n-\n       if (logStream.available() < LEAST_LOG_SIZE) {\n         return false;\n       }\n-\n       int logSize = logStream.readInt();\n       if (logSize <= 0) {\n         return false;\n       }\n       buffer = new byte[logSize];\n-\n       int readLen = logStream.read(buffer, 0, logSize);\n       if (readLen < logSize) {\n         throw new IOException(\"Reach eof\");\n       }\n-\n       final long checkSum = logStream.readLong();\n       checkSummer.reset();\n       checkSummer.update(buffer, 0, logSize);\n       if (checkSummer.getValue() != checkSum) {\n-        throw new IOException(\n-            String.format(\n-                \"The check sum of the No.%d log batch is incorrect! In \"\n-                    + \"file: \"\n-                    + \"%d Calculated: %d.\",\n-                idx, checkSum, checkSummer.getValue()));\n+        throw new IOException(String.format(\n+          \"The check sum of the No.%d log batch is incorrect! In \"\n+                                + \"file: \" + \"%d Calculated: %d.\",\n+          idx,\n+          checkSum,\n+          checkSummer.getValue()));\n       }\n-\n       batchLogReader = new BatchLogReader(ByteBuffer.wrap(buffer));\n       fileCorrupted = fileCorrupted || batchLogReader.isFileCorrupted();\n     } catch (Exception e) {\n@@ -112,7 +103,6 @@ public class SingleFileLogReader implements ILogReader {\n     if (!hasNext()) {\n       throw new NoSuchElementException();\n     }\n-\n     idx++;\n     return batchLogReader.next();\n   }\n@@ -139,4 +129,4 @@ public class SingleFileLogReader implements ILogReader {\n   public boolean isFileCorrupted() {\n     return fileCorrupted;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 22
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/268/SingleFileLogReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler_random/268/SingleFileLogReader.java\nindex b742984cbf7..f8b8350c1b2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/268/SingleFileLogReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler_random/268/SingleFileLogReader.java\n@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n package org.apache.iotdb.db.writelog.io;\n \n import org.apache.iotdb.db.qp.physical.PhysicalPlan;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/268/SingleFileLogReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler_three_grams/268/SingleFileLogReader.java\nindex b742984cbf7..f8b8350c1b2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/268/SingleFileLogReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler_three_grams/268/SingleFileLogReader.java\n@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n package org.apache.iotdb.db.writelog.io;\n \n import org.apache.iotdb.db.qp.physical.PhysicalPlan;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
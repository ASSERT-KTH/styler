{
    "project_name": "HuygensING-timbuctoo",
    "error_id": "47",
    "information": {
        "errors": [
            {
                "line": "645",
                "column": "53",
                "severity": "error",
                "message": "WhitespaceAround: '{' is not preceded with whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
            }
        ]
    },
    "source_code": "\n  @Test\n  public void resourceSyncDataSet() throws Exception{\n    String dataSetName = \"resourcesync\" + UUID.randomUUID().toString().replace(\"-\", \"_\");\n    Response uploadResponse = multipartPost(\n        \"/v5/\" + PREFIX + \"/\" + dataSetName + \"/upload/rdf?forceCreation=true\",",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/errored/1/47/IntegrationTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/styler/47/IntegrationTest.java\nindex a692d146652..ffc1264e10a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/errored/1/47/IntegrationTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/styler/47/IntegrationTest.java\n@@ -642,7 +642,7 @@ public class IntegrationTest {\n   }\n \n   @Test\n-  public void resourceSyncDataSet() throws Exception{\n+  public void resourceSyncDataSet() throws Exception {\n     String dataSetName = \"resourcesync\" + UUID.randomUUID().toString().replace(\"-\", \"_\");\n     Response uploadResponse = multipartPost(\n         \"/v5/\" + PREFIX + \"/\" + dataSetName + \"/upload/rdf?forceCreation=true\",\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/errored/1/47/IntegrationTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/intellij/47/IntegrationTest.java\nindex a692d146652..08fc38a6c6d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/errored/1/47/IntegrationTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/intellij/47/IntegrationTest.java\n@@ -208,169 +208,169 @@ public class IntegrationTest {\n     String dataSetName = \"replacedata\" + UUID.randomUUID().toString().replace(\"-\", \"_\");\n     String dataSetId = createDataSetId(dataSetName);\n     Response uploadResponse = multipartPost(\n-        \"/v5/\" + PREFIX + \"/\" + dataSetName + \"/upload/rdf?forceCreation=true\",\n-        new File(getResource(IntegrationTest.class, \"smalldataset.nt\").toURI()),\n-        \"application/n-triples\",\n-        ImmutableMap.of(\n-            \"encoding\", \"UTF-8\",\n-            \"uri\", \"http://example.com/replacedata\"\n-        )\n+      \"/v5/\" + PREFIX + \"/\" + dataSetName + \"/upload/rdf?forceCreation=true\",\n+      new File(getResource(IntegrationTest.class, \"smalldataset.nt\").toURI()),\n+      \"application/n-triples\",\n+      ImmutableMap.of(\n+        \"encoding\", \"UTF-8\",\n+        \"uri\", \"http://example.com/replacedata\"\n+      )\n     );\n     assertThat(uploadResponse.getStatus(), is(201));\n \n     // query person before delete\n     Response queryData = call(\"/v5/graphql\")\n-        .accept(MediaType.APPLICATION_JSON)\n-        .post(Entity.entity(jsnO(\n-            \"query\",\n-            jsn(\n-                \"query {\\n\" +\n-                    \"  dataSets {\\n\" +\n-                    \"    \" + dataSetId + \"{\\n\" +\n-                    \"      schema_Person(uri: \\\"http://example.org/person1\\\") {\\n\" +\n-                    \"        schema_familyName {\\n\" +\n-                    \"          value\\n\" +\n-                    \"        }\\n\" +\n-                    \"        schema_givenNameList {\\n\" +\n-                    \"          items {\\n\" +\n-                    \"            value\\n\" +\n-                    \"          }\\n\" +\n-                    \"        }\\n\" +\n-                    \"      }\\n\" +\n-                    \"    }\\n\" +\n-                    \"  }\\n\" +\n-                    \"}\"\n-            )\n-        ).toString(), MediaType.APPLICATION_JSON));\n+      .accept(MediaType.APPLICATION_JSON)\n+      .post(Entity.entity(jsnO(\n+        \"query\",\n+        jsn(\n+          \"query {\\n\" +\n+            \"  dataSets {\\n\" +\n+            \"    \" + dataSetId + \"{\\n\" +\n+            \"      schema_Person(uri: \\\"http://example.org/person1\\\") {\\n\" +\n+            \"        schema_familyName {\\n\" +\n+            \"          value\\n\" +\n+            \"        }\\n\" +\n+            \"        schema_givenNameList {\\n\" +\n+            \"          items {\\n\" +\n+            \"            value\\n\" +\n+            \"          }\\n\" +\n+            \"        }\\n\" +\n+            \"      }\\n\" +\n+            \"    }\\n\" +\n+            \"  }\\n\" +\n+            \"}\"\n+        )\n+      ).toString(), MediaType.APPLICATION_JSON));\n \n     assertThat(queryData.readEntity(ObjectNode.class), is(jsnO(\n-        \"data\",\n+      \"data\",\n+      jsnO(\n+        \"dataSets\",\n         jsnO(\n-            \"dataSets\",\n-            jsnO(\n-                dataSetId,\n-                jsnO(\n-                    \"schema_Person\", jsnO(\n-                        \"schema_familyName\",\n-                        jsnO(\n-                            \"value\", jsn(\"Jansen\")\n-                        ),\n-                        \"schema_givenNameList\", jsnO(\n-                            \"items\", jsnA(\n-                                jsnO(\n-                                    \"value\", jsn(\"Jan\")\n-                                )\n-                            )\n-                        )\n-                    )\n+          dataSetId,\n+          jsnO(\n+            \"schema_Person\", jsnO(\n+              \"schema_familyName\",\n+              jsnO(\n+                \"value\", jsn(\"Jansen\")\n+              ),\n+              \"schema_givenNameList\", jsnO(\n+                \"items\", jsnA(\n+                  jsnO(\n+                    \"value\", jsn(\"Jan\")\n+                  )\n                 )\n+              )\n             )\n+          )\n         )\n+      )\n     )));\n \n     uploadResponse = multipartPost(\n-        \"/v5/\" + PREFIX + \"/\" + dataSetName + \"/upload/rdf?replace=true\",\n-        new File(getResource(IntegrationTest.class, \"overridedataset.nt\").toURI()),\n-        \"application/n-triples\",\n-        ImmutableMap.of(\n-            \"encoding\", \"UTF-8\",\n-            \"uri\", \"http://example.com/replacedata\"\n-        )\n+      \"/v5/\" + PREFIX + \"/\" + dataSetName + \"/upload/rdf?replace=true\",\n+      new File(getResource(IntegrationTest.class, \"overridedataset.nt\").toURI()),\n+      \"application/n-triples\",\n+      ImmutableMap.of(\n+        \"encoding\", \"UTF-8\",\n+        \"uri\", \"http://example.com/replacedata\"\n+      )\n     );\n     assertThat(uploadResponse.getStatus(), is(201));\n \n     // person no longer in data set available\n     queryData = call(\"/v5/graphql\")\n-        .accept(MediaType.APPLICATION_JSON)\n-        .post(Entity.entity(jsnO(\n-            \"query\",\n-            jsn(\n-                \"query {\\n\" +\n-                    \"  dataSets {\\n\" +\n-                    \"    \" + dataSetId + \"{\\n\" +\n-                    \"      schema_Person(uri: \\\"http://example.org/person1\\\") {\\n\" +\n-                    \"        schema_familyName {\\n\" +\n-                    \"          value\\n\" +\n-                    \"        }\\n\" +\n-                    \"        schema_givenNameList {\\n\" +\n-                    \"          items {\\n\" +\n-                    \"            value\\n\" +\n-                    \"          }\\n\" +\n-                    \"        }\\n\" +\n-                    \"      }\\n\" +\n-                    \"    }\\n\" +\n-                    \"  }\\n\" +\n-                    \"}\"\n-            )\n-        ).toString(), MediaType.APPLICATION_JSON));\n+      .accept(MediaType.APPLICATION_JSON)\n+      .post(Entity.entity(jsnO(\n+        \"query\",\n+        jsn(\n+          \"query {\\n\" +\n+            \"  dataSets {\\n\" +\n+            \"    \" + dataSetId + \"{\\n\" +\n+            \"      schema_Person(uri: \\\"http://example.org/person1\\\") {\\n\" +\n+            \"        schema_familyName {\\n\" +\n+            \"          value\\n\" +\n+            \"        }\\n\" +\n+            \"        schema_givenNameList {\\n\" +\n+            \"          items {\\n\" +\n+            \"            value\\n\" +\n+            \"          }\\n\" +\n+            \"        }\\n\" +\n+            \"      }\\n\" +\n+            \"    }\\n\" +\n+            \"  }\\n\" +\n+            \"}\"\n+        )\n+      ).toString(), MediaType.APPLICATION_JSON));\n \n     assertThat(queryData.readEntity(ObjectNode.class), is(jsnO(\n-        \"data\",\n+      \"data\",\n+      jsnO(\n+        \"dataSets\",\n         jsnO(\n-            \"dataSets\",\n-            jsnO(\n-                dataSetId,\n-                jsnO(\n-                    \"schema_Person\", jsnO(\n-                        \"schema_familyName\",\n-                        null,\n-                        \"schema_givenNameList\",jsnO(\n-                            \"items\", jsnA()\n-                        )\n-                    )\n-                )\n+          dataSetId,\n+          jsnO(\n+            \"schema_Person\", jsnO(\n+              \"schema_familyName\",\n+              null,\n+              \"schema_givenNameList\", jsnO(\n+                \"items\", jsnA()\n+              )\n             )\n+          )\n         )\n+      )\n     )));\n \n     // check new person is added\n     queryData = call(\"/v5/graphql\")\n-        .accept(MediaType.APPLICATION_JSON)\n-        .post(Entity.entity(jsnO(\n-            \"query\",\n-            jsn(\n-                \"query {\\n\" +\n-                    \"  dataSets {\\n\" +\n-                    \"    \" + dataSetId + \"{\\n\" +\n-                    \"      schema_Person(uri: \\\"http://example.org/person3\\\") {\\n\" +\n-                    \"        schema_familyName {\\n\" +\n-                    \"          value\\n\" +\n-                    \"        }\\n\" +\n-                    \"        schema_givenNameList {\\n\" +\n-                    \"          items {\\n\" +\n-                    \"            value\\n\" +\n-                    \"          }\\n\" +\n-                    \"        }\\n\" +\n-                    \"      }\\n\" +\n-                    \"    }\\n\" +\n-                    \"  }\\n\" +\n-                    \"}\"\n-            )\n-        ).toString(), MediaType.APPLICATION_JSON));\n+      .accept(MediaType.APPLICATION_JSON)\n+      .post(Entity.entity(jsnO(\n+        \"query\",\n+        jsn(\n+          \"query {\\n\" +\n+            \"  dataSets {\\n\" +\n+            \"    \" + dataSetId + \"{\\n\" +\n+            \"      schema_Person(uri: \\\"http://example.org/person3\\\") {\\n\" +\n+            \"        schema_familyName {\\n\" +\n+            \"          value\\n\" +\n+            \"        }\\n\" +\n+            \"        schema_givenNameList {\\n\" +\n+            \"          items {\\n\" +\n+            \"            value\\n\" +\n+            \"          }\\n\" +\n+            \"        }\\n\" +\n+            \"      }\\n\" +\n+            \"    }\\n\" +\n+            \"  }\\n\" +\n+            \"}\"\n+        )\n+      ).toString(), MediaType.APPLICATION_JSON));\n \n     assertThat(queryData.readEntity(ObjectNode.class), is(jsnO(\n-        \"data\",\n+      \"data\",\n+      jsnO(\n+        \"dataSets\",\n         jsnO(\n-            \"dataSets\",\n-            jsnO(\n-                dataSetId,\n-                jsnO(\n-                    \"schema_Person\", jsnO(\n-                        \"schema_familyName\",\n-                        jsnO(\n-                            \"value\", jsn(\"Pietersen\")\n-                        ),\n-                        \"schema_givenNameList\", jsnO(\n-                            \"items\", jsnA(\n-                                jsnO(\n-                                    \"value\", jsn(\"Piet\")\n-                                )\n-                            )\n-                        )\n-                    )\n+          dataSetId,\n+          jsnO(\n+            \"schema_Person\", jsnO(\n+              \"schema_familyName\",\n+              jsnO(\n+                \"value\", jsn(\"Pietersen\")\n+              ),\n+              \"schema_givenNameList\", jsnO(\n+                \"items\", jsnA(\n+                  jsnO(\n+                    \"value\", jsn(\"Piet\")\n+                  )\n                 )\n+              )\n             )\n+          )\n         )\n+      )\n     )));\n \n   }\n@@ -434,16 +434,16 @@ public class IntegrationTest {\n         PREFIX, vreName), MediaType.valueOf(\"application/graphql\")));\n     ObjectNode objectNode = graphqlCall.readEntity(ObjectNode.class);\n     String status = objectNode.get(\"data\")\n-                              .get(\"dataSetMetadata\")\n-                              .get(\"importStatus\")\n-                              .get(\"status\").asText();\n+      .get(\"dataSetMetadata\")\n+      .get(\"importStatus\")\n+      .get(\"status\").asText();\n     assertThat(status, is(\"DONE\"));\n \n     List<String> errors = Lists.newArrayList();\n     objectNode.get(\"data\")\n-              .get(\"dataSetMetadata\")\n-              .get(\"importStatus\")\n-              .get(\"errors\").forEach(error -> errors.add(error.asText()));\n+      .get(\"dataSetMetadata\")\n+      .get(\"importStatus\")\n+      .get(\"errors\").forEach(error -> errors.add(error.asText()));\n \n     assertThat(errors, hasSize(1));\n   }\n@@ -642,15 +642,15 @@ public class IntegrationTest {\n   }\n \n   @Test\n-  public void resourceSyncDataSet() throws Exception{\n+  public void resourceSyncDataSet() throws Exception {\n     String dataSetName = \"resourcesync\" + UUID.randomUUID().toString().replace(\"-\", \"_\");\n     Response uploadResponse = multipartPost(\n-        \"/v5/\" + PREFIX + \"/\" + dataSetName + \"/upload/rdf?forceCreation=true\",\n-        new File(getResource(IntegrationTest.class, \"test.nqud\").toURI()),\n-        \"application/n-quads\",\n-        ImmutableMap.of(\n-            \"encoding\", \"UTF-8\"\n-        )\n+      \"/v5/\" + PREFIX + \"/\" + dataSetName + \"/upload/rdf?forceCreation=true\",\n+      new File(getResource(IntegrationTest.class, \"test.nqud\").toURI()),\n+      \"application/n-quads\",\n+      ImmutableMap.of(\n+        \"encoding\", \"UTF-8\"\n+      )\n     );\n     assertThat(\"Successful upload of rdf\", uploadResponse.getStatus(), is(201));\n \n@@ -667,8 +667,8 @@ public class IntegrationTest {\n     String predicate1 = \"<http://one.example/predicate1>\";\n     String predicate2 = \"<http://one.example/predicate2>\";\n     assertThat(dataSet, is(\n-        subject1 + \" \" + predicate1 + \" \" + object1 + \" \" + graph +  \" .\\n\" +\n-        subject2 + \" \" + predicate2 + \" \" + object2 + \" \" + graph +  \" .\\n\"\n+      subject1 + \" \" + predicate1 + \" \" + object1 + \" \" + graph + \" .\\n\" +\n+        subject2 + \" \" + predicate2 + \" \" + object2 + \" \" + graph + \" .\\n\"\n     ));\n   }\n \n@@ -792,11 +792,11 @@ public class IntegrationTest {\n     ObjectNode data = query.readEntity(ObjectNode.class);\n     List<JsonNode> tabularFile = stream(\n       data.get(\"data\")\n-          .get(\"dataSets\")\n-          .get(dataSetId)\n-          .get(\"http___timbuctoo_huygens_knaw_nl_static_v5_types_tabularFileList\")\n-          .get(\"items\")\n-          .iterator()\n+        .get(\"dataSets\")\n+        .get(dataSetId)\n+        .get(\"http___timbuctoo_huygens_knaw_nl_static_v5_types_tabularFileList\")\n+        .get(\"items\")\n+        .iterator()\n     ).collect(toList());\n \n     Stream<JsonNode> rawCollections = stream(tabularFile.get(0).get(\"tim_hasCollectionList\").get(\"items\").iterator());\n@@ -1008,8 +1008,8 @@ public class IntegrationTest {\n     ObjectNode retrievedData = retrieveExtendedSchema.readEntity(ObjectNode.class);\n \n     assertThat(retrievedData.get(\"data\").get(\"dataSets\").get(dataSetId)\n-                            .get(\"http___timbuctoo_huygens_knaw_nl_datasets_clusius_PersonsList\")\n-                            .get(\"items\").get(0).get(\"test_test\").isNull(),\n+        .get(\"http___timbuctoo_huygens_knaw_nl_datasets_clusius_PersonsList\")\n+        .get(\"items\").get(0).get(\"test_test\").isNull(),\n       is(true));\n \n     ObjectNode customSchemaField3 = jsnO(\n@@ -1070,8 +1070,8 @@ public class IntegrationTest {\n     ObjectNode retrievedData2 = retrieveExtendedSchema2.readEntity(ObjectNode.class);\n \n     assertThat(retrievedData2.get(\"data\").get(\"dataSets\").get(dataSetId)\n-                             .get(\"http___timbuctoo_huygens_knaw_nl_datasets_clusius_PersonsList\")\n-                             .get(\"items\").get(0).get(\"test_test3\").isNull(),\n+        .get(\"http___timbuctoo_huygens_knaw_nl_datasets_clusius_PersonsList\")\n+        .get(\"items\").get(0).get(\"test_test3\").isNull(),\n       is(true));\n \n   }\n@@ -2636,12 +2636,12 @@ public class IntegrationTest {\n       ).toString(), MediaType.APPLICATION_JSON));\n \n     Iterable<JsonNode> datasets = () -> queryData.readEntity(ObjectNode.class)\n-                                                 .get(\"data\")\n-                                                 .get(\"dataSetMetadataList\")\n-                                                 .elements();\n+      .get(\"data\")\n+      .get(\"dataSetMetadataList\")\n+      .elements();\n     List<String> dataSetIds =\n       StreamSupport.stream(datasets.spliterator(), false).map(dataSet -> dataSet.get(\"dataSetId\").asText())\n-                   .collect(toList());\n+        .collect(toList());\n     assertThat(dataSetIds, hasItem(dataSetId));\n   }\n \n@@ -2680,9 +2680,9 @@ public class IntegrationTest {\n       ).toString(), MediaType.APPLICATION_JSON));\n \n     List<JsonNode> datasetsBeforePublish = Lists.newArrayList(queryData.readEntity(ObjectNode.class)\n-                                                                       .get(\"data\")\n-                                                                       .get(\"dataSetMetadataList\")\n-                                                                       .elements());\n+      .get(\"data\")\n+      .get(\"dataSetMetadataList\")\n+      .elements());\n     assertThat(datasetsBeforePublish, is(empty()));\n \n     // publish the data set\n@@ -2715,12 +2715,12 @@ public class IntegrationTest {\n       ).toString(), MediaType.APPLICATION_JSON));\n \n     Iterable<JsonNode> datasetsAfterPublish = () -> queryDataAfterPublish.readEntity(ObjectNode.class)\n-                                                                         .get(\"data\")\n-                                                                         .get(\"dataSetMetadataList\")\n-                                                                         .elements();\n+      .get(\"data\")\n+      .get(\"dataSetMetadataList\")\n+      .elements();\n     List<String> dataSetIds =\n       StreamSupport.stream(datasetsAfterPublish.spliterator(), false).map(dataSet -> dataSet.get(\"dataSetId\").asText())\n-                   .collect(toList());\n+        .collect(toList());\n \n     assertThat(dataSetIds, hasItem(dataSetId));\n   }\n@@ -2730,46 +2730,46 @@ public class IntegrationTest {\n     String dataSetName = \"replacedata\" + UUID.randomUUID().toString().replace(\"-\", \"_\");\n     String dataSetId = createDataSetId(dataSetName);\n     Response uploadResponse = multipartPost(\n-        \"/v5/\" + PREFIX + \"/\" + dataSetName + \"/upload/rdf?forceCreation=true\",\n-        new File(getResource(IntegrationTest.class, \"smalldataset.nt\").toURI()),\n-        \"application/n-triples\",\n-        ImmutableMap.of(\n-            \"encoding\", \"UTF-8\",\n-            \"uri\", \"http://example.com/replacedata\"\n-        )\n+      \"/v5/\" + PREFIX + \"/\" + dataSetName + \"/upload/rdf?forceCreation=true\",\n+      new File(getResource(IntegrationTest.class, \"smalldataset.nt\").toURI()),\n+      \"application/n-triples\",\n+      ImmutableMap.of(\n+        \"encoding\", \"UTF-8\",\n+        \"uri\", \"http://example.com/replacedata\"\n+      )\n     );\n     assertThat(uploadResponse.getStatus(), is(201));\n \n     // query person before delete\n     Response queryData = call(\"/v5/graphql\")\n-        .accept(\"text/csv\")\n-        .post(Entity.entity(jsnO(\n-            \"query\",\n-            jsn(\n-                \"query {\\n\" +\n-                    \"  dataSets {\\n\" +\n-                    \"    \" + dataSetId + \"{\\n\" +\n-                    \"      schema_PersonList {\\n\" +\n-                    \"        items {\\n\" +\n-                    \"          schema_familyName {\\n\" +\n-                    \"            value\\n\" +\n-                    \"          }\\n\" +\n-                    \"          schema_givenNameList {\\n\" +\n-                    \"            items {\\n\" +\n-                    \"              value\\n\" +\n-                    \"            }\\n\" +\n-                    \"          }\\n\" +\n-                    \"        }\\n\" +\n-                    \"      }\\n\" +\n-                    \"    }\\n\" +\n-                    \"  }\\n\" +\n-                    \"}\"\n-            )\n-        ).toString(), MediaType.APPLICATION_JSON));\n+      .accept(\"text/csv\")\n+      .post(Entity.entity(jsnO(\n+        \"query\",\n+        jsn(\n+          \"query {\\n\" +\n+            \"  dataSets {\\n\" +\n+            \"    \" + dataSetId + \"{\\n\" +\n+            \"      schema_PersonList {\\n\" +\n+            \"        items {\\n\" +\n+            \"          schema_familyName {\\n\" +\n+            \"            value\\n\" +\n+            \"          }\\n\" +\n+            \"          schema_givenNameList {\\n\" +\n+            \"            items {\\n\" +\n+            \"              value\\n\" +\n+            \"            }\\n\" +\n+            \"          }\\n\" +\n+            \"        }\\n\" +\n+            \"      }\\n\" +\n+            \"    }\\n\" +\n+            \"  }\\n\" +\n+            \"}\"\n+        )\n+      ).toString(), MediaType.APPLICATION_JSON));\n \n     final String data = queryData.readEntity(String.class);\n     assertThat(data, is(\n-        \"schema_familyName,schema_givenNameList.0,schema_givenNameList.1,schema_givenNameList.2\\r\\n\" +\n+      \"schema_familyName,schema_givenNameList.0,schema_givenNameList.1,schema_givenNameList.2\\r\\n\" +\n         \"Jansen,Jan,,\\r\\n\" +\n         \"van Hasselt,Alexander,Michiel,Willem\\r\\n\"\n     ));\n",
            "diff_size": 210
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "137",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "167",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "221",
                    "severity": "error",
                    "message": "'\"  dataSets {\\n\"' has incorrect indentation level 0, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "236",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "283",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "294",
                    "severity": "error",
                    "message": "'jsnO' has incorrect indentation level 0, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "320",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "390",
                    "severity": "error",
                    "message": "'\"  dataSetMetadata(dataSetId: \\\"%1s__%2s\\\")\\n\"' has incorrect indentation level 0, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "398",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "402",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "408",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "437",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "465",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "622",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 166).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "739",
                    "severity": "error",
                    "message": "')' has incorrect indentation level 2, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "820",
                    "severity": "error",
                    "message": "'\"variables\"' has incorrect indentation level 0, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "916",
                    "severity": "error",
                    "message": "'\"variables\"' has incorrect indentation level 0, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "929",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "952",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 140).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "954",
                    "severity": "error",
                    "message": "'is' has incorrect indentation level 0, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "977",
                    "severity": "error",
                    "message": "'\"variables\"' has incorrect indentation level 0, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "1012",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 141).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "1014",
                    "severity": "error",
                    "message": "'is' has incorrect indentation level 0, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "1065",
                    "severity": "error",
                    "message": "'\"variables\"' has incorrect indentation level 0, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "1165",
                    "severity": "error",
                    "message": "')' has incorrect indentation level 2, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "1228",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "1265",
                    "severity": "error",
                    "message": "'\"variables\"' has incorrect indentation level 0, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "1673",
                    "severity": "error",
                    "message": "')' has incorrect indentation level 2, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "1739",
                    "severity": "error",
                    "message": "')' has incorrect indentation level 2, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "1877",
                    "severity": "error",
                    "message": "')' has incorrect indentation level 2, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "2013",
                    "severity": "error",
                    "message": "')' has incorrect indentation level 2, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "2194",
                    "severity": "error",
                    "message": "')' has incorrect indentation level 2, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "2315",
                    "severity": "error",
                    "message": "')' has incorrect indentation level 2, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "2404",
                    "severity": "error",
                    "message": "')' has incorrect indentation level 2, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "2466",
                    "severity": "error",
                    "message": "')' has incorrect indentation level 2, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "2515",
                    "severity": "error",
                    "message": "')' has incorrect indentation level 2, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "2545",
                    "severity": "error",
                    "message": "')' has incorrect indentation level 2, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "2550",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "2553",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "2573",
                    "severity": "error",
                    "message": "')' has incorrect indentation level 2, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "2586",
                    "severity": "error",
                    "message": "')' has incorrect indentation level 2, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "2591",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "2604",
                    "severity": "error",
                    "message": "')' has incorrect indentation level 2, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "2618",
                    "severity": "error",
                    "message": "')' has incorrect indentation level 2, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "2623",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "2626",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "2645",
                    "severity": "error",
                    "message": "'\"  dataSets {\\n\"' has incorrect indentation level 0, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "2662",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "2718",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/errored/1/47/IntegrationTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/naturalize/47/IntegrationTest.java\nindex a692d146652..4dc4b146d96 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/errored/1/47/IntegrationTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/naturalize/47/IntegrationTest.java\n@@ -134,10 +134,9 @@ public class IntegrationTest {\n         \"    }\\n\" +\n         \"  }\\n\" +\n         \"}\", PREFIX, vreName), MediaType.valueOf(\"application/graphql\")));\n-    ObjectNode objectNode = graphqlCall.readEntity(ObjectNode.class);\n+ObjectNode objectNode = graphqlCall.readEntity(ObjectNode.class);\n     assertThat(\n-      objectNode\n-        .get(\"data\")\n+      objectNode.get(\"data\")\n         .get(\"dataSets\")\n         .get(createDataSetId(vreName))\n         .get(\"clusius_ResidenceList\")\n@@ -165,7 +164,7 @@ public class IntegrationTest {\n         \"    }\\n\" +\n         \"  }\\n\" +\n         \"}\", PREFIX, vreName), MediaType.valueOf(\"application/graphql\")));\n-    objectNode = graphqlCall.readEntity(ObjectNode.class);\n+objectNode = graphqlCall.readEntity(ObjectNode.class);\n     assertThat( //every result has a value for name\n       stream(objectNode\n         .get(\"data\")\n@@ -207,25 +206,19 @@ public class IntegrationTest {\n   public void rdfUploadReplaceOldData() throws Exception {\n     String dataSetName = \"replacedata\" + UUID.randomUUID().toString().replace(\"-\", \"_\");\n     String dataSetId = createDataSetId(dataSetName);\n-    Response uploadResponse = multipartPost(\n-        \"/v5/\" + PREFIX + \"/\" + dataSetName + \"/upload/rdf?forceCreation=true\",\n+    Response uploadResponse = multipartPost(\"/v5/\" + PREFIX + \"/\" + dataSetName + \"/upload/rdf?forceCreation=true\",\n         new File(getResource(IntegrationTest.class, \"smalldataset.nt\").toURI()),\n         \"application/n-triples\",\n-        ImmutableMap.of(\n-            \"encoding\", \"UTF-8\",\n-            \"uri\", \"http://example.com/replacedata\"\n-        )\n-    );\n+        ImmutableMap.of(\"encoding\", \"UTF-8\",\n+            \"uri\", \"http://example.com/replacedata\"));\n     assertThat(uploadResponse.getStatus(), is(201));\n \n     // query person before delete\n-    Response queryData = call(\"/v5/graphql\")\n-        .accept(MediaType.APPLICATION_JSON)\n+    Response queryData = call(\"/v5/graphql\").accept(MediaType.APPLICATION_JSON)\n         .post(Entity.entity(jsnO(\n             \"query\",\n-            jsn(\n-                \"query {\\n\" +\n-                    \"  dataSets {\\n\" +\n+            jsn(\"query {\\n\" +\n+\"  dataSets {\\n\" +\n                     \"    \" + dataSetId + \"{\\n\" +\n                     \"      schema_Person(uri: \\\"http://example.org/person1\\\") {\\n\" +\n                     \"        schema_familyName {\\n\" +\n@@ -239,11 +232,8 @@ public class IntegrationTest {\n                     \"      }\\n\" +\n                     \"    }\\n\" +\n                     \"  }\\n\" +\n-                    \"}\"\n-            )\n-        ).toString(), MediaType.APPLICATION_JSON));\n-\n-    assertThat(queryData.readEntity(ObjectNode.class), is(jsnO(\n+                    \"}\")).toString(), MediaType.APPLICATION_JSON));\n+assertThat(queryData.readEntity(ObjectNode.class), is(jsnO(\n         \"data\",\n         jsnO(\n             \"dataSets\",\n@@ -251,42 +241,31 @@ public class IntegrationTest {\n                 dataSetId,\n                 jsnO(\n                     \"schema_Person\", jsnO(\n-                        \"schema_familyName\",\n+  \"schema_familyName\",\n                         jsnO(\n-                            \"value\", jsn(\"Jansen\")\n-                        ),\n-                        \"schema_givenNameList\", jsnO(\n-                            \"items\", jsnA(\n-                                jsnO(\n-                                    \"value\", jsn(\"Jan\")\n-                                )\n-                            )\n-                        )\n-                    )\n-                )\n-            )\n-        )\n-    )));\n-\n-    uploadResponse = multipartPost(\n-        \"/v5/\" + PREFIX + \"/\" + dataSetName + \"/upload/rdf?replace=true\",\n+                            \"value\", jsn(\"Jansen\")),\n+                        \"schema_givenNameList\", jsnO(\"items\", jsnA(\n+                                jsnO(\"value\", jsn(\"Jan\"))\n+  )\n+  )\n+  )\n+  )\n+  )\n+  ))));\n+\n+    uploadResponse = multipartPost(\"/v5/\" + PREFIX + \"/\" + dataSetName + \"/upload/rdf?replace=true\",\n         new File(getResource(IntegrationTest.class, \"overridedataset.nt\").toURI()),\n         \"application/n-triples\",\n-        ImmutableMap.of(\n-            \"encoding\", \"UTF-8\",\n-            \"uri\", \"http://example.com/replacedata\"\n-        )\n-    );\n+        ImmutableMap.of(\"encoding\", \"UTF-8\",\n+            \"uri\", \"http://example.com/replacedata\"));\n     assertThat(uploadResponse.getStatus(), is(201));\n \n     // person no longer in data set available\n-    queryData = call(\"/v5/graphql\")\n-        .accept(MediaType.APPLICATION_JSON)\n+    queryData = call(\"/v5/graphql\").accept(MediaType.APPLICATION_JSON)\n         .post(Entity.entity(jsnO(\n             \"query\",\n-            jsn(\n-                \"query {\\n\" +\n-                    \"  dataSets {\\n\" +\n+            jsn(\"query {\\n\" +\n+\"  dataSets {\\n\" +\n                     \"    \" + dataSetId + \"{\\n\" +\n                     \"      schema_Person(uri: \\\"http://example.org/person1\\\") {\\n\" +\n                     \"        schema_familyName {\\n\" +\n@@ -300,11 +279,8 @@ public class IntegrationTest {\n                     \"      }\\n\" +\n                     \"    }\\n\" +\n                     \"  }\\n\" +\n-                    \"}\"\n-            )\n-        ).toString(), MediaType.APPLICATION_JSON));\n-\n-    assertThat(queryData.readEntity(ObjectNode.class), is(jsnO(\n+                    \"}\")).toString(), MediaType.APPLICATION_JSON));\n+assertThat(queryData.readEntity(ObjectNode.class), is(jsnO(\n         \"data\",\n         jsnO(\n             \"dataSets\",\n@@ -312,25 +288,21 @@ public class IntegrationTest {\n                 dataSetId,\n                 jsnO(\n                     \"schema_Person\", jsnO(\n-                        \"schema_familyName\",\n+  \"schema_familyName\",\n                         null,\n-                        \"schema_givenNameList\",jsnO(\n-                            \"items\", jsnA()\n-                        )\n-                    )\n-                )\n-            )\n-        )\n-    )));\n+                        \"schema_givenNameList\",\n+jsnO(\"items\", jsnA())\n+  )\n+  )\n+  )\n+  ))));\n \n     // check new person is added\n-    queryData = call(\"/v5/graphql\")\n-        .accept(MediaType.APPLICATION_JSON)\n+    queryData = call(\"/v5/graphql\").accept(MediaType.APPLICATION_JSON)\n         .post(Entity.entity(jsnO(\n             \"query\",\n-            jsn(\n-                \"query {\\n\" +\n-                    \"  dataSets {\\n\" +\n+            jsn(\"query {\\n\" +\n+\"  dataSets {\\n\" +\n                     \"    \" + dataSetId + \"{\\n\" +\n                     \"      schema_Person(uri: \\\"http://example.org/person3\\\") {\\n\" +\n                     \"        schema_familyName {\\n\" +\n@@ -344,11 +316,8 @@ public class IntegrationTest {\n                     \"      }\\n\" +\n                     \"    }\\n\" +\n                     \"  }\\n\" +\n-                    \"}\"\n-            )\n-        ).toString(), MediaType.APPLICATION_JSON));\n-\n-    assertThat(queryData.readEntity(ObjectNode.class), is(jsnO(\n+                    \"}\")).toString(), MediaType.APPLICATION_JSON));\n+assertThat(queryData.readEntity(ObjectNode.class), is(jsnO(\n         \"data\",\n         jsnO(\n             \"dataSets\",\n@@ -356,22 +325,17 @@ public class IntegrationTest {\n                 dataSetId,\n                 jsnO(\n                     \"schema_Person\", jsnO(\n-                        \"schema_familyName\",\n+  \"schema_familyName\",\n                         jsnO(\n-                            \"value\", jsn(\"Pietersen\")\n-                        ),\n-                        \"schema_givenNameList\", jsnO(\n-                            \"items\", jsnA(\n-                                jsnO(\n-                                    \"value\", jsn(\"Piet\")\n-                                )\n-                            )\n-                        )\n-                    )\n-                )\n-            )\n-        )\n-    )));\n+                            \"value\", jsn(\"Pietersen\")),\n+                        \"schema_givenNameList\", jsnO(\"items\", jsnA(\n+                                jsnO(\"value\", jsn(\"Piet\"))\n+  )\n+  )\n+  )\n+  )\n+  )\n+  ))));\n \n   }\n \n@@ -423,29 +387,25 @@ public class IntegrationTest {\n     Response graphqlCall = call(\"/v5/graphql\")\n       .accept(MediaType.APPLICATION_JSON)\n       .post(Entity.entity(String.format(\"{\\n\" +\n-          \"  dataSetMetadata(dataSetId: \\\"%1s__%2s\\\")\\n\" +\n+\"  dataSetMetadata(dataSetId: \\\"%1s__%2s\\\")\\n\" +\n           \"  {\\n\" +\n           \"    importStatus(id: \\\"0\\\") {\\n\" +\n           \"      status\\n\" +\n           \"      errors\\n\" +\n           \"    }\\n\" +\n           \"  }\\n\" +\n-          \"}\\n\",\n-        PREFIX, vreName), MediaType.valueOf(\"application/graphql\")));\n-    ObjectNode objectNode = graphqlCall.readEntity(ObjectNode.class);\n-    String status = objectNode.get(\"data\")\n-                              .get(\"dataSetMetadata\")\n+          \"}\\n\", PREFIX, vreName), MediaType.valueOf(\"application/graphql\")));\n+ObjectNode objectNode = graphqlCall.readEntity(ObjectNode.class);\n+    String status = objectNode.get(\"data\").get(\"dataSetMetadata\")\n                               .get(\"importStatus\")\n                               .get(\"status\").asText();\n-    assertThat(status, is(\"DONE\"));\n+assertThat(status, is(\"DONE\"));\n \n     List<String> errors = Lists.newArrayList();\n-    objectNode.get(\"data\")\n-              .get(\"dataSetMetadata\")\n+    objectNode.get(\"data\").get(\"dataSetMetadata\")\n               .get(\"importStatus\")\n               .get(\"errors\").forEach(error -> errors.add(error.asText()));\n-\n-    assertThat(errors, hasSize(1));\n+assertThat(errors, hasSize(1));\n   }\n \n   @Test\n@@ -474,10 +434,9 @@ public class IntegrationTest {\n         \"    }\\n\" +\n         \"  }\\n\" +\n         \"}\", PREFIX, vreName), MediaType.valueOf(\"application/graphql\")));\n-    ObjectNode objectNode = graphqlCall.readEntity(ObjectNode.class);\n+ObjectNode objectNode = graphqlCall.readEntity(ObjectNode.class);\n     assertThat(\n-      objectNode\n-        .get(\"data\")\n+      objectNode.get(\"data\")\n         .get(\"dataSets\")\n         .get(createDataSetId(vreName))\n         .get(\"http___timbuctoo_huygens_knaw_nl_datasets_clusius_ResidenceList\")\n@@ -503,7 +462,7 @@ public class IntegrationTest {\n         \"    }\\n\" +\n         \"  }\\n\" +\n         \"}\", PREFIX, vreName), MediaType.valueOf(\"application/graphql\")));\n-    objectNode = graphqlCall.readEntity(ObjectNode.class);\n+objectNode = graphqlCall.readEntity(ObjectNode.class);\n     assertThat(\n       stream(objectNode\n         .get(\"data\")\n@@ -545,8 +504,7 @@ public class IntegrationTest {\n             \"  publish(dataSetId: $dataSetId) {\" +\n             \"    dataSetId\" +\n             \"  }\" +\n-            \"}\"\n-        ),\n+            \"}\"),\n         \"variables\",\n         jsnO(\n           \"dataSetId\", jsn(dataSetId)\n@@ -597,8 +555,7 @@ public class IntegrationTest {\n             \"  publish(dataSetId: $dataSetId) {\" +\n             \"    dataSetId\" +\n             \"  }\" +\n-            \"}\"\n-        ),\n+            \"}\"),\n         \"variables\",\n         jsnO(\n           \"dataSetId\", jsn(dataSetId)\n@@ -642,16 +599,12 @@ public class IntegrationTest {\n   }\n \n   @Test\n-  public void resourceSyncDataSet() throws Exception{\n+  public void resourceSyncDataSet() throws Exception {\n     String dataSetName = \"resourcesync\" + UUID.randomUUID().toString().replace(\"-\", \"_\");\n-    Response uploadResponse = multipartPost(\n-        \"/v5/\" + PREFIX + \"/\" + dataSetName + \"/upload/rdf?forceCreation=true\",\n+    Response uploadResponse = multipartPost(\"/v5/\" + PREFIX + \"/\" + dataSetName + \"/upload/rdf?forceCreation=true\",\n         new File(getResource(IntegrationTest.class, \"test.nqud\").toURI()),\n         \"application/n-quads\",\n-        ImmutableMap.of(\n-            \"encoding\", \"UTF-8\"\n-        )\n-    );\n+        ImmutableMap.of(\"encoding\", \"UTF-8\"));\n     assertThat(\"Successful upload of rdf\", uploadResponse.getStatus(), is(201));\n \n     Response getDataSet = call(\"/v5/resourcesync/\" + PREFIX + \"/\" + dataSetName + \"/dataset.nq\").get();\n@@ -666,10 +619,7 @@ public class IntegrationTest {\n     String object2 = \"<http://one.example/object2>\";\n     String predicate1 = \"<http://one.example/predicate1>\";\n     String predicate2 = \"<http://one.example/predicate2>\";\n-    assertThat(dataSet, is(\n-        subject1 + \" \" + predicate1 + \" \" + object1 + \" \" + graph +  \" .\\n\" +\n-        subject2 + \" \" + predicate2 + \" \" + object2 + \" \" + graph +  \" .\\n\"\n-    ));\n+    assertThat(dataSet, is(subject1 + \" \" + predicate1 + \" \" + object1 + \" \" + graph +  \" .\\n\" + subject2 + \" \" + predicate2 + \" \" + object2 + \" \" + graph + \" .\\n\"));\n   }\n \n   @Test\n@@ -786,23 +736,19 @@ public class IntegrationTest {\n             \"    }\\n\" +\n             \"  }\\n\" +\n             \"}\"\n-        )\n-      ).toString(), MediaType.valueOf(\"application/json\")));\n+  )).toString(), MediaType.valueOf(\"application/json\")));\n \n     ObjectNode data = query.readEntity(ObjectNode.class);\n     List<JsonNode> tabularFile = stream(\n-      data.get(\"data\")\n-          .get(\"dataSets\")\n+      data.get(\"data\").get(\"dataSets\")\n           .get(dataSetId)\n           .get(\"http___timbuctoo_huygens_knaw_nl_static_v5_types_tabularFileList\")\n           .get(\"items\")\n-          .iterator()\n-    ).collect(toList());\n+          .iterator()).collect(toList());\n \n     Stream<JsonNode> rawCollections = stream(tabularFile.get(0).get(\"tim_hasCollectionList\").get(\"items\").iterator());\n     assertThat(rawCollections.collect(toList()), containsInAnyOrder(jsnO(\n-      \"title\", jsnO(\"value\", jsn(\"Persons\"))\n-      ),\n+      \"title\", jsnO(\"value\", jsn(\"Persons\"))),\n       jsnO(\n         \"title\", jsnO(\"value\", jsn(\"Persons_name_variants\"))\n       ),\n@@ -871,7 +817,7 @@ public class IntegrationTest {\n           \"mutation setViewConfig($dataSetId: String!, $collectionUri: String!, $type: String!, $value: String) \" +\n             \"{setViewConfig(dataSetId: $dataSetId, collectionUri: $collectionUri, viewConfig: [{type: $type, value: \" +\n             \"$value, subComponents: [], formatter: []}]){   type    value}}\"),\n-        \"variables\",\n+\"variables\",\n         jsnO(\n           \"dataSetId\", jsn(dataSetId),\n           \"collectionUri\", jsn(collectionUri),\n@@ -887,8 +833,7 @@ public class IntegrationTest {\n         jsnO(\n           \"type\", jsn(\"test3\"),\n           \"value\", jsn(\"test4\")\n-        )\n-        )\n+        ))\n       )\n     )));\n \n@@ -968,7 +913,7 @@ public class IntegrationTest {\n             \"    message\\n\" +\n             \"   }\" +\n             \"}\"),\n-        \"variables\",\n+\"variables\",\n         jsnO(\n           \"dataSetId\", jsn(dataSetId),\n           \"customSchema\", customSchema\n@@ -981,9 +926,7 @@ public class IntegrationTest {\n \n     assertThat(returnedData.get(\"data\").get(\"extendSchema\").get(\"message\").toString(),\n       is(\"\\\"Schema extended successfully.\\\"\"));\n-\n-\n-    Response retrieveExtendedSchema = call(\"/v5/graphql\")\n+Response retrieveExtendedSchema = call(\"/v5/graphql\")\n       .accept(MediaType.APPLICATION_JSON)\n       .post(Entity.entity(jsnO(\n         \"query\",\n@@ -1000,17 +943,15 @@ public class IntegrationTest {\n             \"      }\\n\" +\n             \"    }\\n\" +\n             \"  }\\n\" +\n-            \"}\", dataSetId))\n-      ).toString(), MediaType.valueOf(\"application/json\")));\n+            \"}\", dataSetId))).toString(), MediaType.valueOf(\"application/json\")));\n \n     assertThat(retrieveExtendedSchema.getStatus(), is(200));\n \n     ObjectNode retrievedData = retrieveExtendedSchema.readEntity(ObjectNode.class);\n \n-    assertThat(retrievedData.get(\"data\").get(\"dataSets\").get(dataSetId)\n-                            .get(\"http___timbuctoo_huygens_knaw_nl_datasets_clusius_PersonsList\")\n+    assertThat(retrievedData.get(\"data\").get(\"dataSets\").get(dataSetId).get(\"http___timbuctoo_huygens_knaw_nl_datasets_clusius_PersonsList\")\n                             .get(\"items\").get(0).get(\"test_test\").isNull(),\n-      is(true));\n+is(true));\n \n     ObjectNode customSchemaField3 = jsnO(\n       \"uri\", jsn(\"test_test3\"),\n@@ -1033,7 +974,7 @@ public class IntegrationTest {\n             \"    message\\n\" +\n             \"   }\" +\n             \"}\"),\n-        \"variables\",\n+\"variables\",\n         jsnO(\n           \"dataSetId\", jsn(dataSetId),\n           \"customSchema\", customSchema2\n@@ -1062,17 +1003,15 @@ public class IntegrationTest {\n             \"      }\\n\" +\n             \"    }\\n\" +\n             \"  }\\n\" +\n-            \"}\", dataSetId))\n-      ).toString(), MediaType.valueOf(\"application/json\")));\n+            \"}\", dataSetId))).toString(), MediaType.valueOf(\"application/json\")));\n \n     assertThat(retrieveExtendedSchema2.getStatus(), is(200));\n \n     ObjectNode retrievedData2 = retrieveExtendedSchema2.readEntity(ObjectNode.class);\n \n-    assertThat(retrievedData2.get(\"data\").get(\"dataSets\").get(dataSetId)\n-                             .get(\"http___timbuctoo_huygens_knaw_nl_datasets_clusius_PersonsList\")\n+    assertThat(retrievedData2.get(\"data\").get(\"dataSets\").get(dataSetId).get(\"http___timbuctoo_huygens_knaw_nl_datasets_clusius_PersonsList\")\n                              .get(\"items\").get(0).get(\"test_test3\").isNull(),\n-      is(true));\n+is(true));\n \n   }\n \n@@ -1123,7 +1062,7 @@ public class IntegrationTest {\n             \"    }\" +\n             \"  }\" +\n             \"}\"),\n-        \"variables\",\n+\"variables\",\n         jsnO(\"entity\", provenanceSchema)\n       ).toString(), MediaType.valueOf(\"application/json\")));\n \n@@ -1153,8 +1092,7 @@ public class IntegrationTest {\n             \"      }\\n\" +\n             \"    }\\n\" +\n             \"  }\\n\" +\n-            \"}\"\n-        ),\n+            \"}\"),\n         \"variables\", jsnO(\n           \"uri\", jsn(\"http://example.org/person1\"),\n           \"entity\", jsnO(\n@@ -1224,8 +1162,7 @@ public class IntegrationTest {\n             \"    }\\n\" +\n             \"  }\\n\" +\n             \"}\"\n-        )\n-      ).toString(), MediaType.APPLICATION_JSON));\n+  )).toString(), MediaType.APPLICATION_JSON));\n \n     assertThat(queryAfterMutation.readEntity(ObjectNode.class), is(jsnO(\n       \"data\",\n@@ -1282,16 +1219,13 @@ public class IntegrationTest {\n             \"  createDataSet(dataSetName: $dataSetName) {\" +\n             \"    dataSetId\" +\n             \"  }\" +\n-            \"}\"\n-        ),\n+            \"}\"),\n         \"variables\",\n         jsnO(\n           \"dataSetName\", jsn(dataSetName)\n         )\n       ).toString(), MediaType.valueOf(\"application/json\")));\n-\n-\n-    assertThat(graphQlCall.getStatus(), is(200));\n+assertThat(graphQlCall.getStatus(), is(200));\n     // check if the dataset is created\n     List<String> dataSetNamesOfDummy = getDataSetNamesOfDummy();\n     assertThat(dataSetNamesOfDummy, hasItem(PREFIX + \"__\" + dataSetName));\n@@ -1328,7 +1262,7 @@ public class IntegrationTest {\n             \"    }\\n\" +\n             \"  }\\n\" +\n             \"}\"),\n-        \"variables\",\n+\"variables\",\n         jsnO(\n           \"dataSetId\", jsn(dataSetId),\n           \"collectionUri\", jsn(collectionUri),\n@@ -1384,8 +1318,7 @@ public class IntegrationTest {\n                 \"      }\\n\" +\n                 \"    }\\n\" +\n                 \"  }\\n\" +\n-                \"}\"\n-            ),\n+                \"}\"),\n             \"variables\", jsnO(\n               \"dataSetId\", jsn(dataSetId)\n             )\n@@ -1432,8 +1365,7 @@ public class IntegrationTest {\n             \"  createDataSet(dataSetName: $dataSetName) {\" +\n             \"    dataSetId\" +\n             \"  }\" +\n-            \"}\"\n-        ),\n+            \"}\"),\n         \"variables\",\n         jsnO(\n           \"dataSetName\", jsn(dataSetName)\n@@ -1460,8 +1392,7 @@ public class IntegrationTest {\n                 \"  dataSetMetadata(dataSetId: $dataSetId) {\\n\" +\n                 \"    dataSetId\" +\n                 \"  }\\n\" +\n-                \"}\"\n-            ),\n+                \"}\"),\n             \"variables\", jsnO(\n               \"dataSetId\", jsn(dataSetId)\n             )\n@@ -1498,8 +1429,7 @@ public class IntegrationTest {\n             \"  createDataSet(dataSetName: $dataSetName) {\" +\n             \"    dataSetId\" +\n             \"  }\" +\n-            \"}\"\n-        ),\n+            \"}\"),\n         \"variables\",\n         jsnO(\n           \"dataSetName\", jsn(dataSetName)\n@@ -1525,8 +1455,7 @@ public class IntegrationTest {\n             \"  allDataSets {\\n\" +\n             \"    dataSetId\\n\" +\n             \"  }\\n\" +\n-            \"}\"\n-        ),\n+            \"}\"),\n         \"variables\",\n         jsnO(\n           \"dataSetName\", jsn(dataSetName)\n@@ -1535,8 +1464,7 @@ public class IntegrationTest {\n \n     assertThat(retrieveBeforeDelete.getStatus(), is(200));\n     ObjectNode dataSetsBeforeDelete = retrieveBeforeDelete.readEntity(ObjectNode.class);\n-    assertThat(stream(dataSetsBeforeDelete\n-        .get(\"data\")\n+    assertThat(stream(dataSetsBeforeDelete.get(\"data\")\n         .get(\"allDataSets\").iterator()\n       ).collect(toList()),\n       hasItem((JsonNode) jsnO(\"dataSetId\", jsn(dataSetId)))\n@@ -1551,8 +1479,7 @@ public class IntegrationTest {\n             \"  deleteDataSet(dataSetId: $dataSetId) {\" +\n             \"    dataSetId\" +\n             \"  }\" +\n-            \"}\"\n-        ),\n+            \"}\"),\n         \"variables\",\n         jsnO(\n           \"dataSetId\", jsn(dataSetId)\n@@ -1578,8 +1505,7 @@ public class IntegrationTest {\n             \"  allDataSets {\\n\" +\n             \"    dataSetId\\n\" +\n             \"  }\\n\" +\n-            \"}\"\n-        ),\n+            \"}\"),\n         \"variables\",\n         jsnO(\n           \"dataSetName\", jsn(dataSetName)\n@@ -1588,8 +1514,7 @@ public class IntegrationTest {\n \n     assertThat(retrieveAfterDelete.getStatus(), is(200));\n     ObjectNode dataSetsAfterDelete = retrieveAfterDelete.readEntity(ObjectNode.class);\n-    assertThat(stream(dataSetsAfterDelete\n-        .get(\"data\")\n+    assertThat(stream(dataSetsAfterDelete.get(\"data\")\n         .get(\"allDataSets\").iterator()\n       ).collect(toList()),\n       not(hasItem((JsonNode) jsnO(\"dataSetId\", jsn(dataSetId))))\n@@ -1620,8 +1545,7 @@ public class IntegrationTest {\n             \"  publish(dataSetId: $dataSetId) {\" +\n             \"    dataSetId\" +\n             \"  }\" +\n-            \"}\"\n-        ),\n+            \"}\"),\n         \"variables\",\n         jsnO(\n           \"dataSetId\", jsn(dataSetId)\n@@ -1637,8 +1561,7 @@ public class IntegrationTest {\n             \"  dataSetMetadata(dataSetId: $dataSetId) {\" +\n             \"    dataSetId\" +\n             \"  }\" +\n-            \"}\"\n-        ),\n+            \"}\"),\n         \"variables\",\n         jsnO(\n           \"dataSetId\", jsn(dataSetId)\n@@ -1700,8 +1623,7 @@ public class IntegrationTest {\n             \"      }\" +\n             \"    }\\n\" +\n             \"  }\\n\" +\n-            \"}\\n\"\n-        ),\n+            \"}\\n\"),\n         \"variables\",\n         jsnO(\n           \"dataSetId\",\n@@ -1748,8 +1670,7 @@ public class IntegrationTest {\n             \"    }\\n\" +\n             \"  }\\n\" +\n             \"}\"\n-        )\n-      ).toString(), MediaType.APPLICATION_JSON));\n+  )).toString(), MediaType.APPLICATION_JSON));\n \n     assertThat(queryData.readEntity(ObjectNode.class), is(jsnO(\n       \"data\",\n@@ -1815,8 +1736,7 @@ public class IntegrationTest {\n             \"    }\\n\" +\n             \"  }\\n\" +\n             \"}\"\n-        )\n-      ).toString(), MediaType.APPLICATION_JSON));\n+  )).toString(), MediaType.APPLICATION_JSON));\n \n     assertThat(queryData.readEntity(ObjectNode.class), is(jsnO(\n       \"data\",\n@@ -1859,8 +1779,7 @@ public class IntegrationTest {\n             \"      }\\n\" +\n             \"    }\\n\" +\n             \"  }\\n\" +\n-            \"}\"\n-        ),\n+            \"}\"),\n         \"variables\", jsnO(\n           \"uri\", jsn(\"http://example.org/person_new\"),\n           \"entity\", jsnO(\n@@ -1955,8 +1874,7 @@ public class IntegrationTest {\n             \"    }\\n\" +\n             \"  }\\n\" +\n             \"}\"\n-        )\n-      ).toString(), MediaType.APPLICATION_JSON));\n+  )).toString(), MediaType.APPLICATION_JSON));\n \n     ObjectNode queryAfterCreateNode = queryAfterCreate.readEntity(ObjectNode.class);\n     JsonNode hasAdditionListNode = queryAfterCreateNode\n@@ -2092,8 +2010,7 @@ public class IntegrationTest {\n             \"    }\\n\" +\n             \"  }\\n\" +\n             \"}\"\n-        )\n-      ).toString(), MediaType.APPLICATION_JSON));\n+  )).toString(), MediaType.APPLICATION_JSON));\n \n     assertThat(queryData.readEntity(ObjectNode.class), is(jsnO(\n       \"data\",\n@@ -2143,8 +2060,7 @@ public class IntegrationTest {\n             \"      }\\n\" +\n             \"    }\\n\" +\n             \"  }\\n\" +\n-            \"}\"\n-        ),\n+            \"}\"),\n         \"variables\", jsnO(\n           \"uri\", jsn(\"http://example.org/person1\"),\n           \"entity\", jsnO(\n@@ -2275,8 +2191,7 @@ public class IntegrationTest {\n             \"    }\\n\" +\n             \"  }\\n\" +\n             \"}\"\n-        )\n-      ).toString(), MediaType.APPLICATION_JSON));\n+  )).toString(), MediaType.APPLICATION_JSON));\n \n     assertThat(queryAfterEdit.readEntity(ObjectNode.class), is(jsnO(\n       \"data\",\n@@ -2397,8 +2312,7 @@ public class IntegrationTest {\n             \"    }\\n\" +\n             \"  }\\n\" +\n             \"}\"\n-        )\n-      ).toString(), MediaType.APPLICATION_JSON));\n+  )).toString(), MediaType.APPLICATION_JSON));\n \n     assertThat(queryData.readEntity(ObjectNode.class), is(jsnO(\n       \"data\",\n@@ -2441,8 +2355,7 @@ public class IntegrationTest {\n             \"      }\\n\" +\n             \"    }\\n\" +\n             \"  }\\n\" +\n-            \"}\"\n-        ),\n+            \"}\"),\n         \"variables\", jsnO(\n           \"uri\", jsn(\"http://example.org/person1\")\n         ),\n@@ -2488,8 +2401,7 @@ public class IntegrationTest {\n             \"    }\\n\" +\n             \"  }\\n\" +\n             \"}\"\n-        )\n-      ).toString(), MediaType.APPLICATION_JSON));\n+  )).toString(), MediaType.APPLICATION_JSON));\n \n     assertThat(queryOnEntityAfterDelete.readEntity(ObjectNode.class), is(jsnO(\n       \"data\",\n@@ -2551,8 +2463,7 @@ public class IntegrationTest {\n             \"    }\\n\" +\n             \"  }\\n\" +\n             \"}\"\n-        )\n-      ).toString(), MediaType.APPLICATION_JSON));\n+  )).toString(), MediaType.APPLICATION_JSON));\n \n     ObjectNode queryAfterDeleteNode = queryProvAfterDelete.readEntity(ObjectNode.class);\n     JsonNode hasDeletionList = queryAfterDeleteNode\n@@ -2593,8 +2504,7 @@ public class IntegrationTest {\n         )\n       ),\n       jsnO(\"tim_pred_hasKey\", jsnO(\n-        \"uri\", jsn(\"http://schema.org/givenName\")\n-        ),\n+        \"uri\", jsn(\"http://schema.org/givenName\")),\n         \"tim_pred_hasValue\", jsnO(\n           \"tim_pred_rawValue\", jsnO(\n             \"value\", jsn(\"Jan\")\n@@ -2602,7 +2512,7 @@ public class IntegrationTest {\n           \"tim_pred_type\", jsnO(\n             \"value\", jsn(\"http://www.w3.org/2001/XMLSchema#string\")\n           ))\n-      )\n+  )\n     ));\n   }\n \n@@ -2632,17 +2542,15 @@ public class IntegrationTest {\n             \"    dataSetId\\n\" +\n             \"  }\\n\" +\n             \"}\"\n-        )\n-      ).toString(), MediaType.APPLICATION_JSON));\n+  )).toString(), MediaType.APPLICATION_JSON));\n \n-    Iterable<JsonNode> datasets = () -> queryData.readEntity(ObjectNode.class)\n-                                                 .get(\"data\")\n+    Iterable<JsonNode> datasets = () -> queryData.readEntity(ObjectNode.class).get(\"data\")\n                                                  .get(\"dataSetMetadataList\")\n                                                  .elements();\n-    List<String> dataSetIds =\n+List<String> dataSetIds =\n       StreamSupport.stream(datasets.spliterator(), false).map(dataSet -> dataSet.get(\"dataSetId\").asText())\n                    .collect(toList());\n-    assertThat(dataSetIds, hasItem(dataSetId));\n+assertThat(dataSetIds, hasItem(dataSetId));\n   }\n \n   @Test\n@@ -2662,8 +2570,7 @@ public class IntegrationTest {\n             \"    dataSetId\\n\" +\n             \"  }\\n\" +\n             \"}\\n\"\n-        )\n-      ).toString(), MediaType.APPLICATION_JSON));\n+  )).toString(), MediaType.APPLICATION_JSON));\n \n     // retrieve data sets as a user that is not logged in before publishing the data set\n     Response queryData = callWithoutAuthentication(\"/v5/graphql\")\n@@ -2676,14 +2583,12 @@ public class IntegrationTest {\n             \"    dataSetId\\n\" +\n             \"  }\\n\" +\n             \"}\"\n-        )\n-      ).toString(), MediaType.APPLICATION_JSON));\n+  )).toString(), MediaType.APPLICATION_JSON));\n \n-    List<JsonNode> datasetsBeforePublish = Lists.newArrayList(queryData.readEntity(ObjectNode.class)\n-                                                                       .get(\"data\")\n+    List<JsonNode> datasetsBeforePublish = Lists.newArrayList(queryData.readEntity(ObjectNode.class).get(\"data\")\n                                                                        .get(\"dataSetMetadataList\")\n                                                                        .elements());\n-    assertThat(datasetsBeforePublish, is(empty()));\n+assertThat(datasetsBeforePublish, is(empty()));\n \n     // publish the data set\n     call(\"/v5/graphql\")\n@@ -2696,8 +2601,7 @@ public class IntegrationTest {\n             \"    uri\\n\" +\n             \"  }\\n\" +\n             \"}\\n\"\n-        )\n-      ).toString(), MediaType.APPLICATION_JSON));\n+  )).toString(), MediaType.APPLICATION_JSON));\n \n \n     // retrieve data sets as a user that is not logged in after publishing\n@@ -2711,43 +2615,34 @@ public class IntegrationTest {\n             \"    dataSetId\\n\" +\n             \"  }\\n\" +\n             \"}\"\n-        )\n-      ).toString(), MediaType.APPLICATION_JSON));\n+  )).toString(), MediaType.APPLICATION_JSON));\n \n-    Iterable<JsonNode> datasetsAfterPublish = () -> queryDataAfterPublish.readEntity(ObjectNode.class)\n-                                                                         .get(\"data\")\n+    Iterable<JsonNode> datasetsAfterPublish = () -> queryDataAfterPublish.readEntity(ObjectNode.class).get(\"data\")\n                                                                          .get(\"dataSetMetadataList\")\n                                                                          .elements();\n-    List<String> dataSetIds =\n+List<String> dataSetIds =\n       StreamSupport.stream(datasetsAfterPublish.spliterator(), false).map(dataSet -> dataSet.get(\"dataSetId\").asText())\n                    .collect(toList());\n-\n-    assertThat(dataSetIds, hasItem(dataSetId));\n+assertThat(dataSetIds, hasItem(dataSetId));\n   }\n \n   @Test\n   public void csvExportIsPossibleForLists() throws Exception {\n     String dataSetName = \"replacedata\" + UUID.randomUUID().toString().replace(\"-\", \"_\");\n     String dataSetId = createDataSetId(dataSetName);\n-    Response uploadResponse = multipartPost(\n-        \"/v5/\" + PREFIX + \"/\" + dataSetName + \"/upload/rdf?forceCreation=true\",\n+    Response uploadResponse = multipartPost(\"/v5/\" + PREFIX + \"/\" + dataSetName + \"/upload/rdf?forceCreation=true\",\n         new File(getResource(IntegrationTest.class, \"smalldataset.nt\").toURI()),\n         \"application/n-triples\",\n-        ImmutableMap.of(\n-            \"encoding\", \"UTF-8\",\n-            \"uri\", \"http://example.com/replacedata\"\n-        )\n-    );\n+        ImmutableMap.of(\"encoding\", \"UTF-8\",\n+            \"uri\", \"http://example.com/replacedata\"));\n     assertThat(uploadResponse.getStatus(), is(201));\n \n     // query person before delete\n-    Response queryData = call(\"/v5/graphql\")\n-        .accept(\"text/csv\")\n+    Response queryData = call(\"/v5/graphql\").accept(\"text/csv\")\n         .post(Entity.entity(jsnO(\n             \"query\",\n-            jsn(\n-                \"query {\\n\" +\n-                    \"  dataSets {\\n\" +\n+            jsn(\"query {\\n\" +\n+\"  dataSets {\\n\" +\n                     \"    \" + dataSetId + \"{\\n\" +\n                     \"      schema_PersonList {\\n\" +\n                     \"        items {\\n\" +\n@@ -2763,16 +2658,11 @@ public class IntegrationTest {\n                     \"      }\\n\" +\n                     \"    }\\n\" +\n                     \"  }\\n\" +\n-                    \"}\"\n-            )\n-        ).toString(), MediaType.APPLICATION_JSON));\n-\n-    final String data = queryData.readEntity(String.class);\n-    assertThat(data, is(\n-        \"schema_familyName,schema_givenNameList.0,schema_givenNameList.1,schema_givenNameList.2\\r\\n\" +\n+                    \"}\")).toString(), MediaType.APPLICATION_JSON));\n+final String data = queryData.readEntity(String.class);\n+    assertThat(data, is(\"schema_familyName,schema_givenNameList.0,schema_givenNameList.1,schema_givenNameList.2\\r\\n\" +\n         \"Jansen,Jan,,\\r\\n\" +\n-        \"van Hasselt,Alexander,Michiel,Willem\\r\\n\"\n-    ));\n+        \"van Hasselt,Alexander,Michiel,Willem\\r\\n\"));\n   }\n \n   private List<String> getDataSetNamesOfDummy() {\n@@ -2783,8 +2673,7 @@ public class IntegrationTest {\n \n     assertThat(graphqlCall.getStatus(), is(200));\n     return stream(\n-      objectNode\n-        .get(\"data\")\n+      objectNode.get(\"data\")\n         .get(\"aboutMe\")\n         .get(\"dataSets\").iterator())\n       .map(x -> x.get(\"dataSetId\").asText())\n@@ -2826,8 +2715,7 @@ public class IntegrationTest {\n       .header(\"Authorization\", AUTH);\n   }\n \n-\n-  private Invocation.Builder callWithoutAuthentication(String path) {\n+private Invocation.Builder callWithoutAuthentication(String path) {\n     String server;\n     if (path.startsWith(\"http://\") || path.startsWith(\"https://\")) {\n       server = path;\n@@ -2841,4 +2729,4 @@ public class IntegrationTest {\n       // .register(new LoggingFilter(Logger.getLogger(LoggingFilter.class.getName()), true))\n       .request();\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 252
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/errored/1/47/IntegrationTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/styler_random/47/IntegrationTest.java\nindex a692d146652..ffc1264e10a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/errored/1/47/IntegrationTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/styler_random/47/IntegrationTest.java\n@@ -642,7 +642,7 @@ public class IntegrationTest {\n   }\n \n   @Test\n-  public void resourceSyncDataSet() throws Exception{\n+  public void resourceSyncDataSet() throws Exception {\n     String dataSetName = \"resourcesync\" + UUID.randomUUID().toString().replace(\"-\", \"_\");\n     Response uploadResponse = multipartPost(\n         \"/v5/\" + PREFIX + \"/\" + dataSetName + \"/upload/rdf?forceCreation=true\",\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/errored/1/47/IntegrationTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/styler_three_grams/47/IntegrationTest.java\nindex a692d146652..ffc1264e10a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/errored/1/47/IntegrationTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/styler_three_grams/47/IntegrationTest.java\n@@ -642,7 +642,7 @@ public class IntegrationTest {\n   }\n \n   @Test\n-  public void resourceSyncDataSet() throws Exception{\n+  public void resourceSyncDataSet() throws Exception {\n     String dataSetName = \"resourcesync\" + UUID.randomUUID().toString().replace(\"-\", \"_\");\n     Response uploadResponse = multipartPost(\n         \"/v5/\" + PREFIX + \"/\" + dataSetName + \"/upload/rdf?forceCreation=true\",\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
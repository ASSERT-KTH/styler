{
    "project_name": "Activiti-Activiti",
    "error_id": "501",
    "information": {
        "errors": [
            {
                "line": "16",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * limitations under the License.\n */\npackage org.activiti.engine.impl.variable;\n\nimport com.fasterxml.jackson.databind.JsonNode;\nimport com.fasterxml.jackson.databind.ObjectMapper;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/501/JsonTypeConverter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler/501/JsonTypeConverter.java\nindex 92a4293ab95..23320260bcb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/501/JsonTypeConverter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler/501/JsonTypeConverter.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.engine.impl.variable;\n \n import com.fasterxml.jackson.databind.JsonNode;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/501/JsonTypeConverter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/intellij/501/JsonTypeConverter.java\nindex 92a4293ab95..a7067a6e466 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/501/JsonTypeConverter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/intellij/501/JsonTypeConverter.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.engine.impl.variable;\n \n import com.fasterxml.jackson.databind.JsonNode;\n@@ -43,13 +44,13 @@ public class JsonTypeConverter {\n                     final String type = classNode.asText();\n                     convertedValue = convertToType(jsonValue, type);\n                 } else if (valueFields.getTextValue2() != null &&\n-                    !jsonValue.getClass().getName().equals(valueFields.getTextValue2())) {\n+                        !jsonValue.getClass().getName().equals(valueFields.getTextValue2())) {\n                     convertedValue = convertToType(jsonValue, valueFields.getTextValue2());\n                 }\n             } catch (ClassNotFoundException e) {\n                 LOGGER\n-                    .warn(\"Unable to obtain type for json variable object \" + valueFields.getName(),\n-                        e);\n+                        .warn(\"Unable to obtain type for json variable object \" + valueFields.getName(),\n+                                e);\n             }\n         }\n \n",
            "diff_size": 4
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "16",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "25",
                    "severity": "error",
                    "message": "'CLASS_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "41",
                    "severity": "error",
                    "message": "Comment has incorrect indentation level 12, expected is 6, indentation should be the same level as line 42.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/501/JsonTypeConverter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/codebuff/501/JsonTypeConverter.java\nindex 92a4293ab95..319fff769e5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/501/JsonTypeConverter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/codebuff/501/JsonTypeConverter.java\n@@ -21,47 +21,48 @@ import org.apache.commons.lang3.StringUtils;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n+\n public class JsonTypeConverter {\n \n-    private static final Logger LOGGER = LoggerFactory.getLogger(JsonType.class);\n+  private static final Logger LOGGER = LoggerFactory.getLogger(JsonType.class);\n \n-    private ObjectMapper objectMapper;\n-    private String javaClassFieldForJackson;\n+  private ObjectMapper objectMapper;\n \n-    public JsonTypeConverter(ObjectMapper objectMapper, String javaClassFieldForJackson) {\n-        this.objectMapper = objectMapper;\n-        this.javaClassFieldForJackson = javaClassFieldForJackson;\n-    }\n+  private String javaClassFieldForJackson;\n+\n+  public JsonTypeConverter(ObjectMapper objectMapper, String javaClassFieldForJackson) {\n+    this.objectMapper = objectMapper;\n+    this.javaClassFieldForJackson = javaClassFieldForJackson;\n+  }\n \n-    public Object convertToValue(JsonNode jsonValue, ValueFields valueFields) {\n-        Object convertedValue = jsonValue;\n-        if (jsonValue != null && StringUtils.isNotBlank(javaClassFieldForJackson)) {\n+  public Object convertToValue(JsonNode jsonValue, ValueFields valueFields) {\n+    Object convertedValue = jsonValue;\n+    if (jsonValue != null && StringUtils.isNotBlank(javaClassFieldForJackson)) {\n             //can find type so long as JsonTypeInfo annotation on the class - see https://stackoverflow.com/a/28384407/9705485\n-            JsonNode classNode = jsonValue.get(javaClassFieldForJackson);\n-            try {\n-                if (classNode != null) {\n-                    final String type = classNode.asText();\n-                    convertedValue = convertToType(jsonValue, type);\n-                } else if (valueFields.getTextValue2() != null &&\n-                    !jsonValue.getClass().getName().equals(valueFields.getTextValue2())) {\n-                    convertedValue = convertToType(jsonValue, valueFields.getTextValue2());\n-                }\n-            } catch (ClassNotFoundException e) {\n-                LOGGER\n-                    .warn(\"Unable to obtain type for json variable object \" + valueFields.getName(),\n-                        e);\n-            }\n+      JsonNode classNode = jsonValue.get(javaClassFieldForJackson);\n+      try {\n+        if (classNode != null) {\n+          final String type = classNode.asText();\n+          convertedValue = convertToType(jsonValue, type);\n+        } else if (valueFields.getTextValue2() != null && !jsonValue.getClass().getName().equals(valueFields.getTextValue2())) {\n+          convertedValue = convertToType(jsonValue, valueFields.getTextValue2());\n         }\n-\n-        return convertedValue;\n+      } catch (ClassNotFoundException e) {\n+        LOGGER.warn(\"Unable to obtain type for json variable object \" + valueFields.getName(),\n+                    e);\n+      }\n     }\n+    return convertedValue;\n+  }\n \n-    private Object convertToType(JsonNode jsonValue, String type) throws ClassNotFoundException {\n-        return objectMapper.convertValue(jsonValue, loadClass(type));\n-    }\n+  private Object convertToType(JsonNode jsonValue, String type) throws ClassNotFoundException {\n+    return objectMapper.convertValue(jsonValue, loadClass(type));\n+  }\n \n-    private Class<?> loadClass(String type) throws ClassNotFoundException {\n-        return Class.forName(type, false, this.getClass().getClassLoader());\n-    }\n+  private Class<?> loadClass(String type) throws ClassNotFoundException {\n+    return Class.forName(type,\n+                         false,\n+                         this.getClass().getClassLoader());\n+  }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 42
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/501/JsonTypeConverter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_random/501/JsonTypeConverter.java\nindex 92a4293ab95..23320260bcb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/501/JsonTypeConverter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_random/501/JsonTypeConverter.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.engine.impl.variable;\n \n import com.fasterxml.jackson.databind.JsonNode;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/501/JsonTypeConverter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_three_grams/501/JsonTypeConverter.java\nindex 92a4293ab95..23320260bcb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/501/JsonTypeConverter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_three_grams/501/JsonTypeConverter.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.engine.impl.variable;\n \n import com.fasterxml.jackson.databind.JsonNode;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
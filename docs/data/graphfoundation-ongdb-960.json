{
    "project_name": "graphfoundation-ongdb",
    "error_id": "960",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "62",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "142",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "142",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "150",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "150",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "162",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "162",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "166",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "166",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "187",
                    "column": "64",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "187",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "188",
                    "column": "62",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "188",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "189",
                    "column": "60",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "189",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "190",
                    "column": "76",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "190",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "206",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "206",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "208",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "208",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "211",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "218",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "218",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "220",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "220",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "223",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "234",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "234",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "234",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/960/PaxosInstance.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/960/PaxosInstance.java\nindex d2bfd6b2a8d..f01e0f6de3b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/960/PaxosInstance.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/960/PaxosInstance.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.cluster.protocol.atomicbroadcast.multipaxos;\n \n import java.net.URI;\n@@ -32,209 +33,207 @@ import org.neo4j.cluster.protocol.atomicbroadcast.Payload;\n public class PaxosInstance\n {\n \n-    enum State\n-    {\n-        empty,\n-        p1_pending,\n-        p1_ready,\n-        p2_pending,\n-        closed,\n-        delivered\n-    }\n-    PaxosInstanceStore store;\n-\n-    InstanceId id;\n-    State state = State.empty;\n-    long ballot;\n-    List<URI> acceptors;\n-    List<ProposerMessage.PromiseState> promises = new ArrayList<>();\n-    List<ProposerMessage.AcceptedState> accepts = new ArrayList<>();\n-    List<ProposerMessage.RejectAcceptState> rejectedAccepts = new ArrayList<>();\n-    Object value_1;\n-    long phase1Ballot;\n-    Object value_2;\n-    // This is true iff the acceptors did not already have a value for this instance\n-    boolean clientValue;\n-    String conversationIdHeader;\n-\n-    public PaxosInstance( PaxosInstanceStore store, InstanceId instanceId )\n-    {\n-        this.store = store;\n-        this.id = instanceId;\n-    }\n-\n-    public boolean isState( State s )\n-    {\n-        return state.equals( s );\n-    }\n-\n-    public long getBallot()\n-    {\n-        return ballot;\n-    }\n-\n-    public void propose( long ballot, List<URI> acceptors )\n-    {\n-        this.state = State.p1_pending;\n-        this.acceptors = acceptors;\n-        this.ballot = ballot;\n-    }\n-\n-    public void phase1Timeout( long ballot )\n-    {\n-        this.ballot = ballot;\n-        promises.clear();\n-    }\n-\n-    public void promise( ProposerMessage.PromiseState promiseState )\n-    {\n-        promises.add( promiseState );\n-        if ( promiseState.getValue() != null && promiseState.getBallot() >= phase1Ballot )\n+  enum State\n+  {\n+    empty,\n+    p1_pending,\n+    p1_ready,\n+    p2_pending,\n+    closed,\n+    delivered\n+  }\n+\n+  PaxosInstanceStore store;\n+\n+  InstanceId id;\n+  State state = State.empty;\n+  long ballot;\n+  List<URI> acceptors;\n+  List<ProposerMessage.PromiseState> promises = new ArrayList<>();\n+  List<ProposerMessage.AcceptedState> accepts = new ArrayList<>();\n+  List<ProposerMessage.RejectAcceptState> rejectedAccepts = new ArrayList<>();\n+  Object value_1;\n+  long phase1Ballot;\n+  Object value_2;\n+  // This is true iff the acceptors did not already have a value for this instance\n+  boolean clientValue;\n+  String conversationIdHeader;\n+\n+  public PaxosInstance(PaxosInstanceStore store, InstanceId instanceId)\n+  {\n+    this.store = store;\n+    this.id = instanceId;\n+  }\n+\n+  public boolean isState(State s)\n+  {\n+    return state.equals(s);\n+  }\n+\n+  public long getBallot()\n+  {\n+    return ballot;\n+  }\n+\n+  public void propose(long ballot, List<URI> acceptors)\n+  {\n+    this.state = State.p1_pending;\n+    this.acceptors = acceptors;\n+    this.ballot = ballot;\n+  }\n+\n+  public void phase1Timeout(long ballot)\n+  {\n+    this.ballot = ballot;\n+    promises.clear();\n+  }\n+\n+  public void promise(ProposerMessage.PromiseState promiseState)\n+  {\n+    promises.add(promiseState);\n+    if (promiseState.getValue() != null && promiseState.getBallot() >= phase1Ballot)\n+    {\n+      value_1 = promiseState.getValue();\n+      phase1Ballot = promiseState.getBallot();\n+    }\n+  }\n+\n+  public boolean isPromised(int minimumQuorumSize)\n+  {\n+    return promises.size() == minimumQuorumSize;\n+  }\n+\n+  public void ready(Object value, boolean clientValue)\n+  {\n+    assertNotNull(value);\n+\n+    state = State.p1_ready;\n+    promises.clear();\n+    value_1 = null;\n+    phase1Ballot = 0;\n+    value_2 = value;\n+    this.clientValue = clientValue;\n+  }\n+\n+  public void pending()\n+  {\n+    state = State.p2_pending;\n+  }\n+\n+  public void phase2Timeout(long ballot)\n+  {\n+    state = State.p1_pending;\n+    this.ballot = ballot;\n+    promises.clear();\n+    value_1 = null;\n+    phase1Ballot = 0;\n+  }\n+\n+  public void accepted(ProposerMessage.AcceptedState acceptedState)\n+  {\n+    accepts.add(acceptedState);\n+  }\n+\n+  public void rejected(ProposerMessage.RejectAcceptState rejectAcceptState)\n+  {\n+    rejectedAccepts.add(rejectAcceptState);\n+  }\n+\n+  public boolean isAccepted(int minimumQuorumSize)\n+  {\n+    // If we have received enough responses to meet quorum and a majority\n+    // are accepts, then the instance is considered accepted\n+    return accepts.size() + rejectedAccepts.size() == minimumQuorumSize &&\n+        accepts.size() > rejectedAccepts.size();\n+  }\n+\n+  public void closed(Object value, String conversationIdHeader)\n+  {\n+    assertNotNull(value);\n+\n+    value_2 = value;\n+    state = State.closed;\n+    accepts.clear();\n+    rejectedAccepts.clear();\n+    acceptors = null;\n+    this.conversationIdHeader = conversationIdHeader;\n+  }\n+\n+  private void assertNotNull(Object value)\n+  {\n+    if (value == null)\n+    {\n+      throw new IllegalArgumentException(\"value null\");\n+    }\n+  }\n+\n+  public void delivered()\n+  {\n+    state = State.delivered;\n+    store.delivered(id);\n+  }\n+\n+  public List<URI> getAcceptors()\n+  {\n+    return acceptors;\n+  }\n+\n+  public PaxosInstance snapshot(PaxosInstanceStore store)\n+  {\n+    PaxosInstance snap = new PaxosInstance(store, id);\n+\n+    snap.state = state;\n+    snap.ballot = ballot;\n+    snap.acceptors = acceptors == null ? null : new ArrayList<>(acceptors);\n+    snap.promises = promises == null ? null : new ArrayList<>(promises);\n+    snap.accepts = accepts == null ? null : new ArrayList<>(accepts);\n+    snap.rejectedAccepts = rejectedAccepts == null ? null : new ArrayList<>(rejectedAccepts);\n+    snap.value_1 = value_1;\n+    snap.phase1Ballot = phase1Ballot;\n+    snap.value_2 = value_2;\n+    snap.clientValue = clientValue;\n+    snap.conversationIdHeader = conversationIdHeader;\n+\n+    return snap;\n+  }\n+\n+  @Override\n+  public String toString()\n+  {\n+    try\n+    {\n+      Object toStringValue1 = null;\n+      if (value_1 != null)\n+      {\n+        if (value_1 instanceof Payload)\n         {\n-            value_1 = promiseState.getValue();\n-            phase1Ballot = promiseState.getBallot();\n-        }\n-    }\n-\n-    public boolean isPromised( int minimumQuorumSize )\n-    {\n-        return promises.size() == minimumQuorumSize;\n-    }\n-\n-    public void ready( Object value, boolean clientValue )\n-    {\n-        assertNotNull( value );\n-\n-        state = State.p1_ready;\n-        promises.clear();\n-        value_1 = null;\n-        phase1Ballot = 0;\n-        value_2 = value;\n-        this.clientValue = clientValue;\n-    }\n-\n-    public void pending()\n-    {\n-        state = State.p2_pending;\n-    }\n-\n-    public void phase2Timeout( long ballot )\n-    {\n-        state = State.p1_pending;\n-        this.ballot = ballot;\n-        promises.clear();\n-        value_1 = null;\n-        phase1Ballot = 0;\n-    }\n-\n-    public void accepted( ProposerMessage.AcceptedState acceptedState )\n-    {\n-        accepts.add( acceptedState );\n-    }\n-\n-    public void rejected( ProposerMessage.RejectAcceptState rejectAcceptState )\n-    {\n-        rejectedAccepts.add( rejectAcceptState );\n-    }\n-\n-    public boolean isAccepted( int minimumQuorumSize )\n-    {\n-        // If we have received enough responses to meet quorum and a majority\n-        // are accepts, then the instance is considered accepted\n-        return accepts.size() + rejectedAccepts.size() == minimumQuorumSize &&\n-                accepts.size() > rejectedAccepts.size();\n-    }\n-\n-    public void closed( Object value, String conversationIdHeader )\n-    {\n-        assertNotNull( value );\n-\n-        value_2 = value;\n-        state = State.closed;\n-        accepts.clear();\n-        rejectedAccepts.clear();\n-        acceptors = null;\n-        this.conversationIdHeader = conversationIdHeader;\n-    }\n-\n-    private void assertNotNull( Object value )\n-    {\n-        if ( value == null )\n+          toStringValue1 = new AtomicBroadcastSerializer().receive((Payload) value_1).toString();\n+        } else\n         {\n-            throw new IllegalArgumentException( \"value null\" );\n+          toStringValue1 = value_1.toString();\n         }\n-    }\n-\n-    public void delivered()\n-    {\n-        state = State.delivered;\n-        store.delivered( id );\n-    }\n-\n-    public List<URI> getAcceptors()\n-    {\n-        return acceptors;\n-    }\n+      }\n \n-    public PaxosInstance snapshot( PaxosInstanceStore store )\n-    {\n-        PaxosInstance snap = new PaxosInstance( store, id );\n-\n-        snap.state = state;\n-        snap.ballot = ballot;\n-        snap.acceptors = acceptors == null ? null : new ArrayList<>( acceptors );\n-        snap.promises = promises == null ? null : new ArrayList<>( promises );\n-        snap.accepts = accepts == null ? null : new ArrayList<>( accepts );\n-        snap.rejectedAccepts = rejectedAccepts == null ? null : new ArrayList<>( rejectedAccepts );\n-        snap.value_1 = value_1;\n-        snap.phase1Ballot = phase1Ballot;\n-        snap.value_2 = value_2;\n-        snap.clientValue = clientValue;\n-        snap.conversationIdHeader = conversationIdHeader;\n-\n-        return snap;\n-    }\n-\n-    @Override\n-    public String toString()\n-    {\n-        try\n+      Object toStringValue2 = null;\n+      if (value_2 != null)\n+      {\n+        if (value_2 instanceof Payload)\n         {\n-            Object toStringValue1 = null;\n-            if ( value_1 != null )\n-            {\n-                if ( value_1 instanceof Payload )\n-                {\n-                    toStringValue1 = new AtomicBroadcastSerializer().receive( (Payload) value_1 ).toString();\n-                }\n-                else\n-                {\n-                    toStringValue1 = value_1.toString();\n-                }\n-            }\n-\n-            Object toStringValue2 = null;\n-            if ( value_2 != null )\n-            {\n-                if ( value_2 instanceof Payload )\n-                {\n-                    toStringValue2 = new AtomicBroadcastSerializer().receive( (Payload) value_2 ).toString();\n-                }\n-                else\n-                {\n-                    toStringValue2 = value_2.toString();\n-                }\n-            }\n-\n-            return \"[id:\" + id +\n-                   \" state:\" + state.name() +\n-                   \" b:\" + ballot +\n-                   \" v1:\" + toStringValue1 +\n-                   \" v2:\" + toStringValue2 + \"]\";\n-        }\n-        catch ( Throwable e )\n+          toStringValue2 = new AtomicBroadcastSerializer().receive((Payload) value_2).toString();\n+        } else\n         {\n-            return \"\";\n+          toStringValue2 = value_2.toString();\n         }\n+      }\n+\n+      return \"[id:\" + id +\n+          \" state:\" + state.name() +\n+          \" b:\" + ballot +\n+          \" v1:\" + toStringValue1 +\n+          \" v2:\" + toStringValue2 + \"]\";\n+    } catch (Throwable e)\n+    {\n+      return \"\";\n     }\n+  }\n }\n",
            "diff_size": 324
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "139",
                    "column": "77",
                    "severity": "error",
                    "message": "'&&' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/960/PaxosInstance.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/960/PaxosInstance.java\nindex d2bfd6b2a8d..d68ab547ef2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/960/PaxosInstance.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/960/PaxosInstance.java\n@@ -31,17 +31,13 @@ import org.neo4j.cluster.protocol.atomicbroadcast.Payload;\n  */\n public class PaxosInstance\n {\n-\n     enum State\n     {\n-        empty,\n-        p1_pending,\n-        p1_ready,\n-        p2_pending,\n-        closed,\n+        empty, p1_pending, p1_ready, p2_pending, closed,\n         delivered\n     }\n-    PaxosInstanceStore store;\n+\n+PaxosInstanceStore store;\n \n     InstanceId id;\n     State state = State.empty;\n@@ -104,8 +100,7 @@ public class PaxosInstance\n     public void ready( Object value, boolean clientValue )\n     {\n         assertNotNull( value );\n-\n-        state = State.p1_ready;\n+state = State.p1_ready;\n         promises.clear();\n         value_1 = null;\n         phase1Ballot = 0;\n@@ -141,15 +136,13 @@ public class PaxosInstance\n     {\n         // If we have received enough responses to meet quorum and a majority\n         // are accepts, then the instance is considered accepted\n-        return accepts.size() + rejectedAccepts.size() == minimumQuorumSize &&\n-                accepts.size() > rejectedAccepts.size();\n+        return accepts.size() + rejectedAccepts.size() == minimumQuorumSize &&accepts.size() > rejectedAccepts.size();\n     }\n \n     public void closed( Object value, String conversationIdHeader )\n     {\n         assertNotNull( value );\n-\n-        value_2 = value;\n+value_2 = value;\n         state = State.closed;\n         accepts.clear();\n         rejectedAccepts.clear();\n@@ -179,8 +172,7 @@ public class PaxosInstance\n     public PaxosInstance snapshot( PaxosInstanceStore store )\n     {\n         PaxosInstance snap = new PaxosInstance( store, id );\n-\n-        snap.state = state;\n+snap.state = state;\n         snap.ballot = ballot;\n         snap.acceptors = acceptors == null ? null : new ArrayList<>( acceptors );\n         snap.promises = promises == null ? null : new ArrayList<>( promises );\n@@ -205,7 +197,7 @@ public class PaxosInstance\n             {\n                 if ( value_1 instanceof Payload )\n                 {\n-                    toStringValue1 = new AtomicBroadcastSerializer().receive( (Payload) value_1 ).toString();\n+                    toStringValue1 = new AtomicBroadcastSerializer().receive( (Payload) value_1).toString();\n                 }\n                 else\n                 {\n@@ -218,7 +210,7 @@ public class PaxosInstance\n             {\n                 if ( value_2 instanceof Payload )\n                 {\n-                    toStringValue2 = new AtomicBroadcastSerializer().receive( (Payload) value_2 ).toString();\n+                    toStringValue2 = new AtomicBroadcastSerializer().receive( (Payload) value_2).toString();\n                 }\n                 else\n                 {\n@@ -226,15 +218,11 @@ public class PaxosInstance\n                 }\n             }\n \n-            return \"[id:\" + id +\n-                   \" state:\" + state.name() +\n-                   \" b:\" + ballot +\n-                   \" v1:\" + toStringValue1 +\n-                   \" v2:\" + toStringValue2 + \"]\";\n-        }\n+            return \"[id:\" + id + \" state:\" + state.name() + \" b:\" + ballot + \" v1:\" + toStringValue1 + \" v2:\" + toStringValue2 + \"]\";\n+    }\n         catch ( Throwable e )\n         {\n             return \"\";\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 25
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
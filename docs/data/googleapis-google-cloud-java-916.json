{
    "project_name": "googleapis-google-cloud-java",
    "error_id": "916",
    "information": {
        "errors": [
            {
                "line": "318",
                "severity": "warning",
                "message": "Line is longer than 100 characters (found 104).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "     * the query will use BigQuery's <a href=\"https://cloud.google.com/bigquery/sql-reference/\">\n     * Standard SQL</a>. When set to {@code false}, the values of\n     * {@link #setAllowLargeResults(Boolean)} and {@link #setFlattenResults(Boolean)} are ignored; query\n     * will be run as if {@link #setAllowLargeResults(Boolean)} is {@code true} and\n     * {@link #setFlattenResults(Boolean)} is {@code false}. If not set, legacy SQL dialect is used.\n     * This property is experimental and might be subject to change.",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "318",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 104).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "318",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 104).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/916/QueryJobConfiguration.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/intellij/916/QueryJobConfiguration.java\nindex 961183025c9..d2acd1f723c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/916/QueryJobConfiguration.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/intellij/916/QueryJobConfiguration.java\n@@ -183,7 +183,7 @@ public final class QueryJobConfiguration extends JobConfiguration {\n      * Adds a new external table definition. If a definition already exists for {@code tableName}\n      * it is updated.\n      *\n-     * @param tableName name of the table\n+     * @param tableName       name of the table\n      * @param tableDefinition external data configuration for the table used by this query\n      */\n     public Builder addTableDefinition(String tableName, ExternalTableDefinition tableDefinition) {\n@@ -211,7 +211,7 @@ public final class QueryJobConfiguration extends JobConfiguration {\n      * Sets whether the job is allowed to create tables.\n      *\n      * @see <a href=\"https://cloud.google.com/bigquery/docs/reference/v2/jobs#configuration.query.createDisposition\">\n-     *     Create Disposition</a>\n+     * Create Disposition</a>\n      */\n     public Builder setCreateDisposition(CreateDisposition createDisposition) {\n       this.createDisposition = createDisposition;\n@@ -223,7 +223,7 @@ public final class QueryJobConfiguration extends JobConfiguration {\n      * Sets the action that should occur if the destination table already exists.\n      *\n      * @see <a href=\"https://cloud.google.com/bigquery/docs/reference/v2/jobs#configuration.query.writeDisposition\">\n-     *     Write Disposition</a>\n+     * Write Disposition</a>\n      */\n     public Builder setWriteDisposition(WriteDisposition writeDisposition) {\n       this.writeDisposition = writeDisposition;\n@@ -266,7 +266,7 @@ public final class QueryJobConfiguration extends JobConfiguration {\n      * {@link Builder#setDestinationTable(TableId)} must be provided.\n      *\n      * @see <a href=\"https://cloud.google.com/bigquery/querying-data#largequeryresults\">\n-     *     Returning Large Query Results</a>\n+     * Returning Large Query Results</a>\n      */\n     public Builder setAllowLargeResults(Boolean allowLargeResults) {\n       this.allowLargeResults = allowLargeResults;\n@@ -354,7 +354,7 @@ public final class QueryJobConfiguration extends JobConfiguration {\n    * the query is allowed to create large results at a slight cost in performance.\n    *\n    * @see <a href=\"https://cloud.google.com/bigquery/querying-data#largequeryresults\">\n-   *     Returning Large Query Results</a>\n+   * Returning Large Query Results</a>\n    */\n   public Boolean allowLargeResults() {\n     return allowLargeResults;\n@@ -365,7 +365,7 @@ public final class QueryJobConfiguration extends JobConfiguration {\n    * Returns whether the job is allowed to create new tables.\n    *\n    * @see <a href=\"https://cloud.google.com/bigquery/docs/reference/v2/jobs#configuration.query.createDisposition\">\n-   *     Create Disposition</a>\n+   * Create Disposition</a>\n    */\n   public CreateDisposition getCreateDisposition() {\n     return createDisposition;\n@@ -452,7 +452,7 @@ public final class QueryJobConfiguration extends JobConfiguration {\n    * Returns the action that should occur if the destination table already exists.\n    *\n    * @see <a href=\"https://cloud.google.com/bigquery/docs/reference/v2/jobs#configuration.query.writeDisposition\">\n-   *     Write Disposition</a>\n+   * Write Disposition</a>\n    */\n   public WriteDisposition getWriteDisposition() {\n     return writeDisposition;\n",
            "diff_size": 7
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "206",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "318",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 104).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "507",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 106).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/916/QueryJobConfiguration.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/naturalize/916/QueryJobConfiguration.java\nindex 961183025c9..c36113f4a26 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/916/QueryJobConfiguration.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/naturalize/916/QueryJobConfiguration.java\n@@ -58,7 +58,8 @@ public final class QueryJobConfiguration extends JobConfiguration {\n    * {@link Priority#INTERACTIVE}.\n    */\n   public enum Priority {\n-    /**\n+\n+  /**\n      * Query is executed as soon as possible and count towards the\n      * <a href=\"https://cloud.google.com/bigquery/quota-policy\">concurrent rate limit and the daily\n      * rate limit</a>.\n@@ -148,8 +149,7 @@ public final class QueryJobConfiguration extends JobConfiguration {\n       }\n     }\n \n-\n-    /**\n+/**\n      * Sets the BigQuery SQL query to execute.\n      */\n     public Builder setQuery(String query) {\n@@ -203,7 +203,7 @@ public final class QueryJobConfiguration extends JobConfiguration {\n     public Builder setUserDefinedFunctions(List<UserDefinedFunction> userDefinedFunctions) {\n       this.userDefinedFunctions =\n           userDefinedFunctions != null ? ImmutableList.copyOf(userDefinedFunctions) : null;\n-      return this;\n+return this;\n     }\n \n \n@@ -504,9 +504,7 @@ public final class QueryJobConfiguration extends JobConfiguration {\n \n   @Override\n   public boolean equals(Object obj) {\n-    return obj == this\n-        || obj instanceof QueryJobConfiguration\n-        && baseEquals((QueryJobConfiguration) obj);\n+    return obj == this || obj instanceof QueryJobConfiguration && baseEquals((QueryJobConfiguration) obj);\n   }\n \n   @Override\n@@ -594,4 +592,4 @@ public final class QueryJobConfiguration extends JobConfiguration {\n       com.google.api.services.bigquery.model.JobConfiguration jobPb) {\n     return new Builder(jobPb).build();\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "77",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "133",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 145).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "136",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 141).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "204",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 115).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "326",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 104).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "354",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 116).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "510",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 513).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "515",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 106).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "520",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 240).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "537",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 140).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "560",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 138).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "566",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 134).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "596",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/916/QueryJobConfiguration.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/codebuff/916/QueryJobConfiguration.java\nindex 961183025c9..8446cef70ea 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/916/QueryJobConfiguration.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/codebuff/916/QueryJobConfiguration.java\n@@ -26,7 +26,6 @@ import com.google.common.collect.ImmutableList;\n import com.google.common.collect.ImmutableMap;\n import com.google.common.collect.Lists;\n import com.google.common.collect.Maps;\n-\n import java.util.List;\n import java.util.Map;\n import java.util.Objects;\n@@ -35,10 +34,11 @@ import java.util.Objects;\n  * Google BigQuery Query Job configuration. A Query Job runs a query against BigQuery data. Query\n  * job configurations have {@link JobConfiguration.Type#QUERY} type.\n  */\n+\n+\n public final class QueryJobConfiguration extends JobConfiguration {\n \n   private static final long serialVersionUID = -1108948249081804890L;\n-\n   private final String query;\n   private final TableId destinationTable;\n   private final Map<String, ExternalTableDefinition> tableDefinitions;\n@@ -57,24 +57,24 @@ public final class QueryJobConfiguration extends JobConfiguration {\n    * Priority levels for a query. If not specified the priority is assumed to be\n    * {@link Priority#INTERACTIVE}.\n    */\n+\n   public enum Priority {\n     /**\n      * Query is executed as soon as possible and count towards the\n      * <a href=\"https://cloud.google.com/bigquery/quota-policy\">concurrent rate limit and the daily\n      * rate limit</a>.\n      */\n+\n     INTERACTIVE,\n \n     /**\n      * Query is queued and started as soon as idle resources are available, usually within a few\n      * minutes. If the query hasn't started within 3 hours, its priority is changed to\n      * {@link Priority#INTERACTIVE}.\n-     */\n-    BATCH\n+     */ BATCH\n   }\n \n-  public static final class Builder\n-      extends JobConfiguration.Builder<QueryJobConfiguration, Builder> {\n+  public static final class Builder extends JobConfiguration.Builder<QueryJobConfiguration, Builder> {\n \n     private String query;\n     private TableId destinationTable;\n@@ -130,21 +130,16 @@ public final class QueryJobConfiguration extends JobConfiguration {\n         priority = Priority.valueOf(queryConfigurationPb.getPriority());\n       }\n       if (queryConfigurationPb.getTableDefinitions() != null) {\n-        tableDefinitions = Maps.transformValues(queryConfigurationPb.getTableDefinitions(),\n-            ExternalTableDefinition.FROM_EXTERNAL_DATA_FUNCTION);\n+        tableDefinitions = Maps.transformValues(queryConfigurationPb.getTableDefinitions(), ExternalTableDefinition.FROM_EXTERNAL_DATA_FUNCTION);\n       }\n       if (queryConfigurationPb.getUserDefinedFunctionResources() != null) {\n-        userDefinedFunctions = Lists.transform(\n-            queryConfigurationPb.getUserDefinedFunctionResources(),\n-            UserDefinedFunction.FROM_PB_FUNCTION);\n+        userDefinedFunctions = Lists.transform(queryConfigurationPb.getUserDefinedFunctionResources(), UserDefinedFunction.FROM_PB_FUNCTION);\n       }\n       if (queryConfigurationPb.getCreateDisposition() != null) {\n-        createDisposition =\n-            CreateDisposition.valueOf(queryConfigurationPb.getCreateDisposition());\n+        createDisposition = CreateDisposition.valueOf(queryConfigurationPb.getCreateDisposition());\n       }\n       if (queryConfigurationPb.getWriteDisposition() != null) {\n-        writeDisposition =\n-            WriteDisposition.valueOf(queryConfigurationPb.getWriteDisposition());\n+        writeDisposition = WriteDisposition.valueOf(queryConfigurationPb.getWriteDisposition());\n       }\n     }\n \n@@ -152,6 +147,7 @@ public final class QueryJobConfiguration extends JobConfiguration {\n     /**\n      * Sets the BigQuery SQL query to execute.\n      */\n+\n     public Builder setQuery(String query) {\n       this.query = query;\n       return this;\n@@ -162,6 +158,7 @@ public final class QueryJobConfiguration extends JobConfiguration {\n      * Sets the table where to put query results. If not provided a new table is created. This value\n      * is required if {@link Builder#setAllowLargeResults(Boolean)} is set to {@code true}.\n      */\n+\n     public Builder setDestinationTable(TableId destinationTable) {\n       this.destinationTable = destinationTable;\n       return this;\n@@ -174,6 +171,7 @@ public final class QueryJobConfiguration extends JobConfiguration {\n      * sources. By defining these properties, the data sources can be queried as if they were\n      * standard BigQuery tables.\n      */\n+\n     public Builder setTableDefinitions(Map<String, ExternalTableDefinition> tableDefinitions) {\n       this.tableDefinitions = tableDefinitions != null ? Maps.newHashMap(tableDefinitions) : null;\n       return this;\n@@ -186,6 +184,7 @@ public final class QueryJobConfiguration extends JobConfiguration {\n      * @param tableName name of the table\n      * @param tableDefinition external data configuration for the table used by this query\n      */\n+\n     public Builder addTableDefinition(String tableName, ExternalTableDefinition tableDefinition) {\n       if (this.tableDefinitions == null) {\n         this.tableDefinitions = Maps.newHashMap();\n@@ -200,9 +199,9 @@ public final class QueryJobConfiguration extends JobConfiguration {\n      * can either be defined inline ({@link UserDefinedFunction#inline(String)}) or loaded from\n      * a Google Cloud Storage URI ({@link UserDefinedFunction#fromUri(String)}.\n      */\n+\n     public Builder setUserDefinedFunctions(List<UserDefinedFunction> userDefinedFunctions) {\n-      this.userDefinedFunctions =\n-          userDefinedFunctions != null ? ImmutableList.copyOf(userDefinedFunctions) : null;\n+      this.userDefinedFunctions = userDefinedFunctions != null ? ImmutableList.copyOf(userDefinedFunctions) : null;\n       return this;\n     }\n \n@@ -213,6 +212,7 @@ public final class QueryJobConfiguration extends JobConfiguration {\n      * @see <a href=\"https://cloud.google.com/bigquery/docs/reference/v2/jobs#configuration.query.createDisposition\">\n      *     Create Disposition</a>\n      */\n+\n     public Builder setCreateDisposition(CreateDisposition createDisposition) {\n       this.createDisposition = createDisposition;\n       return this;\n@@ -225,6 +225,7 @@ public final class QueryJobConfiguration extends JobConfiguration {\n      * @see <a href=\"https://cloud.google.com/bigquery/docs/reference/v2/jobs#configuration.query.writeDisposition\">\n      *     Write Disposition</a>\n      */\n+\n     public Builder setWriteDisposition(WriteDisposition writeDisposition) {\n       this.writeDisposition = writeDisposition;\n       return this;\n@@ -235,6 +236,7 @@ public final class QueryJobConfiguration extends JobConfiguration {\n      * Sets the default dataset. This dataset is used for all unqualified table names used in the\n      * query.\n      */\n+\n     public Builder setDefaultDataset(DatasetId defaultDataset) {\n       this.defaultDataset = defaultDataset;\n       return this;\n@@ -245,6 +247,7 @@ public final class QueryJobConfiguration extends JobConfiguration {\n      * Sets the default dataset. This dataset is used for all unqualified table names used in the\n      * query.\n      */\n+\n     public Builder setDefaultDataset(String defaultDataset) {\n       return setDefaultDataset(DatasetId.of(defaultDataset));\n     }\n@@ -254,6 +257,7 @@ public final class QueryJobConfiguration extends JobConfiguration {\n      * Sets a priority for the query. If not specified the priority is assumed to be\n      * {@link Priority#INTERACTIVE}.\n      */\n+\n     public Builder setPriority(Priority priority) {\n       this.priority = priority;\n       return this;\n@@ -268,6 +272,7 @@ public final class QueryJobConfiguration extends JobConfiguration {\n      * @see <a href=\"https://cloud.google.com/bigquery/querying-data#largequeryresults\">\n      *     Returning Large Query Results</a>\n      */\n+\n     public Builder setAllowLargeResults(Boolean allowLargeResults) {\n       this.allowLargeResults = allowLargeResults;\n       return this;\n@@ -281,6 +286,7 @@ public final class QueryJobConfiguration extends JobConfiguration {\n      *\n      * @see <a href=\"https://cloud.google.com/bigquery/querying-data#querycaching\">Query Caching</a>\n      */\n+\n     public Builder setUseQueryCache(Boolean useQueryCache) {\n       this.useQueryCache = useQueryCache;\n       return this;\n@@ -294,6 +300,7 @@ public final class QueryJobConfiguration extends JobConfiguration {\n      *\n      * @see <a href=\"https://cloud.google.com/bigquery/docs/data#flatten\">Flatten</a>\n      */\n+\n     public Builder setFlattenResults(Boolean flattenResults) {\n       this.flattenResults = flattenResults;\n       return this;\n@@ -305,6 +312,7 @@ public final class QueryJobConfiguration extends JobConfiguration {\n      * will return a mostly empty response with some processing statistics, while an invalid query\n      * will return the same error it would if it wasn't a dry run.\n      */\n+\n     public Builder setDryRun(Boolean dryRun) {\n       this.dryRun = dryRun;\n       return this;\n@@ -320,6 +328,7 @@ public final class QueryJobConfiguration extends JobConfiguration {\n      * {@link #setFlattenResults(Boolean)} is {@code false}. If not set, legacy SQL dialect is used.\n      * This property is experimental and might be subject to change.\n      */\n+\n     public Builder setUseLegacySql(Boolean useLegacySql) {\n       this.useLegacySql = useLegacySql;\n       return this;\n@@ -342,8 +351,7 @@ public final class QueryJobConfiguration extends JobConfiguration {\n     this.useQueryCache = builder.useQueryCache;\n     this.userDefinedFunctions = builder.userDefinedFunctions;\n     this.writeDisposition = builder.writeDisposition;\n-    this.tableDefinitions =\n-        builder.tableDefinitions != null ? ImmutableMap.copyOf(builder.tableDefinitions) : null;\n+    this.tableDefinitions = builder.tableDefinitions != null ? ImmutableMap.copyOf(builder.tableDefinitions) : null;\n     this.dryRun = builder.dryRun;\n     this.useLegacySql = builder.useLegacySql;\n   }\n@@ -356,6 +364,7 @@ public final class QueryJobConfiguration extends JobConfiguration {\n    * @see <a href=\"https://cloud.google.com/bigquery/querying-data#largequeryresults\">\n    *     Returning Large Query Results</a>\n    */\n+\n   public Boolean allowLargeResults() {\n     return allowLargeResults;\n   }\n@@ -367,6 +376,7 @@ public final class QueryJobConfiguration extends JobConfiguration {\n    * @see <a href=\"https://cloud.google.com/bigquery/docs/reference/v2/jobs#configuration.query.createDisposition\">\n    *     Create Disposition</a>\n    */\n+\n   public CreateDisposition getCreateDisposition() {\n     return createDisposition;\n   }\n@@ -376,6 +386,7 @@ public final class QueryJobConfiguration extends JobConfiguration {\n    * Returns the default dataset. This dataset is used for all unqualified table names used in the\n    * query.\n    */\n+\n   public DatasetId getDefaultDataset() {\n     return defaultDataset;\n   }\n@@ -385,6 +396,7 @@ public final class QueryJobConfiguration extends JobConfiguration {\n    * Returns the table where to put query results. If not provided a new table is created. This\n    * value is required if {@link #allowLargeResults()} is {@code true}.\n    */\n+\n   public TableId getDestinationTable() {\n     return destinationTable;\n   }\n@@ -395,6 +407,7 @@ public final class QueryJobConfiguration extends JobConfiguration {\n    *\n    * @see <a href=\"https://cloud.google.com/bigquery/docs/data#flatten\">Flatten</a>\n    */\n+\n   public Boolean flattenResults() {\n     return flattenResults;\n   }\n@@ -403,6 +416,7 @@ public final class QueryJobConfiguration extends JobConfiguration {\n   /**\n    * Returns the query priority.\n    */\n+\n   public Priority getPriority() {\n     return priority;\n   }\n@@ -411,6 +425,7 @@ public final class QueryJobConfiguration extends JobConfiguration {\n   /**\n    * Returns the Google BigQuery SQL query.\n    */\n+\n   public String getQuery() {\n     return query;\n   }\n@@ -422,6 +437,7 @@ public final class QueryJobConfiguration extends JobConfiguration {\n    * sources. By defining these properties, the data sources can be queried as if they were\n    * standard BigQuery tables.\n    */\n+\n   public Map<String, ExternalTableDefinition> getTableDefinitions() {\n     return tableDefinitions;\n   }\n@@ -433,6 +449,7 @@ public final class QueryJobConfiguration extends JobConfiguration {\n    *\n    * @see <a href=\"https://cloud.google.com/bigquery/querying-data#querycaching\">Query Caching</a>\n    */\n+\n   public Boolean useQueryCache() {\n     return useQueryCache;\n   }\n@@ -443,6 +460,7 @@ public final class QueryJobConfiguration extends JobConfiguration {\n    * can either be defined inline ({@link UserDefinedFunction.Type#INLINE}) or loaded from\n    * a Google Cloud Storage URI ({@link UserDefinedFunction.Type#FROM_URI}.\n    */\n+\n   public List<UserDefinedFunction> getUserDefinedFunctions() {\n     return userDefinedFunctions;\n   }\n@@ -454,6 +472,7 @@ public final class QueryJobConfiguration extends JobConfiguration {\n    * @see <a href=\"https://cloud.google.com/bigquery/docs/reference/v2/jobs#configuration.query.writeDisposition\">\n    *     Write Disposition</a>\n    */\n+\n   public WriteDisposition getWriteDisposition() {\n     return writeDisposition;\n   }\n@@ -463,6 +482,7 @@ public final class QueryJobConfiguration extends JobConfiguration {\n    * query will return a mostly empty response with some processing statistics, while an invalid\n    * query will return the same error it would if it wasn't a dry run.\n    */\n+\n   public Boolean dryRun() {\n     return dryRun;\n   }\n@@ -475,6 +495,7 @@ public final class QueryJobConfiguration extends JobConfiguration {\n    * {@code true} and {@link #flattenResults()} is {@code false}. If not set, legacy SQL dialect is\n    * used. This property is experimental and might be subject to change.\n    */\n+\n   public Boolean useLegacySql() {\n     return useLegacySql;\n   }\n@@ -486,34 +507,17 @@ public final class QueryJobConfiguration extends JobConfiguration {\n \n   @Override\n   ToStringHelper toStringHelper() {\n-    return super.toStringHelper()\n-        .add(\"query\", query)\n-        .add(\"destinationTable\", destinationTable)\n-        .add(\"defaultDataset\", defaultDataset)\n-        .add(\"allowLargeResults\", allowLargeResults)\n-        .add(\"flattenResults\", flattenResults)\n-        .add(\"priority\", priority)\n-        .add(\"tableDefinitions\", tableDefinitions)\n-        .add(\"userQueryCache\", useQueryCache)\n-        .add(\"userDefinedFunctions\", userDefinedFunctions)\n-        .add(\"createDisposition\", createDisposition)\n-        .add(\"writeDisposition\", writeDisposition)\n-        .add(\"dryRun\", dryRun)\n-        .add(\"useLegacySql\", useLegacySql);\n+    return super.toStringHelper().add(\"query\", query).add(\"destinationTable\", destinationTable).add(\"defaultDataset\", defaultDataset).add(\"allowLargeResults\", allowLargeResults).add(\"flattenResults\", flattenResults).add(\"priority\", priority).add(\"tableDefinitions\", tableDefinitions).add(\"userQueryCache\", useQueryCache).add(\"userDefinedFunctions\", userDefinedFunctions).add(\"createDisposition\", createDisposition).add(\"writeDisposition\", writeDisposition).add(\"dryRun\", dryRun).add(\"useLegacySql\", useLegacySql);\n   }\n \n   @Override\n   public boolean equals(Object obj) {\n-    return obj == this\n-        || obj instanceof QueryJobConfiguration\n-        && baseEquals((QueryJobConfiguration) obj);\n+    return obj == this || obj instanceof QueryJobConfiguration && baseEquals((QueryJobConfiguration) obj);\n   }\n \n   @Override\n   public int hashCode() {\n-    return Objects.hash(baseHashCode(), allowLargeResults, createDisposition, destinationTable,\n-        defaultDataset, flattenResults, priority, query, tableDefinitions, useQueryCache,\n-        userDefinedFunctions, writeDisposition, dryRun, useLegacySql);\n+    return Objects.hash(baseHashCode(), allowLargeResults, createDisposition, destinationTable, defaultDataset, flattenResults, priority, query, tableDefinitions, useQueryCache, userDefinedFunctions, writeDisposition, dryRun, useLegacySql);\n   }\n \n   @Override\n@@ -530,8 +534,7 @@ public final class QueryJobConfiguration extends JobConfiguration {\n \n   @Override\n   com.google.api.services.bigquery.model.JobConfiguration toPb() {\n-    com.google.api.services.bigquery.model.JobConfiguration configurationPb =\n-        new com.google.api.services.bigquery.model.JobConfiguration();\n+    com.google.api.services.bigquery.model.JobConfiguration configurationPb = new com.google.api.services.bigquery.model.JobConfiguration();\n     JobConfigurationQuery queryConfigurationPb = new JobConfigurationQuery();\n     queryConfigurationPb.setQuery(query);\n     configurationPb.setDryRun(dryRun());\n@@ -554,15 +557,13 @@ public final class QueryJobConfiguration extends JobConfiguration {\n       queryConfigurationPb.setPriority(priority.toString());\n     }\n     if (tableDefinitions != null) {\n-      queryConfigurationPb.setTableDefinitions(Maps.transformValues(tableDefinitions,\n-          ExternalTableDefinition.TO_EXTERNAL_DATA_FUNCTION));\n+      queryConfigurationPb.setTableDefinitions(Maps.transformValues(tableDefinitions, ExternalTableDefinition.TO_EXTERNAL_DATA_FUNCTION));\n     }\n     if (useQueryCache != null) {\n       queryConfigurationPb.setUseQueryCache(useQueryCache);\n     }\n     if (userDefinedFunctions != null) {\n-      queryConfigurationPb.setUserDefinedFunctionResources(\n-          Lists.transform(userDefinedFunctions, UserDefinedFunction.TO_PB_FUNCTION));\n+      queryConfigurationPb.setUserDefinedFunctionResources(Lists.transform(userDefinedFunctions, UserDefinedFunction.TO_PB_FUNCTION));\n     }\n     if (writeDisposition != null) {\n       queryConfigurationPb.setWriteDisposition(writeDisposition.toString());\n@@ -577,6 +578,7 @@ public final class QueryJobConfiguration extends JobConfiguration {\n   /**\n    * Creates a builder for a BigQuery Query Job given the query to be run.\n    */\n+\n   public static Builder newBuilder(String query) {\n     return new Builder().setQuery(query);\n   }\n@@ -585,13 +587,13 @@ public final class QueryJobConfiguration extends JobConfiguration {\n    * Returns a BigQuery Copy Job for the given the query to be run. Job's id is chosen by the\n    * service.\n    */\n+\n   public static QueryJobConfiguration of(String query) {\n     return newBuilder(query).build();\n   }\n \n   @SuppressWarnings(\"unchecked\")\n-  static QueryJobConfiguration fromPb(\n-      com.google.api.services.bigquery.model.JobConfiguration jobPb) {\n+  static QueryJobConfiguration fromPb(com.google.api.services.bigquery.model.JobConfiguration jobPb) {\n     return new Builder(jobPb).build();\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 82
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "318",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 104).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "318",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 104).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2817",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": null,
            "diff": null
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "45",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "124",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "108",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "76",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "121",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "97",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "107",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "115",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "74",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "119",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2817/TemporalIndexReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2817/TemporalIndexReader.java\nindex 71303d82a12..38dda758ba2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2817/TemporalIndexReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2817/TemporalIndexReader.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.index.schema;\n \n import org.neo4j.collection.primitive.PrimitiveLongResourceIterator;\n@@ -39,150 +40,147 @@ import static org.neo4j.kernel.impl.index.schema.fusion.FusionIndexBase.forAll;\n \n class TemporalIndexReader extends TemporalIndexCache<TemporalIndexPartReader<?>> implements IndexReader\n {\n-    private final SchemaIndexDescriptor descriptor;\n-\n-    TemporalIndexReader( SchemaIndexDescriptor descriptor, TemporalIndexAccessor accessor )\n+  private final SchemaIndexDescriptor descriptor;\n+\n+  TemporalIndexReader(SchemaIndexDescriptor descriptor, TemporalIndexAccessor accessor)\n+  {\n+    super(new PartFactory(accessor));\n+    this.descriptor = descriptor;\n+  }\n+\n+  @Override\n+  public void close()\n+  {\n+    forAll(Resource::close, this);\n+  }\n+\n+  @Override\n+  public long countIndexedNodes(long nodeId, Value... propertyValues)\n+  {\n+    NativeSchemaIndexReader<?, NativeSchemaValue> partReader = uncheckedSelect(propertyValues[0].valueGroup());\n+    return partReader == null ? 0L : partReader.countIndexedNodes(nodeId, propertyValues);\n+  }\n+\n+  @Override\n+  public IndexSampler createSampler()\n+  {\n+    return new FusionIndexSampler(Iterators.stream(iterator()).map(IndexReader::createSampler).toArray(IndexSampler[]::new));\n+  }\n+\n+  @Override\n+  public PrimitiveLongResourceIterator query(IndexQuery... predicates)\n+  {\n+    NodeValueIterator nodeValueIterator = new NodeValueIterator();\n+    query(nodeValueIterator, IndexOrder.NONE, predicates);\n+    return nodeValueIterator;\n+  }\n+\n+  @Override\n+  public void query(IndexProgressor.NodeValueClient cursor, IndexOrder indexOrder, IndexQuery... predicates)\n+  {\n+    if (predicates.length != 1)\n     {\n-        super( new PartFactory( accessor ) );\n-        this.descriptor = descriptor;\n+      throw new IllegalArgumentException(\"Only single property temporal indexes are supported.\");\n     }\n-\n-    @Override\n-    public void close()\n+    IndexQuery predicate = predicates[0];\n+    if (predicate instanceof ExistsPredicate)\n+    {\n+      loadAll();\n+      BridgingIndexProgressor multiProgressor = new BridgingIndexProgressor(cursor, descriptor.schema().getPropertyIds());\n+      cursor.initialize(descriptor, multiProgressor, predicates);\n+      for (NativeSchemaIndexReader<?, NativeSchemaValue> reader : this)\n+      {\n+        reader.query(multiProgressor, indexOrder, predicates);\n+      }\n+    } else\n     {\n-        forAll( Resource::close, this );\n+      if (validPredicate(predicate))\n+      {\n+        NativeSchemaIndexReader<?, NativeSchemaValue> part = uncheckedSelect(predicate.valueGroup());\n+        if (part != null)\n+        {\n+          part.query(cursor, indexOrder, predicates);\n+        } else\n+        {\n+          cursor.initialize(descriptor, IndexProgressor.EMPTY, predicates);\n+        }\n+      } else\n+      {\n+        cursor.initialize(descriptor, IndexProgressor.EMPTY, predicates);\n+      }\n     }\n-\n-    @Override\n-    public long countIndexedNodes( long nodeId, Value... propertyValues )\n+  }\n+\n+  @Override\n+  public boolean hasFullValuePrecision(IndexQuery... predicates)\n+  {\n+    return true;\n+  }\n+\n+  @Override\n+  public void distinctValues(IndexProgressor.NodeValueClient cursor, PropertyAccessor propertyAccessor)\n+  {\n+    loadAll();\n+    BridgingIndexProgressor multiProgressor = new BridgingIndexProgressor(cursor, descriptor.schema().getPropertyIds());\n+    cursor.initialize(descriptor, multiProgressor, new IndexQuery[0]);\n+    for (NativeSchemaIndexReader<?, NativeSchemaValue> reader : this)\n     {\n-        NativeSchemaIndexReader<?,NativeSchemaValue> partReader = uncheckedSelect( propertyValues[0].valueGroup() );\n-        return partReader == null ? 0L : partReader.countIndexedNodes( nodeId, propertyValues );\n+      reader.distinctValues(multiProgressor, propertyAccessor);\n     }\n-\n-    @Override\n-    public IndexSampler createSampler()\n+  }\n+\n+  private boolean validPredicate(IndexQuery predicate)\n+  {\n+    return predicate instanceof IndexQuery.ExactPredicate || predicate instanceof IndexQuery.RangePredicate;\n+  }\n+\n+  /**\n+   * To create TemporalIndexPartReaders on demand, the PartFactory maintains a reference to the parent TemporalIndexAccessor.\n+   * The creation of a part reader can then be delegated to the correct PartAccessor.\n+   */\n+  static class PartFactory implements TemporalIndexCache.Factory<TemporalIndexPartReader<?>>\n+  {\n+    private final TemporalIndexAccessor accessor;\n+\n+    PartFactory(TemporalIndexAccessor accessor)\n     {\n-        return new FusionIndexSampler( Iterators.stream( iterator() ).map( IndexReader::createSampler ).toArray( IndexSampler[]::new ) );\n+      this.accessor = accessor;\n     }\n \n     @Override\n-    public PrimitiveLongResourceIterator query( IndexQuery... predicates )\n+    public TemporalIndexPartReader<?> newDate()\n     {\n-        NodeValueIterator nodeValueIterator = new NodeValueIterator();\n-        query( nodeValueIterator, IndexOrder.NONE, predicates );\n-        return nodeValueIterator;\n+      return accessor.selectOrElse(ValueGroup.DATE, TemporalIndexAccessor.PartAccessor::newReader, null);\n     }\n \n     @Override\n-    public void query( IndexProgressor.NodeValueClient cursor, IndexOrder indexOrder, IndexQuery... predicates )\n+    public TemporalIndexPartReader<?> newLocalDateTime()\n     {\n-        if ( predicates.length != 1 )\n-        {\n-            throw new IllegalArgumentException( \"Only single property temporal indexes are supported.\" );\n-        }\n-        IndexQuery predicate = predicates[0];\n-        if ( predicate instanceof ExistsPredicate )\n-        {\n-            loadAll();\n-            BridgingIndexProgressor multiProgressor = new BridgingIndexProgressor( cursor, descriptor.schema().getPropertyIds() );\n-            cursor.initialize( descriptor, multiProgressor, predicates );\n-            for ( NativeSchemaIndexReader<?,NativeSchemaValue> reader : this )\n-            {\n-                reader.query( multiProgressor, indexOrder, predicates );\n-            }\n-        }\n-        else\n-        {\n-            if ( validPredicate( predicate ) )\n-            {\n-                NativeSchemaIndexReader<?,NativeSchemaValue> part = uncheckedSelect( predicate.valueGroup() );\n-                if ( part != null )\n-                {\n-                    part.query( cursor, indexOrder, predicates );\n-                }\n-                else\n-                {\n-                    cursor.initialize( descriptor, IndexProgressor.EMPTY, predicates );\n-                }\n-            }\n-            else\n-            {\n-                cursor.initialize( descriptor, IndexProgressor.EMPTY, predicates );\n-            }\n-        }\n+      return accessor.selectOrElse(ValueGroup.LOCAL_DATE_TIME, TemporalIndexAccessor.PartAccessor::newReader, null);\n     }\n \n     @Override\n-    public boolean hasFullValuePrecision( IndexQuery... predicates )\n+    public TemporalIndexPartReader<?> newZonedDateTime()\n     {\n-        return true;\n+      return accessor.selectOrElse(ValueGroup.ZONED_DATE_TIME, TemporalIndexAccessor.PartAccessor::newReader, null);\n     }\n \n     @Override\n-    public void distinctValues( IndexProgressor.NodeValueClient cursor, PropertyAccessor propertyAccessor )\n+    public TemporalIndexPartReader<?> newLocalTime()\n     {\n-        loadAll();\n-        BridgingIndexProgressor multiProgressor = new BridgingIndexProgressor( cursor, descriptor.schema().getPropertyIds() );\n-        cursor.initialize( descriptor, multiProgressor, new IndexQuery[0] );\n-        for ( NativeSchemaIndexReader<?,NativeSchemaValue> reader : this )\n-        {\n-            reader.distinctValues( multiProgressor, propertyAccessor );\n-        }\n+      return accessor.selectOrElse(ValueGroup.LOCAL_TIME, TemporalIndexAccessor.PartAccessor::newReader, null);\n     }\n \n-    private boolean validPredicate( IndexQuery predicate )\n+    @Override\n+    public TemporalIndexPartReader<?> newZonedTime()\n     {\n-        return predicate instanceof IndexQuery.ExactPredicate || predicate instanceof IndexQuery.RangePredicate;\n+      return accessor.selectOrElse(ValueGroup.ZONED_TIME, TemporalIndexAccessor.PartAccessor::newReader, null);\n     }\n \n-    /**\n-     * To create TemporalIndexPartReaders on demand, the PartFactory maintains a reference to the parent TemporalIndexAccessor.\n-     * The creation of a part reader can then be delegated to the correct PartAccessor.\n-     */\n-    static class PartFactory implements TemporalIndexCache.Factory<TemporalIndexPartReader<?>>\n+    @Override\n+    public TemporalIndexPartReader<?> newDuration()\n     {\n-        private final TemporalIndexAccessor accessor;\n-\n-        PartFactory( TemporalIndexAccessor accessor )\n-        {\n-            this.accessor = accessor;\n-        }\n-\n-        @Override\n-        public TemporalIndexPartReader<?> newDate()\n-        {\n-            return accessor.selectOrElse( ValueGroup.DATE, TemporalIndexAccessor.PartAccessor::newReader, null );\n-        }\n-\n-        @Override\n-        public TemporalIndexPartReader<?> newLocalDateTime()\n-        {\n-            return accessor.selectOrElse( ValueGroup.LOCAL_DATE_TIME, TemporalIndexAccessor.PartAccessor::newReader, null );\n-        }\n-\n-        @Override\n-        public TemporalIndexPartReader<?> newZonedDateTime()\n-        {\n-            return accessor.selectOrElse( ValueGroup.ZONED_DATE_TIME, TemporalIndexAccessor.PartAccessor::newReader, null );\n-        }\n-\n-        @Override\n-        public TemporalIndexPartReader<?> newLocalTime()\n-        {\n-            return accessor.selectOrElse( ValueGroup.LOCAL_TIME, TemporalIndexAccessor.PartAccessor::newReader, null );\n-        }\n-\n-        @Override\n-        public TemporalIndexPartReader<?> newZonedTime()\n-        {\n-            return accessor.selectOrElse( ValueGroup.ZONED_TIME, TemporalIndexAccessor.PartAccessor::newReader, null );\n-        }\n-\n-        @Override\n-        public TemporalIndexPartReader<?> newDuration()\n-        {\n-            return accessor.selectOrElse( ValueGroup.DURATION, TemporalIndexAccessor.PartAccessor::newReader, null );\n-        }\n+      return accessor.selectOrElse(ValueGroup.DURATION, TemporalIndexAccessor.PartAccessor::newReader, null);\n     }\n+  }\n }\n",
            "diff_size": 201
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_three_grams",
            "errors": null,
            "diff": null
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3365",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": null,
            "diff": null
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "82",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "16",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "16",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "152",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "16",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "179",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "179",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "184",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "184",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "184",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "188",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "188",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "198",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "198",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "205",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "205",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "212",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "217",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "217",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "219",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "219",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "221",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "221",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "226",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "226",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "240",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "240",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "243",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "243",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "250",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "250",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "251",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "251",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "251",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "258",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "258",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "266",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "267",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "271",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "271",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "273",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "273",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "279",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "279",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "298",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "298",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "300",
                    "column": "66",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "300",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "305",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "308",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "308",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "313",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "313",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3365/PageCacheWarmer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3365/PageCacheWarmer.java\nindex d427fb52b79..3fcbca2352f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3365/PageCacheWarmer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3365/PageCacheWarmer.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.pagecache;\n \n import java.io.IOException;\n@@ -66,258 +67,255 @@ import static org.neo4j.io.pagecache.PagedFile.PF_SHARED_READ_LOCK;\n  */\n public class PageCacheWarmer implements NeoStoreFileListing.StoreFileProvider\n {\n-    public static final String SUFFIX_CACHEPROF = \".cacheprof\";\n+  public static final String SUFFIX_CACHEPROF = \".cacheprof\";\n+\n+  private static final int IO_PARALLELISM = Runtime.getRuntime().availableProcessors();\n \n-    private static final int IO_PARALLELISM = Runtime.getRuntime().availableProcessors();\n+  private final FileSystemAbstraction fs;\n+  private final PageCache pageCache;\n+  private final JobScheduler scheduler;\n+  private final ProfileRefCounts refCounts;\n+  private volatile boolean stopped;\n+  private ExecutorService executor;\n+  private PageLoaderFactory pageLoaderFactory;\n \n-    private final FileSystemAbstraction fs;\n-    private final PageCache pageCache;\n-    private final JobScheduler scheduler;\n-    private final ProfileRefCounts refCounts;\n-    private volatile boolean stopped;\n-    private ExecutorService executor;\n-    private PageLoaderFactory pageLoaderFactory;\n+  PageCacheWarmer(FileSystemAbstraction fs, PageCache pageCache, JobScheduler scheduler)\n+  {\n+    this.fs = fs;\n+    this.pageCache = pageCache;\n+    this.scheduler = scheduler;\n+    this.refCounts = new ProfileRefCounts();\n+  }\n \n-    PageCacheWarmer( FileSystemAbstraction fs, PageCache pageCache, JobScheduler scheduler )\n+  @Override\n+  public synchronized Resource addFilesTo(Collection<StoreFileMetadata> coll) throws IOException\n+  {\n+    if (stopped)\n     {\n-        this.fs = fs;\n-        this.pageCache = pageCache;\n-        this.scheduler = scheduler;\n-        this.refCounts = new ProfileRefCounts();\n+      return Resource.EMPTY;\n     }\n-\n-    @Override\n-    public synchronized Resource addFilesTo( Collection<StoreFileMetadata> coll ) throws IOException\n+    List<PagedFile> files = pageCache.listExistingMappings();\n+    Profile[] existingProfiles = findExistingProfiles(files);\n+    for (Profile profile : existingProfiles)\n     {\n-        if ( stopped )\n-        {\n-            return Resource.EMPTY;\n-        }\n-        List<PagedFile> files = pageCache.listExistingMappings();\n-        Profile[] existingProfiles = findExistingProfiles( files );\n-        for ( Profile profile : existingProfiles )\n-        {\n-            coll.add( new StoreFileMetadata( profile.file(), 1, false ) );\n-        }\n-        refCounts.incrementRefCounts( existingProfiles );\n-        return () -> refCounts.decrementRefCounts( existingProfiles );\n+      coll.add(new StoreFileMetadata(profile.file(), 1, false));\n     }\n+    refCounts.incrementRefCounts(existingProfiles);\n+    return () -> refCounts.decrementRefCounts(existingProfiles);\n+  }\n+\n+  public synchronized void start()\n+  {\n+    stopped = false;\n+    executor = buildExecutorService(scheduler);\n+    pageLoaderFactory = new PageLoaderFactory(executor, pageCache);\n+  }\n+\n+  public void stop()\n+  {\n+    stopped = true;\n+    stopWarmer();\n+  }\n \n-    public synchronized void start()\n+  /**\n+   * Stopping warmer process, needs to be synchronised to prevent racing with profiling and heating\n+   */\n+  private synchronized void stopWarmer()\n+  {\n+    if (executor != null)\n     {\n-        stopped = false;\n-        executor = buildExecutorService( scheduler );\n-        pageLoaderFactory = new PageLoaderFactory( executor, pageCache );\n+      executor.shutdown();\n     }\n+  }\n \n-    public void stop()\n+  /**\n+   * Reheat the page cache based on existing profiling data, or do nothing if no profiling data is available.\n+   *\n+   * @return An {@link OptionalLong} of the number of pages loaded in, or {@link OptionalLong#empty()} if the\n+   * reheating was stopped early via {@link #stop()}.\n+   * @throws IOException if anything goes wrong while reading the profiled data back in.\n+   */\n+  synchronized OptionalLong reheat() throws IOException\n+  {\n+    if (stopped)\n     {\n-        stopped = true;\n-        stopWarmer();\n+      return OptionalLong.empty();\n     }\n-\n-    /**\n-     * Stopping warmer process, needs to be synchronised to prevent racing with profiling and heating\n-     */\n-    private synchronized void stopWarmer()\n+    long pagesLoaded = 0;\n+    List<PagedFile> files = pageCache.listExistingMappings();\n+    Profile[] existingProfiles = findExistingProfiles(files);\n+    for (PagedFile file : files)\n     {\n-        if ( executor != null )\n-        {\n-            executor.shutdown();\n-        }\n+      try\n+      {\n+        pagesLoaded += reheat(file, existingProfiles);\n+      } catch (FileIsNotMappedException ignore)\n+      {\n+        // The database is allowed to map and unmap files while we are trying to heat it up.\n+      }\n     }\n+    return OptionalLong.of(pagesLoaded);\n+  }\n \n-    /**\n-     * Reheat the page cache based on existing profiling data, or do nothing if no profiling data is available.\n-     *\n-     * @return An {@link OptionalLong} of the number of pages loaded in, or {@link OptionalLong#empty()} if the\n-     * reheating was stopped early via {@link #stop()}.\n-     * @throws IOException if anything goes wrong while reading the profiled data back in.\n-     */\n-    synchronized OptionalLong reheat() throws IOException\n+  /**\n+   * Profile the in-memory data in the page cache, and write it to \"cacheprof\" file siblings of the mapped files.\n+   *\n+   * @return An {@link OptionalLong} of the number of pages that were found to be in memory, or\n+   * {@link OptionalLong#empty()} if the profiling was stopped early via {@link #stop()}.\n+   * @throws IOException If anything goes wrong while accessing the page cache or writing out the profile data.\n+   */\n+  public synchronized OptionalLong profile() throws IOException\n+  {\n+    if (stopped)\n     {\n-        if ( stopped )\n-        {\n-            return OptionalLong.empty();\n-        }\n-        long pagesLoaded = 0;\n-        List<PagedFile> files = pageCache.listExistingMappings();\n-        Profile[] existingProfiles = findExistingProfiles( files );\n-        for ( PagedFile file : files )\n-        {\n-            try\n-            {\n-                pagesLoaded += reheat( file, existingProfiles );\n-            }\n-            catch ( FileIsNotMappedException ignore )\n-            {\n-                // The database is allowed to map and unmap files while we are trying to heat it up.\n-            }\n-        }\n-        return OptionalLong.of( pagesLoaded );\n+      return OptionalLong.empty();\n     }\n-\n-    /**\n-     * Profile the in-memory data in the page cache, and write it to \"cacheprof\" file siblings of the mapped files.\n-     *\n-     * @return An {@link OptionalLong} of the number of pages that were found to be in memory, or\n-     * {@link OptionalLong#empty()} if the profiling was stopped early via {@link #stop()}.\n-     * @throws IOException If anything goes wrong while accessing the page cache or writing out the profile data.\n-     */\n-    public synchronized OptionalLong profile() throws IOException\n+    // Note that we could in principle profile the files in parallel. However, producing a profile is usually so\n+    // fast, that it rivals the overhead of starting and stopping threads. Because of this, the complexity of\n+    // profiling in parallel is just not worth it.\n+    long pagesInMemory = 0;\n+    List<PagedFile> files = pageCache.listExistingMappings();\n+    Profile[] existingProfiles = findExistingProfiles(files);\n+    for (PagedFile file : files)\n     {\n-        if ( stopped )\n-        {\n-            return OptionalLong.empty();\n-        }\n-        // Note that we could in principle profile the files in parallel. However, producing a profile is usually so\n-        // fast, that it rivals the overhead of starting and stopping threads. Because of this, the complexity of\n-        // profiling in parallel is just not worth it.\n-        long pagesInMemory = 0;\n-        List<PagedFile> files = pageCache.listExistingMappings();\n-        Profile[] existingProfiles = findExistingProfiles( files );\n-        for ( PagedFile file : files )\n-        {\n-            try\n-            {\n-                pagesInMemory += profile( file, existingProfiles );\n-            }\n-            catch ( FileIsNotMappedException ignore )\n-            {\n-                // The database is allowed to map and unmap files while we are profiling the page cache.\n-            }\n-            if ( stopped )\n-            {\n-                pageCache.reportEvents();\n-                return OptionalLong.empty();\n-            }\n-        }\n+      try\n+      {\n+        pagesInMemory += profile(file, existingProfiles);\n+      } catch (FileIsNotMappedException ignore)\n+      {\n+        // The database is allowed to map and unmap files while we are profiling the page cache.\n+      }\n+      if (stopped)\n+      {\n         pageCache.reportEvents();\n-        return OptionalLong.of( pagesInMemory );\n+        return OptionalLong.empty();\n+      }\n     }\n+    pageCache.reportEvents();\n+    return OptionalLong.of(pagesInMemory);\n+  }\n+\n+  private long reheat(PagedFile file, Profile[] existingProfiles) throws IOException\n+  {\n+    Optional<Profile> savedProfile = filterRelevant(existingProfiles, file)\n+        .sorted(Comparator.reverseOrder()) // Try most recent profile first.\n+        .filter(this::verifyChecksum)\n+        .findFirst();\n \n-    private long reheat( PagedFile file, Profile[] existingProfiles ) throws IOException\n+    if (!savedProfile.isPresent())\n     {\n-        Optional<Profile> savedProfile = filterRelevant( existingProfiles, file )\n-                .sorted( Comparator.reverseOrder() ) // Try most recent profile first.\n-                .filter( this::verifyChecksum )\n-                .findFirst();\n+      return 0;\n+    }\n \n-        if ( !savedProfile.isPresent() )\n+    // The file contents checks out. Let's load it in.\n+    long pagesLoaded = 0;\n+    try (InputStream input = savedProfile.get().read(fs);\n+         PageLoader loader = pageLoaderFactory.getLoader(file))\n+    {\n+      long pageId = 0;\n+      int b;\n+      while ((b = input.read()) != -1)\n+      {\n+        for (int i = 0; i < 8; i++)\n         {\n-            return 0;\n+          if (stopped)\n+          {\n+            pageCache.reportEvents();\n+            return pagesLoaded;\n+          }\n+          if ((b & 1) == 1)\n+          {\n+            loader.load(pageId);\n+            pagesLoaded++;\n+          }\n+          b >>= 1;\n+          pageId++;\n         }\n+      }\n+    }\n+    pageCache.reportEvents();\n+    return pagesLoaded;\n+  }\n \n-        // The file contents checks out. Let's load it in.\n-        long pagesLoaded = 0;\n-        try ( InputStream input = savedProfile.get().read( fs );\n-              PageLoader loader = pageLoaderFactory.getLoader( file ) )\n-        {\n-            long pageId = 0;\n-            int b;\n-            while ( (b = input.read()) != -1 )\n-            {\n-                for ( int i = 0; i < 8; i++ )\n-                {\n-                    if ( stopped )\n-                    {\n-                        pageCache.reportEvents();\n-                        return pagesLoaded;\n-                    }\n-                    if ( (b & 1) == 1 )\n-                    {\n-                        loader.load( pageId );\n-                        pagesLoaded++;\n-                    }\n-                    b >>= 1;\n-                    pageId++;\n-                }\n-            }\n-        }\n-        pageCache.reportEvents();\n-        return pagesLoaded;\n+  private boolean verifyChecksum(Profile profile)\n+  {\n+    // Successfully reading through and closing the compressed file implies verifying the gzip checksum.\n+    try (InputStream input = profile.read(fs))\n+    {\n+      int b;\n+      do\n+      {\n+        b = input.read();\n+      }\n+      while (b != -1);\n+    } catch (IOException ignore)\n+    {\n+      return false;\n     }\n+    return true;\n+  }\n+\n+  private long profile(PagedFile file, Profile[] existingProfiles) throws IOException\n+  {\n+    long pagesInMemory = 0;\n+    Profile nextProfile = filterRelevant(existingProfiles, file)\n+        .max(naturalOrder())\n+        .map(Profile::next)\n+        .orElse(Profile.first(file.file()));\n \n-    private boolean verifyChecksum( Profile profile )\n+    try (OutputStream output = nextProfile.write(fs);\n+         PageCursor cursor = file.io(0, PF_SHARED_READ_LOCK | PF_NO_FAULT))\n     {\n-        // Successfully reading through and closing the compressed file implies verifying the gzip checksum.\n-        try ( InputStream input = profile.read( fs ) )\n+      int stepper = 0;\n+      int b = 0;\n+      while (cursor.next())\n+      {\n+        if (cursor.getCurrentPageId() != PageCursor.UNBOUND_PAGE_ID)\n         {\n-            int b;\n-            do\n-            {\n-                b = input.read();\n-            }\n-            while ( b != -1 );\n+          pagesInMemory++;\n+          b |= 1 << stepper;\n         }\n-        catch ( IOException ignore )\n+        stepper++;\n+        if (stepper == 8)\n         {\n-            return false;\n+          output.write(b);\n+          b = 0;\n+          stepper = 0;\n         }\n-        return true;\n+      }\n+      output.write(b);\n+      output.flush();\n     }\n \n-    private long profile( PagedFile file, Profile[] existingProfiles ) throws IOException\n-    {\n-        long pagesInMemory = 0;\n-        Profile nextProfile = filterRelevant( existingProfiles, file )\n-                .max( naturalOrder() )\n-                .map( Profile::next )\n-                .orElse( Profile.first( file.file() ) );\n+    // Delete previous profile files.\n+    filterRelevant(existingProfiles, file)\n+        .filter(profile -> !refCounts.contains(profile))\n+        .forEach(profile -> profile.delete(fs));\n \n-        try ( OutputStream output = nextProfile.write( fs );\n-              PageCursor cursor = file.io( 0, PF_SHARED_READ_LOCK | PF_NO_FAULT ) )\n-        {\n-            int stepper = 0;\n-            int b = 0;\n-            while ( cursor.next() )\n-            {\n-                if ( cursor.getCurrentPageId() != PageCursor.UNBOUND_PAGE_ID )\n-                {\n-                    pagesInMemory++;\n-                    b |= 1 << stepper;\n-                }\n-                stepper++;\n-                if ( stepper == 8 )\n-                {\n-                    output.write( b );\n-                    b = 0;\n-                    stepper = 0;\n-                }\n-            }\n-            output.write( b );\n-            output.flush();\n-        }\n-\n-        // Delete previous profile files.\n-        filterRelevant( existingProfiles, file )\n-                .filter( profile -> !refCounts.contains( profile ) )\n-                .forEach( profile -> profile.delete( fs ) );\n+    return pagesInMemory;\n+  }\n \n-        return pagesInMemory;\n-    }\n-\n-    private ExecutorService buildExecutorService( JobScheduler scheduler )\n-    {\n-        BlockingQueue<Runnable> workQueue = new LinkedBlockingQueue<>( IO_PARALLELISM * 4 );\n-        RejectedExecutionHandler rejectionPolicy = new ThreadPoolExecutor.CallerRunsPolicy();\n-        ThreadFactory threadFactory = scheduler.threadFactory( JobScheduler.Groups.pageCacheIOHelper );\n-        return new ThreadPoolExecutor(\n-                0, IO_PARALLELISM, 10, TimeUnit.SECONDS, workQueue,\n-                threadFactory, rejectionPolicy );\n-    }\n+  private ExecutorService buildExecutorService(JobScheduler scheduler)\n+  {\n+    BlockingQueue<Runnable> workQueue = new LinkedBlockingQueue<>(IO_PARALLELISM * 4);\n+    RejectedExecutionHandler rejectionPolicy = new ThreadPoolExecutor.CallerRunsPolicy();\n+    ThreadFactory threadFactory = scheduler.threadFactory(JobScheduler.Groups.pageCacheIOHelper);\n+    return new ThreadPoolExecutor(\n+        0, IO_PARALLELISM, 10, TimeUnit.SECONDS, workQueue,\n+        threadFactory, rejectionPolicy);\n+  }\n \n-    private Stream<Profile> filterRelevant( Profile[] profiles, PagedFile pagedFile )\n-    {\n-        return Stream.of( profiles ).filter( Profile.relevantTo( pagedFile ) );\n-    }\n+  private Stream<Profile> filterRelevant(Profile[] profiles, PagedFile pagedFile)\n+  {\n+    return Stream.of(profiles).filter(Profile.relevantTo(pagedFile));\n+  }\n \n-    private Profile[] findExistingProfiles( List<PagedFile> pagedFiles )\n-    {\n-        return pagedFiles.stream()\n-                         .map( pf -> pf.file().getParentFile() )\n-                         .distinct()\n-                         .flatMap( dir -> Profile.findProfilesInDirectory( fs, dir ) )\n-                         .toArray( Profile[]::new );\n-    }\n+  private Profile[] findExistingProfiles(List<PagedFile> pagedFiles)\n+  {\n+    return pagedFiles.stream()\n+        .map(pf -> pf.file().getParentFile())\n+        .distinct()\n+        .flatMap(dir -> Profile.findProfilesInDirectory(fs, dir))\n+        .toArray(Profile[]::new);\n+  }\n }\n",
            "diff_size": 319
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_three_grams",
            "errors": null,
            "diff": null
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
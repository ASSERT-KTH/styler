{
    "project_name": "eclipse-milo",
    "error_id": "194",
    "information": {
        "errors": [
            {
                "line": "63",
                "column": "36",
                "severity": "error",
                "message": "'}' at column 36 should be alone on a line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
            }
        ]
    },
    "source_code": "public final class DataTypeTreeBuilder {\n\n    private DataTypeTreeBuilder() {}\n\n    /**\n     * Build a {@link DataTypeTree} by recursively browsing the DataType hierarchy starting at",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "63",
                    "column": "36",
                    "severity": "error",
                    "message": "'}' at column 36 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/194/DataTypeTreeBuilder.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/intellij/194/DataTypeTreeBuilder.java\nindex d89ec6ad197..8b0a628f18c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/194/DataTypeTreeBuilder.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/intellij/194/DataTypeTreeBuilder.java\n@@ -60,7 +60,8 @@ import static org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.Unsigned.\n  */\n public final class DataTypeTreeBuilder {\n \n-    private DataTypeTreeBuilder() {}\n+    private DataTypeTreeBuilder() {\n+    }\n \n     /**\n      * Build a {@link DataTypeTree} by recursively browsing the DataType hierarchy starting at\n@@ -150,7 +151,7 @@ public final class DataTypeTreeBuilder {\n                 requestHeader,\n                 0.0,\n                 TimestampsToReturn.Neither,\n-                new ReadValueId[]{\n+                new ReadValueId[] {\n                     new ReadValueId(\n                         Identifiers.Server_NamespaceArray,\n                         AttributeId.Value.uid(),\n@@ -281,7 +282,7 @@ public final class DataTypeTreeBuilder {\n                 uint(0)\n             ),\n             uint(0),\n-            new BrowseDescription[]{browseDescription}\n+            new BrowseDescription[] {browseDescription}\n         );\n \n         return client.sendRequest(browseRequest).thenApply(BrowseResponse.class::cast).thenCompose(response -> {\n@@ -329,7 +330,7 @@ public final class DataTypeTreeBuilder {\n                 client.getConfig().getRequestTimeout()\n             ),\n             false,\n-            new ByteString[]{continuationPoint}\n+            new ByteString[] {continuationPoint}\n         );\n \n         return client.sendRequest(browseNextRequest).thenApply(BrowseNextResponse.class::cast).thenCompose(response -> {\n",
            "diff_size": 5
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "63",
                    "column": "36",
                    "severity": "error",
                    "message": "'}' at column 36 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "159",
                    "severity": "error",
                    "message": "')' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/194/DataTypeTreeBuilder.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/naturalize/194/DataTypeTreeBuilder.java\nindex d89ec6ad197..fdfbbc21b00 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/194/DataTypeTreeBuilder.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/naturalize/194/DataTypeTreeBuilder.java\n@@ -156,7 +156,7 @@ public final class DataTypeTreeBuilder {\n                         AttributeId.Value.uid(),\n                         null,\n                         QualifiedName.NULL_VALUE)}\n-            )\n+    )\n         );\n \n         return readFuture.thenApply(ReadResponse.class::cast).thenApply(response -> {\n@@ -339,4 +339,4 @@ public final class DataTypeTreeBuilder {\n         });\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "131",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 132).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "136",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 136).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "142",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 188).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "145",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 65, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "147",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 65, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "147",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 133).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "149",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 65, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "151",
                    "severity": "error",
                    "message": "'for' has incorrect indentation level 65, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "152",
                    "severity": "error",
                    "message": "'for' child has incorrect indentation level 69, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "153",
                    "severity": "error",
                    "message": "'for rcurly' has incorrect indentation level 65, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "155",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 65, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "178",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 77, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "178",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 190).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "179",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 167, expected level should be 81.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "179",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 238).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "180",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 243).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "182",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 167, expected level should be 81.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "182",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 236).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "183",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 178).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "184",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 179).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "185",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 193).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "186",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 240).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "187",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 253).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "188",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 253).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "189",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 235).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "190",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 263).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "191",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 266).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "192",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 226).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "193",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 169).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "194",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 167, expected level should be 81.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "194",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 217).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "195",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 202).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "197",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 199).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "199",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 222).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "200",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 248).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "201",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 233).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "202",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 225).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "203",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 252).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "204",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 230).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "205",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 222).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "206",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 176).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "207",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 172).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "209",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 284).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "210",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 170).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "211",
                    "severity": "error",
                    "message": "'block rcurly' has incorrect indentation level 144, expected level should be 77.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "211",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 147).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "212",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 77, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "212",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 122).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "213",
                    "severity": "error",
                    "message": "'block rcurly' has incorrect indentation level 73, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "216",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 147).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "231",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 158).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "235",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 154).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "246",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 140).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "248",
                    "severity": "error",
                    "message": "'block rcurly' has incorrect indentation level 8, expected level should be 48.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "285",
                    "severity": "error",
                    "message": "'block rcurly' has incorrect indentation level 8, expected level should be 52.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/194/DataTypeTreeBuilder.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/codebuff/194/DataTypeTreeBuilder.java\nindex d89ec6ad197..2ab668e61e5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/194/DataTypeTreeBuilder.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/codebuff/194/DataTypeTreeBuilder.java\n@@ -16,7 +16,6 @@ import java.util.List;\n import java.util.concurrent.CompletableFuture;\n import java.util.concurrent.ExecutionException;\n import java.util.stream.Stream;\n-\n import org.eclipse.milo.opcua.sdk.core.DataTypeTree;\n import org.eclipse.milo.opcua.stack.client.UaStackClient;\n import org.eclipse.milo.opcua.stack.core.AttributeId;\n@@ -58,9 +57,11 @@ import static org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.Unsigned.\n  * Builds a {@link DataTypeTree} by recursively browsing the DataType hierarchy starting at\n  * {@link Identifiers#BaseDataType}.\n  */\n+\n public final class DataTypeTreeBuilder {\n \n-    private DataTypeTreeBuilder() {}\n+    private DataTypeTreeBuilder() {\n+    }\n \n     /**\n      * Build a {@link DataTypeTree} by recursively browsing the DataType hierarchy starting at\n@@ -70,14 +71,14 @@ public final class DataTypeTreeBuilder {\n      * @return a {@link DataTypeTree}.\n      * @throws UaException if an unrecoverable error occurs while building the tree.\n      */\n+\n     public static DataTypeTree build(OpcUaClient client) throws UaException {\n         try {\n             return buildAsync(client).get();\n         } catch (InterruptedException e) {\n             throw new UaException(StatusCodes.Bad_UnexpectedError, e);\n         } catch (ExecutionException e) {\n-            throw UaException.extract(e)\n-                .orElse(new UaException(StatusCodes.Bad_UnexpectedError, e));\n+            throw UaException.extract(e).orElse(new UaException(StatusCodes.Bad_UnexpectedError, e));\n         }\n     }\n \n@@ -90,14 +91,14 @@ public final class DataTypeTreeBuilder {\n      * @return a {@link DataTypeTree}.\n      * @throws UaException if an unrecoverable error occurs while building the tree.\n      */\n+\n     public static DataTypeTree build(UaStackClient client, OpcUaSession session) throws UaException {\n         try {\n             return buildAsync(client, session).get();\n         } catch (InterruptedException e) {\n             throw new UaException(StatusCodes.Bad_UnexpectedError, e);\n         } catch (ExecutionException e) {\n-            throw UaException.extract(e)\n-                .orElse(new UaException(StatusCodes.Bad_UnexpectedError, e));\n+            throw UaException.extract(e).orElse(new UaException(StatusCodes.Bad_UnexpectedError, e));\n         }\n     }\n \n@@ -108,11 +109,9 @@ public final class DataTypeTreeBuilder {\n      * @param client a connected {@link OpcUaClient}.\n      * @return a {@link DataTypeTree}.\n      */\n+\n     public static CompletableFuture<DataTypeTree> buildAsync(OpcUaClient client) {\n-        return client.getSession().thenCompose(\n-            session ->\n-                buildAsync(client.getStackClient(), session)\n-        );\n+        return client.getSession().thenCompose(session -> buildAsync(client.getStackClient(), session));\n     }\n \n     /**\n@@ -123,126 +122,100 @@ public final class DataTypeTreeBuilder {\n      * @param session an active {@link OpcUaSession}.\n      * @return a {@link DataTypeTree}.\n      */\n+\n     public static CompletableFuture<DataTypeTree> buildAsync(UaStackClient client, OpcUaSession session) {\n         Tree<DataTypeTree.DataType> root = new Tree<>(\n             null,\n-            new DataTypeTree.DataType(\n-                QualifiedName.parse(\"0:BaseDataType\"),\n-                Identifiers.BaseDataType,\n-                null,\n-                null\n-            )\n+            new DataTypeTree.DataType(QualifiedName.parse(\"0:BaseDataType\"), Identifiers.BaseDataType, null, null)\n         );\n-\n-        return readNamespaceTable(client, session)\n-            .thenCompose(namespaceTable -> addChildren(root, client, session, namespaceTable))\n-            .thenApply(u -> new DataTypeTree(root));\n+        return readNamespaceTable(client, session).thenCompose(namespaceTable -> addChildren(root, client, session, namespaceTable))\n+                                                  .thenApply(u -> new DataTypeTree(root));\n     }\n \n     private static CompletableFuture<NamespaceTable> readNamespaceTable(UaStackClient client, OpcUaSession session) {\n-        RequestHeader requestHeader = client.newRequestHeader(\n-            session.getAuthenticationToken(),\n-            client.getConfig().getRequestTimeout()\n-        );\n+        RequestHeader requestHeader = client.newRequestHeader(session.getAuthenticationToken(), client.getConfig().getRequestTimeout());\n+\n+        CompletableFuture<UaResponseMessage> readFuture = client.sendRequest(new ReadRequest(\n+                                                              requestHeader,\n+                                                              0.0,\n+                                                              TimestampsToReturn.Neither,\n+                                                              new ReadValueId[]{new ReadValueId(Identifiers.Server_NamespaceArray, AttributeId.Value.uid(), null, QualifiedName.NULL_VALUE)}\n+                                                          ));\n+        return readFuture.thenApply(ReadResponse.class::cast).thenApply(response -> {\n+                                                                 DataValue dataValue = response.getResults()[0];\n \n-        CompletableFuture<UaResponseMessage> readFuture = client.sendRequest(\n-            new ReadRequest(\n-                requestHeader,\n-                0.0,\n-                TimestampsToReturn.Neither,\n-                new ReadValueId[]{\n-                    new ReadValueId(\n-                        Identifiers.Server_NamespaceArray,\n-                        AttributeId.Value.uid(),\n-                        null,\n-                        QualifiedName.NULL_VALUE)}\n-            )\n-        );\n+                                                                 String[] namespaceUris = (String[]) dataValue.getValue().getValue();\n \n-        return readFuture.thenApply(ReadResponse.class::cast).thenApply(response -> {\n-            DataValue dataValue = response.getResults()[0];\n-            String[] namespaceUris = (String[]) dataValue.getValue().getValue();\n-            NamespaceTable namespaceTable = new NamespaceTable();\n-            for (String namespaceUri : namespaceUris) {\n-                namespaceTable.addUri(namespaceUri);\n-            }\n-            return namespaceTable;\n+                                                                 NamespaceTable namespaceTable = new NamespaceTable();\n+\n+                                                                 for (String namespaceUri : namespaceUris) {\n+                                                                     namespaceTable.addUri(namespaceUri);\n+                                                                 }\n+\n+                                                                 return namespaceTable;\n         });\n     }\n \n     private static CompletableFuture<Unit> addChildren(\n         Tree<DataTypeTree.DataType> tree,\n         UaStackClient client,\n-        OpcUaSession session,\n-        NamespaceTable namespaceTable\n+        OpcUaSession session, NamespaceTable namespaceTable\n     ) {\n-\n         CompletableFuture<List<ReferenceDescription>> subtypes = browseSafe(\n             client,\n             session,\n             new BrowseDescription(\n-                tree.getValue().getNodeId(),\n-                BrowseDirection.Forward,\n-                Identifiers.HasSubtype,\n-                false,\n-                uint(NodeClass.DataType.getValue()),\n-                uint(BrowseResultMask.All.getValue())\n-            )\n+                                                                     tree.getValue().getNodeId(),\n+                                                                     BrowseDirection.Forward,\n+                                                                     Identifiers.HasSubtype,\n+                                                                     false,\n+                                                                     uint(NodeClass.DataType.getValue()),\n+                                                                     uint(BrowseResultMask.All.getValue())\n+                                                                 )\n         );\n \n         CompletableFuture<List<DataTypeTree.DataType>> dataTypesFuture = subtypes.thenCompose(references -> {\n-            Stream<CompletableFuture<DataTypeTree.DataType>> dataTypeFutures =\n-                references.stream().map(dataTypeReference -> {\n-                    NodeId dataTypeId = dataTypeReference.getNodeId()\n-                        .local(namespaceTable)\n-                        .orElse(NodeId.NULL_VALUE);\n-\n-                    CompletableFuture<List<ReferenceDescription>> encodings = browseSafe(\n-                        client,\n-                        session,\n-                        new BrowseDescription(\n-                            dataTypeId,\n-                            BrowseDirection.Forward,\n-                            Identifiers.HasEncoding,\n-                            false,\n-                            uint(NodeClass.Object.getValue()),\n-                            uint(BrowseResultMask.All.getValue())\n-                        )\n-                    );\n-\n-                    return encodings.thenApply(encodingReferences -> {\n-                        NodeId binaryEncodingId = null;\n-                        NodeId xmlEncodingId = null;\n-\n-                        for (ReferenceDescription r : encodingReferences) {\n-                            if (r.getBrowseName().equals(OpcUaDefaultBinaryEncoding.ENCODING_NAME)) {\n-                                binaryEncodingId = r.getNodeId().local(namespaceTable).orElse(null);\n-                            } else if (r.getBrowseName().equals(OpcUaDefaultXmlEncoding.ENCODING_NAME)) {\n-                                xmlEncodingId = r.getNodeId().local(namespaceTable).orElse(null);\n-                            }\n-                        }\n-\n-                        return new DataTypeTree.DataType(\n-                            dataTypeReference.getBrowseName(),\n-                            dataTypeId,\n-                            binaryEncodingId,\n-                            xmlEncodingId\n-                        );\n-                    });\n-                });\n-\n-            return FutureUtils.sequence(dataTypeFutures);\n-        });\n-\n-        return dataTypesFuture\n-            .thenCompose(dataTypes -> {\n-                Stream<CompletableFuture<Unit>> futures = dataTypes.stream()\n-                    .map(tree::addChild)\n-                    .map(childNode -> addChildren(childNode, client, session, namespaceTable));\n-\n-                return FutureUtils.sequence(futures);\n-            })\n-            .thenApply(v -> Unit.VALUE);\n+                                                                             Stream<CompletableFuture<DataTypeTree.DataType>> dataTypeFutures = references.stream().map(dataTypeReference -> {\n+                                                                                                                                                                       NodeId dataTypeId = dataTypeReference.getNodeId().local(namespaceTable)\n+                                                                                                                                                                                                                        .orElse(NodeId.NULL_VALUE);\n+\n+                                                                                                                                                                       CompletableFuture<List<ReferenceDescription>> encodings = browseSafe(\n+                                                                                                                                                                           client,\n+                                                                                                                                                                           session,\n+                                                                                                                                                                           new BrowseDescription(\n+                                                                                                                                                                                                                                     dataTypeId,\n+                                                                                                                                                                                                                                     BrowseDirection.Forward,\n+                                                                                                                                                                                                                                     Identifiers.HasEncoding,\n+                                                                                                                                                                                                                                     false,\n+                                                                                                                                                                                                                                     uint(NodeClass.Object.getValue()),\n+                                                                                                                                                                                                                                     uint(BrowseResultMask.All.getValue())\n+                                                                                                                                                                                                                                 )\n+                                                                                                                                                                       );\n+                                                                                                                                                                       return encodings.thenApply(encodingReferences -> {\n+                                                                                                                                                                           NodeId binaryEncodingId = null;\n+\n+                                                                                                                                                                           NodeId xmlEncodingId = null;\n+\n+                                                                                                                                                                           for (ReferenceDescription r : encodingReferences) {\n+                                                                                                                                                                               if (r.getBrowseName().equals(OpcUaDefaultBinaryEncoding.ENCODING_NAME)) {\n+                                                                                                                                                                                   binaryEncodingId = r.getNodeId().local(namespaceTable)\n+                                                                                                                                                                                                                   .orElse(null);\n+                                                                                                                                                                               } else if (r.getBrowseName().equals(OpcUaDefaultXmlEncoding.ENCODING_NAME)) {\n+                                                                                                                                                                                   xmlEncodingId = r.getNodeId().local(namespaceTable)\n+                                                                                                                                                                                                                .orElse(null);\n+                                                                                                                                                                               }\n+                                                                                                                                                                           }\n+\n+                                                                                                                                                                           return new DataTypeTree.DataType(dataTypeReference.getBrowseName(), dataTypeId, binaryEncodingId, xmlEncodingId);\n+                                                                                                                                                                       });\n+                                                                                                                                                });\n+                                                                             return FutureUtils.sequence(dataTypeFutures);\n+                                                                         });\n+        return dataTypesFuture.thenCompose(dataTypes -> {\n+            Stream<CompletableFuture<Unit>> futures = dataTypes.stream().map(tree::addChild)\n+                                                                        .map(childNode -> addChildren(childNode, client, session, namespaceTable));\n+            return FutureUtils.sequence(futures);\n+        }).thenApply(v -> Unit.VALUE);\n     }\n \n     /**\n@@ -254,53 +227,32 @@ public final class DataTypeTreeBuilder {\n      * @param browseDescription the {@link BrowseDescription}.\n      * @return a List of {@link ReferenceDescription}s obtained by browsing {@code browseDescription}.\n      */\n-    private static CompletableFuture<List<ReferenceDescription>> browseSafe(\n-        UaStackClient client,\n-        OpcUaSession session,\n-        BrowseDescription browseDescription\n-    ) {\n \n-        return browse(client, session, browseDescription)\n-            .exceptionally(ex -> Collections.emptyList());\n+    private static CompletableFuture<List<ReferenceDescription>> browseSafe(UaStackClient client, OpcUaSession session, BrowseDescription browseDescription) {\n+        return browse(client, session, browseDescription).exceptionally(ex -> Collections.emptyList());\n     }\n \n-    private static CompletableFuture<List<ReferenceDescription>> browse(\n-        UaStackClient client,\n-        OpcUaSession session,\n-        BrowseDescription browseDescription\n-    ) {\n-\n+    private static CompletableFuture<List<ReferenceDescription>> browse(UaStackClient client, OpcUaSession session, BrowseDescription browseDescription) {\n         BrowseRequest browseRequest = new BrowseRequest(\n-            client.newRequestHeader(\n-                session.getAuthenticationToken(),\n-                client.getConfig().getRequestTimeout()\n-            ),\n-            new ViewDescription(\n-                NodeId.NULL_VALUE,\n-                DateTime.MIN_VALUE,\n-                uint(0)\n-            ),\n+            client.newRequestHeader(session.getAuthenticationToken(), client.getConfig().getRequestTimeout()),\n+            new ViewDescription(NodeId.NULL_VALUE, DateTime.MIN_VALUE, uint(0)),\n             uint(0),\n             new BrowseDescription[]{browseDescription}\n         );\n+        return client.sendRequest(browseRequest).thenApply(BrowseResponse.class::cast)\n+                                                .thenCompose(response -> {\n+                                                    BrowseResult result = response.getResults()[0];\n \n-        return client.sendRequest(browseRequest).thenApply(BrowseResponse.class::cast).thenCompose(response -> {\n-            BrowseResult result = response.getResults()[0];\n-\n-            List<ReferenceDescription> references =\n-                Collections.synchronizedList(new ArrayList<>());\n-\n-            return maybeBrowseNext(client, session, references, result);\n+                                                    List<ReferenceDescription> references = Collections.synchronizedList(new ArrayList<>());\n+                                                    return maybeBrowseNext(client, session, references, result);\n         });\n     }\n \n     private static CompletableFuture<List<ReferenceDescription>> maybeBrowseNext(\n         UaStackClient client,\n         OpcUaSession session,\n-        List<ReferenceDescription> references,\n-        BrowseResult result\n+        List<ReferenceDescription> references, BrowseResult result\n     ) {\n-\n         if (result.getStatusCode().isGood()) {\n             Collections.addAll(references, result.getReferences());\n \n@@ -319,24 +271,18 @@ public final class DataTypeTreeBuilder {\n     private static CompletableFuture<List<ReferenceDescription>> browseNext(\n         UaStackClient client,\n         OpcUaSession session,\n-        ByteString continuationPoint,\n-        List<ReferenceDescription> references\n+        ByteString continuationPoint, List<ReferenceDescription> references\n     ) {\n-\n         BrowseNextRequest browseNextRequest = new BrowseNextRequest(\n-            client.newRequestHeader(\n-                session.getAuthenticationToken(),\n-                client.getConfig().getRequestTimeout()\n-            ),\n+            client.newRequestHeader(session.getAuthenticationToken(), client.getConfig().getRequestTimeout()),\n             false,\n             new ByteString[]{continuationPoint}\n         );\n-\n-        return client.sendRequest(browseNextRequest).thenApply(BrowseNextResponse.class::cast).thenCompose(response -> {\n-            BrowseResult result = response.getResults()[0];\n-\n-            return maybeBrowseNext(client, session, references, result);\n+        return client.sendRequest(browseNextRequest).thenApply(BrowseNextResponse.class::cast)\n+                                                    .thenCompose(response -> {\n+                                                        BrowseResult result = response.getResults()[0];\n+                                                        return maybeBrowseNext(client, session, references, result);\n         });\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 167
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "63",
                    "column": "36",
                    "severity": "error",
                    "message": "'}' at column 36 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "74",
                    "severity": "error",
                    "message": "'METHOD_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/194/DataTypeTreeBuilder.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/styler_three_grams/194/DataTypeTreeBuilder.java\nindex d89ec6ad197..7ea72fe10cd 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/194/DataTypeTreeBuilder.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/styler_three_grams/194/DataTypeTreeBuilder.java\n@@ -60,8 +60,9 @@ import static org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.Unsigned.\n  */\n public final class DataTypeTreeBuilder {\n \n-    private DataTypeTreeBuilder() {}\n+    private DataTypeTreeBuilder() {\n \n+    }\n     /**\n      * Build a {@link DataTypeTree} by recursively browsing the DataType hierarchy starting at\n      * {@link Identifiers#BaseDataType}.\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
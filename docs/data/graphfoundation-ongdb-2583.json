{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2583",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "57",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "80",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "84",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "129",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "97",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "103",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "82",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "127",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "128",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "14",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "162",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "162",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "171",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "173",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "173",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2583/PartitionedIndexReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2583/PartitionedIndexReader.java\nindex 3132836f32b..13a3cb631d5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2583/PartitionedIndexReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2583/PartitionedIndexReader.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.api.impl.schema.reader;\n \n import java.io.IOException;\n@@ -51,138 +52,133 @@ import org.neo4j.values.storable.Value;\n  */\n public class PartitionedIndexReader extends AbstractIndexReader\n {\n-    private final List<SimpleIndexReader> indexReaders;\n-\n-    public PartitionedIndexReader( List<PartitionSearcher> partitionSearchers,\n-            SchemaIndexDescriptor descriptor,\n-            IndexSamplingConfig samplingConfig,\n-            TaskCoordinator taskCoordinator )\n+  private final List<SimpleIndexReader> indexReaders;\n+\n+  public PartitionedIndexReader(List<PartitionSearcher> partitionSearchers,\n+                                SchemaIndexDescriptor descriptor,\n+                                IndexSamplingConfig samplingConfig,\n+                                TaskCoordinator taskCoordinator)\n+  {\n+    this(descriptor, partitionSearchers.stream()\n+        .map(partitionSearcher -> new SimpleIndexReader(partitionSearcher, descriptor,\n+            samplingConfig, taskCoordinator))\n+        .collect(Collectors.toList()));\n+  }\n+\n+  PartitionedIndexReader(SchemaIndexDescriptor descriptor, List<SimpleIndexReader> readers)\n+  {\n+    super(descriptor);\n+    this.indexReaders = readers;\n+  }\n+\n+  @Override\n+  public PrimitiveLongResourceIterator query(IndexQuery... predicates) throws IndexNotApplicableKernelException\n+  {\n+    try\n     {\n-        this( descriptor, partitionSearchers.stream()\n-                .map( partitionSearcher -> new SimpleIndexReader( partitionSearcher, descriptor,\n-                        samplingConfig, taskCoordinator ) )\n-                .collect( Collectors.toList() ) );\n-    }\n-\n-    PartitionedIndexReader( SchemaIndexDescriptor descriptor, List<SimpleIndexReader> readers )\n+      return partitionedOperation(reader -> innerQuery(reader, predicates));\n+    } catch (InnerException e)\n     {\n-        super( descriptor );\n-        this.indexReaders = readers;\n+      throw e.getCause();\n     }\n+  }\n \n-    @Override\n-    public PrimitiveLongResourceIterator query( IndexQuery... predicates ) throws IndexNotApplicableKernelException\n+  @Override\n+  public void query(IndexProgressor.NodeValueClient client, IndexOrder indexOrder, IndexQuery... query) throws IndexNotApplicableKernelException\n+  {\n+    try\n     {\n+      BridgingIndexProgressor bridgingIndexProgressor = new BridgingIndexProgressor(client, descriptor.schema().getPropertyIds());\n+      indexReaders.parallelStream().forEach(reader ->\n+      {\n         try\n         {\n-            return partitionedOperation( reader -> innerQuery( reader, predicates ) );\n-        }\n-        catch ( InnerException e )\n+          reader.query(bridgingIndexProgressor, indexOrder, query);\n+        } catch (IndexNotApplicableKernelException e)\n         {\n-            throw e.getCause();\n+          throw new InnerException(e);\n         }\n-    }\n-\n-    @Override\n-    public void query( IndexProgressor.NodeValueClient client, IndexOrder indexOrder, IndexQuery... query ) throws IndexNotApplicableKernelException\n+      });\n+      client.initialize(descriptor, bridgingIndexProgressor, query);\n+    } catch (InnerException e)\n     {\n-        try\n-        {\n-            BridgingIndexProgressor bridgingIndexProgressor = new BridgingIndexProgressor( client, descriptor.schema().getPropertyIds() );\n-            indexReaders.parallelStream().forEach( reader ->\n-            {\n-                try\n-                {\n-                    reader.query( bridgingIndexProgressor, indexOrder, query );\n-                }\n-                catch ( IndexNotApplicableKernelException e )\n-                {\n-                    throw new InnerException( e );\n-                }\n-            } );\n-            client.initialize( descriptor, bridgingIndexProgressor, query );\n-        }\n-        catch ( InnerException e )\n-        {\n-            throw e.getCause();\n-        }\n+      throw e.getCause();\n     }\n-\n-    @Override\n-    public boolean hasFullValuePrecision( IndexQuery... predicates )\n+  }\n+\n+  @Override\n+  public boolean hasFullValuePrecision(IndexQuery... predicates)\n+  {\n+    return false;\n+  }\n+\n+  @Override\n+  public void distinctValues(IndexProgressor.NodeValueClient client, PropertyAccessor propertyAccessor)\n+  {\n+    BridgingIndexProgressor bridgingIndexProgressor = new BridgingIndexProgressor(client, descriptor.schema().getPropertyIds());\n+    indexReaders.parallelStream().forEach(reader -> reader.distinctValues(bridgingIndexProgressor, propertyAccessor));\n+    client.initialize(descriptor, bridgingIndexProgressor, new IndexQuery[0]);\n+  }\n+\n+  private PrimitiveLongResourceIterator innerQuery(IndexReader reader, IndexQuery[] predicates)\n+  {\n+    try\n     {\n-        return false;\n-    }\n-\n-    @Override\n-    public void distinctValues( IndexProgressor.NodeValueClient client, PropertyAccessor propertyAccessor )\n+      return reader.query(predicates);\n+    } catch (IndexNotApplicableKernelException e)\n     {\n-        BridgingIndexProgressor bridgingIndexProgressor = new BridgingIndexProgressor( client, descriptor.schema().getPropertyIds() );\n-        indexReaders.parallelStream().forEach( reader -> reader.distinctValues( bridgingIndexProgressor, propertyAccessor ) );\n-        client.initialize( descriptor, bridgingIndexProgressor, new IndexQuery[0] );\n+      throw new InnerException(e);\n     }\n+  }\n \n-    private PrimitiveLongResourceIterator innerQuery( IndexReader reader, IndexQuery[] predicates )\n+  private static final class InnerException extends RuntimeException\n+  {\n+    private InnerException(IndexNotApplicableKernelException e)\n     {\n-        try\n-        {\n-            return reader.query( predicates );\n-        }\n-        catch ( IndexNotApplicableKernelException e )\n-        {\n-            throw new InnerException( e );\n-        }\n-    }\n-\n-    private static final class InnerException extends RuntimeException\n-    {\n-        private InnerException( IndexNotApplicableKernelException e )\n-        {\n-            super( e );\n-        }\n-\n-        @Override\n-        public synchronized IndexNotApplicableKernelException getCause()\n-        {\n-            return (IndexNotApplicableKernelException) super.getCause();\n-        }\n-    }\n-\n-    @Override\n-    public long countIndexedNodes( long nodeId, Value... propertyValues )\n-    {\n-        return indexReaders.parallelStream()\n-                .mapToLong( reader -> reader.countIndexedNodes( nodeId, propertyValues ) )\n-                .sum();\n+      super(e);\n     }\n \n     @Override\n-    public IndexSampler createSampler()\n+    public synchronized IndexNotApplicableKernelException getCause()\n     {\n-        List<IndexSampler> indexSamplers = indexReaders.parallelStream()\n-                .map( SimpleIndexReader::createSampler )\n-                .collect( Collectors.toList() );\n-        return new AggregatingIndexSampler( indexSamplers );\n+      return (IndexNotApplicableKernelException) super.getCause();\n     }\n-\n-    @Override\n-    public void close()\n+  }\n+\n+  @Override\n+  public long countIndexedNodes(long nodeId, Value... propertyValues)\n+  {\n+    return indexReaders.parallelStream()\n+        .mapToLong(reader -> reader.countIndexedNodes(nodeId, propertyValues))\n+        .sum();\n+  }\n+\n+  @Override\n+  public IndexSampler createSampler()\n+  {\n+    List<IndexSampler> indexSamplers = indexReaders.parallelStream()\n+        .map(SimpleIndexReader::createSampler)\n+        .collect(Collectors.toList());\n+    return new AggregatingIndexSampler(indexSamplers);\n+  }\n+\n+  @Override\n+  public void close()\n+  {\n+    try\n     {\n-        try\n-        {\n-            IOUtils.closeAll( indexReaders );\n-        }\n-        catch ( IOException e )\n-        {\n-            throw new IndexReaderCloseException( e );\n-        }\n-    }\n-\n-    private PrimitiveLongResourceIterator partitionedOperation(\n-            Function<SimpleIndexReader,PrimitiveLongResourceIterator> readerFunction )\n+      IOUtils.closeAll(indexReaders);\n+    } catch (IOException e)\n     {\n-        return PrimitiveLongResourceCollections.concat( indexReaders.parallelStream()\n-                .map( readerFunction )\n-                .collect( Collectors.toList() ) );\n+      throw new IndexReaderCloseException(e);\n     }\n+  }\n+\n+  private PrimitiveLongResourceIterator partitionedOperation(\n+      Function<SimpleIndexReader, PrimitiveLongResourceIterator> readerFunction)\n+  {\n+    return PrimitiveLongResourceCollections.concat(indexReaders.parallelStream()\n+        .map(readerFunction)\n+        .collect(Collectors.toList()));\n+  }\n }\n",
            "diff_size": 182
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2583/PartitionedIndexReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2583/PartitionedIndexReader.java\nindex 3132836f32b..5e8733a5823 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2583/PartitionedIndexReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2583/PartitionedIndexReader.java\n@@ -58,10 +58,8 @@ public class PartitionedIndexReader extends AbstractIndexReader\n             IndexSamplingConfig samplingConfig,\n             TaskCoordinator taskCoordinator )\n     {\n-        this( descriptor, partitionSearchers.stream()\n-                .map( partitionSearcher -> new SimpleIndexReader( partitionSearcher, descriptor,\n-                        samplingConfig, taskCoordinator ) )\n-                .collect( Collectors.toList() ) );\n+        this( descriptor, partitionSearchers.stream().map( partitionSearcher -> new SimpleIndexReader( partitionSearcher, descriptor,\n+                        samplingConfig, taskCoordinator ) ).collect( Collectors.toList() ) );\n     }\n \n     PartitionedIndexReader( SchemaIndexDescriptor descriptor, List<SimpleIndexReader> readers )\n@@ -151,18 +149,14 @@ public class PartitionedIndexReader extends AbstractIndexReader\n     @Override\n     public long countIndexedNodes( long nodeId, Value... propertyValues )\n     {\n-        return indexReaders.parallelStream()\n-                .mapToLong( reader -> reader.countIndexedNodes( nodeId, propertyValues ) )\n-                .sum();\n+        return indexReaders.parallelStream().mapToLong( reader -> reader.countIndexedNodes( nodeId, propertyValues ) ).sum();\n     }\n \n     @Override\n     public IndexSampler createSampler()\n     {\n-        List<IndexSampler> indexSamplers = indexReaders.parallelStream()\n-                .map( SimpleIndexReader::createSampler )\n-                .collect( Collectors.toList() );\n-        return new AggregatingIndexSampler( indexSamplers );\n+        List<IndexSampler> indexSamplers = indexReaders.parallelStream().map( SimpleIndexReader::createSampler ).collect( Collectors.toList() );\n+return new AggregatingIndexSampler( indexSamplers );\n     }\n \n     @Override\n@@ -178,11 +172,9 @@ public class PartitionedIndexReader extends AbstractIndexReader\n         }\n     }\n \n-    private PrimitiveLongResourceIterator partitionedOperation(\n-            Function<SimpleIndexReader,PrimitiveLongResourceIterator> readerFunction )\n+    private PrimitiveLongResourceIterator partitionedOperation( Function<SimpleIndexReader,PrimitiveLongResourceIterator> readerFunction )\n     {\n-        return PrimitiveLongResourceCollections.concat( indexReaders.parallelStream()\n-                .map( readerFunction )\n+        return PrimitiveLongResourceCollections.concat( indexReaders.parallelStream().map( readerFunction )\n                 .collect( Collectors.toList() ) );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 16
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "Angel-ML-angel",
    "error_id": "437",
    "information": {
        "errors": [
            {
                "line": "6",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 102).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * Copyright (C) 2017-2018 THL A29 Limited, a Tencent company. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in\n * compliance with the License. You may obtain a copy of the License at\n *\n * https://opensource.org/licenses/Apache-2.0",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/437/RobustRegLocalExample.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/437/RobustRegLocalExample.java\nindex 83c5deec7cb..a79b240a086 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/437/RobustRegLocalExample.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/437/RobustRegLocalExample.java\n@@ -14,6 +14,7 @@\n  * the License.\n  *\n  */\n+\n package com.tencent.angel.example.ml;\n \n import com.tencent.angel.conf.AngelConf;\n",
            "diff_size": 1
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "142",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/437/RobustRegLocalExample.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/437/RobustRegLocalExample.java\nindex 83c5deec7cb..8cc610e0978 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/437/RobustRegLocalExample.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/437/RobustRegLocalExample.java\n@@ -28,11 +28,11 @@ import org.apache.hadoop.conf.Configuration;\n import org.apache.hadoop.fs.LocalFileSystem;\n import org.apache.hadoop.mapreduce.lib.input.CombineTextInputFormat;\n import org.apache.log4j.PropertyConfigurator;\n-\n import java.io.File;\n import java.util.Scanner;\n \n public class RobustRegLocalExample {\n+\n   private static final Log LOG = LogFactory.getLog(RobustRegLocalExample.class);\n   private static boolean inPackage = false;\n   private static String CLASSBASE = \"com.tencent.angel.ml.regression.\";\n@@ -54,6 +54,7 @@ public class RobustRegLocalExample {\n     Scanner scanner = new Scanner(System.in);\n     System.out.println(\"1-train 2-incTrain 3-predict\");\n     System.out.println(\"Please input the mode:\");\n+\n     int mode = scanner.nextInt();\n     switch (mode) {\n       case 1:\n@@ -66,12 +67,10 @@ public class RobustRegLocalExample {\n         example.predict();\n         break;\n     }\n-\n     System.exit(0);\n   }\n \n   public void setConf(int mode) {\n-\n     String trainInput = \"\";\n     String predictInput = \"\";\n \n@@ -85,6 +84,7 @@ public class RobustRegLocalExample {\n     }\n \n     // Data format, libsvm or dummy\n+\n     String dataType = \"libsvm\";\n     // Model type\n     String modelType = String.valueOf(RowType.T_FLOAT_SPARSE);\n@@ -106,7 +106,6 @@ public class RobustRegLocalExample {\n     double decay = 2;\n     // Regularization coefficient\n     double reg = 0.0001;\n-\n     String angelConfFile = null;\n     if (inPackage) {\n       angelConfFile = \"../examples/src/jsons/robustreg.json\";\n@@ -115,6 +114,7 @@ public class RobustRegLocalExample {\n     }\n \n     // Set file system\n+\n     String LOCAL_FS = LocalFileSystem.DEFAULT_FS;\n     String TMP_PATH = System.getProperty(\"java.io.tmpdir\", \"/tmp\");\n \n@@ -136,16 +136,16 @@ public class RobustRegLocalExample {\n       conf.set(AngelConf.ANGEL_TRAIN_DATA_PATH, trainInput);\n       conf.set(AngelConf.ANGEL_SAVE_MODEL_PATH, LOCAL_FS + TMP_PATH + \"/model/RobustReg\");\n     } else if (mode == 2) { // incTrain mode\n-      conf.set(AngelConf.ANGEL_ACTION_TYPE, \"inctrain\");\n-      conf.set(AngelConf.ANGEL_TRAIN_DATA_PATH, trainInput);\n-      conf.set(AngelConf.ANGEL_LOAD_MODEL_PATH, LOCAL_FS + TMP_PATH + \"/model/RobustReg\");\n-      conf.set(AngelConf.ANGEL_SAVE_MODEL_PATH, LOCAL_FS + TMP_PATH + \"/model/RobustReg-inc\");\n+             conf.set(AngelConf.ANGEL_ACTION_TYPE, \"inctrain\");\n+             conf.set(AngelConf.ANGEL_TRAIN_DATA_PATH, trainInput);\n+             conf.set(AngelConf.ANGEL_LOAD_MODEL_PATH, LOCAL_FS + TMP_PATH + \"/model/RobustReg\");\n+             conf.set(AngelConf.ANGEL_SAVE_MODEL_PATH, LOCAL_FS + TMP_PATH + \"/model/RobustReg-inc\");\n     } else if (mode == 3) {  // predict mode\n-      conf.set(AngelConf.ANGEL_ACTION_TYPE, \"predict\");\n-      conf.set(AngelConf.ANGEL_PREDICT_DATA_PATH, predictInput);\n-      conf.set(AngelConf.ANGEL_LOAD_MODEL_PATH, LOCAL_FS + TMP_PATH + \"/model/RobustReg\");\n-      conf.set(AngelConf.ANGEL_PREDICT_PATH, LOCAL_FS + TMP_PATH + \"/predict/RobustReg\");\n-    }\n+             conf.set(AngelConf.ANGEL_ACTION_TYPE, \"predict\");\n+             conf.set(AngelConf.ANGEL_PREDICT_DATA_PATH, predictInput);\n+             conf.set(AngelConf.ANGEL_LOAD_MODEL_PATH, LOCAL_FS + TMP_PATH + \"/model/RobustReg\");\n+             conf.set(AngelConf.ANGEL_PREDICT_PATH, LOCAL_FS + TMP_PATH + \"/predict/RobustReg\");\n+           }\n     conf.set(AngelConf.ANGEL_LOG_PATH, LOCAL_FS + TMP_PATH + \"/log\");\n \n     // Set angel resource parameters #worker, #task, #PS\n@@ -167,42 +167,33 @@ public class RobustRegLocalExample {\n \n     // Set model class\n     conf.set(AngelMLConf.ML_MODEL_CLASS_NAME(), CLASSBASE + \"RobustRegression\");\n-\n   }\n \n   public void train() {\n-\n     try {\n       setConf(1);\n-\n       GraphRunner runner = new GraphRunner();\n       runner.train(conf);\n     } catch (Exception e) {\n       LOG.error(\"run LinearRegLocalExample:train failed.\", e);\n       throw e;\n     }\n-\n   }\n \n   public void incTrain() {\n-\n     try {\n       setConf(2);\n-\n       GraphRunner runner = new GraphRunner();\n       runner.train(conf);\n     } catch (Exception e) {\n       LOG.error(\"run LinearRegLocalExample:incTrain failed.\", e);\n       throw e;\n     }\n-\n   }\n \n   public void predict() {\n-\n     try {\n       setConf(3);\n-\n       GraphRunner runner = new GraphRunner();\n       runner.predict(conf);\n     } catch (Exception e) {\n@@ -210,4 +201,4 @@ public class RobustRegLocalExample {\n       throw e;\n     }\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 27
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
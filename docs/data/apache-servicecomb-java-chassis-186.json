{
    "project_name": "apache-servicecomb-java-chassis",
    "error_id": "186",
    "information": {
        "errors": [
            {
                "line": "154",
                "column": "41",
                "severity": "warning",
                "message": "'&&' should be on a new line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
            }
        ]
    },
    "source_code": "    if (response != null) {\n      Model model = response.getResponseSchema();\n      return model instanceof ModelImpl &&\n          FileProperty.isType(((ModelImpl) model).getType(), ((ModelImpl) model).getFormat());\n    }\n",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/186/RestOperationMeta.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler/186/RestOperationMeta.java\nindex d559231605c..a1e4b330204 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/186/RestOperationMeta.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler/186/RestOperationMeta.java\n@@ -151,8 +151,8 @@ public class RestOperationMeta {\n     Response response = operationMeta.getSwaggerOperation().getResponses().get(\"200\");\n     if (response != null) {\n       Model model = response.getResponseSchema();\n-      return model instanceof ModelImpl &&\n-          FileProperty.isType(((ModelImpl) model).getType(), ((ModelImpl) model).getFormat());\n+      return model instanceof ModelImpl\n+          && FileProperty.isType(((ModelImpl) model).getType(), ((ModelImpl) model).getFormat());\n     }\n \n     return false;\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "155",
                    "column": "41",
                    "severity": "warning",
                    "message": "'&&' should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/186/RestOperationMeta.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/intellij/186/RestOperationMeta.java\nindex d559231605c..42ad29900ad 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/186/RestOperationMeta.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/intellij/186/RestOperationMeta.java\n@@ -122,8 +122,9 @@ public class RestOperationMeta {\n   /**\n    * EdgeService cannot recognize the map type form body whose value type is String,\n    * so there should be this additional setting.\n+   *\n    * @param parameter the swagger information of the parameter\n-   * @param type the resolved param type\n+   * @param type      the resolved param type\n    * @return the corrected param type\n    */\n   private Type correctFormBodyType(Parameter parameter, Type type) {\n",
            "diff_size": 2
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "156",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 127).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "315",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 179).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "319",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 153).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "325",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 159).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/186/RestOperationMeta.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/naturalize/186/RestOperationMeta.java\nindex d559231605c..4a2ee436cb1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/186/RestOperationMeta.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/naturalize/186/RestOperationMeta.java\n@@ -130,11 +130,13 @@ public class RestOperationMeta {\n     if (null != type || !(parameter instanceof BodyParameter)) {\n       return type;\n     }\n-    final BodyParameter bodyParameter = (BodyParameter) parameter;\n+\n+final BodyParameter bodyParameter = (BodyParameter) parameter;\n     if (!(bodyParameter.getSchema() instanceof ModelImpl)) {\n       return type;\n     }\n-    final Property additionalProperties = ((ModelImpl) bodyParameter.getSchema()).getAdditionalProperties();\n+\n+final Property additionalProperties = ((ModelImpl) bodyParameter.getSchema()).getAdditionalProperties();\n     if (additionalProperties instanceof StringProperty) {\n       type = RestObjectMapperFactory.getRestObjectMapper().getTypeFactory()\n           .constructMapType(Map.class, String.class, String.class);\n@@ -151,8 +153,7 @@ public class RestOperationMeta {\n     Response response = operationMeta.getSwaggerOperation().getResponses().get(\"200\");\n     if (response != null) {\n       Model model = response.getResponseSchema();\n-      return model instanceof ModelImpl &&\n-          FileProperty.isType(((ModelImpl) model).getType(), ((ModelImpl) model).getFormat());\n+      return model instanceof ModelImpl && FileProperty.isType(((ModelImpl) model).getType(), ((ModelImpl) model).getFormat());\n     }\n \n     return false;\n@@ -311,20 +312,17 @@ public class RestOperationMeta {\n       //when the produces of provider is application/json there will return the application/json processor\n       //so do not care what accept type the consumer will set.\n       return this.produceProcessorAcceptMap.get(MediaType.WILDCARD)\n-          .computeIfAbsent(serialViewKey, key -> ProduceProcessorManager.cloneNewProduceProcessor(\n-              acceptType, serialViewClass, produceProcessorAcceptMap.get(MediaType.WILDCARD)));\n+          .computeIfAbsent(serialViewKey, key -> ProduceProcessorManager.cloneNewProduceProcessor(acceptType, serialViewClass, produceProcessorAcceptMap.get(MediaType.WILDCARD)));\n     }\n     if (StringUtils.isEmpty(acceptType)) {\n       return defaultProcessorViewMap\n-          .computeIfAbsent(serialViewKey, key -> ProduceProcessorManager.cloneNewProduceProcessor(\n-              acceptType, serialViewClass, defaultProcessorViewMap));\n-    }\n+          .computeIfAbsent(serialViewKey, key -> ProduceProcessorManager.cloneNewProduceProcessor(acceptType, serialViewClass, defaultProcessorViewMap));\n+  }\n     List<String> mimeTypes = MimeTypesUtils.getSortedAcceptableMimeTypes(acceptType.toLowerCase(Locale.US));\n     for (String mime : mimeTypes) {\n       Map<String, ProduceProcessor> processorMap = this.produceProcessorAcceptMap.get(mime);\n       if (null != processorMap) {\n-        return processorMap.computeIfAbsent(serialViewKey, key ->\n-            ProduceProcessorManager.cloneNewProduceProcessor(acceptType, serialViewClass, processorMap));\n+        return processorMap.computeIfAbsent(serialViewKey, key -> ProduceProcessorManager.cloneNewProduceProcessor(acceptType, serialViewClass, processorMap));\n       }\n     }\n \n@@ -342,4 +340,4 @@ public class RestOperationMeta {\n   public List<String> getProduces() {\n     return produces;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 14
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "154",
                    "column": "41",
                    "severity": "warning",
                    "message": "'&&' should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/186/RestOperationMeta.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler_three_grams/186/RestOperationMeta.java\nindex d559231605c..a1e4b330204 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/186/RestOperationMeta.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler_three_grams/186/RestOperationMeta.java\n@@ -151,8 +151,8 @@ public class RestOperationMeta {\n     Response response = operationMeta.getSwaggerOperation().getResponses().get(\"200\");\n     if (response != null) {\n       Model model = response.getResponseSchema();\n-      return model instanceof ModelImpl &&\n-          FileProperty.isType(((ModelImpl) model).getType(), ((ModelImpl) model).getFormat());\n+      return model instanceof ModelImpl\n+          && FileProperty.isType(((ModelImpl) model).getType(), ((ModelImpl) model).getFormat());\n     }\n \n     return false;\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random"
    ]
}
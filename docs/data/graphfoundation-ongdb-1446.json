{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1446",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "27",
                    "column": "64",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "27",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1446/LogPosition.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1446/LogPosition.java\nindex cf57eb26491..33ded233fbb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1446/LogPosition.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1446/LogPosition.java\n@@ -17,97 +17,98 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.transaction.log;\n \n import static org.neo4j.kernel.impl.transaction.log.entry.LogHeader.LOG_HEADER_SIZE;\n \n public class LogPosition implements Comparable<LogPosition>\n {\n-    public static final LogPosition UNSPECIFIED = new LogPosition( -1, -1 )\n-    {\n-        @Override\n-        public long getLogVersion()\n-        {\n-            throw new UnsupportedOperationException();\n-        }\n-\n-        @Override\n-        public long getByteOffset()\n-        {\n-            throw new UnsupportedOperationException();\n-        }\n-\n-        @Override\n-        public String toString()\n-        {\n-            return \"UNSPECIFIED\";\n-        }\n-    };\n-\n-    public static LogPosition start( long logVersion )\n-    {\n-        return new LogPosition( logVersion, LOG_HEADER_SIZE );\n-    }\n-\n-    private final long logVersion;\n-    private final long byteOffset;\n-\n-    public LogPosition( long logVersion, long byteOffset )\n-    {\n-        this.logVersion = logVersion;\n-        this.byteOffset = byteOffset;\n-    }\n-\n+  public static final LogPosition UNSPECIFIED = new LogPosition(-1, -1)\n+  {\n+    @Override\n     public long getLogVersion()\n     {\n-        return logVersion;\n+      throw new UnsupportedOperationException();\n     }\n \n+    @Override\n     public long getByteOffset()\n     {\n-        return byteOffset;\n+      throw new UnsupportedOperationException();\n     }\n \n     @Override\n     public String toString()\n     {\n-        return \"LogPosition{\" +\n-                \"logVersion=\" + logVersion +\n-                \", byteOffset=\" + byteOffset +\n-                '}';\n+      return \"UNSPECIFIED\";\n     }\n+  };\n \n-    @Override\n-    public boolean equals( Object o )\n-    {\n-        if ( this == o )\n-        {\n-            return true;\n-        }\n-        if ( o == null || getClass() != o.getClass() )\n-        {\n-            return false;\n-        }\n+  public static LogPosition start(long logVersion)\n+  {\n+    return new LogPosition(logVersion, LOG_HEADER_SIZE);\n+  }\n \n-        LogPosition that = (LogPosition) o;\n-        return byteOffset == that.byteOffset && logVersion == that.logVersion;\n-    }\n+  private final long logVersion;\n+  private final long byteOffset;\n \n-    @Override\n-    public int hashCode()\n+  public LogPosition(long logVersion, long byteOffset)\n+  {\n+    this.logVersion = logVersion;\n+    this.byteOffset = byteOffset;\n+  }\n+\n+  public long getLogVersion()\n+  {\n+    return logVersion;\n+  }\n+\n+  public long getByteOffset()\n+  {\n+    return byteOffset;\n+  }\n+\n+  @Override\n+  public String toString()\n+  {\n+    return \"LogPosition{\" +\n+        \"logVersion=\" + logVersion +\n+        \", byteOffset=\" + byteOffset +\n+        '}';\n+  }\n+\n+  @Override\n+  public boolean equals(Object o)\n+  {\n+    if (this == o)\n+    {\n+      return true;\n+    }\n+    if (o == null || getClass() != o.getClass())\n     {\n-        int result = (int) (logVersion ^ (logVersion >>> 32));\n-        result = 31 * result + (int) (byteOffset ^ (byteOffset >>> 32));\n-        return result;\n+      return false;\n     }\n \n-    @Override\n-    public int compareTo( LogPosition o )\n+    LogPosition that = (LogPosition) o;\n+    return byteOffset == that.byteOffset && logVersion == that.logVersion;\n+  }\n+\n+  @Override\n+  public int hashCode()\n+  {\n+    int result = (int) (logVersion ^ (logVersion >>> 32));\n+    result = 31 * result + (int) (byteOffset ^ (byteOffset >>> 32));\n+    return result;\n+  }\n+\n+  @Override\n+  public int compareTo(LogPosition o)\n+  {\n+    if (logVersion != o.logVersion)\n     {\n-        if ( logVersion != o.logVersion )\n-        {\n-            return Long.compare( logVersion, o.logVersion );\n-        }\n-        return Long.compare( byteOffset, o.byteOffset );\n+      return Long.compare(logVersion, o.logVersion);\n     }\n+    return Long.compare(byteOffset, o.byteOffset);\n+  }\n }\n",
            "diff_size": 117
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "97",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1446/LogPosition.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1446/LogPosition.java\nindex cf57eb26491..021fff53e02 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1446/LogPosition.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1446/LogPosition.java\n@@ -71,10 +71,7 @@ public class LogPosition implements Comparable<LogPosition>\n     @Override\n     public String toString()\n     {\n-        return \"LogPosition{\" +\n-                \"logVersion=\" + logVersion +\n-                \", byteOffset=\" + byteOffset +\n-                '}';\n+        return \"LogPosition{\" + \"logVersion=\" + logVersion + \", byteOffset=\" + byteOffset + '}';\n     }\n \n     @Override\n@@ -84,7 +81,8 @@ public class LogPosition implements Comparable<LogPosition>\n         {\n             return true;\n         }\n-        if ( o == null || getClass() != o.getClass() )\n+\n+if ( o == null || getClass() != o.getClass() )\n         {\n             return false;\n         }\n@@ -96,8 +94,8 @@ public class LogPosition implements Comparable<LogPosition>\n     @Override\n     public int hashCode()\n     {\n-        int result = (int) (logVersion ^ (logVersion >>> 32));\n-        result = 31 * result + (int) (byteOffset ^ (byteOffset >>> 32));\n+        int result = ( int) ( logVersion ^ ( logVersion >>> 32 ));\n+        result = 31 * result + ( int) ( byteOffset ^ ( byteOffset >>> 32 ));\n         return result;\n     }\n \n@@ -108,6 +106,7 @@ public class LogPosition implements Comparable<LogPosition>\n         {\n             return Long.compare( logVersion, o.logVersion );\n         }\n-        return Long.compare( byteOffset, o.byteOffset );\n+\n+return Long.compare( byteOffset, o.byteOffset );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 11
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
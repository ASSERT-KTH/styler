{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4105",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4105/State.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4105/State.java\nindex 8fd82cc7d77..bc9717a144b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4105/State.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4105/State.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering.core.consensus.log.segmented;\n \n /**\n@@ -24,20 +25,20 @@ package org.neo4j.causalclustering.core.consensus.log.segmented;\n  */\n public class State\n {\n-    Segments segments;\n-    Terms terms;\n+  Segments segments;\n+  Terms terms;\n \n-    long prevIndex = -1;\n-    long prevTerm = -1;\n-    long appendIndex = -1;\n+  long prevIndex = -1;\n+  long prevTerm = -1;\n+  long appendIndex = -1;\n \n-    @Override\n-    public String toString()\n-    {\n-        return \"State{\" +\n-               \"prevIndex=\" + prevIndex +\n-               \", prevTerm=\" + prevTerm +\n-               \", appendIndex=\" + appendIndex +\n-               '}';\n-    }\n+  @Override\n+  public String toString()\n+  {\n+    return \"State{\" +\n+        \"prevIndex=\" + prevIndex +\n+        \", prevTerm=\" + prevTerm +\n+        \", appendIndex=\" + appendIndex +\n+        '}';\n+  }\n }\n",
            "diff_size": 15
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4105/State.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4105/State.java\nindex 8fd82cc7d77..79a257a0979 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4105/State.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4105/State.java\n@@ -34,10 +34,6 @@ public class State\n     @Override\n     public String toString()\n     {\n-        return \"State{\" +\n-               \"prevIndex=\" + prevIndex +\n-               \", prevTerm=\" + prevTerm +\n-               \", appendIndex=\" + appendIndex +\n-               '}';\n+        return \"State{\" + \"prevIndex=\" + prevIndex + \", prevTerm=\" + prevTerm + \", appendIndex=\" + appendIndex + '}';\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "37",
                    "column": "51",
                    "severity": "error",
                    "message": "'+' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "37",
                    "column": "77",
                    "severity": "error",
                    "message": "'+' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4105/State.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/4105/State.java\nindex 8fd82cc7d77..d0e9f844727 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4105/State.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/4105/State.java\n@@ -22,22 +22,18 @@ package org.neo4j.causalclustering.core.consensus.log.segmented;\n /**\n  * Collects all the state that must be recovered after a restart.\n  */\n+\n public class State\n {\n     Segments segments;\n-    Terms terms;\n-\n-    long prevIndex = -1;\n-    long prevTerm = -1;\n-    long appendIndex = -1;\n \n+    Terms terms;\n+    long prevIndex = - 1;\n+    long prevTerm = - 1;\n+    long appendIndex = - 1;\n     @Override\n     public String toString()\n     {\n-        return \"State{\" +\n-               \"prevIndex=\" + prevIndex +\n-               \", prevTerm=\" + prevTerm +\n-               \", appendIndex=\" + appendIndex +\n-               '}';\n+        return \"State{\" + \"prevIndex=\" + prevIndex+ \", prevTerm=\" + prevTerm+ \", appendIndex=\" + appendIndex + '}';\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 16
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
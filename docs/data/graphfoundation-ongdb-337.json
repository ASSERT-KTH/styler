{
    "project_name": "graphfoundation-ongdb",
    "error_id": "337",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "51",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "54",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "74",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "102",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "64",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/337/ProcedureVisitor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/337/ProcedureVisitor.java\nindex 2f8e8a3366e..90adfd44240 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/337/ProcedureVisitor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/337/ProcedureVisitor.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.tooling.procedure.visitors;\n \n import java.util.List;\n@@ -37,75 +38,75 @@ import org.neo4j.tooling.procedure.compilerutils.TypeMirrorUtils;\n import org.neo4j.tooling.procedure.messages.CompilationMessage;\n import org.neo4j.tooling.procedure.messages.ReturnTypeError;\n \n-public class ProcedureVisitor extends SimpleElementVisitor8<Stream<CompilationMessage>,Void>\n+public class ProcedureVisitor extends SimpleElementVisitor8<Stream<CompilationMessage>, Void>\n {\n \n-    private final Types typeUtils;\n-    private final Elements elementUtils;\n-    private final ElementVisitor<Stream<CompilationMessage>,Void> classVisitor;\n-    private final TypeVisitor<Stream<CompilationMessage>,Void> recordVisitor;\n-    private final ElementVisitor<Stream<CompilationMessage>,Void> parameterVisitor;\n-    private final ElementVisitor<Stream<CompilationMessage>,Void> performsWriteVisitor;\n+  private final Types typeUtils;\n+  private final Elements elementUtils;\n+  private final ElementVisitor<Stream<CompilationMessage>, Void> classVisitor;\n+  private final TypeVisitor<Stream<CompilationMessage>, Void> recordVisitor;\n+  private final ElementVisitor<Stream<CompilationMessage>, Void> parameterVisitor;\n+  private final ElementVisitor<Stream<CompilationMessage>, Void> performsWriteVisitor;\n \n-    public ProcedureVisitor( Types typeUtils, Elements elementUtils, boolean ignoresWarnings )\n-    {\n-        TypeMirrorUtils typeMirrors = new TypeMirrorUtils( typeUtils, elementUtils );\n-\n-        this.typeUtils = typeUtils;\n-        this.elementUtils = elementUtils;\n-        this.classVisitor = new ExtensionClassVisitor( typeUtils, elementUtils, ignoresWarnings );\n-        this.recordVisitor = new RecordTypeVisitor( typeUtils, typeMirrors );\n-        this.parameterVisitor = new ParameterVisitor( new ParameterTypeVisitor( typeUtils, typeMirrors ) );\n-        this.performsWriteVisitor = new PerformsWriteMethodVisitor();\n-    }\n+  public ProcedureVisitor(Types typeUtils, Elements elementUtils, boolean ignoresWarnings)\n+  {\n+    TypeMirrorUtils typeMirrors = new TypeMirrorUtils(typeUtils, elementUtils);\n \n-    /**\n-     * Validates method parameters and return type\n-     */\n-    @Override\n-    public Stream<CompilationMessage> visitExecutable( ExecutableElement executableElement, Void ignored )\n-    {\n-        return Stream.of( classVisitor.visit( executableElement.getEnclosingElement() ),\n-                validateParameters( executableElement.getParameters() ),\n-                validateReturnType( executableElement ), validatePerformsWriteUsage( executableElement ) )\n-                .flatMap( Function.identity() );\n-    }\n+    this.typeUtils = typeUtils;\n+    this.elementUtils = elementUtils;\n+    this.classVisitor = new ExtensionClassVisitor(typeUtils, elementUtils, ignoresWarnings);\n+    this.recordVisitor = new RecordTypeVisitor(typeUtils, typeMirrors);\n+    this.parameterVisitor = new ParameterVisitor(new ParameterTypeVisitor(typeUtils, typeMirrors));\n+    this.performsWriteVisitor = new PerformsWriteMethodVisitor();\n+  }\n \n-    private Stream<CompilationMessage> validateParameters( List<? extends VariableElement> parameters )\n-    {\n-        return parameters.stream().flatMap( parameterVisitor::visit );\n-    }\n+  /**\n+   * Validates method parameters and return type\n+   */\n+  @Override\n+  public Stream<CompilationMessage> visitExecutable(ExecutableElement executableElement, Void ignored)\n+  {\n+    return Stream.of(classVisitor.visit(executableElement.getEnclosingElement()),\n+        validateParameters(executableElement.getParameters()),\n+        validateReturnType(executableElement), validatePerformsWriteUsage(executableElement))\n+        .flatMap(Function.identity());\n+  }\n \n-    private Stream<CompilationMessage> validateReturnType( ExecutableElement method )\n-    {\n-        String streamClassName = Stream.class.getCanonicalName();\n+  private Stream<CompilationMessage> validateParameters(List<? extends VariableElement> parameters)\n+  {\n+    return parameters.stream().flatMap(parameterVisitor::visit);\n+  }\n \n-        TypeMirror streamType = typeUtils.erasure( elementUtils.getTypeElement( streamClassName ).asType() );\n-        TypeMirror returnType = method.getReturnType();\n-        TypeMirror erasedReturnType = typeUtils.erasure( returnType );\n+  private Stream<CompilationMessage> validateReturnType(ExecutableElement method)\n+  {\n+    String streamClassName = Stream.class.getCanonicalName();\n \n-        TypeMirror voidType = typeUtils.getNoType( TypeKind.VOID );\n-        if ( typeUtils.isSameType( returnType, voidType ) )\n-        {\n-            return Stream.empty();\n-        }\n+    TypeMirror streamType = typeUtils.erasure(elementUtils.getTypeElement(streamClassName).asType());\n+    TypeMirror returnType = method.getReturnType();\n+    TypeMirror erasedReturnType = typeUtils.erasure(returnType);\n \n-        if ( !typeUtils.isSubtype( erasedReturnType, streamType ) )\n-        {\n-            return Stream.of( new ReturnTypeError( method, \"Return type of %s#%s must be %s\",\n-                    method.getEnclosingElement().getSimpleName(), method.getSimpleName(), streamClassName ) );\n-        }\n+    TypeMirror voidType = typeUtils.getNoType(TypeKind.VOID);\n+    if (typeUtils.isSameType(returnType, voidType))\n+    {\n+      return Stream.empty();\n+    }\n \n-        return recordVisitor.visit( returnType );\n+    if (!typeUtils.isSubtype(erasedReturnType, streamType))\n+    {\n+      return Stream.of(new ReturnTypeError(method, \"Return type of %s#%s must be %s\",\n+          method.getEnclosingElement().getSimpleName(), method.getSimpleName(), streamClassName));\n     }\n \n-    private Stream<CompilationMessage> validatePerformsWriteUsage( ExecutableElement executableElement )\n+    return recordVisitor.visit(returnType);\n+  }\n+\n+  private Stream<CompilationMessage> validatePerformsWriteUsage(ExecutableElement executableElement)\n+  {\n+    if (executableElement.getAnnotation(PerformsWrites.class) != null)\n     {\n-        if ( executableElement.getAnnotation( PerformsWrites.class ) != null )\n-        {\n-            return performsWriteVisitor.visit( executableElement );\n-        }\n-        return Stream.empty();\n+      return performsWriteVisitor.visit(executableElement);\n     }\n+    return Stream.empty();\n+  }\n \n }\n",
            "diff_size": 75
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "66",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 268).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/337/ProcedureVisitor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/337/ProcedureVisitor.java\nindex 2f8e8a3366e..d8ffea9e1a3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/337/ProcedureVisitor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/337/ProcedureVisitor.java\n@@ -39,7 +39,6 @@ import org.neo4j.tooling.procedure.messages.ReturnTypeError;\n \n public class ProcedureVisitor extends SimpleElementVisitor8<Stream<CompilationMessage>,Void>\n {\n-\n     private final Types typeUtils;\n     private final Elements elementUtils;\n     private final ElementVisitor<Stream<CompilationMessage>,Void> classVisitor;\n@@ -50,8 +49,7 @@ public class ProcedureVisitor extends SimpleElementVisitor8<Stream<CompilationMe\n     public ProcedureVisitor( Types typeUtils, Elements elementUtils, boolean ignoresWarnings )\n     {\n         TypeMirrorUtils typeMirrors = new TypeMirrorUtils( typeUtils, elementUtils );\n-\n-        this.typeUtils = typeUtils;\n+this.typeUtils = typeUtils;\n         this.elementUtils = elementUtils;\n         this.classVisitor = new ExtensionClassVisitor( typeUtils, elementUtils, ignoresWarnings );\n         this.recordVisitor = new RecordTypeVisitor( typeUtils, typeMirrors );\n@@ -65,10 +63,7 @@ public class ProcedureVisitor extends SimpleElementVisitor8<Stream<CompilationMe\n     @Override\n     public Stream<CompilationMessage> visitExecutable( ExecutableElement executableElement, Void ignored )\n     {\n-        return Stream.of( classVisitor.visit( executableElement.getEnclosingElement() ),\n-                validateParameters( executableElement.getParameters() ),\n-                validateReturnType( executableElement ), validatePerformsWriteUsage( executableElement ) )\n-                .flatMap( Function.identity() );\n+        return Stream.of( classVisitor.visit( executableElement.getEnclosingElement() ), validateParameters( executableElement.getParameters() ), validateReturnType( executableElement ), validatePerformsWriteUsage( executableElement ) ).flatMap( Function.identity() );\n     }\n \n     private Stream<CompilationMessage> validateParameters( List<? extends VariableElement> parameters )\n@@ -79,12 +74,10 @@ public class ProcedureVisitor extends SimpleElementVisitor8<Stream<CompilationMe\n     private Stream<CompilationMessage> validateReturnType( ExecutableElement method )\n     {\n         String streamClassName = Stream.class.getCanonicalName();\n-\n-        TypeMirror streamType = typeUtils.erasure( elementUtils.getTypeElement( streamClassName ).asType() );\n+TypeMirror streamType = typeUtils.erasure( elementUtils.getTypeElement( streamClassName ).asType() );\n         TypeMirror returnType = method.getReturnType();\n         TypeMirror erasedReturnType = typeUtils.erasure( returnType );\n-\n-        TypeMirror voidType = typeUtils.getNoType( TypeKind.VOID );\n+TypeMirror voidType = typeUtils.getNoType( TypeKind.VOID );\n         if ( typeUtils.isSameType( returnType, voidType ) )\n         {\n             return Stream.empty();\n@@ -105,7 +98,7 @@ public class ProcedureVisitor extends SimpleElementVisitor8<Stream<CompilationMe\n         {\n             return performsWriteVisitor.visit( executableElement );\n         }\n-        return Stream.empty();\n-    }\n \n-}\n+return Stream.empty();\n+    }\n+    }\n\\ No newline at end of file\n",
            "diff_size": 16
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
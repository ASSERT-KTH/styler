{
    "project_name": "neo4j-neo4j",
    "error_id": "1175",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "42",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "17",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "158",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "158",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "204",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "204",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "208",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "208",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "214",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "214",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "216",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "216",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "220",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "220",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "224",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "224",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1175/RelationshipRecord.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1175/RelationshipRecord.java\nindex 49cefd4cd1b..3bf479a6a2a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1175/RelationshipRecord.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1175/RelationshipRecord.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.store.record;\n \n import java.util.Objects;\n@@ -27,7 +28,7 @@ import static org.neo4j.memory.HeapEstimator.shallowSizeOfInstance;\n \n public class RelationshipRecord extends PrimitiveRecord\n {\n-    public static final long SHALLOW_SIZE = shallowSizeOfInstance( RelationshipRecord.class );\n+    public static final long SHALLOW_SIZE = shallowSizeOfInstance(RelationshipRecord.class);\n     private long firstNode;\n     private long secondNode;\n     private int type;\n@@ -38,14 +39,14 @@ public class RelationshipRecord extends PrimitiveRecord\n     private boolean firstInFirstChain;\n     private boolean firstInSecondChain;\n \n-    public RelationshipRecord( long id )\n+    public RelationshipRecord(long id)\n     {\n-        super( id );\n+        super(id);\n     }\n \n-    public RelationshipRecord( RelationshipRecord other )\n+    public RelationshipRecord(RelationshipRecord other)\n     {\n-        super( other );\n+        super(other);\n         this.firstNode = other.firstNode;\n         this.secondNode = other.secondNode;\n         this.type = other.type;\n@@ -57,11 +58,11 @@ public class RelationshipRecord extends PrimitiveRecord\n         this.firstInSecondChain = other.firstInSecondChain;\n     }\n \n-    public RelationshipRecord initialize( boolean inUse, long nextProp, long firstNode, long secondNode,\n-            int type, long firstPrevRel, long firstNextRel, long secondPrevRel, long secondNextRel,\n-            boolean firstInFirstChain, boolean firstInSecondChain )\n+    public RelationshipRecord initialize(boolean inUse, long nextProp, long firstNode, long secondNode,\n+                                         int type, long firstPrevRel, long firstNextRel, long secondPrevRel, long secondNextRel,\n+                                         boolean firstInFirstChain, boolean firstInSecondChain)\n     {\n-        super.initialize( inUse, nextProp );\n+        super.initialize(inUse, nextProp);\n         this.firstNode = firstNode;\n         this.secondNode = secondNode;\n         this.type = type;\n@@ -77,12 +78,12 @@ public class RelationshipRecord extends PrimitiveRecord\n     @Override\n     public void clear()\n     {\n-        initialize( false, NO_NEXT_PROPERTY.intValue(), -1, -1, -1,\n-                1, NO_NEXT_RELATIONSHIP.intValue(),\n-                1, NO_NEXT_RELATIONSHIP.intValue(), true, true );\n+        initialize(false, NO_NEXT_PROPERTY.intValue(), -1, -1, -1,\n+          1, NO_NEXT_RELATIONSHIP.intValue(),\n+          1, NO_NEXT_RELATIONSHIP.intValue(), true, true);\n     }\n \n-    public void setLinks( long firstNode, long secondNode, int type )\n+    public void setLinks(long firstNode, long secondNode, int type)\n     {\n         this.firstNode = firstNode;\n         this.secondNode = secondNode;\n@@ -94,7 +95,7 @@ public class RelationshipRecord extends PrimitiveRecord\n         return firstNode;\n     }\n \n-    public void setFirstNode( long firstNode )\n+    public void setFirstNode(long firstNode)\n     {\n         this.firstNode = firstNode;\n     }\n@@ -104,7 +105,7 @@ public class RelationshipRecord extends PrimitiveRecord\n         return secondNode;\n     }\n \n-    public void setSecondNode( long secondNode )\n+    public void setSecondNode(long secondNode)\n     {\n         this.secondNode = secondNode;\n     }\n@@ -114,7 +115,7 @@ public class RelationshipRecord extends PrimitiveRecord\n         return type;\n     }\n \n-    public void setType( int type )\n+    public void setType(int type)\n     {\n         this.type = type;\n     }\n@@ -124,7 +125,7 @@ public class RelationshipRecord extends PrimitiveRecord\n         return firstPrevRel;\n     }\n \n-    public void setFirstPrevRel( long firstPrevRel )\n+    public void setFirstPrevRel(long firstPrevRel)\n     {\n         this.firstPrevRel = firstPrevRel;\n     }\n@@ -134,7 +135,7 @@ public class RelationshipRecord extends PrimitiveRecord\n         return firstNextRel;\n     }\n \n-    public void setFirstNextRel( long firstNextRel )\n+    public void setFirstNextRel(long firstNextRel)\n     {\n         this.firstNextRel = firstNextRel;\n     }\n@@ -144,7 +145,7 @@ public class RelationshipRecord extends PrimitiveRecord\n         return secondPrevRel;\n     }\n \n-    public void setSecondPrevRel( long secondPrevRel )\n+    public void setSecondPrevRel(long secondPrevRel)\n     {\n         this.secondPrevRel = secondPrevRel;\n     }\n@@ -154,7 +155,7 @@ public class RelationshipRecord extends PrimitiveRecord\n         return secondNextRel;\n     }\n \n-    public void setSecondNextRel( long secondNextRel )\n+    public void setSecondNextRel(long secondNextRel)\n     {\n         this.secondNextRel = secondNextRel;\n     }\n@@ -164,7 +165,7 @@ public class RelationshipRecord extends PrimitiveRecord\n         return firstInFirstChain;\n     }\n \n-    public void setFirstInFirstChain( boolean firstInFirstChain )\n+    public void setFirstInFirstChain(boolean firstInFirstChain)\n     {\n         this.firstInFirstChain = firstInFirstChain;\n     }\n@@ -174,7 +175,7 @@ public class RelationshipRecord extends PrimitiveRecord\n         return firstInSecondChain;\n     }\n \n-    public void setFirstInSecondChain( boolean firstInSecondChain )\n+    public void setFirstInSecondChain(boolean firstInSecondChain)\n     {\n         this.firstInSecondChain = firstInSecondChain;\n     }\n@@ -183,58 +184,58 @@ public class RelationshipRecord extends PrimitiveRecord\n     public String toString()\n     {\n         return \"Relationship[\" + getId() +\n-               \",used=\" + inUse() +\n-               \",source=\" + firstNode +\n-               \",target=\" + secondNode +\n-               \",type=\" + type +\n-               (firstInFirstChain ? \",sCount=\" : \",sPrev=\") + firstPrevRel +\n-               \",sNext=\" + firstNextRel +\n-               (firstInSecondChain ? \",tCount=\" : \",tPrev=\") + secondPrevRel +\n-               \",tNext=\" + secondNextRel +\n-               \",prop=\" + getNextProp() +\n-               secondaryUnitToString() +\n-               (firstInFirstChain ? \", sFirst\" : \",!sFirst\") +\n-               (firstInSecondChain ? \", tFirst\" : \",!tFirst\") + \"]\";\n+          \",used=\" + inUse() +\n+          \",source=\" + firstNode +\n+          \",target=\" + secondNode +\n+          \",type=\" + type +\n+          (firstInFirstChain ? \",sCount=\" : \",sPrev=\") + firstPrevRel +\n+          \",sNext=\" + firstNextRel +\n+          (firstInSecondChain ? \",tCount=\" : \",tPrev=\") + secondPrevRel +\n+          \",tNext=\" + secondNextRel +\n+          \",prop=\" + getNextProp() +\n+          secondaryUnitToString() +\n+          (firstInFirstChain ? \", sFirst\" : \",!sFirst\") +\n+          (firstInSecondChain ? \", tFirst\" : \",!tFirst\") + \"]\";\n     }\n \n     @Override\n     public RelationshipRecord copy()\n     {\n-        return new RelationshipRecord( this );\n+        return new RelationshipRecord(this);\n     }\n \n     @Override\n-    public void setIdTo( PropertyRecord property )\n+    public void setIdTo(PropertyRecord property)\n     {\n-        property.setRelId( getId() );\n+        property.setRelId(getId());\n     }\n \n     @Override\n-    public boolean equals( Object o )\n+    public boolean equals(Object o)\n     {\n-        if ( this == o )\n+        if (this == o)\n         {\n             return true;\n         }\n-        if ( o == null || getClass() != o.getClass() )\n+        if (o == null || getClass() != o.getClass())\n         {\n             return false;\n         }\n-        if ( !super.equals( o ) )\n+        if (!super.equals(o))\n         {\n             return false;\n         }\n         RelationshipRecord that = (RelationshipRecord) o;\n         return firstNode == that.firstNode && secondNode == that.secondNode && type == that.type &&\n-                firstPrevRel == that.firstPrevRel && firstNextRel == that.firstNextRel &&\n-                secondPrevRel == that.secondPrevRel && secondNextRel == that.secondNextRel &&\n-                firstInFirstChain == that.firstInFirstChain && firstInSecondChain == that.firstInSecondChain;\n+          firstPrevRel == that.firstPrevRel && firstNextRel == that.firstNextRel &&\n+          secondPrevRel == that.secondPrevRel && secondNextRel == that.secondNextRel &&\n+          firstInFirstChain == that.firstInFirstChain && firstInSecondChain == that.firstInSecondChain;\n     }\n \n     @Override\n     public int hashCode()\n     {\n-        return Objects.hash( super.hashCode(), firstNode, secondNode, type, firstPrevRel, firstNextRel, secondPrevRel,\n-                secondNextRel, firstInFirstChain, firstInSecondChain );\n+        return Objects.hash(super.hashCode(), firstNode, secondNode, type, firstPrevRel, firstNextRel, secondPrevRel,\n+          secondNextRel, firstInFirstChain, firstInSecondChain);\n     }\n }\n",
            "diff_size": 47
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1175/RelationshipRecord.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/1175/RelationshipRecord.java\nindex 49cefd4cd1b..5b59803f43e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1175/RelationshipRecord.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/1175/RelationshipRecord.java\n@@ -77,8 +77,7 @@ public class RelationshipRecord extends PrimitiveRecord\n     @Override\n     public void clear()\n     {\n-        initialize( false, NO_NEXT_PROPERTY.intValue(), -1, -1, -1,\n-                1, NO_NEXT_RELATIONSHIP.intValue(),\n+        initialize( false, NO_NEXT_PROPERTY.intValue(), -1, -1, -1, 1, NO_NEXT_RELATIONSHIP.intValue(),\n                 1, NO_NEXT_RELATIONSHIP.intValue(), true, true );\n     }\n \n@@ -237,4 +236,4 @@ public class RelationshipRecord extends PrimitiveRecord\n         return Objects.hash( super.hashCode(), firstNode, secondNode, type, firstPrevRel, firstNextRel, secondPrevRel,\n                 secondNextRel, firstInFirstChain, firstInSecondChain );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
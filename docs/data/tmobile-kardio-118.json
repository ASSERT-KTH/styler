{
    "project_name": "tmobile-kardio",
    "error_id": "118",
    "information": {
        "errors": [
            {
                "line": "41",
                "column": "1",
                "severity": "error",
                "message": "File contains tab characters (this is the first instance).",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
            }
        ]
    },
    "source_code": "public class CounterMetricTypeEntity implements Serializable{\n    \n\tprivate static final long serialVersionUID = 1L;\n\n\t@Id\n\t@Column(name = \"counter_metric_type_id\")",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "43",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/tmobile-kardio/errored/1/118/CounterMetricTypeEntity.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/tmobile-kardio/styler/118/CounterMetricTypeEntity.java\nindex cc3745d272e..5f3da9e4295 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/tmobile-kardio/errored/1/118/CounterMetricTypeEntity.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/tmobile-kardio/styler/118/CounterMetricTypeEntity.java\n@@ -37,8 +37,8 @@ import javax.persistence.Table;\n @Entity\n @Table(name=\"counter_metric_type\")\n public class CounterMetricTypeEntity implements Serializable{\n-    \n-\tprivate static final long serialVersionUID = 1L;\n+\n+private static final long serialVersionUID = 1L;\n \n \t@Id\n \t@Column(name = \"counter_metric_type_id\")\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/tmobile-kardio/errored/1/118/CounterMetricTypeEntity.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/tmobile-kardio/intellij/118/CounterMetricTypeEntity.java\nindex cc3745d272e..323a5c958d8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/tmobile-kardio/errored/1/118/CounterMetricTypeEntity.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/tmobile-kardio/intellij/118/CounterMetricTypeEntity.java\n@@ -1,12 +1,12 @@\n /*******************************************************************************\n  * Copyright 2019 T-Mobile USA, Inc.\n- * \n+ *\n  * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n  * use this file except in compliance with the License.  You may obtain a copy\n  * of the License at\n- * \n+ *\n  *   http://www.apache.org/licenses/LICENSE-2.0\n- * \n+ *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the\n@@ -17,6 +17,7 @@\n  * its contributors may be used to endorse or promote products derived from this\n  * software without specific prior written permission.\n  ******************************************************************************/\n+\n package com.tmobile.kardio.surveiller.db.entity;\n \n import java.io.Serializable;\n@@ -35,97 +36,97 @@ import javax.persistence.Table;\n  * Entity class for counter_metric_type\n  */\n @Entity\n-@Table(name=\"counter_metric_type\")\n-public class CounterMetricTypeEntity implements Serializable{\n-    \n-\tprivate static final long serialVersionUID = 1L;\n-\n-\t@Id\n-\t@Column(name = \"counter_metric_type_id\")\n-\t@GeneratedValue(strategy=GenerationType.IDENTITY)\n-\tprivate int metricTypeId;\n-\t\n-\t@Column(name = \"counter_metric_type\")\n-\tprivate String counterMetricType;\n-\t\t\n-\n-\t@Column(name = \"counter_metric_type_desc\")\n-\tprivate String counterMetricTypeDesc;\n-\t\n-\t@Column(name = \"counter_metric_type_class_name\")\n-\tprivate String counterMetricTypeClassName;\n-\t\n-\t@OneToMany(mappedBy = \"countMetricType\", fetch = FetchType.LAZY)\n-\tprivate Set<EnvCounterEntity> envCounter;\n-\t\n-\t/**\n-\t * @return the envCounter\n-\t */\n-\tpublic Set<EnvCounterEntity> getEnvCounter() {\n-\t\treturn envCounter;\n-\t}\n-\n-\t/**\n-\t * @param envCounter the envCounter to set\n-\t */\n-\tpublic void setEnvCounter(Set<EnvCounterEntity> envCounter) {\n-\t\tthis.envCounter = envCounter;\n-\t}\n-\n-\t/**\n-\t * @return the metricTypeId\n-\t */\n-\tpublic int getMetricTypeId() {\n-\t\treturn metricTypeId;\n-\t}\n-\n-\t/**\n-\t * @param metricId the metricTypeId to set\n-\t */\n-\tpublic void setMetricTypeId(int metricTypeId) {\n-\t\tthis.metricTypeId = metricTypeId;\n-\t}\n-\n-\t/**\n-\t * @return the counterMetricType\n-\t */\n-\tpublic String getCounterMetricType() {\n-\t\treturn counterMetricType;\n-\t}\n-\n-\t/**\n-\t * @param counterMetricType the counterMetricType to set\n-\t */\n-\tpublic void setCounterMetricType(String counterMetricType) {\n-\t\tthis.counterMetricType = counterMetricType;\n-\t}\n-\n-\t/**\n-\t * @return the counterMetricTypeDesc\n-\t */\n-\tpublic String getCounterMetricTypeDesc() {\n-\t\treturn counterMetricTypeDesc;\n-\t}\n-\n-\t/**\n-\t * @param counterMetricTypeDesc the counterMetricTypeDesc to set\n-\t */\n-\tpublic void setCounterMetricTypeDesc(String counterMetricTypeDesc) {\n-\t\tthis.counterMetricTypeDesc = counterMetricTypeDesc;\n-\t}\n-\n-\t/**\n-\t * @return the counterMetricTypeClassName\n-\t */\n-\tpublic String getCounterMetricTypeClassName() {\n-\t\treturn counterMetricTypeClassName;\n-\t}\n-\n-\t/**\n-\t * @param counterMetricTypeClassName the counterMetricTypeClassName to set\n-\t */\n-\tpublic void setCounterMetricTypeClassName(String counterMetricTypeClassName) {\n-\t\tthis.counterMetricTypeClassName = counterMetricTypeClassName;\n-\t}\n-\t\n+@Table(name = \"counter_metric_type\")\n+public class CounterMetricTypeEntity implements Serializable {\n+\n+    private static final long serialVersionUID = 1L;\n+\n+    @Id\n+    @Column(name = \"counter_metric_type_id\")\n+    @GeneratedValue(strategy = GenerationType.IDENTITY)\n+    private int metricTypeId;\n+\n+    @Column(name = \"counter_metric_type\")\n+    private String counterMetricType;\n+\n+\n+    @Column(name = \"counter_metric_type_desc\")\n+    private String counterMetricTypeDesc;\n+\n+    @Column(name = \"counter_metric_type_class_name\")\n+    private String counterMetricTypeClassName;\n+\n+    @OneToMany(mappedBy = \"countMetricType\", fetch = FetchType.LAZY)\n+    private Set<EnvCounterEntity> envCounter;\n+\n+    /**\n+     * @return the envCounter\n+     */\n+    public Set<EnvCounterEntity> getEnvCounter() {\n+        return envCounter;\n+    }\n+\n+    /**\n+     * @param envCounter the envCounter to set\n+     */\n+    public void setEnvCounter(Set<EnvCounterEntity> envCounter) {\n+        this.envCounter = envCounter;\n+    }\n+\n+    /**\n+     * @return the metricTypeId\n+     */\n+    public int getMetricTypeId() {\n+        return metricTypeId;\n+    }\n+\n+    /**\n+     * @param metricId the metricTypeId to set\n+     */\n+    public void setMetricTypeId(int metricTypeId) {\n+        this.metricTypeId = metricTypeId;\n+    }\n+\n+    /**\n+     * @return the counterMetricType\n+     */\n+    public String getCounterMetricType() {\n+        return counterMetricType;\n+    }\n+\n+    /**\n+     * @param counterMetricType the counterMetricType to set\n+     */\n+    public void setCounterMetricType(String counterMetricType) {\n+        this.counterMetricType = counterMetricType;\n+    }\n+\n+    /**\n+     * @return the counterMetricTypeDesc\n+     */\n+    public String getCounterMetricTypeDesc() {\n+        return counterMetricTypeDesc;\n+    }\n+\n+    /**\n+     * @param counterMetricTypeDesc the counterMetricTypeDesc to set\n+     */\n+    public void setCounterMetricTypeDesc(String counterMetricTypeDesc) {\n+        this.counterMetricTypeDesc = counterMetricTypeDesc;\n+    }\n+\n+    /**\n+     * @return the counterMetricTypeClassName\n+     */\n+    public String getCounterMetricTypeClassName() {\n+        return counterMetricTypeClassName;\n+    }\n+\n+    /**\n+     * @param counterMetricTypeClassName the counterMetricTypeClassName to set\n+     */\n+    public void setCounterMetricTypeClassName(String counterMetricTypeClassName) {\n+        this.counterMetricTypeClassName = counterMetricTypeClassName;\n+    }\n+\n }\n",
            "diff_size": 97
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "44",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/tmobile-kardio/errored/1/118/CounterMetricTypeEntity.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/tmobile-kardio/naturalize/118/CounterMetricTypeEntity.java\nindex cc3745d272e..fc6bc0517c5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/tmobile-kardio/errored/1/118/CounterMetricTypeEntity.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/tmobile-kardio/naturalize/118/CounterMetricTypeEntity.java\n@@ -36,96 +36,95 @@ import javax.persistence.Table;\n  */\n @Entity\n @Table(name=\"counter_metric_type\")\n-public class CounterMetricTypeEntity implements Serializable{\n-    \n-\tprivate static final long serialVersionUID = 1L;\n+public class CounterMetricTypeEntity implements Serializable {\n \n-\t@Id\n+    private static final long serialVersionUID = 1L;\n+\n+@Id\n \t@Column(name = \"counter_metric_type_id\")\n \t@GeneratedValue(strategy=GenerationType.IDENTITY)\n \tprivate int metricTypeId;\n-\t\n-\t@Column(name = \"counter_metric_type\")\n-\tprivate String counterMetricType;\n-\t\t\n \n-\t@Column(name = \"counter_metric_type_desc\")\n-\tprivate String counterMetricTypeDesc;\n-\t\n-\t@Column(name = \"counter_metric_type_class_name\")\n-\tprivate String counterMetricTypeClassName;\n-\t\n-\t@OneToMany(mappedBy = \"countMetricType\", fetch = FetchType.LAZY)\n-\tprivate Set<EnvCounterEntity> envCounter;\n-\t\n-\t/**\n+@Column(name = \"counter_metric_type\")\n+private String counterMetricType;\n+\n+@Column(name = \"counter_metric_type_desc\")\n+private String counterMetricTypeDesc;\n+\n+@Column(name = \"counter_metric_type_class_name\")\n+private String counterMetricTypeClassName;\n+\n+@OneToMany(mappedBy = \"countMetricType\", fetch = FetchType.LAZY)\n+private Set<EnvCounterEntity> envCounter;\n+\n+/**\n \t * @return the envCounter\n \t */\n-\tpublic Set<EnvCounterEntity> getEnvCounter() {\n-\t\treturn envCounter;\n-\t}\n+public Set<EnvCounterEntity> getEnvCounter() {\n+    return envCounter;\n+    }\n \n \t/**\n \t * @param envCounter the envCounter to set\n \t */\n \tpublic void setEnvCounter(Set<EnvCounterEntity> envCounter) {\n-\t\tthis.envCounter = envCounter;\n-\t}\n+    this.envCounter = envCounter;\n+    }\n \n \t/**\n \t * @return the metricTypeId\n \t */\n \tpublic int getMetricTypeId() {\n-\t\treturn metricTypeId;\n-\t}\n+    return metricTypeId;\n+    }\n \n \t/**\n \t * @param metricId the metricTypeId to set\n \t */\n \tpublic void setMetricTypeId(int metricTypeId) {\n-\t\tthis.metricTypeId = metricTypeId;\n-\t}\n+    this.metricTypeId = metricTypeId;\n+    }\n \n \t/**\n \t * @return the counterMetricType\n \t */\n \tpublic String getCounterMetricType() {\n-\t\treturn counterMetricType;\n-\t}\n+    return counterMetricType;\n+    }\n \n \t/**\n \t * @param counterMetricType the counterMetricType to set\n \t */\n \tpublic void setCounterMetricType(String counterMetricType) {\n-\t\tthis.counterMetricType = counterMetricType;\n-\t}\n+    this.counterMetricType = counterMetricType;\n+    }\n \n \t/**\n \t * @return the counterMetricTypeDesc\n \t */\n \tpublic String getCounterMetricTypeDesc() {\n-\t\treturn counterMetricTypeDesc;\n-\t}\n+    return counterMetricTypeDesc;\n+    }\n \n \t/**\n \t * @param counterMetricTypeDesc the counterMetricTypeDesc to set\n \t */\n \tpublic void setCounterMetricTypeDesc(String counterMetricTypeDesc) {\n-\t\tthis.counterMetricTypeDesc = counterMetricTypeDesc;\n-\t}\n+    this.counterMetricTypeDesc = counterMetricTypeDesc;\n+    }\n \n \t/**\n \t * @return the counterMetricTypeClassName\n \t */\n \tpublic String getCounterMetricTypeClassName() {\n-\t\treturn counterMetricTypeClassName;\n-\t}\n+    return counterMetricTypeClassName;\n+    }\n \n \t/**\n \t * @param counterMetricTypeClassName the counterMetricTypeClassName to set\n \t */\n \tpublic void setCounterMetricTypeClassName(String counterMetricTypeClassName) {\n-\t\tthis.counterMetricTypeClassName = counterMetricTypeClassName;\n-\t}\n+    this.counterMetricTypeClassName = counterMetricTypeClassName;\n+    }\n \t\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 45
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/tmobile-kardio/errored/1/118/CounterMetricTypeEntity.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/tmobile-kardio/codebuff/118/CounterMetricTypeEntity.java\nindex cc3745d272e..21dc523d5b0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/tmobile-kardio/errored/1/118/CounterMetricTypeEntity.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/tmobile-kardio/codebuff/118/CounterMetricTypeEntity.java\n@@ -21,7 +21,6 @@ package com.tmobile.kardio.surveiller.db.entity;\n \n import java.io.Serializable;\n import java.util.Set;\n-\n import javax.persistence.Column;\n import javax.persistence.Entity;\n import javax.persistence.FetchType;\n@@ -34,98 +33,119 @@ import javax.persistence.Table;\n /**\n  * Entity class for counter_metric_type\n  */\n+\n+\n @Entity\n-@Table(name=\"counter_metric_type\")\n-public class CounterMetricTypeEntity implements Serializable{\n+@Table(name = \"counter_metric_type\")\n+public class CounterMetricTypeEntity implements Serializable {\n+\n+    private static final long serialVersionUID = 1L;\n+\n+    @Id\n+    @Column(name = \"counter_metric_type_id\")\n+    @GeneratedValue(strategy = GenerationType.IDENTITY)\n+    private int metricTypeId;\n+\n+    @Column(name = \"counter_metric_type\")\n+    private String counterMetricType;\n+\n+    @Column(name = \"counter_metric_type_desc\")\n+    private String counterMetricTypeDesc;\n+\n+    @Column(name = \"counter_metric_type_class_name\")\n+    private String counterMetricTypeClassName;\n+\n+    @OneToMany(mappedBy = \"countMetricType\", fetch = FetchType.LAZY)\n+    private Set<EnvCounterEntity> envCounter;\n     \n-\tprivate static final long serialVersionUID = 1L;\n-\n-\t@Id\n-\t@Column(name = \"counter_metric_type_id\")\n-\t@GeneratedValue(strategy=GenerationType.IDENTITY)\n-\tprivate int metricTypeId;\n-\t\n-\t@Column(name = \"counter_metric_type\")\n-\tprivate String counterMetricType;\n-\t\t\n-\n-\t@Column(name = \"counter_metric_type_desc\")\n-\tprivate String counterMetricTypeDesc;\n-\t\n-\t@Column(name = \"counter_metric_type_class_name\")\n-\tprivate String counterMetricTypeClassName;\n-\t\n-\t@OneToMany(mappedBy = \"countMetricType\", fetch = FetchType.LAZY)\n-\tprivate Set<EnvCounterEntity> envCounter;\n-\t\n-\t/**\n-\t * @return the envCounter\n-\t */\n-\tpublic Set<EnvCounterEntity> getEnvCounter() {\n-\t\treturn envCounter;\n-\t}\n-\n-\t/**\n-\t * @param envCounter the envCounter to set\n-\t */\n-\tpublic void setEnvCounter(Set<EnvCounterEntity> envCounter) {\n-\t\tthis.envCounter = envCounter;\n-\t}\n-\n-\t/**\n-\t * @return the metricTypeId\n-\t */\n-\tpublic int getMetricTypeId() {\n-\t\treturn metricTypeId;\n-\t}\n-\n-\t/**\n-\t * @param metricId the metricTypeId to set\n-\t */\n-\tpublic void setMetricTypeId(int metricTypeId) {\n-\t\tthis.metricTypeId = metricTypeId;\n-\t}\n-\n-\t/**\n-\t * @return the counterMetricType\n-\t */\n-\tpublic String getCounterMetricType() {\n-\t\treturn counterMetricType;\n-\t}\n-\n-\t/**\n-\t * @param counterMetricType the counterMetricType to set\n-\t */\n-\tpublic void setCounterMetricType(String counterMetricType) {\n-\t\tthis.counterMetricType = counterMetricType;\n-\t}\n-\n-\t/**\n-\t * @return the counterMetricTypeDesc\n-\t */\n-\tpublic String getCounterMetricTypeDesc() {\n-\t\treturn counterMetricTypeDesc;\n-\t}\n-\n-\t/**\n-\t * @param counterMetricTypeDesc the counterMetricTypeDesc to set\n-\t */\n-\tpublic void setCounterMetricTypeDesc(String counterMetricTypeDesc) {\n-\t\tthis.counterMetricTypeDesc = counterMetricTypeDesc;\n-\t}\n-\n-\t/**\n-\t * @return the counterMetricTypeClassName\n-\t */\n-\tpublic String getCounterMetricTypeClassName() {\n-\t\treturn counterMetricTypeClassName;\n-\t}\n-\n-\t/**\n-\t * @param counterMetricTypeClassName the counterMetricTypeClassName to set\n-\t */\n-\tpublic void setCounterMetricTypeClassName(String counterMetricTypeClassName) {\n-\t\tthis.counterMetricTypeClassName = counterMetricTypeClassName;\n-\t}\n-\t\n-}\n+    /**\n+     * @return the envCounter\n+     */\n+\n+\n+    public Set<EnvCounterEntity> getEnvCounter() {\n+        return envCounter;\n+    }\n+\n+    /**\n+     * @param envCounter the envCounter to set\n+     */\n+\n+\n+    public void setEnvCounter(Set<EnvCounterEntity> envCounter) {\n+        this.envCounter = envCounter;\n+    }\n+\n+    /**\n+     * @return the metricTypeId\n+     */\n+\n+\n+    public int getMetricTypeId() {\n+        return metricTypeId;\n+    }\n+\n+    /**\n+     * @param metricId the metricTypeId to set\n+     */\n+\n+\n+    public void setMetricTypeId(int metricTypeId) {\n+        this.metricTypeId = metricTypeId;\n+    }\n+\n+    /**\n+     * @return the counterMetricType\n+     */\n+\n+\n+    public String getCounterMetricType() {\n+        return counterMetricType;\n+    }\n+\n+    /**\n+     * @param counterMetricType the counterMetricType to set\n+     */\n+\n+\n+    public void setCounterMetricType(String counterMetricType) {\n+        this.counterMetricType = counterMetricType;\n+    }\n+\n+    /**\n+     * @return the counterMetricTypeDesc\n+     */\n+\n+\n+    public String getCounterMetricTypeDesc() {\n+        return counterMetricTypeDesc;\n+    }\n+\n+    /**\n+     * @param counterMetricTypeDesc the counterMetricTypeDesc to set\n+     */\n+\n+\n+    public void setCounterMetricTypeDesc(String counterMetricTypeDesc) {\n+        this.counterMetricTypeDesc = counterMetricTypeDesc;\n+    }\n+\n+    /**\n+     * @return the counterMetricTypeClassName\n+     */\n+\n+\n+    public String getCounterMetricTypeClassName() {\n+        return counterMetricTypeClassName;\n+    }\n+\n+    /**\n+     * @param counterMetricTypeClassName the counterMetricTypeClassName to set\n+     */\n+\n+\n+    public void setCounterMetricTypeClassName(String counterMetricTypeClassName) {\n+        this.counterMetricTypeClassName = counterMetricTypeClassName;\n+    }\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 115
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "43",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/tmobile-kardio/errored/1/118/CounterMetricTypeEntity.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/tmobile-kardio/styler_random/118/CounterMetricTypeEntity.java\nindex cc3745d272e..5f3da9e4295 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/tmobile-kardio/errored/1/118/CounterMetricTypeEntity.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/tmobile-kardio/styler_random/118/CounterMetricTypeEntity.java\n@@ -37,8 +37,8 @@ import javax.persistence.Table;\n @Entity\n @Table(name=\"counter_metric_type\")\n public class CounterMetricTypeEntity implements Serializable{\n-    \n-\tprivate static final long serialVersionUID = 1L;\n+\n+private static final long serialVersionUID = 1L;\n \n \t@Id\n \t@Column(name = \"counter_metric_type_id\")\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "43",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/tmobile-kardio/errored/1/118/CounterMetricTypeEntity.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/tmobile-kardio/styler_three_grams/118/CounterMetricTypeEntity.java\nindex cc3745d272e..2bee581e23f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/tmobile-kardio/errored/1/118/CounterMetricTypeEntity.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/tmobile-kardio/styler_three_grams/118/CounterMetricTypeEntity.java\n@@ -37,8 +37,8 @@ import javax.persistence.Table;\n @Entity\n @Table(name=\"counter_metric_type\")\n public class CounterMetricTypeEntity implements Serializable{\n-    \n-\tprivate static final long serialVersionUID = 1L;\n+\n+    private static final long serialVersionUID = 1L;\n \n \t@Id\n \t@Column(name = \"counter_metric_type_id\")\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "intellij",
        "codebuff"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ]
}
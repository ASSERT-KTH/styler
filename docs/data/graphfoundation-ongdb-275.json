{
    "project_name": "graphfoundation-ongdb",
    "error_id": "275",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/275/AsyncApply.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/275/AsyncApply.java\nindex 3ff98d9b439..bbe58b49692 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/275/AsyncApply.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/275/AsyncApply.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.concurrent;\n \n import java.util.concurrent.ExecutionException;\n@@ -26,16 +27,16 @@ import java.util.concurrent.ExecutionException;\n  */\n public interface AsyncApply\n {\n-    /**\n-     * Await the application of the work submitted to a {@link WorkSync}.\n-     * <p>\n-     * If the work is already done, then this method with return immediately.\n-     * <p>\n-     * If the work has not been done, then this method will attempt to grab the {@code WorkSync} lock to complete the\n-     * work, or block to wait for another thread to complete the work on behalf of the current thread.\n-     *\n-     * @throws ExecutionException if this thread ends up performing the work, and an exception is thrown from the\n-     * attempt to apply the work.\n-     */\n-    void await() throws ExecutionException;\n+  /**\n+   * Await the application of the work submitted to a {@link WorkSync}.\n+   * <p>\n+   * If the work is already done, then this method with return immediately.\n+   * <p>\n+   * If the work has not been done, then this method will attempt to grab the {@code WorkSync} lock to complete the\n+   * work, or block to wait for another thread to complete the work on behalf of the current thread.\n+   *\n+   * @throws ExecutionException if this thread ends up performing the work, and an exception is thrown from the\n+   *                            attempt to apply the work.\n+   */\n+  void await() throws ExecutionException;\n }\n",
            "diff_size": 13
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/275/AsyncApply.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/275/AsyncApply.java\nindex 3ff98d9b439..daff4bc6a33 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/275/AsyncApply.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/275/AsyncApply.java\n@@ -38,4 +38,4 @@ public interface AsyncApply\n      * attempt to apply the work.\n      */\n     void await() throws ExecutionException;\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
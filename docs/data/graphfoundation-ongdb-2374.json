{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2374",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "60",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "114",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "150",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "150",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2374/MarshlandPool.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2374/MarshlandPool.java\nindex 8e1b97ff614..71109960b42 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2374/MarshlandPool.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2374/MarshlandPool.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.collection.pool;\n \n import java.lang.ref.ReferenceQueue;\n@@ -34,141 +35,140 @@ import static java.util.Collections.newSetFromMap;\n  */\n public class MarshlandPool<T> implements Pool<T>\n {\n-    /*\n-     * This is a somewhat complicated class. What it does is to keep a single-slot local pool for each thread that\n-     * uses it, to allow very rapid claim calls that don't need to communicate with other threads. However, this is\n-     * dangerous, since pooled objects may then be lost when threads die.\n-     *\n-     * To mitigate this, the local slots are tracked by phantom references, which allows us to use a reference queue\n-     * to find objects that used to \"belong\" to now-dead threads.\n-     *\n-     * So, our algo for claiming is:\n-     *  - Check thread local for available object.\n-     *  - If none found, check the reference queue\n-     *  - If none found, use the delegate pool.\n-     */\n-\n-    private final Pool<T> delegate;\n-\n-    // Used to reclaim objects from dead threads\n-    private final Set<LocalSlotReference<T>> slotReferences = newSetFromMap( new ConcurrentHashMap<>() );\n-    private final ReferenceQueue<LocalSlot<T>> objectsFromDeadThreads = new ReferenceQueue<>();\n-\n-    private final ThreadLocal<LocalSlot<T>> puddle = ThreadLocal.withInitial( () ->\n-    {\n-        LocalSlot<T> localSlot = new LocalSlot<>( objectsFromDeadThreads );\n-        slotReferences.add( localSlot.slotWeakReference );\n-        return localSlot;\n-    } );\n-\n-    public MarshlandPool( Pool<T> delegatePool )\n+  /*\n+   * This is a somewhat complicated class. What it does is to keep a single-slot local pool for each thread that\n+   * uses it, to allow very rapid claim calls that don't need to communicate with other threads. However, this is\n+   * dangerous, since pooled objects may then be lost when threads die.\n+   *\n+   * To mitigate this, the local slots are tracked by phantom references, which allows us to use a reference queue\n+   * to find objects that used to \"belong\" to now-dead threads.\n+   *\n+   * So, our algo for claiming is:\n+   *  - Check thread local for available object.\n+   *  - If none found, check the reference queue\n+   *  - If none found, use the delegate pool.\n+   */\n+\n+  private final Pool<T> delegate;\n+\n+  // Used to reclaim objects from dead threads\n+  private final Set<LocalSlotReference<T>> slotReferences = newSetFromMap(new ConcurrentHashMap<>());\n+  private final ReferenceQueue<LocalSlot<T>> objectsFromDeadThreads = new ReferenceQueue<>();\n+\n+  private final ThreadLocal<LocalSlot<T>> puddle = ThreadLocal.withInitial(() ->\n+  {\n+    LocalSlot<T> localSlot = new LocalSlot<>(objectsFromDeadThreads);\n+    slotReferences.add(localSlot.slotWeakReference);\n+    return localSlot;\n+  });\n+\n+  public MarshlandPool(Pool<T> delegatePool)\n+  {\n+    this.delegate = delegatePool;\n+  }\n+\n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n+  public T acquire()\n+  {\n+    // Try and get it from the thread local\n+    LocalSlot<T> localSlot = puddle.get();\n+\n+    T obj = localSlot.localSlotObject;\n+    if (obj != null)\n     {\n-        this.delegate = delegatePool;\n+      localSlot.set(null);\n+      return obj;\n     }\n \n-    @SuppressWarnings( \"unchecked\" )\n-    @Override\n-    public T acquire()\n+    // Try the reference queue, containing objects from dead threads\n+    LocalSlotReference<T> slotReference = (LocalSlotReference<T>) objectsFromDeadThreads.poll();\n+    if (slotReference != null && slotReference.localSlotReferenceObject != null)\n     {\n-        // Try and get it from the thread local\n-        LocalSlot<T> localSlot = puddle.get();\n-\n-        T obj = localSlot.localSlotObject;\n-        if ( obj != null )\n-        {\n-            localSlot.set( null );\n-            return obj;\n-        }\n+      slotReferences.remove(slotReference); // remove from old threads\n+      return slotReference.localSlotReferenceObject;\n+    }\n \n-        // Try the reference queue, containing objects from dead threads\n-        LocalSlotReference<T> slotReference = (LocalSlotReference<T>) objectsFromDeadThreads.poll();\n-        if ( slotReference != null && slotReference.localSlotReferenceObject != null )\n-        {\n-            slotReferences.remove( slotReference ); // remove from old threads\n-            return slotReference.localSlotReferenceObject;\n-        }\n+    // Fall back to the delegate pool\n+    return delegate.acquire();\n+  }\n \n-        // Fall back to the delegate pool\n-        return delegate.acquire();\n-    }\n+  @Override\n+  public void release(T obj)\n+  {\n+    // Return it locally if possible\n+    LocalSlot<T> localSlot = puddle.get();\n \n-    @Override\n-    public void release( T obj )\n+    if (localSlot.localSlotObject == null)\n     {\n-        // Return it locally if possible\n-        LocalSlot<T> localSlot = puddle.get();\n-\n-        if ( localSlot.localSlotObject == null )\n-        {\n-            localSlot.set( obj );\n-        }\n-        else // Fall back to the delegate pool\n-        {\n-            delegate.release( obj );\n-        }\n+      localSlot.set(obj);\n+    } else // Fall back to the delegate pool\n+    {\n+      delegate.release(obj);\n     }\n-\n-    /**\n-     * Dispose of all objects in this pool, releasing them back to the delegate pool\n-     */\n-    @SuppressWarnings( \"unchecked\" )\n-    @Override\n-    public void close()\n+  }\n+\n+  /**\n+   * Dispose of all objects in this pool, releasing them back to the delegate pool\n+   */\n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n+  public void close()\n+  {\n+    for (LocalSlotReference<T> slotReference : slotReferences)\n     {\n-        for ( LocalSlotReference<T> slotReference : slotReferences )\n-        {\n-            LocalSlot<T> slot = slotReference.get();\n-            if ( slot != null )\n-            {\n-                T obj = slot.localSlotObject;\n-                if ( obj != null )\n-                {\n-                    slot.set( null );\n-                    delegate.release( obj );\n-                }\n-            }\n-        }\n-\n-        for ( LocalSlotReference<T> reference; (reference = (LocalSlotReference<T>) objectsFromDeadThreads.poll()) != null; )\n+      LocalSlot<T> slot = slotReference.get();\n+      if (slot != null)\n+      {\n+        T obj = slot.localSlotObject;\n+        if (obj != null)\n         {\n-            T obj = reference.localSlotReferenceObject;\n-            if ( obj != null )\n-            {\n-                delegate.release( obj );\n-            }\n+          slot.set(null);\n+          delegate.release(obj);\n         }\n+      }\n     }\n \n-    /**\n-     * Container for the \"puddle\", the small local pool each thread keeps.\n-     */\n-    private static final class LocalSlot<T>\n+    for (LocalSlotReference<T> reference; (reference = (LocalSlotReference<T>) objectsFromDeadThreads.poll()) != null; )\n     {\n-        private T localSlotObject;\n-        private final LocalSlotReference<T> slotWeakReference;\n+      T obj = reference.localSlotReferenceObject;\n+      if (obj != null)\n+      {\n+        delegate.release(obj);\n+      }\n+    }\n+  }\n \n-        private LocalSlot( ReferenceQueue<LocalSlot<T>> referenceQueue )\n-        {\n-            slotWeakReference = new LocalSlotReference<>( this, referenceQueue );\n-        }\n+  /**\n+   * Container for the \"puddle\", the small local pool each thread keeps.\n+   */\n+  private static final class LocalSlot<T>\n+  {\n+    private T localSlotObject;\n+    private final LocalSlotReference<T> slotWeakReference;\n \n-        public void set( T obj )\n-        {\n-            slotWeakReference.localSlotReferenceObject = obj;\n-            this.localSlotObject = obj;\n-        }\n+    private LocalSlot(ReferenceQueue<LocalSlot<T>> referenceQueue)\n+    {\n+      slotWeakReference = new LocalSlotReference<>(this, referenceQueue);\n     }\n \n-    /**\n-     * This is used to trigger the GC to notify us whenever the thread local has been garbage collected.\n-     */\n-    private static final class LocalSlotReference<T> extends WeakReference<LocalSlot<T>>\n+    public void set(T obj)\n     {\n-        private T localSlotReferenceObject;\n+      slotWeakReference.localSlotReferenceObject = obj;\n+      this.localSlotObject = obj;\n+    }\n+  }\n \n-        private LocalSlotReference( LocalSlot<T> referent, ReferenceQueue<? super LocalSlot<T>> q )\n-        {\n-            super( referent, q );\n-        }\n+  /**\n+   * This is used to trigger the GC to notify us whenever the thread local has been garbage collected.\n+   */\n+  private static final class LocalSlotReference<T> extends WeakReference<LocalSlot<T>>\n+  {\n+    private T localSlotReferenceObject;\n+\n+    private LocalSlotReference(LocalSlot<T> referent, ReferenceQueue<? super LocalSlot<T>> q)\n+    {\n+      super(referent, q);\n     }\n+  }\n }\n",
            "diff_size": 154
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2374/MarshlandPool.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2374/MarshlandPool.java\nindex 8e1b97ff614..4e59e2a92d6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2374/MarshlandPool.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2374/MarshlandPool.java\n@@ -72,8 +72,7 @@ public class MarshlandPool<T> implements Pool<T>\n     {\n         // Try and get it from the thread local\n         LocalSlot<T> localSlot = puddle.get();\n-\n-        T obj = localSlot.localSlotObject;\n+T obj = localSlot.localSlotObject;\n         if ( obj != null )\n         {\n             localSlot.set( null );\n@@ -97,8 +96,7 @@ public class MarshlandPool<T> implements Pool<T>\n     {\n         // Return it locally if possible\n         LocalSlot<T> localSlot = puddle.get();\n-\n-        if ( localSlot.localSlotObject == null )\n+if ( localSlot.localSlotObject == null )\n         {\n             localSlot.set( obj );\n         }\n@@ -171,4 +169,4 @@ public class MarshlandPool<T> implements Pool<T>\n             super( referent, q );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "98",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "32",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "32",
                    "column": "109",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "34",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "34",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "74",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "17",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/98/NodePropertyUniqueConstraintCreator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/98/NodePropertyUniqueConstraintCreator.java\nindex 1f415397f6f..43eabbac89b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/98/NodePropertyUniqueConstraintCreator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/98/NodePropertyUniqueConstraintCreator.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.coreapi.schema;\n \n import java.util.ArrayList;\n@@ -26,28 +27,28 @@ import org.neo4j.graphdb.schema.ConstraintDefinition;\n \n public class NodePropertyUniqueConstraintCreator extends BaseNodeConstraintCreator\n {\n-    protected final ArrayList<String> propertyKeys = new ArrayList<>();\n-\n-    NodePropertyUniqueConstraintCreator( InternalSchemaActions internalCreator, Label label, String propertyKey )\n-    {\n-        super( internalCreator, label );\n-        this.propertyKeys.add( propertyKey );\n-    }\n-\n-    @Override\n-    public final NodePropertyUniqueConstraintCreator assertPropertyIsUnique( String propertyKey )\n-    {\n-        throw new UnsupportedOperationException( \"You can only create one unique constraint at a time.\" );\n-    }\n-\n-    @Override\n-    public final ConstraintDefinition create()\n-    {\n-        assertInUnterminatedTransaction();\n-\n-        IndexDefinitionImpl definition =\n-                new IndexDefinitionImpl( actions, label, propertyKeys.toArray( new String[propertyKeys.size()] ),\n-                        true );\n-        return actions.createPropertyUniquenessConstraint( definition );\n-    }\n+  protected final ArrayList<String> propertyKeys = new ArrayList<>();\n+\n+  NodePropertyUniqueConstraintCreator(InternalSchemaActions internalCreator, Label label, String propertyKey)\n+  {\n+    super(internalCreator, label);\n+    this.propertyKeys.add(propertyKey);\n+  }\n+\n+  @Override\n+  public final NodePropertyUniqueConstraintCreator assertPropertyIsUnique(String propertyKey)\n+  {\n+    throw new UnsupportedOperationException(\"You can only create one unique constraint at a time.\");\n+  }\n+\n+  @Override\n+  public final ConstraintDefinition create()\n+  {\n+    assertInUnterminatedTransaction();\n+\n+    IndexDefinitionImpl definition =\n+        new IndexDefinitionImpl(actions, label, propertyKeys.toArray(new String[propertyKeys.size()]),\n+            true);\n+    return actions.createPropertyUniquenessConstraint(definition);\n+  }\n }\n",
            "diff_size": 25
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/98/NodePropertyUniqueConstraintCreator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/98/NodePropertyUniqueConstraintCreator.java\nindex 1f415397f6f..b2bef4305da 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/98/NodePropertyUniqueConstraintCreator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/98/NodePropertyUniqueConstraintCreator.java\n@@ -44,10 +44,8 @@ public class NodePropertyUniqueConstraintCreator extends BaseNodeConstraintCreat\n     public final ConstraintDefinition create()\n     {\n         assertInUnterminatedTransaction();\n-\n-        IndexDefinitionImpl definition =\n-                new IndexDefinitionImpl( actions, label, propertyKeys.toArray( new String[propertyKeys.size()] ),\n+IndexDefinitionImpl definition = new IndexDefinitionImpl( actions, label, propertyKeys.toArray( new String[propertyKeys.size()] ),\n                         true );\n-        return actions.createPropertyUniquenessConstraint( definition );\n+return actions.createPropertyUniquenessConstraint( definition );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
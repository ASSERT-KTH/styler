{
    "project_name": "zanata-zanata-platform",
    "error_id": "36",
    "information": {
        "errors": [
            {
                "line": "67",
                "column": "9",
                "severity": "error",
                "message": "'if' is not followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
            }
        ]
    },
    "source_code": "\n        HPerson authenticatedUser = authenticatedAccount.getPerson();\n        if(isCoordinator) {\n            isReviewer = true;\n            isTranslator = true;\n        }",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/zanata-zanata-platform/errored/1/36/LanguageTeamServiceImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/zanata-zanata-platform/styler/36/LanguageTeamServiceImpl.java\nindex f6f67717fb0..aa4dfa9a8a8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/zanata-zanata-platform/errored/1/36/LanguageTeamServiceImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/zanata-zanata-platform/styler/36/LanguageTeamServiceImpl.java\n@@ -64,7 +64,7 @@ public class LanguageTeamServiceImpl implements LanguageTeamService {\n         LanguageTeamPermissionChangedEvent permissionChangedEvent;\n \n         HPerson authenticatedUser = authenticatedAccount.getPerson();\n-        if(isCoordinator) {\n+        if (isCoordinator) {\n             isReviewer = true;\n             isTranslator = true;\n         }\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/zanata-zanata-platform/errored/1/36/LanguageTeamServiceImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/zanata-zanata-platform/intellij/36/LanguageTeamServiceImpl.java\nindex f6f67717fb0..25255e326cf 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/zanata-zanata-platform/errored/1/36/LanguageTeamServiceImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/zanata-zanata-platform/intellij/36/LanguageTeamServiceImpl.java\n@@ -28,120 +28,120 @@ import javax.enterprise.event.Event;\n @RequestScoped\n @Transactional\n public class LanguageTeamServiceImpl implements LanguageTeamService {\n-    private static final long serialVersionUID = -1049037380252117557L;\n-    @Inject\n-    private PersonDAO personDAO;\n+  private static final long serialVersionUID = -1049037380252117557L;\n+  @Inject\n+  private PersonDAO personDAO;\n \n-    @Inject\n-    private LocaleDAO localeDAO;\n+  @Inject\n+  private LocaleDAO localeDAO;\n \n-    @Inject\n-    private LocaleMemberDAO localeMemberDAO;\n+  @Inject\n+  private LocaleMemberDAO localeMemberDAO;\n \n-    @Inject\n-    @Authenticated\n-    private HAccount authenticatedAccount;\n+  @Inject\n+  @Authenticated\n+  private HAccount authenticatedAccount;\n \n-    @SuppressFBWarnings(value = \"SE_BAD_FIELD\")\n-    @Inject\n-    private Event<LanguageTeamPermissionChangedEvent>\n-            languageTeamPermissionChangedEvent;\n+  @SuppressFBWarnings(value = \"SE_BAD_FIELD\")\n+  @Inject\n+  private Event<LanguageTeamPermissionChangedEvent>\n+    languageTeamPermissionChangedEvent;\n \n \n-    public List<HLocale> getLanguageMemberships(String userName) {\n-        return personDAO.getLanguageMembershipByUsername(userName);\n-    }\n+  public List<HLocale> getLanguageMemberships(String userName) {\n+    return personDAO.getLanguageMembershipByUsername(userName);\n+  }\n \n-    public void joinOrUpdateRoleInLanguageTeam(String locale, Long personId,\n-            boolean isTranslator, boolean isReviewer, boolean isCoordinator)\n-            throws ZanataServiceException {\n-        LocaleId localeId = new LocaleId(locale);\n-        HPerson currentPerson = personDAO.findById(personId, false);\n-\n-        boolean alreadyJoined =\n-                localeMemberDAO.isLocaleMember(personId, localeId);\n-        HLocaleMember localeMember;\n-        LanguageTeamPermissionChangedEvent permissionChangedEvent;\n-\n-        HPerson authenticatedUser = authenticatedAccount.getPerson();\n-        if(isCoordinator) {\n-            isReviewer = true;\n-            isTranslator = true;\n-        }\n-        if (!alreadyJoined) {\n-            if (currentPerson.getLanguageMemberships().size() >= MAX_NUMBER_MEMBERSHIP) {\n-                throw new ZanataServiceException(\n-                        \"You can only be a member of up to \"\n-                                + MAX_NUMBER_MEMBERSHIP\n-                                + \" languages at one time.\");\n-            }\n-            HLocale lang = localeDAO.findByLocaleId(localeId);\n-            if (lang != null) {\n-                localeMember =\n-                        new HLocaleMember(currentPerson, lang, isTranslator,\n-                                isReviewer, isCoordinator);\n-\n-                Set<HLocaleMember> members = lang.getMembers();\n-                if (members != null) {\n-                    members.add(localeMember);\n-                }\n-                permissionChangedEvent =\n-                        new LanguageTeamPermissionChangedEvent(currentPerson,\n-                                localeId, authenticatedUser)\n-                                .joiningTheTeam(isTranslator, isReviewer,\n-                                        isCoordinator);\n-                localeMemberDAO.makePersistent(localeMember);\n-                localeMemberDAO.flush();\n-                languageTeamPermissionChangedEvent.fire(permissionChangedEvent);\n-            }\n-        } else {\n-            localeMember =\n-                    localeMemberDAO.findByPersonAndLocale(personId, localeId);\n-            permissionChangedEvent =\n-                    new LanguageTeamPermissionChangedEvent(currentPerson,\n-                            localeId, authenticatedUser)\n-                            .updatingPermissions(localeMember,\n-                            isTranslator, isReviewer, isCoordinator);\n-            localeMember.setTranslator(isTranslator);\n-            localeMember.setReviewer(isReviewer);\n-            localeMember.setCoordinator(isCoordinator);\n-\n-            localeMemberDAO.makePersistent(localeMember);\n-            localeMemberDAO.flush();\n-            languageTeamPermissionChangedEvent.fire(permissionChangedEvent);\n-        }\n-    }\n+  public void joinOrUpdateRoleInLanguageTeam(String locale, Long personId,\n+                                             boolean isTranslator, boolean isReviewer, boolean isCoordinator)\n+    throws ZanataServiceException {\n+    LocaleId localeId = new LocaleId(locale);\n+    HPerson currentPerson = personDAO.findById(personId, false);\n \n-    public boolean leaveLanguageTeam(String locale, Long personId) {\n-        HLocale lang = localeDAO.findByLocaleId(new LocaleId(locale));\n-        HPerson currentPerson = personDAO.findById(personId, false);\n-        final HLocaleMember membership =\n-                localeMemberDAO.findById(new HLocaleMemberPk(currentPerson,\n-                        lang), true);\n-\n-        if (membership != null) {\n-            localeMemberDAO.makeTransient(membership);\n-            Set<HLocaleMember> members = lang.getMembers();\n-            if (members != null) {\n-                members.remove(membership);\n-            }\n-            localeMemberDAO.flush();\n-            HPerson doneByPerson = authenticatedAccount.getPerson();\n-            languageTeamPermissionChangedEvent.fire(\n-                    new LanguageTeamPermissionChangedEvent(\n-                            currentPerson, lang.getLocaleId(),\n-                            doneByPerson)\n-                            .updatingPermissions(membership, false,\n-                                    false, false));\n-            return true;\n-        }\n+    boolean alreadyJoined =\n+      localeMemberDAO.isLocaleMember(personId, localeId);\n+    HLocaleMember localeMember;\n+    LanguageTeamPermissionChangedEvent permissionChangedEvent;\n \n-        return false;\n+    HPerson authenticatedUser = authenticatedAccount.getPerson();\n+    if (isCoordinator) {\n+      isReviewer = true;\n+      isTranslator = true;\n     }\n-\n-    @Override\n-    public boolean isUserReviewer(Long personId) {\n-        return !localeMemberDAO.findByPersonWithReviewerRole(personId)\n-                .isEmpty();\n+    if (!alreadyJoined) {\n+      if (currentPerson.getLanguageMemberships().size() >= MAX_NUMBER_MEMBERSHIP) {\n+        throw new ZanataServiceException(\n+          \"You can only be a member of up to \"\n+            + MAX_NUMBER_MEMBERSHIP\n+            + \" languages at one time.\");\n+      }\n+      HLocale lang = localeDAO.findByLocaleId(localeId);\n+      if (lang != null) {\n+        localeMember =\n+          new HLocaleMember(currentPerson, lang, isTranslator,\n+            isReviewer, isCoordinator);\n+\n+        Set<HLocaleMember> members = lang.getMembers();\n+        if (members != null) {\n+          members.add(localeMember);\n+        }\n+        permissionChangedEvent =\n+          new LanguageTeamPermissionChangedEvent(currentPerson,\n+            localeId, authenticatedUser)\n+            .joiningTheTeam(isTranslator, isReviewer,\n+              isCoordinator);\n+        localeMemberDAO.makePersistent(localeMember);\n+        localeMemberDAO.flush();\n+        languageTeamPermissionChangedEvent.fire(permissionChangedEvent);\n+      }\n+    } else {\n+      localeMember =\n+        localeMemberDAO.findByPersonAndLocale(personId, localeId);\n+      permissionChangedEvent =\n+        new LanguageTeamPermissionChangedEvent(currentPerson,\n+          localeId, authenticatedUser)\n+          .updatingPermissions(localeMember,\n+            isTranslator, isReviewer, isCoordinator);\n+      localeMember.setTranslator(isTranslator);\n+      localeMember.setReviewer(isReviewer);\n+      localeMember.setCoordinator(isCoordinator);\n+\n+      localeMemberDAO.makePersistent(localeMember);\n+      localeMemberDAO.flush();\n+      languageTeamPermissionChangedEvent.fire(permissionChangedEvent);\n+    }\n+  }\n+\n+  public boolean leaveLanguageTeam(String locale, Long personId) {\n+    HLocale lang = localeDAO.findByLocaleId(new LocaleId(locale));\n+    HPerson currentPerson = personDAO.findById(personId, false);\n+    final HLocaleMember membership =\n+      localeMemberDAO.findById(new HLocaleMemberPk(currentPerson,\n+        lang), true);\n+\n+    if (membership != null) {\n+      localeMemberDAO.makeTransient(membership);\n+      Set<HLocaleMember> members = lang.getMembers();\n+      if (members != null) {\n+        members.remove(membership);\n+      }\n+      localeMemberDAO.flush();\n+      HPerson doneByPerson = authenticatedAccount.getPerson();\n+      languageTeamPermissionChangedEvent.fire(\n+        new LanguageTeamPermissionChangedEvent(\n+          currentPerson, lang.getLocaleId(),\n+          doneByPerson)\n+          .updatingPermissions(membership, false,\n+            false, false));\n+      return true;\n     }\n+\n+    return false;\n+  }\n+\n+  @Override\n+  public boolean isUserReviewer(Long personId) {\n+    return !localeMemberDAO.findByPersonWithReviewerRole(personId)\n+      .isEmpty();\n+  }\n }\n",
            "diff_size": 178
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/zanata-zanata-platform/errored/1/36/LanguageTeamServiceImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/zanata-zanata-platform/naturalize/36/LanguageTeamServiceImpl.java\nindex f6f67717fb0..35bbef673c3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/zanata-zanata-platform/errored/1/36/LanguageTeamServiceImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/zanata-zanata-platform/naturalize/36/LanguageTeamServiceImpl.java\n@@ -47,8 +47,7 @@ public class LanguageTeamServiceImpl implements LanguageTeamService {\n     private Event<LanguageTeamPermissionChangedEvent>\n             languageTeamPermissionChangedEvent;\n \n-\n-    public List<HLocale> getLanguageMemberships(String userName) {\n+        public List<HLocale> getLanguageMemberships(String userName) {\n         return personDAO.getLanguageMembershipByUsername(userName);\n     }\n \n@@ -64,7 +63,7 @@ public class LanguageTeamServiceImpl implements LanguageTeamService {\n         LanguageTeamPermissionChangedEvent permissionChangedEvent;\n \n         HPerson authenticatedUser = authenticatedAccount.getPerson();\n-        if(isCoordinator) {\n+        if (isCoordinator) {\n             isReviewer = true;\n             isTranslator = true;\n         }\n@@ -133,7 +132,7 @@ public class LanguageTeamServiceImpl implements LanguageTeamService {\n                             doneByPerson)\n                             .updatingPermissions(membership, false,\n                                     false, false));\n-            return true;\n+return true;\n         }\n \n         return false;\n@@ -144,4 +143,4 @@ public class LanguageTeamServiceImpl implements LanguageTeamService {\n         return !localeMemberDAO.findByPersonWithReviewerRole(personId)\n                 .isEmpty();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/zanata-zanata-platform/errored/1/36/LanguageTeamServiceImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/zanata-zanata-platform/codebuff/36/LanguageTeamServiceImpl.java\nindex f6f67717fb0..5c1c38219c5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/zanata-zanata-platform/errored/1/36/LanguageTeamServiceImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/zanata-zanata-platform/codebuff/36/LanguageTeamServiceImpl.java\n@@ -2,11 +2,9 @@ package org.zanata.service.impl;\n \n import java.util.List;\n import java.util.Set;\n-\n import javax.enterprise.context.RequestScoped;\n import javax.inject.Inject;\n import javax.inject.Named;\n-\n import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;\n import org.apache.deltaspike.jpa.api.transaction.Transactional;\n import org.zanata.common.LocaleId;\n@@ -24,6 +22,7 @@ import org.zanata.security.annotations.Authenticated;\n import org.zanata.service.LanguageTeamService;\n import javax.enterprise.event.Event;\n \n+\n @Named(\"languageTeamServiceImpl\")\n @RequestScoped\n @Transactional\n@@ -31,81 +30,54 @@ public class LanguageTeamServiceImpl implements LanguageTeamService {\n     private static final long serialVersionUID = -1049037380252117557L;\n     @Inject\n     private PersonDAO personDAO;\n-\n     @Inject\n     private LocaleDAO localeDAO;\n-\n     @Inject\n     private LocaleMemberDAO localeMemberDAO;\n-\n     @Inject\n     @Authenticated\n     private HAccount authenticatedAccount;\n-\n     @SuppressFBWarnings(value = \"SE_BAD_FIELD\")\n     @Inject\n-    private Event<LanguageTeamPermissionChangedEvent>\n-            languageTeamPermissionChangedEvent;\n-\n-\n+    private Event<LanguageTeamPermissionChangedEvent> languageTeamPermissionChangedEvent;\n     public List<HLocale> getLanguageMemberships(String userName) {\n         return personDAO.getLanguageMembershipByUsername(userName);\n     }\n \n-    public void joinOrUpdateRoleInLanguageTeam(String locale, Long personId,\n-            boolean isTranslator, boolean isReviewer, boolean isCoordinator)\n-            throws ZanataServiceException {\n+    public void joinOrUpdateRoleInLanguageTeam(String locale,\n+           Long personId, boolean isTranslator, boolean isReviewer, boolean isCoordinator) throws ZanataServiceException {\n         LocaleId localeId = new LocaleId(locale);\n         HPerson currentPerson = personDAO.findById(personId, false);\n-\n-        boolean alreadyJoined =\n-                localeMemberDAO.isLocaleMember(personId, localeId);\n+        boolean alreadyJoined = localeMemberDAO.isLocaleMember(personId, localeId);\n         HLocaleMember localeMember;\n         LanguageTeamPermissionChangedEvent permissionChangedEvent;\n-\n         HPerson authenticatedUser = authenticatedAccount.getPerson();\n-        if(isCoordinator) {\n+        if (isCoordinator) {\n             isReviewer = true;\n             isTranslator = true;\n         }\n         if (!alreadyJoined) {\n             if (currentPerson.getLanguageMemberships().size() >= MAX_NUMBER_MEMBERSHIP) {\n-                throw new ZanataServiceException(\n-                        \"You can only be a member of up to \"\n-                                + MAX_NUMBER_MEMBERSHIP\n-                                + \" languages at one time.\");\n+                throw new ZanataServiceException(\"You can only be a member of up to \" + MAX_NUMBER_MEMBERSHIP + \" languages at one time.\");\n             }\n             HLocale lang = localeDAO.findByLocaleId(localeId);\n             if (lang != null) {\n-                localeMember =\n-                        new HLocaleMember(currentPerson, lang, isTranslator,\n-                                isReviewer, isCoordinator);\n-\n+                localeMember = new HLocaleMember(currentPerson, lang, isTranslator, isReviewer, isCoordinator);\n                 Set<HLocaleMember> members = lang.getMembers();\n                 if (members != null) {\n                     members.add(localeMember);\n                 }\n-                permissionChangedEvent =\n-                        new LanguageTeamPermissionChangedEvent(currentPerson,\n-                                localeId, authenticatedUser)\n-                                .joiningTheTeam(isTranslator, isReviewer,\n-                                        isCoordinator);\n+                permissionChangedEvent = new LanguageTeamPermissionChangedEvent(currentPerson, localeId, authenticatedUser).joiningTheTeam(isTranslator, isReviewer, isCoordinator);\n                 localeMemberDAO.makePersistent(localeMember);\n                 localeMemberDAO.flush();\n                 languageTeamPermissionChangedEvent.fire(permissionChangedEvent);\n             }\n         } else {\n-            localeMember =\n-                    localeMemberDAO.findByPersonAndLocale(personId, localeId);\n-            permissionChangedEvent =\n-                    new LanguageTeamPermissionChangedEvent(currentPerson,\n-                            localeId, authenticatedUser)\n-                            .updatingPermissions(localeMember,\n-                            isTranslator, isReviewer, isCoordinator);\n+            localeMember = localeMemberDAO.findByPersonAndLocale(personId, localeId);\n+            permissionChangedEvent = new LanguageTeamPermissionChangedEvent(currentPerson, localeId, authenticatedUser).updatingPermissions(localeMember, isTranslator, isReviewer, isCoordinator);\n             localeMember.setTranslator(isTranslator);\n             localeMember.setReviewer(isReviewer);\n             localeMember.setCoordinator(isCoordinator);\n-\n             localeMemberDAO.makePersistent(localeMember);\n             localeMemberDAO.flush();\n             languageTeamPermissionChangedEvent.fire(permissionChangedEvent);\n@@ -115,10 +87,7 @@ public class LanguageTeamServiceImpl implements LanguageTeamService {\n     public boolean leaveLanguageTeam(String locale, Long personId) {\n         HLocale lang = localeDAO.findByLocaleId(new LocaleId(locale));\n         HPerson currentPerson = personDAO.findById(personId, false);\n-        final HLocaleMember membership =\n-                localeMemberDAO.findById(new HLocaleMemberPk(currentPerson,\n-                        lang), true);\n-\n+        final HLocaleMember membership = localeMemberDAO.findById(new HLocaleMemberPk(currentPerson, lang), true);\n         if (membership != null) {\n             localeMemberDAO.makeTransient(membership);\n             Set<HLocaleMember> members = lang.getMembers();\n@@ -127,21 +96,14 @@ public class LanguageTeamServiceImpl implements LanguageTeamService {\n             }\n             localeMemberDAO.flush();\n             HPerson doneByPerson = authenticatedAccount.getPerson();\n-            languageTeamPermissionChangedEvent.fire(\n-                    new LanguageTeamPermissionChangedEvent(\n-                            currentPerson, lang.getLocaleId(),\n-                            doneByPerson)\n-                            .updatingPermissions(membership, false,\n-                                    false, false));\n+            languageTeamPermissionChangedEvent.fire(new LanguageTeamPermissionChangedEvent(currentPerson, lang.getLocaleId(), doneByPerson).updatingPermissions(membership, false, false, false));\n             return true;\n         }\n-\n         return false;\n     }\n \n     @Override\n     public boolean isUserReviewer(Long personId) {\n-        return !localeMemberDAO.findByPersonWithReviewerRole(personId)\n-                .isEmpty();\n+        return !localeMemberDAO.findByPersonWithReviewerRole(personId).isEmpty();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 54
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/zanata-zanata-platform/errored/1/36/LanguageTeamServiceImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/zanata-zanata-platform/styler_random/36/LanguageTeamServiceImpl.java\nindex f6f67717fb0..aa4dfa9a8a8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/zanata-zanata-platform/errored/1/36/LanguageTeamServiceImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/zanata-zanata-platform/styler_random/36/LanguageTeamServiceImpl.java\n@@ -64,7 +64,7 @@ public class LanguageTeamServiceImpl implements LanguageTeamService {\n         LanguageTeamPermissionChangedEvent permissionChangedEvent;\n \n         HPerson authenticatedUser = authenticatedAccount.getPerson();\n-        if(isCoordinator) {\n+        if (isCoordinator) {\n             isReviewer = true;\n             isTranslator = true;\n         }\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/zanata-zanata-platform/errored/1/36/LanguageTeamServiceImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/zanata-zanata-platform/styler_three_grams/36/LanguageTeamServiceImpl.java\nindex f6f67717fb0..aa4dfa9a8a8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/zanata-zanata-platform/errored/1/36/LanguageTeamServiceImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/zanata-zanata-platform/styler_three_grams/36/LanguageTeamServiceImpl.java\n@@ -64,7 +64,7 @@ public class LanguageTeamServiceImpl implements LanguageTeamService {\n         LanguageTeamPermissionChangedEvent permissionChangedEvent;\n \n         HPerson authenticatedUser = authenticatedAccount.getPerson();\n-        if(isCoordinator) {\n+        if (isCoordinator) {\n             isReviewer = true;\n             isTranslator = true;\n         }\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": []
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4100",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "46",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4100/Context.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4100/Context.java\nindex 961a3237c6d..608c6937c1e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4100/Context.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4100/Context.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.api.proc;\n \n import java.time.Clock;\n@@ -29,19 +30,20 @@ import org.neo4j.kernel.api.KernelTransaction;\n  * The context in which a procedure is invoked. This is a read-only map-like structure.\n  * For instance, a read-only transactional procedure might have access to the current statement it is being invoked\n  * in through this.\n- *\n+ * <p>\n  * The context is entirely defined by the caller of the procedure,\n  * so what is available in the context depends on the context of the call.\n  */\n public interface Context\n {\n-    Key<KernelTransaction> KERNEL_TRANSACTION = Key.key( \"KernelTransaction\", KernelTransaction.class );\n-    Key<SecurityContext> SECURITY_CONTEXT = Key.key( \"SecurityContext\", SecurityContext.class );\n-    Key<Thread> THREAD = Key.key( \"Thread\", Thread.class );\n-    Key<Clock> SYSTEM_CLOCK = Key.key( \"SystemClock\", Clock.class );\n-    Key<Clock> STATEMENT_CLOCK = Key.key( \"StatementClock\", Clock.class );\n-    Key<Clock> TRANSACTION_CLOCK = Key.key( \"TransactionClock\", Clock.class );\n+  Key<KernelTransaction> KERNEL_TRANSACTION = Key.key(\"KernelTransaction\", KernelTransaction.class);\n+  Key<SecurityContext> SECURITY_CONTEXT = Key.key(\"SecurityContext\", SecurityContext.class);\n+  Key<Thread> THREAD = Key.key(\"Thread\", Thread.class);\n+  Key<Clock> SYSTEM_CLOCK = Key.key(\"SystemClock\", Clock.class);\n+  Key<Clock> STATEMENT_CLOCK = Key.key(\"StatementClock\", Clock.class);\n+  Key<Clock> TRANSACTION_CLOCK = Key.key(\"TransactionClock\", Clock.class);\n+\n+  <T> T get(Key<T> key) throws ProcedureException;\n \n-    <T> T get( Key<T> key ) throws ProcedureException;\n-    <T> T getOrElse( Key<T> key, T orElse );\n+  <T> T getOrElse(Key<T> key, T orElse);\n }\n",
            "diff_size": 12
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4100/Context.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4100/Context.java\nindex 961a3237c6d..db26e1fe2a0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4100/Context.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4100/Context.java\n@@ -44,4 +44,4 @@ public interface Context\n \n     <T> T get( Key<T> key ) throws ProcedureException;\n     <T> T getOrElse( Key<T> key, T orElse );\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
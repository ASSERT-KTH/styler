{
    "project_name": "bakdata-conquery",
    "error_id": "333",
    "information": {
        "errors": [
            {
                "line": "30",
                "severity": "warning",
                "message": "trailing whitespaces",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
            }
        ]
    },
    "source_code": "\t\tthis.setParts(serCtx.getParts());\n\t\t// Optional for backward compatibility TODO remove\n\t\tcreationTime = Optional.ofNullable(serCtx.getCreationTime()).orElse(Instant.now());\t\n\t}\n\n\tpublic WildcardPermission(String wildcardString){",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/333/WildcardPermission.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler/333/WildcardPermission.java\nindex 4531e140d82..31978090e2b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/333/WildcardPermission.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler/333/WildcardPermission.java\n@@ -27,7 +27,7 @@ public class WildcardPermission extends org.apache.shiro.authz.permission.Wildca\n \tpublic WildcardPermission(SerializationContianer serCtx) {\n \t\tthis.setParts(serCtx.getParts());\n \t\t// Optional for backward compatibility TODO remove\n-\t\tcreationTime = Optional.ofNullable(serCtx.getCreationTime()).orElse(Instant.now());\t\n+\t\tcreationTime = Optional.ofNullable (serCtx.getCreationTime()).orElse(Instant.now());\n \t}\n \n \tpublic WildcardPermission(String wildcardString){\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "23",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "25",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "26",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "27",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "28",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "29",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "30",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "32",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "33",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "34",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "35",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "37",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "38",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "39",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "41",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "42",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "43",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "44",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "45",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "46",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "47",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "48",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/333/WildcardPermission.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/intellij/333/WildcardPermission.java\nindex 4531e140d82..58bfb073d2e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/333/WildcardPermission.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/intellij/333/WildcardPermission.java\n@@ -13,37 +13,37 @@ import org.hibernate.validator.constraints.NotEmpty;\n \n /**\n  * Needed for (de)serialization with Jackson.\n- *\n  */\n @SuppressWarnings(\"serial\")\n @Getter\n @Setter\n @CPSType(id = \"WILDCARD_PERMISSION\", base = ConqueryPermission.class)\n public class WildcardPermission extends org.apache.shiro.authz.permission.WildcardPermission implements ConqueryPermission {\n-\t\n-\tprivate final Instant creationTime;\n-\t\n-\t@JsonCreator\n-\tpublic WildcardPermission(SerializationContianer serCtx) {\n-\t\tthis.setParts(serCtx.getParts());\n-\t\t// Optional for backward compatibility TODO remove\n-\t\tcreationTime = Optional.ofNullable(serCtx.getCreationTime()).orElse(Instant.now());\t\n-\t}\n-\n-\tpublic WildcardPermission(String wildcardString){\n-\t\tsuper(wildcardString);\n-\t\tcreationTime = Instant.now();\n-\t}\n-\n-\tpublic List<Set<String>> getParts() {\n-\t\treturn super.getParts();\n-\t}\n-\t\n-\t@Getter @Setter\n-\tpublic static class SerializationContianer {\n-\t\t@NotEmpty\n-\t\tprivate List<Set<String>> parts;\n-\t\t// Commented for backward compatibility: @NotNull\n-\t\tprivate Instant creationTime;\n-\t}\n+\n+    private final Instant creationTime;\n+\n+    @JsonCreator\n+    public WildcardPermission(SerializationContianer serCtx) {\n+        this.setParts(serCtx.getParts());\n+        // Optional for backward compatibility TODO remove\n+        creationTime = Optional.ofNullable(serCtx.getCreationTime()).orElse(Instant.now());\n+    }\n+\n+    public WildcardPermission(String wildcardString) {\n+        super(wildcardString);\n+        creationTime = Instant.now();\n+    }\n+\n+    public List<Set<String>> getParts() {\n+        return super.getParts();\n+    }\n+\n+    @Getter\n+    @Setter\n+    public static class SerializationContianer {\n+        @NotEmpty\n+        private List<Set<String>> parts;\n+        // Commented for backward compatibility: @NotNull\n+        private Instant creationTime;\n+    }\n }\n",
            "diff_size": 28
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/333/WildcardPermission.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/naturalize/333/WildcardPermission.java\nindex 4531e140d82..99e55137325 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/333/WildcardPermission.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/naturalize/333/WildcardPermission.java\n@@ -27,10 +27,11 @@ public class WildcardPermission extends org.apache.shiro.authz.permission.Wildca\n \tpublic WildcardPermission(SerializationContianer serCtx) {\n \t\tthis.setParts(serCtx.getParts());\n \t\t// Optional for backward compatibility TODO remove\n-\t\tcreationTime = Optional.ofNullable(serCtx.getCreationTime()).orElse(Instant.now());\t\n+\t\tcreationTime = Optional.ofNullable(serCtx.getCreationTime()).orElse(Instant.now());\n \t}\n \n-\tpublic WildcardPermission(String wildcardString){\n+\n+\tpublic WildcardPermission(String wildcardString) {\n \t\tsuper(wildcardString);\n \t\tcreationTime = Instant.now();\n \t}\n@@ -46,4 +47,4 @@ public class WildcardPermission extends org.apache.shiro.authz.permission.Wildca\n \t\t// Commented for backward compatibility: @NotNull\n \t\tprivate Instant creationTime;\n \t}\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "22",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "22",
                    "column": "2",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "24",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "24",
                    "column": "2",
                    "severity": "warning",
                    "message": "'ctor def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "25",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "26",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "26",
                    "column": "3",
                    "severity": "warning",
                    "message": "'ctor def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "27",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "28",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "28",
                    "column": "3",
                    "severity": "warning",
                    "message": "'ctor def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "29",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "29",
                    "column": "2",
                    "severity": "warning",
                    "message": "'ctor def rcurly' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "31",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "31",
                    "column": "2",
                    "severity": "warning",
                    "message": "'ctor def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "32",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "32",
                    "column": "3",
                    "severity": "warning",
                    "message": "'ctor def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "33",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "33",
                    "column": "3",
                    "severity": "warning",
                    "message": "'ctor def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "34",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "34",
                    "column": "2",
                    "severity": "warning",
                    "message": "'ctor def rcurly' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "36",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "36",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "37",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "37",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "38",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "38",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "40",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "40",
                    "column": "2",
                    "severity": "warning",
                    "message": "'class def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "41",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "41",
                    "column": "2",
                    "severity": "warning",
                    "message": "'class def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "43",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "43",
                    "column": "3",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "44",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "45",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "46",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "46",
                    "column": "3",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "47",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "47",
                    "column": "2",
                    "severity": "warning",
                    "message": "'class def rcurly' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/333/WildcardPermission.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/codebuff/333/WildcardPermission.java\nindex 4531e140d82..f29ea07bf8a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/333/WildcardPermission.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/codebuff/333/WildcardPermission.java\n@@ -4,7 +4,6 @@ import java.time.Instant;\n import java.util.List;\n import java.util.Optional;\n import java.util.Set;\n-\n import com.bakdata.conquery.io.cps.CPSType;\n import com.fasterxml.jackson.annotation.JsonCreator;\n import lombok.Getter;\n@@ -15,35 +14,35 @@ import org.hibernate.validator.constraints.NotEmpty;\n  * Needed for (de)serialization with Jackson.\n  *\n  */\n+\n @SuppressWarnings(\"serial\")\n-@Getter\n-@Setter\n-@CPSType(id = \"WILDCARD_PERMISSION\", base = ConqueryPermission.class)\n+@Getter @Setter @CPSType(id=\"WILDCARD_PERMISSION\", base= ConqueryPermission.class)\n public class WildcardPermission extends org.apache.shiro.authz.permission.WildcardPermission implements ConqueryPermission {\n-\t\n-\tprivate final Instant creationTime;\n-\t\n-\t@JsonCreator\n-\tpublic WildcardPermission(SerializationContianer serCtx) {\n-\t\tthis.setParts(serCtx.getParts());\n-\t\t// Optional for backward compatibility TODO remove\n-\t\tcreationTime = Optional.ofNullable(serCtx.getCreationTime()).orElse(Instant.now());\t\n-\t}\n-\n-\tpublic WildcardPermission(String wildcardString){\n-\t\tsuper(wildcardString);\n-\t\tcreationTime = Instant.now();\n-\t}\n-\n-\tpublic List<Set<String>> getParts() {\n-\t\treturn super.getParts();\n-\t}\n-\t\n-\t@Getter @Setter\n-\tpublic static class SerializationContianer {\n-\t\t@NotEmpty\n-\t\tprivate List<Set<String>> parts;\n-\t\t// Commented for backward compatibility: @NotNull\n-\t\tprivate Instant creationTime;\n-\t}\n-}\n+\n+ private final Instant creationTime;\n+\n+ @JsonCreator\n+ public WildcardPermission(SerializationContianer serCtx) {\n+  this.setParts(serCtx.getParts());\n+  // Optional for backward compatibility TODO remove\n+  creationTime = Optional.ofNullable(serCtx.getCreationTime()).orElse(Instant.now());\n+ }\n+\n+ public WildcardPermission(String wildcardString) {\n+  super(wildcardString);\n+  creationTime = Instant.now();\n+ }\n+\n+ public List<Set<String>> getParts() {\n+  return super.getParts();\n+ }\n+\n+ @Getter @Setter\n+ public static class SerializationContianer {\n+\n+  @NotEmpty\n+  private List<Set<String>> parts;\n+  // Commented for backward compatibility: @NotNull\n+  private Instant creationTime;\n+ }\n+}\n\\ No newline at end of file\n",
            "diff_size": 33
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/333/WildcardPermission.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler_random/333/WildcardPermission.java\nindex 4531e140d82..31978090e2b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/333/WildcardPermission.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler_random/333/WildcardPermission.java\n@@ -27,7 +27,7 @@ public class WildcardPermission extends org.apache.shiro.authz.permission.Wildca\n \tpublic WildcardPermission(SerializationContianer serCtx) {\n \t\tthis.setParts(serCtx.getParts());\n \t\t// Optional for backward compatibility TODO remove\n-\t\tcreationTime = Optional.ofNullable(serCtx.getCreationTime()).orElse(Instant.now());\t\n+\t\tcreationTime = Optional.ofNullable (serCtx.getCreationTime()).orElse(Instant.now());\n \t}\n \n \tpublic WildcardPermission(String wildcardString){\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/333/WildcardPermission.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler_three_grams/333/WildcardPermission.java\nindex 4531e140d82..72507c9fb39 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/333/WildcardPermission.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler_three_grams/333/WildcardPermission.java\n@@ -27,7 +27,6 @@ public class WildcardPermission extends org.apache.shiro.authz.permission.Wildca\n \tpublic WildcardPermission(SerializationContianer serCtx) {\n \t\tthis.setParts(serCtx.getParts());\n \t\t// Optional for backward compatibility TODO remove\n-\t\tcreationTime = Optional.ofNullable(serCtx.getCreationTime()).orElse(Instant.now());\t\n \t}\n \n \tpublic WildcardPermission(String wildcardString){\n@@ -35,6 +34,11 @@ public class WildcardPermission extends org.apache.shiro.authz.permission.Wildca\n \t\tcreationTime = Instant.now();\n \t}\n \n+\tpublic public WildcardPermission(String wildcardString){\n+\t\tsuper(wildcardString);\n+\t\tcreationTime = Instant.now();\n+\t}\n+\n \tpublic List<Set<String>> getParts() {\n \t\treturn super.getParts();\n \t}\n",
            "diff_size": 6
        }
    ],
    "repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "intellij",
        "codebuff"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3988",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "34",
                    "column": "58",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "35",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "67",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "106",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3988/RelationshipIterator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3988/RelationshipIterator.java\nindex e342252a5f0..d686c364b99 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3988/RelationshipIterator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3988/RelationshipIterator.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.api.store;\n \n import org.neo4j.collection.primitive.PrimitiveLongCollections;\n@@ -26,32 +27,32 @@ import org.neo4j.kernel.impl.api.RelationshipVisitor;\n \n public interface RelationshipIterator extends PrimitiveLongIterator, RelationshipVisitor.Home\n {\n-    /**\n-     * Can be called to visit the data about the most recent id returned from {@link #next()}.\n-     */\n+  /**\n+   * Can be called to visit the data about the most recent id returned from {@link #next()}.\n+   */\n+  @Override\n+  <EXCEPTION extends Exception> boolean relationshipVisit(long relationshipId,\n+                                                          RelationshipVisitor<EXCEPTION> visitor) throws EXCEPTION;\n+\n+  class Empty extends PrimitiveLongCollections.PrimitiveLongBaseIterator implements RelationshipIterator\n+  {\n     @Override\n-    <EXCEPTION extends Exception> boolean relationshipVisit( long relationshipId,\n-            RelationshipVisitor<EXCEPTION> visitor ) throws EXCEPTION;\n+    public <EXCEPTION extends Exception> boolean relationshipVisit(long relationshipId,\n+                                                                   RelationshipVisitor<EXCEPTION> visitor)\n+    {   // Nothing to visit\n+      return false;\n+    }\n \n-    class Empty extends PrimitiveLongCollections.PrimitiveLongBaseIterator implements RelationshipIterator\n+    @Override\n+    protected boolean fetchNext()\n     {\n-        @Override\n-        public <EXCEPTION extends Exception> boolean relationshipVisit( long relationshipId,\n-                RelationshipVisitor<EXCEPTION> visitor )\n-        {   // Nothing to visit\n-            return false;\n-        }\n-\n-        @Override\n-        protected boolean fetchNext()\n-        {\n-            return false;\n-        }\n+      return false;\n     }\n+  }\n \n-    RelationshipIterator EMPTY = new Empty();\n+  RelationshipIterator EMPTY = new Empty();\n \n-    abstract class BaseIterator extends PrimitiveLongBaseIterator implements RelationshipIterator\n-    {\n-    }\n+  abstract class BaseIterator extends PrimitiveLongBaseIterator implements RelationshipIterator\n+  {\n+  }\n }\n",
            "diff_size": 34
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3988/RelationshipIterator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3988/RelationshipIterator.java\nindex e342252a5f0..7eccc0b3953 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3988/RelationshipIterator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3988/RelationshipIterator.java\n@@ -30,14 +30,12 @@ public interface RelationshipIterator extends PrimitiveLongIterator, Relationshi\n      * Can be called to visit the data about the most recent id returned from {@link #next()}.\n      */\n     @Override\n-    <EXCEPTION extends Exception> boolean relationshipVisit( long relationshipId,\n-            RelationshipVisitor<EXCEPTION> visitor ) throws EXCEPTION;\n+    <EXCEPTION extends Exception> boolean relationshipVisit( long relationshipId, RelationshipVisitor<EXCEPTION> visitor ) throws EXCEPTION;\n \n-    class Empty extends PrimitiveLongCollections.PrimitiveLongBaseIterator implements RelationshipIterator\n+class Empty extends PrimitiveLongCollections.PrimitiveLongBaseIterator implements RelationshipIterator\n     {\n         @Override\n-        public <EXCEPTION extends Exception> boolean relationshipVisit( long relationshipId,\n-                RelationshipVisitor<EXCEPTION> visitor )\n+        public <EXCEPTION extends Exception> boolean relationshipVisit( long relationshipId, RelationshipVisitor<EXCEPTION> visitor )\n         {   // Nothing to visit\n             return false;\n         }\n@@ -54,4 +52,4 @@ public interface RelationshipIterator extends PrimitiveLongIterator, Relationshi\n     abstract class BaseIterator extends PrimitiveLongBaseIterator implements RelationshipIterator\n     {\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
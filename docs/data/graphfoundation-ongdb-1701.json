{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1701",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "52",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "14",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1701/PagedWritableByteChannel.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1701/PagedWritableByteChannel.java\nindex 821ca9bca02..86fa4f7c12a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1701/PagedWritableByteChannel.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1701/PagedWritableByteChannel.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.io.pagecache.impl;\n \n import java.io.File;\n@@ -39,53 +40,54 @@ import org.neo4j.io.pagecache.PagedFile;\n  * <p>\n  * If this is undesired, then the file can be mapped with {@link java.nio.file.StandardOpenOption#TRUNCATE_EXISTING}\n  * to remove the existing data before writing to the file.\n+ *\n  * @see org.neo4j.io.pagecache.PageCache#map(File, int, OpenOption...)\n  */\n public final class PagedWritableByteChannel implements WritableByteChannel\n {\n-    private final PageCursor cursor;\n-    private boolean open = true;\n-    private int bytesLeftInCurrentPage;\n+  private final PageCursor cursor;\n+  private boolean open = true;\n+  private int bytesLeftInCurrentPage;\n \n-    public PagedWritableByteChannel( PagedFile pagedFile ) throws IOException\n-    {\n-        cursor = pagedFile.io( 0, PagedFile.PF_SHARED_WRITE_LOCK );\n-    }\n+  public PagedWritableByteChannel(PagedFile pagedFile) throws IOException\n+  {\n+    cursor = pagedFile.io(0, PagedFile.PF_SHARED_WRITE_LOCK);\n+  }\n \n-    @Override\n-    public int write( ByteBuffer src ) throws IOException\n+  @Override\n+  public int write(ByteBuffer src) throws IOException\n+  {\n+    if (!open)\n     {\n-        if ( !open )\n-        {\n-            throw new ClosedChannelException();\n-        }\n-        if ( bytesLeftInCurrentPage == 0 )\n-        {\n-            if ( !cursor.next() )\n-            {\n-                throw new IOException( \"Could not advance write cursor\" );\n-            }\n-            bytesLeftInCurrentPage = cursor.getCurrentPageSize();\n-        }\n-        int remaining = Math.min( src.remaining(), bytesLeftInCurrentPage );\n-        for ( int i = 0; i < remaining; i++ )\n-        {\n-            cursor.putByte( src.get() );\n-        }\n-        bytesLeftInCurrentPage -= remaining;\n-        return remaining;\n+      throw new ClosedChannelException();\n     }\n-\n-    @Override\n-    public boolean isOpen()\n+    if (bytesLeftInCurrentPage == 0)\n     {\n-        return open;\n+      if (!cursor.next())\n+      {\n+        throw new IOException(\"Could not advance write cursor\");\n+      }\n+      bytesLeftInCurrentPage = cursor.getCurrentPageSize();\n     }\n-\n-    @Override\n-    public void close()\n+    int remaining = Math.min(src.remaining(), bytesLeftInCurrentPage);\n+    for (int i = 0; i < remaining; i++)\n     {\n-        open = false;\n-        cursor.close();\n+      cursor.putByte(src.get());\n     }\n+    bytesLeftInCurrentPage -= remaining;\n+    return remaining;\n+  }\n+\n+  @Override\n+  public boolean isOpen()\n+  {\n+    return open;\n+  }\n+\n+  @Override\n+  public void close()\n+  {\n+    open = false;\n+    cursor.close();\n+  }\n }\n",
            "diff_size": 61
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1701/PagedWritableByteChannel.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1701/PagedWritableByteChannel.java\nindex 821ca9bca02..01ee208bcb2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1701/PagedWritableByteChannel.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1701/PagedWritableByteChannel.java\n@@ -59,20 +59,23 @@ public final class PagedWritableByteChannel implements WritableByteChannel\n         {\n             throw new ClosedChannelException();\n         }\n-        if ( bytesLeftInCurrentPage == 0 )\n+\n+if ( bytesLeftInCurrentPage == 0 )\n         {\n             if ( !cursor.next() )\n             {\n                 throw new IOException( \"Could not advance write cursor\" );\n             }\n-            bytesLeftInCurrentPage = cursor.getCurrentPageSize();\n+\n+bytesLeftInCurrentPage = cursor.getCurrentPageSize();\n         }\n         int remaining = Math.min( src.remaining(), bytesLeftInCurrentPage );\n         for ( int i = 0; i < remaining; i++ )\n         {\n             cursor.putByte( src.get() );\n         }\n-        bytesLeftInCurrentPage -= remaining;\n+\n+bytesLeftInCurrentPage -= remaining;\n         return remaining;\n     }\n \n@@ -88,4 +91,4 @@ public final class PagedWritableByteChannel implements WritableByteChannel\n         open = false;\n         cursor.close();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "cloudera-director-sdk",
    "error_id": "178",
    "information": {
        "errors": [
            {
                "line": "0",
                "severity": "error",
                "message": "Required pattern 'Cloudera copyright header' missing in file.",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
            }
        ]
    },
    "source_code": "// Licensed to Cloudera, Inc. under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/errored/1/178/TimeSeriesResponseList.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/intellij/178/TimeSeriesResponseList.java\nindex cf1eef0790f..d9842025aac 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/errored/1/178/TimeSeriesResponseList.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/intellij/178/TimeSeriesResponseList.java\n@@ -26,7 +26,9 @@ public class TimeSeriesResponseList {\n   private List<TimeSeriesResponse> responses;\n   /* Rows */\n   private List<TimeSeriesRow> rows;\n-  public TimeSeriesResponseList() { }\n+\n+  public TimeSeriesResponseList() {\n+  }\n \n   private TimeSeriesResponseList(List<TimeSeriesResponse> responses, List<TimeSeriesRow> rows) {\n     this.responses = responses;\n@@ -63,13 +65,15 @@ public class TimeSeriesResponseList {\n \n   public TimeSeriesResponseListBuilder toBuilder() {\n     return builder()\n-      .responses(responses)\n-      .rows(rows)\n-      ;\n+        .responses(responses)\n+        .rows(rows)\n+        ;\n   }\n+\n   public List<TimeSeriesResponse> getResponses() {\n     return responses;\n   }\n+\n   public void setResponses(List<TimeSeriesResponse> responses) {\n     this.responses = responses;\n   }\n@@ -77,23 +81,32 @@ public class TimeSeriesResponseList {\n   public List<TimeSeriesRow> getRows() {\n     return rows;\n   }\n+\n   public void setRows(List<TimeSeriesRow> rows) {\n     this.rows = rows;\n   }\n \n   @Override\n   public boolean equals(Object o) {\n-    if (this == o) return true;\n-    if (o == null || getClass() != o.getClass()) return false;\n+    if (this == o) {\n+      return true;\n+    }\n+    if (o == null || getClass() != o.getClass()) {\n+      return false;\n+    }\n \n     TimeSeriesResponseList other = (TimeSeriesResponseList) o; // NOPMD\n \n     if (responses != null ?\n         !responses.equals(other.responses) :\n-        other.responses != null) return false;\n+        other.responses != null) {\n+      return false;\n+    }\n     if (rows != null ?\n         !rows.equals(other.rows) :\n-        other.rows != null) return false;\n+        other.rows != null) {\n+      return false;\n+    }\n     return true;\n   }\n \n@@ -106,7 +119,7 @@ public class TimeSeriesResponseList {\n   }\n \n   @Override\n-  public String toString()  {\n+  public String toString() {\n     StringBuilder sb = new StringBuilder();\n     String newLine = System.getProperty(\"line.separator\");\n     sb.append(\"class TimeSeriesResponseList {\" + newLine);\n",
            "diff_size": 22
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                },
                {
                    "line": "79",
                    "column": "27",
                    "severity": "warning",
                    "message": "'?' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "81",
                    "column": "18",
                    "severity": "warning",
                    "message": "'?' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/errored/1/178/TimeSeriesResponseList.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/naturalize/178/TimeSeriesResponseList.java\nindex cf1eef0790f..563e4bb84d6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/errored/1/178/TimeSeriesResponseList.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/naturalize/178/TimeSeriesResponseList.java\n@@ -1,19 +1,4 @@\n-// Licensed to Cloudera, Inc. under one\n-// or more contributor license agreements.  See the NOTICE file\n-// distributed with this work for additional information\n-// regarding copyright ownership.  Cloudera, Inc. licenses this file\n-// to you under the Apache License, Version 2.0 (the\n-// \"License\"); you may not use this file except in compliance\n-// with the License.  You may obtain a copy of the License at\n-//\n-//     http://www.apache.org/licenses/LICENSE-2.0\n-//\n-// Unless required by applicable law or agreed to in writing, software\n-// distributed under the License is distributed on an \"AS IS\" BASIS,\n-// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n-// See the License for the specific language governing permissions and\n-// limitations under the License.\n-\n+// Licensed to Cloudera, Inc.\n // Note: This file is auto generated. Do not edit manually.\n \n package com.cloudera.director.client.v9.model;\n@@ -26,7 +11,8 @@ public class TimeSeriesResponseList {\n   private List<TimeSeriesResponse> responses;\n   /* Rows */\n   private List<TimeSeriesRow> rows;\n-  public TimeSeriesResponseList() { }\n+\n+public TimeSeriesResponseList() { }\n \n   private TimeSeriesResponseList(List<TimeSeriesResponse> responses, List<TimeSeriesRow> rows) {\n     this.responses = responses;\n@@ -43,7 +29,8 @@ public class TimeSeriesResponseList {\n   }\n \n   public static class TimeSeriesResponseListBuilder {\n-    private List<TimeSeriesResponse> responses = new ArrayList<TimeSeriesResponse>();\n+\n+  private List<TimeSeriesResponse> responses = new ArrayList<TimeSeriesResponse>();\n     private List<TimeSeriesRow> rows = new ArrayList<TimeSeriesRow>();\n \n     public TimeSeriesResponseListBuilder responses(List<TimeSeriesResponse> responses) {\n@@ -62,10 +49,8 @@ public class TimeSeriesResponseList {\n   }\n \n   public TimeSeriesResponseListBuilder toBuilder() {\n-    return builder()\n-      .responses(responses)\n-      .rows(rows)\n-      ;\n+    return builder().responses(responses)\n+      .rows(rows);\n   }\n   public List<TimeSeriesResponse> getResponses() {\n     return responses;\n@@ -84,16 +69,16 @@ public class TimeSeriesResponseList {\n   @Override\n   public boolean equals(Object o) {\n     if (this == o) return true;\n-    if (o == null || getClass() != o.getClass()) return false;\n+    if (o == null ||\n+getClass() != o.getClass()) return false;\n \n-    TimeSeriesResponseList other = (TimeSeriesResponseList) o; // NOPMD\n+    TimeSeriesResponseList other = (TimeSeriesResponseList) o;\n \n-    if (responses != null ?\n-        !responses.equals(other.responses) :\n-        other.responses != null) return false;\n-    if (rows != null ?\n-        !rows.equals(other.rows) :\n-        other.rows != null) return false;\n+// NOPMD\n+\n+    if (responses != null ?!responses.equals(other.responses) : other.responses != null) return false;\n+\n+if (rows != null ?!rows.equals(other.rows) : other.rows != null) return false;\n     return true;\n   }\n \n@@ -106,7 +91,7 @@ public class TimeSeriesResponseList {\n   }\n \n   @Override\n-  public String toString()  {\n+  public String toString() {\n     StringBuilder sb = new StringBuilder();\n     String newLine = System.getProperty(\"line.separator\");\n     sb.append(\"class TimeSeriesResponseList {\" + newLine);\n@@ -115,5 +100,4 @@ public class TimeSeriesResponseList {\n     sb.append(\"}\" + newLine);\n     return sb.toString();\n   }\n-}\n-\n+}\n\\ No newline at end of file\n",
            "diff_size": 36
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                },
                {
                    "line": "34",
                    "column": "35",
                    "severity": "warning",
                    "message": "'{' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "34",
                    "column": "36",
                    "severity": "warning",
                    "message": "'}' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "38",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 122).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "98",
                    "column": "18",
                    "severity": "warning",
                    "message": "'||' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "101",
                    "column": "59",
                    "severity": "warning",
                    "message": "'typecast' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "103",
                    "column": "26",
                    "severity": "warning",
                    "message": "'?' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "103",
                    "column": "26",
                    "severity": "warning",
                    "message": "'?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "103",
                    "column": "61",
                    "severity": "warning",
                    "message": "':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "104",
                    "column": "21",
                    "severity": "warning",
                    "message": "'?' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "104",
                    "column": "21",
                    "severity": "warning",
                    "message": "'?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "104",
                    "column": "46",
                    "severity": "warning",
                    "message": "':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "112",
                    "column": "16",
                    "severity": "warning",
                    "message": "'*' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "112",
                    "column": "16",
                    "severity": "warning",
                    "message": "'*' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "112",
                    "column": "44",
                    "severity": "warning",
                    "message": "'?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "112",
                    "column": "66",
                    "severity": "warning",
                    "message": "':' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "112",
                    "column": "66",
                    "severity": "warning",
                    "message": "':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "113",
                    "column": "16",
                    "severity": "warning",
                    "message": "'*' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "113",
                    "column": "16",
                    "severity": "warning",
                    "message": "'*' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "113",
                    "column": "39",
                    "severity": "warning",
                    "message": "'?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "113",
                    "column": "56",
                    "severity": "warning",
                    "message": "':' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "113",
                    "column": "56",
                    "severity": "warning",
                    "message": "':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/errored/1/178/TimeSeriesResponseList.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/codebuff/178/TimeSeriesResponseList.java\nindex cf1eef0790f..907b2fbf395 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/errored/1/178/TimeSeriesResponseList.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/codebuff/178/TimeSeriesResponseList.java\n@@ -21,29 +21,37 @@ package com.cloudera.director.client.v9.model;\n import java.util.ArrayList;\n import java.util.List;\n \n+\n public class TimeSeriesResponseList {\n   /* Responses */\n+\n   private List<TimeSeriesResponse> responses;\n   /* Rows */\n+\n   private List<TimeSeriesRow> rows;\n-  public TimeSeriesResponseList() { }\n+\n+\n+  public TimeSeriesResponseList() {}\n+\n \n   private TimeSeriesResponseList(List<TimeSeriesResponse> responses, List<TimeSeriesRow> rows) {\n-    this.responses = responses;\n-    this.rows = rows;\n-  }\n+                                                                                               this.responses = responses;\n+                                                                                               this.rows = rows;\n+                                    }\n \n   private TimeSeriesResponseList(TimeSeriesResponseListBuilder builder) {\n-    this.responses = builder.responses;\n-    this.rows = builder.rows;\n-  }\n+                                                                        this.responses = builder.responses;\n+                                                                        this.rows = builder.rows;\n+                                    }\n \n   public static TimeSeriesResponseListBuilder builder() {\n     return new TimeSeriesResponseListBuilder();\n   }\n \n   public static class TimeSeriesResponseListBuilder {\n+\n     private List<TimeSeriesResponse> responses = new ArrayList<TimeSeriesResponse>();\n+\n     private List<TimeSeriesRow> rows = new ArrayList<TimeSeriesRow>();\n \n     public TimeSeriesResponseListBuilder responses(List<TimeSeriesResponse> responses) {\n@@ -64,12 +72,13 @@ public class TimeSeriesResponseList {\n   public TimeSeriesResponseListBuilder toBuilder() {\n     return builder()\n       .responses(responses)\n-      .rows(rows)\n-      ;\n+      .rows(rows);\n   }\n+\n   public List<TimeSeriesResponse> getResponses() {\n     return responses;\n   }\n+\n   public void setResponses(List<TimeSeriesResponse> responses) {\n     this.responses = responses;\n   }\n@@ -77,43 +86,46 @@ public class TimeSeriesResponseList {\n   public List<TimeSeriesRow> getRows() {\n     return rows;\n   }\n+\n   public void setRows(List<TimeSeriesRow> rows) {\n     this.rows = rows;\n   }\n \n+\n   @Override\n   public boolean equals(Object o) {\n     if (this == o) return true;\n-    if (o == null || getClass() != o.getClass()) return false;\n+    if (o == null||\n+        getClass() != o.getClass()) return false;\n \n-    TimeSeriesResponseList other = (TimeSeriesResponseList) o; // NOPMD\n+    TimeSeriesResponseList other = (TimeSeriesResponseList)o; // NOPMD\n \n-    if (responses != null ?\n-        !responses.equals(other.responses) :\n-        other.responses != null) return false;\n-    if (rows != null ?\n-        !rows.equals(other.rows) :\n-        other.rows != null) return false;\n+    if (responses != null?!responses.equals(other.responses): other.responses != null) return false;\n+    if (rows != null?!rows.equals(other.rows): other.rows != null) return false;\n     return true;\n   }\n \n+\n   @Override\n   public int hashCode() {\n     int result = 0;\n-    result = 31 * result + (responses != null ? responses.hashCode() : 0);\n-    result = 31 * result + (rows != null ? rows.hashCode() : 0);\n+    result = 31*result + (responses != null? responses.hashCode():0);\n+    result = 31*result + (rows != null? rows.hashCode():0);\n     return result;\n   }\n \n+\n   @Override\n-  public String toString()  {\n+  public String toString() {\n     StringBuilder sb = new StringBuilder();\n+\n     String newLine = System.getProperty(\"line.separator\");\n     sb.append(\"class TimeSeriesResponseList {\" + newLine);\n-    sb.append(\"  responses: \").append(responses).append(newLine);\n-    sb.append(\"  rows: \").append(rows).append(newLine);\n+    sb.append(\"  responses: \")\n+      .append(responses).append(newLine);\n+    sb.append(\"  rows: \")\n+      .append(rows).append(newLine);\n     sb.append(\"}\" + newLine);\n     return sb.toString();\n   }\n-}\n-\n+}\n\\ No newline at end of file\n",
            "diff_size": 42
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
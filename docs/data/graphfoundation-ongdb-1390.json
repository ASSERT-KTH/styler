{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1390",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "41",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "107",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "61",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "91",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "64",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "111",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "85",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1390/ExecutionSupervisors.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1390/ExecutionSupervisors.java\nindex 07726df2f6f..395a5e0b807 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1390/ExecutionSupervisors.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1390/ExecutionSupervisors.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.unsafe.impl.batchimport.staging;\n \n import org.neo4j.time.Clocks;\n@@ -27,84 +28,85 @@ import org.neo4j.unsafe.impl.batchimport.Configuration;\n  */\n public class ExecutionSupervisors\n {\n-    private ExecutionSupervisors()\n-    {\n-    }\n+  private ExecutionSupervisors()\n+  {\n+  }\n \n-    /**\n-     * Using an {@link ExecutionMonitors#invisible() invisible} monitor.\n-     * @param stage {@link Stage} to supervise.\n-     * @see #superviseDynamicExecution(ExecutionMonitor, Stage)\n-     */\n-    public static void superviseDynamicExecution( Stage stage )\n-    {\n-        superviseDynamicExecution( ExecutionMonitors.invisible(), stage );\n-    }\n+  /**\n+   * Using an {@link ExecutionMonitors#invisible() invisible} monitor.\n+   *\n+   * @param stage {@link Stage} to supervise.\n+   * @see #superviseDynamicExecution(ExecutionMonitor, Stage)\n+   */\n+  public static void superviseDynamicExecution(Stage stage)\n+  {\n+    superviseDynamicExecution(ExecutionMonitors.invisible(), stage);\n+  }\n \n-    /**\n-     * With {@link Configuration#DEFAULT}.\n-     * @param monitor {@link ExecutionMonitor} notifying user about progress.\n-     * @param stage {@link Stage} to supervise.\n-     * @see #superviseDynamicExecution(ExecutionMonitor, Configuration, Stage)\n-     */\n-    public static void superviseDynamicExecution( ExecutionMonitor monitor, Stage stage )\n-    {\n-        superviseDynamicExecution( monitor, Configuration.DEFAULT, stage );\n-    }\n+  /**\n+   * With {@link Configuration#DEFAULT}.\n+   *\n+   * @param monitor {@link ExecutionMonitor} notifying user about progress.\n+   * @param stage   {@link Stage} to supervise.\n+   * @see #superviseDynamicExecution(ExecutionMonitor, Configuration, Stage)\n+   */\n+  public static void superviseDynamicExecution(ExecutionMonitor monitor, Stage stage)\n+  {\n+    superviseDynamicExecution(monitor, Configuration.DEFAULT, stage);\n+  }\n \n-    /**\n-     * Supervises an execution with the given monitor AND a {@link DynamicProcessorAssigner} to give\n-     * the execution a dynamic and optimal nature.\n-     * @param monitor {@link ExecutionMonitor} notifying user about progress.\n-     * @param config {@link Configuration} of the import.\n-     * @param stage {@link Stage} to supervise.\n-     *\n-     * @see #superviseExecution(ExecutionMonitor, Configuration, Stage)\n-     */\n-    public static void superviseDynamicExecution( ExecutionMonitor monitor, Configuration config, Stage stage )\n-    {\n-        superviseExecution( withDynamicProcessorAssignment( monitor, config ), config, stage );\n-    }\n+  /**\n+   * Supervises an execution with the given monitor AND a {@link DynamicProcessorAssigner} to give\n+   * the execution a dynamic and optimal nature.\n+   *\n+   * @param monitor {@link ExecutionMonitor} notifying user about progress.\n+   * @param config  {@link Configuration} of the import.\n+   * @param stage   {@link Stage} to supervise.\n+   * @see #superviseExecution(ExecutionMonitor, Configuration, Stage)\n+   */\n+  public static void superviseDynamicExecution(ExecutionMonitor monitor, Configuration config, Stage stage)\n+  {\n+    superviseExecution(withDynamicProcessorAssignment(monitor, config), config, stage);\n+  }\n \n-    /**\n-     * Executes a number of stages simultaneously, letting the given {@code monitor} get insight into the\n-     * execution.\n-     *\n-     * @param monitor {@link ExecutionMonitor} to get insight into the execution.\n-     * @param config {@link Configuration} for the execution.\n-     * @param stage {@link Stage stages} to execute.\n-     */\n-    public static void superviseExecution( ExecutionMonitor monitor, Configuration config, Stage stage )\n+  /**\n+   * Executes a number of stages simultaneously, letting the given {@code monitor} get insight into the\n+   * execution.\n+   *\n+   * @param monitor {@link ExecutionMonitor} to get insight into the execution.\n+   * @param config  {@link Configuration} for the execution.\n+   * @param stage   {@link Stage stages} to execute.\n+   */\n+  public static void superviseExecution(ExecutionMonitor monitor, Configuration config, Stage stage)\n+  {\n+    ExecutionSupervisor supervisor = new ExecutionSupervisor(Clocks.systemClock(), monitor);\n+    StageExecution execution = null;\n+    try\n     {\n-        ExecutionSupervisor supervisor = new ExecutionSupervisor( Clocks.systemClock(), monitor );\n-        StageExecution execution = null;\n-        try\n-        {\n-            execution = stage.execute();\n-            supervisor.supervise( execution );\n-        }\n-        finally\n-        {\n-            stage.close();\n-            if ( execution != null )\n-            {\n-                execution.assertHealthy();\n-            }\n-        }\n-    }\n-\n-    /**\n-     * Decorates an {@link ExecutionMonitor} with a {@link DynamicProcessorAssigner} responsible for\n-     * constantly assigning and reevaluating an optimal number of processors to all individual steps.\n-     *\n-     * @param monitor {@link ExecutionMonitor} to decorate.\n-     * @param config {@link Configuration} that the {@link DynamicProcessorAssigner} will use. Max total processors\n-     * in a {@link Stage} will be the smallest of that value and {@link Runtime#availableProcessors()}.\n-     * @return the decorated monitor with dynamic processor assignment capabilities.\n-     */\n-    public static ExecutionMonitor withDynamicProcessorAssignment( ExecutionMonitor monitor, Configuration config )\n+      execution = stage.execute();\n+      supervisor.supervise(execution);\n+    } finally\n     {\n-        DynamicProcessorAssigner dynamicProcessorAssigner = new DynamicProcessorAssigner( config );\n-        return new MultiExecutionMonitor( monitor, dynamicProcessorAssigner );\n+      stage.close();\n+      if (execution != null)\n+      {\n+        execution.assertHealthy();\n+      }\n     }\n+  }\n+\n+  /**\n+   * Decorates an {@link ExecutionMonitor} with a {@link DynamicProcessorAssigner} responsible for\n+   * constantly assigning and reevaluating an optimal number of processors to all individual steps.\n+   *\n+   * @param monitor {@link ExecutionMonitor} to decorate.\n+   * @param config  {@link Configuration} that the {@link DynamicProcessorAssigner} will use. Max total processors\n+   *                in a {@link Stage} will be the smallest of that value and {@link Runtime#availableProcessors()}.\n+   * @return the decorated monitor with dynamic processor assignment capabilities.\n+   */\n+  public static ExecutionMonitor withDynamicProcessorAssignment(ExecutionMonitor monitor, Configuration config)\n+  {\n+    DynamicProcessorAssigner dynamicProcessorAssigner = new DynamicProcessorAssigner(config);\n+    return new MultiExecutionMonitor(monitor, dynamicProcessorAssigner);\n+  }\n }\n",
            "diff_size": 99
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1390/ExecutionSupervisors.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1390/ExecutionSupervisors.java\nindex 07726df2f6f..146b9a9f06a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1390/ExecutionSupervisors.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1390/ExecutionSupervisors.java\n@@ -107,4 +107,4 @@ public class ExecutionSupervisors\n         DynamicProcessorAssigner dynamicProcessorAssigner = new DynamicProcessorAssigner( config );\n         return new MultiExecutionMonitor( monitor, dynamicProcessorAssigner );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2824",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "45",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "16",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "92",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2824/PhysicalTransactionCursor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2824/PhysicalTransactionCursor.java\nindex f35e8d92efa..78bb81b64f1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2824/PhysicalTransactionCursor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2824/PhysicalTransactionCursor.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.transaction.log;\n \n import java.io.IOException;\n@@ -33,96 +34,96 @@ import org.neo4j.kernel.impl.transaction.log.entry.LogEntryStart;\n import org.neo4j.storageengine.api.StorageCommand;\n \n public class PhysicalTransactionCursor<T extends ReadableClosablePositionAwareChannel>\n-        implements TransactionCursor\n+    implements TransactionCursor\n {\n-    private final T channel;\n-    private final LogEntryCursor logEntryCursor;\n-    private final LogPositionMarker lastGoodPositionMarker = new LogPositionMarker();\n-\n-    private CommittedTransactionRepresentation current;\n-\n-    public PhysicalTransactionCursor( T channel, LogEntryReader<T> entryReader ) throws IOException\n-    {\n-        this.channel = channel;\n-        channel.getCurrentPosition( lastGoodPositionMarker );\n-        this.logEntryCursor =\n-                new LogEntryCursor( (LogEntryReader<ReadableClosablePositionAwareChannel>) entryReader, channel );\n-    }\n-\n-    @Override\n-    public CommittedTransactionRepresentation get()\n-    {\n-        return current;\n-    }\n-\n-    @Override\n-    public boolean next() throws IOException\n+  private final T channel;\n+  private final LogEntryCursor logEntryCursor;\n+  private final LogPositionMarker lastGoodPositionMarker = new LogPositionMarker();\n+\n+  private CommittedTransactionRepresentation current;\n+\n+  public PhysicalTransactionCursor(T channel, LogEntryReader<T> entryReader) throws IOException\n+  {\n+    this.channel = channel;\n+    channel.getCurrentPosition(lastGoodPositionMarker);\n+    this.logEntryCursor =\n+        new LogEntryCursor((LogEntryReader<ReadableClosablePositionAwareChannel>) entryReader, channel);\n+  }\n+\n+  @Override\n+  public CommittedTransactionRepresentation get()\n+  {\n+    return current;\n+  }\n+\n+  @Override\n+  public boolean next() throws IOException\n+  {\n+    // Clear the previous deserialized transaction so that it won't have to be kept in heap while deserializing\n+    // the next one. Could be problematic if both are really big.\n+    current = null;\n+\n+    while (true)\n     {\n-        // Clear the previous deserialized transaction so that it won't have to be kept in heap while deserializing\n-        // the next one. Could be problematic if both are really big.\n-        current = null;\n-\n-        while ( true )\n+      if (!logEntryCursor.next())\n+      {\n+        return false;\n+      }\n+\n+      LogEntry entry = logEntryCursor.get();\n+      if (entry instanceof CheckPoint)\n+      {\n+        // this is a good position anyhow\n+        channel.getCurrentPosition(lastGoodPositionMarker);\n+        continue;\n+      }\n+\n+      assert entry instanceof LogEntryStart : \"Expected Start entry, read \" + entry + \" instead\";\n+      LogEntryStart startEntry = entry.as();\n+      LogEntryCommit commitEntry;\n+\n+      List<StorageCommand> entries = new ArrayList<>();\n+      while (true)\n+      {\n+        if (!logEntryCursor.next())\n         {\n-            if ( !logEntryCursor.next() )\n-            {\n-                return false;\n-            }\n-\n-            LogEntry entry = logEntryCursor.get();\n-            if ( entry instanceof CheckPoint )\n-            {\n-                // this is a good position anyhow\n-                channel.getCurrentPosition( lastGoodPositionMarker );\n-                continue;\n-            }\n-\n-            assert entry instanceof LogEntryStart : \"Expected Start entry, read \" + entry + \" instead\";\n-            LogEntryStart startEntry = entry.as();\n-            LogEntryCommit commitEntry;\n-\n-            List<StorageCommand> entries = new ArrayList<>();\n-            while ( true )\n-            {\n-                if ( !logEntryCursor.next() )\n-                {\n-                    return false;\n-                }\n-\n-                entry = logEntryCursor.get();\n-                if ( entry instanceof LogEntryCommit )\n-                {\n-                    commitEntry = entry.as();\n-                    break;\n-                }\n-\n-                LogEntryCommand command = entry.as();\n-                entries.add( command.getCommand() );\n-            }\n-\n-            PhysicalTransactionRepresentation transaction = new PhysicalTransactionRepresentation( entries );\n-            transaction.setHeader( startEntry.getAdditionalHeader(), startEntry.getMasterId(),\n-                    startEntry.getLocalId(), startEntry.getTimeWritten(),\n-                    startEntry.getLastCommittedTxWhenTransactionStarted(), commitEntry.getTimeWritten(), -1 );\n-            current = new CommittedTransactionRepresentation( startEntry, transaction, commitEntry );\n-            channel.getCurrentPosition( lastGoodPositionMarker );\n-            return true;\n+          return false;\n         }\n-    }\n \n-    @Override\n-    public void close() throws IOException\n-    {\n-        logEntryCursor.close();\n-    }\n+        entry = logEntryCursor.get();\n+        if (entry instanceof LogEntryCommit)\n+        {\n+          commitEntry = entry.as();\n+          break;\n+        }\n \n-    /**\n-     * @return last known good position, which is a {@link LogPosition} after a {@link CheckPoint} or\n-     * a {@link LogEntryCommit}.\n-     */\n-    @Override\n-    public LogPosition position()\n-    {\n-        return lastGoodPositionMarker.newPosition();\n+        LogEntryCommand command = entry.as();\n+        entries.add(command.getCommand());\n+      }\n+\n+      PhysicalTransactionRepresentation transaction = new PhysicalTransactionRepresentation(entries);\n+      transaction.setHeader(startEntry.getAdditionalHeader(), startEntry.getMasterId(),\n+          startEntry.getLocalId(), startEntry.getTimeWritten(),\n+          startEntry.getLastCommittedTxWhenTransactionStarted(), commitEntry.getTimeWritten(), -1);\n+      current = new CommittedTransactionRepresentation(startEntry, transaction, commitEntry);\n+      channel.getCurrentPosition(lastGoodPositionMarker);\n+      return true;\n     }\n+  }\n+\n+  @Override\n+  public void close() throws IOException\n+  {\n+    logEntryCursor.close();\n+  }\n+\n+  /**\n+   * @return last known good position, which is a {@link LogPosition} after a {@link CheckPoint} or\n+   * a {@link LogEntryCommit}.\n+   */\n+  @Override\n+  public LogPosition position()\n+  {\n+    return lastGoodPositionMarker.newPosition();\n+  }\n }\n",
            "diff_size": 129
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "102",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 239).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2824/PhysicalTransactionCursor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2824/PhysicalTransactionCursor.java\nindex f35e8d92efa..5fdcbcb596a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2824/PhysicalTransactionCursor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2824/PhysicalTransactionCursor.java\n@@ -32,8 +32,7 @@ import org.neo4j.kernel.impl.transaction.log.entry.LogEntryReader;\n import org.neo4j.kernel.impl.transaction.log.entry.LogEntryStart;\n import org.neo4j.storageengine.api.StorageCommand;\n \n-public class PhysicalTransactionCursor<T extends ReadableClosablePositionAwareChannel>\n-        implements TransactionCursor\n+public class PhysicalTransactionCursor<T extends ReadableClosablePositionAwareChannel> implements TransactionCursor\n {\n     private final T channel;\n     private final LogEntryCursor logEntryCursor;\n@@ -45,8 +44,7 @@ public class PhysicalTransactionCursor<T extends ReadableClosablePositionAwareCh\n     {\n         this.channel = channel;\n         channel.getCurrentPosition( lastGoodPositionMarker );\n-        this.logEntryCursor =\n-                new LogEntryCursor( (LogEntryReader<ReadableClosablePositionAwareChannel>) entryReader, channel );\n+        this.logEntryCursor = new LogEntryCursor( (LogEntryReader<ReadableClosablePositionAwareChannel>) entryReader, channel );\n     }\n \n     @Override\n@@ -101,10 +99,8 @@ public class PhysicalTransactionCursor<T extends ReadableClosablePositionAwareCh\n             }\n \n             PhysicalTransactionRepresentation transaction = new PhysicalTransactionRepresentation( entries );\n-            transaction.setHeader( startEntry.getAdditionalHeader(), startEntry.getMasterId(),\n-                    startEntry.getLocalId(), startEntry.getTimeWritten(),\n-                    startEntry.getLastCommittedTxWhenTransactionStarted(), commitEntry.getTimeWritten(), -1 );\n-            current = new CommittedTransactionRepresentation( startEntry, transaction, commitEntry );\n+            transaction.setHeader( startEntry.getAdditionalHeader(), startEntry.getMasterId(), startEntry.getLocalId(), startEntry.getTimeWritten(), startEntry.getLastCommittedTxWhenTransactionStarted(), commitEntry.getTimeWritten(), -1 );\n+current = new CommittedTransactionRepresentation( startEntry, transaction, commitEntry );\n             channel.getCurrentPosition( lastGoodPositionMarker );\n             return true;\n         }\n@@ -125,4 +121,4 @@ public class PhysicalTransactionCursor<T extends ReadableClosablePositionAwareCh\n     {\n         return lastGoodPositionMarker.newPosition();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
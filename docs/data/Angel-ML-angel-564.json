{
    "project_name": "Angel-ML-angel",
    "error_id": "564",
    "information": {
        "errors": [
            {
                "line": "6",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 102).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * Copyright (C) 2017-2018 THL A29 Limited, a Tencent company. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in\n * compliance with the License. You may obtain a copy of the License at\n *\n * https://opensource.org/licenses/Apache-2.0",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/564/InitNodeFeatsParam.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/564/InitNodeFeatsParam.java\nindex 51d12a0df2e..e9ccd2a076c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/564/InitNodeFeatsParam.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/564/InitNodeFeatsParam.java\n@@ -14,6 +14,7 @@\n  * the License.\n  *\n  */\n+\n package com.tencent.angel.graph.client.initnodefeats4;\n \n import com.tencent.angel.PartitionKey;\n",
            "diff_size": 1
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "69",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/564/InitNodeFeatsParam.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/564/InitNodeFeatsParam.java\nindex 51d12a0df2e..57dd79bc9b8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/564/InitNodeFeatsParam.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/564/InitNodeFeatsParam.java\n@@ -66,10 +66,9 @@ public class InitNodeFeatsParam extends UpdateParam {\n     List<PartitionKey> parts = PSAgentContext.get().getMatrixMetaManager().getPartitions(matrixId);\n \n     if (!RowUpdateSplitUtils.isInRange(keys, index, parts)) {\n-      throw new AngelException(\n-          \"node id is not in range [\" + parts.get(0).getStartCol() + \", \" + parts\n+      throw new AngelException(\"node id is not in range [\" + parts.get(0).getStartCol() + \", \" + parts\n               .get(parts.size() - 1).getEndCol());\n-    }\n+  }\n \n     int nodeIndex = startIndex;\n     int partIndex = 0;\n@@ -94,4 +93,4 @@ public class InitNodeFeatsParam extends UpdateParam {\n     return params;\n   }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "67",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 138).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "81",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 156).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/564/InitNodeFeatsParam.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/564/InitNodeFeatsParam.java\nindex 51d12a0df2e..6d9b2a0131d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/564/InitNodeFeatsParam.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/564/InitNodeFeatsParam.java\n@@ -61,14 +61,10 @@ public class InitNodeFeatsParam extends UpdateParam {\n       index[i] = i + startIndex;\n     }\n     IntArrays.quickSort(index, comparator);\n-\n     List<PartitionUpdateParam> params = new ArrayList<>();\n     List<PartitionKey> parts = PSAgentContext.get().getMatrixMetaManager().getPartitions(matrixId);\n-\n     if (!RowUpdateSplitUtils.isInRange(keys, index, parts)) {\n-      throw new AngelException(\n-          \"node id is not in range [\" + parts.get(0).getStartCol() + \", \" + parts\n-              .get(parts.size() - 1).getEndCol());\n+      throw new AngelException(\"node id is not in range [\" + parts.get(0).getStartCol() + \", \" + parts.get(parts.size() - 1).getEndCol());\n     }\n \n     int nodeIndex = startIndex;\n@@ -82,16 +78,11 @@ public class InitNodeFeatsParam extends UpdateParam {\n       }\n \n       if (length > 0) {\n-        params.add(new InitNodeFeatsPartParam(matrixId,\n-            parts.get(partIndex), keys, feats, index,\n-            nodeIndex - length - startIndex,\n-            nodeIndex - startIndex));\n+        params.add(new InitNodeFeatsPartParam(matrixId, parts.get(partIndex), keys, feats, index, nodeIndex - length - startIndex, nodeIndex - startIndex));\n       }\n-\n       partIndex++;\n     }\n-\n     return params;\n   }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 12
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
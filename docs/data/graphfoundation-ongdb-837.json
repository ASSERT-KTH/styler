{
    "project_name": "graphfoundation-ongdb",
    "error_id": "837",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "42",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/837/NoRecordFormat.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/837/NoRecordFormat.java\nindex 7eeda25cdd0..0fde2c2066c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/837/NoRecordFormat.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/837/NoRecordFormat.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.store.format.standard;\n \n import java.io.IOException;\n@@ -31,55 +32,55 @@ import org.neo4j.kernel.impl.store.record.RecordLoad;\n \n public class NoRecordFormat<RECORD extends AbstractBaseRecord> implements RecordFormat<RECORD>\n {\n-    @Override\n-    public RECORD newRecord()\n-    {\n-        return null;\n-    }\n+  @Override\n+  public RECORD newRecord()\n+  {\n+    return null;\n+  }\n \n-    @Override\n-    public int getRecordSize( StoreHeader storeHeader )\n-    {\n-        return NO_RECORD_SIZE;\n-    }\n+  @Override\n+  public int getRecordSize(StoreHeader storeHeader)\n+  {\n+    return NO_RECORD_SIZE;\n+  }\n \n-    @Override\n-    public int getRecordHeaderSize()\n-    {\n-        return 0;\n-    }\n+  @Override\n+  public int getRecordHeaderSize()\n+  {\n+    return 0;\n+  }\n \n-    @Override\n-    public boolean isInUse( PageCursor cursor )\n-    {\n-        return false;\n-    }\n+  @Override\n+  public boolean isInUse(PageCursor cursor)\n+  {\n+    return false;\n+  }\n \n-    @Override\n-    public void read( RECORD record, PageCursor cursor, RecordLoad mode, int recordSize )\n-    {\n-        record.clear();\n-    }\n+  @Override\n+  public void read(RECORD record, PageCursor cursor, RecordLoad mode, int recordSize)\n+  {\n+    record.clear();\n+  }\n \n-    @Override\n-    public void prepare( RECORD record, int recordSize, IdSequence idSequence )\n-    {\n-    }\n+  @Override\n+  public void prepare(RECORD record, int recordSize, IdSequence idSequence)\n+  {\n+  }\n \n-    @Override\n-    public void write( RECORD record, PageCursor cursor, int recordSize )\n-    {\n-    }\n+  @Override\n+  public void write(RECORD record, PageCursor cursor, int recordSize)\n+  {\n+  }\n \n-    @Override\n-    public long getNextRecordReference( RECORD record )\n-    {\n-        return Record.NULL_REFERENCE.intValue();\n-    }\n+  @Override\n+  public long getNextRecordReference(RECORD record)\n+  {\n+    return Record.NULL_REFERENCE.intValue();\n+  }\n \n-    @Override\n-    public long getMaxId()\n-    {\n-        return 0;\n-    }\n+  @Override\n+  public long getMaxId()\n+  {\n+    return 0;\n+  }\n }\n",
            "diff_size": 44
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/837/NoRecordFormat.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/837/NoRecordFormat.java\nindex 7eeda25cdd0..523dc3e121d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/837/NoRecordFormat.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/837/NoRecordFormat.java\n@@ -82,4 +82,4 @@ public class NoRecordFormat<RECORD extends AbstractBaseRecord> implements Record\n     {\n         return 0;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3391",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "28",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "28",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "32",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "32",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3391/RecordReference.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3391/RecordReference.java\nindex 165579fcd05..c3069244dbe 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3391/RecordReference.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3391/RecordReference.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.consistency.store;\n \n import org.neo4j.consistency.report.PendingReferenceCheck;\n@@ -24,33 +25,33 @@ import org.neo4j.kernel.impl.store.record.AbstractBaseRecord;\n \n public interface RecordReference<RECORD extends AbstractBaseRecord>\n {\n-    void dispatch( PendingReferenceCheck<RECORD> reporter );\n+  void dispatch(PendingReferenceCheck<RECORD> reporter);\n+\n+  class SkippingReference<RECORD extends AbstractBaseRecord> implements RecordReference<RECORD>\n+  {\n+    @SuppressWarnings(\"unchecked\")\n+    public static <RECORD extends AbstractBaseRecord> SkippingReference<RECORD> skipReference()\n+    {\n+      return INSTANCE;\n+    }\n+\n+    @Override\n+    public void dispatch(PendingReferenceCheck<RECORD> reporter)\n+    {\n+      reporter.skip();\n+    }\n+\n+    @Override\n+    public String toString()\n+    {\n+      return \"SkipReference\";\n+    }\n+\n+    private static final SkippingReference INSTANCE = new SkippingReference();\n \n-    class SkippingReference<RECORD extends AbstractBaseRecord> implements RecordReference<RECORD>\n+    private SkippingReference()\n     {\n-        @SuppressWarnings( \"unchecked\" )\n-        public static <RECORD extends AbstractBaseRecord> SkippingReference<RECORD> skipReference()\n-        {\n-            return INSTANCE;\n-        }\n-\n-        @Override\n-        public void dispatch( PendingReferenceCheck<RECORD> reporter )\n-        {\n-            reporter.skip();\n-        }\n-\n-        @Override\n-        public String toString()\n-        {\n-            return \"SkipReference\";\n-        }\n-\n-        private static final SkippingReference INSTANCE = new SkippingReference();\n-\n-        private SkippingReference()\n-        {\n-            // singleton\n-        }\n+      // singleton\n     }\n+  }\n }\n",
            "diff_size": 50
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3391/RecordReference.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3391/RecordReference.java\nindex 165579fcd05..b245f715cb9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3391/RecordReference.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3391/RecordReference.java\n@@ -53,4 +53,4 @@ public interface RecordReference<RECORD extends AbstractBaseRecord>\n             // singleton\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "30",
                    "column": "29",
                    "severity": "error",
                    "message": "'<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "32",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3391/RecordReference.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/3391/RecordReference.java\nindex 165579fcd05..4dde26b26cf 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3391/RecordReference.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/3391/RecordReference.java\n@@ -24,11 +24,12 @@ import org.neo4j.kernel.impl.store.record.AbstractBaseRecord;\n \n public interface RecordReference<RECORD extends AbstractBaseRecord>\n {\n-    void dispatch( PendingReferenceCheck<RECORD> reporter );\n+    void dispatch( PendingReferenceCheck<RECORD> reporter )\n+    ;\n \n-    class SkippingReference<RECORD extends AbstractBaseRecord> implements RecordReference<RECORD>\n+    class SkippingReference <RECORD extends AbstractBaseRecord> implements RecordReference<RECORD>\n     {\n-        @SuppressWarnings( \"unchecked\" )\n+        @ SuppressWarnings( \"unchecked\")\n         public static <RECORD extends AbstractBaseRecord> SkippingReference<RECORD> skipReference()\n         {\n             return INSTANCE;\n@@ -53,4 +54,5 @@ public interface RecordReference<RECORD extends AbstractBaseRecord>\n             // singleton\n         }\n     }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
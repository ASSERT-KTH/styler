{
    "project_name": "apache-iotdb",
    "error_id": "369",
    "information": {
        "errors": [
            {
                "line": "19",
                "severity": "warning",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * under the License.\n */\npackage org.apache.iotdb.cluster.log.manage.serializable;\n\nimport org.apache.iotdb.tsfile.utils.ReadWriteIOUtils;\n",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/369/LogManagerMeta.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler/369/LogManagerMeta.java\nindex 409aabfd581..908bf5b33f1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/369/LogManagerMeta.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler/369/LogManagerMeta.java\n@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n package org.apache.iotdb.cluster.log.manage.serializable;\n \n import org.apache.iotdb.tsfile.utils.ReadWriteIOUtils;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/369/LogManagerMeta.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/intellij/369/LogManagerMeta.java\nindex 409aabfd581..908bf5b33f1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/369/LogManagerMeta.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/intellij/369/LogManagerMeta.java\n@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n package org.apache.iotdb.cluster.log.manage.serializable;\n \n import org.apache.iotdb.tsfile.utils.ReadWriteIOUtils;\n",
            "diff_size": 1
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "19",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "33",
                    "severity": "warning",
                    "message": "'METHOD_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "66",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "67",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "68",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "69",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "70",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "71",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "72",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "73",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "74",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "114",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 272).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "120",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 150).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/369/LogManagerMeta.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/codebuff/369/LogManagerMeta.java\nindex 409aabfd581..edebff0dc7f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/369/LogManagerMeta.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/codebuff/369/LogManagerMeta.java\n@@ -19,10 +19,8 @@\n package org.apache.iotdb.cluster.log.manage.serializable;\n \n import org.apache.iotdb.tsfile.utils.ReadWriteIOUtils;\n-\n import org.apache.commons.lang3.builder.EqualsBuilder;\n import org.apache.commons.lang3.builder.HashCodeBuilder;\n-\n import java.nio.ByteBuffer;\n \n public class LogManagerMeta {\n@@ -32,7 +30,6 @@ public class LogManagerMeta {\n   private long lastLogIndex = -1;\n   private long lastLogTerm = -1;\n   private long maxHaveAppliedCommitIndex = -1;\n-\n   public static LogManagerMeta deserialize(ByteBuffer buffer) {\n     LogManagerMeta res = new LogManagerMeta();\n     res.commitLogTerm = ReadWriteIOUtils.readLong(buffer);\n@@ -40,7 +37,6 @@ public class LogManagerMeta {\n     res.lastLogIndex = ReadWriteIOUtils.readLong(buffer);\n     res.lastLogTerm = ReadWriteIOUtils.readLong(buffer);\n     res.maxHaveAppliedCommitIndex = ReadWriteIOUtils.readLong(buffer);\n-\n     return res;\n   }\n \n@@ -60,25 +56,22 @@ public class LogManagerMeta {\n     byteBuffer.putLong(lastLogIndex);\n     byteBuffer.putLong(lastLogTerm);\n     byteBuffer.putLong(maxHaveAppliedCommitIndex);\n-\n     byteBuffer.flip();\n     return byteBuffer;\n   }\n \n   @Override\n   public String toString() {\n-    return \"LogManagerMeta{\"\n-        + \" commitLogTerm=\"\n-        + commitLogTerm\n-        + \", commitLogIndex=\"\n-        + commitLogIndex\n-        + \", lastLogIndex=\"\n-        + lastLogIndex\n-        + \", lastLogTerm=\"\n-        + lastLogTerm\n-        + \", maxHaveAppliedCommitIndex=\"\n-        + maxHaveAppliedCommitIndex\n-        + \"}\";\n+    return \"LogManagerMeta{\" + \" commitLogTerm=\"\n+    + commitLogTerm\n+    + \", commitLogIndex=\"\n+    + commitLogIndex\n+    + \", lastLogIndex=\"\n+    + lastLogIndex\n+    + \", lastLogTerm=\"\n+    + lastLogTerm\n+    + \", maxHaveAppliedCommitIndex=\"\n+    + maxHaveAppliedCommitIndex + \"}\";\n   }\n \n   public long getLastLogIndex() {\n@@ -114,30 +107,16 @@ public class LogManagerMeta {\n     if (this == o) {\n       return true;\n     }\n-\n     if (!(o instanceof LogManagerMeta)) {\n       return false;\n     }\n-\n     LogManagerMeta that = (LogManagerMeta) o;\n-\n-    return new EqualsBuilder()\n-        .append(commitLogIndex, that.commitLogIndex)\n-        .append(lastLogIndex, that.lastLogIndex)\n-        .append(lastLogTerm, that.lastLogTerm)\n-        .append(commitLogTerm, that.commitLogTerm)\n-        .append(maxHaveAppliedCommitIndex, that.maxHaveAppliedCommitIndex)\n-        .isEquals();\n+    return new EqualsBuilder().append(commitLogIndex, that.commitLogIndex).append(lastLogIndex, that.lastLogIndex).append(lastLogTerm, that.lastLogTerm).append(commitLogTerm, that.commitLogTerm).append(maxHaveAppliedCommitIndex, that.maxHaveAppliedCommitIndex).isEquals();\n   }\n \n   @Override\n   public int hashCode() {\n-    return new HashCodeBuilder(17, 37)\n-        .append(commitLogIndex)\n-        .append(lastLogIndex)\n-        .append(lastLogTerm)\n-        .append(commitLogTerm)\n-        .append(maxHaveAppliedCommitIndex)\n-        .toHashCode();\n+    return new HashCodeBuilder(\n+         17, 37).append(commitLogIndex).append(lastLogIndex).append(lastLogTerm).append(commitLogTerm).append(maxHaveAppliedCommitIndex).toHashCode();\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 35
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/369/LogManagerMeta.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler_random/369/LogManagerMeta.java\nindex 409aabfd581..908bf5b33f1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/369/LogManagerMeta.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler_random/369/LogManagerMeta.java\n@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n package org.apache.iotdb.cluster.log.manage.serializable;\n \n import org.apache.iotdb.tsfile.utils.ReadWriteIOUtils;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/369/LogManagerMeta.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler_three_grams/369/LogManagerMeta.java\nindex 409aabfd581..908bf5b33f1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/369/LogManagerMeta.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler_three_grams/369/LogManagerMeta.java\n@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n package org.apache.iotdb.cluster.log.manage.serializable;\n \n import org.apache.iotdb.tsfile.utils.ReadWriteIOUtils;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
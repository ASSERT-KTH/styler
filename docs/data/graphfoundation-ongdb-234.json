{
    "project_name": "graphfoundation-ongdb",
    "error_id": "234",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "54",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "123",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "184",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "184",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "198",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "198",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "205",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "205",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "214",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "214",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "219",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "219",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "224",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "224",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "229",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "229",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "234",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "234",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "239",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "239",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "239",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/234/FeatureToggles.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/234/FeatureToggles.java\nindex d22488f4377..f1deade9459 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/234/FeatureToggles.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/234/FeatureToggles.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.util;\n \n import java.util.Objects;\n@@ -24,222 +25,220 @@ import java.util.Objects;\n /**\n  * Feature toggles are used for features that are possible to configure, but where the configuration is always fixed in\n  * a production system.\n- *\n+ * <p>\n  * Typical use cases for feature toggles are features that are integrated into the code base for integration and\n  * testing purposes, but are not ready for inclusion in the finished product yet, or features that are always on or has\n  * a fixed configured value in the finished product, but can assume a different configuration or be turned off in some\n  * test.\n- *\n+ * <p>\n  * Feature toggles are passed to the JVM through {@linkplain System#getProperty(String) system properties}, and\n  * expected to be looked up from a static context, a {@code static final} fields of the class the toggle controls.\n- *\n+ * <p>\n  * All methods in this class returns the default value if the system property has not been assigned, or if the value of\n  * the system property cannot be interpreted as a value of the expected type.\n- *\n+ * <p>\n  * For features that the user is ever expected to touch, feature toggles is the wrong abstraction!\n  */\n public class FeatureToggles\n {\n-    /**\n-     * Get the value of a {@code boolean} system property.\n-     *\n-     * The absolute name of the system property is computed based on the provided class and local name.\n-     *\n-     * @param location the class that owns the flag.\n-     * @param name the local name of the flag.\n-     * @param defaultValue the default value of the flag if the system property is not assigned.\n-     * @return the parsed value of the system property, or the default value.\n-     */\n-    public static boolean flag( Class<?> location, String name, boolean defaultValue )\n-    {\n-        return booleanProperty( name( location, name ), defaultValue );\n-    }\n-\n-    /**\n-     * Get the value of a {@code boolean} system property.\n-     *\n-     * The absolute name of the system property is computed based on the package of the provided class and local name.\n-     *\n-     * @param location a class in the package that owns the flag.\n-     * @param name the local name of the flag.\n-     * @param defaultValue the default value of the flag if the system property is not assigned.\n-     * @return the parsed value of the system property, or the default value.\n-     */\n-    public static boolean packageFlag( Class<?> location, String name, boolean defaultValue )\n-    {\n-        return booleanProperty( name( location.getPackage(), name ), defaultValue );\n-    }\n-\n-    /**\n-     * Get the value of a {@code long} system property.\n-     *\n-     * The absolute name of the system property is computed based on the provided class and local name.\n-     *\n-     * @param location the class that owns the flag.\n-     * @param name the local name of the flag.\n-     * @param defaultValue the default value of the flag if the system property is not assigned.\n-     * @return the parsed value of the system property, or the default value.\n-     */\n-    public static long getLong( Class<?> location, String name, long defaultValue )\n-    {\n-        return Long.getLong( name( location, name ), defaultValue );\n-    }\n-\n-    /**\n-     * Get the value of a {@code int} system property.\n-     *\n-     * The absolute name of the system property is computed based on the provided class and local name.\n-     *\n-     * @param location the class that owns the flag.\n-     * @param name the local name of the flag.\n-     * @param defaultValue the default value of the flag if the system property is not assigned.\n-     * @return the parsed value of the system property, or the default value.\n-     */\n-    public static int getInteger( Class<?> location, String name, int defaultValue )\n-    {\n-        return Integer.getInteger( name( location, name ), defaultValue );\n-    }\n-\n-    /**\n-     * Get the value of a {@code double} system property.\n-     *\n-     * The absolute name of the system property is computed based on the provided class and local name.\n-     *\n-     * @param location the class that owns the flag.\n-     * @param name the local name of the flag\n-     * @param defaultValue the default value of the flag if the system property is not assigned.\n-     * @return the parsed value of the system property, or the default value.\n-     */\n-    public static double getDouble( Class<?> location, String name, double defaultValue )\n-    {\n-        try\n-        {\n-            String propertyValue = System.getProperty( name( location, name ) );\n-            if ( propertyValue != null && propertyValue.length() > 0 )\n-            {\n-                return Double.parseDouble( propertyValue );\n-            }\n-        }\n-        catch ( Exception e )\n-        {\n-            // ignored\n-        }\n-        return defaultValue;\n-    }\n-\n-    /**\n-     * Get the value of a {@link String} system property.\n-     * <p>\n-     * The absolute name of the system property is computed based on the provided class and local name.\n-     *\n-     * @param location the class that owns the flag.\n-     * @param name the local name of the flag\n-     * @param defaultValue the default value of the flag if the system property is not assigned.\n-     * @return the parsed value of the system property, or the default value.\n-     */\n-    public static String getString( Class<?> location, String name, String defaultValue )\n-    {\n-        String propertyValue = System.getProperty( name( location, name ) );\n-        return propertyValue == null || propertyValue.isEmpty() ? defaultValue : propertyValue;\n-    }\n-\n-    /**\n-     * Get the value of a {@code enum} system property.\n-     *\n-     * The absolute name of the system property is computed based on the provided class and local name.\n-     *\n-     * @param location the class that owns the flag.\n-     * @param name the local name of the flag.\n-     * @param defaultValue the default value of the flag if the system property is not assigned.\n-     * @param <E> the enum value type.\n-     * @return the parsed value of the system property, or the default value.\n-     */\n-    public static <E extends Enum<E>> E flag( Class<?> location, String name, E defaultValue )\n-    {\n-        return enumProperty( defaultValue.getDeclaringClass(), name( location, name ), defaultValue );\n-    }\n-\n-    /**\n-     * Set the value of a system property.\n-     * <p>\n-     * The name of the system property is computed based on the provided class and local name.\n-     *\n-     * @param location the class that owns the flag.\n-     * @param name the local name of the flag.\n-     * @param value the value to assign to the system property.\n-     */\n-    public static void set( Class<?> location, String name, Object value )\n-    {\n-        System.setProperty( name( location, name ), Objects.toString( value ) );\n-    }\n-\n-    /**\n-     * Clear the value of a system property.\n-     * <p>\n-     * The name of the system property is computed based on the provided class and local name.\n-     *\n-     * @param location the class that owns the flag.\n-     * @param name the local name of the flag.\n-     */\n-    public static void clear( Class<?> location, String name )\n-    {\n-        System.clearProperty( name( location, name ) );\n-    }\n-\n-    /**\n-     * Helps creating a JVM parameter for setting a feature toggle of an arbitrary type.\n-     * Given value will be converted to string using {@link Objects#toString(Object)} method.\n-     *\n-     * @param location the class that owns the flag.\n-     * @param name the local name of the flag.\n-     * @param value the value to assign to the feature toggle.\n-     * @return the parameter to pass to the command line of the forked JVM.\n-     */\n-    public static String toggle( Class<?> location, String name, Object value )\n-    {\n-        return toggle( name( location, name ), Objects.toString( value ) );\n-    }\n-\n-    // <implementation>\n-\n-    private static String toggle( String key, String value )\n-    {\n-        return \"-D\" + key + \"=\" + value;\n-    }\n-\n-    private FeatureToggles()\n-    {\n-    }\n-\n-    private static String name( Class<?> location, String name )\n-    {\n-        return location.getCanonicalName() + \".\" + name;\n-    }\n-\n-    private static String name( Package location, String name )\n-    {\n-        return location.getName() + \".\" + name;\n-    }\n-\n-    private static boolean booleanProperty( String flag, boolean defaultValue )\n-    {\n-        return parseBoolean( System.getProperty( flag ), defaultValue );\n-    }\n-\n-    private static boolean parseBoolean( String value, boolean defaultValue )\n-    {\n-        return defaultValue ? !\"false\".equalsIgnoreCase( value ) : \"true\".equalsIgnoreCase( value );\n-    }\n-\n-    private static <E extends Enum<E>> E enumProperty( Class<E> enumClass, String name, E defaultValue )\n-    {\n-        try\n-        {\n-            return Enum.valueOf( enumClass, System.getProperty( name, defaultValue.name() ) );\n-        }\n-        catch ( IllegalArgumentException e )\n-        {\n-            return defaultValue;\n-        }\n-    }\n+  /**\n+   * Get the value of a {@code boolean} system property.\n+   * <p>\n+   * The absolute name of the system property is computed based on the provided class and local name.\n+   *\n+   * @param location     the class that owns the flag.\n+   * @param name         the local name of the flag.\n+   * @param defaultValue the default value of the flag if the system property is not assigned.\n+   * @return the parsed value of the system property, or the default value.\n+   */\n+  public static boolean flag(Class<?> location, String name, boolean defaultValue)\n+  {\n+    return booleanProperty(name(location, name), defaultValue);\n+  }\n+\n+  /**\n+   * Get the value of a {@code boolean} system property.\n+   * <p>\n+   * The absolute name of the system property is computed based on the package of the provided class and local name.\n+   *\n+   * @param location     a class in the package that owns the flag.\n+   * @param name         the local name of the flag.\n+   * @param defaultValue the default value of the flag if the system property is not assigned.\n+   * @return the parsed value of the system property, or the default value.\n+   */\n+  public static boolean packageFlag(Class<?> location, String name, boolean defaultValue)\n+  {\n+    return booleanProperty(name(location.getPackage(), name), defaultValue);\n+  }\n+\n+  /**\n+   * Get the value of a {@code long} system property.\n+   * <p>\n+   * The absolute name of the system property is computed based on the provided class and local name.\n+   *\n+   * @param location     the class that owns the flag.\n+   * @param name         the local name of the flag.\n+   * @param defaultValue the default value of the flag if the system property is not assigned.\n+   * @return the parsed value of the system property, or the default value.\n+   */\n+  public static long getLong(Class<?> location, String name, long defaultValue)\n+  {\n+    return Long.getLong(name(location, name), defaultValue);\n+  }\n+\n+  /**\n+   * Get the value of a {@code int} system property.\n+   * <p>\n+   * The absolute name of the system property is computed based on the provided class and local name.\n+   *\n+   * @param location     the class that owns the flag.\n+   * @param name         the local name of the flag.\n+   * @param defaultValue the default value of the flag if the system property is not assigned.\n+   * @return the parsed value of the system property, or the default value.\n+   */\n+  public static int getInteger(Class<?> location, String name, int defaultValue)\n+  {\n+    return Integer.getInteger(name(location, name), defaultValue);\n+  }\n+\n+  /**\n+   * Get the value of a {@code double} system property.\n+   * <p>\n+   * The absolute name of the system property is computed based on the provided class and local name.\n+   *\n+   * @param location     the class that owns the flag.\n+   * @param name         the local name of the flag\n+   * @param defaultValue the default value of the flag if the system property is not assigned.\n+   * @return the parsed value of the system property, or the default value.\n+   */\n+  public static double getDouble(Class<?> location, String name, double defaultValue)\n+  {\n+    try\n+    {\n+      String propertyValue = System.getProperty(name(location, name));\n+      if (propertyValue != null && propertyValue.length() > 0)\n+      {\n+        return Double.parseDouble(propertyValue);\n+      }\n+    } catch (Exception e)\n+    {\n+      // ignored\n+    }\n+    return defaultValue;\n+  }\n+\n+  /**\n+   * Get the value of a {@link String} system property.\n+   * <p>\n+   * The absolute name of the system property is computed based on the provided class and local name.\n+   *\n+   * @param location     the class that owns the flag.\n+   * @param name         the local name of the flag\n+   * @param defaultValue the default value of the flag if the system property is not assigned.\n+   * @return the parsed value of the system property, or the default value.\n+   */\n+  public static String getString(Class<?> location, String name, String defaultValue)\n+  {\n+    String propertyValue = System.getProperty(name(location, name));\n+    return propertyValue == null || propertyValue.isEmpty() ? defaultValue : propertyValue;\n+  }\n+\n+  /**\n+   * Get the value of a {@code enum} system property.\n+   * <p>\n+   * The absolute name of the system property is computed based on the provided class and local name.\n+   *\n+   * @param location     the class that owns the flag.\n+   * @param name         the local name of the flag.\n+   * @param defaultValue the default value of the flag if the system property is not assigned.\n+   * @param <E>          the enum value type.\n+   * @return the parsed value of the system property, or the default value.\n+   */\n+  public static <E extends Enum<E>> E flag(Class<?> location, String name, E defaultValue)\n+  {\n+    return enumProperty(defaultValue.getDeclaringClass(), name(location, name), defaultValue);\n+  }\n+\n+  /**\n+   * Set the value of a system property.\n+   * <p>\n+   * The name of the system property is computed based on the provided class and local name.\n+   *\n+   * @param location the class that owns the flag.\n+   * @param name     the local name of the flag.\n+   * @param value    the value to assign to the system property.\n+   */\n+  public static void set(Class<?> location, String name, Object value)\n+  {\n+    System.setProperty(name(location, name), Objects.toString(value));\n+  }\n+\n+  /**\n+   * Clear the value of a system property.\n+   * <p>\n+   * The name of the system property is computed based on the provided class and local name.\n+   *\n+   * @param location the class that owns the flag.\n+   * @param name     the local name of the flag.\n+   */\n+  public static void clear(Class<?> location, String name)\n+  {\n+    System.clearProperty(name(location, name));\n+  }\n+\n+  /**\n+   * Helps creating a JVM parameter for setting a feature toggle of an arbitrary type.\n+   * Given value will be converted to string using {@link Objects#toString(Object)} method.\n+   *\n+   * @param location the class that owns the flag.\n+   * @param name     the local name of the flag.\n+   * @param value    the value to assign to the feature toggle.\n+   * @return the parameter to pass to the command line of the forked JVM.\n+   */\n+  public static String toggle(Class<?> location, String name, Object value)\n+  {\n+    return toggle(name(location, name), Objects.toString(value));\n+  }\n+\n+  // <implementation>\n+\n+  private static String toggle(String key, String value)\n+  {\n+    return \"-D\" + key + \"=\" + value;\n+  }\n+\n+  private FeatureToggles()\n+  {\n+  }\n+\n+  private static String name(Class<?> location, String name)\n+  {\n+    return location.getCanonicalName() + \".\" + name;\n+  }\n+\n+  private static String name(Package location, String name)\n+  {\n+    return location.getName() + \".\" + name;\n+  }\n+\n+  private static boolean booleanProperty(String flag, boolean defaultValue)\n+  {\n+    return parseBoolean(System.getProperty(flag), defaultValue);\n+  }\n+\n+  private static boolean parseBoolean(String value, boolean defaultValue)\n+  {\n+    return defaultValue ? !\"false\".equalsIgnoreCase(value) : \"true\".equalsIgnoreCase(value);\n+  }\n+\n+  private static <E extends Enum<E>> E enumProperty(Class<E> enumClass, String name, E defaultValue)\n+  {\n+    try\n+    {\n+      return Enum.valueOf(enumClass, System.getProperty(name, defaultValue.name()));\n+    } catch (IllegalArgumentException e)\n+    {\n+      return defaultValue;\n+    }\n+  }\n }\n",
            "diff_size": 207
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/234/FeatureToggles.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/234/FeatureToggles.java\nindex d22488f4377..11deee25816 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/234/FeatureToggles.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/234/FeatureToggles.java\n@@ -124,7 +124,8 @@ public class FeatureToggles\n         {\n             // ignored\n         }\n-        return defaultValue;\n+\n+return defaultValue;\n     }\n \n     /**\n@@ -242,4 +243,4 @@ public class FeatureToggles\n             return defaultValue;\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
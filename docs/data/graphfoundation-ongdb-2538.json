{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2538",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "37",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "108",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2538/GroupCache.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2538/GroupCache.java\nindex 09277e9c906..63c44521c74 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2538/GroupCache.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2538/GroupCache.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.unsafe.impl.batchimport.cache.idmapping.string;\n \n import org.neo4j.unsafe.impl.batchimport.cache.ByteArray;\n@@ -33,103 +34,103 @@ import static org.neo4j.helpers.Numbers.unsignedShortToInt;\n  */\n public interface GroupCache extends AutoCloseable\n {\n-    void set( long nodeId, int groupId );\n+  void set(long nodeId, int groupId);\n+\n+  int get(long nodeId);\n+\n+  @Override\n+  void close();\n+\n+  GroupCache GLOBAL = new GroupCache()\n+  {\n+    @Override\n+    public void set(long nodeId, int groupId)\n+    {   // no need\n+      assert groupId == Group.GLOBAL.id();\n+    }\n+\n+    @Override\n+    public int get(long nodeId)\n+    {\n+      return Group.GLOBAL.id();\n+    }\n+\n+    @Override\n+    public void close()\n+    {\n+    }\n+  };\n+\n+  class ByteGroupCache implements GroupCache\n+  {\n+    private final ByteArray array;\n+\n+    public ByteGroupCache(NumberArrayFactory factory, int chunkSize)\n+    {\n+      array = factory.newDynamicByteArray(chunkSize, new byte[Byte.BYTES]);\n+    }\n+\n+    @Override\n+    public void set(long nodeId, int groupId)\n+    {\n+      array.setByte(nodeId, 0, safeCastIntToUnsignedByte(groupId));\n+    }\n \n-    int get( long nodeId );\n+    @Override\n+    public int get(long nodeId)\n+    {\n+      return unsignedByteToInt(array.getByte(nodeId, 0));\n+    }\n \n     @Override\n-    void close();\n+    public void close()\n+    {\n+      array.close();\n+    }\n+  }\n+\n+  class ShortGroupCache implements GroupCache\n+  {\n+    private final ByteArray array;\n+\n+    public ShortGroupCache(NumberArrayFactory factory, int chunkSize)\n+    {\n+      array = factory.newDynamicByteArray(chunkSize, new byte[Short.BYTES]);\n+    }\n \n-    GroupCache GLOBAL = new GroupCache()\n+    @Override\n+    public void set(long nodeId, int groupId)\n     {\n-        @Override\n-        public void set( long nodeId, int groupId )\n-        {   // no need\n-            assert groupId == Group.GLOBAL.id();\n-        }\n-\n-        @Override\n-        public int get( long nodeId )\n-        {\n-            return Group.GLOBAL.id();\n-        }\n-\n-        @Override\n-        public void close()\n-        {\n-        }\n-    };\n-\n-    class ByteGroupCache implements GroupCache\n+      array.setShort(nodeId, 0, safeCastIntToUnsignedShort(groupId));\n+    }\n+\n+    @Override\n+    public int get(long nodeId)\n     {\n-        private final ByteArray array;\n-\n-        public ByteGroupCache( NumberArrayFactory factory, int chunkSize )\n-        {\n-            array = factory.newDynamicByteArray( chunkSize, new byte[Byte.BYTES] );\n-        }\n-\n-        @Override\n-        public void set( long nodeId, int groupId )\n-        {\n-            array.setByte( nodeId, 0, safeCastIntToUnsignedByte( groupId ) );\n-        }\n-\n-        @Override\n-        public int get( long nodeId )\n-        {\n-            return unsignedByteToInt( array.getByte( nodeId, 0 ) );\n-        }\n-\n-        @Override\n-        public void close()\n-        {\n-            array.close();\n-        }\n+      return unsignedShortToInt(array.getShort(nodeId, 0));\n     }\n \n-    class ShortGroupCache implements GroupCache\n+    @Override\n+    public void close()\n     {\n-        private final ByteArray array;\n-\n-        public ShortGroupCache( NumberArrayFactory factory, int chunkSize )\n-        {\n-            array = factory.newDynamicByteArray( chunkSize, new byte[Short.BYTES] );\n-        }\n-\n-        @Override\n-        public void set( long nodeId, int groupId )\n-        {\n-            array.setShort( nodeId, 0, safeCastIntToUnsignedShort( groupId ) );\n-        }\n-\n-        @Override\n-        public int get( long nodeId )\n-        {\n-            return unsignedShortToInt( array.getShort( nodeId, 0 ) );\n-        }\n-\n-        @Override\n-        public void close()\n-        {\n-            array.close();\n-        }\n+      array.close();\n     }\n+  }\n \n-    static GroupCache select( NumberArrayFactory factory, int chunkSize, int numberOfGroups )\n+  static GroupCache select(NumberArrayFactory factory, int chunkSize, int numberOfGroups)\n+  {\n+    if (numberOfGroups == 0)\n+    {\n+      return GLOBAL;\n+    }\n+    if (numberOfGroups <= 0x100)\n+    {\n+      return new ByteGroupCache(factory, chunkSize);\n+    }\n+    if (numberOfGroups <= 0x10000)\n     {\n-        if ( numberOfGroups == 0 )\n-        {\n-            return GLOBAL;\n-        }\n-        if ( numberOfGroups <= 0x100 )\n-        {\n-            return new ByteGroupCache( factory, chunkSize );\n-        }\n-        if ( numberOfGroups <= 0x10000 )\n-        {\n-            return new ShortGroupCache( factory, chunkSize );\n-        }\n-        throw new IllegalArgumentException( \"Max allowed groups is \" + 0xFFFF + \", but wanted \" + numberOfGroups );\n+      return new ShortGroupCache(factory, chunkSize);\n     }\n+    throw new IllegalArgumentException(\"Max allowed groups is \" + 0xFFFF + \", but wanted \" + numberOfGroups);\n+  }\n }\n",
            "diff_size": 159
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2538/GroupCache.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2538/GroupCache.java\nindex 09277e9c906..eba347e070c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2538/GroupCache.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2538/GroupCache.java\n@@ -39,12 +39,12 @@ public interface GroupCache extends AutoCloseable\n \n     @Override\n     void close();\n-\n-    GroupCache GLOBAL = new GroupCache()\n+GroupCache GLOBAL = new GroupCache()\n     {\n         @Override\n         public void set( long nodeId, int groupId )\n-        {   // no need\n+        {\n+    // no need\n             assert groupId == Group.GLOBAL.id();\n         }\n \n@@ -122,14 +122,16 @@ public interface GroupCache extends AutoCloseable\n         {\n             return GLOBAL;\n         }\n-        if ( numberOfGroups <= 0x100 )\n+\n+if ( numberOfGroups <= 0x100 )\n         {\n             return new ByteGroupCache( factory, chunkSize );\n         }\n-        if ( numberOfGroups <= 0x10000 )\n+\n+if ( numberOfGroups <= 0x10000 )\n         {\n             return new ShortGroupCache( factory, chunkSize );\n         }\n         throw new IllegalArgumentException( \"Max allowed groups is \" + 0xFFFF + \", but wanted \" + numberOfGroups );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
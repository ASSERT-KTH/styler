{
    "project_name": "neo4j-neo4j",
    "error_id": "677",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "52",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "141",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "127",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/677/Kernel.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/677/Kernel.java\nindex 9bfc02db0bf..269d3d7b0de 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/677/Kernel.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/677/Kernel.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.api;\n \n import org.neo4j.internal.kernel.api.CursorFactory;\n@@ -31,7 +32,7 @@ import org.neo4j.kernel.api.procedure.CallableUserFunction;\n /**\n  * The main API through which access to the Neo4j kernel is made, both read\n  * and write operations are supported as well as creating transactions.\n- *\n+ * <p>\n  * Changes to the graph (i.e. write operations) are performed via a\n  * {@link #beginTransaction(KernelTransaction.Type, LoginContext)}  transaction context} where changes done\n  * inside the transaction are visible in read operations for {@link Statement statements}\n@@ -43,34 +44,34 @@ public interface Kernel\n      * Creates and returns a new {@link KernelTransaction} capable of modifying the\n      * underlying graph with custom timeout in milliseconds.\n      *\n-     * @param type the type of the new transaction: implicit (internally created) or explicit (created by the user)\n+     * @param type         the type of the new transaction: implicit (internally created) or explicit (created by the user)\n      * @param loginContext transaction login context\n-     * @param clientInfo transaction client info\n-     * @param timeout transaction timeout in milliseconds\n+     * @param clientInfo   transaction client info\n+     * @param timeout      transaction timeout in milliseconds\n      */\n-    KernelTransaction beginTransaction( KernelTransaction.Type type, LoginContext loginContext, ClientConnectionInfo clientInfo, long timeout )\n-            throws TransactionFailureException;\n+    KernelTransaction beginTransaction(KernelTransaction.Type type, LoginContext loginContext, ClientConnectionInfo clientInfo, long timeout)\n+      throws TransactionFailureException;\n \n     /**\n      * Begin new transaction.\n      *\n-     * @param type type of transaction (implicit/explicit)\n+     * @param type         type of transaction (implicit/explicit)\n      * @param loginContext the {@link LoginContext} of the user which is beginning this transaction\n-     * @param clientInfo {@link ClientConnectionInfo} of the user which is beginning this transaction\n+     * @param clientInfo   {@link ClientConnectionInfo} of the user which is beginning this transaction\n      * @return the transaction\n      */\n-    KernelTransaction beginTransaction( KernelTransaction.Type type, LoginContext loginContext, ClientConnectionInfo clientInfo )\n-            throws TransactionFailureException;\n+    KernelTransaction beginTransaction(KernelTransaction.Type type, LoginContext loginContext, ClientConnectionInfo clientInfo)\n+      throws TransactionFailureException;\n \n     /**\n      * Begin new transaction.\n      *\n-     * @param type type of transaction (implicit/explicit)\n+     * @param type         type of transaction (implicit/explicit)\n      * @param loginContext the {@link LoginContext} of the user which is beginning this transaction\n      * @return the transaction\n      */\n-    KernelTransaction beginTransaction( KernelTransaction.Type type, LoginContext loginContext )\n-            throws TransactionFailureException;\n+    KernelTransaction beginTransaction(KernelTransaction.Type type, LoginContext loginContext)\n+      throws TransactionFailureException;\n \n     /**\n      * Register a procedure that should be available from this kernel. This is not a transactional method, the procedure is not\n@@ -78,7 +79,7 @@ public interface Kernel\n      *\n      * @param procedure procedure to register\n      */\n-    void registerProcedure( CallableProcedure procedure ) throws ProcedureException;\n+    void registerProcedure(CallableProcedure procedure) throws ProcedureException;\n \n     /**\n      * Register a function that should be available from this kernel. This is not a transactional method, the function is not\n@@ -86,7 +87,7 @@ public interface Kernel\n      *\n      * @param function function to register\n      */\n-    void registerUserFunction( CallableUserFunction function ) throws ProcedureException;\n+    void registerUserFunction(CallableUserFunction function) throws ProcedureException;\n \n     /**\n      * Register an aggregation function that should be available from this kernel. This is not a transactional method, the function is not\n@@ -94,7 +95,7 @@ public interface Kernel\n      *\n      * @param function function to register\n      */\n-    void registerUserAggregationFunction( CallableUserAggregationFunction function ) throws ProcedureException;\n+    void registerUserAggregationFunction(CallableUserAggregationFunction function) throws ProcedureException;\n \n     /**\n      * Cursor factory which produces cursors that are not bound to any particular transaction.\n",
            "diff_size": 17
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/677/Kernel.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/677/Kernel.java\nindex 9bfc02db0bf..eefa822080c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/677/Kernel.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/677/Kernel.java\n@@ -100,4 +100,4 @@ public interface Kernel\n      * Cursor factory which produces cursors that are not bound to any particular transaction.\n      */\n     CursorFactory cursors();\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
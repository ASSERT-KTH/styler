{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4238",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "43",
                    "column": "101",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "117",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4238/LuceneIndexValueValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4238/LuceneIndexValueValidator.java\nindex 031fda21602..52044936f17 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4238/LuceneIndexValueValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4238/LuceneIndexValueValidator.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.api;\n \n import org.neo4j.kernel.api.index.ArrayEncoder;\n@@ -30,33 +31,33 @@ import org.neo4j.values.storable.Values;\n  */\n public class LuceneIndexValueValidator implements Validator<Value>\n {\n-    public static final LuceneIndexValueValidator INSTANCE = new LuceneIndexValueValidator();\n+  public static final LuceneIndexValueValidator INSTANCE = new LuceneIndexValueValidator();\n \n-    // Maximum bytes value length that supported by indexes.\n-    // Absolute hard maximum length for a term, in bytes once\n-    // encoded as UTF8.  If a term arrives from the analyzer\n-    // longer than this length, an IllegalArgumentException\n-    // when lucene writer trying to add or update document\n-    static final int MAX_TERM_LENGTH = (1 << 15) - 2;\n+  // Maximum bytes value length that supported by indexes.\n+  // Absolute hard maximum length for a term, in bytes once\n+  // encoded as UTF8.  If a term arrives from the analyzer\n+  // longer than this length, an IllegalArgumentException\n+  // when lucene writer trying to add or update document\n+  static final int MAX_TERM_LENGTH = (1 << 15) - 2;\n \n-    private final IndexTextValueLengthValidator textValueValidator = new IndexTextValueLengthValidator( MAX_TERM_LENGTH );\n+  private final IndexTextValueLengthValidator textValueValidator = new IndexTextValueLengthValidator(MAX_TERM_LENGTH);\n \n-    private LuceneIndexValueValidator()\n-    {\n-    }\n+  private LuceneIndexValueValidator()\n+  {\n+  }\n \n-    @Override\n-    public void validate( Value value )\n+  @Override\n+  public void validate(Value value)\n+  {\n+    textValueValidator.validate(value);\n+    if (Values.isArrayValue(value))\n     {\n-        textValueValidator.validate( value );\n-        if ( Values.isArrayValue( value ) )\n-        {\n-            textValueValidator.validate( ArrayEncoder.encode( value ).getBytes() );\n-        }\n+      textValueValidator.validate(ArrayEncoder.encode(value).getBytes());\n     }\n+  }\n \n-    public void validate( byte[] encodedValue )\n-    {\n-        textValueValidator.validate( encodedValue );\n-    }\n+  public void validate(byte[] encodedValue)\n+  {\n+    textValueValidator.validate(encodedValue);\n+  }\n }\n",
            "diff_size": 27
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3679",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "37",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "19",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3679/MemoryRecommendationsCommandProvider.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3679/MemoryRecommendationsCommandProvider.java\nindex c2cc9f499e9..310c16a4721 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3679/MemoryRecommendationsCommandProvider.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3679/MemoryRecommendationsCommandProvider.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.commandline.dbms;\n \n import java.nio.file.Path;\n@@ -31,50 +32,50 @@ import static java.lang.String.format;\n \n public class MemoryRecommendationsCommandProvider extends AdminCommand.Provider\n {\n-    public MemoryRecommendationsCommandProvider()\n-    {\n-        super( \"memrec\" );\n-    }\n+  public MemoryRecommendationsCommandProvider()\n+  {\n+    super(\"memrec\");\n+  }\n \n-    @Nonnull\n-    @Override\n-    public Arguments allArguments()\n-    {\n-        return MemoryRecommendationsCommand.buildArgs();\n-    }\n+  @Nonnull\n+  @Override\n+  public Arguments allArguments()\n+  {\n+    return MemoryRecommendationsCommand.buildArgs();\n+  }\n \n-    @Nonnull\n-    @Override\n-    public String summary()\n-    {\n-        return \"Print Neo4j heap and pagecache memory settings recommendations.\";\n-    }\n+  @Nonnull\n+  @Override\n+  public String summary()\n+  {\n+    return \"Print Neo4j heap and pagecache memory settings recommendations.\";\n+  }\n \n-    @Nonnull\n-    @Override\n-    public AdminCommandSection commandSection()\n-    {\n-        return AdminCommandSection.general();\n-    }\n+  @Nonnull\n+  @Override\n+  public AdminCommandSection commandSection()\n+  {\n+    return AdminCommandSection.general();\n+  }\n \n-    @Nonnull\n-    @Override\n-    public String description()\n-    {\n-        return format(\n-                \"Print heuristic memory setting recommendations for the Neo4j JVM heap and pagecache. The \" +\n-                \"heuristic is based on the total memory of the system the command is running on, or on the amount of \" +\n-                \"memory specified with the --memory argument. The heuristic assumes that the system is dedicated to \" +\n-                \"running Neo4j. If this is not the case, then use the --memory argument to specify how much memory \" +\n-                \"can be expected to be dedicated to Neo4j.%n\" +\n-                \"%n\" +\n-                \"The output is formatted such that it can be copy-posted into the neo4j.conf file.\" );\n-    }\n+  @Nonnull\n+  @Override\n+  public String description()\n+  {\n+    return format(\n+        \"Print heuristic memory setting recommendations for the Neo4j JVM heap and pagecache. The \" +\n+            \"heuristic is based on the total memory of the system the command is running on, or on the amount of \" +\n+            \"memory specified with the --memory argument. The heuristic assumes that the system is dedicated to \" +\n+            \"running Neo4j. If this is not the case, then use the --memory argument to specify how much memory \" +\n+            \"can be expected to be dedicated to Neo4j.%n\" +\n+            \"%n\" +\n+            \"The output is formatted such that it can be copy-posted into the neo4j.conf file.\");\n+  }\n \n-    @Nonnull\n-    @Override\n-    public AdminCommand create( Path homeDir, Path configDir, OutsideWorld outsideWorld )\n-    {\n-        return new MemoryRecommendationsCommand( homeDir, configDir, outsideWorld );\n-    }\n+  @Nonnull\n+  @Override\n+  public AdminCommand create(Path homeDir, Path configDir, OutsideWorld outsideWorld)\n+  {\n+    return new MemoryRecommendationsCommand(homeDir, configDir, outsideWorld);\n+  }\n }\n",
            "diff_size": 42
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "64",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 570).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3679/MemoryRecommendationsCommandProvider.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3679/MemoryRecommendationsCommandProvider.java\nindex c2cc9f499e9..8439d5bfa58 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3679/MemoryRecommendationsCommandProvider.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3679/MemoryRecommendationsCommandProvider.java\n@@ -61,14 +61,7 @@ public class MemoryRecommendationsCommandProvider extends AdminCommand.Provider\n     @Override\n     public String description()\n     {\n-        return format(\n-                \"Print heuristic memory setting recommendations for the Neo4j JVM heap and pagecache. The \" +\n-                \"heuristic is based on the total memory of the system the command is running on, or on the amount of \" +\n-                \"memory specified with the --memory argument. The heuristic assumes that the system is dedicated to \" +\n-                \"running Neo4j. If this is not the case, then use the --memory argument to specify how much memory \" +\n-                \"can be expected to be dedicated to Neo4j.%n\" +\n-                \"%n\" +\n-                \"The output is formatted such that it can be copy-posted into the neo4j.conf file.\" );\n+        return format( \"Print heuristic memory setting recommendations for the Neo4j JVM heap and pagecache. The \" + \"heuristic is based on the total memory of the system the command is running on, or on the amount of \" + \"memory specified with the --memory argument. The heuristic assumes that the system is dedicated to \" + \"running Neo4j. If this is not the case, then use the --memory argument to specify how much memory \" + \"can be expected to be dedicated to Neo4j.%n\" + \"%n\" + \"The output is formatted such that it can be copy-posted into the neo4j.conf file.\" );\n     }\n \n     @Nonnull\n@@ -77,4 +70,4 @@ public class MemoryRecommendationsCommandProvider extends AdminCommand.Provider\n     {\n         return new MemoryRecommendationsCommand( homeDir, configDir, outsideWorld );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
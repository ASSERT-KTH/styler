{
    "project_name": "java110-MicroCommunity",
    "error_id": "234",
    "information": {
        "errors": [
            {
                "line": "264",
                "severity": "error",
                "message": "Line is longer than 150 characters (found 173).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "        }\n\n        List<BillOweFeeDto> billOweFeeDtos = BeanConvertUtil.covertBeanList(feeServiceDaoImpl.queryBillOweFees(BeanConvertUtil.beanCovertMap(billDto)), BillOweFeeDto.class);\n\n        return billOweFeeDtos;\n",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "263",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 169).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/234/FeeInnerServiceSMOImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/styler/234/FeeInnerServiceSMOImpl.java\nindex dfe8e0b7985..4921f33de02 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/234/FeeInnerServiceSMOImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/styler/234/FeeInnerServiceSMOImpl.java\n@@ -260,8 +260,7 @@ public class FeeInnerServiceSMOImpl extends BaseServiceSMO implements IFeeInnerS\n         if (page != PageDto.DEFAULT_PAGE) {\n             billDto.setPage((page - 1) * billDto.getRow());\n         }\n-\n-        List<BillOweFeeDto> billOweFeeDtos = BeanConvertUtil.covertBeanList(feeServiceDaoImpl.queryBillOweFees(BeanConvertUtil.beanCovertMap(billDto)), BillOweFeeDto.class);\n+    List<BillOweFeeDto> billOweFeeDtos = BeanConvertUtil.covertBeanList(feeServiceDaoImpl.queryBillOweFees(BeanConvertUtil.beanCovertMap(billDto)), BillOweFeeDto.class);\n \n         return billOweFeeDtos;\n \n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/234/FeeInnerServiceSMOImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/intellij/234/FeeInnerServiceSMOImpl.java\nindex dfe8e0b7985..03dd0e96eb8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/234/FeeInnerServiceSMOImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/intellij/234/FeeInnerServiceSMOImpl.java\n@@ -261,7 +261,8 @@ public class FeeInnerServiceSMOImpl extends BaseServiceSMO implements IFeeInnerS\n             billDto.setPage((page - 1) * billDto.getRow());\n         }\n \n-        List<BillOweFeeDto> billOweFeeDtos = BeanConvertUtil.covertBeanList(feeServiceDaoImpl.queryBillOweFees(BeanConvertUtil.beanCovertMap(billDto)), BillOweFeeDto.class);\n+        List<BillOweFeeDto> billOweFeeDtos =\n+            BeanConvertUtil.covertBeanList(feeServiceDaoImpl.queryBillOweFees(BeanConvertUtil.beanCovertMap(billDto)), BillOweFeeDto.class);\n \n         return billOweFeeDtos;\n \n",
            "diff_size": 2
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "256",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 173).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/234/FeeInnerServiceSMOImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/naturalize/234/FeeInnerServiceSMOImpl.java\nindex dfe8e0b7985..5301c61b452 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/234/FeeInnerServiceSMOImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/naturalize/234/FeeInnerServiceSMOImpl.java\n@@ -67,12 +67,8 @@ public class FeeInnerServiceSMOImpl extends BaseServiceSMO implements IFeeInnerS\n         if (fees == null || fees.size() == 0) {\n             return fees;\n         }\n-\n-//        String[] userIds = getUserIds(fees);\n-//        //\u6839\u636e userId \u67e5\u8be2\u7528\u6237\u4fe1\u606f\n-//        List<UserDto> users = userInnerServiceSMOImpl.getUserInfo(userIds);\n-\n-        for (FeeDto fee : fees) {\n+//   \n+for (FeeDto fee : fees) {\n             refreshFee(fee);\n         }\n \n@@ -118,13 +114,8 @@ public class FeeInnerServiceSMOImpl extends BaseServiceSMO implements IFeeInnerS\n      *            //@param users \u7528\u6237\u5217\u8868\n      */\n     private void refreshFee(FeeDto fee) {\n-//        for (UserDto user : users) {\n-//            if (fee.getUserId().equals(user.getUserId())) {\n-//                BeanConvertUtil.covertBean(user, fee);\n-//            }\n-//        }\n-\n-        if (!StringUtil.isEmpty(fee.getImportFeeName())) {\n+//       \n+if (!StringUtil.isEmpty(fee.getImportFeeName())) {\n             //fee.setFeeName(fee.getImportFeeName() + \"(\" + fee.getFeeName() + \")\");\n             fee.setFeeName(fee.getImportFeeName());\n         }\n@@ -154,7 +145,8 @@ public class FeeInnerServiceSMOImpl extends BaseServiceSMO implements IFeeInnerS\n \n     @Override\n     public List<FeeDto> queryFeeByAttr(FeeAttrDto feeAttrDto) {\n-        //\u6821\u9a8c\u662f\u5426\u4f20\u4e86 \u5206\u9875\u4fe1\u606f\n+\n+    //\u6821\u9a8c\u662f\u5426\u4f20\u4e86 \u5206\u9875\u4fe1\u606f\n \n         int page = feeAttrDto.getPage();\n \n@@ -324,9 +316,7 @@ public class FeeInnerServiceSMOImpl extends BaseServiceSMO implements IFeeInnerS\n         if (feeConfigDtos == null || feeConfigDtos.size() < 1) {\n             return data;\n         }\n-\n-\n-        for (FeeConfigDto tmpFeeConfigDto : feeConfigDtos) {\n+for (FeeConfigDto tmpFeeConfigDto : feeConfigDtos) {\n             dealFeeConfig(data, tmpFeeConfigDto);\n         }\n \n@@ -369,4 +359,4 @@ public class FeeInnerServiceSMOImpl extends BaseServiceSMO implements IFeeInnerS\n     public void setUserInnerServiceSMOImpl(IUserInnerServiceSMO userInnerServiceSMOImpl) {\n         this.userInnerServiceSMOImpl = userInnerServiceSMOImpl;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 19
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "260",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 173).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/234/FeeInnerServiceSMOImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/codebuff/234/FeeInnerServiceSMOImpl.java\nindex dfe8e0b7985..f5bd04333a6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/234/FeeInnerServiceSMOImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/codebuff/234/FeeInnerServiceSMOImpl.java\n@@ -1,6 +1,5 @@\n package com.java110.fee.smo.impl;\n \n-\n import com.alibaba.fastjson.JSONArray;\n import com.alibaba.fastjson.JSONObject;\n import com.java110.core.base.smo.BaseServiceSMO;\n@@ -22,7 +21,6 @@ import com.java110.utils.util.StringUtil;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.web.bind.annotation.RequestBody;\n import org.springframework.web.bind.annotation.RestController;\n-\n import java.util.ArrayList;\n import java.util.HashMap;\n import java.util.List;\n@@ -36,6 +34,8 @@ import java.util.Map;\n  * @Version 1.0\n  * add by wuxw 2019/4/24\n  **/\n+\n+\n @RestController\n public class FeeInnerServiceSMOImpl extends BaseServiceSMO implements IFeeInnerServiceSMO {\n \n@@ -51,19 +51,19 @@ public class FeeInnerServiceSMOImpl extends BaseServiceSMO implements IFeeInnerS\n     @Autowired\n     private IFeeAttrServiceDao feeAttrServiceDaoImpl;\n \n-\n     @Override\n     public List<FeeDto> queryFees(@RequestBody FeeDto feeDto) {\n \n         //\u6821\u9a8c\u662f\u5426\u4f20\u4e86 \u5206\u9875\u4fe1\u606f\n-        int page = feeDto.getPage();\n \n+\n+\n+        int page = feeDto.getPage();\n         if (page != PageDto.DEFAULT_PAGE) {\n             feeDto.setPage((page - 1) * feeDto.getRow());\n         }\n \n         List<FeeDto> fees = BeanConvertUtil.covertBeanList(feeServiceDaoImpl.getFeeInfo(BeanConvertUtil.beanCovertMap(feeDto)), FeeDto.class);\n-\n         if (fees == null || fees.size() == 0) {\n             return fees;\n         }\n@@ -84,19 +84,17 @@ public class FeeInnerServiceSMOImpl extends BaseServiceSMO implements IFeeInnerS\n         Map info = new HashMap();\n         info.put(\"feeIds\", feeIds);\n         info.put(\"communityId\", feeDto.getCommunityId());\n-\n         List<Map> attrMaps = feeAttrServiceDaoImpl.getFeeAttrInfo(info);\n-\n         List<FeeAttrDto> feeAttrDtos = BeanConvertUtil.covertBeanList(attrMaps, FeeAttrDto.class);\n         List<FeeAttrDto> tmpFeeAttrDtos = null;\n         for (FeeDto tmpFeeDto : fees) {\n             tmpFeeAttrDtos = new ArrayList<>();\n             for (FeeAttrDto feeAttrDto : feeAttrDtos) {\n-\n                 if (tmpFeeDto.getFeeId().equals(feeAttrDto.getFeeId())) {\n                     tmpFeeAttrDtos.add(feeAttrDto);\n                 }\n             }\n+\n             tmpFeeDto.setFeeAttrDtos(tmpFeeAttrDtos);\n         }\n         return fees;\n@@ -104,11 +102,8 @@ public class FeeInnerServiceSMOImpl extends BaseServiceSMO implements IFeeInnerS\n \n     @Override\n     public List<FeeDto> queryBusinessFees(@RequestBody FeeDto feeDto) {\n-\n         List<Map> fees = feeServiceDaoImpl.getBusinessFeeInfo(BeanConvertUtil.beanCovertMap(feeDto));\n-\n         return BeanConvertUtil.covertBeanList(fees, FeeDto.class);\n-\n     }\n \n     /**\n@@ -117,18 +112,18 @@ public class FeeInnerServiceSMOImpl extends BaseServiceSMO implements IFeeInnerS\n      * @param fee \u5c0f\u533a\u8d39\u7528\u4fe1\u606f\n      *            //@param users \u7528\u6237\u5217\u8868\n      */\n+\n+\n     private void refreshFee(FeeDto fee) {\n //        for (UserDto user : users) {\n //            if (fee.getUserId().equals(user.getUserId())) {\n //                BeanConvertUtil.covertBean(user, fee);\n //            }\n //        }\n-\n         if (!StringUtil.isEmpty(fee.getImportFeeName())) {\n             //fee.setFeeName(fee.getImportFeeName() + \"(\" + fee.getFeeName() + \")\");\n             fee.setFeeName(fee.getImportFeeName());\n         }\n-\n     }\n \n     /**\n@@ -137,13 +132,13 @@ public class FeeInnerServiceSMOImpl extends BaseServiceSMO implements IFeeInnerS\n      * @param fees \u5c0f\u533a\u697c\u4fe1\u606f\n      * @return \u6279\u91cfuserIds \u4fe1\u606f\n      */\n+\n+\n     private String[] getUserIds(List<FeeDto> fees) {\n         List<String> userIds = new ArrayList<String>();\n         for (FeeDto fee : fees) {\n             userIds.add(fee.getUserId());\n-\n         }\n-\n         return userIds.toArray(new String[userIds.size()]);\n     }\n \n@@ -156,14 +151,14 @@ public class FeeInnerServiceSMOImpl extends BaseServiceSMO implements IFeeInnerS\n     public List<FeeDto> queryFeeByAttr(FeeAttrDto feeAttrDto) {\n         //\u6821\u9a8c\u662f\u5426\u4f20\u4e86 \u5206\u9875\u4fe1\u606f\n \n-        int page = feeAttrDto.getPage();\n \n+\n+        int page = feeAttrDto.getPage();\n         if (page != PageDto.DEFAULT_PAGE) {\n             feeAttrDto.setPage((page - 1) * feeAttrDto.getRow());\n         }\n \n         List<FeeDto> fees = BeanConvertUtil.covertBeanList(feeServiceDaoImpl.queryFeeByAttr(BeanConvertUtil.beanCovertMap(feeAttrDto)), FeeDto.class);\n-\n         return fees;\n     }\n \n@@ -172,7 +167,6 @@ public class FeeInnerServiceSMOImpl extends BaseServiceSMO implements IFeeInnerS\n         return feeServiceDaoImpl.queryFeeByAttrCount(BeanConvertUtil.beanCovertMap(feeAttrDto));\n     }\n \n-\n     @Override\n     public int queryBillCount(@RequestBody BillDto billDto) {\n         return feeServiceDaoImpl.queryBillCount(BeanConvertUtil.beanCovertMap(billDto));\n@@ -184,21 +178,21 @@ public class FeeInnerServiceSMOImpl extends BaseServiceSMO implements IFeeInnerS\n      * @param billDto\n      * @return\n      */\n+\n     @Override\n     public List<BillDto> queryBills(@RequestBody BillDto billDto) {\n \n         //\u6821\u9a8c\u662f\u5426\u4f20\u4e86 \u5206\u9875\u4fe1\u606f\n \n-        int page = billDto.getPage();\n \n+\n+        int page = billDto.getPage();\n         if (page != PageDto.DEFAULT_PAGE) {\n             billDto.setPage((page - 1) * billDto.getRow());\n         }\n \n         List<BillDto> billDtos = BeanConvertUtil.covertBeanList(feeServiceDaoImpl.queryBills(BeanConvertUtil.beanCovertMap(billDto)), BillDto.class);\n-\n         return billDtos;\n-\n     }\n \n     @Override\n@@ -206,30 +200,31 @@ public class FeeInnerServiceSMOImpl extends BaseServiceSMO implements IFeeInnerS\n         return feeServiceDaoImpl.computeBillOweFeeCount(BeanConvertUtil.beanCovertMap(feeDto));\n     }\n \n-\n     @Override\n     public List<FeeDto> computeBillOweFee(@RequestBody FeeDto feeDto) {\n-        int page = feeDto.getPage();\n \n+\n+\n+        int page = feeDto.getPage();\n         if (page != PageDto.DEFAULT_PAGE) {\n             feeDto.setPage((page - 1) * feeDto.getRow());\n         }\n \n         List<FeeDto> fees = BeanConvertUtil.covertBeanList(feeServiceDaoImpl.computeBillOweFee(BeanConvertUtil.beanCovertMap(feeDto)), FeeDto.class);\n-\n         return fees;\n     }\n \n     @Override\n     public List<FeeDto> computeEveryOweFee(FeeDto feeDto) {\n-        int page = feeDto.getPage();\n \n+\n+\n+        int page = feeDto.getPage();\n         if (page != PageDto.DEFAULT_PAGE) {\n             feeDto.setPage((page - 1) * feeDto.getRow());\n         }\n \n         List<FeeDto> fees = BeanConvertUtil.covertBeanList(feeServiceDaoImpl.computeEveryOweFee(BeanConvertUtil.beanCovertMap(feeDto)), FeeDto.class);\n-\n         return fees;\n     }\n \n@@ -238,7 +233,6 @@ public class FeeInnerServiceSMOImpl extends BaseServiceSMO implements IFeeInnerS\n         return feeServiceDaoImpl.computeEveryOweFeeCount(BeanConvertUtil.beanCovertMap(feeDto));\n     }\n \n-\n     @Override\n     public int queryBillOweFeeCount(@RequestBody BillOweFeeDto billDto) {\n         return feeServiceDaoImpl.queryBillOweFeeCount(BeanConvertUtil.beanCovertMap(billDto));\n@@ -250,21 +244,21 @@ public class FeeInnerServiceSMOImpl extends BaseServiceSMO implements IFeeInnerS\n      * @param billDto\n      * @return\n      */\n+\n     @Override\n     public List<BillOweFeeDto> queryBillOweFees(@RequestBody BillOweFeeDto billDto) {\n \n         //\u6821\u9a8c\u662f\u5426\u4f20\u4e86 \u5206\u9875\u4fe1\u606f\n \n-        int page = billDto.getPage();\n \n+\n+        int page = billDto.getPage();\n         if (page != PageDto.DEFAULT_PAGE) {\n             billDto.setPage((page - 1) * billDto.getRow());\n         }\n \n         List<BillOweFeeDto> billOweFeeDtos = BeanConvertUtil.covertBeanList(feeServiceDaoImpl.queryBillOweFees(BeanConvertUtil.beanCovertMap(billDto)), BillOweFeeDto.class);\n-\n         return billOweFeeDtos;\n-\n     }\n \n     /**\n@@ -273,6 +267,7 @@ public class FeeInnerServiceSMOImpl extends BaseServiceSMO implements IFeeInnerS\n      * @param billDto\n      * @return\n      */\n+\n     @Override\n     public int insertBillOweFees(@RequestBody BillOweFeeDto billDto) {\n         return feeServiceDaoImpl.insertBillOweFees(BeanConvertUtil.beanCovertMap(billDto));\n@@ -289,6 +284,7 @@ public class FeeInnerServiceSMOImpl extends BaseServiceSMO implements IFeeInnerS\n      * @param billDto\n      * @return\n      */\n+\n     @Override\n     public int insertBill(@RequestBody BillDto billDto) {\n         return feeServiceDaoImpl.insertBill(BeanConvertUtil.beanCovertMap(billDto));\n@@ -314,46 +310,40 @@ public class FeeInnerServiceSMOImpl extends BaseServiceSMO implements IFeeInnerS\n \n     @Override\n     public JSONArray getAssetsFee(@RequestBody String communityId) {\n-\n         JSONArray data = new JSONArray();\n         FeeConfigDto feeConfigDto = new FeeConfigDto();\n         feeConfigDto.setCommunityId(communityId);\n         feeConfigDto.setCurTime(DateUtil.getNow(DateUtil.DATE_FORMATE_STRING_A));\n         List<FeeConfigDto> feeConfigDtos = feeConfigInnerServiceSMOImpl.queryFeeConfigs(feeConfigDto);\n-\n         if (feeConfigDtos == null || feeConfigDtos.size() < 1) {\n             return data;\n         }\n \n-\n         for (FeeConfigDto tmpFeeConfigDto : feeConfigDtos) {\n             dealFeeConfig(data, tmpFeeConfigDto);\n         }\n-\n-\n         return data;\n     }\n \n+\n     private void dealFeeConfig(JSONArray data, FeeConfigDto tmpFeeConfigDto) {\n         JSONObject config = new JSONObject();\n         Map info = new HashMap();\n         info.put(\"configId\", tmpFeeConfigDto.getConfigId());\n         info.put(\"communityId\", tmpFeeConfigDto.getCommunityId());\n-        info.put(\"arrearsEndTime\", DateUtil.getNow(DateUtil.DATE_FORMATE_STRING_A));\n+        info.put(\"arrearsEndTime\",\n+            DateUtil.getNow(DateUtil.DATE_FORMATE_STRING_A));\n         info.put(\"state\", FeeDto.STATE_DOING);\n         int oweFeeCount = feeServiceDaoImpl.queryFeesCount(info);\n         config.put(\"oweFeeCount\", oweFeeCount);\n-\n         info.put(\"noArrearsEndTime\", DateUtil.getNow(DateUtil.DATE_FORMATE_STRING_A));\n         info.put(\"state\", FeeDto.STATE_DOING);\n         int feeCount = feeServiceDaoImpl.queryFeesCount(info);\n         config.put(\"feeCount\", feeCount);\n-\n         config.put(\"feeName\", tmpFeeConfigDto.getFeeName());\n         data.add(config);\n     }\n \n-\n     public IFeeServiceDao getFeeServiceDaoImpl() {\n         return feeServiceDaoImpl;\n     }\n@@ -369,4 +359,4 @@ public class FeeInnerServiceSMOImpl extends BaseServiceSMO implements IFeeInnerS\n     public void setUserInnerServiceSMOImpl(IUserInnerServiceSMO userInnerServiceSMOImpl) {\n         this.userInnerServiceSMOImpl = userInnerServiceSMOImpl;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 68
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "262",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 174).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "262",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "262",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/234/FeeInnerServiceSMOImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/styler_random/234/FeeInnerServiceSMOImpl.java\nindex dfe8e0b7985..76c000d1bb8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/234/FeeInnerServiceSMOImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/styler_random/234/FeeInnerServiceSMOImpl.java\n@@ -259,9 +259,7 @@ public class FeeInnerServiceSMOImpl extends BaseServiceSMO implements IFeeInnerS\n \n         if (page != PageDto.DEFAULT_PAGE) {\n             billDto.setPage((page - 1) * billDto.getRow());\n-        }\n-\n-        List<BillOweFeeDto> billOweFeeDtos = BeanConvertUtil.covertBeanList(feeServiceDaoImpl.queryBillOweFees(BeanConvertUtil.beanCovertMap(billDto)), BillOweFeeDto.class);\n+        }List<BillOweFeeDto> billOweFeeDtos = BeanConvertUtil.covertBeanList(feeServiceDaoImpl.queryBillOweFees(BeanConvertUtil.beanCovertMap(billDto)), BillOweFeeDto.class);\n \n         return billOweFeeDtos;\n \n",
            "diff_size": 3
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "263",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 169).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/234/FeeInnerServiceSMOImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/styler_three_grams/234/FeeInnerServiceSMOImpl.java\nindex dfe8e0b7985..4921f33de02 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/234/FeeInnerServiceSMOImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/styler_three_grams/234/FeeInnerServiceSMOImpl.java\n@@ -260,8 +260,7 @@ public class FeeInnerServiceSMOImpl extends BaseServiceSMO implements IFeeInnerS\n         if (page != PageDto.DEFAULT_PAGE) {\n             billDto.setPage((page - 1) * billDto.getRow());\n         }\n-\n-        List<BillOweFeeDto> billOweFeeDtos = BeanConvertUtil.covertBeanList(feeServiceDaoImpl.queryBillOweFees(BeanConvertUtil.beanCovertMap(billDto)), BillOweFeeDto.class);\n+    List<BillOweFeeDto> billOweFeeDtos = BeanConvertUtil.covertBeanList(feeServiceDaoImpl.queryBillOweFees(BeanConvertUtil.beanCovertMap(billDto)), BillOweFeeDto.class);\n \n         return billOweFeeDtos;\n \n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
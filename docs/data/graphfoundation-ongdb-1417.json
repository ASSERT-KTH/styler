{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1417",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "40",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "107",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "59",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "65",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1417/EntryRecord.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1417/EntryRecord.java\nindex f73d19196bc..88cb5db5c5f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1417/EntryRecord.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1417/EntryRecord.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering.core.consensus.log;\n \n import java.io.IOException;\n@@ -33,52 +34,51 @@ import org.neo4j.storageengine.api.WritableChannel;\n  */\n public class EntryRecord\n {\n-    private final long logIndex;\n-    private final RaftLogEntry logEntry;\n+  private final long logIndex;\n+  private final RaftLogEntry logEntry;\n \n-    public EntryRecord( long logIndex, RaftLogEntry logEntry )\n-    {\n-        this.logIndex = logIndex;\n-        this.logEntry = logEntry;\n-    }\n+  public EntryRecord(long logIndex, RaftLogEntry logEntry)\n+  {\n+    this.logIndex = logIndex;\n+    this.logEntry = logEntry;\n+  }\n \n-    public RaftLogEntry logEntry()\n-    {\n-        return logEntry;\n-    }\n+  public RaftLogEntry logEntry()\n+  {\n+    return logEntry;\n+  }\n \n-    public long logIndex()\n-    {\n-        return logIndex;\n-    }\n+  public long logIndex()\n+  {\n+    return logIndex;\n+  }\n \n-    public static EntryRecord read( ReadableChannel channel, ChannelMarshal<ReplicatedContent> contentMarshal )\n-            throws IOException, EndOfStreamException\n+  public static EntryRecord read(ReadableChannel channel, ChannelMarshal<ReplicatedContent> contentMarshal)\n+      throws IOException, EndOfStreamException\n+  {\n+    try\n     {\n-        try\n-        {\n-            long appendIndex = channel.getLong();\n-            long term = channel.getLong();\n-            ReplicatedContent content = contentMarshal.unmarshal( channel );\n-            return new EntryRecord( appendIndex, new RaftLogEntry( term, content ) );\n-        }\n-        catch ( ReadPastEndException e )\n-        {\n-            throw new EndOfStreamException( e );\n-        }\n-    }\n-\n-    public static void write( WritableChannel channel, ChannelMarshal<ReplicatedContent> contentMarshal,\n-            long logIndex, long term, ReplicatedContent content ) throws IOException\n+      long appendIndex = channel.getLong();\n+      long term = channel.getLong();\n+      ReplicatedContent content = contentMarshal.unmarshal(channel);\n+      return new EntryRecord(appendIndex, new RaftLogEntry(term, content));\n+    } catch (ReadPastEndException e)\n     {\n-        channel.putLong( logIndex );\n-        channel.putLong( term );\n-        contentMarshal.marshal( content, channel );\n+      throw new EndOfStreamException(e);\n     }\n+  }\n \n-    @Override\n-    public String toString()\n-    {\n-        return String.format( \"%d: %s\", logIndex, logEntry );\n-    }\n+  public static void write(WritableChannel channel, ChannelMarshal<ReplicatedContent> contentMarshal,\n+                           long logIndex, long term, ReplicatedContent content) throws IOException\n+  {\n+    channel.putLong(logIndex);\n+    channel.putLong(term);\n+    contentMarshal.marshal(content, channel);\n+  }\n+\n+  @Override\n+  public String toString()\n+  {\n+    return String.format(\"%d: %s\", logIndex, logEntry);\n+  }\n }\n",
            "diff_size": 52
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1417/EntryRecord.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1417/EntryRecord.java\nindex f73d19196bc..64973fd11b1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1417/EntryRecord.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1417/EntryRecord.java\n@@ -52,9 +52,8 @@ public class EntryRecord\n         return logIndex;\n     }\n \n-    public static EntryRecord read( ReadableChannel channel, ChannelMarshal<ReplicatedContent> contentMarshal )\n-            throws IOException, EndOfStreamException\n-    {\n+    public static EntryRecord read( ReadableChannel channel, ChannelMarshal<ReplicatedContent> contentMarshal ) throws IOException, EndOfStreamException\n+{\n         try\n         {\n             long appendIndex = channel.getLong();\n@@ -70,7 +69,7 @@ public class EntryRecord\n \n     public static void write( WritableChannel channel, ChannelMarshal<ReplicatedContent> contentMarshal,\n             long logIndex, long term, ReplicatedContent content ) throws IOException\n-    {\n+{\n         channel.putLong( logIndex );\n         channel.putLong( term );\n         contentMarshal.marshal( content, channel );\n@@ -81,4 +80,4 @@ public class EntryRecord\n     {\n         return String.format( \"%d: %s\", logIndex, logEntry );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "Activiti-Activiti",
    "error_id": "527",
    "information": {
        "errors": [
            {
                "line": "16",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * limitations under the License.\n */\npackage org.activiti.spring.conformance.util.security;\n\nimport static org.assertj.core.api.Assertions.assertThat;\n",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/527/SecurityUtil.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler/527/SecurityUtil.java\nindex 1f4ac9bcc39..3ae72930f70 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/527/SecurityUtil.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler/527/SecurityUtil.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.spring.conformance.util.security;\n \n import static org.assertj.core.api.Assertions.assertThat;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/527/SecurityUtil.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/intellij/527/SecurityUtil.java\nindex 1f4ac9bcc39..ec85c86797b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/527/SecurityUtil.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/intellij/527/SecurityUtil.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.spring.conformance.util.security;\n \n import static org.assertj.core.api.Assertions.assertThat;\n@@ -36,7 +37,7 @@ public class SecurityUtil {\n     private final UserDetailsService userDetailsService;\n \n     private final SecurityManager securityManager;\n-    \n+\n     public SecurityUtil(UserDetailsService userDetailsService,\n                         SecurityManager securityManager) {\n         this.userDetailsService = userDetailsService;\n",
            "diff_size": 2
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "16",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "31",
                    "severity": "error",
                    "message": "'CLASS_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/527/SecurityUtil.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/codebuff/527/SecurityUtil.java\nindex 1f4ac9bcc39..4cce9ec9439 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/527/SecurityUtil.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/codebuff/527/SecurityUtil.java\n@@ -16,7 +16,6 @@\n package org.activiti.spring.conformance.util.security;\n \n import static org.assertj.core.api.Assertions.assertThat;\n-\n import org.activiti.api.runtime.shared.security.SecurityManager;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n@@ -26,68 +25,65 @@ import org.springframework.security.core.context.SecurityContextHolder;\n import org.springframework.security.core.context.SecurityContextImpl;\n import org.springframework.security.core.userdetails.UserDetails;\n import org.springframework.security.core.userdetails.UserDetailsService;\n-\n import java.util.Collection;\n \n-public class SecurityUtil {\n-\n-    private Logger logger = LoggerFactory.getLogger(SecurityUtil.class);\n-\n-    private final UserDetailsService userDetailsService;\n-\n-    private final SecurityManager securityManager;\n-    \n-    public SecurityUtil(UserDetailsService userDetailsService,\n-                        SecurityManager securityManager) {\n-        this.userDetailsService = userDetailsService;\n-        this.securityManager = securityManager;\n-    }\n-\n-    public void logInAs(String username) {\n-\n-        UserDetails user = userDetailsService.loadUserByUsername(username);\n-        if (user == null) {\n-            throw new IllegalStateException(\"User \" + username + \" doesn't exist, please provide a valid user\");\n-        }\n-        logger.info(\"> Logged in as: \" + username);\n-        SecurityContextHolder.setContext(new SecurityContextImpl(new Authentication() {\n-            @Override\n-            public Collection<? extends GrantedAuthority> getAuthorities() {\n-                return user.getAuthorities();\n-            }\n \n-            @Override\n-            public Object getCredentials() {\n-                return user.getPassword();\n-            }\n-\n-            @Override\n-            public Object getDetails() {\n-                return user;\n-            }\n-\n-            @Override\n-            public Object getPrincipal() {\n-                return user;\n-            }\n+public class SecurityUtil {\n \n-            @Override\n-            public boolean isAuthenticated() {\n-                return true;\n-            }\n+  private Logger logger = LoggerFactory.getLogger(SecurityUtil.class);\n \n-            @Override\n-            public void setAuthenticated(boolean isAuthenticated) throws IllegalArgumentException {\n+  private final UserDetailsService userDetailsService;\n \n-            }\n+  private final SecurityManager securityManager;\n \n-            @Override\n-            public String getName() {\n-                return user.getUsername();\n-            }\n-        }));\n-        org.activiti.engine.impl.identity.Authentication.setAuthenticatedUserId(username);\n+  public SecurityUtil(UserDetailsService userDetailsService, SecurityManager securityManager) {\n+    this.userDetailsService = userDetailsService;\n+    this.securityManager = securityManager;\n+  }\n \n-        assertThat(securityManager.getAuthenticatedUserId()).isEqualTo(username);\n+  public void logInAs(String username) {\n+    UserDetails user = userDetailsService.loadUserByUsername(username);\n+    if (user == null) {\n+      throw new IllegalStateException(\"User \" + username + \" doesn't exist, please provide a valid user\");\n     }\n-}\n+    logger.info(\"> Logged in as: \" + username);\n+    SecurityContextHolder.setContext(new SecurityContextImpl(new Authentication() {\n+\n+      @Override\n+      public Collection<? extends GrantedAuthority> getAuthorities() {\n+        return user.getAuthorities();\n+      }\n+\n+      @Override\n+      public Object getCredentials() {\n+        return user.getPassword();\n+      }\n+\n+      @Override\n+      public Object getDetails() {\n+        return user;\n+      }\n+\n+      @Override\n+      public Object getPrincipal() {\n+        return user;\n+      }\n+\n+      @Override\n+      public boolean isAuthenticated() {\n+        return true;\n+      }\n+\n+      @Override\n+      public void setAuthenticated(boolean isAuthenticated) throws IllegalArgumentException {\n+      }\n+\n+      @Override\n+      public String getName() {\n+        return user.getUsername();\n+      }\n+                                     }));\n+    org.activiti.engine.impl.identity.Authentication.setAuthenticatedUserId(username);\n+    assertThat(securityManager.getAuthenticatedUserId()).isEqualTo(username);\n+  }\n+}\n\\ No newline at end of file\n",
            "diff_size": 100
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/527/SecurityUtil.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_random/527/SecurityUtil.java\nindex 1f4ac9bcc39..3ae72930f70 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/527/SecurityUtil.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_random/527/SecurityUtil.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.spring.conformance.util.security;\n \n import static org.assertj.core.api.Assertions.assertThat;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/527/SecurityUtil.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_three_grams/527/SecurityUtil.java\nindex 1f4ac9bcc39..3ae72930f70 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/527/SecurityUtil.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_three_grams/527/SecurityUtil.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.spring.conformance.util.security;\n \n import static org.assertj.core.api.Assertions.assertThat;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
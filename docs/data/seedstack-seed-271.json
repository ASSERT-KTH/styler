{
    "project_name": "seedstack-seed",
    "error_id": "271",
    "information": {
        "errors": [
            {
                "line": "8",
                "severity": "warning",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\npackage org.seedstack.seed.el;\n\nimport javax.el.ELContext;\nimport javax.el.MethodExpression;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-seed/errored/1/271/ELService.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-seed/styler/271/ELService.java\nindex 411f18270eb..820f3fe5474 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-seed/errored/1/271/ELService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-seed/styler/271/ELService.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.seed.el;\n \n import javax.el.ELContext;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-seed/errored/1/271/ELService.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-seed/intellij/271/ELService.java\nindex 411f18270eb..820f3fe5474 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-seed/errored/1/271/ELService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-seed/intellij/271/ELService.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.seed.el;\n \n import javax.el.ELContext;\n",
            "diff_size": 1
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "8",
                    "severity": "warning",
                    "message": "'import' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "8",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "8",
                    "column": "56",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "8",
                    "column": "89",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "8",
                    "column": "121",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "8",
                    "column": "161",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "10",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 0, expected is 3, indentation should be the same level as line 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "12",
                    "column": "30",
                    "severity": "warning",
                    "message": "WhitespaceAround: '{' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "14",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 4, expected is 7, indentation should be the same level as line 21.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "23",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 4, expected is 7, indentation should be the same level as line 29.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "31",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 4, expected is 7, indentation should be the same level as line 37.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "39",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 4, expected is 7, indentation should be the same level as line 41.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "41",
                    "severity": "warning",
                    "message": "'interface def ident' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "41",
                    "column": "35",
                    "severity": "warning",
                    "message": "WhitespaceAround: '{' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "43",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 8, expected is 11, indentation should be the same level as line 48.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "50",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 8, expected is 11, indentation should be the same level as line 54.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "54",
                    "column": "54",
                    "severity": "warning",
                    "message": "WhitespaceAround: '}' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "56",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 4, expected is 7, indentation should be the same level as line 58.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "58",
                    "severity": "warning",
                    "message": "'interface def ident' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "58",
                    "column": "38",
                    "severity": "warning",
                    "message": "WhitespaceAround: '{' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "60",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 8, expected is 11, indentation should be the same level as line 64.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "66",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 8, expected is 11, indentation should be the same level as line 71.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "71",
                    "column": "87",
                    "severity": "warning",
                    "message": "WhitespaceAround: '}' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "73",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 4, expected is 7, indentation should be the same level as line 75.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "75",
                    "severity": "warning",
                    "message": "'interface def ident' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "75",
                    "column": "41",
                    "severity": "warning",
                    "message": "WhitespaceAround: '{' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "77",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 8, expected is 11, indentation should be the same level as line 81.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "83",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 8, expected is 11, indentation should be the same level as line 87.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "87",
                    "column": "46",
                    "severity": "warning",
                    "message": "WhitespaceAround: '}' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "89",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 4, expected is 7, indentation should be the same level as line 91.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "91",
                    "severity": "warning",
                    "message": "'interface def ident' has incorrect indentation level 5, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "91",
                    "column": "42",
                    "severity": "warning",
                    "message": "WhitespaceAround: '{' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "93",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 8, expected is 11, indentation should be the same level as line 98.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "100",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 8, expected is 11, indentation should be the same level as line 104.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "104",
                    "column": "48",
                    "severity": "warning",
                    "message": "WhitespaceAround: '}' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "104",
                    "column": "48",
                    "severity": "warning",
                    "message": "WhitespaceAround: '}' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "104",
                    "column": "49",
                    "severity": "warning",
                    "message": "WhitespaceAround: '}' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-seed/errored/1/271/ELService.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-seed/codebuff/271/ELService.java\nindex 411f18270eb..4aeb0675c5c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-seed/errored/1/271/ELService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-seed/codebuff/271/ELService.java\n@@ -5,17 +5,11 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n-package org.seedstack.seed.el;\n-\n-import javax.el.ELContext;\n-import javax.el.MethodExpression;\n-import javax.el.ValueExpression;\n-import org.seedstack.seed.SeedException;\n+package org.seedstack.seed.el;import javax.el.ELContext;import javax.el.MethodExpression;import javax.el.ValueExpression;import org.seedstack.seed.SeedException;\n \n /**\n  * The ELService provides a DSL to facilitate the evaluation of expression language.\n- */\n-public interface ELService {\n+ */public interface ELService{\n \n     /**\n      * Sets the expression language to evaluate and specifies the expected return type.\n@@ -24,8 +18,7 @@ public interface ELService {\n      * @param returnType the expected return type\n      * @return an ELContextProvider\n      * @throws SeedException if el is blank or returnType is null\n-     */\n-    ELContextProvider withExpression(String el, Class returnType);\n+     */ELContextProvider withExpression(String el,Class returnType);\n \n     /**\n      * Sets a ValueExpression to evaluate.\n@@ -33,8 +26,7 @@ public interface ELService {\n      * @param valueExpression the value expression to set\n      * @return ValueExpressionProvider\n      * @throws SeedException if the valueExpression is null\n-     */\n-    ValueExpressionProvider withValueExpression(ValueExpression valueExpression);\n+     */ValueExpressionProvider withValueExpression(ValueExpression valueExpression);\n \n     /**\n      * Sets a MethodExpression to invoke.\n@@ -42,90 +34,71 @@ public interface ELService {\n      * @param methodExpression the method expression to set\n      * @return MethodExpressionProvider\n      * @throws SeedException if the methodExpression is null\n-     */\n-    MethodExpressionProvider withMethodExpression(MethodExpression methodExpression);\n+     */MethodExpressionProvider withMethodExpression(MethodExpression methodExpression);\n \n     /**\n      * This interface provides methods to add ELContext for EL evaluation.\n-     */\n-    interface ELContextProvider {\n+     */interface ELContextProvider{\n \n         /**\n          * Use a specific context to use.\n          *\n          * @param elContext the context to use.\n          * @return ELExpressionProvider\n-         */\n-        ELExpressionProvider withContext(ELContext elContext);\n+         */ELExpressionProvider withContext(ELContext elContext);\n \n         /**\n          * Use the default context.\n          *\n          * @return ELExpressionProvider\n-         */\n-        ELExpressionProvider withDefaultContext();\n-    }\n+         */ELExpressionProvider withDefaultContext();}\n \n     /**\n      * This interface provides methods to add properties for the EL evaluation.\n-     */\n-    interface ELExpressionProvider {\n+     */interface ELExpressionProvider{\n \n         /**\n          * Gets a {@link javax.el.ValueExpression}.\n          *\n          * @return ValueExpressionProvider\n-         */\n-        ValueExpressionProvider asValueExpression();\n+         */ValueExpressionProvider asValueExpression();\n \n         /**\n          * Gets a {@link javax.el.MethodExpression}.\n          *\n          * @param expectedParamTypes the argument types of the method specified in the EL\n          * @return MethodExpressionProvider\n-         */\n-        MethodExpressionProvider asMethodExpression(Class<?>[] expectedParamTypes);\n-\n-    }\n+         */MethodExpressionProvider asMethodExpression(Class<?>[ ]expectedParamTypes);}\n \n     /**\n      * This interface provides methods to evaluate a value expression.\n-     */\n-    interface ValueExpressionProvider {\n+     */interface ValueExpressionProvider{\n \n         /**\n          * Evaluates the EL.\n          *\n          * @return EL result\n-         */\n-        Object eval();\n+         */Object eval();\n \n         /**\n          * Gets the ValueExpression.\n          *\n          * @return ValueExpression\n-         */\n-        ValueExpression valueExpression();\n-    }\n+         */ValueExpression valueExpression();}\n \n     /**\n      * This interface provides methods to evaluate a method expression.\n-     */\n-    interface MethodExpressionProvider {\n+     */interface MethodExpressionProvider{\n \n         /**\n          * Invokes the method specified in the EL with the provided arguments.\n          *\n          * @param args arguments to pass to the method\n          * @return EL result\n-         */\n-        Object invoke(Object[] args);\n+         */Object invoke(Object[ ]args);\n \n         /**\n          * Gets the MethodExpressionProvider.\n          *\n          * @return MethodExpressionProvider\n-         */\n-        MethodExpression methodExpression();\n-    }\n-}\n+         */MethodExpression methodExpression();}}\n\\ No newline at end of file\n",
            "diff_size": 44
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "8",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-seed/errored/1/271/ELService.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-seed/styler_three_grams/271/ELService.java\nindex 411f18270eb..820f3fe5474 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-seed/errored/1/271/ELService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-seed/styler_three_grams/271/ELService.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.seed.el;\n \n import javax.el.ELContext;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff",
        "styler_random"
    ]
}
{
    "project_name": "opencb-opencga",
    "error_id": "358",
    "information": {
        "errors": [
            {
                "line": "4",
                "column": "13",
                "severity": "error",
                "message": "File contains tab characters (this is the first instance).",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
            }
        ]
    },
    "source_code": "\npublic class OverrepresentedSeq {\n// #Sequence\tCount\tPercentage\tPossible Source\n\n    private String sequence;\n    private int count;",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "4",
                    "column": "13",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "4",
                    "column": "13",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/errored/1/358/OverrepresentedSeq.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/intellij/358/OverrepresentedSeq.java\nindex 35b0cc0c33d..9f283af84ec 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/errored/1/358/OverrepresentedSeq.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/intellij/358/OverrepresentedSeq.java\n@@ -3,65 +3,65 @@ package org.opencb.opencga.core.models.variant.fastqc;\n public class OverrepresentedSeq {\n // #Sequence\tCount\tPercentage\tPossible Source\n \n-    private String sequence;\n-    private int count;\n-    private double percentage;\n-    private String possibleSource;\n+  private String sequence;\n+  private int count;\n+  private double percentage;\n+  private String possibleSource;\n \n-    public OverrepresentedSeq() {\n-    }\n+  public OverrepresentedSeq() {\n+  }\n \n-    public OverrepresentedSeq(String sequence, int count, double percentage, String possibleSource) {\n-        this.sequence = sequence;\n-        this.count = count;\n-        this.percentage = percentage;\n-        this.possibleSource = possibleSource;\n-    }\n+  public OverrepresentedSeq(String sequence, int count, double percentage, String possibleSource) {\n+    this.sequence = sequence;\n+    this.count = count;\n+    this.percentage = percentage;\n+    this.possibleSource = possibleSource;\n+  }\n \n-    @Override\n-    public String toString() {\n-        final StringBuilder sb = new StringBuilder(\"OverrepresentedSeq{\");\n-        sb.append(\"sequence='\").append(sequence).append('\\'');\n-        sb.append(\", count=\").append(count);\n-        sb.append(\", percentage=\").append(percentage);\n-        sb.append(\", possibleSource='\").append(possibleSource).append('\\'');\n-        sb.append('}');\n-        return sb.toString();\n-    }\n+  @Override\n+  public String toString() {\n+    final StringBuilder sb = new StringBuilder(\"OverrepresentedSeq{\");\n+    sb.append(\"sequence='\").append(sequence).append('\\'');\n+    sb.append(\", count=\").append(count);\n+    sb.append(\", percentage=\").append(percentage);\n+    sb.append(\", possibleSource='\").append(possibleSource).append('\\'');\n+    sb.append('}');\n+    return sb.toString();\n+  }\n \n-    public String getSequence() {\n-        return sequence;\n-    }\n+  public String getSequence() {\n+    return sequence;\n+  }\n \n-    public OverrepresentedSeq setSequence(String sequence) {\n-        this.sequence = sequence;\n-        return this;\n-    }\n+  public OverrepresentedSeq setSequence(String sequence) {\n+    this.sequence = sequence;\n+    return this;\n+  }\n \n-    public int getCount() {\n-        return count;\n-    }\n+  public int getCount() {\n+    return count;\n+  }\n \n-    public OverrepresentedSeq setCount(int count) {\n-        this.count = count;\n-        return this;\n-    }\n+  public OverrepresentedSeq setCount(int count) {\n+    this.count = count;\n+    return this;\n+  }\n \n-    public double getPercentage() {\n-        return percentage;\n-    }\n+  public double getPercentage() {\n+    return percentage;\n+  }\n \n-    public OverrepresentedSeq setPercentage(double percentage) {\n-        this.percentage = percentage;\n-        return this;\n-    }\n+  public OverrepresentedSeq setPercentage(double percentage) {\n+    this.percentage = percentage;\n+    return this;\n+  }\n \n-    public String getPossibleSource() {\n-        return possibleSource;\n-    }\n+  public String getPossibleSource() {\n+    return possibleSource;\n+  }\n \n-    public OverrepresentedSeq setPossibleSource(String possibleSource) {\n-        this.possibleSource = possibleSource;\n-        return this;\n-    }\n+  public OverrepresentedSeq setPossibleSource(String possibleSource) {\n+    this.possibleSource = possibleSource;\n+    return this;\n+  }\n }\n",
            "diff_size": 50
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "5",
                    "column": "13",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/errored/1/358/OverrepresentedSeq.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/naturalize/358/OverrepresentedSeq.java\nindex 35b0cc0c33d..7585a0fa406 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/errored/1/358/OverrepresentedSeq.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/naturalize/358/OverrepresentedSeq.java\n@@ -1,6 +1,7 @@\n package org.opencb.opencga.core.models.variant.fastqc;\n \n public class OverrepresentedSeq {\n+\n // #Sequence\tCount\tPercentage\tPossible Source\n \n     private String sequence;\n@@ -64,4 +65,4 @@ public class OverrepresentedSeq {\n         this.possibleSource = possibleSource;\n         return this;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "4",
                    "column": "13",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "4",
                    "column": "13",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
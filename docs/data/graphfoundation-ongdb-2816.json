{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2816",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "50",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "144",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "59",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "16",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2816/CoreStateDownloaderService.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2816/CoreStateDownloaderService.java\nindex 9bf622040bb..66d149499dd 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2816/CoreStateDownloaderService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2816/CoreStateDownloaderService.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering.core.state.snapshot;\n \n import java.util.Optional;\n@@ -36,57 +37,57 @@ import static org.neo4j.scheduler.JobScheduler.Groups.downloadSnapshot;\n \n public class CoreStateDownloaderService extends LifecycleAdapter\n {\n-    private final JobScheduler jobScheduler;\n-    private final CoreStateDownloader downloader;\n-    private final CommandApplicationProcess applicationProcess;\n-    private final Log log;\n-    private final TimeoutStrategy.Timeout downloaderPauseStrategy;\n-    private PersistentSnapshotDownloader currentJob;\n-    private JobHandle jobHandle;\n-    private boolean stopped;\n-    private Supplier<DatabaseHealth> dbHealth;\n+  private final JobScheduler jobScheduler;\n+  private final CoreStateDownloader downloader;\n+  private final CommandApplicationProcess applicationProcess;\n+  private final Log log;\n+  private final TimeoutStrategy.Timeout downloaderPauseStrategy;\n+  private PersistentSnapshotDownloader currentJob;\n+  private JobHandle jobHandle;\n+  private boolean stopped;\n+  private Supplier<DatabaseHealth> dbHealth;\n \n-    public CoreStateDownloaderService( JobScheduler jobScheduler, CoreStateDownloader downloader, CommandApplicationProcess applicationProcess,\n-            LogProvider logProvider, TimeoutStrategy.Timeout downloaderPauseStrategy, Supplier<DatabaseHealth> dbHealth )\n-    {\n-        this.jobScheduler = jobScheduler;\n-        this.downloader = downloader;\n-        this.applicationProcess = applicationProcess;\n-        this.log = logProvider.getLog( getClass() );\n-        this.downloaderPauseStrategy = downloaderPauseStrategy;\n-        this.dbHealth = dbHealth;\n-    }\n+  public CoreStateDownloaderService(JobScheduler jobScheduler, CoreStateDownloader downloader, CommandApplicationProcess applicationProcess,\n+                                    LogProvider logProvider, TimeoutStrategy.Timeout downloaderPauseStrategy, Supplier<DatabaseHealth> dbHealth)\n+  {\n+    this.jobScheduler = jobScheduler;\n+    this.downloader = downloader;\n+    this.applicationProcess = applicationProcess;\n+    this.log = logProvider.getLog(getClass());\n+    this.downloaderPauseStrategy = downloaderPauseStrategy;\n+    this.dbHealth = dbHealth;\n+  }\n \n-    public synchronized Optional<JobHandle> scheduleDownload( CatchupAddressProvider addressProvider )\n+  public synchronized Optional<JobHandle> scheduleDownload(CatchupAddressProvider addressProvider)\n+  {\n+    if (stopped)\n     {\n-        if ( stopped )\n-        {\n-            return Optional.empty();\n-        }\n-\n-        if ( currentJob == null || currentJob.hasCompleted() )\n-        {\n-            currentJob = new PersistentSnapshotDownloader( addressProvider, applicationProcess, downloader, log,\n-                    downloaderPauseStrategy, dbHealth );\n-            jobHandle = jobScheduler.schedule( downloadSnapshot, currentJob );\n-            return Optional.of( jobHandle );\n-        }\n-        return Optional.of( jobHandle );\n+      return Optional.empty();\n     }\n \n-    @Override\n-    public synchronized void stop() throws Throwable\n+    if (currentJob == null || currentJob.hasCompleted())\n     {\n-        stopped = true;\n-\n-        if ( currentJob != null )\n-        {\n-            currentJob.stop();\n-        }\n+      currentJob = new PersistentSnapshotDownloader(addressProvider, applicationProcess, downloader, log,\n+          downloaderPauseStrategy, dbHealth);\n+      jobHandle = jobScheduler.schedule(downloadSnapshot, currentJob);\n+      return Optional.of(jobHandle);\n     }\n+    return Optional.of(jobHandle);\n+  }\n+\n+  @Override\n+  public synchronized void stop() throws Throwable\n+  {\n+    stopped = true;\n \n-    public synchronized Optional<JobHandle> downloadJob()\n+    if (currentJob != null)\n     {\n-        return Optional.ofNullable( jobHandle );\n+      currentJob.stop();\n     }\n+  }\n+\n+  public synchronized Optional<JobHandle> downloadJob()\n+  {\n+    return Optional.ofNullable(jobHandle);\n+  }\n }\n",
            "diff_size": 59
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2816/CoreStateDownloaderService.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2816/CoreStateDownloaderService.java\nindex 9bf622040bb..1128d5252d4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2816/CoreStateDownloaderService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2816/CoreStateDownloaderService.java\n@@ -68,10 +68,11 @@ public class CoreStateDownloaderService extends LifecycleAdapter\n         {\n             currentJob = new PersistentSnapshotDownloader( addressProvider, applicationProcess, downloader, log,\n                     downloaderPauseStrategy, dbHealth );\n-            jobHandle = jobScheduler.schedule( downloadSnapshot, currentJob );\n+jobHandle = jobScheduler.schedule( downloadSnapshot, currentJob );\n             return Optional.of( jobHandle );\n         }\n-        return Optional.of( jobHandle );\n+\n+return Optional.of( jobHandle );\n     }\n \n     @Override\n@@ -89,4 +90,4 @@ public class CoreStateDownloaderService extends LifecycleAdapter\n     {\n         return Optional.ofNullable( jobHandle );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "47",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 253).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "64",
                    "column": "32",
                    "severity": "error",
                    "message": "'||' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2816/CoreStateDownloaderService.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/2816/CoreStateDownloaderService.java\nindex 9bf622040bb..faed156c305 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2816/CoreStateDownloaderService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/2816/CoreStateDownloaderService.java\n@@ -21,7 +21,6 @@ package org.neo4j.causalclustering.core.state.snapshot;\n \n import java.util.Optional;\n import java.util.function.Supplier;\n-\n import org.neo4j.causalclustering.catchup.CatchupAddressProvider;\n import org.neo4j.causalclustering.core.state.CommandApplicationProcess;\n import org.neo4j.causalclustering.helper.TimeoutStrategy;\n@@ -31,7 +30,6 @@ import org.neo4j.kernel.lifecycle.LifecycleAdapter;\n import org.neo4j.logging.Log;\n import org.neo4j.logging.LogProvider;\n import org.neo4j.scheduler.JobScheduler.JobHandle;\n-\n import static org.neo4j.scheduler.JobScheduler.Groups.downloadSnapshot;\n \n public class CoreStateDownloaderService extends LifecycleAdapter\n@@ -46,8 +44,7 @@ public class CoreStateDownloaderService extends LifecycleAdapter\n     private boolean stopped;\n     private Supplier<DatabaseHealth> dbHealth;\n \n-    public CoreStateDownloaderService( JobScheduler jobScheduler, CoreStateDownloader downloader, CommandApplicationProcess applicationProcess,\n-            LogProvider logProvider, TimeoutStrategy.Timeout downloaderPauseStrategy, Supplier<DatabaseHealth> dbHealth )\n+    public CoreStateDownloaderService( JobScheduler jobScheduler, CoreStateDownloader downloader, CommandApplicationProcess applicationProcess, LogProvider logProvider, TimeoutStrategy.Timeout downloaderPauseStrategy, Supplier<DatabaseHealth> dbHealth )\n     {\n         this.jobScheduler = jobScheduler;\n         this.downloader = downloader;\n@@ -64,13 +61,13 @@ public class CoreStateDownloaderService extends LifecycleAdapter\n             return Optional.empty();\n         }\n \n-        if ( currentJob == null || currentJob.hasCompleted() )\n+        if ( currentJob == null|| currentJob.hasCompleted() )\n         {\n-            currentJob = new PersistentSnapshotDownloader( addressProvider, applicationProcess, downloader, log,\n-                    downloaderPauseStrategy, dbHealth );\n+            currentJob = new PersistentSnapshotDownloader( addressProvider, applicationProcess, downloader, log, downloaderPauseStrategy, dbHealth );\n             jobHandle = jobScheduler.schedule( downloadSnapshot, currentJob );\n             return Optional.of( jobHandle );\n         }\n+\n         return Optional.of( jobHandle );\n     }\n \n@@ -78,7 +75,6 @@ public class CoreStateDownloaderService extends LifecycleAdapter\n     public synchronized void stop() throws Throwable\n     {\n         stopped = true;\n-\n         if ( currentJob != null )\n         {\n             currentJob.stop();\n@@ -89,4 +85,4 @@ public class CoreStateDownloaderService extends LifecycleAdapter\n     {\n         return Optional.ofNullable( jobHandle );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 10
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3020",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "35",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "35",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "15",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3020/QueryEngineProvider.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3020/QueryEngineProvider.java\nindex 66d6a7832a9..1df563d9838 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3020/QueryEngineProvider.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3020/QueryEngineProvider.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.query;\n \n import java.util.Comparator;\n@@ -31,32 +32,32 @@ import static org.neo4j.helpers.collection.Iterables.asList;\n \n public abstract class QueryEngineProvider extends Service\n {\n-    public QueryEngineProvider( String name )\n-    {\n-        super( name );\n-    }\n+  public QueryEngineProvider(String name)\n+  {\n+    super(name);\n+  }\n \n-    protected abstract QueryExecutionEngine createEngine( Dependencies deps, GraphDatabaseAPI graphAPI );\n+  protected abstract QueryExecutionEngine createEngine(Dependencies deps, GraphDatabaseAPI graphAPI);\n \n-    protected abstract int enginePriority();\n+  protected abstract int enginePriority();\n \n-    public static QueryExecutionEngine initialize( Dependencies deps, GraphDatabaseAPI graphAPI,\n-            Iterable<QueryEngineProvider> providers )\n-    {\n-        List<QueryEngineProvider> engineProviders = asList( providers );\n-        engineProviders.sort( Comparator.comparingInt( QueryEngineProvider::enginePriority ) );\n-        QueryEngineProvider provider = Iterables.firstOrNull( engineProviders );\n-\n-        if ( provider == null )\n-        {\n-            return noEngine();\n-        }\n-        QueryExecutionEngine engine = provider.createEngine( deps, graphAPI );\n-        return deps.satisfyDependency( engine );\n-    }\n+  public static QueryExecutionEngine initialize(Dependencies deps, GraphDatabaseAPI graphAPI,\n+                                                Iterable<QueryEngineProvider> providers)\n+  {\n+    List<QueryEngineProvider> engineProviders = asList(providers);\n+    engineProviders.sort(Comparator.comparingInt(QueryEngineProvider::enginePriority));\n+    QueryEngineProvider provider = Iterables.firstOrNull(engineProviders);\n \n-    public static QueryExecutionEngine noEngine()\n+    if (provider == null)\n     {\n-        return NoQueryEngine.INSTANCE;\n+      return noEngine();\n     }\n+    QueryExecutionEngine engine = provider.createEngine(deps, graphAPI);\n+    return deps.satisfyDependency(engine);\n+  }\n+\n+  public static QueryExecutionEngine noEngine()\n+  {\n+    return NoQueryEngine.INSTANCE;\n+  }\n }\n",
            "diff_size": 31
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3020/QueryEngineProvider.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3020/QueryEngineProvider.java\nindex 66d6a7832a9..702543c4f91 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3020/QueryEngineProvider.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3020/QueryEngineProvider.java\n@@ -40,18 +40,17 @@ public abstract class QueryEngineProvider extends Service\n \n     protected abstract int enginePriority();\n \n-    public static QueryExecutionEngine initialize( Dependencies deps, GraphDatabaseAPI graphAPI,\n-            Iterable<QueryEngineProvider> providers )\n+    public static QueryExecutionEngine initialize( Dependencies deps, GraphDatabaseAPI graphAPI, Iterable<QueryEngineProvider> providers )\n     {\n         List<QueryEngineProvider> engineProviders = asList( providers );\n         engineProviders.sort( Comparator.comparingInt( QueryEngineProvider::enginePriority ) );\n         QueryEngineProvider provider = Iterables.firstOrNull( engineProviders );\n-\n-        if ( provider == null )\n+if ( provider == null )\n         {\n             return noEngine();\n         }\n-        QueryExecutionEngine engine = provider.createEngine( deps, graphAPI );\n+\n+QueryExecutionEngine engine = provider.createEngine( deps, graphAPI );\n         return deps.satisfyDependency( engine );\n     }\n \n@@ -59,4 +58,4 @@ public abstract class QueryEngineProvider extends Service\n     {\n         return NoQueryEngine.INSTANCE;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3020/QueryEngineProvider.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/3020/QueryEngineProvider.java\nindex 66d6a7832a9..ebfd4e1c7d1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3020/QueryEngineProvider.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/3020/QueryEngineProvider.java\n@@ -21,12 +21,10 @@ package org.neo4j.kernel.impl.query;\n \n import java.util.Comparator;\n import java.util.List;\n-\n import org.neo4j.helpers.Service;\n import org.neo4j.helpers.collection.Iterables;\n import org.neo4j.kernel.impl.util.Dependencies;\n import org.neo4j.kernel.internal.GraphDatabaseAPI;\n-\n import static org.neo4j.helpers.collection.Iterables.asList;\n \n public abstract class QueryEngineProvider extends Service\n@@ -36,21 +34,22 @@ public abstract class QueryEngineProvider extends Service\n         super( name );\n     }\n \n-    protected abstract QueryExecutionEngine createEngine( Dependencies deps, GraphDatabaseAPI graphAPI );\n+    protected abstract QueryExecutionEngine createEngine( Dependencies deps, GraphDatabaseAPI graphAPI )\n+    ;\n \n-    protected abstract int enginePriority();\n+    protected abstract int enginePriority()\n+    ;\n \n-    public static QueryExecutionEngine initialize( Dependencies deps, GraphDatabaseAPI graphAPI,\n-            Iterable<QueryEngineProvider> providers )\n+    public static QueryExecutionEngine initialize( Dependencies deps, GraphDatabaseAPI graphAPI, Iterable<QueryEngineProvider> providers )\n     {\n         List<QueryEngineProvider> engineProviders = asList( providers );\n         engineProviders.sort( Comparator.comparingInt( QueryEngineProvider::enginePriority ) );\n         QueryEngineProvider provider = Iterables.firstOrNull( engineProviders );\n-\n         if ( provider == null )\n         {\n             return noEngine();\n         }\n+\n         QueryExecutionEngine engine = provider.createEngine( deps, graphAPI );\n         return deps.satisfyDependency( engine );\n     }\n@@ -59,4 +58,4 @@ public abstract class QueryEngineProvider extends Service\n     {\n         return NoQueryEngine.INSTANCE;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 11
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
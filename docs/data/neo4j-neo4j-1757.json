{
    "project_name": "neo4j-neo4j",
    "error_id": "1757",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "47",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "105",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "194",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "194",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "208",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "208",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "221",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "221",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "235",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "235",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "249",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "249",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "263",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "263",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "271",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "271",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1757/Neo4jExtensionBuilder.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1757/Neo4jExtensionBuilder.java\nindex e0cf26f9b20..89080db716a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1757/Neo4jExtensionBuilder.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1757/Neo4jExtensionBuilder.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.harness.junit.extension;\n \n import java.io.File;\n@@ -43,10 +44,10 @@ public class Neo4jExtensionBuilder\n \n     Neo4jExtensionBuilder()\n     {\n-        this( Neo4jBuilders.newInProcessBuilder() );\n+        this(Neo4jBuilders.newInProcessBuilder());\n     }\n \n-    protected Neo4jExtensionBuilder( Neo4jBuilder builder )\n+    protected Neo4jExtensionBuilder(Neo4jBuilder builder)\n     {\n         this.builder = builder;\n     }\n@@ -58,10 +59,10 @@ public class Neo4jExtensionBuilder\n      * @return this configurator instance\n      * @deprecated Use {@link #withFolder(Path)}.\n      */\n-    @Deprecated( forRemoval = true )\n-    public Neo4jExtensionBuilder withFolder( File workingDirectory )\n+    @Deprecated(forRemoval = true)\n+    public Neo4jExtensionBuilder withFolder(File workingDirectory)\n     {\n-        return withFolder( workingDirectory.toPath() );\n+        return withFolder(workingDirectory.toPath());\n     }\n \n     /**\n@@ -70,9 +71,9 @@ public class Neo4jExtensionBuilder\n      * @param workingDirectory new working directory\n      * @return this configurator instance\n      */\n-    public Neo4jExtensionBuilder withFolder( Path workingDirectory )\n+    public Neo4jExtensionBuilder withFolder(Path workingDirectory)\n     {\n-        builder = builder.withWorkingDir( workingDirectory );\n+        builder = builder.withWorkingDir(workingDirectory);\n         return this;\n     }\n \n@@ -80,14 +81,14 @@ public class Neo4jExtensionBuilder\n      * Configure the Neo4j instance. Configuration here can be both configuration aimed at the server as well as the\n      * database tuning options. Please refer to the Neo4j Manual for details on available configuration options.\n      *\n-     * @param key the config key\n+     * @param key   the config key\n      * @param value the config value\n-     * @param <T> the setting type\n+     * @param <T>   the setting type\n      * @return this configurator instance\n      */\n-    public <T> Neo4jExtensionBuilder withConfig( Setting<T> key, T value )\n+    public <T> Neo4jExtensionBuilder withConfig(Setting<T> key, T value)\n     {\n-        builder = builder.withConfig( key, value );\n+        builder = builder.withConfig(key, value);\n         return this;\n     }\n \n@@ -99,40 +100,43 @@ public class Neo4jExtensionBuilder\n      * @param extension the unmanaged extension class.\n      * @return this configurator instance\n      */\n-    public Neo4jExtensionBuilder withUnmanagedExtension( String mountPath, Class<?> extension )\n+    public Neo4jExtensionBuilder withUnmanagedExtension(String mountPath, Class<?> extension)\n     {\n-        builder = builder.withUnmanagedExtension( mountPath, extension );\n+        builder = builder.withUnmanagedExtension(mountPath, extension);\n         return this;\n     }\n \n     /**\n      * Shortcut for configuring the server to find and mount all unmanaged extensions in the given package.\n-     * @see #withUnmanagedExtension(String, Class)\n-     * @param mountPath the http path, relative to the server base URI, that this extension should be mounted at.\n+     *\n+     * @param mountPath   the http path, relative to the server base URI, that this extension should be mounted at.\n      * @param packageName a java package with extension classes.\n      * @return this configurator instance\n+     * @see #withUnmanagedExtension(String, Class)\n      */\n-    public Neo4jExtensionBuilder withUnmanagedExtension( String mountPath, String packageName )\n+    public Neo4jExtensionBuilder withUnmanagedExtension(String mountPath, String packageName)\n     {\n-        builder = builder.withUnmanagedExtension( mountPath, packageName );\n+        builder = builder.withUnmanagedExtension(mountPath, packageName);\n         return this;\n     }\n \n     /**\n      * Enhance Neo4j instance with provided extensions.\n      * Please refer to the Neo4j Manual for details on extensions, how to write and use them.\n+     *\n      * @param extensionFactories extension factories\n      * @return this configurator instance\n      */\n-    public Neo4jExtensionBuilder withExtensionFactories( Iterable<ExtensionFactory<?>> extensionFactories )\n+    public Neo4jExtensionBuilder withExtensionFactories(Iterable<ExtensionFactory<?>> extensionFactories)\n     {\n-        builder = builder.withExtensionFactories( extensionFactories );\n+        builder = builder.withExtensionFactories(extensionFactories);\n         return this;\n     }\n \n     /**\n      * Disable web server on configured Neo4j instance.\n      * For cases where web server is not required to test specific functionality it can be fully disabled using this tuning option.\n+     *\n      * @return this configurator instance.\n      */\n     public Neo4jExtensionBuilder withDisabledServer()\n@@ -144,73 +148,79 @@ public class Neo4jExtensionBuilder\n     /**\n      * Data fixtures to inject upon server build. This can be either a file with a plain-text cypher query\n      * (for example, myFixture.cyp), or a directory containing such files with the suffix \".cyp\".\n+     *\n      * @param cypherFileOrDirectory file with cypher statement, or directory containing \".cyp\"-suffixed files.\n      * @return this configurator instance\n      * @deprecated Use {@link #withFixture(Path)}.\n      */\n-    @Deprecated( forRemoval = true )\n-    public Neo4jExtensionBuilder withFixture( File cypherFileOrDirectory )\n+    @Deprecated(forRemoval = true)\n+    public Neo4jExtensionBuilder withFixture(File cypherFileOrDirectory)\n     {\n-        return withFixture( cypherFileOrDirectory.toPath() );\n+        return withFixture(cypherFileOrDirectory.toPath());\n     }\n \n     /**\n      * Data fixtures to inject upon server build. This can be either a file with a plain-text cypher query\n      * (for example, myFixture.cyp), or a directory containing such files with the suffix \".cyp\".\n+     *\n      * @param cypherFileOrDirectory file with cypher statement, or directory containing \".cyp\"-suffixed files.\n      * @return this configurator instance\n      */\n-    public Neo4jExtensionBuilder withFixture( Path cypherFileOrDirectory )\n+    public Neo4jExtensionBuilder withFixture(Path cypherFileOrDirectory)\n     {\n-        builder = builder.withFixture( cypherFileOrDirectory );\n+        builder = builder.withFixture(cypherFileOrDirectory);\n         return this;\n     }\n \n     /**\n      * Data fixture to inject upon server build. This should be a valid Cypher statement.\n+     *\n      * @param fixtureStatement a cypher statement\n      * @return this configurator instance\n      */\n-    public Neo4jExtensionBuilder withFixture( String fixtureStatement )\n+    public Neo4jExtensionBuilder withFixture(String fixtureStatement)\n     {\n-        builder = builder.withFixture( fixtureStatement );\n+        builder = builder.withFixture(fixtureStatement);\n         return this;\n     }\n \n     /**\n      * Data fixture to inject upon server build. This should be a user implemented fixture function\n      * operating on a {@link GraphDatabaseService} instance\n+     *\n      * @param fixtureFunction a fixture function\n      * @return this configurator instance\n      */\n-    public Neo4jExtensionBuilder withFixture( Function<GraphDatabaseService,Void> fixtureFunction )\n+    public Neo4jExtensionBuilder withFixture(Function<GraphDatabaseService, Void> fixtureFunction)\n     {\n-        builder = builder.withFixture( fixtureFunction );\n+        builder = builder.withFixture(fixtureFunction);\n         return this;\n     }\n \n     /**\n      * Pre-populate the server with databases copied from the specified source directory.\n      * The source directory needs to have sub-folders `databases/neo4j` in which the source store files are located.\n+     *\n      * @param sourceDirectory the directory to copy from\n      * @return this configurator instance\n      */\n-    @Deprecated( forRemoval = true )\n-    public Neo4jExtensionBuilder copyFrom( File sourceDirectory )\n+    @Deprecated(forRemoval = true)\n+    public Neo4jExtensionBuilder copyFrom(File sourceDirectory)\n     {\n-        builder = builder.copyFrom( sourceDirectory.toPath() );\n+        builder = builder.copyFrom(sourceDirectory.toPath());\n         return this;\n     }\n \n     /**\n      * Pre-populate the server with databases copied from the specified source directory.\n      * The source directory needs to have sub-folders `databases/neo4j` in which the source store files are located.\n+     *\n      * @param sourceDirectory the directory to copy from\n      * @return this configurator instance\n      */\n-    public Neo4jExtensionBuilder copyFrom( Path sourceDirectory )\n+    public Neo4jExtensionBuilder copyFrom(Path sourceDirectory)\n     {\n-        builder = builder.copyFrom( sourceDirectory );\n+        builder = builder.copyFrom(sourceDirectory);\n         return this;\n     }\n \n@@ -222,9 +232,9 @@ public class Neo4jExtensionBuilder\n      * @param procedureClass a class containing one or more procedure definitions\n      * @return this configurator instance\n      */\n-    public Neo4jExtensionBuilder withProcedure( Class<?> procedureClass )\n+    public Neo4jExtensionBuilder withProcedure(Class<?> procedureClass)\n     {\n-        builder = builder.withProcedure( procedureClass );\n+        builder = builder.withProcedure(procedureClass);\n         return this;\n     }\n \n@@ -236,9 +246,9 @@ public class Neo4jExtensionBuilder\n      * @param functionClass a class containing one or more function definitions\n      * @return this configurator instance\n      */\n-    public Neo4jExtensionBuilder withFunction( Class<?> functionClass )\n+    public Neo4jExtensionBuilder withFunction(Class<?> functionClass)\n     {\n-        builder = builder.withFunction( functionClass );\n+        builder = builder.withFunction(functionClass);\n         return this;\n     }\n \n@@ -250,14 +260,14 @@ public class Neo4jExtensionBuilder\n      * @param functionClass a class containing one or more function definitions\n      * @return this configurator instance\n      */\n-    public Neo4jExtensionBuilder withAggregationFunction( Class<?> functionClass )\n+    public Neo4jExtensionBuilder withAggregationFunction(Class<?> functionClass)\n     {\n-        builder = builder.withAggregationFunction( functionClass );\n+        builder = builder.withAggregationFunction(functionClass);\n         return this;\n     }\n \n     public Neo4jExtension build()\n     {\n-        return new Neo4jExtension( builder );\n+        return new Neo4jExtension(builder);\n     }\n }\n",
            "diff_size": 50
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "Angel-ML-angel",
    "error_id": "852",
    "information": {
        "errors": [
            {
                "line": "6",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 102).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * Copyright (C) 2017-2018 THL A29 Limited, a Tencent company. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in\n * compliance with the License. You may obtain a copy of the License at\n *\n * https://opensource.org/licenses/Apache-2.0",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/852/InitParam.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/852/InitParam.java\nindex ef43f504fb1..f4b5307b064 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/852/InitParam.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/852/InitParam.java\n@@ -27,8 +27,6 @@ import java.util.ArrayList;\n import java.util.List;\n \n public class InitParam extends UpdateParam {\n-\n-\n   private int numPartitions;\n   private int maxIndex;\n   private int maxLength;\n@@ -37,17 +35,15 @@ public class InitParam extends UpdateParam {\n   private int partDim;\n   private int window;\n \n-  public InitParam(int matrixId,\n-                   int numPartitions,\n+  public InitParam(int matrixId, int numPartitions,\n                    int maxIndex,\n                    int maxLength,\n                    int negative,\n                    int order,\n                    int partDim,\n                    int window) {\n-    super(matrixId);\n-\n-    this.numPartitions = numPartitions;\n+  super(matrixId);\n+this.numPartitions = numPartitions;\n     this.maxIndex = maxIndex;\n     this.maxLength = maxLength;\n     this.negative = negative;\n@@ -60,13 +56,12 @@ public class InitParam extends UpdateParam {\n   public List<PartitionUpdateParam> split() {\n     List<PartitionKey> pkeys = PSAgentContext.get().getMatrixMetaManager()\n         .getPartitions(matrixId);\n-\n-    IntOpenHashSet serverIds = new IntOpenHashSet();\n+IntOpenHashSet serverIds = new IntOpenHashSet();\n     List<PartitionUpdateParam> params = new ArrayList<>();\n     for (PartitionKey pkey : pkeys) {\n       int serverId = PSAgentContext.get().getMatrixMetaManager()\n           .getMasterPS(pkey).getIndex();\n-      if (!serverIds.contains(serverId)) {\n+if (!serverIds.contains(serverId)) {\n         serverIds.add(serverId);\n         params.add(new InitPartitionParam(matrixId,\n             pkey,\n@@ -81,4 +76,4 @@ public class InitParam extends UpdateParam {\n     }\n     return params;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 11
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "38",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 132).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "58",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 129).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/852/InitParam.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/852/InitParam.java\nindex ef43f504fb1..6a6211ed928 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/852/InitParam.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/852/InitParam.java\n@@ -22,13 +22,11 @@ import com.tencent.angel.ml.matrix.psf.update.base.PartitionUpdateParam;\n import com.tencent.angel.ml.matrix.psf.update.base.UpdateParam;\n import com.tencent.angel.psagent.PSAgentContext;\n import it.unimi.dsi.fastutil.ints.IntOpenHashSet;\n-\n import java.util.ArrayList;\n import java.util.List;\n \n public class InitParam extends UpdateParam {\n \n-\n   private int numPartitions;\n   private int maxIndex;\n   private int maxLength;\n@@ -37,16 +35,8 @@ public class InitParam extends UpdateParam {\n   private int partDim;\n   private int window;\n \n-  public InitParam(int matrixId,\n-                   int numPartitions,\n-                   int maxIndex,\n-                   int maxLength,\n-                   int negative,\n-                   int order,\n-                   int partDim,\n-                   int window) {\n+  public InitParam(int matrixId, int numPartitions, int maxIndex, int maxLength, int negative, int order, int partDim, int window) {\n     super(matrixId);\n-\n     this.numPartitions = numPartitions;\n     this.maxIndex = maxIndex;\n     this.maxLength = maxLength;\n@@ -58,27 +48,16 @@ public class InitParam extends UpdateParam {\n \n   @Override\n   public List<PartitionUpdateParam> split() {\n-    List<PartitionKey> pkeys = PSAgentContext.get().getMatrixMetaManager()\n-        .getPartitions(matrixId);\n-\n+    List<PartitionKey> pkeys = PSAgentContext.get().getMatrixMetaManager().getPartitions(matrixId);\n     IntOpenHashSet serverIds = new IntOpenHashSet();\n     List<PartitionUpdateParam> params = new ArrayList<>();\n     for (PartitionKey pkey : pkeys) {\n-      int serverId = PSAgentContext.get().getMatrixMetaManager()\n-          .getMasterPS(pkey).getIndex();\n+      int serverId = PSAgentContext.get().getMatrixMetaManager().getMasterPS(pkey).getIndex();\n       if (!serverIds.contains(serverId)) {\n         serverIds.add(serverId);\n-        params.add(new InitPartitionParam(matrixId,\n-            pkey,\n-            numPartitions,\n-            maxIndex,\n-            maxLength,\n-            negative,\n-            order,\n-            partDim,\n-            window));\n+        params.add(new InitPartitionParam(matrixId, pkey, numPartitions, maxIndex, maxLength, negative, order, partDim, window));\n       }\n     }\n     return params;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 26
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
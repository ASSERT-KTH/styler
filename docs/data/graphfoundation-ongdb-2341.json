{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2341",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "45",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "62",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "78",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "86",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2341/TopDocsIterator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2341/TopDocsIterator.java\nindex 33af5a6d4b4..892ad192fab 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2341/TopDocsIterator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2341/TopDocsIterator.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.index.impl.lucene.explicit;\n \n import org.apache.lucene.document.Document;\n@@ -36,70 +37,67 @@ import org.neo4j.kernel.impl.api.explicitindex.AbstractIndexHits;\n \n class TopDocsIterator extends AbstractIndexHits<Document>\n {\n-    private final Iterator<ScoreDoc> iterator;\n-    private ScoreDoc currentDoc;\n-    private final int size;\n-    private final IndexSearcher searcher;\n+  private final Iterator<ScoreDoc> iterator;\n+  private ScoreDoc currentDoc;\n+  private final int size;\n+  private final IndexSearcher searcher;\n \n-    TopDocsIterator( Query query, QueryContext context, IndexSearcher searcher ) throws IOException\n-    {\n-        TopDocs docs = toTopDocs( query, context, searcher );\n-        this.size = docs.scoreDocs.length;\n-        this.iterator = new ArrayIterator<>( docs.scoreDocs );\n-        this.searcher = searcher;\n-    }\n+  TopDocsIterator(Query query, QueryContext context, IndexSearcher searcher) throws IOException\n+  {\n+    TopDocs docs = toTopDocs(query, context, searcher);\n+    this.size = docs.scoreDocs.length;\n+    this.iterator = new ArrayIterator<>(docs.scoreDocs);\n+    this.searcher = searcher;\n+  }\n \n-    private TopDocs toTopDocs( Query query, QueryContext context, IndexSearcher searcher ) throws IOException\n+  private TopDocs toTopDocs(Query query, QueryContext context, IndexSearcher searcher) throws IOException\n+  {\n+    Sort sorting = context != null ? context.getSorting() : null;\n+    TopDocs topDocs;\n+    if (sorting == null && context != null)\n     {\n-        Sort sorting = context != null ? context.getSorting() : null;\n-        TopDocs topDocs;\n-        if ( sorting == null && context != null )\n-        {\n-            topDocs = searcher.search( query, context.getTop() );\n-        }\n-        else\n-        {\n-            if ( context == null || !context.getTradeCorrectnessForSpeed() )\n-            {\n-                TopFieldCollector collector = LuceneDataSource.scoringCollector( sorting, context.getTop() );\n-                searcher.search( query, collector );\n-                topDocs = collector.topDocs();\n-            }\n-            else\n-            {\n-                topDocs = searcher.search( query, null, context.getTop(), sorting );\n-            }\n-        }\n-        return topDocs;\n-    }\n-\n-    @Override\n-    protected Document fetchNextOrNull()\n+      topDocs = searcher.search(query, context.getTop());\n+    } else\n     {\n-        if ( !iterator.hasNext() )\n-        {\n-            return null;\n-        }\n-        currentDoc = iterator.next();\n-        try\n-        {\n-            return searcher.doc( currentDoc.doc );\n-        }\n-        catch ( IOException e )\n-        {\n-            throw new RuntimeException( e );\n-        }\n+      if (context == null || !context.getTradeCorrectnessForSpeed())\n+      {\n+        TopFieldCollector collector = LuceneDataSource.scoringCollector(sorting, context.getTop());\n+        searcher.search(query, collector);\n+        topDocs = collector.topDocs();\n+      } else\n+      {\n+        topDocs = searcher.search(query, null, context.getTop(), sorting);\n+      }\n     }\n+    return topDocs;\n+  }\n \n-    @Override\n-    public float currentScore()\n+  @Override\n+  protected Document fetchNextOrNull()\n+  {\n+    if (!iterator.hasNext())\n     {\n-        return currentDoc.score;\n+      return null;\n     }\n-\n-    @Override\n-    public int size()\n+    currentDoc = iterator.next();\n+    try\n+    {\n+      return searcher.doc(currentDoc.doc);\n+    } catch (IOException e)\n     {\n-        return this.size;\n+      throw new RuntimeException(e);\n     }\n+  }\n+\n+  @Override\n+  public float currentScore()\n+  {\n+    return currentDoc.score;\n+  }\n+\n+  @Override\n+  public int size()\n+  {\n+    return this.size;\n+  }\n }\n",
            "diff_size": 80
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2341/TopDocsIterator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2341/TopDocsIterator.java\nindex 33af5a6d4b4..62faf8a861a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2341/TopDocsIterator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2341/TopDocsIterator.java\n@@ -80,7 +80,8 @@ class TopDocsIterator extends AbstractIndexHits<Document>\n         {\n             return null;\n         }\n-        currentDoc = iterator.next();\n+\n+currentDoc = iterator.next();\n         try\n         {\n             return searcher.doc( currentDoc.doc );\n@@ -102,4 +103,4 @@ class TopDocsIterator extends AbstractIndexHits<Document>\n     {\n         return this.size;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
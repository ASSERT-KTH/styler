{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4562",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "49",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4562/AutoIndexer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4562/AutoIndexer.java\nindex 93dcc3f56ad..d21ee709668 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4562/AutoIndexer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4562/AutoIndexer.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.graphdb.index;\n \n import java.util.Set;\n@@ -27,7 +28,7 @@ import org.neo4j.graphdb.PropertyContainer;\n  * The primary interaction point with the auto indexing infrastructure of neo4j.\n  * From here it is possible to enable/disable the auto indexing functionality,\n  * set/unset auto indexed properties and retrieve index hits.\n- *\n+ * <p>\n  * It only exposes a {@link ReadableIndex} (see {@link #getAutoIndex()}) and\n  * the idea is that the mutating operations are managed by the AutoIndexer only\n  * and the user should have no access other than mutating operations on the\n@@ -38,58 +39,57 @@ import org.neo4j.graphdb.PropertyContainer;\n @Deprecated\n public interface AutoIndexer<T extends PropertyContainer>\n {\n-    /**\n-     * Sets the AutoIndexer as enabled or not. Enabled means that appropriately\n-     * configured properties are auto indexed and hits can be returned, disabled\n-     * means that no index additions happen but the index can be queried.\n-     *\n-     * @param enabled True to enable this auto indexer, false to disable it.\n-     */\n-    void setEnabled( boolean enabled );\n+  /**\n+   * Sets the AutoIndexer as enabled or not. Enabled means that appropriately\n+   * configured properties are auto indexed and hits can be returned, disabled\n+   * means that no index additions happen but the index can be queried.\n+   *\n+   * @param enabled True to enable this auto indexer, false to disable it.\n+   */\n+  void setEnabled(boolean enabled);\n \n-    /**\n-     * Returns true iff this auto indexer is enabled, false otherwise. For a\n-     * cursory definition of enabled indexer, look at\n-     * <code>setAutoIndexingEnabled(boolean)</code>\n-     *\n-     * @return true iff this auto indexer is enabled\n-     *\n-     * @see #setEnabled(boolean)\n-     */\n-    boolean isEnabled();\n+  /**\n+   * Returns true iff this auto indexer is enabled, false otherwise. For a\n+   * cursory definition of enabled indexer, look at\n+   * <code>setAutoIndexingEnabled(boolean)</code>\n+   *\n+   * @return true iff this auto indexer is enabled\n+   * @see #setEnabled(boolean)\n+   */\n+  boolean isEnabled();\n \n-    /**\n-     * Returns the auto index used by the auto indexer. This should be able\n-     * to be released safely (read only) to the outside world.\n-     *\n-     * @return A read only index\n-     */\n-    ReadableIndex<T> getAutoIndex();\n+  /**\n+   * Returns the auto index used by the auto indexer. This should be able\n+   * to be released safely (read only) to the outside world.\n+   *\n+   * @return A read only index\n+   */\n+  ReadableIndex<T> getAutoIndex();\n \n-    /**\n-     * Start auto indexing a property. This could lead to an\n-     * IllegalStateException in case there are already ignored properties.\n-     * Adding an already auto indexed property is a no-op.\n-     *\n-     * @param propName The property name to start auto indexing.\n-     */\n-    void startAutoIndexingProperty( String propName );\n+  /**\n+   * Start auto indexing a property. This could lead to an\n+   * IllegalStateException in case there are already ignored properties.\n+   * Adding an already auto indexed property is a no-op.\n+   *\n+   * @param propName The property name to start auto indexing.\n+   */\n+  void startAutoIndexingProperty(String propName);\n \n-    /**\n-     * Removes the argument from the set of auto indexed properties. If\n-     * the property was not already monitored, nothing happens\n-     *\n-     * @param propName The property name to stop auto indexing.\n-     */\n-    void stopAutoIndexingProperty( String propName );\n+  /**\n+   * Removes the argument from the set of auto indexed properties. If\n+   * the property was not already monitored, nothing happens\n+   *\n+   * @param propName The property name to stop auto indexing.\n+   */\n+  void stopAutoIndexingProperty(String propName);\n \n-    /**\n-     * Returns the set of property names that are currently monitored for auto\n-     * indexing. If this auto indexer is set to ignore properties, the result\n-     * is the empty set.\n-     *\n-     * @return An immutable set of the auto indexed property names, possibly\n-     *         empty.\n-     */\n-    Set<String> getAutoIndexedProperties();\n+  /**\n+   * Returns the set of property names that are currently monitored for auto\n+   * indexing. If this auto indexer is set to ignore properties, the result\n+   * is the empty set.\n+   *\n+   * @return An immutable set of the auto indexed property names, possibly\n+   * empty.\n+   */\n+  Set<String> getAutoIndexedProperties();\n }\n",
            "diff_size": 51
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4562/AutoIndexer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4562/AutoIndexer.java\nindex 93dcc3f56ad..8228c05d245 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4562/AutoIndexer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4562/AutoIndexer.java\n@@ -92,4 +92,4 @@ public interface AutoIndexer<T extends PropertyContainer>\n      *         empty.\n      */\n     Set<String> getAutoIndexedProperties();\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
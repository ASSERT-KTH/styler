{
    "project_name": "Angel-ML-angel",
    "error_id": "1020",
    "information": {
        "errors": [
            {
                "line": "11",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 103).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * https://opensource.org/licenses/BSD-3-Clause\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n * either express or implied. See the License for the specific language governing permissions and\n * limitations under the License.",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/1020/WorkerClient.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/1020/WorkerClient.java\nindex 359ea6520ad..b9e2d86f133 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/1020/WorkerClient.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/1020/WorkerClient.java\n@@ -33,20 +33,27 @@ import java.io.IOException;\n /**\n  * The RPC client from master to a worker, it just for get worker thread stack from worker.\n  */\n-public class WorkerClient implements WorkerClientInterface{\n+public class WorkerClient implements WorkerClientInterface {\n   private static final Log LOG = LogFactory.getLog(WorkerClient.class);\n-  /**master context*/\n+  /**\n+   * master context\n+   */\n   private final AMContext context;\n \n-  /**connection from master to the worker*/\n+  /**\n+   * connection from master to the worker\n+   */\n   private final TConnection connection;\n \n-  /**rpc protocol*/\n+  /**\n+   * rpc protocol\n+   */\n   private final WorkerProtocol worker;\n \n   /**\n    * Create a WorkerClient\n-   * @param context master context\n+   *\n+   * @param context         master context\n    * @param workerAttemptId worker attempt id\n    * @throws IOException\n    */\n",
            "diff_size": 12
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/1020/WorkerClient.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/1020/WorkerClient.java\nindex 359ea6520ad..7eb3d050055 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/1020/WorkerClient.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/1020/WorkerClient.java\n@@ -33,7 +33,7 @@ import java.io.IOException;\n /**\n  * The RPC client from master to a worker, it just for get worker thread stack from worker.\n  */\n-public class WorkerClient implements WorkerClientInterface{\n+public class WorkerClient implements WorkerClientInterface {\n   private static final Log LOG = LogFactory.getLog(WorkerClient.class);\n   /**master context*/\n   private final AMContext context;\n@@ -71,4 +71,4 @@ public class WorkerClient implements WorkerClientInterface{\n   private WorkerProtocol getWorker() {\n     return worker;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "58",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 141).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/1020/WorkerClient.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/1020/WorkerClient.java\nindex 359ea6520ad..e955a6a0984 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/1020/WorkerClient.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/1020/WorkerClient.java\n@@ -24,16 +24,16 @@ import com.tencent.angel.master.app.AMContext;\n import com.tencent.angel.protobuf.generated.MasterWorkerServiceProtos.GetThreadStackRequest;\n import com.tencent.angel.worker.WorkerAttemptId;\n import com.tencent.angel.worker.WorkerProtocol;\n-\n import org.apache.commons.logging.Log;\n import org.apache.commons.logging.LogFactory;\n-\n import java.io.IOException;\n \n /**\n  * The RPC client from master to a worker, it just for get worker thread stack from worker.\n  */\n-public class WorkerClient implements WorkerClientInterface{\n+\n+public class WorkerClient implements WorkerClientInterface {\n+\n   private static final Log LOG = LogFactory.getLog(WorkerClient.class);\n   /**master context*/\n   private final AMContext context;\n@@ -50,12 +50,12 @@ public class WorkerClient implements WorkerClientInterface{\n    * @param workerAttemptId worker attempt id\n    * @throws IOException\n    */\n-  public WorkerClient(AMContext context, WorkerAttemptId workerAttemptId) throws IOException {\n+\n+  public WorkerClient(AMContext context, WorkerAttemptId workerAttemptId)\n+  throws IOException {\n     this.context = context;\n     this.connection = TConnectionManager.getConnection(context.getConf());\n-    Location workerLoc =\n-        context.getWorkerManager().getWorker(workerAttemptId.getWorkerId())\n-            .getWorkerAttempt(workerAttemptId).getLocation();\n+    Location workerLoc = context.getWorkerManager().getWorker(workerAttemptId.getWorkerId()).getWorkerAttempt(workerAttemptId).getLocation();\n     LOG.debug(\"workerLoc= \" + workerLoc.toString());\n     this.worker = connection.getWorkerService(workerLoc.getIp(), workerLoc.getPort());\n   }\n@@ -71,4 +71,5 @@ public class WorkerClient implements WorkerClientInterface{\n   private WorkerProtocol getWorker() {\n     return worker;\n   }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 13
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
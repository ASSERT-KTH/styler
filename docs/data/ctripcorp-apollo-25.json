{
    "project_name": "ctripcorp-apollo",
    "error_id": "25",
    "information": {
        "errors": [
            {
                "line": "6",
                "severity": "warning",
                "message": "Line is longer than 100 characters (found 118).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "\n  public ApolloOpenApiException(int status, String reason, String message) {\n    super(String.format(\"Request to apollo open api failed, status code: %d, reason: %s, message: %s\", status, reason,\n        message));\n  }\n}",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "6",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 118).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ctripcorp-apollo/errored/1/25/ApolloOpenApiException.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ctripcorp-apollo/intellij/25/ApolloOpenApiException.java\nindex af20a904ceb..64c8bdf8948 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ctripcorp-apollo/errored/1/25/ApolloOpenApiException.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ctripcorp-apollo/intellij/25/ApolloOpenApiException.java\n@@ -3,7 +3,9 @@ package com.ctrip.framework.apollo.openapi.client.exception;\n public class ApolloOpenApiException extends RuntimeException {\n \n   public ApolloOpenApiException(int status, String reason, String message) {\n-    super(String.format(\"Request to apollo open api failed, status code: %d, reason: %s, message: %s\", status, reason,\n-        message));\n+    super(String\n+        .format(\"Request to apollo open api failed, status code: %d, reason: %s, message: %s\",\n+            status, reason,\n+            message));\n   }\n }\n",
            "diff_size": 4
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "6",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 118).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ctripcorp-apollo/errored/1/25/ApolloOpenApiException.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ctripcorp-apollo/naturalize/25/ApolloOpenApiException.java\nindex af20a904ceb..02057e9f0d8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ctripcorp-apollo/errored/1/25/ApolloOpenApiException.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ctripcorp-apollo/naturalize/25/ApolloOpenApiException.java\n@@ -6,4 +6,4 @@ public class ApolloOpenApiException extends RuntimeException {\n     super(String.format(\"Request to apollo open api failed, status code: %d, reason: %s, message: %s\", status, reason,\n         message));\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "6",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 129).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ctripcorp-apollo/errored/1/25/ApolloOpenApiException.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ctripcorp-apollo/codebuff/25/ApolloOpenApiException.java\nindex af20a904ceb..472a6a03037 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ctripcorp-apollo/errored/1/25/ApolloOpenApiException.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ctripcorp-apollo/codebuff/25/ApolloOpenApiException.java\n@@ -3,7 +3,6 @@ package com.ctrip.framework.apollo.openapi.client.exception;\n public class ApolloOpenApiException extends RuntimeException {\n \n   public ApolloOpenApiException(int status, String reason, String message) {\n-    super(String.format(\"Request to apollo open api failed, status code: %d, reason: %s, message: %s\", status, reason,\n-        message));\n+    super(String.format(\"Request to apollo open api failed, status code: %d, reason: %s, message: %s\", status, reason, message));\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "6",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 118).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "6",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 118).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
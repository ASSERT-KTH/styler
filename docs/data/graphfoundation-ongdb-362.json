{
    "project_name": "graphfoundation-ongdb",
    "error_id": "362",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "44",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "17",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/362/PagingIterator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/362/PagingIterator.java\nindex 4c0ffa32c7d..0e5062fc1ed 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/362/PagingIterator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/362/PagingIterator.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.helpers.collection;\n \n import java.util.Iterator;\n@@ -26,77 +27,77 @@ import java.util.Iterator;\n  * into pages, where optionally each page can be seen as its own\n  * {@link Iterator} instance for convenience using {@link #nextPage()}.\n  *\n- * @author Mattias Persson\n- *\n  * @param <T> the type of items in this iterator.\n+ * @author Mattias Persson\n  */\n public class PagingIterator<T> extends CachingIterator<T>\n {\n-    private final int pageSize;\n+  private final int pageSize;\n \n-    /**\n-     * Creates a new paging iterator with {@code source} as its underlying\n-     * {@link Iterator} to lazily get items from.\n-     *\n-     * @param source the underlying {@link Iterator} to lazily get items from.\n-     * @param pageSize the max number of items in each page.\n-     */\n-    public PagingIterator( Iterator<T> source, int pageSize )\n-    {\n-        super( source );\n-        this.pageSize = pageSize;\n-    }\n+  /**\n+   * Creates a new paging iterator with {@code source} as its underlying\n+   * {@link Iterator} to lazily get items from.\n+   *\n+   * @param source   the underlying {@link Iterator} to lazily get items from.\n+   * @param pageSize the max number of items in each page.\n+   */\n+  public PagingIterator(Iterator<T> source, int pageSize)\n+  {\n+    super(source);\n+    this.pageSize = pageSize;\n+  }\n \n-    /**\n-     * @return the page the iterator is currently at, starting a {@code 0}.\n-     * This value is based on the {@link #position()} and the page size.\n-     */\n-    public int page()\n-    {\n-        return position() / pageSize;\n-    }\n+  /**\n+   * @return the page the iterator is currently at, starting a {@code 0}.\n+   * This value is based on the {@link #position()} and the page size.\n+   */\n+  public int page()\n+  {\n+    return position() / pageSize;\n+  }\n \n-    /**\n-     * Sets the current page of the iterator. {@code 0} means the first page.\n-     * @param newPage the current page to set for the iterator, must be\n-     * non-negative. The next item returned by the iterator will be the first\n-     * item in that page.\n-     * @return the page before changing to the new page.\n-     */\n-    public int page( int newPage )\n-    {\n-        int previousPage = page();\n-        position( newPage * pageSize );\n-        return previousPage;\n-    }\n+  /**\n+   * Sets the current page of the iterator. {@code 0} means the first page.\n+   *\n+   * @param newPage the current page to set for the iterator, must be\n+   *                non-negative. The next item returned by the iterator will be the first\n+   *                item in that page.\n+   * @return the page before changing to the new page.\n+   */\n+  public int page(int newPage)\n+  {\n+    int previousPage = page();\n+    position(newPage * pageSize);\n+    return previousPage;\n+  }\n \n-    /**\n-     * Returns a new {@link Iterator} instance which exposes the current page\n-     * as its own iterator, which fetches items lazily from the underlying\n-     * iterator. It is discouraged to use an {@link Iterator} returned from\n-     * this method at the same time as using methods like {@link #next()} or\n-     * {@link #previous()}, where the results may be unpredictable. So either\n-     * use only {@link #nextPage()} (in conjunction with {@link #page(int)} if\n-     * necessary) or go with regular {@link #next()}/{@link #previous()}.\n-     *\n-     * @return the next page as an {@link Iterator}.\n-     */\n-    public Iterator<T> nextPage()\n+  /**\n+   * Returns a new {@link Iterator} instance which exposes the current page\n+   * as its own iterator, which fetches items lazily from the underlying\n+   * iterator. It is discouraged to use an {@link Iterator} returned from\n+   * this method at the same time as using methods like {@link #next()} or\n+   * {@link #previous()}, where the results may be unpredictable. So either\n+   * use only {@link #nextPage()} (in conjunction with {@link #page(int)} if\n+   * necessary) or go with regular {@link #next()}/{@link #previous()}.\n+   *\n+   * @return the next page as an {@link Iterator}.\n+   */\n+  public Iterator<T> nextPage()\n+  {\n+    page(page());\n+    return new PrefetchingIterator<T>()\n     {\n-        page( page() );\n-        return new PrefetchingIterator<T>()\n-        {\n-            private final int end = position() + pageSize;\n+      private final int end = position() + pageSize;\n \n-            @Override\n-            protected T fetchNextOrNull()\n-            {\n-                if ( position() >= end )\n-                {\n-                    return null;\n-                }\n-                return PagingIterator.this.hasNext() ? PagingIterator.this.next() : null;\n-            }\n-        };\n-    }\n+      @Override\n+      protected T fetchNextOrNull()\n+      {\n+        if (position() >= end)\n+        {\n+          return null;\n+        }\n+        return PagingIterator.this.hasNext() ? PagingIterator.this.next() : null;\n+      }\n+    };\n+  }\n }\n",
            "diff_size": 69
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/362/PagingIterator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/362/PagingIterator.java\nindex 4c0ffa32c7d..a660e8c50a6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/362/PagingIterator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/362/PagingIterator.java\n@@ -95,8 +95,9 @@ public class PagingIterator<T> extends CachingIterator<T>\n                 {\n                     return null;\n                 }\n-                return PagingIterator.this.hasNext() ? PagingIterator.this.next() : null;\n+\n+return PagingIterator.this.hasNext() ? PagingIterator.this.next() : null;\n             }\n         };\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1669",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "31",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "31",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1669/StandardDynamicRecordAllocator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1669/StandardDynamicRecordAllocator.java\nindex 277e6ad0fd3..ccc4360506f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1669/StandardDynamicRecordAllocator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1669/StandardDynamicRecordAllocator.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.store;\n \n import org.neo4j.kernel.impl.store.id.IdSequence;\n@@ -24,32 +25,32 @@ import org.neo4j.kernel.impl.store.record.DynamicRecord;\n \n public class StandardDynamicRecordAllocator implements DynamicRecordAllocator\n {\n-    protected final IdSequence idGenerator;\n-    private final int dataSize;\n+  protected final IdSequence idGenerator;\n+  private final int dataSize;\n \n-    public StandardDynamicRecordAllocator( IdSequence idGenerator, int dataSize )\n-    {\n-        this.idGenerator = idGenerator;\n-        this.dataSize = dataSize;\n-    }\n+  public StandardDynamicRecordAllocator(IdSequence idGenerator, int dataSize)\n+  {\n+    this.idGenerator = idGenerator;\n+    this.dataSize = dataSize;\n+  }\n \n-    @Override\n-    public int getRecordDataSize()\n-    {\n-        return dataSize;\n-    }\n+  @Override\n+  public int getRecordDataSize()\n+  {\n+    return dataSize;\n+  }\n \n-    @Override\n-    public DynamicRecord nextRecord()\n-    {\n-        return allocateRecord( idGenerator.nextId() );\n-    }\n+  @Override\n+  public DynamicRecord nextRecord()\n+  {\n+    return allocateRecord(idGenerator.nextId());\n+  }\n \n-    public static DynamicRecord allocateRecord( long id )\n-    {\n-        DynamicRecord record = new DynamicRecord( id );\n-        record.setCreated();\n-        record.setInUse( true );\n-        return record;\n-    }\n+  public static DynamicRecord allocateRecord(long id)\n+  {\n+    DynamicRecord record = new DynamicRecord(id);\n+    record.setCreated();\n+    record.setInUse(true);\n+    return record;\n+  }\n }\n",
            "diff_size": 25
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1669/StandardDynamicRecordAllocator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1669/StandardDynamicRecordAllocator.java\nindex 277e6ad0fd3..94c106b32ba 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1669/StandardDynamicRecordAllocator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1669/StandardDynamicRecordAllocator.java\n@@ -52,4 +52,4 @@ public class StandardDynamicRecordAllocator implements DynamicRecordAllocator\n         record.setInUse( true );\n         return record;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
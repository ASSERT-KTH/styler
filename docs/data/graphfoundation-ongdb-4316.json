{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4316",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "79",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "166",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "166",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "172",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "172",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "173",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "173",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "179",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "179",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "180",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "180",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "186",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "186",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "188",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "188",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "190",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "190",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "198",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "198",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "201",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "201",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "201",
                    "column": "105",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "206",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "206",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "209",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "209",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "209",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "217",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "217",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "217",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "219",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "219",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "224",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "224",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "228",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "228",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "231",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "239",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "239",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "243",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "243",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "247",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "254",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "254",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "256",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "256",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "260",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "263",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "263",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "266",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "268",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "268",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "274",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "274",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "280",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "280",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "286",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "286",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "286",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "288",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "288",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "293",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "293",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "296",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "296",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "299",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "299",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "302",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "302",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "305",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "309",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "311",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "311",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "314",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "314",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "318",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "318",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "322",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "322",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "326",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "326",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "330",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "330",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "332",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "332",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "338",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "338",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "344",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "344",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "350",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "350",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "362",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "362",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "368",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "368",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "374",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "374",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "380",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "380",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "386",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "386",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "397",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "397",
                    "column": "116",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "401",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "401",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "404",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "409",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "409",
                    "column": "113",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "413",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "413",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "416",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "426",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "430",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "430",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "433",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "443",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "447",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "447",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "450",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "455",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "455",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "461",
                    "column": "64",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "461",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "474",
                    "column": "67",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "474",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "476",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "476",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "484",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "484",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "486",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "486",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "492",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "492",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "492",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "494",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "494",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "498",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "498",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "501",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "501",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "504",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "504",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "509",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "509",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "510",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "518",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "520",
                    "column": "111",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "530",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "530",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "533",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "533",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "535",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "535",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "545",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "545",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "546",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "546",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "548",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "548",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "552",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "552",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "556",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "556",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "567",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "567",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "596",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "596",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "597",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "597",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "598",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "598",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "599",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "599",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "600",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "600",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "601",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "601",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "602",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "602",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "603",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "603",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "604",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "604",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "605",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "605",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "606",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "606",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "607",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "607",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "608",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "608",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "609",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "609",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "611",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "611",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "615",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "615",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "617",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "617",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "624",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "624",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "626",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "626",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "633",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "633",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "635",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "635",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "642",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "642",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "644",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "644",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "652",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "652",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "654",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "654",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "656",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "656",
                    "column": "115",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "658",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "658",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "660",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "660",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "670",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "670",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "672",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "672",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "674",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "674",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "676",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "676",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "693",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "693",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "695",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "695",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "697",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "697",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "699",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "699",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "716",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "716",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "718",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "718",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "720",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "720",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "722",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "722",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "739",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "739",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "741",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "741",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "743",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "743",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "745",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "745",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "762",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "762",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "764",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "764",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "766",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "766",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "768",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "768",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "785",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "785",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "797",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "797",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "814",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "814",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "817",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "817",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "819",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "819",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "821",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "821",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "843",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "843",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "849",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "849",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "851",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "851",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "855",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "855",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "857",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "857",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "859",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "859",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "862",
                    "column": "11",
                    "severity": "error",
                    "message": "'}' at column 11 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "864",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "864",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "871",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "871",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "873",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "873",
                    "column": "122",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "875",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "875",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "876",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "876",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "876",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "878",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "878",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "879",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "885",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "885",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "887",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "887",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "889",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "889",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "894",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "894",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "894",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "896",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "896",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "901",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "903",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "903",
                    "column": "132",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "915",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "915",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "917",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "917",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "921",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "921",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "927",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "927",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "929",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "929",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "931",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "931",
                    "column": "141",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "932",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "932",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "932",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "934",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "934",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "936",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "936",
                    "column": "116",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "937",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "937",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "937",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "939",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "939",
                    "column": "115",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "942",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "942",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "942",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "944",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "944",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "946",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "946",
                    "column": "115",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "947",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "947",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "947",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "949",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "949",
                    "column": "112",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "952",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "952",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "952",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "954",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "954",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "956",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "956",
                    "column": "116",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "957",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "957",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "957",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "959",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "959",
                    "column": "112",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "962",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "972",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "972",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "974",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "974",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "978",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "978",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "980",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "980",
                    "column": "122",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "982",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "982",
                    "column": "114",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "983",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "992",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "992",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1013",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1013",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1015",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1015",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1040",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1040",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1046",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1046",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1063",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1063",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1069",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1069",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1071",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1071",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1078",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1078",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1081",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1081",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1084",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1084",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1086",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1086",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1092",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1092",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1105",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1105",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1107",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1107",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1117",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1117",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1124",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1124",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1126",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1126",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1142",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1142",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1149",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1149",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1158",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1158",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1170",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1170",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1177",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1177",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1179",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1179",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1195",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1195",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1202",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1202",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1211",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1211",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1223",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1223",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1230",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1230",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1232",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1232",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1248",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1248",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1255",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1255",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1264",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1264",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1275",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1275",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1282",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1282",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1284",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1284",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1297",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1297",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1304",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1304",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1311",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1311",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1313",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1313",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1315",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1315",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1321",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1321",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1323",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1323",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1325",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1325",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1330",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1330",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1332",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1332",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1334",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1334",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1338",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "1338",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1338",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1340",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1340",
                    "column": "116",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1346",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1346",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1348",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1348",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1350",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1350",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1352",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1352",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1357",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1357",
                    "column": "127",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1362",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1362",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1364",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1364",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1368",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1368",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1371",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1371",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1376",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1376",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1378",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1378",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1380",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1380",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1382",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1382",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1384",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1384",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1386",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1386",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1391",
                    "column": "78",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1391",
                    "column": "142",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1396",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1396",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1398",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1398",
                    "column": "117",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1401",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "1401",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1401",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1407",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1407",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1414",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "1414",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1414",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1424",
                    "column": "58",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1424",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1429",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "1429",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1429",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1431",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1431",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1435",
                    "column": "54",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1435",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1440",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "1440",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1440",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1442",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1442",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1446",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1446",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1451",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "1451",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1451",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1453",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1453",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1457",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1457",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1462",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "1462",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1462",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1464",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1464",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1468",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1468",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1473",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "1473",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1473",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1475",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1475",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1479",
                    "column": "60",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1479",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1484",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "1484",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1484",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1486",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1486",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1490",
                    "column": "60",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1490",
                    "column": "112",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1492",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1492",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1494",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1494",
                    "column": "128",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1501",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1501",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1505",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "1518",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1518",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1520",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1520",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1522",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1522",
                    "column": "110",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1525",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1525",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1527",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1527",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1530",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "1532",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1532",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1534",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "1536",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1536",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1540",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1540",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1542",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1542",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4316/TemporalValue.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4316/TemporalValue.java\nindex 927c5d10269..2ae115b9574 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4316/TemporalValue.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4316/TemporalValue.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.values.storable;\n \n import java.time.DateTimeException;\n@@ -65,1523 +66,1486 @@ import static org.neo4j.values.storable.LocalDateTimeValue.localDateTime;\n import static org.neo4j.values.storable.NumberType.NO_NUMBER;\n import static org.neo4j.values.storable.TimeValue.time;\n \n-public abstract class TemporalValue<T extends Temporal, V extends TemporalValue<T,V>>\n-        extends ScalarValue implements Temporal\n+public abstract class TemporalValue<T extends Temporal, V extends TemporalValue<T, V>>\n+    extends ScalarValue implements Temporal\n {\n-    TemporalValue()\n+  TemporalValue()\n+  {\n+    // subclasses are confined to this package,\n+    // but type-checking is valuable to be able to do outside\n+    // (therefore the type itself is public)\n+  }\n+\n+  public abstract TemporalValue add(DurationValue duration);\n+\n+  public abstract TemporalValue sub(DurationValue duration);\n+\n+  abstract T temporal();\n+\n+  /**\n+   * @return the date part of this temporal, if date is supported.\n+   */\n+  abstract LocalDate getDatePart();\n+\n+  /**\n+   * @return the local time part of this temporal, if time is supported.\n+   */\n+  abstract LocalTime getLocalTimePart();\n+\n+  /**\n+   * @return the time part of this temporal, if time is supported.\n+   */\n+  abstract OffsetTime getTimePart(Supplier<ZoneId> defaultZone);\n+\n+  /**\n+   * @return the zone id, if time is supported. If time is supported, but no timezone, the defaultZone will be used.\n+   * @throws UnsupportedTemporalUnitException if time is not supported\n+   */\n+  abstract ZoneId getZoneId(Supplier<ZoneId> defaultZone);\n+\n+  /**\n+   * @return the zone id, if this temporal has a timezone.\n+   * @throws UnsupportedTemporalUnitException if this does not have a timezone\n+   */\n+  abstract ZoneId getZoneId();\n+\n+  /**\n+   * @return the zone offset, if this temporal has a zone offset.\n+   * @throws UnsupportedTemporalUnitException if this does not have a offset\n+   */\n+  abstract ZoneOffset getZoneOffset();\n+\n+  abstract boolean supportsTimeZone();\n+\n+  abstract boolean hasTime();\n+\n+  abstract V replacement(T temporal);\n+\n+  @Override\n+  public final T asObjectCopy()\n+  {\n+    return temporal();\n+  }\n+\n+  @Override\n+  public long updateHash(HashFunction hashFunction, long hash)\n+  {\n+    // todo Good enough? Or do subclasses need to implement each their own?\n+    return hashFunction.update(hash, hashCode());\n+  }\n+\n+  @Override\n+  @SuppressWarnings(\"unchecked\")\n+  public final V with(TemporalAdjuster adjuster)\n+  {\n+    return replacement((T) temporal().with(adjuster));\n+  }\n+\n+  @Override\n+  @SuppressWarnings(\"unchecked\")\n+  public final V plus(TemporalAmount amount)\n+  {\n+    return replacement((T) temporal().plus(amount));\n+  }\n+\n+  @Override\n+  @SuppressWarnings(\"unchecked\")\n+  public final V minus(TemporalAmount amount)\n+  {\n+    return replacement((T) temporal().minus(amount));\n+  }\n+\n+  @Override\n+  @SuppressWarnings(\"unchecked\")\n+  public final V minus(long amountToSubtract, TemporalUnit unit)\n+  {\n+    return replacement((T) temporal().minus(amountToSubtract, unit));\n+  }\n+\n+  @Override\n+  public final boolean isSupported(TemporalUnit unit)\n+  {\n+    return temporal().isSupported(unit);\n+  }\n+\n+  @Override\n+  @SuppressWarnings(\"unchecked\")\n+  public final V with(TemporalField field, long newValue)\n+  {\n+    return replacement((T) temporal().with(field, newValue));\n+  }\n+\n+  @Override\n+  @SuppressWarnings(\"unchecked\")\n+  public final V plus(long amountToAdd, TemporalUnit unit)\n+  {\n+    return replacement((T) temporal().plus(amountToAdd, unit));\n+  }\n+\n+  @Override\n+  public final long until(Temporal endExclusive, TemporalUnit unit)\n+  {\n+    if (!(endExclusive instanceof TemporalValue))\n     {\n-        // subclasses are confined to this package,\n-        // but type-checking is valuable to be able to do outside\n-        // (therefore the type itself is public)\n+      throw new InvalidValuesArgumentException(\"Can only compute durations between TemporalValues.\");\n     }\n+    TemporalValue from = this;\n+    TemporalValue to = (TemporalValue) endExclusive;\n \n-    public abstract TemporalValue add( DurationValue duration );\n-\n-    public abstract TemporalValue sub( DurationValue duration );\n-\n-    abstract T temporal();\n-\n-    /**\n-     * @return the date part of this temporal, if date is supported.\n-     */\n-    abstract LocalDate getDatePart();\n-\n-    /**\n-     * @return the local time part of this temporal, if time is supported.\n-     */\n-    abstract LocalTime getLocalTimePart();\n-\n-    /**\n-     * @return the time part of this temporal, if time is supported.\n-     */\n-    abstract OffsetTime getTimePart( Supplier<ZoneId> defaultZone );\n-\n-    /**\n-     * @return the zone id, if time is supported. If time is supported, but no timezone, the defaultZone will be used.\n-     * @throws UnsupportedTemporalUnitException if time is not supported\n-     */\n-    abstract ZoneId getZoneId( Supplier<ZoneId> defaultZone );\n-\n-    /**\n-     * @return the zone id, if this temporal has a timezone.\n-     * @throws UnsupportedTemporalUnitException if this does not have a timezone\n-     */\n-    abstract ZoneId getZoneId();\n+    from = attachTime(from);\n+    to = attachTime(to);\n \n-    /**\n-     * @return the zone offset, if this temporal has a zone offset.\n-     * @throws UnsupportedTemporalUnitException if this does not have a offset\n-     */\n-    abstract ZoneOffset getZoneOffset();\n-\n-    abstract boolean supportsTimeZone();\n-\n-    abstract boolean hasTime();\n-\n-    abstract V replacement( T temporal );\n-\n-    @Override\n-    public final T asObjectCopy()\n+    if (from.isSupported(ChronoField.MONTH_OF_YEAR) && !to.isSupported(ChronoField.MONTH_OF_YEAR))\n     {\n-        return temporal();\n-    }\n-\n-    @Override\n-    public long updateHash( HashFunction hashFunction, long hash )\n+      to = attachDate(to, from.getDatePart());\n+    } else if (to.isSupported(ChronoField.MONTH_OF_YEAR) && !from.isSupported(ChronoField.MONTH_OF_YEAR))\n     {\n-        // todo Good enough? Or do subclasses need to implement each their own?\n-        return hashFunction.update( hash, hashCode() );\n+      from = attachDate(from, to.getDatePart());\n     }\n \n-    @Override\n-    @SuppressWarnings( \"unchecked\" )\n-    public final V with( TemporalAdjuster adjuster )\n+    if (from.supportsTimeZone() && !to.supportsTimeZone())\n     {\n-        return replacement( (T) temporal().with( adjuster ) );\n-    }\n-\n-    @Override\n-    @SuppressWarnings( \"unchecked\" )\n-    public final V plus( TemporalAmount amount )\n+      to = attachTimeZone(to, from.getZoneId(from::getZoneOffset));\n+    } else if (to.supportsTimeZone() && !from.supportsTimeZone())\n     {\n-        return replacement( (T) temporal().plus( amount ) );\n+      from = attachTimeZone(from, to.getZoneId(to::getZoneOffset));\n     }\n-\n-    @Override\n-    @SuppressWarnings( \"unchecked\" )\n-    public final V minus( TemporalAmount amount )\n+    long until;\n+    try\n     {\n-        return replacement( (T) temporal().minus( amount ) );\n-    }\n-\n-    @Override\n-    @SuppressWarnings( \"unchecked\" )\n-    public final V minus( long amountToSubtract, TemporalUnit unit )\n+      until = from.temporal().until(to, unit);\n+    } catch (UnsupportedTemporalTypeException e)\n     {\n-        return replacement( (T) temporal().minus( amountToSubtract, unit ) );\n+      throw new UnsupportedTemporalUnitException(e.getMessage(), e);\n     }\n+    return until;\n+  }\n \n-    @Override\n-    public final boolean isSupported( TemporalUnit unit )\n-    {\n-        return temporal().isSupported( unit );\n-    }\n+  private TemporalValue attachTime(TemporalValue temporal)\n+  {\n+    boolean supportsTime = temporal.isSupported(ChronoField.SECOND_OF_DAY);\n \n-    @Override\n-    @SuppressWarnings( \"unchecked\" )\n-    public final V with( TemporalField field, long newValue )\n+    if (supportsTime)\n     {\n-        return replacement( (T) temporal().with( field, newValue ) );\n-    }\n-\n-    @Override\n-    @SuppressWarnings( \"unchecked\" )\n-    public final V plus( long amountToAdd, TemporalUnit unit )\n+      return temporal;\n+    } else\n     {\n-        return replacement( (T) temporal().plus( amountToAdd, unit ) );\n+      LocalDate datePart = temporal.getDatePart();\n+      LocalTime timePart = LocalTimeValue.DEFAULT_LOCAL_TIME;\n+      return localDateTime(LocalDateTime.of(datePart, timePart));\n     }\n+  }\n \n-    @Override\n-    public final long until( Temporal endExclusive, TemporalUnit unit )\n-    {\n-        if (  !(endExclusive instanceof TemporalValue) )\n-        {\n-            throw new InvalidValuesArgumentException( \"Can only compute durations between TemporalValues.\" );\n-        }\n-        TemporalValue from = this;\n-        TemporalValue to = (TemporalValue) endExclusive;\n-\n-        from = attachTime( from );\n-        to = attachTime( to );\n-\n-        if ( from.isSupported( ChronoField.MONTH_OF_YEAR ) && !to.isSupported( ChronoField.MONTH_OF_YEAR ) )\n-        {\n-            to = attachDate( to, from.getDatePart() );\n-        }\n-        else if ( to.isSupported( ChronoField.MONTH_OF_YEAR ) && !from.isSupported( ChronoField.MONTH_OF_YEAR ) )\n-        {\n-            from = attachDate( from, to.getDatePart() );\n-        }\n+  private TemporalValue attachDate(TemporalValue temporal, LocalDate dateToAttach)\n+  {\n+    LocalTime timePart = temporal.getLocalTimePart();\n \n-        if ( from.supportsTimeZone() && !to.supportsTimeZone() )\n-        {\n-            to = attachTimeZone( to, from.getZoneId( from::getZoneOffset ) );\n-        }\n-        else if ( to.supportsTimeZone() && !from.supportsTimeZone() )\n-        {\n-            from = attachTimeZone( from, to.getZoneId( to::getZoneOffset ) );\n-        }\n-        long until;\n-        try\n-        {\n-            until = from.temporal().until( to, unit );\n-        }\n-        catch ( UnsupportedTemporalTypeException e )\n-        {\n-            throw new UnsupportedTemporalUnitException( e.getMessage(), e );\n-        }\n-        return until;\n+    if (temporal.supportsTimeZone())\n+    {\n+      // turn time into date time\n+      return datetime(ZonedDateTime.of(dateToAttach, timePart, temporal.getZoneOffset()));\n+    } else\n+    {\n+      // turn local time into local date time\n+      return localDateTime(LocalDateTime.of(dateToAttach, timePart));\n     }\n+  }\n \n-    private TemporalValue attachTime( TemporalValue temporal )\n+  private TemporalValue attachTimeZone(TemporalValue temporal, ZoneId zoneIdToAttach)\n+  {\n+    if (temporal.isSupported(ChronoField.MONTH_OF_YEAR))\n     {\n-        boolean supportsTime = temporal.isSupported( ChronoField.SECOND_OF_DAY );\n-\n-        if ( supportsTime )\n-        {\n-            return temporal;\n-        }\n-        else\n-        {\n-            LocalDate datePart = temporal.getDatePart();\n-            LocalTime timePart = LocalTimeValue.DEFAULT_LOCAL_TIME;\n-            return localDateTime( LocalDateTime.of( datePart, timePart ) );\n-        }\n+      // turn local date time into date time\n+      return datetime(ZonedDateTime.of(temporal.getDatePart(), temporal.getLocalTimePart(), zoneIdToAttach));\n+    } else\n+    {\n+      // turn local time into time\n+      if (zoneIdToAttach instanceof ZoneOffset)\n+      {\n+        return time(OffsetTime.of(temporal.getLocalTimePart(), (ZoneOffset) zoneIdToAttach));\n+      } else\n+      {\n+        throw new IllegalStateException(\"Should only attach offsets to local times, not zone ids.\");\n+      }\n     }\n-\n-    private TemporalValue attachDate( TemporalValue temporal, LocalDate dateToAttach )\n+  }\n+\n+  @Override\n+  public final ValueRange range(TemporalField field)\n+  {\n+    return temporal().range(field);\n+  }\n+\n+  @Override\n+  public final int get(TemporalField field)\n+  {\n+    int accessor;\n+    try\n     {\n-        LocalTime timePart = temporal.getLocalTimePart();\n-\n-        if ( temporal.supportsTimeZone() )\n-        {\n-            // turn time into date time\n-            return datetime( ZonedDateTime.of( dateToAttach, timePart, temporal.getZoneOffset() ) );\n-        }\n-        else\n-        {\n-            // turn local time into local date time\n-            return localDateTime( LocalDateTime.of( dateToAttach, timePart ) );\n-        }\n+      accessor = temporal().get(field);\n+    } catch (UnsupportedTemporalTypeException e)\n+    {\n+      throw new UnsupportedTemporalUnitException(e.getMessage(), e);\n     }\n+    return accessor;\n+  }\n \n-    private TemporalValue attachTimeZone( TemporalValue temporal, ZoneId zoneIdToAttach )\n+  public final AnyValue get(String fieldName)\n+  {\n+    TemporalFields field = TemporalFields.fields.get(fieldName.toLowerCase());\n+    if (field == TemporalFields.epochSeconds || field == TemporalFields.epochMillis)\n     {\n-        if ( temporal.isSupported( ChronoField.MONTH_OF_YEAR ) )\n+      T temp = temporal();\n+      if (temp instanceof ChronoZonedDateTime)\n+      {\n+        ChronoZonedDateTime zdt = (ChronoZonedDateTime) temp;\n+        if (field == TemporalFields.epochSeconds)\n         {\n-            // turn local date time into date time\n-            return datetime( ZonedDateTime.of( temporal.getDatePart(), temporal.getLocalTimePart(), zoneIdToAttach ) );\n-        }\n-        else\n+          return Values.longValue(zdt.toInstant().toEpochMilli() / 1000);\n+        } else\n         {\n-            // turn local time into time\n-            if ( zoneIdToAttach instanceof ZoneOffset )\n-            {\n-                return time( OffsetTime.of( temporal.getLocalTimePart(), (ZoneOffset) zoneIdToAttach ) );\n-            }\n-            else\n-            {\n-                throw new IllegalStateException( \"Should only attach offsets to local times, not zone ids.\" );\n-            }\n+          return Values.longValue(zdt.toInstant().toEpochMilli());\n         }\n+      } else\n+      {\n+        throw new UnsupportedTemporalUnitException(\"Epoch not supported.\");\n+      }\n     }\n-\n-    @Override\n-    public final ValueRange range( TemporalField field )\n+    if (field == TemporalFields.timezone)\n     {\n-        return temporal().range( field );\n+      return Values.stringValue(getZoneId(this::getZoneOffset).toString());\n     }\n-\n-    @Override\n-    public final int get( TemporalField field )\n+    if (field == TemporalFields.offset)\n     {\n-        int accessor;\n-        try\n-        {\n-         accessor = temporal().get( field );\n-        }\n-        catch ( UnsupportedTemporalTypeException e )\n-        {\n-            throw new UnsupportedTemporalUnitException( e.getMessage(), e );\n-        }\n-        return accessor;\n+      return Values.stringValue(getZoneOffset().toString());\n     }\n-\n-    public final AnyValue get( String fieldName )\n+    if (field == TemporalFields.offsetMinutes)\n     {\n-        TemporalFields field = TemporalFields.fields.get( fieldName.toLowerCase() );\n-        if ( field == TemporalFields.epochSeconds || field == TemporalFields.epochMillis )\n-        {\n-            T temp = temporal();\n-            if ( temp instanceof ChronoZonedDateTime )\n-            {\n-                ChronoZonedDateTime zdt = (ChronoZonedDateTime) temp;\n-                if ( field == TemporalFields.epochSeconds )\n-                {\n-                    return Values.longValue( zdt.toInstant().toEpochMilli() / 1000 );\n-                }\n-                else\n-                {\n-                    return Values.longValue( zdt.toInstant().toEpochMilli() );\n-                }\n-            }\n-            else\n-            {\n-                throw new UnsupportedTemporalUnitException( \"Epoch not supported.\" );\n-            }\n-        }\n-        if ( field == TemporalFields.timezone )\n-        {\n-            return Values.stringValue( getZoneId(this::getZoneOffset).toString() );\n-        }\n-        if ( field == TemporalFields.offset )\n-        {\n-            return Values.stringValue( getZoneOffset().toString() );\n-        }\n-        if ( field == TemporalFields.offsetMinutes )\n-        {\n-            return Values.intValue( getZoneOffset().getTotalSeconds() / 60 );\n-        }\n-        if ( field == TemporalFields.offsetSeconds )\n-        {\n-            return Values.intValue( getZoneOffset().getTotalSeconds() );\n-        }\n-        if ( field == null || field.field == null )\n-        {\n-            throw new UnsupportedTemporalUnitException( \"No such field: \" + fieldName );\n-        }\n-        return Values.intValue( get( field.field ) );\n+      return Values.intValue(getZoneOffset().getTotalSeconds() / 60);\n     }\n-\n-    @Override\n-    public <R> R query( TemporalQuery<R> query )\n+    if (field == TemporalFields.offsetSeconds)\n     {\n-        return temporal().query( query );\n+      return Values.intValue(getZoneOffset().getTotalSeconds());\n     }\n-\n-    @Override\n-    public final boolean isSupported( TemporalField field )\n+    if (field == null || field.field == null)\n     {\n-        return temporal().isSupported( field );\n+      throw new UnsupportedTemporalUnitException(\"No such field: \" + fieldName);\n     }\n-\n-    @Override\n-    public final long getLong( TemporalField field )\n+    return Values.intValue(get(field.field));\n+  }\n+\n+  @Override\n+  public <R> R query(TemporalQuery<R> query)\n+  {\n+    return temporal().query(query);\n+  }\n+\n+  @Override\n+  public final boolean isSupported(TemporalField field)\n+  {\n+    return temporal().isSupported(field);\n+  }\n+\n+  @Override\n+  public final long getLong(TemporalField field)\n+  {\n+    return temporal().getLong(field);\n+  }\n+\n+  @Override\n+  public final NumberType numberType()\n+  {\n+    return NO_NUMBER;\n+  }\n+\n+  @Override\n+  public final boolean equals(boolean x)\n+  {\n+    return false;\n+  }\n+\n+  @Override\n+  public final boolean equals(long x)\n+  {\n+    return false;\n+  }\n+\n+  @Override\n+  public final boolean equals(double x)\n+  {\n+    return false;\n+  }\n+\n+  @Override\n+  public final boolean equals(char x)\n+  {\n+    return false;\n+  }\n+\n+  @Override\n+  public final boolean equals(String x)\n+  {\n+    return false;\n+  }\n+\n+  @Override\n+  public String toString()\n+  {\n+    return prettyPrint();\n+  }\n+\n+  static <VALUE> VALUE parse(Class<VALUE> type, Pattern pattern, Function<Matcher, VALUE> parser, CharSequence text)\n+  {\n+    Matcher matcher = pattern.matcher(text);\n+    VALUE result = matcher.matches() ? parser.apply(matcher) : null;\n+    if (result == null)\n     {\n-        return temporal().getLong( field );\n+      throw new TemporalParseException(\n+          \"Text cannot be parsed to a \" + valueName(type), text.toString(), 0);\n     }\n-\n-    @Override\n-    public final NumberType numberType()\n+    return result;\n+  }\n+\n+  static <VALUE> VALUE parse(Class<VALUE> type, Pattern pattern, Function<Matcher, VALUE> parser, TextValue text)\n+  {\n+    Matcher matcher = text.matcher(pattern);\n+    VALUE result = matcher != null && matcher.matches() ? parser.apply(matcher) : null;\n+    if (result == null)\n     {\n-        return NO_NUMBER;\n+      throw new TemporalParseException(\n+          \"Text cannot be parsed to a \" + valueName(type), text.stringValue(), 0);\n     }\n-\n-    @Override\n-    public final boolean equals( boolean x )\n+    return result;\n+  }\n+\n+  static <VALUE> VALUE parse(\n+      Class<VALUE> type,\n+      Pattern pattern,\n+      BiFunction<Matcher, Supplier<ZoneId>, VALUE> parser,\n+      CharSequence text,\n+      Supplier<ZoneId> defaultZone)\n+  {\n+    Matcher matcher = pattern.matcher(text);\n+    VALUE result = matcher.matches() ? parser.apply(matcher, defaultZone) : null;\n+    if (result == null)\n     {\n-        return false;\n+      throw new TemporalParseException(\n+          \"Text cannot be parsed to a \" + valueName(type), text.toString(), 0);\n     }\n-\n-    @Override\n-    public final boolean equals( long x )\n+    return result;\n+  }\n+\n+  static <VALUE> VALUE parse(\n+      Class<VALUE> type,\n+      Pattern pattern,\n+      BiFunction<Matcher, Supplier<ZoneId>, VALUE> parser,\n+      TextValue text,\n+      Supplier<ZoneId> defaultZone)\n+  {\n+    Matcher matcher = text.matcher(pattern);\n+    VALUE result = matcher != null && matcher.matches() ? parser.apply(matcher, defaultZone) : null;\n+    if (result == null)\n     {\n-        return false;\n+      throw new TemporalParseException(\n+          \"Text cannot be parsed to a \" + valueName(type), text.stringValue(), 0);\n     }\n-\n-    @Override\n-    public final boolean equals( double x )\n+    return result;\n+  }\n+\n+  private static <VALUE> String valueName(Class<VALUE> type)\n+  {\n+    String name = type.getSimpleName();\n+    return name.substring(0, name.length() - /*\"Value\" is*/5/*characters*/);\n+  }\n+\n+  public static TimeCSVHeaderInformation parseHeaderInformation(String text)\n+  {\n+    TimeCSVHeaderInformation fields = new TimeCSVHeaderInformation();\n+    Value.parseHeaderInformation(text, \"time/datetime\", fields);\n+    return fields;\n+  }\n+\n+  abstract static class Builder<Result> implements StructureBuilder<AnyValue, Result>\n+  {\n+    private final Supplier<ZoneId> defaultZone;\n+    private DateTimeBuilder state;\n+    protected AnyValue timezone;\n+\n+    protected Map<TemporalFields, AnyValue> fields = new EnumMap<>(TemporalFields.class);\n+\n+    Builder(Supplier<ZoneId> defaultZone)\n     {\n-        return false;\n+      this.defaultZone = defaultZone;\n     }\n \n     @Override\n-    public final boolean equals( char x )\n+    public final Result build()\n     {\n-        return false;\n+      if (state == null)\n+      {\n+        throw new InvalidValuesArgumentException(\"Builder state empty\");\n+      }\n+      state.checkAssignments(this.supportsDate());\n+      try\n+      {\n+        return buildInternal();\n+      } catch (DateTimeException e)\n+      {\n+        throw new InvalidValuesArgumentException(e.getMessage(), e);\n+      }\n     }\n \n-    @Override\n-    public final boolean equals( String x )\n+    <Temp extends Temporal> Temp assignAllFields(Temp temp)\n     {\n-        return false;\n+      Temp result = temp;\n+      for (Map.Entry<TemporalFields, AnyValue> entry : fields.entrySet())\n+      {\n+        TemporalFields f = entry.getKey();\n+        if (f == TemporalFields.year && fields.containsKey(TemporalFields.week))\n+        {\n+          // Year can mean week-based year, if a week is specified.\n+          result = (Temp) result.with(IsoFields.WEEK_BASED_YEAR,\n+              safeCastIntegral(f.name(), entry.getValue(), f.defaultValue));\n+        } else if (!f.isGroupSelector() && f != TemporalFields.timezone && f != TemporalFields.millisecond &&\n+            f != TemporalFields.microsecond && f != TemporalFields.nanosecond)\n+        {\n+          TemporalField temporalField = f.field;\n+          result = (Temp) result\n+              .with(temporalField, safeCastIntegral(f.name(), entry.getValue(), f.defaultValue));\n+        }\n+      }\n+      // Assign all sub-second parts in one step\n+      if (supportsTime() &&\n+          (fields.containsKey(TemporalFields.millisecond) ||\n+              fields.containsKey(TemporalFields.microsecond) || fields.containsKey(TemporalFields.nanosecond)))\n+      {\n+        result = (Temp) result.with(TemporalFields.nanosecond.field,\n+            validNano(fields.get(TemporalFields.millisecond), fields.get(TemporalFields.microsecond),\n+                fields.get(TemporalFields.nanosecond)));\n+      }\n+      return result;\n     }\n \n     @Override\n-    public String toString()\n+    public final StructureBuilder<AnyValue, Result> add(String fieldName, AnyValue value)\n     {\n-        return prettyPrint();\n+      TemporalFields field = TemporalFields.fields.get(fieldName.toLowerCase());\n+      if (field == null)\n+      {\n+        throw new InvalidValuesArgumentException(\"No such field: \" + fieldName);\n+      }\n+      // Change state\n+      field.assign(this, value);\n+\n+      // Set field for this builder\n+      fields.put(field, value);\n+      return this;\n     }\n \n-    static <VALUE> VALUE parse( Class<VALUE> type, Pattern pattern, Function<Matcher,VALUE> parser, CharSequence text )\n+    @SuppressWarnings(\"BooleanMethodIsAlwaysInverted\")\n+    private boolean supports(TemporalField field)\n     {\n-        Matcher matcher = pattern.matcher( text );\n-        VALUE result = matcher.matches() ? parser.apply( matcher ) : null;\n-        if ( result == null )\n-        {\n-            throw new TemporalParseException(\n-                    \"Text cannot be parsed to a \" + valueName( type ), text.toString(), 0 );\n-        }\n-        return result;\n+      if (field.isDateBased())\n+      {\n+        return supportsDate();\n+      }\n+      if (field.isTimeBased())\n+      {\n+        return supportsTime();\n+      }\n+      throw new IllegalStateException(\"Fields should be either date based or time based\");\n     }\n \n-    static <VALUE> VALUE parse( Class<VALUE> type, Pattern pattern, Function<Matcher,VALUE> parser, TextValue text )\n-    {\n-        Matcher matcher = text.matcher( pattern );\n-        VALUE result = matcher != null && matcher.matches() ? parser.apply( matcher ) : null;\n-        if ( result == null )\n-        {\n-            throw new TemporalParseException(\n-                    \"Text cannot be parsed to a \" + valueName( type ), text.stringValue(), 0 );\n-        }\n-        return result;\n-    }\n+    protected abstract boolean supportsDate();\n \n-    static <VALUE> VALUE parse(\n-            Class<VALUE> type,\n-            Pattern pattern,\n-            BiFunction<Matcher,Supplier<ZoneId>,VALUE> parser,\n-            CharSequence text,\n-            Supplier<ZoneId> defaultZone )\n-    {\n-        Matcher matcher = pattern.matcher( text );\n-        VALUE result = matcher.matches() ? parser.apply( matcher, defaultZone ) : null;\n-        if ( result == null )\n-        {\n-            throw new TemporalParseException(\n-                    \"Text cannot be parsed to a \" + valueName( type ), text.toString(), 0 );\n-        }\n-        return result;\n-    }\n+    protected abstract boolean supportsTime();\n \n-    static <VALUE> VALUE parse(\n-            Class<VALUE> type,\n-            Pattern pattern,\n-            BiFunction<Matcher,Supplier<ZoneId>,VALUE> parser,\n-            TextValue text,\n-            Supplier<ZoneId> defaultZone )\n-    {\n-        Matcher matcher = text.matcher( pattern );\n-        VALUE result = matcher != null && matcher.matches() ? parser.apply( matcher, defaultZone ) : null;\n-        if ( result == null )\n-        {\n-            throw new TemporalParseException(\n-                    \"Text cannot be parsed to a \" + valueName( type ), text.stringValue(), 0 );\n-        }\n-        return result;\n-    }\n+    protected abstract boolean supportsTimeZone();\n \n-    private static <VALUE> String valueName( Class<VALUE> type )\n-    {\n-        String name = type.getSimpleName();\n-        return name.substring( 0, name.length() - /*\"Value\" is*/5/*characters*/ );\n-    }\n+    protected abstract boolean supportsEpoch();\n \n-    public static TimeCSVHeaderInformation parseHeaderInformation( String text )\n+    protected ZoneId timezone(AnyValue timezone)\n     {\n-        TimeCSVHeaderInformation fields = new TimeCSVHeaderInformation();\n-        Value.parseHeaderInformation( text, \"time/datetime\", fields );\n-        return fields;\n+      return timezone == null ? defaultZone.get() : timezoneOf(timezone);\n     }\n \n-    abstract static class Builder<Result> implements StructureBuilder<AnyValue,Result>\n-    {\n-        private final Supplier<ZoneId> defaultZone;\n-        private DateTimeBuilder state;\n-        protected AnyValue timezone;\n-\n-        protected Map<TemporalFields,AnyValue> fields = new EnumMap<>( TemporalFields.class );\n+    // Construction\n \n-        Builder( Supplier<ZoneId> defaultZone )\n-        {\n-            this.defaultZone = defaultZone;\n-        }\n-\n-        @Override\n-        public final Result build()\n-        {\n-            if ( state == null )\n-            {\n-                throw new InvalidValuesArgumentException( \"Builder state empty\" );\n-            }\n-            state.checkAssignments( this.supportsDate() );\n-            try\n-            {\n-                return buildInternal();\n-            }\n-            catch ( DateTimeException e )\n-            {\n-                throw new InvalidValuesArgumentException( e.getMessage(), e );\n-            }\n-        }\n-\n-        <Temp extends Temporal> Temp assignAllFields( Temp temp )\n-        {\n-            Temp result = temp;\n-            for ( Map.Entry<TemporalFields,AnyValue> entry : fields.entrySet() )\n-            {\n-                TemporalFields f = entry.getKey();\n-                if ( f == TemporalFields.year && fields.containsKey( TemporalFields.week ) )\n-                {\n-                    // Year can mean week-based year, if a week is specified.\n-                    result = (Temp) result.with( IsoFields.WEEK_BASED_YEAR,\n-                            safeCastIntegral( f.name(), entry.getValue(), f.defaultValue ) );\n-                }\n-                else if ( !f.isGroupSelector() && f != TemporalFields.timezone && f != TemporalFields.millisecond &&\n-                          f != TemporalFields.microsecond && f != TemporalFields.nanosecond )\n-                {\n-                    TemporalField temporalField = f.field;\n-                    result = (Temp) result\n-                            .with( temporalField, safeCastIntegral( f.name(), entry.getValue(), f.defaultValue ) );\n-                }\n-            }\n-            // Assign all sub-second parts in one step\n-            if ( supportsTime() &&\n-                 (fields.containsKey( TemporalFields.millisecond ) ||\n-                  fields.containsKey( TemporalFields.microsecond ) || fields.containsKey( TemporalFields.nanosecond )) )\n-            {\n-                result = (Temp) result.with( TemporalFields.nanosecond.field,\n-                        validNano( fields.get( TemporalFields.millisecond ), fields.get( TemporalFields.microsecond ),\n-                                fields.get( TemporalFields.nanosecond ) ) );\n-            }\n-            return result;\n-        }\n-\n-        @Override\n-        public final StructureBuilder<AnyValue,Result> add( String fieldName, AnyValue value )\n-        {\n-            TemporalFields field = TemporalFields.fields.get( fieldName.toLowerCase() );\n-            if ( field == null )\n-            {\n-                throw new InvalidValuesArgumentException( \"No such field: \" + fieldName );\n-            }\n-            // Change state\n-            field.assign( this, value );\n-\n-            // Set field for this builder\n-            fields.put( field, value );\n-            return this;\n-        }\n-\n-        @SuppressWarnings( \"BooleanMethodIsAlwaysInverted\" )\n-        private boolean supports( TemporalField field )\n-        {\n-            if ( field.isDateBased() )\n-            {\n-                return supportsDate();\n-            }\n-            if ( field.isTimeBased() )\n-            {\n-                return supportsTime();\n-            }\n-            throw new IllegalStateException( \"Fields should be either date based or time based\" );\n-        }\n-\n-        protected abstract boolean supportsDate();\n+    protected abstract Result buildInternal();\n \n-        protected abstract boolean supportsTime();\n+    // Timezone utilities\n \n-        protected abstract boolean supportsTimeZone();\n-\n-        protected abstract boolean supportsEpoch();\n-\n-        protected ZoneId timezone( AnyValue timezone )\n-        {\n-            return timezone == null ? defaultZone.get() : timezoneOf( timezone );\n-        }\n-\n-        // Construction\n-\n-        protected abstract Result buildInternal();\n-\n-        // Timezone utilities\n-\n-        protected final ZoneId optionalTimezone()\n-        {\n-            return timezone == null ? null : timezone();\n-        }\n-\n-        protected final ZoneId timezone()\n-        {\n-            return timezone( timezone );\n-        }\n+    protected final ZoneId optionalTimezone()\n+    {\n+      return timezone == null ? null : timezone();\n+    }\n \n+    protected final ZoneId timezone()\n+    {\n+      return timezone(timezone);\n     }\n \n-    /**\n-     * All fields that can be a asigned to or read from temporals.\n-     * Make sure that writable fields defined in \"decreasing\" order between year and nanosecond.\n-     */\n-    public enum TemporalFields\n-    {\n-        year( ChronoField.YEAR, 0 ),\n-        quarter( IsoFields.QUARTER_OF_YEAR, 1 ),\n-        month( ChronoField.MONTH_OF_YEAR, 1 ),\n-        week( IsoFields.WEEK_OF_WEEK_BASED_YEAR, 1 ),\n-        ordinalDay( ChronoField.DAY_OF_YEAR, 1 ),\n-        dayOfQuarter( IsoFields.DAY_OF_QUARTER, 1 ),\n-        dayOfWeek( ChronoField.DAY_OF_WEEK, 1 ),\n-        day( ChronoField.DAY_OF_MONTH, 1 ),\n-        hour( ChronoField.HOUR_OF_DAY, 0 ),\n-        minute( ChronoField.MINUTE_OF_HOUR, 0 ),\n-        second( ChronoField.SECOND_OF_MINUTE, 0 ),\n-        millisecond( ChronoField.MILLI_OF_SECOND, 0 ),\n-        microsecond( ChronoField.MICRO_OF_SECOND, 0 ),\n-        nanosecond( ChronoField.NANO_OF_SECOND, 0 ),\n-        // Read only accessors (not assignable)\n-        weekYear( IsoFields.WEEK_BASED_YEAR, 0 )//<pre>\n+  }\n+\n+  /**\n+   * All fields that can be a asigned to or read from temporals.\n+   * Make sure that writable fields defined in \"decreasing\" order between year and nanosecond.\n+   */\n+  public enum TemporalFields\n+  {\n+    year(ChronoField.YEAR, 0),\n+    quarter(IsoFields.QUARTER_OF_YEAR, 1),\n+    month(ChronoField.MONTH_OF_YEAR, 1),\n+    week(IsoFields.WEEK_OF_WEEK_BASED_YEAR, 1),\n+    ordinalDay(ChronoField.DAY_OF_YEAR, 1),\n+    dayOfQuarter(IsoFields.DAY_OF_QUARTER, 1),\n+    dayOfWeek(ChronoField.DAY_OF_WEEK, 1),\n+    day(ChronoField.DAY_OF_MONTH, 1),\n+    hour(ChronoField.HOUR_OF_DAY, 0),\n+    minute(ChronoField.MINUTE_OF_HOUR, 0),\n+    second(ChronoField.SECOND_OF_MINUTE, 0),\n+    millisecond(ChronoField.MILLI_OF_SECOND, 0),\n+    microsecond(ChronoField.MICRO_OF_SECOND, 0),\n+    nanosecond(ChronoField.NANO_OF_SECOND, 0),\n+    // Read only accessors (not assignable)\n+    weekYear(IsoFields.WEEK_BASED_YEAR, 0)//<pre>\n         { //</pre>\n \n-            @Override\n-            void assign( Builder<?> builder, AnyValue value )\n-            {\n-                throw new UnsupportedTemporalUnitException( \"Not supported: \" + name() );\n-            }\n+          @Override\n+          void assign(Builder<?> builder, AnyValue value)\n+          {\n+            throw new UnsupportedTemporalUnitException(\"Not supported: \" + name());\n+          }\n         },\n-        offset//<pre>\n+    offset//<pre>\n         { //</pre>\n \n-            @Override\n-            void assign( Builder<?> builder, AnyValue value )\n-            {\n-                throw new UnsupportedTemporalUnitException( \"Not supported: \" + name() );\n-            }\n+          @Override\n+          void assign(Builder<?> builder, AnyValue value)\n+          {\n+            throw new UnsupportedTemporalUnitException(\"Not supported: \" + name());\n+          }\n         },\n-        offsetMinutes//<pre>\n+    offsetMinutes//<pre>\n         { //</pre>\n \n-            @Override\n-            void assign( Builder<?> builder, AnyValue value )\n-            {\n-                throw new UnsupportedTemporalUnitException( \"Not supported: \" + name() );\n-            }\n+          @Override\n+          void assign(Builder<?> builder, AnyValue value)\n+          {\n+            throw new UnsupportedTemporalUnitException(\"Not supported: \" + name());\n+          }\n         },\n-        offsetSeconds//<pre>\n+    offsetSeconds//<pre>\n         { //</pre>\n \n-            @Override\n-            void assign( Builder<?> builder, AnyValue value )\n-            {\n-                throw new UnsupportedTemporalUnitException( \"Not supported: \" + name() );\n-            }\n+          @Override\n+          void assign(Builder<?> builder, AnyValue value)\n+          {\n+            throw new UnsupportedTemporalUnitException(\"Not supported: \" + name());\n+          }\n         },\n-        // time zone\n-        timezone//<pre>\n+    // time zone\n+    timezone//<pre>\n         { //</pre>\n \n-            @Override\n-            void assign( Builder<?> builder, AnyValue value )\n+          @Override\n+          void assign(Builder<?> builder, AnyValue value)\n+          {\n+            if (!builder.supportsTimeZone())\n             {\n-                if ( !builder.supportsTimeZone() )\n-                {\n-                    throw new UnsupportedTemporalUnitException( \"Cannot assign time zone if also assigning other fields.\" );\n-                }\n-                if ( builder.timezone != null )\n-                {\n-                    throw new InvalidValuesArgumentException( \"Cannot assign timezone twice.\" );\n-                }\n-                builder.timezone = value;\n+              throw new UnsupportedTemporalUnitException(\"Cannot assign time zone if also assigning other fields.\");\n             }\n+            if (builder.timezone != null)\n+            {\n+              throw new InvalidValuesArgumentException(\"Cannot assign timezone twice.\");\n+            }\n+            builder.timezone = value;\n+          }\n         },\n-        // group selectors\n-        date//<pre>\n+    // group selectors\n+    date//<pre>\n         { //</pre>\n \n-            @Override\n-            void assign( Builder<?> builder, AnyValue value )\n+          @Override\n+          void assign(Builder<?> builder, AnyValue value)\n+          {\n+            if (!builder.supportsDate())\n             {\n-                if ( !builder.supportsDate() )\n-                {\n-                    throw new UnsupportedTemporalUnitException( \"Not supported: \" + name() );\n-                }\n-                if ( builder.state == null )\n-                {\n-                    builder.state = new DateTimeBuilder();\n-                }\n-                builder.state = builder.state.assign( this, value );\n+              throw new UnsupportedTemporalUnitException(\"Not supported: \" + name());\n             }\n-\n-            @Override\n-            boolean isGroupSelector()\n+            if (builder.state == null)\n             {\n-                return true;\n+              builder.state = new DateTimeBuilder();\n             }\n+            builder.state = builder.state.assign(this, value);\n+          }\n+\n+          @Override\n+          boolean isGroupSelector()\n+          {\n+            return true;\n+          }\n         },\n-        time//<pre>\n+    time//<pre>\n         { //</pre>\n \n-            @Override\n-            void assign( Builder<?> builder, AnyValue value )\n+          @Override\n+          void assign(Builder<?> builder, AnyValue value)\n+          {\n+            if (!builder.supportsTime())\n             {\n-                if ( !builder.supportsTime() )\n-                {\n-                    throw new UnsupportedTemporalUnitException( \"Not supported: \" + name() );\n-                }\n-                if ( builder.state == null )\n-                {\n-                    builder.state = new DateTimeBuilder();\n-                }\n-                builder.state = builder.state.assign( this, value );\n+              throw new UnsupportedTemporalUnitException(\"Not supported: \" + name());\n             }\n-\n-            @Override\n-            boolean isGroupSelector()\n+            if (builder.state == null)\n             {\n-                return true;\n+              builder.state = new DateTimeBuilder();\n             }\n+            builder.state = builder.state.assign(this, value);\n+          }\n+\n+          @Override\n+          boolean isGroupSelector()\n+          {\n+            return true;\n+          }\n         },\n-        datetime//<pre>\n+    datetime//<pre>\n         { //</pre>\n \n-            @Override\n-            void assign( Builder<?> builder, AnyValue value )\n+          @Override\n+          void assign(Builder<?> builder, AnyValue value)\n+          {\n+            if (!builder.supportsDate() || !builder.supportsTime())\n             {\n-                if ( !builder.supportsDate() || !builder.supportsTime() )\n-                {\n-                    throw new UnsupportedTemporalUnitException( \"Not supported: \" + name() );\n-                }\n-                if ( builder.state == null )\n-                {\n-                    builder.state = new DateTimeBuilder( );\n-                }\n-                builder.state = builder.state.assign( this, value );\n+              throw new UnsupportedTemporalUnitException(\"Not supported: \" + name());\n             }\n-\n-            @Override\n-            boolean isGroupSelector()\n+            if (builder.state == null)\n             {\n-                return true;\n+              builder.state = new DateTimeBuilder();\n             }\n+            builder.state = builder.state.assign(this, value);\n+          }\n+\n+          @Override\n+          boolean isGroupSelector()\n+          {\n+            return true;\n+          }\n         },\n-        epochSeconds//<pre>\n+    epochSeconds//<pre>\n         { //<pre>\n \n-            @Override\n-            void assign( Builder<?> builder, AnyValue value )\n+          @Override\n+          void assign(Builder<?> builder, AnyValue value)\n+          {\n+            if (!builder.supportsEpoch())\n             {\n-                if ( !builder.supportsEpoch() )\n-                {\n-                    throw new UnsupportedTemporalUnitException( \"Not supported: \" + name() );\n-                }\n-                if ( builder.state == null )\n-                {\n-                    builder.state = new DateTimeBuilder( );\n-                }\n-                builder.state = builder.state.assign( this, value );\n+              throw new UnsupportedTemporalUnitException(\"Not supported: \" + name());\n             }\n-\n-            @Override\n-            boolean isGroupSelector()\n+            if (builder.state == null)\n             {\n-                return true;\n+              builder.state = new DateTimeBuilder();\n             }\n+            builder.state = builder.state.assign(this, value);\n+          }\n+\n+          @Override\n+          boolean isGroupSelector()\n+          {\n+            return true;\n+          }\n         },\n-        epochMillis//<pre>\n+    epochMillis//<pre>\n         { //<pre>\n \n-            @Override\n-            void assign( Builder<?> builder, AnyValue value )\n+          @Override\n+          void assign(Builder<?> builder, AnyValue value)\n+          {\n+            if (!builder.supportsEpoch())\n             {\n-                if ( !builder.supportsEpoch() )\n-                {\n-                    throw new UnsupportedTemporalUnitException( \"Not supported: \" + name() );\n-                }\n-                if ( builder.state == null )\n-                {\n-                    builder.state = new DateTimeBuilder( );\n-                }\n-                builder.state = builder.state.assign( this, value );\n+              throw new UnsupportedTemporalUnitException(\"Not supported: \" + name());\n             }\n-\n-            @Override\n-            boolean isGroupSelector()\n+            if (builder.state == null)\n             {\n-                return true;\n+              builder.state = new DateTimeBuilder();\n             }\n+            builder.state = builder.state.assign(this, value);\n+          }\n+\n+          @Override\n+          boolean isGroupSelector()\n+          {\n+            return true;\n+          }\n         };\n-        private static final Map<String,TemporalFields> fields = new HashMap<>();\n+    private static final Map<String, TemporalFields> fields = new HashMap<>();\n \n-        static\n-        {\n-            for ( TemporalFields field : values() )\n-            {\n-                fields.put( field.name().toLowerCase(), field );\n-            }\n-            // aliases\n-            fields.put( \"weekday\", dayOfWeek );\n-            fields.put( \"quarterday\", dayOfQuarter );\n-        }\n+    static\n+    {\n+      for (TemporalFields field : values())\n+      {\n+        fields.put(field.name().toLowerCase(), field);\n+      }\n+      // aliases\n+      fields.put(\"weekday\", dayOfWeek);\n+      fields.put(\"quarterday\", dayOfQuarter);\n+    }\n \n-        final TemporalField field;\n-        final int defaultValue;\n+    final TemporalField field;\n+    final int defaultValue;\n \n-        TemporalFields( TemporalField field, int defaultValue )\n-        {\n-            this.field = field;\n-            this.defaultValue = defaultValue;\n-        }\n+    TemporalFields(TemporalField field, int defaultValue)\n+    {\n+      this.field = field;\n+      this.defaultValue = defaultValue;\n+    }\n \n-        TemporalFields()\n-        {\n-            this.field = null;\n-            this.defaultValue = -1;\n-        }\n+    TemporalFields()\n+    {\n+      this.field = null;\n+      this.defaultValue = -1;\n+    }\n \n-        boolean isGroupSelector()\n-        {\n-            return false;\n-        }\n+    boolean isGroupSelector()\n+    {\n+      return false;\n+    }\n+\n+    void assign(Builder<?> builder, AnyValue value)\n+    {\n+      assert field != null : \"method should have been overridden\";\n+      if (!builder.supports(field))\n+      {\n+        throw new UnsupportedTemporalUnitException(\"Not supported: \" + name());\n+      }\n+      if (builder.state == null)\n+      {\n+        builder.state = new DateTimeBuilder();\n+      }\n+      builder.state = builder.state.assign(this, value);\n+    }\n+\n+    public static Set<String> allFields()\n+    {\n+      return fields.keySet();\n+    }\n+  }\n+\n+  private static class DateTimeBuilder\n+  {\n+    protected DateBuilder date;\n+    protected ConstructTime time;\n+\n+    DateTimeBuilder()\n+    {\n+    }\n \n-        void assign( Builder<?> builder, AnyValue value )\n+    DateTimeBuilder(DateBuilder date, ConstructTime time)\n+    {\n+      this.date = date;\n+      this.time = time;\n+    }\n+\n+    void checkAssignments(boolean requiresDate)\n+    {\n+      if (date != null)\n+      {\n+        date.checkAssignments();\n+      }\n+      if (time != null)\n+      {\n+        if (requiresDate)\n+        {\n+          if (date != null)\n+          {\n+            date.assertFullyAssigned();\n+          } else\n+          {\n+            throw new InvalidValuesArgumentException(TemporalFields.year.name() + \" must be specified\");\n+          }\n+        }\n+        time.checkAssignments();\n+      }\n+    }\n+\n+    DateTimeBuilder assign(TemporalFields field, AnyValue value)\n+    {\n+      if (field == TemporalFields.datetime || field == TemporalFields.epochSeconds || field == TemporalFields.epochMillis)\n+      {\n+        return new SelectDateTimeDTBuilder(date, time).assign(field, value);\n+      } else if (field == TemporalFields.time || field == TemporalFields.date)\n+      {\n+        return new SelectDateOrTimeDTBuilder(date, time).assign(field, value);\n+      } else\n+      {\n+        return assignToSubBuilders(field, value);\n+      }\n+    }\n+\n+    DateTimeBuilder assignToSubBuilders(TemporalFields field, AnyValue value)\n+    {\n+      if (field == TemporalFields.date || field.field != null && field.field.isDateBased())\n+      {\n+        if (date == null)\n         {\n-            assert field != null : \"method should have been overridden\";\n-            if ( !builder.supports( field ) )\n-            {\n-                throw new UnsupportedTemporalUnitException( \"Not supported: \" + name() );\n-            }\n-            if ( builder.state == null )\n-            {\n-                builder.state = new DateTimeBuilder();\n-            }\n-            builder.state = builder.state.assign( this, value );\n+          date = new ConstructDate();\n         }\n-\n-        public static Set<String> allFields()\n+        date = date.assign(field, value);\n+      } else if (field == TemporalFields.time || field.field != null && field.field.isTimeBased())\n+      {\n+        if (time == null)\n         {\n-            return fields.keySet();\n+          time = new ConstructTime();\n         }\n+        time.assign(field, value);\n+      } else\n+      {\n+        throw new IllegalStateException(\"This method should not be used for any fields the DateBuilder or TimeBuilder can't handle\");\n+      }\n+      return this;\n+    }\n+  }\n+\n+  private static class SelectDateTimeDTBuilder extends DateTimeBuilder\n+  {\n+    private AnyValue datetime;\n+    private AnyValue epochSeconds;\n+    private AnyValue epochMillis;\n+\n+    SelectDateTimeDTBuilder(DateBuilder date, ConstructTime time)\n+    {\n+      super(date, time);\n     }\n \n-    private static class DateTimeBuilder\n+    @Override\n+    void checkAssignments(boolean requiresDate)\n     {\n-        protected DateBuilder date;\n-        protected ConstructTime time;\n+      // Nothing to do\n+    }\n \n-        DateTimeBuilder()\n+    @Override\n+    DateTimeBuilder assign(TemporalFields field, AnyValue value)\n+    {\n+      if (field == TemporalFields.date || field == TemporalFields.time)\n+      {\n+        throw new InvalidValuesArgumentException(field.name() + \" cannot be selected together with datetime or epochSeconds or epochMillis.\");\n+      } else if (field == TemporalFields.datetime)\n+      {\n+        if (epochSeconds != null)\n         {\n-        }\n-\n-        DateTimeBuilder( DateBuilder date, ConstructTime time )\n+          throw new InvalidValuesArgumentException(field.name() + \" cannot be selected together with epochSeconds.\");\n+        } else if (epochMillis != null)\n         {\n-            this.date = date;\n-            this.time = time;\n+          throw new InvalidValuesArgumentException(field.name() + \" cannot be selected together with epochMillis.\");\n         }\n-\n-        void checkAssignments( boolean requiresDate )\n+        datetime = assignment(TemporalFields.datetime, datetime, value);\n+      } else if (field == TemporalFields.epochSeconds)\n+      {\n+        if (epochMillis != null)\n         {\n-            if ( date != null )\n-            {\n-                date.checkAssignments();\n-            }\n-            if ( time != null )\n-            {\n-                if ( requiresDate )\n-                {\n-                    if ( date != null )\n-                    {\n-                        date.assertFullyAssigned();\n-                    }\n-                    else\n-                    {\n-                        throw new InvalidValuesArgumentException( TemporalFields.year.name() + \" must be specified\" );\n-                    }\n-                }\n-                time.checkAssignments();\n-            }\n+          throw new InvalidValuesArgumentException(field.name() + \" cannot be selected together with epochMillis.\");\n+        } else if (datetime != null)\n+        {\n+          throw new InvalidValuesArgumentException(field.name() + \" cannot be selected together with datetime.\");\n         }\n-\n-        DateTimeBuilder assign( TemporalFields field, AnyValue value )\n+        epochSeconds = assignment(TemporalFields.epochSeconds, epochSeconds, value);\n+      } else if (field == TemporalFields.epochMillis)\n+      {\n+        if (epochSeconds != null)\n         {\n-            if ( field == TemporalFields.datetime || field == TemporalFields.epochSeconds || field == TemporalFields.epochMillis )\n-            {\n-                return new SelectDateTimeDTBuilder( date, time ).assign( field, value );\n-            }\n-            else if ( field == TemporalFields.time || field == TemporalFields.date )\n-            {\n-                return new SelectDateOrTimeDTBuilder( date, time ).assign( field, value );\n-            }\n-            else\n-            {\n-                return assignToSubBuilders( field, value );\n-            }\n-        }\n-\n-        DateTimeBuilder assignToSubBuilders( TemporalFields field, AnyValue value )\n+          throw new InvalidValuesArgumentException(field.name() + \" cannot be selected together with epochSeconds.\");\n+        } else if (datetime != null)\n         {\n-            if ( field == TemporalFields.date || field.field != null && field.field.isDateBased() )\n-            {\n-                if ( date == null )\n-                {\n-                    date = new ConstructDate();\n-                }\n-                date = date.assign( field, value );\n-            }\n-            else if ( field == TemporalFields.time || field.field != null && field.field.isTimeBased() )\n-            {\n-                if ( time == null )\n-                {\n-                    time = new ConstructTime();\n-                }\n-                time.assign( field, value );\n-            }\n-            else\n-            {\n-                throw new IllegalStateException( \"This method should not be used for any fields the DateBuilder or TimeBuilder can't handle\" );\n-            }\n-            return this;\n+          throw new InvalidValuesArgumentException(field.name() + \" cannot be selected together with datetime.\");\n         }\n+        epochMillis = assignment(TemporalFields.epochMillis, epochMillis, value);\n+      } else\n+      {\n+        return assignToSubBuilders(field, value);\n+      }\n+      return this;\n     }\n+  }\n \n-    private static class SelectDateTimeDTBuilder extends DateTimeBuilder\n+  private static class SelectDateOrTimeDTBuilder extends DateTimeBuilder\n+  {\n+    SelectDateOrTimeDTBuilder(DateBuilder date, ConstructTime time)\n     {\n-        private AnyValue datetime;\n-        private AnyValue epochSeconds;\n-        private AnyValue epochMillis;\n-\n-        SelectDateTimeDTBuilder( DateBuilder date, ConstructTime time )\n-        {\n-            super( date, time );\n-        }\n-\n-        @Override\n-        void checkAssignments( boolean requiresDate )\n-        {\n-            // Nothing to do\n-        }\n-\n-        @Override\n-        DateTimeBuilder assign( TemporalFields field, AnyValue value )\n-        {\n-            if ( field == TemporalFields.date || field == TemporalFields.time )\n-            {\n-                throw new InvalidValuesArgumentException( field.name() + \" cannot be selected together with datetime or epochSeconds or epochMillis.\" );\n-            }\n-            else if ( field == TemporalFields.datetime )\n-            {\n-                if ( epochSeconds != null )\n-                {\n-                    throw new InvalidValuesArgumentException( field.name() + \" cannot be selected together with epochSeconds.\" );\n-                }\n-                else if ( epochMillis != null )\n-                {\n-                    throw new InvalidValuesArgumentException( field.name() + \" cannot be selected together with epochMillis.\" );\n-                }\n-                datetime = assignment( TemporalFields.datetime, datetime, value );\n-            }\n-            else if ( field == TemporalFields.epochSeconds )\n-            {\n-                if ( epochMillis != null )\n-                {\n-                    throw new InvalidValuesArgumentException( field.name() + \" cannot be selected together with epochMillis.\" );\n-                }\n-                else if ( datetime != null )\n-                {\n-                    throw new InvalidValuesArgumentException( field.name() + \" cannot be selected together with datetime.\" );\n-                }\n-                epochSeconds = assignment( TemporalFields.epochSeconds, epochSeconds, value );\n-            }\n-            else if ( field == TemporalFields.epochMillis )\n-            {\n-                if ( epochSeconds != null )\n-                {\n-                    throw new InvalidValuesArgumentException( field.name() + \" cannot be selected together with epochSeconds.\" );\n-                }\n-                else if ( datetime != null )\n-                {\n-                    throw new InvalidValuesArgumentException( field.name() + \" cannot be selected together with datetime.\" );\n-                }\n-                epochMillis = assignment( TemporalFields.epochMillis, epochMillis, value );\n-            }\n-            else\n-            {\n-                return assignToSubBuilders( field, value );\n-            }\n-            return this;\n-        }\n+      super(date, time);\n     }\n \n-    private static class SelectDateOrTimeDTBuilder extends DateTimeBuilder\n+    @Override\n+    DateTimeBuilder assign(TemporalFields field, AnyValue value)\n     {\n-        SelectDateOrTimeDTBuilder( DateBuilder date, ConstructTime time )\n-        {\n-            super( date, time );\n-        }\n-\n-        @Override\n-        DateTimeBuilder assign( TemporalFields field, AnyValue value )\n-        {\n-            if ( field == TemporalFields.datetime || field == TemporalFields.epochSeconds || field == TemporalFields.epochMillis )\n-            {\n-                throw new InvalidValuesArgumentException( field.name() + \" cannot be selected together with date or time.\" );\n-            }\n-            else\n-            {\n-                return assignToSubBuilders( field, value );\n-            }\n-        }\n+      if (field == TemporalFields.datetime || field == TemporalFields.epochSeconds || field == TemporalFields.epochMillis)\n+      {\n+        throw new InvalidValuesArgumentException(field.name() + \" cannot be selected together with date or time.\");\n+      } else\n+      {\n+        return assignToSubBuilders(field, value);\n+      }\n     }\n+  }\n \n-    private abstract static class DateBuilder\n-    {\n-        abstract DateBuilder assign( TemporalFields field, AnyValue value );\n+  private abstract static class DateBuilder\n+  {\n+    abstract DateBuilder assign(TemporalFields field, AnyValue value);\n+\n+    abstract void checkAssignments();\n \n-        abstract void checkAssignments();\n+    abstract void assertFullyAssigned();\n+  }\n \n-        abstract void assertFullyAssigned();\n+  private static final class ConstructTime\n+  {\n+    private AnyValue hour;\n+    private AnyValue minute;\n+    private AnyValue second;\n+    private AnyValue millisecond;\n+    private AnyValue microsecond;\n+    private AnyValue nanosecond;\n+    private AnyValue time;\n+\n+    ConstructTime()\n+    {\n     }\n \n-    private static final class ConstructTime\n+    void assign(TemporalFields field, AnyValue value)\n     {\n-        private AnyValue hour;\n-        private AnyValue minute;\n-        private AnyValue second;\n-        private AnyValue millisecond;\n-        private AnyValue microsecond;\n-        private AnyValue nanosecond;\n-        private AnyValue time;\n+      switch (field)\n+      {\n+        case hour:\n+          hour = assignment(field, hour, value);\n+          break;\n+        case minute:\n+          minute = assignment(field, minute, value);\n+          break;\n+        case second:\n+          second = assignment(field, second, value);\n+          break;\n+        case millisecond:\n+          millisecond = assignment(field, millisecond, value);\n+          break;\n+        case microsecond:\n+          microsecond = assignment(field, microsecond, value);\n+          break;\n+        case nanosecond:\n+          nanosecond = assignment(field, nanosecond, value);\n+          break;\n+        case time:\n+        case datetime:\n+          time = assignment(field, time, value);\n+          break;\n+        default:\n+          throw new IllegalStateException(\"Not a time field: \" + field);\n+      }\n+    }\n \n-        ConstructTime()\n-        {\n-        }\n+    void checkAssignments()\n+    {\n+      if (time == null)\n+      {\n+        assertDefinedInOrder(Pair.of(hour, \"hour\"), Pair.of(minute, \"minute\"), Pair.of(second, \"second\"),\n+            Pair.of(oneOf(millisecond, microsecond, nanosecond), \"subsecond\"));\n+      }\n+    }\n+  }\n \n-        void assign( TemporalFields field, AnyValue value )\n-        {\n-            switch ( field )\n-            {\n-            case hour:\n-                hour = assignment( field, hour, value );\n-                break;\n-            case minute:\n-                minute = assignment( field, minute, value );\n-                break;\n-            case second:\n-                second = assignment( field, second, value );\n-                break;\n-            case millisecond:\n-                millisecond = assignment( field, millisecond, value );\n-                break;\n-            case microsecond:\n-                microsecond = assignment( field, microsecond, value );\n-                break;\n-            case nanosecond:\n-                nanosecond = assignment( field, nanosecond, value );\n-                break;\n-            case time:\n-            case datetime:\n-                time = assignment( field, time, value );\n-                break;\n-            default:\n-                throw new IllegalStateException( \"Not a time field: \" + field );\n-            }\n-        }\n+  private static class ConstructDate extends DateBuilder\n+  {\n+    AnyValue year;\n+    AnyValue date;\n \n-        void checkAssignments()\n-        {\n-            if ( time == null )\n-            {\n-                assertDefinedInOrder( Pair.of( hour, \"hour\" ), Pair.of( minute, \"minute\" ), Pair.of( second, \"second\" ),\n-                        Pair.of( oneOf( millisecond, microsecond, nanosecond ), \"subsecond\" ) );\n-            }\n-        }\n+    ConstructDate()\n+    {\n     }\n \n-    private static class ConstructDate extends DateBuilder\n+    ConstructDate(AnyValue date)\n     {\n-        AnyValue year;\n-        AnyValue date;\n+      this.date = date;\n+    }\n \n-        ConstructDate()\n-        {\n-        }\n+    @Override\n+    ConstructDate assign(TemporalFields field, AnyValue value)\n+    {\n+      switch (field)\n+      {\n+        case year:\n+          year = assignment(field, year, value);\n+          return this;\n+        case quarter:\n+        case dayOfQuarter:\n+          return new QuarterDate(year, date).assign(field, value);\n+        case month:\n+        case day:\n+          return new CalendarDate(year, date).assign(field, value);\n+        case week:\n+        case dayOfWeek:\n+          return new WeekDate(year, date).assign(field, value);\n+        case ordinalDay:\n+          return new OrdinalDate(year, date).assign(field, value);\n+        case date:\n+        case datetime:\n+          date = assignment(field, date, value);\n+          return this;\n+        default:\n+          throw new IllegalStateException(\"Not a date field: \" + field);\n+      }\n+    }\n \n-        ConstructDate( AnyValue date )\n-        {\n-            this.date = date;\n-        }\n+    @Override\n+    void checkAssignments()\n+    {\n+      // Nothing to do\n+    }\n \n-        @Override\n-        ConstructDate assign( TemporalFields field, AnyValue value )\n-        {\n-            switch ( field )\n-            {\n-            case year:\n-                year = assignment( field, year, value );\n-                return this;\n-            case quarter:\n-            case dayOfQuarter:\n-                return new QuarterDate( year, date ).assign( field, value );\n-            case month:\n-            case day:\n-                return new CalendarDate( year, date ).assign( field, value );\n-            case week:\n-            case dayOfWeek:\n-                return new WeekDate( year, date ).assign( field, value );\n-            case ordinalDay:\n-                return new OrdinalDate( year, date ).assign( field, value );\n-            case date:\n-            case datetime:\n-                date = assignment( field, date, value );\n-                return this;\n-            default:\n-                throw new IllegalStateException( \"Not a date field: \" + field );\n-            }\n-        }\n+    @Override\n+    void assertFullyAssigned()\n+    {\n+      if (date == null)\n+      {\n+        throw new InvalidValuesArgumentException(TemporalFields.month.name() + \" must be specified\");\n+      }\n+    }\n+  }\n \n-        @Override\n-        void checkAssignments()\n-        {\n-            // Nothing to do\n-        }\n+  private static final class CalendarDate extends ConstructDate\n+  {\n+    private AnyValue month;\n+    private AnyValue day;\n \n-        @Override\n-        void assertFullyAssigned()\n-        {\n-            if ( date == null )\n-            {\n-                throw new InvalidValuesArgumentException( TemporalFields.month.name() + \" must be specified\"  );\n-            }\n-        }\n+    CalendarDate(AnyValue year, AnyValue date)\n+    {\n+      this.year = year;\n+      this.date = date;\n     }\n \n-    private static final class CalendarDate extends ConstructDate\n+    @Override\n+    ConstructDate assign(TemporalFields field, AnyValue value)\n     {\n-        private AnyValue month;\n-        private AnyValue day;\n+      switch (field)\n+      {\n+        case year:\n+          year = assignment(field, year, value);\n+          return this;\n+        case month:\n+          month = assignment(field, month, value);\n+          return this;\n+        case day:\n+          day = assignment(field, day, value);\n+          return this;\n+        case date:\n+        case datetime:\n+          date = assignment(field, date, value);\n+          return this;\n+        default:\n+          throw new UnsupportedTemporalUnitException(\"Cannot assign \" + field + \" to calendar date.\");\n+      }\n+    }\n \n-        CalendarDate( AnyValue year, AnyValue date )\n-        {\n-            this.year = year;\n-            this.date = date;\n-        }\n+    @Override\n+    void checkAssignments()\n+    {\n+      if (date == null)\n+      {\n+        assertDefinedInOrder(Pair.of(year, \"year\"), Pair.of(month, \"month\"), Pair.of(day, \"day\"));\n+      }\n+    }\n \n-        @Override\n-        ConstructDate assign( TemporalFields field, AnyValue value )\n-        {\n-            switch ( field )\n-            {\n-            case year:\n-                year = assignment( field, year, value );\n-                return this;\n-            case month:\n-                month = assignment( field, month, value );\n-                return this;\n-            case day:\n-                day = assignment( field, day, value );\n-                return this;\n-            case date:\n-            case datetime:\n-                date = assignment( field, date, value );\n-                return this;\n-            default:\n-                throw new UnsupportedTemporalUnitException( \"Cannot assign \" + field + \" to calendar date.\" );\n-            }\n-        }\n+    @Override\n+    void assertFullyAssigned()\n+    {\n+      if (date == null)\n+      {\n+        assertAllDefined(Pair.of(year, \"year\"), Pair.of(month, \"month\"), Pair.of(day, \"day\"));\n+      }\n+    }\n+  }\n \n-        @Override\n-        void checkAssignments()\n-        {\n-            if ( date == null )\n-            {\n-                assertDefinedInOrder( Pair.of( year, \"year\" ), Pair.of( month, \"month\" ), Pair.of( day, \"day\" ) );\n-            }\n-        }\n+  private static final class WeekDate extends ConstructDate\n+  {\n+    private AnyValue week;\n+    private AnyValue dayOfWeek;\n \n-        @Override\n-        void assertFullyAssigned()\n-        {\n-            if ( date == null )\n-            {\n-                assertAllDefined( Pair.of( year, \"year\" ), Pair.of( month, \"month\" ), Pair.of( day, \"day\" ) );\n-            }\n-        }\n+    WeekDate(AnyValue year, AnyValue date)\n+    {\n+      this.year = year;\n+      this.date = date;\n     }\n \n-    private static final class WeekDate extends ConstructDate\n+    @Override\n+    ConstructDate assign(TemporalFields field, AnyValue value)\n     {\n-        private AnyValue week;\n-        private AnyValue dayOfWeek;\n+      switch (field)\n+      {\n+        case year:\n+          year = assignment(field, year, value);\n+          return this;\n+        case week:\n+          week = assignment(field, week, value);\n+          return this;\n+        case dayOfWeek:\n+          dayOfWeek = assignment(field, dayOfWeek, value);\n+          return this;\n+        case date:\n+        case datetime:\n+          date = assignment(field, date, value);\n+          return this;\n+        default:\n+          throw new UnsupportedTemporalUnitException(\"Cannot assign \" + field + \" to week date.\");\n+      }\n+    }\n \n-        WeekDate( AnyValue year, AnyValue date )\n-        {\n-            this.year = year;\n-            this.date = date;\n-        }\n+    @Override\n+    void checkAssignments()\n+    {\n+      if (date == null)\n+      {\n+        assertDefinedInOrder(Pair.of(year, \"year\"), Pair.of(week, \"week\"), Pair.of(dayOfWeek, \"dayOfWeek\"));\n+      }\n+    }\n \n-        @Override\n-        ConstructDate assign( TemporalFields field, AnyValue value )\n-        {\n-            switch ( field )\n-            {\n-            case year:\n-                year = assignment( field, year, value );\n-                return this;\n-            case week:\n-                week = assignment( field, week, value );\n-                return this;\n-            case dayOfWeek:\n-                dayOfWeek = assignment( field, dayOfWeek, value );\n-                return this;\n-            case date:\n-            case datetime:\n-                date = assignment( field, date, value );\n-                return this;\n-            default:\n-                throw new UnsupportedTemporalUnitException( \"Cannot assign \" + field + \" to week date.\" );\n-            }\n-        }\n+    @Override\n+    void assertFullyAssigned()\n+    {\n+      if (date == null)\n+      {\n+        assertAllDefined(Pair.of(year, \"year\"), Pair.of(week, \"week\"), Pair.of(dayOfWeek, \"dayOfWeek\"));\n+      }\n+    }\n+  }\n \n-        @Override\n-        void checkAssignments()\n-        {\n-            if ( date == null )\n-            {\n-                assertDefinedInOrder( Pair.of( year, \"year\" ), Pair.of( week, \"week\" ), Pair.of( dayOfWeek, \"dayOfWeek\" ) );\n-            }\n-        }\n+  private static final class QuarterDate extends ConstructDate\n+  {\n+    private AnyValue quarter;\n+    private AnyValue dayOfQuarter;\n \n-        @Override\n-        void assertFullyAssigned()\n-        {\n-            if ( date == null )\n-            {\n-                assertAllDefined( Pair.of( year, \"year\" ), Pair.of( week, \"week\" ), Pair.of( dayOfWeek, \"dayOfWeek\" ) );\n-            }\n-        }\n+    QuarterDate(AnyValue year, AnyValue date)\n+    {\n+      this.year = year;\n+      this.date = date;\n     }\n \n-    private static final class QuarterDate extends ConstructDate\n+    @Override\n+    ConstructDate assign(TemporalFields field, AnyValue value)\n     {\n-        private AnyValue quarter;\n-        private AnyValue dayOfQuarter;\n+      switch (field)\n+      {\n+        case year:\n+          year = assignment(field, year, value);\n+          return this;\n+        case quarter:\n+          quarter = assignment(field, quarter, value);\n+          return this;\n+        case dayOfQuarter:\n+          dayOfQuarter = assignment(field, dayOfQuarter, value);\n+          return this;\n+        case date:\n+        case datetime:\n+          date = assignment(field, date, value);\n+          return this;\n+        default:\n+          throw new UnsupportedTemporalUnitException(\"Cannot assign \" + field + \" to quarter date.\");\n+      }\n+    }\n \n-        QuarterDate( AnyValue year, AnyValue date )\n-        {\n-            this.year = year;\n-            this.date = date;\n-        }\n+    @Override\n+    void checkAssignments()\n+    {\n+      if (date == null)\n+      {\n+        assertDefinedInOrder(Pair.of(year, \"year\"), Pair.of(quarter, \"quarter\"), Pair.of(dayOfQuarter, \"dayOfQuarter\"));\n+      }\n+    }\n \n-        @Override\n-        ConstructDate assign( TemporalFields field, AnyValue value )\n-        {\n-            switch ( field )\n-            {\n-            case year:\n-                year = assignment( field, year, value );\n-                return this;\n-            case quarter:\n-                quarter = assignment( field, quarter, value );\n-                return this;\n-            case dayOfQuarter:\n-                dayOfQuarter = assignment( field, dayOfQuarter, value );\n-                return this;\n-            case date:\n-            case datetime:\n-                date = assignment( field, date, value );\n-                return this;\n-            default:\n-                throw new UnsupportedTemporalUnitException( \"Cannot assign \" + field + \" to quarter date.\" );\n-            }\n-        }\n+    @Override\n+    void assertFullyAssigned()\n+    {\n+      if (date == null)\n+      {\n+        assertAllDefined(Pair.of(year, \"year\"), Pair.of(quarter, \"quarter\"), Pair.of(dayOfQuarter, \"dayOfQuarter\"));\n+      }\n+    }\n+  }\n \n-        @Override\n-        void checkAssignments()\n-        {\n-            if ( date == null )\n-            {\n-                assertDefinedInOrder( Pair.of( year, \"year\" ), Pair.of( quarter, \"quarter\" ), Pair.of( dayOfQuarter, \"dayOfQuarter\" ) );\n-            }\n-        }\n+  private static final class OrdinalDate extends ConstructDate\n+  {\n+    private AnyValue ordinalDay;\n \n-        @Override\n-        void assertFullyAssigned()\n-        {\n-            if ( date == null )\n-            {\n-                assertAllDefined( Pair.of( year, \"year\" ), Pair.of( quarter, \"quarter\" ), Pair.of( dayOfQuarter, \"dayOfQuarter\" ) );\n-            }\n-        }\n+    OrdinalDate(AnyValue year, AnyValue date)\n+    {\n+      this.year = year;\n+      this.date = date;\n     }\n \n-    private static final class OrdinalDate extends ConstructDate\n+    @Override\n+    ConstructDate assign(TemporalFields field, AnyValue value)\n     {\n-        private AnyValue ordinalDay;\n-\n-        OrdinalDate( AnyValue year, AnyValue date )\n-        {\n-            this.year = year;\n-            this.date = date;\n-        }\n-\n-        @Override\n-        ConstructDate assign( TemporalFields field, AnyValue value )\n-        {\n-            switch ( field )\n-            {\n-            case year:\n-                year = assignment( field, year, value );\n-                return this;\n-            case ordinalDay:\n-                ordinalDay = assignment( field, ordinalDay, value );\n-                return this;\n-            case date:\n-            case datetime:\n-                date = assignment( field, date, value );\n-                return this;\n-            default:\n-                throw new UnsupportedTemporalUnitException( \"Cannot assign \" + field + \" to ordinal date.\" );\n-            }\n-        }\n+      switch (field)\n+      {\n+        case year:\n+          year = assignment(field, year, value);\n+          return this;\n+        case ordinalDay:\n+          ordinalDay = assignment(field, ordinalDay, value);\n+          return this;\n+        case date:\n+        case datetime:\n+          date = assignment(field, date, value);\n+          return this;\n+        default:\n+          throw new UnsupportedTemporalUnitException(\"Cannot assign \" + field + \" to ordinal date.\");\n+      }\n+    }\n \n-        @Override\n-        void assertFullyAssigned()\n-        {\n-            if ( date == null )\n-            {\n-                assertAllDefined( Pair.of( year, \"year\" ), Pair.of( ordinalDay, \"ordinalDay\" ) );\n-            }\n-        }\n+    @Override\n+    void assertFullyAssigned()\n+    {\n+      if (date == null)\n+      {\n+        assertAllDefined(Pair.of(year, \"year\"), Pair.of(ordinalDay, \"ordinalDay\"));\n+      }\n     }\n+  }\n \n-    private static AnyValue assignment( TemporalFields field, AnyValue oldValue, AnyValue newValue )\n+  private static AnyValue assignment(TemporalFields field, AnyValue oldValue, AnyValue newValue)\n+  {\n+    if (oldValue != null)\n     {\n-        if ( oldValue != null )\n-        {\n-            throw new InvalidValuesArgumentException( \"cannot re-assign \" + field );\n-        }\n-        return newValue;\n+      throw new InvalidValuesArgumentException(\"cannot re-assign \" + field);\n     }\n+    return newValue;\n+  }\n \n-    @SafeVarargs\n-    static void assertDefinedInOrder( Pair<org.neo4j.values.AnyValue, String>... values )\n+  @SafeVarargs\n+  static void assertDefinedInOrder(Pair<org.neo4j.values.AnyValue, String>... values)\n+  {\n+    if (values[0].first() == null)\n     {\n-        if ( values[0].first() == null )\n-        {\n-            throw new InvalidValuesArgumentException( values[0].other() + \" must be specified\" );\n-        }\n+      throw new InvalidValuesArgumentException(values[0].other() + \" must be specified\");\n+    }\n \n-        String firstNotAssigned = null;\n+    String firstNotAssigned = null;\n \n-        for ( Pair<org.neo4j.values.AnyValue,String> value : values )\n+    for (Pair<org.neo4j.values.AnyValue, String> value : values)\n+    {\n+      if (value.first() == null)\n+      {\n+        if (firstNotAssigned == null)\n         {\n-            if ( value.first() == null )\n-            {\n-                if ( firstNotAssigned == null )\n-                {\n-                    firstNotAssigned = value.other();\n-                }\n-            }\n-            else if ( firstNotAssigned != null )\n-            {\n-                throw new InvalidValuesArgumentException( value.other() + \" cannot be specified without \" + firstNotAssigned );\n-            }\n+          firstNotAssigned = value.other();\n         }\n+      } else if (firstNotAssigned != null)\n+      {\n+        throw new InvalidValuesArgumentException(value.other() + \" cannot be specified without \" + firstNotAssigned);\n+      }\n     }\n+  }\n \n-    @SafeVarargs\n-    static void assertAllDefined( Pair<org.neo4j.values.AnyValue, String>... values )\n+  @SafeVarargs\n+  static void assertAllDefined(Pair<org.neo4j.values.AnyValue, String>... values)\n+  {\n+    for (Pair<org.neo4j.values.AnyValue, String> value : values)\n     {\n-        for ( Pair<org.neo4j.values.AnyValue,String> value : values )\n-        {\n-            if ( value.first() == null )\n-            {\n-                throw new InvalidValuesArgumentException( value.other() + \" must be specified\" );\n-            }\n-        }\n+      if (value.first() == null)\n+      {\n+        throw new InvalidValuesArgumentException(value.other() + \" must be specified\");\n+      }\n     }\n+  }\n \n-    static org.neo4j.values.AnyValue oneOf( org.neo4j.values.AnyValue a, org.neo4j.values.AnyValue b, org.neo4j.values.AnyValue c )\n+  static org.neo4j.values.AnyValue oneOf(org.neo4j.values.AnyValue a, org.neo4j.values.AnyValue b, org.neo4j.values.AnyValue c)\n+  {\n+    return a != null ? a : b != null ? b : c;\n+  }\n+\n+  static ZoneId timezoneOf(AnyValue timezone)\n+  {\n+    if (timezone instanceof TextValue)\n     {\n-        return a != null ? a : b != null ? b : c;\n+      return parseZoneName(((TextValue) timezone).stringValue());\n     }\n-\n-    static ZoneId timezoneOf( AnyValue timezone )\n+    throw new UnsupportedOperationException(\"Cannot convert to ZoneId: \" + timezone);\n+  }\n+\n+  static int validNano(AnyValue millisecond, AnyValue microsecond, AnyValue nanosecond)\n+  {\n+    long ms = safeCastIntegral(\"millisecond\", millisecond, TemporalFields.millisecond.defaultValue);\n+    long us = safeCastIntegral(\"microsecond\", microsecond, TemporalFields.microsecond.defaultValue);\n+    long ns = safeCastIntegral(\"nanosecond\", nanosecond, TemporalFields.nanosecond.defaultValue);\n+    if (ms < 0 || ms >= 1000)\n     {\n-        if ( timezone instanceof TextValue )\n-        {\n-            return parseZoneName( ((TextValue) timezone).stringValue() );\n-        }\n-        throw new UnsupportedOperationException( \"Cannot convert to ZoneId: \" + timezone );\n+      throw new InvalidValuesArgumentException(\"Invalid value for Millisecond: \" + ms);\n     }\n-\n-    static int validNano( AnyValue millisecond, AnyValue microsecond, AnyValue nanosecond )\n+    if (us < 0 || us >= (millisecond != null ? 1000 : 1000_000))\n     {\n-        long ms = safeCastIntegral( \"millisecond\", millisecond, TemporalFields.millisecond.defaultValue );\n-        long us = safeCastIntegral( \"microsecond\", microsecond, TemporalFields.microsecond.defaultValue );\n-        long ns = safeCastIntegral( \"nanosecond\", nanosecond, TemporalFields.nanosecond.defaultValue );\n-        if ( ms < 0 || ms >= 1000 )\n-        {\n-            throw new InvalidValuesArgumentException( \"Invalid value for Millisecond: \" + ms );\n-        }\n-        if ( us < 0 || us >= (millisecond != null ? 1000 : 1000_000) )\n-        {\n-            throw new InvalidValuesArgumentException( \"Invalid value for Microsecond: \" + us );\n-        }\n-        if ( ns < 0 || ns >= ( microsecond != null ? 1000 : millisecond != null ? 1000_000 : 1000_000_000 ) )\n-        {\n-            throw new InvalidValuesArgumentException( \"Invalid value for Nanosecond: \" + ns );\n-        }\n-        return (int) (ms * 1000_000 + us * 1000 + ns);\n+      throw new InvalidValuesArgumentException(\"Invalid value for Microsecond: \" + us);\n     }\n-\n-    static <TEMP extends Temporal> TEMP updateFieldMapWithConflictingSubseconds( Map<String,AnyValue> fields, TemporalUnit unit, TEMP truncated )\n+    if (ns < 0 || ns >= (microsecond != null ? 1000 : millisecond != null ? 1000_000 : 1000_000_000))\n     {\n-        boolean conflictingMilliSeconds = false;\n-        boolean conflictingMicroSeconds = false;\n+      throw new InvalidValuesArgumentException(\"Invalid value for Nanosecond: \" + ns);\n+    }\n+    return (int) (ms * 1000_000 + us * 1000 + ns);\n+  }\n \n-        for ( Map.Entry<String,AnyValue> entry : fields.entrySet() )\n-        {\n-            if ( unit == ChronoUnit.MILLIS && ( \"microsecond\".equals( entry.getKey() ) || \"nanosecond\".equals( entry.getKey() ) ) )\n-            {\n-                conflictingMilliSeconds = true;\n-            }\n-            else if ( unit == ChronoUnit.MICROS && \"nanosecond\".equals( entry.getKey() ) )\n-            {\n-                conflictingMicroSeconds = true;\n-            }\n-        }\n+  static <TEMP extends Temporal> TEMP updateFieldMapWithConflictingSubseconds(Map<String, AnyValue> fields, TemporalUnit unit, TEMP truncated)\n+  {\n+    boolean conflictingMilliSeconds = false;\n+    boolean conflictingMicroSeconds = false;\n \n-        if ( conflictingMilliSeconds )\n-        {\n-            AnyValue millis = Values.intValue( truncated.get( ChronoField.MILLI_OF_SECOND ) );\n-            AnyValue micros = fields.remove( \"microsecond\" );\n-            AnyValue nanos = fields.remove( \"nanosecond\" );\n-            int newNanos = validNano( millis, micros, nanos );\n-            truncated = (TEMP) truncated.with( ChronoField.NANO_OF_SECOND, newNanos );\n-        }\n-        else if ( conflictingMicroSeconds )\n-        {\n-            AnyValue micros = Values.intValue( truncated.get( ChronoField.MICRO_OF_SECOND ) );\n-            AnyValue nanos = fields.remove( \"nanosecond\" );\n-            int newNanos = validNano( null,  micros, nanos );\n-            truncated = (TEMP) truncated.with( ChronoField.NANO_OF_SECOND, newNanos );\n-        }\n-        return truncated;\n+    for (Map.Entry<String, AnyValue> entry : fields.entrySet())\n+    {\n+      if (unit == ChronoUnit.MILLIS && (\"microsecond\".equals(entry.getKey()) || \"nanosecond\".equals(entry.getKey())))\n+      {\n+        conflictingMilliSeconds = true;\n+      } else if (unit == ChronoUnit.MICROS && \"nanosecond\".equals(entry.getKey()))\n+      {\n+        conflictingMicroSeconds = true;\n+      }\n     }\n \n-    static <TEMP extends Temporal> TEMP assertValidArgument( Supplier<TEMP> func )\n+    if (conflictingMilliSeconds)\n     {\n-        try\n-        {\n-            return func.get();\n-        }\n-        catch ( DateTimeException e )\n-        {\n-            throw new InvalidValuesArgumentException( e.getMessage(), e );\n-        }\n+      AnyValue millis = Values.intValue(truncated.get(ChronoField.MILLI_OF_SECOND));\n+      AnyValue micros = fields.remove(\"microsecond\");\n+      AnyValue nanos = fields.remove(\"nanosecond\");\n+      int newNanos = validNano(millis, micros, nanos);\n+      truncated = (TEMP) truncated.with(ChronoField.NANO_OF_SECOND, newNanos);\n+    } else if (conflictingMicroSeconds)\n+    {\n+      AnyValue micros = Values.intValue(truncated.get(ChronoField.MICRO_OF_SECOND));\n+      AnyValue nanos = fields.remove(\"nanosecond\");\n+      int newNanos = validNano(null, micros, nanos);\n+      truncated = (TEMP) truncated.with(ChronoField.NANO_OF_SECOND, newNanos);\n     }\n+    return truncated;\n+  }\n \n-    static <TEMP extends Temporal> TEMP assertValidUnit( Supplier<TEMP> func )\n+  static <TEMP extends Temporal> TEMP assertValidArgument(Supplier<TEMP> func)\n+  {\n+    try\n     {\n-        try\n-        {\n-            return func.get();\n-        }\n-        catch ( DateTimeException e )\n-        {\n-            throw new UnsupportedTemporalUnitException( e.getMessage(), e );\n-        }\n+      return func.get();\n+    } catch (DateTimeException e)\n+    {\n+      throw new InvalidValuesArgumentException(e.getMessage(), e);\n     }\n+  }\n \n-    static <OFFSET extends ZoneId> OFFSET assertValidZone( Supplier<OFFSET> func )\n+  static <TEMP extends Temporal> TEMP assertValidUnit(Supplier<TEMP> func)\n+  {\n+    try\n     {\n-        try\n-        {\n-            return func.get();\n-        }\n-        catch ( DateTimeException e )\n-        {\n-            throw new InvalidValuesArgumentException( e.getMessage(), e );\n-        }\n+      return func.get();\n+    } catch (DateTimeException e)\n+    {\n+      throw new UnsupportedTemporalUnitException(e.getMessage(), e);\n     }\n+  }\n \n-    static <TEMP extends Temporal> TEMP assertParsable( Supplier<TEMP> func )\n+  static <OFFSET extends ZoneId> OFFSET assertValidZone(Supplier<OFFSET> func)\n+  {\n+    try\n     {\n-        try\n-        {\n-            return func.get();\n-        }\n-        catch ( DateTimeException e )\n-        {\n-            throw new TemporalParseException( e.getMessage(), e );\n-        }\n+      return func.get();\n+    } catch (DateTimeException e)\n+    {\n+      throw new InvalidValuesArgumentException(e.getMessage(), e);\n     }\n+  }\n \n-    static String assertPrintable( Supplier<String> func )\n+  static <TEMP extends Temporal> TEMP assertParsable(Supplier<TEMP> func)\n+  {\n+    try\n     {\n-        try\n-        {\n-            return func.get();\n-        }\n-        catch ( DateTimeException e )\n-        {\n-            throw new TemporalParseException( e.getMessage(), e );\n-        }\n+      return func.get();\n+    } catch (DateTimeException e)\n+    {\n+      throw new TemporalParseException(e.getMessage(), e);\n     }\n+  }\n \n-    static <TEMP extends Temporal> TEMP assertValidArithmetic( Supplier<TEMP> func )\n+  static String assertPrintable(Supplier<String> func)\n+  {\n+    try\n     {\n-        try\n-        {\n-            return func.get();\n-        }\n-        catch ( DateTimeException | ArithmeticException e )\n-        {\n-            throw new TemporalArithmeticException( e.getMessage(), e );\n-        }\n+      return func.get();\n+    } catch (DateTimeException e)\n+    {\n+      throw new TemporalParseException(e.getMessage(), e);\n     }\n+  }\n \n-    static Pair<LocalDate,LocalTime> getTruncatedDateAndTime( TemporalUnit unit, TemporalValue input, String type )\n+  static <TEMP extends Temporal> TEMP assertValidArithmetic(Supplier<TEMP> func)\n+  {\n+    try\n     {\n-        if ( unit.isTimeBased() && !(input instanceof DateTimeValue || input instanceof LocalDateTimeValue) )\n-        {\n-            throw new UnsupportedTemporalUnitException( String.format( \"Cannot truncate %s to %s with a time based unit.\", input, type ) );\n-        }\n-        LocalDate localDate = input.getDatePart();\n-        LocalTime localTime = input.hasTime() ? input.getLocalTimePart() : LocalTimeValue.DEFAULT_LOCAL_TIME;\n+      return func.get();\n+    } catch (DateTimeException | ArithmeticException e)\n+    {\n+      throw new TemporalArithmeticException(e.getMessage(), e);\n+    }\n+  }\n \n-        LocalTime truncatedTime;\n-        LocalDate truncatedDate;\n-        if ( unit.isDateBased() )\n-        {\n-            truncatedDate = DateValue.truncateTo( localDate, unit );\n-            truncatedTime = LocalTimeValue.DEFAULT_LOCAL_TIME;\n-        }\n-        else\n-        {\n-            truncatedDate = localDate;\n-            truncatedTime = localTime.truncatedTo( unit );\n-        }\n-        return Pair.of( truncatedDate, truncatedTime );\n+  static Pair<LocalDate, LocalTime> getTruncatedDateAndTime(TemporalUnit unit, TemporalValue input, String type)\n+  {\n+    if (unit.isTimeBased() && !(input instanceof DateTimeValue || input instanceof LocalDateTimeValue))\n+    {\n+      throw new UnsupportedTemporalUnitException(String.format(\"Cannot truncate %s to %s with a time based unit.\", input, type));\n     }\n+    LocalDate localDate = input.getDatePart();\n+    LocalTime localTime = input.hasTime() ? input.getLocalTimePart() : LocalTimeValue.DEFAULT_LOCAL_TIME;\n \n-    static class TimeCSVHeaderInformation implements CSVHeaderInformation\n+    LocalTime truncatedTime;\n+    LocalDate truncatedDate;\n+    if (unit.isDateBased())\n+    {\n+      truncatedDate = DateValue.truncateTo(localDate, unit);\n+      truncatedTime = LocalTimeValue.DEFAULT_LOCAL_TIME;\n+    } else\n     {\n-        String timezone;\n+      truncatedDate = localDate;\n+      truncatedTime = localTime.truncatedTo(unit);\n+    }\n+    return Pair.of(truncatedDate, truncatedTime);\n+  }\n \n-        @Override\n-        public void assign( String key, Object valueObj )\n-        {\n-            if ( !(valueObj instanceof String) )\n-            {\n-                throw new InvalidValuesArgumentException( String.format( \"Cannot assign %s to field %s\", valueObj, key ) );\n-            }\n-            String value = (String) valueObj;\n-            if ( \"timezone\".equals( key.toLowerCase() ) )\n-            {\n-                if ( timezone == null )\n-                {\n-                    timezone = value;\n-                }\n-                else\n-                {\n-                    throw new InvalidValuesArgumentException( \"Cannot set timezone twice\" );\n-                }\n-            }\n-            else\n-            {\n-                throw new InvalidValuesArgumentException( \"Unsupported header field: \" + value );\n-            }\n-        }\n+  static class TimeCSVHeaderInformation implements CSVHeaderInformation\n+  {\n+    String timezone;\n \n-        Supplier<ZoneId> zoneSupplier( Supplier<ZoneId> defaultSupplier )\n-        {\n-            if ( timezone != null )\n-            {\n-                ZoneId tz = DateTimeValue.parseZoneName( timezone );\n-                // Override defaultZone\n-                return () -> tz;\n-            }\n-            return defaultSupplier;\n-        }\n+    @Override\n+    public void assign(String key, Object valueObj)\n+    {\n+      if (!(valueObj instanceof String))\n+      {\n+        throw new InvalidValuesArgumentException(String.format(\"Cannot assign %s to field %s\", valueObj, key));\n+      }\n+      String value = (String) valueObj;\n+      if (\"timezone\".equals(key.toLowerCase()))\n+      {\n+        if (timezone == null)\n+        {\n+          timezone = value;\n+        } else\n+        {\n+          throw new InvalidValuesArgumentException(\"Cannot set timezone twice\");\n+        }\n+      } else\n+      {\n+        throw new InvalidValuesArgumentException(\"Unsupported header field: \" + value);\n+      }\n+    }\n+\n+    Supplier<ZoneId> zoneSupplier(Supplier<ZoneId> defaultSupplier)\n+    {\n+      if (timezone != null)\n+      {\n+        ZoneId tz = DateTimeValue.parseZoneName(timezone);\n+        // Override defaultZone\n+        return () -> tz;\n+      }\n+      return defaultSupplier;\n     }\n+  }\n }\n",
            "diff_size": 1982
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
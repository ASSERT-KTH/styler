{
    "project_name": "O2-Czech-Republic-proxima-platform",
    "error_id": "81",
    "information": {
        "errors": [
            {
                "line": "62",
                "severity": "error",
                "message": "Line is longer than 90 characters (found 100).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "    if (obj instanceof TopicOffset) {\n      TopicOffset other = (TopicOffset) obj;\n      return other.partition == partition && other.offset == offset && other.watermark == watermark;\n    }\n    return false;\n  }",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "62",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 100).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "65",
                    "column": "69",
                    "severity": "error",
                    "message": "'&&' should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/81/TopicOffset.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/intellij/81/TopicOffset.java\nindex 0c2163a1396..71998236d62 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/81/TopicOffset.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/intellij/81/TopicOffset.java\n@@ -1,18 +1,19 @@\n /**\n  * Copyright 2017-2021 O2 Czech Republic, a.s.\n- *\n+ * <p>\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *\n- *    http://www.apache.org/licenses/LICENSE-2.0\n- *\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package cz.o2.proxima.direct.kafka;\n \n import com.google.common.base.MoreObjects;\n@@ -32,8 +33,10 @@ class TopicOffset implements Offset {\n   // map of partitionId -> committed offset\n   private final int partition;\n   // offset to kafka partition, < 0 means undefined (or default)\n-  @Getter private final long offset;\n-  @Getter private final long watermark;\n+  @Getter\n+  private final long offset;\n+  @Getter\n+  private final long watermark;\n \n   TopicOffset(int partition, long offset, long watermark) {\n     this.partition = partition;\n@@ -59,7 +62,8 @@ class TopicOffset implements Offset {\n   public boolean equals(Object obj) {\n     if (obj instanceof TopicOffset) {\n       TopicOffset other = (TopicOffset) obj;\n-      return other.partition == partition && other.offset == offset && other.watermark == watermark;\n+      return other.partition == partition && other.offset == offset &&\n+          other.watermark == watermark;\n     }\n     return false;\n   }\n",
            "diff_size": 11
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "62",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 100).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/81/TopicOffset.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/naturalize/81/TopicOffset.java\nindex 0c2163a1396..e499124b846 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/81/TopicOffset.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/naturalize/81/TopicOffset.java\n@@ -70,10 +70,9 @@ class TopicOffset implements Offset {\n   }\n \n   static List<TopicOffset> fromMap(Map<Integer, Long> offsetMap, long watermark) {\n-    return offsetMap\n-        .entrySet()\n+    return offsetMap.entrySet()\n         .stream()\n         .map(e -> new TopicOffset(e.getKey(), e.getValue(), watermark))\n         .collect(Collectors.toList());\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "79",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 94).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/81/TopicOffset.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/codebuff/81/TopicOffset.java\nindex 0c2163a1396..98f43424bbe 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/81/TopicOffset.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/codebuff/81/TopicOffset.java\n@@ -25,6 +25,8 @@ import java.util.stream.Collectors;\n import lombok.Getter;\n \n /** Offset used in bulk consumption. */\n+\n+\n class TopicOffset implements Offset {\n \n   private static final long serialVersionUID = 1L;\n@@ -32,7 +34,9 @@ class TopicOffset implements Offset {\n   // map of partitionId -> committed offset\n   private final int partition;\n   // offset to kafka partition, < 0 means undefined (or default)\n+\n   @Getter private final long offset;\n+\n   @Getter private final long watermark;\n \n   TopicOffset(int partition, long offset, long watermark) {\n@@ -43,11 +47,10 @@ class TopicOffset implements Offset {\n \n   @Override\n   public String toString() {\n-    return MoreObjects.toStringHelper(this)\n-        .add(\"partition\", partition)\n-        .add(\"offset\", offset)\n-        .add(\"watermark\", watermark)\n-        .toString();\n+    return MoreObjects.toStringHelper(this).add(\"partition\", partition)\n+                                           .add(\"offset\", offset)\n+                                           .add(\"watermark\", watermark)\n+                                           .toString();\n   }\n \n   @Override\n@@ -59,7 +62,9 @@ class TopicOffset implements Offset {\n   public boolean equals(Object obj) {\n     if (obj instanceof TopicOffset) {\n       TopicOffset other = (TopicOffset) obj;\n-      return other.partition == partition && other.offset == offset && other.watermark == watermark;\n+      return other.partition == partition\n+        && other.offset == offset\n+          && other.watermark == watermark;\n     }\n     return false;\n   }\n@@ -70,10 +75,8 @@ class TopicOffset implements Offset {\n   }\n \n   static List<TopicOffset> fromMap(Map<Integer, Long> offsetMap, long watermark) {\n-    return offsetMap\n-        .entrySet()\n-        .stream()\n-        .map(e -> new TopicOffset(e.getKey(), e.getValue(), watermark))\n-        .collect(Collectors.toList());\n+    return offsetMap.entrySet().stream()\n+                               .map(e -> new TopicOffset(e.getKey(), e.getValue(), watermark))\n+                               .collect(Collectors.toList());\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 18
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "62",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 100).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "62",
                    "column": "68",
                    "severity": "error",
                    "message": "WhitespaceAround: '&&' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/81/TopicOffset.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/styler_three_grams/81/TopicOffset.java\nindex 0c2163a1396..7ef1372017c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/81/TopicOffset.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/styler_three_grams/81/TopicOffset.java\n@@ -59,7 +59,8 @@ class TopicOffset implements Offset {\n   public boolean equals(Object obj) {\n     if (obj instanceof TopicOffset) {\n       TopicOffset other = (TopicOffset) obj;\n-      return other.partition == partition && other.offset == offset && other.watermark == watermark;\n+      return other.partition == partition && other.offset == offset&& other\n+        .watermark == watermark;\n     }\n     return false;\n   }\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
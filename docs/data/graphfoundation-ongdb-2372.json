{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2372",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "55",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "61",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "65",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "69",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "73",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "76",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "80",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "84",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "90",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "17",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2372/CoreReplicatedContentMarshal.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2372/CoreReplicatedContentMarshal.java\nindex a044121beb9..b29cc9528e1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2372/CoreReplicatedContentMarshal.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2372/CoreReplicatedContentMarshal.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering.messaging;\n \n import java.io.IOException;\n@@ -41,97 +42,89 @@ import org.neo4j.storageengine.api.WritableChannel;\n \n public class CoreReplicatedContentMarshal extends SafeChannelMarshal<ReplicatedContent>\n {\n-    private static final byte TX_CONTENT_TYPE = 0;\n-    private static final byte RAFT_MEMBER_SET_TYPE = 1;\n-    private static final byte ID_RANGE_REQUEST_TYPE = 2;\n-    private static final byte TOKEN_REQUEST_TYPE = 4;\n-    private static final byte NEW_LEADER_BARRIER_TYPE = 5;\n-    private static final byte LOCK_TOKEN_REQUEST = 6;\n-    private static final byte DISTRIBUTED_OPERATION = 7;\n-    private static final byte DUMMY_REQUEST = 8;\n+  private static final byte TX_CONTENT_TYPE = 0;\n+  private static final byte RAFT_MEMBER_SET_TYPE = 1;\n+  private static final byte ID_RANGE_REQUEST_TYPE = 2;\n+  private static final byte TOKEN_REQUEST_TYPE = 4;\n+  private static final byte NEW_LEADER_BARRIER_TYPE = 5;\n+  private static final byte LOCK_TOKEN_REQUEST = 6;\n+  private static final byte DISTRIBUTED_OPERATION = 7;\n+  private static final byte DUMMY_REQUEST = 8;\n \n-    @Override\n-    public void marshal( ReplicatedContent content, WritableChannel channel ) throws IOException\n+  @Override\n+  public void marshal(ReplicatedContent content, WritableChannel channel) throws IOException\n+  {\n+    if (content instanceof ReplicatedTransaction)\n+    {\n+      channel.put(TX_CONTENT_TYPE);\n+      ReplicatedTransactionSerializer.marshal((ReplicatedTransaction) content, channel);\n+    } else if (content instanceof MemberIdSet)\n+    {\n+      channel.put(RAFT_MEMBER_SET_TYPE);\n+      MemberIdSetSerializer.marshal((MemberIdSet) content, channel);\n+    } else if (content instanceof ReplicatedIdAllocationRequest)\n+    {\n+      channel.put(ID_RANGE_REQUEST_TYPE);\n+      ReplicatedIdAllocationRequestSerializer.marshal((ReplicatedIdAllocationRequest) content, channel);\n+    } else if (content instanceof ReplicatedTokenRequest)\n+    {\n+      channel.put(TOKEN_REQUEST_TYPE);\n+      ReplicatedTokenRequestSerializer.marshal((ReplicatedTokenRequest) content, channel);\n+    } else if (content instanceof NewLeaderBarrier)\n+    {\n+      channel.put(NEW_LEADER_BARRIER_TYPE);\n+    } else if (content instanceof ReplicatedLockTokenRequest)\n+    {\n+      channel.put(LOCK_TOKEN_REQUEST);\n+      ReplicatedLockTokenSerializer.marshal((ReplicatedLockTokenRequest) content, channel);\n+    } else if (content instanceof DistributedOperation)\n+    {\n+      channel.put(DISTRIBUTED_OPERATION);\n+      ((DistributedOperation) content).serialize(channel);\n+    } else if (content instanceof DummyRequest)\n+    {\n+      channel.put(DUMMY_REQUEST);\n+      DummyRequest.Marshal.INSTANCE.marshal((DummyRequest) content, channel);\n+    } else\n     {\n-        if ( content instanceof ReplicatedTransaction )\n-        {\n-            channel.put( TX_CONTENT_TYPE );\n-            ReplicatedTransactionSerializer.marshal( (ReplicatedTransaction) content, channel );\n-        }\n-        else if ( content instanceof MemberIdSet )\n-        {\n-            channel.put( RAFT_MEMBER_SET_TYPE );\n-            MemberIdSetSerializer.marshal( (MemberIdSet) content, channel );\n-        }\n-        else if ( content instanceof ReplicatedIdAllocationRequest )\n-        {\n-            channel.put( ID_RANGE_REQUEST_TYPE );\n-            ReplicatedIdAllocationRequestSerializer.marshal( (ReplicatedIdAllocationRequest) content, channel );\n-        }\n-        else if ( content instanceof ReplicatedTokenRequest )\n-        {\n-            channel.put( TOKEN_REQUEST_TYPE );\n-            ReplicatedTokenRequestSerializer.marshal( (ReplicatedTokenRequest) content, channel );\n-        }\n-        else if ( content instanceof NewLeaderBarrier )\n-        {\n-            channel.put( NEW_LEADER_BARRIER_TYPE );\n-        }\n-        else if ( content instanceof ReplicatedLockTokenRequest )\n-        {\n-            channel.put( LOCK_TOKEN_REQUEST );\n-            ReplicatedLockTokenSerializer.marshal( (ReplicatedLockTokenRequest) content, channel );\n-        }\n-        else if ( content instanceof DistributedOperation )\n-        {\n-            channel.put( DISTRIBUTED_OPERATION );\n-            ((DistributedOperation) content).serialize( channel );\n-        }\n-        else if ( content instanceof DummyRequest )\n-        {\n-            channel.put( DUMMY_REQUEST );\n-            DummyRequest.Marshal.INSTANCE.marshal( (DummyRequest) content, channel );\n-        }\n-        else\n-        {\n-            throw new IllegalArgumentException( \"Unknown content type \" + content.getClass() );\n-        }\n+      throw new IllegalArgumentException(\"Unknown content type \" + content.getClass());\n     }\n+  }\n \n-    @Override\n-    public ReplicatedContent unmarshal0( ReadableChannel channel ) throws IOException, EndOfStreamException\n+  @Override\n+  public ReplicatedContent unmarshal0(ReadableChannel channel) throws IOException, EndOfStreamException\n+  {\n+    byte type = channel.get();\n+    final ReplicatedContent content;\n+    switch (type)\n     {\n-        byte type = channel.get();\n-        final ReplicatedContent content;\n-        switch ( type )\n-        {\n-            case TX_CONTENT_TYPE:\n-                content = ReplicatedTransactionSerializer.unmarshal( channel );\n-                break;\n-            case RAFT_MEMBER_SET_TYPE:\n-                content = MemberIdSetSerializer.unmarshal( channel );\n-                break;\n-            case ID_RANGE_REQUEST_TYPE:\n-                content = ReplicatedIdAllocationRequestSerializer.unmarshal( channel );\n-                break;\n-            case TOKEN_REQUEST_TYPE:\n-                content = ReplicatedTokenRequestSerializer.unmarshal( channel );\n-                break;\n-            case NEW_LEADER_BARRIER_TYPE:\n-                content = new NewLeaderBarrier();\n-                break;\n-            case LOCK_TOKEN_REQUEST:\n-                content = ReplicatedLockTokenSerializer.unmarshal( channel );\n-                break;\n-            case DISTRIBUTED_OPERATION:\n-                content = DistributedOperation.deserialize( channel );\n-                break;\n-            case DUMMY_REQUEST:\n-                content = DummyRequest.Marshal.INSTANCE.unmarshal( channel );\n-                break;\n-            default:\n-                throw new IllegalArgumentException( String.format( \"Unknown content type 0x%x\", type ) );\n-        }\n-        return content;\n+      case TX_CONTENT_TYPE:\n+        content = ReplicatedTransactionSerializer.unmarshal(channel);\n+        break;\n+      case RAFT_MEMBER_SET_TYPE:\n+        content = MemberIdSetSerializer.unmarshal(channel);\n+        break;\n+      case ID_RANGE_REQUEST_TYPE:\n+        content = ReplicatedIdAllocationRequestSerializer.unmarshal(channel);\n+        break;\n+      case TOKEN_REQUEST_TYPE:\n+        content = ReplicatedTokenRequestSerializer.unmarshal(channel);\n+        break;\n+      case NEW_LEADER_BARRIER_TYPE:\n+        content = new NewLeaderBarrier();\n+        break;\n+      case LOCK_TOKEN_REQUEST:\n+        content = ReplicatedLockTokenSerializer.unmarshal(channel);\n+        break;\n+      case DISTRIBUTED_OPERATION:\n+        content = DistributedOperation.deserialize(channel);\n+        break;\n+      case DUMMY_REQUEST:\n+        content = DummyRequest.Marshal.INSTANCE.unmarshal(channel);\n+        break;\n+      default:\n+        throw new IllegalArgumentException(String.format(\"Unknown content type 0x%x\", type));\n     }\n+    return content;\n+  }\n }\n",
            "diff_size": 128
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2372/CoreReplicatedContentMarshal.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2372/CoreReplicatedContentMarshal.java\nindex a044121beb9..02a09630e8d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2372/CoreReplicatedContentMarshal.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2372/CoreReplicatedContentMarshal.java\n@@ -105,7 +105,7 @@ public class CoreReplicatedContentMarshal extends SafeChannelMarshal<ReplicatedC\n         final ReplicatedContent content;\n         switch ( type )\n         {\n-            case TX_CONTENT_TYPE:\n+case TX_CONTENT_TYPE:\n                 content = ReplicatedTransactionSerializer.unmarshal( channel );\n                 break;\n             case RAFT_MEMBER_SET_TYPE:\n@@ -131,7 +131,7 @@ public class CoreReplicatedContentMarshal extends SafeChannelMarshal<ReplicatedC\n                 break;\n             default:\n                 throw new IllegalArgumentException( String.format( \"Unknown content type 0x%x\", type ) );\n-        }\n+    }\n         return content;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
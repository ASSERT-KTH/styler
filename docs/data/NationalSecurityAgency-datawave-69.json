{
    "project_name": "NationalSecurityAgency-datawave",
    "error_id": "69",
    "information": {
        "errors": [
            {
                "line": "9",
                "severity": "error",
                "message": "Accumulo non-public classes imported",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
            }
        ]
    },
    "source_code": "import datawave.webservice.result.VoidResponse;\nimport org.apache.accumulo.core.client.Connector;\nimport org.apache.accumulo.core.util.Pair;\nimport org.apache.deltaspike.core.api.exclude.Exclude;\nimport org.apache.deltaspike.core.api.jmx.JmxManaged;\nimport org.apache.deltaspike.core.api.jmx.MBean;",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "9",
                    "severity": "error",
                    "message": "Accumulo non-public classes imported",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "9",
                    "severity": "error",
                    "message": "Accumulo non-public classes imported",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-datawave/errored/1/69/QueryCacheBean.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-datawave/intellij/69/QueryCacheBean.java\nindex 93c72fb6b15..6f9cd9dd129 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-datawave/errored/1/69/QueryCacheBean.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-datawave/intellij/69/QueryCacheBean.java\n@@ -38,67 +38,69 @@ import java.util.Map.Entry;\n @MBean\n @Exclude(ifProjectStage = DatawaveEmbeddedProjectStageHolder.DatawaveEmbedded.class)\n public class QueryCacheBean {\n-    \n-    @Inject\n-    private QueryCache cache;\n-    \n-    @Inject\n-    private QueryExecutorBean query;\n-    \n-    @Inject\n-    private CreatedQueryLogicCacheBean qlCache;\n-    \n-    @RolesAllowed({\"Administrator\", \"JBossAdministrator\"})\n-    @JmxManaged\n-    public String listRunningQueries() {\n-        RunningQueries rq = getRunningQueries();\n-        StringBuilder buf = new StringBuilder();\n-        for (String query : rq.getQueries()) {\n-            buf.append(query).append(\"\\n\");\n-        }\n-        return buf.toString();\n+\n+  @Inject\n+  private QueryCache cache;\n+\n+  @Inject\n+  private QueryExecutorBean query;\n+\n+  @Inject\n+  private CreatedQueryLogicCacheBean qlCache;\n+\n+  @RolesAllowed({\"Administrator\", \"JBossAdministrator\"})\n+  @JmxManaged\n+  public String listRunningQueries() {\n+    RunningQueries rq = getRunningQueries();\n+    StringBuilder buf = new StringBuilder();\n+    for (String query : rq.getQueries()) {\n+      buf.append(query).append(\"\\n\");\n+    }\n+    return buf.toString();\n+  }\n+\n+  /**\n+   * <strong>Administrator credentials required.</strong>\n+   *\n+   * @return running queries\n+   */\n+  @GET\n+  @Path(\"/listRunningQueries\")\n+  @Produces({\"application/xml\", \"text/xml\", \"application/json\", \"text/yaml\", \"text/x-yaml\", \"application/x-yaml\",\n+      \"text/html\"})\n+  @GZIP\n+  @RolesAllowed({\"Administrator\", \"JBossAdministrator\"})\n+  public RunningQueries getRunningQueries() {\n+\n+    RunningQueries result = new RunningQueries();\n+\n+    // Iterate over the cache contents\n+    for (RunningQuery value : cache) {\n+      result.getQueries().add(value.toString());\n     }\n-    \n-    /**\n-     * <strong>Administrator credentials required.</strong>\n-     *\n-     * @return running queries\n-     */\n-    @GET\n-    @Path(\"/listRunningQueries\")\n-    @Produces({\"application/xml\", \"text/xml\", \"application/json\", \"text/yaml\", \"text/x-yaml\", \"application/x-yaml\", \"text/html\"})\n-    @GZIP\n-    @RolesAllowed({\"Administrator\", \"JBossAdministrator\"})\n-    public RunningQueries getRunningQueries() {\n-        \n-        RunningQueries result = new RunningQueries();\n-        \n-        // Iterate over the cache contents\n-        for (RunningQuery value : cache) {\n-            result.getQueries().add(value.toString());\n-        }\n-        // Iterate over queries that are in the init phase\n-        for (Entry<String,Pair<QueryLogic<?>,Connector>> entry : qlCache.snapshot().entrySet()) {\n-            result.getQueries().add(\"Identifier: \" + entry.getKey() + \" Query Logic: \" + entry.getValue().getFirst().getClass().getName() + \"\\n\");\n-        }\n-        return result;\n+    // Iterate over queries that are in the init phase\n+    for (Entry<String, Pair<QueryLogic<?>, Connector>> entry : qlCache.snapshot().entrySet()) {\n+      result.getQueries().add(\n+          \"Identifier: \" + entry.getKey() + \" Query Logic: \" + entry.getValue().getFirst().getClass().getName() + \"\\n\");\n     }\n-    \n-    @RolesAllowed({\"Administrator\", \"JBossAdministrator\"})\n-    @JmxManaged\n-    public String cancelUserQuery(String id) throws Exception {\n-        AbstractRunningQuery arq = cache.get(id);\n-        if (arq != null) {\n-            try {\n-                @SuppressWarnings(\"unused\")\n-                VoidResponse response = query.cancel(id);\n-                return \"Success.\";\n-            } catch (Exception e) {\n-                return \"Failed, check log.\";\n-            }\n-        } else {\n-            return \"No such query: \" + id;\n-        }\n+    return result;\n+  }\n+\n+  @RolesAllowed({\"Administrator\", \"JBossAdministrator\"})\n+  @JmxManaged\n+  public String cancelUserQuery(String id) throws Exception {\n+    AbstractRunningQuery arq = cache.get(id);\n+    if (arq != null) {\n+      try {\n+        @SuppressWarnings(\"unused\")\n+        VoidResponse response = query.cancel(id);\n+        return \"Success.\";\n+      } catch (Exception e) {\n+        return \"Failed, check log.\";\n+      }\n+    } else {\n+      return \"No such query: \" + id;\n     }\n-    \n+  }\n+\n }\n",
            "diff_size": 82
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "9",
                    "severity": "error",
                    "message": "Accumulo non-public classes imported",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-datawave/errored/1/69/QueryCacheBean.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-datawave/naturalize/69/QueryCacheBean.java\nindex 93c72fb6b15..c9e302c5445 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-datawave/errored/1/69/QueryCacheBean.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-datawave/naturalize/69/QueryCacheBean.java\n@@ -101,4 +101,4 @@ public class QueryCacheBean {\n         }\n     }\n     \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "9",
                    "severity": "error",
                    "message": "Accumulo non-public classes imported",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-datawave/errored/1/69/QueryCacheBean.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-datawave/codebuff/69/QueryCacheBean.java\nindex 93c72fb6b15..10b49e084b7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-datawave/errored/1/69/QueryCacheBean.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-datawave/codebuff/69/QueryCacheBean.java\n@@ -11,7 +11,6 @@ import org.apache.deltaspike.core.api.exclude.Exclude;\n import org.apache.deltaspike.core.api.jmx.JmxManaged;\n import org.apache.deltaspike.core.api.jmx.MBean;\n import org.jboss.resteasy.annotations.GZIP;\n-\n import javax.annotation.security.DeclareRoles;\n import javax.annotation.security.RolesAllowed;\n import javax.annotation.security.RunAs;\n@@ -38,16 +37,15 @@ import java.util.Map.Entry;\n @MBean\n @Exclude(ifProjectStage = DatawaveEmbeddedProjectStageHolder.DatawaveEmbedded.class)\n public class QueryCacheBean {\n-    \n     @Inject\n     private QueryCache cache;\n-    \n+\n     @Inject\n     private QueryExecutorBean query;\n-    \n+\n     @Inject\n     private CreatedQueryLogicCacheBean qlCache;\n-    \n+\n     @RolesAllowed({\"Administrator\", \"JBossAdministrator\"})\n     @JmxManaged\n     public String listRunningQueries() {\n@@ -64,13 +62,13 @@ public class QueryCacheBean {\n      *\n      * @return running queries\n      */\n+\n     @GET\n     @Path(\"/listRunningQueries\")\n     @Produces({\"application/xml\", \"text/xml\", \"application/json\", \"text/yaml\", \"text/x-yaml\", \"application/x-yaml\", \"text/html\"})\n     @GZIP\n     @RolesAllowed({\"Administrator\", \"JBossAdministrator\"})\n     public RunningQueries getRunningQueries() {\n-        \n         RunningQueries result = new RunningQueries();\n         \n         // Iterate over the cache contents\n@@ -83,7 +81,7 @@ public class QueryCacheBean {\n         }\n         return result;\n     }\n-    \n+\n     @RolesAllowed({\"Administrator\", \"JBossAdministrator\"})\n     @JmxManaged\n     public String cancelUserQuery(String id) throws Exception {\n@@ -100,5 +98,4 @@ public class QueryCacheBean {\n             return \"No such query: \" + id;\n         }\n     }\n-    \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 10
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "9",
                    "severity": "error",
                    "message": "Accumulo non-public classes imported",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "9",
                    "severity": "error",
                    "message": "Accumulo non-public classes imported",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
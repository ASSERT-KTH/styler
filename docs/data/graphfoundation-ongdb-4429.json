{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4429",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "36",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "36",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "111",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4429/StaticContentFilter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4429/StaticContentFilter.java\nindex 683f2028f62..f503b1a95d2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4429/StaticContentFilter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4429/StaticContentFilter.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.server.web;\n \n import java.io.IOException;\n@@ -31,31 +32,31 @@ import javax.servlet.http.HttpServletResponse;\n \n public class StaticContentFilter implements Filter\n {\n-    @Override\n-    public void init( FilterConfig filterConfig )\n-    {\n-    }\n+  @Override\n+  public void init(FilterConfig filterConfig)\n+  {\n+  }\n \n-    @Override\n-    public void doFilter( ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain )\n-            throws IOException, ServletException\n+  @Override\n+  public void doFilter(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain)\n+      throws IOException, ServletException\n+  {\n+    HttpServletRequest request = (HttpServletRequest) servletRequest;\n+    HttpServletResponse response = (HttpServletResponse) servletResponse;\n+    if (request.getServletPath() != null && request.getServletPath().endsWith(\".html\"))\n     {\n-        HttpServletRequest request = (HttpServletRequest) servletRequest;\n-        HttpServletResponse response = (HttpServletResponse) servletResponse;\n-        if ( request.getServletPath() != null && request.getServletPath().endsWith( \".html\" ) )\n-        {\n-            response.addHeader( \"Cache-Control\", \"private, no-cache, no-store, proxy-revalidate, no-transform\" );\n-            response.addHeader( \"Pragma\", \"no-cache\" );\n-            response.addHeader( \"Content-Security-Policy\", \"frame-ancestors 'none'\" );\n-            response.addHeader( \"X-Frame-Options\", \"DENY\" );\n-            response.addHeader( \"X-Content-Type-Options\", \"nosniff\" );\n-            response.addHeader( \"X-XSS-Protection\", \"1; mode=block\" );\n-        }\n-        filterChain.doFilter( servletRequest, servletResponse);\n+      response.addHeader(\"Cache-Control\", \"private, no-cache, no-store, proxy-revalidate, no-transform\");\n+      response.addHeader(\"Pragma\", \"no-cache\");\n+      response.addHeader(\"Content-Security-Policy\", \"frame-ancestors 'none'\");\n+      response.addHeader(\"X-Frame-Options\", \"DENY\");\n+      response.addHeader(\"X-Content-Type-Options\", \"nosniff\");\n+      response.addHeader(\"X-XSS-Protection\", \"1; mode=block\");\n     }\n+    filterChain.doFilter(servletRequest, servletResponse);\n+  }\n \n-    @Override\n-    public void destroy()\n-    {\n-    }\n+  @Override\n+  public void destroy()\n+  {\n+  }\n }\n",
            "diff_size": 30
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4429/StaticContentFilter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4429/StaticContentFilter.java\nindex 683f2028f62..1a4ca920e22 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4429/StaticContentFilter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4429/StaticContentFilter.java\n@@ -37,9 +37,8 @@ public class StaticContentFilter implements Filter\n     }\n \n     @Override\n-    public void doFilter( ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain )\n-            throws IOException, ServletException\n-    {\n+    public void doFilter( ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain ) throws IOException, ServletException\n+{\n         HttpServletRequest request = (HttpServletRequest) servletRequest;\n         HttpServletResponse response = (HttpServletResponse) servletResponse;\n         if ( request.getServletPath() != null && request.getServletPath().endsWith( \".html\" ) )\n@@ -51,11 +50,11 @@ public class StaticContentFilter implements Filter\n             response.addHeader( \"X-Content-Type-Options\", \"nosniff\" );\n             response.addHeader( \"X-XSS-Protection\", \"1; mode=block\" );\n         }\n-        filterChain.doFilter( servletRequest, servletResponse);\n+        filterChain.doFilter( servletRequest, servletResponse );\n     }\n \n     @Override\n     public void destroy()\n     {\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
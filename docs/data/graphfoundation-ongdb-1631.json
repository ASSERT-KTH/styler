{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1631",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "56",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "118",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "91",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "129",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "126",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "136",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "136",
                    "column": "87",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "111",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "19",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1631/SpaceFillingCurveSettingsFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1631/SpaceFillingCurveSettingsFactory.java\nindex 545c118eedf..4ceae0771f4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1631/SpaceFillingCurveSettingsFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1631/SpaceFillingCurveSettingsFactory.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.index.schema.config;\n \n import java.util.Arrays;\n@@ -36,133 +37,131 @@ import org.neo4j.values.storable.CoordinateReferenceSystem;\n  */\n public class SpaceFillingCurveSettingsFactory\n {\n-    private int maxBits;\n-    private HashMap<CoordinateReferenceSystem,SpaceFillingCurveSettings> settings = new HashMap<>();\n-    private static final double DEFAULT_MIN_EXTENT = -1000000;\n-    private static final double DEFAULT_MAX_EXTENT = 1000000;\n-    private static final double DEFAULT_MIN_LATITUDE = -90;\n-    private static final double DEFAULT_MAX_LATITUDE = 90;\n-    private static final double DEFAULT_MIN_LONGITUDE = -180;\n-    private static final double DEFAULT_MAX_LONGITUDE = 180;\n-    private static final String SPATIAL_SETTING_PREFIX = \"unsupported.dbms.db.spatial.crs.\";\n-\n-    private class EnvelopeSettings\n-    {\n-        CoordinateReferenceSystem crs;\n-        double[] min;\n-        double[] max;\n+  private int maxBits;\n+  private HashMap<CoordinateReferenceSystem, SpaceFillingCurveSettings> settings = new HashMap<>();\n+  private static final double DEFAULT_MIN_EXTENT = -1000000;\n+  private static final double DEFAULT_MAX_EXTENT = 1000000;\n+  private static final double DEFAULT_MIN_LATITUDE = -90;\n+  private static final double DEFAULT_MAX_LATITUDE = 90;\n+  private static final double DEFAULT_MIN_LONGITUDE = -180;\n+  private static final double DEFAULT_MAX_LONGITUDE = 180;\n+  private static final String SPATIAL_SETTING_PREFIX = \"unsupported.dbms.db.spatial.crs.\";\n \n-        EnvelopeSettings( CoordinateReferenceSystem crs )\n-        {\n-            this.crs = crs;\n-            this.min = new double[crs.getDimension()];\n-            this.max = new double[crs.getDimension()];\n-            Arrays.fill( this.min, Double.NaN );\n-            Arrays.fill( this.max, Double.NaN );\n-        }\n+  private class EnvelopeSettings\n+  {\n+    CoordinateReferenceSystem crs;\n+    double[] min;\n+    double[] max;\n \n-        Envelope asEnvelope()\n-        {\n-            return envelopeFromCRS( crs.getDimension(), crs.isGeographic(), this );\n-        }\n+    EnvelopeSettings(CoordinateReferenceSystem crs)\n+    {\n+      this.crs = crs;\n+      this.min = new double[crs.getDimension()];\n+      this.max = new double[crs.getDimension()];\n+      Arrays.fill(this.min, Double.NaN);\n+      Arrays.fill(this.max, Double.NaN);\n     }\n \n-    public SpaceFillingCurveSettingsFactory( Config config )\n+    Envelope asEnvelope()\n     {\n-        this.maxBits = config.get( SpatialIndexSettings.space_filling_curve_max_bits );\n-        HashMap<CoordinateReferenceSystem,EnvelopeSettings> env = new HashMap<>();\n-        for ( Map.Entry<String,ConfigValue> entry : config.getConfigValues().entrySet() )\n-        {\n-            String key = entry.getKey();\n-            String value = entry.getValue().toString();\n-            if ( key.startsWith( SPATIAL_SETTING_PREFIX ) )\n-            {\n-                String[] fields = key.replace( SPATIAL_SETTING_PREFIX, \"\" ).split( \"\\\\.\" );\n-                if ( fields.length != 3 )\n-                {\n-                    throw new IllegalArgumentException(\n-                            \"Invalid spatial config settings, expected three fields after '\" + SPATIAL_SETTING_PREFIX + \"': \" + key );\n-                }\n-                else\n-                {\n-                    CoordinateReferenceSystem crs = CoordinateReferenceSystem.byName( fields[0] );\n-                    EnvelopeSettings envelopeSettings = env.computeIfAbsent( crs, EnvelopeSettings::new );\n-                    int index = \"xyz\".indexOf( fields[1].toLowerCase() );\n-                    if ( index < 0 )\n-                    {\n-                        throw new IllegalArgumentException( \"Invalid spatial coordinate key (should be one of 'x', 'y' or 'z'): \" + fields[1] );\n-                    }\n-                    if ( index >= crs.getDimension() )\n-                    {\n-                        throw new IllegalArgumentException( \"Invalid spatial coordinate key for \" + crs.getDimension() + \"D: \" + fields[1] );\n-                    }\n-                    switch ( fields[2].toLowerCase() )\n-                    {\n-                    case \"min\":\n-                        envelopeSettings.min[index] = Double.parseDouble( value );\n-                        break;\n-                    case \"max\":\n-                        envelopeSettings.max[index] = Double.parseDouble( value );\n-                        break;\n-                    default:\n-                        throw new IllegalArgumentException( \"Invalid spatial coordinate range key (should be one of 'max' or 'min'): \" + fields[2] );\n-                    }\n-                }\n-            }\n-        }\n-        for ( Map.Entry<CoordinateReferenceSystem,EnvelopeSettings> entry : env.entrySet() )\n-        {\n-            CoordinateReferenceSystem crs = entry.getKey();\n-            settings.put( crs, SpaceFillingCurveSettings.fromConfig( crs.getDimension(), this.maxBits, entry.getValue().asEnvelope() ) );\n-        }\n+      return envelopeFromCRS(crs.getDimension(), crs.isGeographic(), this);\n     }\n+  }\n \n-    /**\n-     * The space filling curve is configured up front to cover a specific region of 2D (or 3D) space,\n-     * and the mapping tree is configured up front to have a specific maximum depth. These settings\n-     * are stored in an instance of SpaceFillingCurveSettings and are determined by the Coordinate\n-     * Reference System, and any neo4j.conf settings to override the CRS defaults.\n-     *\n-     * @return The settings for the specified coordinate reference system\n-     */\n-    public SpaceFillingCurveSettings settingsFor( CoordinateReferenceSystem crs )\n+  public SpaceFillingCurveSettingsFactory(Config config)\n+  {\n+    this.maxBits = config.get(SpatialIndexSettings.space_filling_curve_max_bits);\n+    HashMap<CoordinateReferenceSystem, EnvelopeSettings> env = new HashMap<>();\n+    for (Map.Entry<String, ConfigValue> entry : config.getConfigValues().entrySet())\n     {\n-        if ( settings.containsKey( crs ) )\n+      String key = entry.getKey();\n+      String value = entry.getValue().toString();\n+      if (key.startsWith(SPATIAL_SETTING_PREFIX))\n+      {\n+        String[] fields = key.replace(SPATIAL_SETTING_PREFIX, \"\").split(\"\\\\.\");\n+        if (fields.length != 3)\n         {\n-            return settings.get( crs );\n-        }\n-        else\n+          throw new IllegalArgumentException(\n+              \"Invalid spatial config settings, expected three fields after '\" + SPATIAL_SETTING_PREFIX + \"': \" + key);\n+        } else\n         {\n-            return SpaceFillingCurveSettings.fromConfig( crs.getDimension(), maxBits,\n-                    envelopeFromCRS( crs.getDimension(), crs.isGeographic(), new EnvelopeSettings( crs ) ) );\n+          CoordinateReferenceSystem crs = CoordinateReferenceSystem.byName(fields[0]);\n+          EnvelopeSettings envelopeSettings = env.computeIfAbsent(crs, EnvelopeSettings::new);\n+          int index = \"xyz\".indexOf(fields[1].toLowerCase());\n+          if (index < 0)\n+          {\n+            throw new IllegalArgumentException(\"Invalid spatial coordinate key (should be one of 'x', 'y' or 'z'): \" + fields[1]);\n+          }\n+          if (index >= crs.getDimension())\n+          {\n+            throw new IllegalArgumentException(\"Invalid spatial coordinate key for \" + crs.getDimension() + \"D: \" + fields[1]);\n+          }\n+          switch (fields[2].toLowerCase())\n+          {\n+            case \"min\":\n+              envelopeSettings.min[index] = Double.parseDouble(value);\n+              break;\n+            case \"max\":\n+              envelopeSettings.max[index] = Double.parseDouble(value);\n+              break;\n+            default:\n+              throw new IllegalArgumentException(\"Invalid spatial coordinate range key (should be one of 'max' or 'min'): \" + fields[2]);\n+          }\n         }\n+      }\n+    }\n+    for (Map.Entry<CoordinateReferenceSystem, EnvelopeSettings> entry : env.entrySet())\n+    {\n+      CoordinateReferenceSystem crs = entry.getKey();\n+      settings.put(crs, SpaceFillingCurveSettings.fromConfig(crs.getDimension(), this.maxBits, entry.getValue().asEnvelope()));\n     }\n+  }\n \n-    private static Envelope envelopeFromCRS( int dimension, boolean geographic, EnvelopeSettings envelopeSettings )\n+  /**\n+   * The space filling curve is configured up front to cover a specific region of 2D (or 3D) space,\n+   * and the mapping tree is configured up front to have a specific maximum depth. These settings\n+   * are stored in an instance of SpaceFillingCurveSettings and are determined by the Coordinate\n+   * Reference System, and any neo4j.conf settings to override the CRS defaults.\n+   *\n+   * @return The settings for the specified coordinate reference system\n+   */\n+  public SpaceFillingCurveSettings settingsFor(CoordinateReferenceSystem crs)\n+  {\n+    if (settings.containsKey(crs))\n     {\n-        assert dimension >= 2;\n-        double[] min = new double[dimension];\n-        double[] max = new double[dimension];\n-        int cartesianStartIndex = 0;\n-        if ( geographic )\n-        {\n-            // Geographic CRS default to extent of the earth in degrees\n-            min[0] = valOrDefault( envelopeSettings.min[0], DEFAULT_MIN_LONGITUDE );\n-            max[0] = valOrDefault( envelopeSettings.max[0], DEFAULT_MAX_LONGITUDE );\n-            min[1] = valOrDefault( envelopeSettings.min[1], DEFAULT_MIN_LATITUDE );\n-            max[1] = valOrDefault( envelopeSettings.max[1], DEFAULT_MAX_LATITUDE );\n-            cartesianStartIndex = 2;    // if geographic index has higher than 2D, then other dimensions are cartesian\n-        }\n-        for ( int i = cartesianStartIndex; i < dimension; i++ )\n-        {\n-            min[i] = valOrDefault( envelopeSettings.min[i], DEFAULT_MIN_EXTENT );\n-            max[i] = valOrDefault( envelopeSettings.max[i], DEFAULT_MAX_EXTENT );\n-        }\n-        return new Envelope( min, max );\n+      return settings.get(crs);\n+    } else\n+    {\n+      return SpaceFillingCurveSettings.fromConfig(crs.getDimension(), maxBits,\n+          envelopeFromCRS(crs.getDimension(), crs.isGeographic(), new EnvelopeSettings(crs)));\n     }\n+  }\n \n-    private static double valOrDefault( double val, double def )\n+  private static Envelope envelopeFromCRS(int dimension, boolean geographic, EnvelopeSettings envelopeSettings)\n+  {\n+    assert dimension >= 2;\n+    double[] min = new double[dimension];\n+    double[] max = new double[dimension];\n+    int cartesianStartIndex = 0;\n+    if (geographic)\n     {\n-        return Double.isNaN( val ) ? def : val;\n+      // Geographic CRS default to extent of the earth in degrees\n+      min[0] = valOrDefault(envelopeSettings.min[0], DEFAULT_MIN_LONGITUDE);\n+      max[0] = valOrDefault(envelopeSettings.max[0], DEFAULT_MAX_LONGITUDE);\n+      min[1] = valOrDefault(envelopeSettings.min[1], DEFAULT_MIN_LATITUDE);\n+      max[1] = valOrDefault(envelopeSettings.max[1], DEFAULT_MAX_LATITUDE);\n+      cartesianStartIndex = 2;    // if geographic index has higher than 2D, then other dimensions are cartesian\n     }\n+    for (int i = cartesianStartIndex; i < dimension; i++)\n+    {\n+      min[i] = valOrDefault(envelopeSettings.min[i], DEFAULT_MIN_EXTENT);\n+      max[i] = valOrDefault(envelopeSettings.max[i], DEFAULT_MAX_EXTENT);\n+    }\n+    return new Envelope(min, max);\n+  }\n+\n+  private static double valOrDefault(double val, double def)\n+  {\n+    return Double.isNaN(val) ? def : val;\n+  }\n }\n",
            "diff_size": 182
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "83",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 162).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1631/SpaceFillingCurveSettingsFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1631/SpaceFillingCurveSettingsFactory.java\nindex 545c118eedf..d01022c9006 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1631/SpaceFillingCurveSettingsFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1631/SpaceFillingCurveSettingsFactory.java\n@@ -80,8 +80,7 @@ public class SpaceFillingCurveSettingsFactory\n                 String[] fields = key.replace( SPATIAL_SETTING_PREFIX, \"\" ).split( \"\\\\.\" );\n                 if ( fields.length != 3 )\n                 {\n-                    throw new IllegalArgumentException(\n-                            \"Invalid spatial config settings, expected three fields after '\" + SPATIAL_SETTING_PREFIX + \"': \" + key );\n+                    throw new IllegalArgumentException( \"Invalid spatial config settings, expected three fields after '\" + SPATIAL_SETTING_PREFIX + \"': \" + key );\n                 }\n                 else\n                 {\n@@ -92,7 +91,8 @@ public class SpaceFillingCurveSettingsFactory\n                     {\n                         throw new IllegalArgumentException( \"Invalid spatial coordinate key (should be one of 'x', 'y' or 'z'): \" + fields[1] );\n                     }\n-                    if ( index >= crs.getDimension() )\n+\n+if ( index >= crs.getDimension() )\n                     {\n                         throw new IllegalArgumentException( \"Invalid spatial coordinate key for \" + crs.getDimension() + \"D: \" + fields[1] );\n                     }\n@@ -135,7 +135,7 @@ public class SpaceFillingCurveSettingsFactory\n         {\n             return SpaceFillingCurveSettings.fromConfig( crs.getDimension(), maxBits,\n                     envelopeFromCRS( crs.getDimension(), crs.isGeographic(), new EnvelopeSettings( crs ) ) );\n-        }\n+    }\n     }\n \n     private static Envelope envelopeFromCRS( int dimension, boolean geographic, EnvelopeSettings envelopeSettings )\n@@ -151,7 +151,8 @@ public class SpaceFillingCurveSettingsFactory\n             max[0] = valOrDefault( envelopeSettings.max[0], DEFAULT_MAX_LONGITUDE );\n             min[1] = valOrDefault( envelopeSettings.min[1], DEFAULT_MIN_LATITUDE );\n             max[1] = valOrDefault( envelopeSettings.max[1], DEFAULT_MAX_LATITUDE );\n-            cartesianStartIndex = 2;    // if geographic index has higher than 2D, then other dimensions are cartesian\n+            cartesianStartIndex = 2;\n+    // if geographic index has higher than 2D, then other dimensions are cartesian\n         }\n         for ( int i = cartesianStartIndex; i < dimension; i++ )\n         {\n@@ -165,4 +166,4 @@ public class SpaceFillingCurveSettingsFactory\n     {\n         return Double.isNaN( val ) ? def : val;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4263",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "33",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "33",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "66",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4263/RecordSet.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4263/RecordSet.java\nindex c828867425b..a9a857bc79e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4263/RecordSet.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4263/RecordSet.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.consistency.repair;\n \n import java.util.HashMap;\n@@ -27,70 +28,70 @@ import org.neo4j.kernel.impl.store.record.AbstractBaseRecord;\n \n class RecordSet<R extends AbstractBaseRecord> implements Iterable<R>\n {\n-    private final Map<Long, R> map = new HashMap<>();\n+  private final Map<Long, R> map = new HashMap<>();\n \n-    void add( R record )\n-    {\n-        map.put( record.getId(), record );\n-    }\n+  void add(R record)\n+  {\n+    map.put(record.getId(), record);\n+  }\n \n-    RecordSet<R> union( RecordSet<R> other )\n-    {\n-        RecordSet<R> set = new RecordSet<>();\n-        set.addAll( this );\n-        set.addAll( other );\n-        return set;\n-    }\n+  RecordSet<R> union(RecordSet<R> other)\n+  {\n+    RecordSet<R> set = new RecordSet<>();\n+    set.addAll(this);\n+    set.addAll(other);\n+    return set;\n+  }\n \n-    int size()\n-    {\n-        return map.size();\n-    }\n+  int size()\n+  {\n+    return map.size();\n+  }\n \n-    @Override\n-    public Iterator<R> iterator()\n-    {\n-        return map.values().iterator();\n-    }\n+  @Override\n+  public Iterator<R> iterator()\n+  {\n+    return map.values().iterator();\n+  }\n \n-    public void addAll( RecordSet<R> other )\n+  public void addAll(RecordSet<R> other)\n+  {\n+    for (R record : other.map.values())\n     {\n-        for ( R record : other.map.values() )\n-        {\n-            add( record );\n-        }\n+      add(record);\n     }\n+  }\n \n-    public boolean containsAll( RecordSet<R> other )\n+  public boolean containsAll(RecordSet<R> other)\n+  {\n+    for (Long id : other.map.keySet())\n     {\n-        for ( Long id : other.map.keySet() )\n-        {\n-            if ( !map.containsKey( id ) )\n-            {\n-                return false;\n-            }\n-        }\n-        return true;\n+      if (!map.containsKey(id))\n+      {\n+        return false;\n+      }\n     }\n+    return true;\n+  }\n \n-    @Override\n-    public String toString()\n+  @Override\n+  public String toString()\n+  {\n+    StringBuilder builder = new StringBuilder(\"[\\n\");\n+    for (R r : map.values())\n     {\n-        StringBuilder builder = new StringBuilder( \"[\\n\" );\n-        for ( R r : map.values() )\n-        {\n-            builder.append( r.toString() ).append( \",\\n\" );\n-        }\n-        return builder.append( \"]\\n\" ).toString();\n+      builder.append(r.toString()).append(\",\\n\");\n     }\n+    return builder.append(\"]\\n\").toString();\n+  }\n \n-    public static <R extends AbstractBaseRecord> RecordSet<R> asSet( R... records )\n+  public static <R extends AbstractBaseRecord> RecordSet<R> asSet(R... records)\n+  {\n+    RecordSet<R> set = new RecordSet<>();\n+    for (R record : records)\n     {\n-        RecordSet<R> set = new RecordSet<>();\n-        for ( R record : records )\n-        {\n-            set.add( record );\n-        }\n-        return set;\n+      set.add(record);\n     }\n+    return set;\n+  }\n }\n",
            "diff_size": 68
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4263/RecordSet.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4263/RecordSet.java\nindex c828867425b..fd814c3f9b7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4263/RecordSet.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4263/RecordSet.java\n@@ -27,7 +27,7 @@ import org.neo4j.kernel.impl.store.record.AbstractBaseRecord;\n \n class RecordSet<R extends AbstractBaseRecord> implements Iterable<R>\n {\n-    private final Map<Long, R> map = new HashMap<>();\n+    private final Map<Long,R> map = new HashMap<>();\n \n     void add( R record )\n     {\n@@ -81,7 +81,8 @@ class RecordSet<R extends AbstractBaseRecord> implements Iterable<R>\n         {\n             builder.append( r.toString() ).append( \",\\n\" );\n         }\n-        return builder.append( \"]\\n\" ).toString();\n+\n+return builder.append( \"]\\n\" ).toString();\n     }\n \n     public static <R extends AbstractBaseRecord> RecordSet<R> asSet( R... records )\n@@ -91,6 +92,7 @@ class RecordSet<R extends AbstractBaseRecord> implements Iterable<R>\n         {\n             set.add( record );\n         }\n-        return set;\n+\n+return set;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3810",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "62",
                    "column": "97",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "141",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "102",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "118",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "143",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "146",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "149",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "152",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "163",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "173",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "173",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "176",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "176",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "190",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "190",
                    "column": "102",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "194",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "194",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "195",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "205",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "205",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "215",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "217",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "218",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "218",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "230",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "230",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "235",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "235",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "237",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "237",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "240",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "240",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "240",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "243",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "243",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "243",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "247",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "249",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "250",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "262",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "262",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "264",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "266",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "270",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "270",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "272",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "272",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "277",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "277",
                    "column": "102",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "286",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "287",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "290",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "290",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "292",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "292",
                    "column": "19",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "323",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "323",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3810/TemporalFunction.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3810/TemporalFunction.java\nindex 81ae0434704..facf73a0913 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3810/TemporalFunction.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3810/TemporalFunction.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.proc.temporal;\n \n import java.time.Clock;\n@@ -56,279 +57,271 @@ import static org.neo4j.values.virtual.VirtualValues.EMPTY_MAP;\n \n public abstract class TemporalFunction<T extends AnyValue> implements CallableUserFunction\n {\n-    private static final String DEFAULT_TEMPORAL_ARGUMENT = \"DEFAULT_TEMPORAL_ARGUMENT\";\n-    private static final TextValue DEFAULT_TEMPORAL_ARGUMENT_VALUE = Values.stringValue( DEFAULT_TEMPORAL_ARGUMENT );\n-    private static final DefaultParameterValue DEFAULT_PARAMETER_VALUE = new DefaultParameterValue( DEFAULT_TEMPORAL_ARGUMENT, Neo4jTypes.NTAny );\n+  private static final String DEFAULT_TEMPORAL_ARGUMENT = \"DEFAULT_TEMPORAL_ARGUMENT\";\n+  private static final TextValue DEFAULT_TEMPORAL_ARGUMENT_VALUE = Values.stringValue(DEFAULT_TEMPORAL_ARGUMENT);\n+  private static final DefaultParameterValue DEFAULT_PARAMETER_VALUE = new DefaultParameterValue(DEFAULT_TEMPORAL_ARGUMENT, Neo4jTypes.NTAny);\n \n-    public static void registerTemporalFunctions( Procedures procedures, ProcedureConfig procedureConfig ) throws ProcedureException\n-    {\n-        Supplier<ZoneId> defaultZone = procedureConfig::getDefaultTemporalTimeZone;\n-        register( new DateTimeFunction( defaultZone ), procedures );\n-        register( new LocalDateTimeFunction( defaultZone ), procedures );\n-        register( new DateFunction( defaultZone ), procedures );\n-        register( new TimeFunction( defaultZone ), procedures );\n-        register( new LocalTimeFunction( defaultZone ), procedures );\n-        DurationFunction.register( procedures );\n-    }\n+  public static void registerTemporalFunctions(Procedures procedures, ProcedureConfig procedureConfig) throws ProcedureException\n+  {\n+    Supplier<ZoneId> defaultZone = procedureConfig::getDefaultTemporalTimeZone;\n+    register(new DateTimeFunction(defaultZone), procedures);\n+    register(new LocalDateTimeFunction(defaultZone), procedures);\n+    register(new DateFunction(defaultZone), procedures);\n+    register(new TimeFunction(defaultZone), procedures);\n+    register(new LocalTimeFunction(defaultZone), procedures);\n+    DurationFunction.register(procedures);\n+  }\n \n-    private static final Key<Clock> DEFAULT_CLOCK = Context.STATEMENT_CLOCK;\n+  private static final Key<Clock> DEFAULT_CLOCK = Context.STATEMENT_CLOCK;\n \n-    /**\n-     * @param clock the clock to use\n-     * @param timezone an explicit timezone or {@code null}. In the latter case, the defaultZone is used\n-     * @param defaultZone configured default time zone.\n-     * @return the current time/date\n-     */\n-    protected abstract T now( Clock clock, String timezone, Supplier<ZoneId> defaultZone );\n+  /**\n+   * @param clock       the clock to use\n+   * @param timezone    an explicit timezone or {@code null}. In the latter case, the defaultZone is used\n+   * @param defaultZone configured default time zone.\n+   * @return the current time/date\n+   */\n+  protected abstract T now(Clock clock, String timezone, Supplier<ZoneId> defaultZone);\n \n-    protected abstract T parse( TextValue value, Supplier<ZoneId> defaultZone );\n+  protected abstract T parse(TextValue value, Supplier<ZoneId> defaultZone);\n \n-    protected abstract T build( MapValue map, Supplier<ZoneId> defaultZone );\n+  protected abstract T build(MapValue map, Supplier<ZoneId> defaultZone);\n \n-    protected abstract T select( AnyValue from, Supplier<ZoneId> defaultZone );\n+  protected abstract T select(AnyValue from, Supplier<ZoneId> defaultZone);\n \n-    protected abstract T truncate( TemporalUnit unit, TemporalValue input, MapValue fields, Supplier<ZoneId> defaultZone );\n+  protected abstract T truncate(TemporalUnit unit, TemporalValue input, MapValue fields, Supplier<ZoneId> defaultZone);\n \n-    private static final List<FieldSignature> INPUT_SIGNATURE = singletonList( inputField( \"input\", Neo4jTypes.NTAny, DEFAULT_PARAMETER_VALUE ) );\n-    private static final String[] ALLOWED = {};\n+  private static final List<FieldSignature> INPUT_SIGNATURE = singletonList(inputField(\"input\", Neo4jTypes.NTAny, DEFAULT_PARAMETER_VALUE));\n+  private static final String[] ALLOWED = {};\n \n-    private final UserFunctionSignature signature;\n-    private final Supplier<ZoneId> defaultZone;\n+  private final UserFunctionSignature signature;\n+  private final Supplier<ZoneId> defaultZone;\n \n-    TemporalFunction( Neo4jTypes.AnyType result, Supplier<ZoneId> defaultZone )\n-    {\n-        String basename = basename( getClass() );\n-        assert result.getClass().getSimpleName().equals( basename + \"Type\" ) : \"result type should match function name\";\n-        Description description = getClass().getAnnotation( Description.class );\n-        this.signature = new UserFunctionSignature(\n-                new QualifiedName( new String[0], basename.toLowerCase() ),\n-                INPUT_SIGNATURE, result, null, ALLOWED,\n-                description == null ? null : description.value(), true );\n-        this.defaultZone = defaultZone;\n-    }\n+  TemporalFunction(Neo4jTypes.AnyType result, Supplier<ZoneId> defaultZone)\n+  {\n+    String basename = basename(getClass());\n+    assert result.getClass().getSimpleName().equals(basename + \"Type\") : \"result type should match function name\";\n+    Description description = getClass().getAnnotation(Description.class);\n+    this.signature = new UserFunctionSignature(\n+        new QualifiedName(new String[0], basename.toLowerCase()),\n+        INPUT_SIGNATURE, result, null, ALLOWED,\n+        description == null ? null : description.value(), true);\n+    this.defaultZone = defaultZone;\n+  }\n+\n+  private static void register(TemporalFunction<?> base, Procedures procedures) throws ProcedureException\n+  {\n+    procedures.register(base);\n+    procedures.register(new Now<>(base, \"transaction\"));\n+    procedures.register(new Now<>(base, \"statement\"));\n+    procedures.register(new Now<>(base, \"realtime\"));\n+    procedures.register(new Truncate<>(base));\n+    base.registerMore(procedures);\n+  }\n+\n+  private static String basename(Class<? extends TemporalFunction> function)\n+  {\n+    return function.getSimpleName().replace(\"Function\", \"\");\n+  }\n \n-    private static void register( TemporalFunction<?> base, Procedures procedures ) throws ProcedureException\n+  void registerMore(Procedures procedures) throws ProcedureException\n+  {\n+    // Empty by default\n+  }\n+\n+  @Override\n+  public final UserFunctionSignature signature()\n+  {\n+    return signature;\n+  }\n+\n+  @Override\n+  public final AnyValue apply(Context ctx, AnyValue[] input) throws ProcedureException\n+  {\n+    if (input == null || (input.length > 0 && (input[0] == NO_VALUE || input[0] == null)))\n+    {\n+      return NO_VALUE;\n+    } else if (input.length == 0 || input[0].equals(DEFAULT_TEMPORAL_ARGUMENT_VALUE))\n+    {\n+      return now(ctx.get(DEFAULT_CLOCK), null, defaultZone);\n+    } else if (input[0] instanceof TextValue)\n+    {\n+      return parse((TextValue) input[0], defaultZone);\n+    } else if (input[0] instanceof TemporalValue)\n+    {\n+      return select(input[0], defaultZone);\n+    } else if (input[0] instanceof MapValue)\n+    {\n+      MapValue map = (MapValue) input[0];\n+      String timezone = onlyTimezone(map);\n+      if (timezone != null)\n+      {\n+        return now(ctx.get(DEFAULT_CLOCK), timezone, defaultZone);\n+      }\n+      return build(map, defaultZone);\n+    } else\n     {\n-        procedures.register( base );\n-        procedures.register( new Now<>( base, \"transaction\" ) );\n-        procedures.register( new Now<>( base, \"statement\" ) );\n-        procedures.register( new Now<>( base, \"realtime\" ) );\n-        procedures.register( new Truncate<>( base ) );\n-        base.registerMore( procedures );\n+      throw new ProcedureException(Status.Procedure.ProcedureCallFailed, \"Invalid call signature for \" + getClass().getSimpleName() +\n+          \": Provided input was \" + Arrays.toString(input));\n     }\n+  }\n \n-    private static String basename( Class<? extends TemporalFunction> function )\n+  private static String onlyTimezone(MapValue map)\n+  {\n+    if (map.size() == 1)\n     {\n-        return function.getSimpleName().replace( \"Function\", \"\" );\n+      String key = single(map.keySet());\n+      if (\"timezone\".equalsIgnoreCase(key))\n+      {\n+        AnyValue timezone = map.get(key);\n+        if (timezone instanceof TextValue)\n+        {\n+          return ((TextValue) timezone).stringValue();\n+        }\n+      }\n     }\n+    return null;\n+  }\n+\n+  private abstract static class SubFunction<T extends AnyValue> implements CallableUserFunction\n+  {\n+    private final UserFunctionSignature signature;\n+    final TemporalFunction<T> function;\n \n-    void registerMore( Procedures procedures ) throws ProcedureException\n+    SubFunction(TemporalFunction<T> base, String name, List<FieldSignature> input, String description)\n     {\n-        // Empty by default\n+      this.function = base;\n+      this.signature = new UserFunctionSignature(\n+          new QualifiedName(new String[] {base.signature.name().name()}, name),\n+          input, base.signature.outputType(), null, ALLOWED, description, true);\n     }\n \n     @Override\n     public final UserFunctionSignature signature()\n     {\n-        return signature;\n+      return signature;\n     }\n \n     @Override\n-    public final AnyValue apply( Context ctx, AnyValue[] input ) throws ProcedureException\n-    {\n-        if ( input == null || (input.length > 0 && (input[0] == NO_VALUE || input[0] == null)) )\n-        {\n-            return NO_VALUE;\n-        }\n-        else if ( input.length == 0 || input[0].equals( DEFAULT_TEMPORAL_ARGUMENT_VALUE ) )\n-        {\n-            return now( ctx.get( DEFAULT_CLOCK ), null, defaultZone );\n-        }\n-        else if ( input[0] instanceof TextValue )\n-        {\n-            return parse( (TextValue) input[0], defaultZone );\n-        }\n-        else if ( input[0] instanceof TemporalValue )\n-        {\n-            return select( input[0], defaultZone );\n-        }\n-        else if ( input[0] instanceof MapValue )\n-        {\n-            MapValue map = (MapValue) input[0];\n-            String timezone = onlyTimezone( map );\n-            if ( timezone != null )\n-            {\n-                return now( ctx.get( DEFAULT_CLOCK ), timezone, defaultZone );\n-            }\n-            return build( map, defaultZone );\n-        }\n-        else\n-        {\n-            throw new ProcedureException( Status.Procedure.ProcedureCallFailed, \"Invalid call signature for \" + getClass().getSimpleName() +\n-                    \": Provided input was \" + Arrays.toString( input ) );\n-        }\n-    }\n+    public abstract AnyValue apply(Context ctx, AnyValue[] input) throws ProcedureException;\n+  }\n \n-    private static String onlyTimezone( MapValue map )\n+  private static class Now<T extends AnyValue> extends SubFunction<T>\n+  {\n+    private static final List<FieldSignature> SIGNATURE = singletonList(inputField(\"timezone\", Neo4jTypes.NTAny, DEFAULT_PARAMETER_VALUE));\n+    private final Key<Clock> key;\n+\n+    Now(TemporalFunction<T> function, String clock)\n     {\n-        if ( map.size() == 1 )\n-        {\n-            String key = single( map.keySet() );\n-            if ( \"timezone\".equalsIgnoreCase( key ) )\n-            {\n-                AnyValue timezone = map.get( key );\n-                if ( timezone instanceof TextValue )\n-                {\n-                    return ((TextValue) timezone).stringValue();\n-                }\n-            }\n-        }\n-        return null;\n+      super(function, clock, SIGNATURE, String.format(\n+          \"Get the current %s instant using the %s clock.\",\n+          basename(function.getClass()), clock));\n+      switch (clock)\n+      {\n+        case \"transaction\":\n+          this.key = Context.TRANSACTION_CLOCK;\n+          break;\n+        case \"statement\":\n+          this.key = Context.STATEMENT_CLOCK;\n+          break;\n+        case \"realtime\":\n+          this.key = Context.SYSTEM_CLOCK;\n+          break;\n+        default:\n+          throw new IllegalArgumentException(\"Unrecognized clock: \" + clock);\n+      }\n     }\n \n-    private abstract static class SubFunction<T extends AnyValue> implements CallableUserFunction\n+    @Override\n+    public AnyValue apply(Context ctx, AnyValue[] input) throws ProcedureException\n     {\n-        private final UserFunctionSignature signature;\n-        final TemporalFunction<T> function;\n+      if (input == null || (input.length > 0 && (input[0] == NO_VALUE || input[0] == null)))\n+      {\n+        return NO_VALUE;\n+      } else if (input.length == 0 || input[0].equals(DEFAULT_TEMPORAL_ARGUMENT_VALUE))\n+      {\n+        return function.now(ctx.get(key), null, function.defaultZone);\n+      } else if (input.length == 1 && input[0] instanceof TextValue)\n+      {\n+        TextValue timezone = (TextValue) input[0];\n+        return function.now(ctx.get(key), timezone.stringValue(), function.defaultZone);\n+      } else\n+      {\n+        throw new ProcedureException(Status.Procedure.ProcedureCallFailed, \"Invalid call signature for \" + getClass().getSimpleName() +\n+            \": Provided input was \" + Arrays.toString(input));\n+      }\n+    }\n+  }\n \n-        SubFunction( TemporalFunction<T> base, String name, List<FieldSignature> input, String description )\n-        {\n-            this.function = base;\n-            this.signature = new UserFunctionSignature(\n-                    new QualifiedName( new String[] {base.signature.name().name()}, name ),\n-                    input, base.signature.outputType(), null, ALLOWED,  description, true );\n-        }\n+  private static class Truncate<T extends AnyValue> extends SubFunction<T>\n+  {\n+    private static final List<FieldSignature> SIGNATURE = Arrays.asList(\n+        inputField(\"unit\", Neo4jTypes.NTString),\n+        inputField(\"input\", Neo4jTypes.NTAny),\n+        inputField(\"fields\", Neo4jTypes.NTMap, nullValue(Neo4jTypes.NTMap)));\n \n-        @Override\n-        public final UserFunctionSignature signature()\n-        {\n-            return signature;\n-        }\n-\n-        @Override\n-        public abstract AnyValue apply( Context ctx, AnyValue[] input ) throws ProcedureException;\n+    Truncate(TemporalFunction<T> function)\n+    {\n+      super(function, \"truncate\", SIGNATURE, String.format(\n+          \"Truncate the input temporal value to a %s instant using the specified unit.\",\n+          basename(function.getClass())));\n     }\n \n-    private static class Now<T extends AnyValue> extends SubFunction<T>\n+    @Override\n+    public T apply(Context ctx, AnyValue[] args) throws ProcedureException\n     {\n-        private static final List<FieldSignature> SIGNATURE = singletonList( inputField( \"timezone\", Neo4jTypes.NTAny, DEFAULT_PARAMETER_VALUE ) );\n-        private final Key<Clock> key;\n-\n-        Now( TemporalFunction<T> function, String clock )\n+      if (args != null && args.length >= 2 && args.length <= 3)\n+      {\n+        AnyValue unit = args[0];\n+        AnyValue input = args[1];\n+        AnyValue fields = args.length == 2 || args[2] == NO_VALUE ? EMPTY_MAP : args[2];\n+        if (unit instanceof TextValue && input instanceof TemporalValue && fields instanceof MapValue)\n         {\n-            super( function, clock, SIGNATURE, String.format(\n-                    \"Get the current %s instant using the %s clock.\",\n-                    basename( function.getClass() ), clock ) );\n-            switch ( clock )\n-            {\n-            case \"transaction\":\n-                this.key = Context.TRANSACTION_CLOCK;\n-                break;\n-            case \"statement\":\n-                this.key = Context.STATEMENT_CLOCK;\n-                break;\n-            case \"realtime\":\n-                this.key = Context.SYSTEM_CLOCK;\n-                break;\n-            default:\n-                throw new IllegalArgumentException( \"Unrecognized clock: \" + clock );\n-            }\n-        }\n-\n-        @Override\n-        public AnyValue apply( Context ctx, AnyValue[] input ) throws ProcedureException\n-        {\n-            if ( input == null || (input.length > 0 && (input[0] == NO_VALUE || input[0] == null)) )\n-            {\n-                return NO_VALUE;\n-            }\n-            else if ( input.length == 0 || input[0].equals( DEFAULT_TEMPORAL_ARGUMENT_VALUE ) )\n-            {\n-                return function.now( ctx.get( key ), null, function.defaultZone );\n-            }\n-            else if ( input.length == 1 && input[0] instanceof TextValue )\n-            {\n-                TextValue timezone = (TextValue) input[0];\n-                return function.now( ctx.get( key ), timezone.stringValue(), function.defaultZone );\n-            }\n-            else\n-            {\n-                throw new ProcedureException( Status.Procedure.ProcedureCallFailed, \"Invalid call signature for \" + getClass().getSimpleName() +\n-                    \": Provided input was \" + Arrays.toString( input ) );\n-            }\n+          return function.truncate(\n+              unit(((TextValue) unit).stringValue()),\n+              (TemporalValue) input,\n+              (MapValue) fields,\n+              function.defaultZone);\n         }\n+      }\n+      throw new ProcedureException(Status.Procedure.ProcedureCallFailed, \"Invalid call signature for \" + getClass().getSimpleName() +\n+          \": Provided input was \" + Arrays.toString(args));\n     }\n \n-    private static class Truncate<T extends AnyValue> extends SubFunction<T>\n+    private static TemporalUnit unit(String unit)\n     {\n-        private static final List<FieldSignature> SIGNATURE = Arrays.asList(\n-                inputField( \"unit\", Neo4jTypes.NTString ),\n-                inputField( \"input\", Neo4jTypes.NTAny ),\n-                inputField( \"fields\", Neo4jTypes.NTMap, nullValue( Neo4jTypes.NTMap ) ) );\n-\n-        Truncate( TemporalFunction<T> function )\n-        {\n-            super( function, \"truncate\", SIGNATURE, String.format(\n-                    \"Truncate the input temporal value to a %s instant using the specified unit.\",\n-                    basename( function.getClass() ) ) );\n-        }\n-\n-        @Override\n-        public T apply( Context ctx, AnyValue[] args ) throws ProcedureException\n-        {\n-            if ( args != null && args.length >= 2 && args.length <= 3 )\n-            {\n-                AnyValue unit = args[0];\n-                AnyValue input = args[1];\n-                AnyValue fields = args.length == 2 || args[2] == NO_VALUE ? EMPTY_MAP : args[2];\n-                if ( unit instanceof TextValue && input instanceof TemporalValue && fields instanceof MapValue )\n-                {\n-                    return function.truncate(\n-                            unit( ((TextValue) unit).stringValue() ),\n-                            (TemporalValue)input,\n-                            (MapValue) fields,\n-                            function.defaultZone );\n-                }\n-            }\n-            throw new ProcedureException( Status.Procedure.ProcedureCallFailed, \"Invalid call signature for \" + getClass().getSimpleName() +\n-                    \": Provided input was \" + Arrays.toString( args ) );\n-        }\n-\n-        private static TemporalUnit unit( String unit )\n-        {\n-            switch ( unit )\n-            {\n-            case \"millennium\":\n-                return ChronoUnit.MILLENNIA;\n-            case \"century\":\n-                return ChronoUnit.CENTURIES;\n-            case \"decade\":\n-                return ChronoUnit.DECADES;\n-            case \"year\":\n-                return ChronoUnit.YEARS;\n-            case \"weekYear\":\n-                return IsoFields.WEEK_BASED_YEARS;\n-            case \"quarter\":\n-                return IsoFields.QUARTER_YEARS;\n-            case \"month\":\n-                return ChronoUnit.MONTHS;\n-            case \"week\":\n-                return ChronoUnit.WEEKS;\n-            case \"day\":\n-                return ChronoUnit.DAYS;\n-            case \"hour\":\n-                return ChronoUnit.HOURS;\n-            case \"minute\":\n-                return ChronoUnit.MINUTES;\n-            case \"second\":\n-                return ChronoUnit.SECONDS;\n-            case \"millisecond\":\n-                return ChronoUnit.MILLIS;\n-            case \"microsecond\":\n-                return ChronoUnit.MICROS;\n-            default:\n-                throw new IllegalArgumentException( \"Unsupported unit: \" + unit );\n-            }\n-        }\n+      switch (unit)\n+      {\n+        case \"millennium\":\n+          return ChronoUnit.MILLENNIA;\n+        case \"century\":\n+          return ChronoUnit.CENTURIES;\n+        case \"decade\":\n+          return ChronoUnit.DECADES;\n+        case \"year\":\n+          return ChronoUnit.YEARS;\n+        case \"weekYear\":\n+          return IsoFields.WEEK_BASED_YEARS;\n+        case \"quarter\":\n+          return IsoFields.QUARTER_YEARS;\n+        case \"month\":\n+          return ChronoUnit.MONTHS;\n+        case \"week\":\n+          return ChronoUnit.WEEKS;\n+        case \"day\":\n+          return ChronoUnit.DAYS;\n+        case \"hour\":\n+          return ChronoUnit.HOURS;\n+        case \"minute\":\n+          return ChronoUnit.MINUTES;\n+        case \"second\":\n+          return ChronoUnit.SECONDS;\n+        case \"millisecond\":\n+          return ChronoUnit.MILLIS;\n+        case \"microsecond\":\n+          return ChronoUnit.MICROS;\n+        default:\n+          throw new IllegalArgumentException(\"Unsupported unit: \" + unit);\n+      }\n     }\n+  }\n }\n",
            "diff_size": 337
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "138",
                    "column": "44",
                    "severity": "error",
                    "message": "'>' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "167",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 194).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "196",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 198).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "236",
                    "column": "48",
                    "severity": "error",
                    "message": "'>' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "251",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 198).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "258",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 235).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "261",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 182).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "278",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 193).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3810/TemporalFunction.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3810/TemporalFunction.java\nindex 81ae0434704..2e3e87a40b6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3810/TemporalFunction.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3810/TemporalFunction.java\n@@ -90,7 +90,8 @@ public abstract class TemporalFunction<T extends AnyValue> implements CallableUs\n     protected abstract T truncate( TemporalUnit unit, TemporalValue input, MapValue fields, Supplier<ZoneId> defaultZone );\n \n     private static final List<FieldSignature> INPUT_SIGNATURE = singletonList( inputField( \"input\", Neo4jTypes.NTAny, DEFAULT_PARAMETER_VALUE ) );\n-    private static final String[] ALLOWED = {};\n+    private static final String[] ALLOWED = {\n+};\n \n     private final UserFunctionSignature signature;\n     private final Supplier<ZoneId> defaultZone;\n@@ -100,11 +101,9 @@ public abstract class TemporalFunction<T extends AnyValue> implements CallableUs\n         String basename = basename( getClass() );\n         assert result.getClass().getSimpleName().equals( basename + \"Type\" ) : \"result type should match function name\";\n         Description description = getClass().getAnnotation( Description.class );\n-        this.signature = new UserFunctionSignature(\n-                new QualifiedName( new String[0], basename.toLowerCase() ),\n-                INPUT_SIGNATURE, result, null, ALLOWED,\n+        this.signature = new UserFunctionSignature( new QualifiedName( new String[0], basename.toLowerCase() ), INPUT_SIGNATURE, result, null, ALLOWED,\n                 description == null ? null : description.value(), true );\n-        this.defaultZone = defaultZone;\n+this.defaultZone = defaultZone;\n     }\n \n     private static void register( TemporalFunction<?> base, Procedures procedures ) throws ProcedureException\n@@ -136,7 +135,7 @@ public abstract class TemporalFunction<T extends AnyValue> implements CallableUs\n     @Override\n     public final AnyValue apply( Context ctx, AnyValue[] input ) throws ProcedureException\n     {\n-        if ( input == null || (input.length > 0 && (input[0] == NO_VALUE || input[0] == null)) )\n+        if ( input == null || (input.length> 0 && (input[0] == NO_VALUE || input[0] == null )) )\n         {\n             return NO_VALUE;\n         }\n@@ -160,13 +159,13 @@ public abstract class TemporalFunction<T extends AnyValue> implements CallableUs\n             {\n                 return now( ctx.get( DEFAULT_CLOCK ), timezone, defaultZone );\n             }\n-            return build( map, defaultZone );\n+\n+return build( map, defaultZone );\n         }\n         else\n         {\n-            throw new ProcedureException( Status.Procedure.ProcedureCallFailed, \"Invalid call signature for \" + getClass().getSimpleName() +\n-                    \": Provided input was \" + Arrays.toString( input ) );\n-        }\n+            throw new ProcedureException( Status.Procedure.ProcedureCallFailed, \"Invalid call signature for \" + getClass().getSimpleName() + \": Provided input was \" + Arrays.toString( input ) );\n+    }\n     }\n \n     private static String onlyTimezone( MapValue map )\n@@ -194,9 +193,7 @@ public abstract class TemporalFunction<T extends AnyValue> implements CallableUs\n         SubFunction( TemporalFunction<T> base, String name, List<FieldSignature> input, String description )\n         {\n             this.function = base;\n-            this.signature = new UserFunctionSignature(\n-                    new QualifiedName( new String[] {base.signature.name().name()}, name ),\n-                    input, base.signature.outputType(), null, ALLOWED,  description, true );\n+            this.signature = new UserFunctionSignature( new QualifiedName( new String[]{base.signature.name().name()}, name ), input, base.signature.outputType(), null, ALLOWED, description, true );\n         }\n \n         @Override\n@@ -216,10 +213,8 @@ public abstract class TemporalFunction<T extends AnyValue> implements CallableUs\n \n         Now( TemporalFunction<T> function, String clock )\n         {\n-            super( function, clock, SIGNATURE, String.format(\n-                    \"Get the current %s instant using the %s clock.\",\n-                    basename( function.getClass() ), clock ) );\n-            switch ( clock )\n+            super( function, clock, SIGNATURE, String.format( \"Get the current %s instant using the %s clock.\", basename( function.getClass() ), clock ) );\n+switch ( clock )\n             {\n             case \"transaction\":\n                 this.key = Context.TRANSACTION_CLOCK;\n@@ -238,7 +233,7 @@ public abstract class TemporalFunction<T extends AnyValue> implements CallableUs\n         @Override\n         public AnyValue apply( Context ctx, AnyValue[] input ) throws ProcedureException\n         {\n-            if ( input == null || (input.length > 0 && (input[0] == NO_VALUE || input[0] == null)) )\n+            if ( input == null || (input.length> 0 && (input[0] == NO_VALUE || input[0] == null )) )\n             {\n                 return NO_VALUE;\n             }\n@@ -253,24 +248,17 @@ public abstract class TemporalFunction<T extends AnyValue> implements CallableUs\n             }\n             else\n             {\n-                throw new ProcedureException( Status.Procedure.ProcedureCallFailed, \"Invalid call signature for \" + getClass().getSimpleName() +\n-                    \": Provided input was \" + Arrays.toString( input ) );\n-            }\n+                throw new ProcedureException( Status.Procedure.ProcedureCallFailed, \"Invalid call signature for \" + getClass().getSimpleName() + \": Provided input was \" + Arrays.toString( input ) );\n+    }\n         }\n     }\n \n     private static class Truncate<T extends AnyValue> extends SubFunction<T>\n     {\n-        private static final List<FieldSignature> SIGNATURE = Arrays.asList(\n-                inputField( \"unit\", Neo4jTypes.NTString ),\n-                inputField( \"input\", Neo4jTypes.NTAny ),\n-                inputField( \"fields\", Neo4jTypes.NTMap, nullValue( Neo4jTypes.NTMap ) ) );\n-\n-        Truncate( TemporalFunction<T> function )\n+        private static final List<FieldSignature> SIGNATURE = Arrays.asList( inputField( \"unit\", Neo4jTypes.NTString ), inputField( \"input\", Neo4jTypes.NTAny ), inputField( \"fields\", Neo4jTypes.NTMap, nullValue( Neo4jTypes.NTMap ) ) );\n+Truncate( TemporalFunction<T> function )\n         {\n-            super( function, \"truncate\", SIGNATURE, String.format(\n-                    \"Truncate the input temporal value to a %s instant using the specified unit.\",\n-                    basename( function.getClass() ) ) );\n+            super( function, \"truncate\", SIGNATURE, String.format( \"Truncate the input temporal value to a %s instant using the specified unit.\", basename( function.getClass() ) ) );\n         }\n \n         @Override\n@@ -283,15 +271,11 @@ public abstract class TemporalFunction<T extends AnyValue> implements CallableUs\n                 AnyValue fields = args.length == 2 || args[2] == NO_VALUE ? EMPTY_MAP : args[2];\n                 if ( unit instanceof TextValue && input instanceof TemporalValue && fields instanceof MapValue )\n                 {\n-                    return function.truncate(\n-                            unit( ((TextValue) unit).stringValue() ),\n-                            (TemporalValue)input,\n-                            (MapValue) fields,\n+                    return function.truncate( unit( ((TextValue) unit).stringValue() ), (TemporalValue) input, (MapValue) fields,\n                             function.defaultZone );\n-                }\n+    }\n             }\n-            throw new ProcedureException( Status.Procedure.ProcedureCallFailed, \"Invalid call signature for \" + getClass().getSimpleName() +\n-                    \": Provided input was \" + Arrays.toString( args ) );\n+            throw new ProcedureException( Status.Procedure.ProcedureCallFailed, \"Invalid call signature for \" + getClass().getSimpleName() + \": Provided input was \" + Arrays.toString( args ) );\n         }\n \n         private static TemporalUnit unit( String unit )\n@@ -331,4 +315,4 @@ public abstract class TemporalFunction<T extends AnyValue> implements CallableUs\n             }\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 40
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
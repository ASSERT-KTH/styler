{
    "project_name": "neo4j-neo4j",
    "error_id": "867",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "54",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "110",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "69",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "133",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "70",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "152",
                    "column": "54",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "162",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "122",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/867/BoltStateMachineContextImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/867/BoltStateMachineContextImpl.java\nindex 5b6d5902b85..c507e907da0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/867/BoltStateMachineContextImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/867/BoltStateMachineContextImpl.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.bolt.runtime.statemachine.impl;\n \n import java.time.Clock;\n@@ -50,8 +51,8 @@ public class BoltStateMachineContextImpl implements StateMachineContext, Stateme\n     private final DefaultDatabaseResolver defaultDatabaseResolver;\n     private StatementProcessorProvider statementProcessorProvider;\n \n-    public BoltStateMachineContextImpl( BoltStateMachine machine, BoltChannel boltChannel, BoltStateMachineSPI spi, MutableConnectionState connectionState,\n-                                        Clock clock, DefaultDatabaseResolver defaultDatabaseResolver )\n+    public BoltStateMachineContextImpl(BoltStateMachine machine, BoltChannel boltChannel, BoltStateMachineSPI spi, MutableConnectionState connectionState,\n+                                       Clock clock, DefaultDatabaseResolver defaultDatabaseResolver)\n     {\n         this.machine = machine;\n         this.boltChannel = boltChannel;\n@@ -62,21 +63,21 @@ public class BoltStateMachineContextImpl implements StateMachineContext, Stateme\n     }\n \n     @Override\n-    public void authenticatedAsUser( String username, String userAgent )\n+    public void authenticatedAsUser(String username, String userAgent)\n     {\n-        boltChannel.updateUser( username, userAgent );\n+        boltChannel.updateUser(username, userAgent);\n     }\n \n     @Override\n     public void resolveDefaultDatabase()\n     {\n-        boltChannel.updateDefaultDatabase( defaultDatabaseResolver.defaultDatabase( boltChannel.username() ) );\n+        boltChannel.updateDefaultDatabase(defaultDatabaseResolver.defaultDatabase(boltChannel.username()));\n     }\n \n     @Override\n-    public void handleFailure( Throwable cause, boolean fatal ) throws BoltConnectionFatality\n+    public void handleFailure(Throwable cause, boolean fatal) throws BoltConnectionFatality\n     {\n-        machine.handleFailure( cause, fatal );\n+        machine.handleFailure(cause, fatal);\n     }\n \n     @Override\n@@ -110,10 +111,10 @@ public class BoltStateMachineContextImpl implements StateMachineContext, Stateme\n     }\n \n     @Override\n-    public void initStatementProcessorProvider( AuthenticationResult authResult, RoutingContext routingContext )\n+    public void initStatementProcessorProvider(AuthenticationResult authResult, RoutingContext routingContext)\n     {\n         TransactionStateMachineSPIProvider transactionSpiProvider = spi.transactionStateMachineSPIProvider();\n-        setStatementProcessorProvider( new StatementProcessorProvider( authResult, transactionSpiProvider, clock, this, routingContext ) );\n+        setStatementProcessorProvider(new StatementProcessorProvider(authResult, transactionSpiProvider, clock, this, routingContext));\n     }\n \n     /**\n@@ -121,18 +122,18 @@ public class BoltStateMachineContextImpl implements StateMachineContext, Stateme\n      * This transaction state machine will be kept in {@link MutableConnectionState} until the transaction is closed.\n      * When closing, the transaction state machine will perform a callback to {@link #releaseStatementProcessor()} to release itself from {@link\n      * MutableConnectionState}.\n+     *\n      * @param databaseName\n      */\n     @Override\n-    public StatementProcessor setCurrentStatementProcessorForDatabase( String databaseName ) throws BoltProtocolBreachFatality, BoltIOException\n+    public StatementProcessor setCurrentStatementProcessorForDatabase(String databaseName) throws BoltProtocolBreachFatality, BoltIOException\n     {\n-        if ( isCurrentStatementProcessorNotSet( databaseName ) )\n+        if (isCurrentStatementProcessorNotSet(databaseName))\n         {\n-            StatementProcessor statementProcessor = statementProcessorProvider.getStatementProcessor( databaseName );\n-            connectionState().setStatementProcessor( statementProcessor );\n+            StatementProcessor statementProcessor = statementProcessorProvider.getStatementProcessor(databaseName);\n+            connectionState().setStatementProcessor(statementProcessor);\n             return statementProcessor;\n-        }\n-        else\n+        } else\n         {\n             return connectionState().getStatementProcessor();\n         }\n@@ -148,25 +149,24 @@ public class BoltStateMachineContextImpl implements StateMachineContext, Stateme\n         connectionState().clearStatementProcessor();\n     }\n \n-    private boolean isCurrentStatementProcessorNotSet( String databaseName ) throws BoltProtocolBreachFatality\n+    private boolean isCurrentStatementProcessorNotSet(String databaseName) throws BoltProtocolBreachFatality\n     {\n         StatementProcessor currentProcessor = connectionState().getStatementProcessor();\n-        if ( currentProcessor != EMPTY )\n+        if (currentProcessor != EMPTY)\n         {\n-            if ( currentProcessor.databaseName().equals( databaseName ) )\n+            if (currentProcessor.databaseName().equals(databaseName))\n             {\n                 return false; // already set\n-            }\n-            else\n+            } else\n             {\n-                throw new BoltProtocolBreachFatality( format( \"Changing database without closing the previous is forbidden. \" +\n-                        \"Current database name: '%s', new database name: '%s'.\", currentProcessor.databaseName(), databaseName ) );\n+                throw new BoltProtocolBreachFatality(format(\"Changing database without closing the previous is forbidden. \" +\n+                  \"Current database name: '%s', new database name: '%s'.\", currentProcessor.databaseName(), databaseName));\n             }\n         }\n         return true;\n     }\n \n-    void setStatementProcessorProvider( StatementProcessorProvider statementProcessorProvider )\n+    void setStatementProcessorProvider(StatementProcessorProvider statementProcessorProvider)\n     {\n         this.statementProcessorProvider = statementProcessorProvider;\n     }\n",
            "diff_size": 25
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
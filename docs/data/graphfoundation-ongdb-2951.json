{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2951",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "69",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "149",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "107",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2951/DeferredConflictCheckingIndexUpdater.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2951/DeferredConflictCheckingIndexUpdater.java\nindex f7ddc87d42e..5131e219aee 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2951/DeferredConflictCheckingIndexUpdater.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2951/DeferredConflictCheckingIndexUpdater.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.index.schema;\n \n import java.io.IOException;\n@@ -50,74 +51,73 @@ import static org.neo4j.kernel.impl.api.index.UpdateMode.REMOVED;\n  *    Sets A property value to Q\n  *    Deletes B\n  * </pre>\n- *\n+ * <p>\n  * Then an index that is conscious about conflicts when applying may see intermediary conflicts,\n  * depending on the order in which updates are applied. Remembering which value tuples have been altered and\n  * checking conflicts for those in {@link #close()} works around that problem.\n- *\n+ * <p>\n  * This updater wrapping should only be used in specific places to solve specific problems, not generally\n  * when applying updates to online indexes.\n  */\n public class DeferredConflictCheckingIndexUpdater implements IndexUpdater\n {\n-    private final IndexUpdater actual;\n-    private final Supplier<IndexReader> readerSupplier;\n-    private final SchemaIndexDescriptor schemaIndexDescriptor;\n-    private final Set<ValueTuple> touchedTuples = new HashSet<>();\n+  private final IndexUpdater actual;\n+  private final Supplier<IndexReader> readerSupplier;\n+  private final SchemaIndexDescriptor schemaIndexDescriptor;\n+  private final Set<ValueTuple> touchedTuples = new HashSet<>();\n \n-    public DeferredConflictCheckingIndexUpdater( IndexUpdater actual, Supplier<IndexReader> readerSupplier, SchemaIndexDescriptor schemaIndexDescriptor )\n-    {\n-        this.actual = actual;\n-        this.readerSupplier = readerSupplier;\n-        this.schemaIndexDescriptor = schemaIndexDescriptor;\n-    }\n+  public DeferredConflictCheckingIndexUpdater(IndexUpdater actual, Supplier<IndexReader> readerSupplier, SchemaIndexDescriptor schemaIndexDescriptor)\n+  {\n+    this.actual = actual;\n+    this.readerSupplier = readerSupplier;\n+    this.schemaIndexDescriptor = schemaIndexDescriptor;\n+  }\n \n-    @Override\n-    public void process( IndexEntryUpdate<?> update ) throws IOException, IndexEntryConflictException\n+  @Override\n+  public void process(IndexEntryUpdate<?> update) throws IOException, IndexEntryConflictException\n+  {\n+    actual.process(update);\n+    if (update.updateMode() != REMOVED)\n     {\n-        actual.process( update );\n-        if ( update.updateMode() != REMOVED )\n-        {\n-            touchedTuples.add( ValueTuple.of( update.values() ) );\n-        }\n+      touchedTuples.add(ValueTuple.of(update.values()));\n     }\n+  }\n \n-    @Override\n-    public void close() throws IOException, IndexEntryConflictException\n+  @Override\n+  public void close() throws IOException, IndexEntryConflictException\n+  {\n+    actual.close();\n+    try (IndexReader reader = readerSupplier.get())\n     {\n-        actual.close();\n-        try ( IndexReader reader = readerSupplier.get() )\n+      for (ValueTuple tuple : touchedTuples)\n+      {\n+        try (PrimitiveLongResourceIterator results = reader.query(queryOf(tuple)))\n         {\n-            for ( ValueTuple tuple : touchedTuples )\n+          if (results.hasNext())\n+          {\n+            long firstEntityId = results.next();\n+            if (results.hasNext())\n             {\n-                try ( PrimitiveLongResourceIterator results = reader.query( queryOf( tuple ) ) )\n-                {\n-                    if ( results.hasNext() )\n-                    {\n-                        long firstEntityId = results.next();\n-                        if ( results.hasNext() )\n-                        {\n-                            long secondEntityId = results.next();\n-                            throw new IndexEntryConflictException( firstEntityId, secondEntityId, tuple );\n-                        }\n-                    }\n-                }\n+              long secondEntityId = results.next();\n+              throw new IndexEntryConflictException(firstEntityId, secondEntityId, tuple);\n             }\n+          }\n         }\n-        catch ( IndexNotApplicableKernelException e )\n-        {\n-            throw new IllegalArgumentException( \"Unexpectedly the index reader couldn't handle this query\", e );\n-        }\n+      }\n+    } catch (IndexNotApplicableKernelException e)\n+    {\n+      throw new IllegalArgumentException(\"Unexpectedly the index reader couldn't handle this query\", e);\n     }\n+  }\n \n-    private IndexQuery[] queryOf( ValueTuple tuple )\n+  private IndexQuery[] queryOf(ValueTuple tuple)\n+  {\n+    IndexQuery[] predicates = new IndexQuery[tuple.size()];\n+    int[] propertyIds = schemaIndexDescriptor.schema().getPropertyIds();\n+    for (int i = 0; i < predicates.length; i++)\n     {\n-        IndexQuery[] predicates = new IndexQuery[tuple.size()];\n-        int[] propertyIds = schemaIndexDescriptor.schema().getPropertyIds();\n-        for ( int i = 0; i < predicates.length; i++ )\n-        {\n-            predicates[i] = exact( propertyIds[i], tuple.valueAt( i ) );\n-        }\n-        return predicates;\n+      predicates[i] = exact(propertyIds[i], tuple.valueAt(i));\n     }\n+    return predicates;\n+  }\n }\n",
            "diff_size": 68
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2951/DeferredConflictCheckingIndexUpdater.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2951/DeferredConflictCheckingIndexUpdater.java\nindex f7ddc87d42e..a83190e7d7b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2951/DeferredConflictCheckingIndexUpdater.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2951/DeferredConflictCheckingIndexUpdater.java\n@@ -118,6 +118,7 @@ public class DeferredConflictCheckingIndexUpdater implements IndexUpdater\n         {\n             predicates[i] = exact( propertyIds[i], tuple.valueAt( i ) );\n         }\n-        return predicates;\n+\n+return predicates;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
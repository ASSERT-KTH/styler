{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1860",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "40",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "114",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "59",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "112",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1860/ServerConfigurationValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1860/ServerConfigurationValidator.java\nindex 18f7099e320..82ce641225c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1860/ServerConfigurationValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1860/ServerConfigurationValidator.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.configuration;\n \n import java.util.HashMap;\n@@ -32,35 +33,34 @@ import static org.neo4j.kernel.configuration.Connector.ConnectorType.HTTP;\n \n public class ServerConfigurationValidator implements ConfigurationValidator\n {\n-    /**\n-     * Verifies that at least one http connector is specified and enabled.\n-     */\n-    @Override\n-    public Map<String,String> validate( @Nonnull Config config, @Nonnull Log log ) throws InvalidSettingException\n-    {\n-        Map<String,String> validSettings = new HashMap<>();\n+  /**\n+   * Verifies that at least one http connector is specified and enabled.\n+   */\n+  @Override\n+  public Map<String, String> validate(@Nonnull Config config, @Nonnull Log log) throws InvalidSettingException\n+  {\n+    Map<String, String> validSettings = new HashMap<>();\n \n-        // Add missing type info -- validation has succeeded so we can do this with confidence\n-        boolean hasEnabledConnector = false;\n-        for ( String identifier : config.identifiersFromGroup( Connector.class ) )\n-        {\n-            Connector connector = new Connector( identifier );\n-            if ( \"http\".equalsIgnoreCase( connector.group.groupKey ) || \"https\".equalsIgnoreCase( connector.group.groupKey ) )\n-            {\n-                validSettings.put( connector.type.name(), HTTP.name() );\n-                hasEnabledConnector = hasEnabledConnector ? true : config.get( connector.enabled );\n-            }\n-            else\n-            {\n-                validSettings.put( connector.type.name(), BOLT.name() );\n-            }\n-        }\n-\n-        if ( !hasEnabledConnector )\n-        {\n-            throw new InvalidSettingException( String.format( \"Missing mandatory enabled connector of type '%s'\", HTTP ) );\n-        }\n+    // Add missing type info -- validation has succeeded so we can do this with confidence\n+    boolean hasEnabledConnector = false;\n+    for (String identifier : config.identifiersFromGroup(Connector.class))\n+    {\n+      Connector connector = new Connector(identifier);\n+      if (\"http\".equalsIgnoreCase(connector.group.groupKey) || \"https\".equalsIgnoreCase(connector.group.groupKey))\n+      {\n+        validSettings.put(connector.type.name(), HTTP.name());\n+        hasEnabledConnector = hasEnabledConnector ? true : config.get(connector.enabled);\n+      } else\n+      {\n+        validSettings.put(connector.type.name(), BOLT.name());\n+      }\n+    }\n \n-        return validSettings;\n+    if (!hasEnabledConnector)\n+    {\n+      throw new InvalidSettingException(String.format(\"Missing mandatory enabled connector of type '%s'\", HTTP));\n     }\n+\n+    return validSettings;\n+  }\n }\n",
            "diff_size": 34
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1860/ServerConfigurationValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1860/ServerConfigurationValidator.java\nindex 18f7099e320..933c8f3f38e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1860/ServerConfigurationValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1860/ServerConfigurationValidator.java\n@@ -29,7 +29,6 @@ import org.neo4j.logging.Log;\n import static org.neo4j.kernel.configuration.Connector.ConnectorType.BOLT;\n import static org.neo4j.kernel.configuration.Connector.ConnectorType.HTTP;\n \n-\n public class ServerConfigurationValidator implements ConfigurationValidator\n {\n     /**\n@@ -63,4 +62,4 @@ public class ServerConfigurationValidator implements ConfigurationValidator\n \n         return validSettings;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "43",
                    "column": "9",
                    "severity": "error",
                    "message": "'for' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "47",
                    "column": "69",
                    "severity": "error",
                    "message": "'||' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1860/ServerConfigurationValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/1860/ServerConfigurationValidator.java\nindex 18f7099e320..a74a34afba8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1860/ServerConfigurationValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/1860/ServerConfigurationValidator.java\n@@ -22,13 +22,11 @@ package org.neo4j.kernel.configuration;\n import java.util.HashMap;\n import java.util.Map;\n import javax.annotation.Nonnull;\n-\n import org.neo4j.graphdb.config.InvalidSettingException;\n import org.neo4j.logging.Log;\n-\n import static org.neo4j.kernel.configuration.Connector.ConnectorType.BOLT;\n-import static org.neo4j.kernel.configuration.Connector.ConnectorType.HTTP;\n \n+import static org.neo4j.kernel.configuration.Connector.ConnectorType.HTTP;\n \n public class ServerConfigurationValidator implements ConfigurationValidator\n {\n@@ -42,10 +40,11 @@ public class ServerConfigurationValidator implements ConfigurationValidator\n \n         // Add missing type info -- validation has succeeded so we can do this with confidence\n         boolean hasEnabledConnector = false;\n-        for ( String identifier : config.identifiersFromGroup( Connector.class ) )\n+        for( String identifier : config.identifiersFromGroup( Connector.class )\n+        )\n         {\n             Connector connector = new Connector( identifier );\n-            if ( \"http\".equalsIgnoreCase( connector.group.groupKey ) || \"https\".equalsIgnoreCase( connector.group.groupKey ) )\n+            if ( \"http\".equalsIgnoreCase( connector.group.groupKey )|| \"https\".equalsIgnoreCase( connector.group.groupKey ) )\n             {\n                 validSettings.put( connector.type.name(), HTTP.name() );\n                 hasEnabledConnector = hasEnabledConnector ? true : config.get( connector.enabled );\n@@ -56,11 +55,11 @@ public class ServerConfigurationValidator implements ConfigurationValidator\n             }\n         }\n \n-        if ( !hasEnabledConnector )\n+        if ( ! hasEnabledConnector )\n         {\n             throw new InvalidSettingException( String.format( \"Missing mandatory enabled connector of type '%s'\", HTTP ) );\n         }\n \n         return validSettings;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
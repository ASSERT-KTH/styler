{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1355",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "40",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1355/TransactionVersionContext.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1355/TransactionVersionContext.java\nindex 11559ee050a..0a9c1cf6a7b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1355/TransactionVersionContext.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1355/TransactionVersionContext.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.context;\n \n import java.util.function.LongSupplier;\n@@ -31,53 +32,53 @@ import static org.neo4j.kernel.impl.transaction.log.TransactionIdStore.BASE_TX_I\n  */\n public class TransactionVersionContext implements VersionContext\n {\n-    private final LongSupplier lastClosedTxIdSupplier;\n-    private long transactionId = BASE_TX_ID;\n-    private long lastClosedTxId = Long.MAX_VALUE;\n-    private boolean dirty;\n+  private final LongSupplier lastClosedTxIdSupplier;\n+  private long transactionId = BASE_TX_ID;\n+  private long lastClosedTxId = Long.MAX_VALUE;\n+  private boolean dirty;\n \n-    public TransactionVersionContext( LongSupplier lastClosedTxIdSupplier )\n-    {\n-        this.lastClosedTxIdSupplier = lastClosedTxIdSupplier;\n-    }\n+  public TransactionVersionContext(LongSupplier lastClosedTxIdSupplier)\n+  {\n+    this.lastClosedTxIdSupplier = lastClosedTxIdSupplier;\n+  }\n \n-    @Override\n-    public void initRead()\n-    {\n-        long txId = lastClosedTxIdSupplier.getAsLong();\n-        assert txId >= BASE_TX_ID;\n-        lastClosedTxId = txId;\n-        dirty = false;\n-    }\n+  @Override\n+  public void initRead()\n+  {\n+    long txId = lastClosedTxIdSupplier.getAsLong();\n+    assert txId >= BASE_TX_ID;\n+    lastClosedTxId = txId;\n+    dirty = false;\n+  }\n \n-    @Override\n-    public void initWrite( long committingTxId )\n-    {\n-        assert committingTxId >= BASE_TX_ID;\n-        transactionId = committingTxId;\n-    }\n+  @Override\n+  public void initWrite(long committingTxId)\n+  {\n+    assert committingTxId >= BASE_TX_ID;\n+    transactionId = committingTxId;\n+  }\n \n-    @Override\n-    public long committingTransactionId()\n-    {\n-        return transactionId;\n-    }\n+  @Override\n+  public long committingTransactionId()\n+  {\n+    return transactionId;\n+  }\n \n-    @Override\n-    public long lastClosedTransactionId()\n-    {\n-        return lastClosedTxId;\n-    }\n+  @Override\n+  public long lastClosedTransactionId()\n+  {\n+    return lastClosedTxId;\n+  }\n \n-    @Override\n-    public void markAsDirty()\n-    {\n-        dirty = true;\n-    }\n+  @Override\n+  public void markAsDirty()\n+  {\n+    dirty = true;\n+  }\n \n-    @Override\n-    public boolean isDirty()\n-    {\n-        return dirty;\n-    }\n+  @Override\n+  public boolean isDirty()\n+  {\n+    return dirty;\n+  }\n }\n",
            "diff_size": 43
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1355/TransactionVersionContext.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1355/TransactionVersionContext.java\nindex 11559ee050a..b0390c72a19 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1355/TransactionVersionContext.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1355/TransactionVersionContext.java\n@@ -80,4 +80,4 @@ public class TransactionVersionContext implements VersionContext\n     {\n         return dirty;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1355/TransactionVersionContext.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/1355/TransactionVersionContext.java\nindex 11559ee050a..21a033f60bc 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1355/TransactionVersionContext.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/1355/TransactionVersionContext.java\n@@ -20,15 +20,14 @@\n package org.neo4j.kernel.impl.context;\n \n import java.util.function.LongSupplier;\n-\n import org.neo4j.io.pagecache.tracing.cursor.context.VersionContext;\n-\n import static org.neo4j.kernel.impl.transaction.log.TransactionIdStore.BASE_TX_ID;\n \n /**\n  * Transactional version context that used by read transaction to read data of specific version.\n  * Or perform versioned data modification.\n  */\n+\n public class TransactionVersionContext implements VersionContext\n {\n     private final LongSupplier lastClosedTxIdSupplier;\n@@ -80,4 +79,4 @@ public class TransactionVersionContext implements VersionContext\n     {\n         return dirty;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
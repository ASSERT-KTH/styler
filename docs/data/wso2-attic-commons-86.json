{
    "project_name": "wso2-attic-commons",
    "error_id": "86",
    "information": {
        "errors": [
            {
                "line": "13",
                "severity": "error",
                "message": "Line is longer than 120 characters (found 138).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "\npublic class TableCreateClient {\n\t    private static EndpointReference targetEPR = new EndpointReference(\"http://localhost:8080/axis2/services/TableCreateService\");\n\t    public static void main(String args[]){\n\t        try {\n\t            OMElement payload = getPayload();",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "13",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 128).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/86/TableCreateClient.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler/86/TableCreateClient.java\nindex ff13eebf6b0..eddd0511aa7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/86/TableCreateClient.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler/86/TableCreateClient.java\n@@ -10,8 +10,8 @@ import org.apache.axis2.client.Options;\n import org.apache.axis2.client.ServiceClient;\n \n public class TableCreateClient {\n-\t    private static EndpointReference targetEPR = new EndpointReference(\"http://localhost:8080/axis2/services/TableCreateService\");\n-\t    public static void main(String args[]){\n+  private static EndpointReference targetEPR = new EndpointReference(\"http://localhost:8080/axis2/services/TableCreateService\");\n+     public static void main(String args[]){\n \t        try {\n \t            OMElement payload = getPayload();\n \t            Options options = new Options();\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/86/TableCreateClient.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/intellij/86/TableCreateClient.java\nindex ff13eebf6b0..56869f7f874 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/86/TableCreateClient.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/intellij/86/TableCreateClient.java\n@@ -10,28 +10,30 @@ import org.apache.axis2.client.Options;\n import org.apache.axis2.client.ServiceClient;\n \n public class TableCreateClient {\n-\t    private static EndpointReference targetEPR = new EndpointReference(\"http://localhost:8080/axis2/services/TableCreateService\");\n-\t    public static void main(String args[]){\n-\t        try {\n-\t            OMElement payload = getPayload();\n-\t            Options options = new Options();\n-\t            options.setTo(targetEPR);\n-\t            options.setAction(\"urn:tableCreate\");\n-\t            ServiceClient sender = new ServiceClient();\n-\t            sender.setOptions(options);\n-\t            OMElement result = sender.sendReceive(payload);\n-\t            System.out.println(result);\n-\t        } catch (AxisFault axisFault) {\n-\t            axisFault.printStackTrace();\n-\t        }\n-\t    }\n+  private static EndpointReference targetEPR =\n+    new EndpointReference(\"http://localhost:8080/axis2/services/TableCreateService\");\n \n+  public static void main(String args[]) {\n+    try {\n+      OMElement payload = getPayload();\n+      Options options = new Options();\n+      options.setTo(targetEPR);\n+      options.setAction(\"urn:tableCreate\");\n+      ServiceClient sender = new ServiceClient();\n+      sender.setOptions(options);\n+      OMElement result = sender.sendReceive(payload);\n+      System.out.println(result);\n+    } catch (AxisFault axisFault) {\n+      axisFault.printStackTrace();\n+    }\n+  }\n \n-\t    private static OMElement getPayload() {\n-\t        OMFactory fac = OMAbstractFactory.getOMFactory();\n-\t        OMNamespace omNs = fac.createOMNamespace(\n-\t                \"http://example1.org/example1\", \"example1\");\n-\t        OMElement method = fac.createOMElement(\"tableCreate\", omNs);\n-\t        return method;\n-\t    }\n+\n+  private static OMElement getPayload() {\n+    OMFactory fac = OMAbstractFactory.getOMFactory();\n+    OMNamespace omNs = fac.createOMNamespace(\n+      \"http://example1.org/example1\", \"example1\");\n+    OMElement method = fac.createOMElement(\"tableCreate\", omNs);\n+    return method;\n+  }\n }\n",
            "diff_size": 37
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "14",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 130).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/86/TableCreateClient.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/naturalize/86/TableCreateClient.java\nindex ff13eebf6b0..bf568e3d973 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/86/TableCreateClient.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/naturalize/86/TableCreateClient.java\n@@ -10,7 +10,8 @@ import org.apache.axis2.client.Options;\n import org.apache.axis2.client.ServiceClient;\n \n public class TableCreateClient {\n-\t    private static EndpointReference targetEPR = new EndpointReference(\"http://localhost:8080/axis2/services/TableCreateService\");\n+\n+    private static EndpointReference targetEPR = new EndpointReference(\"http://localhost:8080/axis2/services/TableCreateService\");\n \t    public static void main(String args[]){\n \t        try {\n \t            OMElement payload = getPayload();\n@@ -34,4 +35,4 @@ public class TableCreateClient {\n \t        OMElement method = fac.createOMElement(\"tableCreate\", omNs);\n \t        return method;\n \t    }\n-}\n+    }\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "13",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 128).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/86/TableCreateClient.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler_random/86/TableCreateClient.java\nindex ff13eebf6b0..eddd0511aa7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/86/TableCreateClient.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler_random/86/TableCreateClient.java\n@@ -10,8 +10,8 @@ import org.apache.axis2.client.Options;\n import org.apache.axis2.client.ServiceClient;\n \n public class TableCreateClient {\n-\t    private static EndpointReference targetEPR = new EndpointReference(\"http://localhost:8080/axis2/services/TableCreateService\");\n-\t    public static void main(String args[]){\n+  private static EndpointReference targetEPR = new EndpointReference(\"http://localhost:8080/axis2/services/TableCreateService\");\n+     public static void main(String args[]){\n \t        try {\n \t            OMElement payload = getPayload();\n \t            Options options = new Options();\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "13",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 130).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/86/TableCreateClient.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler_three_grams/86/TableCreateClient.java\nindex ff13eebf6b0..3fe957325bd 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/86/TableCreateClient.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler_three_grams/86/TableCreateClient.java\n@@ -10,8 +10,8 @@ import org.apache.axis2.client.Options;\n import org.apache.axis2.client.ServiceClient;\n \n public class TableCreateClient {\n-\t    private static EndpointReference targetEPR = new EndpointReference(\"http://localhost:8080/axis2/services/TableCreateService\");\n-\t    public static void main(String args[]){\n+    private static EndpointReference targetEPR = new EndpointReference(\"http://localhost:8080/axis2/services/TableCreateService\");\n+     public static void main(String args[]){\n \t        try {\n \t            OMElement payload = getPayload();\n \t            Options options = new Options();\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
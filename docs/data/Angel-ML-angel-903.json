{
    "project_name": "Angel-ML-angel",
    "error_id": "903",
    "information": {
        "errors": [
            {
                "line": "11",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 103).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * https://opensource.org/licenses/BSD-3-Clause\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n * either express or implied. See the License for the specific language governing permissions and\n * limitations under the License.",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/903/ServerRow.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/903/ServerRow.java\nindex 2ce8f5c63b9..d11cf35acc0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/903/ServerRow.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/903/ServerRow.java\n@@ -31,7 +31,6 @@ import java.util.concurrent.locks.ReentrantReadWriteLock;\n  * ServerRow is the storage unit at PS Server when using RowBlock as storage format. Each Row from\n  * worker is split among multiple PS Servers. Therefore, we need startCol and endCol to clarify the\n  * position of this ServerRow.\n- *\n  */\n public abstract class ServerRow implements Serialize {\n   private static final Log LOG = LogFactory.getLog(ServerRow.class);\n@@ -83,7 +82,7 @@ public abstract class ServerRow implements Serialize {\n    * @param output the output\n    * @throws IOException\n    */\n-  protected void writeTo(DataOutputStream output) throws IOException{\n+  protected void writeTo(DataOutputStream output) throws IOException {\n     //output.writeInt(clock);\n   }\n \n@@ -93,7 +92,7 @@ public abstract class ServerRow implements Serialize {\n    * @param input the input\n    * @throws IOException\n    */\n-  protected void readFrom(DataInputStream input) throws IOException{\n+  protected void readFrom(DataInputStream input) throws IOException {\n     //clock = input.readInt();\n   }\n \n",
            "diff_size": 3
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/903/ServerRow.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/903/ServerRow.java\nindex 2ce8f5c63b9..8a32c09d012 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/903/ServerRow.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/903/ServerRow.java\n@@ -35,7 +35,8 @@ import java.util.concurrent.locks.ReentrantReadWriteLock;\n  */\n public abstract class ServerRow implements Serialize {\n   private static final Log LOG = LogFactory.getLog(ServerRow.class);\n-  protected int clock;\n+\n+protected int clock;\n   protected int rowId;\n   protected long endCol;\n   protected long startCol;\n@@ -83,7 +84,7 @@ public abstract class ServerRow implements Serialize {\n    * @param output the output\n    * @throws IOException\n    */\n-  protected void writeTo(DataOutputStream output) throws IOException{\n+  protected void writeTo(DataOutputStream output) throws IOException {\n     //output.writeInt(clock);\n   }\n \n@@ -93,7 +94,7 @@ public abstract class ServerRow implements Serialize {\n    * @param input the input\n    * @throws IOException\n    */\n-  protected void readFrom(DataInputStream input) throws IOException{\n+  protected void readFrom(DataInputStream input) throws IOException {\n     //clock = input.readInt();\n   }\n \n@@ -243,4 +244,4 @@ public abstract class ServerRow implements Serialize {\n   }\n \n   public abstract void reset();\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
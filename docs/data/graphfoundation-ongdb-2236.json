{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2236",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "37",
                    "column": "7",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "112",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "109",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "104",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "158",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "158",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "176",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "176",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2236/ResourceTypes.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2236/ResourceTypes.java\nindex 23330dc0dc9..7ceba427c8a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2236/ResourceTypes.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2236/ResourceTypes.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.locking;\n \n import org.neo4j.collection.primitive.Primitive;\n@@ -33,154 +34,153 @@ import org.neo4j.values.storable.Values;\n \n public enum ResourceTypes implements ResourceType\n {\n-    NODE( 0, LockWaitStrategies.INCREMENTAL_BACKOFF ),\n-    RELATIONSHIP( 1, LockWaitStrategies.INCREMENTAL_BACKOFF ),\n-    GRAPH_PROPS( 2, LockWaitStrategies.INCREMENTAL_BACKOFF ),\n-    // SCHEMA resource type had typeId 3 - skip it to avoid resource types conflicts\n-    INDEX_ENTRY( 4, LockWaitStrategies.INCREMENTAL_BACKOFF ),\n-    EXPLICIT_INDEX( 5, LockWaitStrategies.INCREMENTAL_BACKOFF ),\n-    LABEL( 6, LockWaitStrategies.INCREMENTAL_BACKOFF ),\n-    RELATIONSHIP_TYPE( 7, LockWaitStrategies.INCREMENTAL_BACKOFF );\n-\n-    private static final boolean useStrongHashing =\n-            FeatureToggles.flag( ResourceTypes.class, \"useStrongHashing\", false );\n-\n-    private static final PrimitiveIntObjectMap<ResourceType> idToType = Primitive.intObjectMap();\n-    private static final HashFunction indexEntryHash_2_2_0 = HashFunction.xorShift32();\n-    private static final HashFunction indexEntryHash_4_x = HashFunction.incrementalXXH64();\n-\n-    static\n-    {\n-        for ( ResourceTypes resourceTypes : ResourceTypes.values() )\n-        {\n-            idToType.put( resourceTypes.typeId, resourceTypes );\n-        }\n-    }\n-\n-    private final int typeId;\n-\n-    private final WaitStrategy waitStrategy;\n-\n-    ResourceTypes( int typeId, WaitStrategy waitStrategy )\n-    {\n-        this.typeId = typeId;\n-        this.waitStrategy = waitStrategy;\n-    }\n-\n-    @Override\n-    public int typeId()\n+  NODE(0, LockWaitStrategies.INCREMENTAL_BACKOFF),\n+  RELATIONSHIP(1, LockWaitStrategies.INCREMENTAL_BACKOFF),\n+  GRAPH_PROPS(2, LockWaitStrategies.INCREMENTAL_BACKOFF),\n+  // SCHEMA resource type had typeId 3 - skip it to avoid resource types conflicts\n+  INDEX_ENTRY(4, LockWaitStrategies.INCREMENTAL_BACKOFF),\n+  EXPLICIT_INDEX(5, LockWaitStrategies.INCREMENTAL_BACKOFF),\n+  LABEL(6, LockWaitStrategies.INCREMENTAL_BACKOFF),\n+  RELATIONSHIP_TYPE(7, LockWaitStrategies.INCREMENTAL_BACKOFF);\n+\n+  private static final boolean useStrongHashing =\n+      FeatureToggles.flag(ResourceTypes.class, \"useStrongHashing\", false);\n+\n+  private static final PrimitiveIntObjectMap<ResourceType> idToType = Primitive.intObjectMap();\n+  private static final HashFunction indexEntryHash_2_2_0 = HashFunction.xorShift32();\n+  private static final HashFunction indexEntryHash_4_x = HashFunction.incrementalXXH64();\n+\n+  static\n+  {\n+    for (ResourceTypes resourceTypes : ResourceTypes.values())\n     {\n-        return typeId;\n+      idToType.put(resourceTypes.typeId, resourceTypes);\n     }\n-\n-    @Override\n-    public WaitStrategy waitStrategy()\n+  }\n+\n+  private final int typeId;\n+\n+  private final WaitStrategy waitStrategy;\n+\n+  ResourceTypes(int typeId, WaitStrategy waitStrategy)\n+  {\n+    this.typeId = typeId;\n+    this.waitStrategy = waitStrategy;\n+  }\n+\n+  @Override\n+  public int typeId()\n+  {\n+    return typeId;\n+  }\n+\n+  @Override\n+  public WaitStrategy waitStrategy()\n+  {\n+    return waitStrategy;\n+  }\n+\n+  /**\n+   * The index entry hashing method used for entries in explicit indexes.\n+   */\n+  public static long explicitIndexResourceId(String name, String key)\n+  {\n+    return (long) name.hashCode() << 32 | key.hashCode();\n+  }\n+\n+  /**\n+   * This is the schema index entry hashing method used since 2.2.0 and onwards.\n+   * <p>\n+   * Use the {@link ResourceTypes#useStrongHashing} feature toggle to use a stronger hash function, which will become\n+   * the default in a future release. <strong>Note</strong> that changing this hash function is effectively a\n+   * clustering protocol change in HA setups. Causal cluster setups are unaffected because followers do not take any\n+   * locks on the cluster leader.\n+   */\n+  public static long indexEntryResourceId(long labelId, IndexQuery.ExactPredicate... predicates)\n+  {\n+    if (!useStrongHashing)\n     {\n-        return waitStrategy;\n-    }\n-\n-    /**\n-     * The index entry hashing method used for entries in explicit indexes.\n-     */\n-    public static long explicitIndexResourceId( String name, String key )\n+      // Default\n+      return indexEntryResourceId_2_2_0(labelId, predicates);\n+    } else\n     {\n-        return (long) name.hashCode() << 32 | key.hashCode();\n+      // Opt-in\n+      return indexEntryResourceId_4_x(labelId, predicates);\n     }\n-\n-    /**\n-     * This is the schema index entry hashing method used since 2.2.0 and onwards.\n-     * <p>\n-     * Use the {@link ResourceTypes#useStrongHashing} feature toggle to use a stronger hash function, which will become\n-     * the default in a future release. <strong>Note</strong> that changing this hash function is effectively a\n-     * clustering protocol change in HA setups. Causal cluster setups are unaffected because followers do not take any\n-     * locks on the cluster leader.\n-     */\n-    public static long indexEntryResourceId( long labelId, IndexQuery.ExactPredicate... predicates )\n+  }\n+\n+  static long indexEntryResourceId_2_2_0(long labelId, IndexQuery.ExactPredicate[] predicates)\n+  {\n+    return indexEntryResourceId_2_2_0(labelId, predicates, 0);\n+  }\n+\n+  private static long indexEntryResourceId_2_2_0(long labelId, IndexQuery.ExactPredicate[] predicates, int i)\n+  {\n+    int propertyKeyId = predicates[i].propertyKeyId();\n+    Value value = predicates[i].value();\n+    // Note:\n+    // It is important that single-property indexes only hash with this particular call; no additional hashing!\n+    long hash = indexEntryResourceId_2_2_0(labelId, propertyKeyId, stringOf(value));\n+    i++;\n+    if (i < predicates.length)\n     {\n-        if ( !useStrongHashing )\n-        {\n-            // Default\n-            return indexEntryResourceId_2_2_0( labelId, predicates );\n-        }\n-        else\n-        {\n-            // Opt-in\n-            return indexEntryResourceId_4_x( labelId, predicates );\n-        }\n+      hash = hash(hash + indexEntryResourceId_2_2_0(labelId, predicates, i));\n     }\n-\n-    static long indexEntryResourceId_2_2_0( long labelId, IndexQuery.ExactPredicate[] predicates )\n+    return hash;\n+  }\n+\n+  private static long indexEntryResourceId_2_2_0(long labelId, long propertyKeyId, String propertyValue)\n+  {\n+    long hob = hash(labelId + hash(propertyKeyId));\n+    hob <<= 32;\n+    return hob + propertyValue.hashCode();\n+  }\n+\n+  private static String stringOf(Value value)\n+  {\n+    if (value != null && value != Values.NO_VALUE)\n     {\n-        return indexEntryResourceId_2_2_0( labelId, predicates, 0 );\n+      return Strings.prettyPrint(value.asObject());\n     }\n-\n-    private static long indexEntryResourceId_2_2_0( long labelId, IndexQuery.ExactPredicate[] predicates, int i )\n-    {\n-        int propertyKeyId = predicates[i].propertyKeyId();\n-        Value value = predicates[i].value();\n-        // Note:\n-        // It is important that single-property indexes only hash with this particular call; no additional hashing!\n-        long hash = indexEntryResourceId_2_2_0( labelId, propertyKeyId, stringOf( value ) );\n-        i++;\n-        if ( i < predicates.length )\n-        {\n-            hash = hash( hash + indexEntryResourceId_2_2_0( labelId, predicates, i ) );\n-        }\n-        return hash;\n-    }\n-\n-    private static long indexEntryResourceId_2_2_0( long labelId, long propertyKeyId, String propertyValue )\n+    return \"\";\n+  }\n+\n+  private static int hash(long value)\n+  {\n+    return indexEntryHash_2_2_0.hashSingleValueToInt(value);\n+  }\n+\n+  public static long graphPropertyResource()\n+  {\n+    return 0L;\n+  }\n+\n+  public static ResourceType fromId(int typeId)\n+  {\n+    return idToType.get(typeId);\n+  }\n+\n+  /**\n+   * This is a stronger, full 64-bit hashing method for schema index entries that we should use by default in a\n+   * future release, where we will also upgrade the HA protocol version. Currently this is indicated by the \"4_x\"\n+   * name suffix, but any version where the HA protocol version changes anyway would be just as good an opportunity.\n+   *\n+   * @see HashFunction#incrementalXXH64()\n+   */\n+  static long indexEntryResourceId_4_x(long labelId, IndexQuery.ExactPredicate[] predicates)\n+  {\n+    long hash = indexEntryHash_4_x.initialise(0x0123456789abcdefL);\n+\n+    hash = indexEntryHash_4_x.update(hash, labelId);\n+\n+    for (IndexQuery.ExactPredicate predicate : predicates)\n     {\n-        long hob = hash( labelId + hash( propertyKeyId ) );\n-        hob <<= 32;\n-        return hob + propertyValue.hashCode();\n+      int propertyKeyId = predicate.propertyKeyId();\n+      hash = indexEntryHash_4_x.update(hash, propertyKeyId);\n+      Value value = predicate.value();\n+      hash = value.updateHash(indexEntryHash_4_x, hash);\n     }\n \n-    private static String stringOf( Value value )\n-    {\n-        if ( value != null && value != Values.NO_VALUE )\n-        {\n-            return Strings.prettyPrint( value.asObject() );\n-        }\n-        return \"\";\n-    }\n-\n-    private static int hash( long value )\n-    {\n-        return indexEntryHash_2_2_0.hashSingleValueToInt( value );\n-    }\n-\n-    public static long graphPropertyResource()\n-    {\n-        return 0L;\n-    }\n-\n-    public static ResourceType fromId( int typeId )\n-    {\n-        return idToType.get( typeId );\n-    }\n-\n-    /**\n-     * This is a stronger, full 64-bit hashing method for schema index entries that we should use by default in a\n-     * future release, where we will also upgrade the HA protocol version. Currently this is indicated by the \"4_x\"\n-     * name suffix, but any version where the HA protocol version changes anyway would be just as good an opportunity.\n-     *\n-     * @see HashFunction#incrementalXXH64()\n-     */\n-    static long indexEntryResourceId_4_x( long labelId, IndexQuery.ExactPredicate[] predicates )\n-    {\n-        long hash = indexEntryHash_4_x.initialise( 0x0123456789abcdefL );\n-\n-        hash = indexEntryHash_4_x.update( hash, labelId );\n-\n-        for ( IndexQuery.ExactPredicate predicate : predicates )\n-        {\n-            int propertyKeyId = predicate.propertyKeyId();\n-            hash = indexEntryHash_4_x.update( hash, propertyKeyId );\n-            Value value = predicate.value();\n-            hash = value.updateHash( indexEntryHash_4_x, hash );\n-        }\n-\n-        return indexEntryHash_4_x.finalise( hash );\n-    }\n+    return indexEntryHash_4_x.finalise(hash);\n+  }\n }\n",
            "diff_size": 213
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "36",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 171).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "38",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 238).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2236/ResourceTypes.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2236/ResourceTypes.java\nindex 23330dc0dc9..c4bf15db4f7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2236/ResourceTypes.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2236/ResourceTypes.java\n@@ -33,19 +33,13 @@ import org.neo4j.values.storable.Values;\n \n public enum ResourceTypes implements ResourceType\n {\n-    NODE( 0, LockWaitStrategies.INCREMENTAL_BACKOFF ),\n-    RELATIONSHIP( 1, LockWaitStrategies.INCREMENTAL_BACKOFF ),\n-    GRAPH_PROPS( 2, LockWaitStrategies.INCREMENTAL_BACKOFF ),\n+    NODE( 0, LockWaitStrategies.INCREMENTAL_BACKOFF ), RELATIONSHIP( 1, LockWaitStrategies.INCREMENTAL_BACKOFF ), GRAPH_PROPS( 2, LockWaitStrategies.INCREMENTAL_BACKOFF ),\n     // SCHEMA resource type had typeId 3 - skip it to avoid resource types conflicts\n-    INDEX_ENTRY( 4, LockWaitStrategies.INCREMENTAL_BACKOFF ),\n-    EXPLICIT_INDEX( 5, LockWaitStrategies.INCREMENTAL_BACKOFF ),\n-    LABEL( 6, LockWaitStrategies.INCREMENTAL_BACKOFF ),\n-    RELATIONSHIP_TYPE( 7, LockWaitStrategies.INCREMENTAL_BACKOFF );\n+    INDEX_ENTRY( 4, LockWaitStrategies.INCREMENTAL_BACKOFF ), EXPLICIT_INDEX( 5, LockWaitStrategies.INCREMENTAL_BACKOFF ), LABEL( 6, LockWaitStrategies.INCREMENTAL_BACKOFF ), RELATIONSHIP_TYPE( 7, LockWaitStrategies.INCREMENTAL_BACKOFF );\n \n-    private static final boolean useStrongHashing =\n-            FeatureToggles.flag( ResourceTypes.class, \"useStrongHashing\", false );\n+    private static final boolean useStrongHashing = FeatureToggles.flag( ResourceTypes.class, \"useStrongHashing\", false );\n \n-    private static final PrimitiveIntObjectMap<ResourceType> idToType = Primitive.intObjectMap();\n+private static final PrimitiveIntObjectMap<ResourceType> idToType = Primitive.intObjectMap();\n     private static final HashFunction indexEntryHash_2_2_0 = HashFunction.xorShift32();\n     private static final HashFunction indexEntryHash_4_x = HashFunction.incrementalXXH64();\n \n@@ -126,7 +120,8 @@ public enum ResourceTypes implements ResourceType\n         {\n             hash = hash( hash + indexEntryResourceId_2_2_0( labelId, predicates, i ) );\n         }\n-        return hash;\n+\n+return hash;\n     }\n \n     private static long indexEntryResourceId_2_2_0( long labelId, long propertyKeyId, String propertyValue )\n@@ -170,10 +165,8 @@ public enum ResourceTypes implements ResourceType\n     static long indexEntryResourceId_4_x( long labelId, IndexQuery.ExactPredicate[] predicates )\n     {\n         long hash = indexEntryHash_4_x.initialise( 0x0123456789abcdefL );\n-\n-        hash = indexEntryHash_4_x.update( hash, labelId );\n-\n-        for ( IndexQuery.ExactPredicate predicate : predicates )\n+hash = indexEntryHash_4_x.update( hash, labelId );\n+for ( IndexQuery.ExactPredicate predicate : predicates )\n         {\n             int propertyKeyId = predicate.propertyKeyId();\n             hash = indexEntryHash_4_x.update( hash, propertyKeyId );\n@@ -183,4 +176,4 @@ public enum ResourceTypes implements ResourceType\n \n         return indexEntryHash_4_x.finalise( hash );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 17
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
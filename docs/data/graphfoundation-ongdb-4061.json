{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4061",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "57",
                    "column": "70",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "7",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "64",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "68",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "62",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "109",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "82",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "89",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "62",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "166",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "166",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "173",
                    "column": "54",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "173",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "175",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "175",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "177",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "182",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "186",
                    "column": "69",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "187",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "194",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "198",
                    "column": "128",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "200",
                    "column": "81",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "201",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "210",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "210",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "214",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "214",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "220",
                    "column": "82",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "220",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "222",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "223",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "223",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "223",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "225",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "225",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "230",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "230",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "233",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "233",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "235",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "235",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "249",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "249",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "256",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "256",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "259",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "259",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "263",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "263",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "274",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "274",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "281",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "281",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "284",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "284",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "289",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "289",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "301",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "301",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "307",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "307",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "309",
                    "column": "68",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "309",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "319",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "319",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4061/Protocol.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4061/Protocol.java\nindex e6f0d5ee3e0..76430a91f35 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4061/Protocol.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4061/Protocol.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.com;\n \n import org.jboss.netty.buffer.ChannelBuffer;\n@@ -51,268 +52,271 @@ import org.neo4j.storageengine.api.StorageCommand;\n  */\n public abstract class Protocol\n {\n-    public static final int MEGA = 1024 * 1024;\n-    public static final int DEFAULT_FRAME_LENGTH = 16 * MEGA;\n-    public static final ObjectSerializer<Integer> INTEGER_SERIALIZER = ( responseObject, result ) -> result.writeInt( responseObject );\n-    public static final ObjectSerializer<Long> LONG_SERIALIZER =\n-            ( responseObject, result ) -> result.writeLong( responseObject );\n-    public static final ObjectSerializer<Void> VOID_SERIALIZER = ( responseObject, result ) -> {};\n-    public static final Deserializer<Integer> INTEGER_DESERIALIZER = ( buffer, temporaryBuffer ) -> buffer.readInt();\n-    public static final Deserializer<Void> VOID_DESERIALIZER = ( buffer, temporaryBuffer ) -> null;\n-    public static final Serializer EMPTY_SERIALIZER = buffer -> {};\n-\n-    public static class TransactionRepresentationDeserializer implements Deserializer<TransactionRepresentation>\n+  public static final int MEGA = 1024 * 1024;\n+  public static final int DEFAULT_FRAME_LENGTH = 16 * MEGA;\n+  public static final ObjectSerializer<Integer> INTEGER_SERIALIZER = (responseObject, result) -> result.writeInt(responseObject);\n+  public static final ObjectSerializer<Long> LONG_SERIALIZER =\n+      (responseObject, result) -> result.writeLong(responseObject);\n+  public static final ObjectSerializer<Void> VOID_SERIALIZER = (responseObject, result) -> {\n+  };\n+  public static final Deserializer<Integer> INTEGER_DESERIALIZER = (buffer, temporaryBuffer) -> buffer.readInt();\n+  public static final Deserializer<Void> VOID_DESERIALIZER = (buffer, temporaryBuffer) -> null;\n+  public static final Serializer EMPTY_SERIALIZER = buffer -> {\n+  };\n+\n+  public static class TransactionRepresentationDeserializer implements Deserializer<TransactionRepresentation>\n+  {\n+    private final LogEntryReader<ReadableClosablePositionAwareChannel> reader;\n+\n+    public TransactionRepresentationDeserializer(LogEntryReader<ReadableClosablePositionAwareChannel> reader)\n     {\n-        private final LogEntryReader<ReadableClosablePositionAwareChannel> reader;\n-\n-        public TransactionRepresentationDeserializer( LogEntryReader<ReadableClosablePositionAwareChannel> reader )\n-        {\n-            this.reader = reader;\n-        }\n-\n-        @Override\n-        public TransactionRepresentation read( ChannelBuffer buffer, ByteBuffer temporaryBuffer )\n-                throws IOException\n-        {\n-            NetworkReadableClosableChannel channel = new NetworkReadableClosableChannel( buffer );\n-\n-            int authorId = channel.getInt();\n-            int masterId = channel.getInt();\n-            long latestCommittedTxWhenStarted = channel.getLong();\n-            long timeStarted = channel.getLong();\n-            long timeCommitted = channel.getLong();\n-\n-            int headerLength = channel.getInt();\n-            byte[] header = new byte[headerLength];\n-            channel.get( header, headerLength );\n-\n-            LogEntryCommand entryRead;\n-            List<StorageCommand> commands = new LinkedList<>();\n-            while ( (entryRead = (LogEntryCommand) reader.readLogEntry( channel )) != null )\n-            {\n-                commands.add( entryRead.getCommand() );\n-            }\n-\n-            PhysicalTransactionRepresentation toReturn = new PhysicalTransactionRepresentation( commands );\n-            toReturn.setHeader( header, masterId, authorId, timeStarted, latestCommittedTxWhenStarted,\n-                    timeCommitted, -1 );\n-            return toReturn;\n-        }\n+      this.reader = reader;\n     }\n-    private final int chunkSize;\n-\n-    /* ========================\n-       Static utility functions\n-       ======================== */\n-    private final byte applicationProtocolVersion;\n-    private final byte internalProtocolVersion;\n \n-    public Protocol( int chunkSize, byte applicationProtocolVersion, byte internalProtocolVersion )\n+    @Override\n+    public TransactionRepresentation read(ChannelBuffer buffer, ByteBuffer temporaryBuffer)\n+        throws IOException\n     {\n-        this.chunkSize = chunkSize;\n-        this.applicationProtocolVersion = applicationProtocolVersion;\n-        this.internalProtocolVersion = internalProtocolVersion;\n+      NetworkReadableClosableChannel channel = new NetworkReadableClosableChannel(buffer);\n+\n+      int authorId = channel.getInt();\n+      int masterId = channel.getInt();\n+      long latestCommittedTxWhenStarted = channel.getLong();\n+      long timeStarted = channel.getLong();\n+      long timeCommitted = channel.getLong();\n+\n+      int headerLength = channel.getInt();\n+      byte[] header = new byte[headerLength];\n+      channel.get(header, headerLength);\n+\n+      LogEntryCommand entryRead;\n+      List<StorageCommand> commands = new LinkedList<>();\n+      while ((entryRead = (LogEntryCommand) reader.readLogEntry(channel)) != null)\n+      {\n+        commands.add(entryRead.getCommand());\n+      }\n+\n+      PhysicalTransactionRepresentation toReturn = new PhysicalTransactionRepresentation(commands);\n+      toReturn.setHeader(header, masterId, authorId, timeStarted, latestCommittedTxWhenStarted,\n+          timeCommitted, -1);\n+      return toReturn;\n     }\n-\n-    public static void addLengthFieldPipes( ChannelPipeline pipeline, int frameLength )\n+  }\n+\n+  private final int chunkSize;\n+\n+  /* ========================\n+     Static utility functions\n+     ======================== */\n+  private final byte applicationProtocolVersion;\n+  private final byte internalProtocolVersion;\n+\n+  public Protocol(int chunkSize, byte applicationProtocolVersion, byte internalProtocolVersion)\n+  {\n+    this.chunkSize = chunkSize;\n+    this.applicationProtocolVersion = applicationProtocolVersion;\n+    this.internalProtocolVersion = internalProtocolVersion;\n+  }\n+\n+  public static void addLengthFieldPipes(ChannelPipeline pipeline, int frameLength)\n+  {\n+    pipeline.addLast(\"frameDecoder\",\n+        new LengthFieldBasedFrameDecoder(frameLength + 4, 0, 4, 0, 4));\n+    pipeline.addLast(\"frameEncoder\", new LengthFieldPrepender(4));\n+  }\n+\n+  public static void writeString(ChannelBuffer buffer, String name)\n+  {\n+    char[] chars = name.toCharArray();\n+    buffer.writeInt(chars.length);\n+    writeChars(buffer, chars);\n+  }\n+\n+  public static void writeChars(ChannelBuffer buffer, char[] chars)\n+  {\n+    // TODO optimize?\n+    for (char ch : chars)\n     {\n-        pipeline.addLast( \"frameDecoder\",\n-                new LengthFieldBasedFrameDecoder( frameLength + 4, 0, 4, 0, 4 ) );\n-        pipeline.addLast( \"frameEncoder\", new LengthFieldPrepender( 4 ) );\n+      buffer.writeChar(ch);\n     }\n+  }\n \n-    public static void writeString( ChannelBuffer buffer, String name )\n-    {\n-        char[] chars = name.toCharArray();\n-        buffer.writeInt( chars.length );\n-        writeChars( buffer, chars );\n-    }\n+  public static String readString(ChannelBuffer buffer)\n+  {\n+    return readString(buffer, buffer.readInt());\n+  }\n \n-    public static void writeChars( ChannelBuffer buffer, char[] chars )\n+  public static boolean readBoolean(ChannelBuffer buffer)\n+  {\n+    byte value = buffer.readByte();\n+    switch (value)\n     {\n-        // TODO optimize?\n-        for ( char ch : chars )\n-        {\n-            buffer.writeChar( ch );\n-        }\n+      case 0:\n+        return false;\n+      case 1:\n+        return true;\n+      default:\n+        throw new ComException(\"Invalid boolean value \" + value);\n     }\n+  }\n \n-    public static String readString( ChannelBuffer buffer )\n+  public static String readString(ChannelBuffer buffer, int length)\n+  {\n+    char[] chars = new char[length];\n+    for (int i = 0; i < length; i++)\n     {\n-        return readString( buffer, buffer.readInt() );\n+      chars[i] = buffer.readChar();\n     }\n+    return new String(chars);\n+  }\n \n-    public static boolean readBoolean( ChannelBuffer buffer )\n+  public static void assertChunkSizeIsWithinFrameSize(int chunkSize, int frameLength)\n+  {\n+    if (chunkSize > frameLength)\n     {\n-        byte value = buffer.readByte();\n-        switch ( value )\n-        {\n-        case 0:\n-            return false;\n-        case 1:\n-            return true;\n-        default:\n-            throw new ComException( \"Invalid boolean value \" + value );\n-        }\n+      throw new IllegalArgumentException(\"Chunk size \" + chunkSize +\n+          \" needs to be equal or less than frame length \" + frameLength);\n     }\n-\n-    public static String readString( ChannelBuffer buffer, int length )\n+  }\n+\n+  public void serializeRequest(Channel channel, ChannelBuffer buffer, RequestType type, RequestContext ctx,\n+                               Serializer payload) throws IOException\n+  {\n+    buffer.clear();\n+    ChunkingChannelBuffer chunkingBuffer = new ChunkingChannelBuffer(buffer,\n+        channel, chunkSize, internalProtocolVersion, applicationProtocolVersion);\n+    chunkingBuffer.writeByte(type.id());\n+    writeContext(ctx, chunkingBuffer);\n+    payload.write(chunkingBuffer);\n+    chunkingBuffer.done();\n+  }\n+\n+  public <PAYLOAD> Response<PAYLOAD> deserializeResponse(BlockingReadHandler<ChannelBuffer> reader,\n+                                                         ByteBuffer input, long timeout,\n+                                                         Deserializer<PAYLOAD> payloadDeserializer,\n+                                                         ResourceReleaser channelReleaser,\n+                                                         final LogEntryReader<ReadableClosablePositionAwareChannel> entryReader) throws IOException\n+  {\n+    final DechunkingChannelBuffer dechunkingBuffer = new DechunkingChannelBuffer(reader, timeout,\n+        internalProtocolVersion, applicationProtocolVersion);\n+\n+    PAYLOAD response = payloadDeserializer.read(dechunkingBuffer, input);\n+    StoreId storeId = readStoreId(dechunkingBuffer, input);\n+\n+    // Response type is what previously was a byte saying how many data sources there were in the\n+    // coming transaction stream response. For backwards compatibility we keep it as a byte and we introduce\n+    // the transaction obligation response type as -1\n+    byte responseType = dechunkingBuffer.readByte();\n+    if (responseType == TransactionObligationResponse.RESPONSE_TYPE)\n     {\n-        char[] chars = new char[length];\n-        for ( int i = 0; i < length; i++ )\n-        {\n-            chars[i] = buffer.readChar();\n-        }\n-        return new String( chars );\n+      // It is a transaction obligation response\n+      long obligationTxId = dechunkingBuffer.readLong();\n+      return new TransactionObligationResponse<>(response, storeId, obligationTxId, channelReleaser);\n     }\n \n-    public static void assertChunkSizeIsWithinFrameSize( int chunkSize, int frameLength )\n+    // It's a transaction stream in this response\n+    TransactionStream transactions = visitor ->\n     {\n-        if ( chunkSize > frameLength )\n+      NetworkReadableClosableChannel channel = new NetworkReadableClosableChannel(dechunkingBuffer);\n+\n+      try (PhysicalTransactionCursor<ReadableClosablePositionAwareChannel> cursor =\n+               new PhysicalTransactionCursor<>(channel, entryReader))\n+      {\n+        while (cursor.next() && !visitor.visit(cursor.get()))\n         {\n-            throw new IllegalArgumentException( \"Chunk size \" + chunkSize +\n-                                                \" needs to be equal or less than frame length \" + frameLength );\n         }\n-    }\n-\n-    public void serializeRequest( Channel channel, ChannelBuffer buffer, RequestType type, RequestContext ctx,\n-                                  Serializer payload ) throws IOException\n+      }\n+    };\n+    return new TransactionStreamResponse<>(response, storeId, transactions, channelReleaser);\n+  }\n+\n+  protected abstract StoreId readStoreId(ChannelBuffer source, ByteBuffer byteBuffer);\n+\n+  private void writeContext(RequestContext context, ChannelBuffer targetBuffer)\n+  {\n+    targetBuffer.writeLong(context.getEpoch());\n+    targetBuffer.writeInt(context.machineId());\n+    targetBuffer.writeInt(context.getEventIdentifier());\n+    long tx = context.lastAppliedTransaction();\n+    targetBuffer.writeLong(tx);\n+    targetBuffer.writeLong(context.getChecksum());\n+  }\n+\n+  public static class FileStreamsDeserializer210 implements Deserializer<Void>\n+  {\n+    private final StoreWriter writer;\n+\n+    public FileStreamsDeserializer210(StoreWriter writer)\n     {\n-        buffer.clear();\n-        ChunkingChannelBuffer chunkingBuffer = new ChunkingChannelBuffer( buffer,\n-                channel, chunkSize, internalProtocolVersion, applicationProtocolVersion );\n-        chunkingBuffer.writeByte( type.id() );\n-        writeContext( ctx, chunkingBuffer );\n-        payload.write( chunkingBuffer );\n-        chunkingBuffer.done();\n+      this.writer = writer;\n     }\n \n-    public <PAYLOAD> Response<PAYLOAD> deserializeResponse( BlockingReadHandler<ChannelBuffer> reader,\n-            ByteBuffer input, long timeout,\n-            Deserializer<PAYLOAD> payloadDeserializer,\n-            ResourceReleaser channelReleaser,\n-            final LogEntryReader<ReadableClosablePositionAwareChannel> entryReader ) throws IOException\n+    // NOTICE: this assumes a \"smart\" ChannelBuffer that continues to next chunk\n+    @Override\n+    public Void read(ChannelBuffer buffer, ByteBuffer temporaryBuffer) throws IOException\n     {\n-        final DechunkingChannelBuffer dechunkingBuffer = new DechunkingChannelBuffer( reader, timeout,\n-                internalProtocolVersion, applicationProtocolVersion );\n-\n-        PAYLOAD response = payloadDeserializer.read( dechunkingBuffer, input );\n-        StoreId storeId = readStoreId( dechunkingBuffer, input );\n-\n-        // Response type is what previously was a byte saying how many data sources there were in the\n-        // coming transaction stream response. For backwards compatibility we keep it as a byte and we introduce\n-        // the transaction obligation response type as -1\n-        byte responseType = dechunkingBuffer.readByte();\n-        if ( responseType == TransactionObligationResponse.RESPONSE_TYPE )\n-        {\n-            // It is a transaction obligation response\n-            long obligationTxId = dechunkingBuffer.readLong();\n-            return new TransactionObligationResponse<>( response, storeId, obligationTxId, channelReleaser );\n-        }\n-\n-        // It's a transaction stream in this response\n-        TransactionStream transactions = visitor ->\n-        {\n-            NetworkReadableClosableChannel channel = new NetworkReadableClosableChannel( dechunkingBuffer );\n-\n-            try ( PhysicalTransactionCursor<ReadableClosablePositionAwareChannel> cursor =\n-                          new PhysicalTransactionCursor<>( channel, entryReader ) )\n-            {\n-                while ( cursor.next() && !visitor.visit( cursor.get() ) )\n-                {\n-                }\n-            }\n-        };\n-        return new TransactionStreamResponse<>( response, storeId, transactions, channelReleaser );\n+      int pathLength;\n+      while (0 != (pathLength = buffer.readUnsignedShort()))\n+      {\n+        String path = readString(buffer, pathLength);\n+        boolean hasData = buffer.readByte() == 1;\n+        writer.write(path, hasData ? new BlockLogReader(buffer) : null, temporaryBuffer, hasData, 1);\n+      }\n+      writer.close();\n+      return null;\n     }\n+  }\n \n-    protected abstract StoreId readStoreId( ChannelBuffer source, ByteBuffer byteBuffer );\n+  public static class FileStreamsDeserializer310 implements Deserializer<Void>\n+  {\n+    private final StoreWriter writer;\n \n-    private void writeContext( RequestContext context, ChannelBuffer targetBuffer )\n+    public FileStreamsDeserializer310(StoreWriter writer)\n     {\n-        targetBuffer.writeLong( context.getEpoch() );\n-        targetBuffer.writeInt( context.machineId() );\n-        targetBuffer.writeInt( context.getEventIdentifier() );\n-        long tx = context.lastAppliedTransaction();\n-        targetBuffer.writeLong( tx );\n-        targetBuffer.writeLong( context.getChecksum() );\n+      this.writer = writer;\n     }\n \n-    public static class FileStreamsDeserializer210 implements Deserializer<Void>\n+    // NOTICE: this assumes a \"smart\" ChannelBuffer that continues to next chunk\n+    @Override\n+    public Void read(ChannelBuffer buffer, ByteBuffer temporaryBuffer) throws IOException\n     {\n-        private final StoreWriter writer;\n-\n-        public FileStreamsDeserializer210( StoreWriter writer )\n-        {\n-            this.writer = writer;\n-        }\n-\n-        // NOTICE: this assumes a \"smart\" ChannelBuffer that continues to next chunk\n-        @Override\n-        public Void read( ChannelBuffer buffer, ByteBuffer temporaryBuffer ) throws IOException\n-        {\n-            int pathLength;\n-            while ( 0 != (pathLength = buffer.readUnsignedShort()) )\n-            {\n-                String path = readString( buffer, pathLength );\n-                boolean hasData = buffer.readByte() == 1;\n-                writer.write( path, hasData ? new BlockLogReader( buffer ) : null, temporaryBuffer, hasData, 1 );\n-            }\n-            writer.close();\n-            return null;\n-        }\n+      int pathLength;\n+      while (0 != (pathLength = buffer.readUnsignedShort()))\n+      {\n+        String path = readString(buffer, pathLength);\n+        boolean hasData = buffer.readByte() == 1;\n+        int recordSize = hasData ? buffer.readInt() : RecordFormat.NO_RECORD_SIZE;\n+        writer.write(path, hasData ? new BlockLogReader(buffer) : null, temporaryBuffer, hasData,\n+            recordSize);\n+      }\n+      writer.close();\n+      return null;\n     }\n+  }\n \n-    public static class FileStreamsDeserializer310 implements Deserializer<Void>\n-    {\n-        private final StoreWriter writer;\n+  public static class TransactionSerializer implements Serializer\n+  {\n+    private final TransactionRepresentation tx;\n \n-        public FileStreamsDeserializer310( StoreWriter writer )\n-        {\n-            this.writer = writer;\n-        }\n-\n-        // NOTICE: this assumes a \"smart\" ChannelBuffer that continues to next chunk\n-        @Override\n-        public Void read( ChannelBuffer buffer, ByteBuffer temporaryBuffer ) throws IOException\n-        {\n-            int pathLength;\n-            while ( 0 != (pathLength = buffer.readUnsignedShort()) )\n-            {\n-                String path = readString( buffer, pathLength );\n-                boolean hasData = buffer.readByte() == 1;\n-                int recordSize = hasData ? buffer.readInt() : RecordFormat.NO_RECORD_SIZE;\n-                writer.write( path, hasData ? new BlockLogReader( buffer ) : null, temporaryBuffer, hasData,\n-                        recordSize );\n-            }\n-            writer.close();\n-            return null;\n-        }\n+    public TransactionSerializer(TransactionRepresentation tx)\n+    {\n+      this.tx = tx;\n     }\n \n-    public static class TransactionSerializer implements Serializer\n+    @Override\n+    public void write(ChannelBuffer buffer) throws IOException\n     {\n-        private final TransactionRepresentation tx;\n-\n-        public TransactionSerializer( TransactionRepresentation tx )\n-        {\n-            this.tx = tx;\n-        }\n-\n-        @Override\n-        public void write( ChannelBuffer buffer ) throws IOException\n-        {\n-            NetworkFlushableChannel channel = new NetworkFlushableChannel( buffer );\n-\n-            writeString( buffer, NeoStoreDataSource.DEFAULT_DATA_SOURCE_NAME );\n-            channel.putInt( tx.getAuthorId() );\n-            channel.putInt( tx.getMasterId() );\n-            channel.putLong( tx.getLatestCommittedTxWhenStarted() );\n-            channel.putLong( tx.getTimeStarted() );\n-            channel.putLong( tx.getTimeCommitted() );\n-            channel.putInt( tx.additionalHeader().length );\n-            channel.put( tx.additionalHeader(), tx.additionalHeader().length );\n-            new LogEntryWriter( channel ).serialize( tx );\n-        }\n+      NetworkFlushableChannel channel = new NetworkFlushableChannel(buffer);\n+\n+      writeString(buffer, NeoStoreDataSource.DEFAULT_DATA_SOURCE_NAME);\n+      channel.putInt(tx.getAuthorId());\n+      channel.putInt(tx.getMasterId());\n+      channel.putLong(tx.getLatestCommittedTxWhenStarted());\n+      channel.putLong(tx.getTimeStarted());\n+      channel.putLong(tx.getTimeCommitted());\n+      channel.putInt(tx.additionalHeader().length);\n+      channel.put(tx.additionalHeader(), tx.additionalHeader().length);\n+      new LogEntryWriter(channel).serialize(tx);\n     }\n+  }\n }\n",
            "diff_size": 359
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
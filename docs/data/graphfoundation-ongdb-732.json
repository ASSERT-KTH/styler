{
    "project_name": "graphfoundation-ongdb",
    "error_id": "732",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "44",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/732/LabelScanViewNodeStoreScan.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/732/LabelScanViewNodeStoreScan.java\nindex 75d9a02b335..7017383bb7e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/732/LabelScanViewNodeStoreScan.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/732/LabelScanViewNodeStoreScan.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.transaction.state.storeview;\n \n import java.util.function.IntPredicate;\n@@ -33,26 +34,27 @@ import org.neo4j.kernel.impl.store.PropertyStore;\n /**\n  * Store scan view that will try to minimize amount of scanned nodes by using label scan store {@link LabelScanStore}\n  * as a source of known labeled node ids.\n+ *\n  * @param <FAILURE> type of exception thrown on failure\n  */\n public class LabelScanViewNodeStoreScan<FAILURE extends Exception> extends StoreViewNodeStoreScan<FAILURE>\n {\n-    private final LabelScanStore labelScanStore;\n+  private final LabelScanStore labelScanStore;\n \n-    public LabelScanViewNodeStoreScan( NodeStore nodeStore, LockService locks,\n-            PropertyStore propertyStore,\n-            LabelScanStore labelScanStore, Visitor<NodeLabelUpdate,FAILURE> labelUpdateVisitor,\n-            Visitor<NodeUpdates,FAILURE> propertyUpdatesVisitor, int[] labelIds,\n-            IntPredicate propertyKeyIdFilter )\n-    {\n-        super( nodeStore, locks, propertyStore, labelUpdateVisitor, propertyUpdatesVisitor, labelIds,\n-                propertyKeyIdFilter );\n-        this.labelScanStore = labelScanStore;\n-    }\n+  public LabelScanViewNodeStoreScan(NodeStore nodeStore, LockService locks,\n+                                    PropertyStore propertyStore,\n+                                    LabelScanStore labelScanStore, Visitor<NodeLabelUpdate, FAILURE> labelUpdateVisitor,\n+                                    Visitor<NodeUpdates, FAILURE> propertyUpdatesVisitor, int[] labelIds,\n+                                    IntPredicate propertyKeyIdFilter)\n+  {\n+    super(nodeStore, locks, propertyStore, labelUpdateVisitor, propertyUpdatesVisitor, labelIds,\n+        propertyKeyIdFilter);\n+    this.labelScanStore = labelScanStore;\n+  }\n \n-    @Override\n-    public PrimitiveLongResourceIterator getNodeIdIterator()\n-    {\n-        return new LabelScanViewIdIterator( labelScanStore.newReader(), labelIds );\n-    }\n+  @Override\n+  public PrimitiveLongResourceIterator getNodeIdIterator()\n+  {\n+    return new LabelScanViewIdIterator(labelScanStore.newReader(), labelIds);\n+  }\n }\n",
            "diff_size": 18
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "44",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 164).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/732/LabelScanViewNodeStoreScan.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/732/LabelScanViewNodeStoreScan.java\nindex 75d9a02b335..0a92ab46198 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/732/LabelScanViewNodeStoreScan.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/732/LabelScanViewNodeStoreScan.java\n@@ -41,13 +41,12 @@ public class LabelScanViewNodeStoreScan<FAILURE extends Exception> extends Store\n \n     public LabelScanViewNodeStoreScan( NodeStore nodeStore, LockService locks,\n             PropertyStore propertyStore,\n-            LabelScanStore labelScanStore, Visitor<NodeLabelUpdate,FAILURE> labelUpdateVisitor,\n-            Visitor<NodeUpdates,FAILURE> propertyUpdatesVisitor, int[] labelIds,\n+            LabelScanStore labelScanStore, Visitor<NodeLabelUpdate,FAILURE> labelUpdateVisitor, Visitor<NodeUpdates,FAILURE> propertyUpdatesVisitor, int[] labelIds,\n             IntPredicate propertyKeyIdFilter )\n     {\n         super( nodeStore, locks, propertyStore, labelUpdateVisitor, propertyUpdatesVisitor, labelIds,\n                 propertyKeyIdFilter );\n-        this.labelScanStore = labelScanStore;\n+this.labelScanStore = labelScanStore;\n     }\n \n     @Override\n@@ -55,4 +54,4 @@ public class LabelScanViewNodeStoreScan<FAILURE extends Exception> extends Store\n     {\n         return new LabelScanViewIdIterator( labelScanStore.newReader(), labelIds );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
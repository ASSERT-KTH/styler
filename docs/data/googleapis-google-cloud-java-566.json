{
    "project_name": "googleapis-google-cloud-java",
    "error_id": "566",
    "information": {
        "errors": [
            {
                "line": "31",
                "severity": "warning",
                "message": "'member def modifier' has incorrect indentation level 0, expected level should be 2.",
                "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
            }
        ]
    },
    "source_code": "public class SerializationTest extends BaseSerializationTest {\n\nprivate static final ResourceManager RESOURCE_MANAGER =\n      ResourceManagerOptions.defaultInstance().service();\n  private static final ProjectInfo PARTIAL_PROJECT_INFO = ProjectInfo.builder(\"id1\").build();\n  private static final ProjectInfo FULL_PROJECT_INFO = ProjectInfo.builder(\"id\")",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "31",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 0, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/566/SerializationTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/styler/566/SerializationTest.java\nindex 5bad065003e..e01135b273d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/566/SerializationTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/styler/566/SerializationTest.java\n@@ -29,7 +29,7 @@ import java.util.Collections;\n public class SerializationTest extends BaseSerializationTest {\n \n private static final ResourceManager RESOURCE_MANAGER =\n-      ResourceManagerOptions.defaultInstance().service();\n+    ResourceManagerOptions.defaultInstance().service();\n   private static final ProjectInfo PARTIAL_PROJECT_INFO = ProjectInfo.builder(\"id1\").build();\n   private static final ProjectInfo FULL_PROJECT_INFO = ProjectInfo.builder(\"id\")\n       .name(\"name\")\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/566/SerializationTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/intellij/566/SerializationTest.java\nindex 5bad065003e..d4a9d99c5ab 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/566/SerializationTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/intellij/566/SerializationTest.java\n@@ -28,7 +28,7 @@ import java.util.Collections;\n \n public class SerializationTest extends BaseSerializationTest {\n \n-private static final ResourceManager RESOURCE_MANAGER =\n+  private static final ResourceManager RESOURCE_MANAGER =\n       ResourceManagerOptions.defaultInstance().service();\n   private static final ProjectInfo PARTIAL_PROJECT_INFO = ProjectInfo.builder(\"id1\").build();\n   private static final ProjectInfo FULL_PROJECT_INFO = ProjectInfo.builder(\"id\")\n@@ -56,7 +56,7 @@ private static final ResourceManager RESOURCE_MANAGER =\n     ResourceManagerOptions otherOptions = options.toBuilder()\n         .projectId(\"some-unnecessary-project-ID\")\n         .build();\n-    return new Serializable[]{PARTIAL_PROJECT_INFO, FULL_PROJECT_INFO, PROJECT, PAGE_RESULT,\n+    return new Serializable[] {PARTIAL_PROJECT_INFO, FULL_PROJECT_INFO, PROJECT, PAGE_RESULT,\n         PROJECT_GET_OPTION, PROJECT_LIST_OPTION, POLICY, options, otherOptions};\n   }\n \n",
            "diff_size": 2
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "31",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 109).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "52",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/566/SerializationTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/naturalize/566/SerializationTest.java\nindex 5bad065003e..9d04731603d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/566/SerializationTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/naturalize/566/SerializationTest.java\n@@ -28,8 +28,7 @@ import java.util.Collections;\n \n public class SerializationTest extends BaseSerializationTest {\n \n-private static final ResourceManager RESOURCE_MANAGER =\n-      ResourceManagerOptions.defaultInstance().service();\n+  private static final ResourceManager RESOURCE_MANAGER = ResourceManagerOptions.defaultInstance().service();\n   private static final ProjectInfo PARTIAL_PROJECT_INFO = ProjectInfo.builder(\"id1\").build();\n   private static final ProjectInfo FULL_PROJECT_INFO = ProjectInfo.builder(\"id\")\n       .name(\"name\")\n@@ -50,7 +49,7 @@ private static final ResourceManager RESOURCE_MANAGER =\n       .addBinding(Policy.Role.viewer(), ImmutableSet.of(Identity.user(\"abc@gmail.com\")))\n       .build();\n \n-  @Override\n+@Override\n   protected Serializable[] serializableObjects() {\n     ResourceManagerOptions options = ResourceManagerOptions.builder().build();\n     ResourceManagerOptions otherOptions = options.toBuilder()\n@@ -64,4 +63,4 @@ private static final ResourceManager RESOURCE_MANAGER =\n   protected Restorable<?>[] restorableObjects() {\n     return null;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "31",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 109).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "33",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 218).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "34",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 119).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "35",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 117).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "36",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 152).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "37",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 130).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "38",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 146).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "43",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 111).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "44",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 165).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/566/SerializationTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/codebuff/566/SerializationTest.java\nindex 5bad065003e..74fa2917e35 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/566/SerializationTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/codebuff/566/SerializationTest.java\n@@ -22,46 +22,30 @@ import com.google.gcloud.BaseSerializationTest;\n import com.google.gcloud.Identity;\n import com.google.gcloud.PageImpl;\n import com.google.gcloud.Restorable;\n-\n import java.io.Serializable;\n import java.util.Collections;\n \n+\n public class SerializationTest extends BaseSerializationTest {\n \n-private static final ResourceManager RESOURCE_MANAGER =\n-      ResourceManagerOptions.defaultInstance().service();\n+  private static final ResourceManager RESOURCE_MANAGER = ResourceManagerOptions.defaultInstance().service();\n   private static final ProjectInfo PARTIAL_PROJECT_INFO = ProjectInfo.builder(\"id1\").build();\n-  private static final ProjectInfo FULL_PROJECT_INFO = ProjectInfo.builder(\"id\")\n-      .name(\"name\")\n-      .labels(ImmutableMap.of(\"key\", \"value\"))\n-      .projectNumber(123L)\n-      .state(ProjectInfo.State.ACTIVE)\n-      .createTimeMillis(1234L)\n-      .build();\n-  private static final Project PROJECT =\n-      new Project(RESOURCE_MANAGER, new ProjectInfo.BuilderImpl(FULL_PROJECT_INFO));\n-  private static final PageImpl<Project> PAGE_RESULT =\n-      new PageImpl<>(null, \"c\", Collections.singletonList(PROJECT));\n-  private static final ResourceManager.ProjectGetOption PROJECT_GET_OPTION =\n-      ResourceManager.ProjectGetOption.fields(ResourceManager.ProjectField.NAME);\n-  private static final ResourceManager.ProjectListOption PROJECT_LIST_OPTION =\n-      ResourceManager.ProjectListOption.filter(\"name:*\");\n-  private static final Policy POLICY = Policy.builder()\n-      .addBinding(Policy.Role.viewer(), ImmutableSet.of(Identity.user(\"abc@gmail.com\")))\n-      .build();\n+  private static final ProjectInfo FULL_PROJECT_INFO = ProjectInfo.builder(\"id\").name(\"name\").labels(ImmutableMap.of(\"key\", \"value\")).projectNumber(123L).state(ProjectInfo.State.ACTIVE).createTimeMillis(1234L).build();\n+  private static final Project PROJECT = new Project(RESOURCE_MANAGER, new ProjectInfo.BuilderImpl(FULL_PROJECT_INFO));\n+  private static final PageImpl<Project> PAGE_RESULT = new PageImpl<>(null, \"c\", Collections.singletonList(PROJECT));\n+  private static final ResourceManager.ProjectGetOption PROJECT_GET_OPTION = ResourceManager.ProjectGetOption.fields(ResourceManager.ProjectField.NAME);\n+  private static final ResourceManager.ProjectListOption PROJECT_LIST_OPTION = ResourceManager.ProjectListOption.filter(\"name:*\");\n+  private static final Policy POLICY = Policy.builder().addBinding(Policy.Role.viewer(), ImmutableSet.of(Identity.user(\"abc@gmail.com\"))).build();\n \n   @Override\n   protected Serializable[] serializableObjects() {\n     ResourceManagerOptions options = ResourceManagerOptions.builder().build();\n-    ResourceManagerOptions otherOptions = options.toBuilder()\n-        .projectId(\"some-unnecessary-project-ID\")\n-        .build();\n-    return new Serializable[]{PARTIAL_PROJECT_INFO, FULL_PROJECT_INFO, PROJECT, PAGE_RESULT,\n-        PROJECT_GET_OPTION, PROJECT_LIST_OPTION, POLICY, options, otherOptions};\n+    ResourceManagerOptions otherOptions = options.toBuilder().projectId(\"some-unnecessary-project-ID\").build();\n+    return new Serializable[]{PARTIAL_PROJECT_INFO, FULL_PROJECT_INFO, PROJECT, PAGE_RESULT, PROJECT_GET_OPTION, PROJECT_LIST_OPTION, POLICY, options, otherOptions};\n   }\n \n   @Override\n   protected Restorable<?>[] restorableObjects() {\n     return null;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 28
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "31",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 0, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/566/SerializationTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/styler_random/566/SerializationTest.java\nindex 5bad065003e..e01135b273d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/566/SerializationTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/styler_random/566/SerializationTest.java\n@@ -29,7 +29,7 @@ import java.util.Collections;\n public class SerializationTest extends BaseSerializationTest {\n \n private static final ResourceManager RESOURCE_MANAGER =\n-      ResourceManagerOptions.defaultInstance().service();\n+    ResourceManagerOptions.defaultInstance().service();\n   private static final ProjectInfo PARTIAL_PROJECT_INFO = ProjectInfo.builder(\"id1\").build();\n   private static final ProjectInfo FULL_PROJECT_INFO = ProjectInfo.builder(\"id\")\n       .name(\"name\")\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "32",
                    "severity": "warning",
                    "message": "'ResourceManagerOptions' has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/566/SerializationTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/styler_three_grams/566/SerializationTest.java\nindex 5bad065003e..eff8da5b84e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/566/SerializationTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/styler_three_grams/566/SerializationTest.java\n@@ -28,8 +28,8 @@ import java.util.Collections;\n \n public class SerializationTest extends BaseSerializationTest {\n \n-private static final ResourceManager RESOURCE_MANAGER =\n-      ResourceManagerOptions.defaultInstance().service();\n+  private static final ResourceManager RESOURCE_MANAGER =\n+    ResourceManagerOptions.defaultInstance().service();\n   private static final ProjectInfo PARTIAL_PROJECT_INFO = ProjectInfo.builder(\"id1\").build();\n   private static final ProjectInfo FULL_PROJECT_INFO = ProjectInfo.builder(\"id\")\n       .name(\"name\")\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
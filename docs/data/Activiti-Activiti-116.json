{
    "project_name": "Activiti-Activiti",
    "error_id": "116",
    "information": {
        "errors": [
            {
                "line": "70",
                "severity": "error",
                "message": "'METHOD_DEF' has more than 1 empty lines before.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": "\n\n    @Override\n    public int hashCode() {\n        return Objects.hash(activityId,\n                            configuration,",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/116/StartMessageSubscriptionImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler/116/StartMessageSubscriptionImpl.java\nindex 55f1fce0c53..ed0a9dbae8f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/116/StartMessageSubscriptionImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler/116/StartMessageSubscriptionImpl.java\n@@ -66,7 +66,6 @@ public class StartMessageSubscriptionImpl implements StartMessageSubscription {\n         return created;\n     }\n \n-\n     @Override\n     public int hashCode() {\n         return Objects.hash(activityId,\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "70",
                    "severity": "error",
                    "message": "'METHOD_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/116/StartMessageSubscriptionImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/intellij/116/StartMessageSubscriptionImpl.java\nindex 55f1fce0c53..7bd21d9bcaf 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/116/StartMessageSubscriptionImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/intellij/116/StartMessageSubscriptionImpl.java\n@@ -22,7 +22,7 @@ import java.util.Objects;\n import org.activiti.api.process.model.StartMessageSubscription;\n \n public class StartMessageSubscriptionImpl implements StartMessageSubscription {\n-    \n+\n     private String id;\n     private String eventName;\n     private String processDefinitionId;\n@@ -41,27 +41,27 @@ public class StartMessageSubscriptionImpl implements StartMessageSubscription {\n \n     StartMessageSubscriptionImpl() {\n     }\n-    \n+\n     public String getId() {\n         return id;\n     }\n-    \n+\n     public String getEventName() {\n         return eventName;\n     }\n-    \n+\n     public String getProcessDefinitionId() {\n         return processDefinitionId;\n     }\n-    \n+\n     public String getConfiguration() {\n         return configuration;\n     }\n-    \n+\n     public String getActivityId() {\n         return activityId;\n     }\n-    \n+\n     public Date getCreated() {\n         return created;\n     }\n@@ -70,11 +70,11 @@ public class StartMessageSubscriptionImpl implements StartMessageSubscription {\n     @Override\n     public int hashCode() {\n         return Objects.hash(activityId,\n-                            configuration,\n-                            created,\n-                            eventName,\n-                            id,\n-                            processDefinitionId);\n+                configuration,\n+                created,\n+                eventName,\n+                id,\n+                processDefinitionId);\n     }\n \n     @Override\n@@ -89,11 +89,11 @@ public class StartMessageSubscriptionImpl implements StartMessageSubscription {\n             return false;\n         }\n         StartMessageSubscriptionImpl other = (StartMessageSubscriptionImpl) obj;\n-        return Objects.equals(activityId, other.activityId) && \n-                Objects.equals(configuration, other.configuration) && \n-                Objects.equals(created, other.created) && \n-                Objects.equals(eventName, other.eventName) && \n-                Objects.equals(id, other.id) && \n+        return Objects.equals(activityId, other.activityId) &&\n+                Objects.equals(configuration, other.configuration) &&\n+                Objects.equals(created, other.created) &&\n+                Objects.equals(eventName, other.eventName) &&\n+                Objects.equals(id, other.id) &&\n                 Objects.equals(processDefinitionId, other.processDefinitionId);\n     }\n \n@@ -118,14 +118,16 @@ public class StartMessageSubscriptionImpl implements StartMessageSubscription {\n \n     /**\n      * Creates a builder to build {@link StartMessageSubscriptionImpl}.\n+     *\n      * @return created builder\n      */\n     public static Builder builder() {\n         return new Builder();\n     }\n-    \n+\n     /**\n      * Creates a builder to build {@link StartMessageSubscriptionImpl} and initialize it with the given object.\n+     *\n      * @param startMessageSubscriptionImpl to initialize the builder with\n      * @return created builder\n      */\n@@ -158,69 +160,76 @@ public class StartMessageSubscriptionImpl implements StartMessageSubscription {\n         }\n \n         /**\n-        * Builder method for id parameter.\n-        * @param id field to set\n-        * @return builder\n-        */\n+         * Builder method for id parameter.\n+         *\n+         * @param id field to set\n+         * @return builder\n+         */\n         public Builder withId(String id) {\n             this.id = id;\n             return this;\n         }\n \n         /**\n-        * Builder method for eventName parameter.\n-        * @param eventName field to set\n-        * @return builder\n-        */\n+         * Builder method for eventName parameter.\n+         *\n+         * @param eventName field to set\n+         * @return builder\n+         */\n         public Builder withEventName(String eventName) {\n             this.eventName = eventName;\n             return this;\n         }\n \n         /**\n-        * Builder method for processDefinitionId parameter.\n-        * @param processDefinitionId field to set\n-        * @return builder\n-        */\n+         * Builder method for processDefinitionId parameter.\n+         *\n+         * @param processDefinitionId field to set\n+         * @return builder\n+         */\n         public Builder withProcessDefinitionId(String processDefinitionId) {\n             this.processDefinitionId = processDefinitionId;\n             return this;\n         }\n \n         /**\n-        * Builder method for configuration parameter.\n-        * @param configuration field to set\n-        * @return builder\n-        */\n+         * Builder method for configuration parameter.\n+         *\n+         * @param configuration field to set\n+         * @return builder\n+         */\n         public Builder withConfiguration(String configuration) {\n             this.configuration = configuration;\n             return this;\n         }\n \n         /**\n-        * Builder method for activityId parameter.\n-        * @param activityId field to set\n-        * @return builder\n-        */\n+         * Builder method for activityId parameter.\n+         *\n+         * @param activityId field to set\n+         * @return builder\n+         */\n         public Builder withActivityId(String activityId) {\n             this.activityId = activityId;\n             return this;\n         }\n \n         /**\n-        * Builder method for created parameter.\n-        * @param created field to set\n-        * @return builder\n-        */\n+         * Builder method for created parameter.\n+         *\n+         * @param created field to set\n+         * @return builder\n+         */\n         public Builder withCreated(Date created) {\n             this.created = created;\n             return this;\n         }\n \n         /**\n-        * Builder method of the builder.\n-        * @return built class\n-        */\n+         * Builder method of the builder.\n+         *\n+         * @return built class\n+         */\n         public StartMessageSubscriptionImpl build() {\n             return new StartMessageSubscriptionImpl(this);\n         }\n",
            "diff_size": 54
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "24",
                    "severity": "error",
                    "message": "'CLASS_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "97",
                    "severity": "error",
                    "message": "Line is longer than 240 characters (found 268).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "98",
                    "severity": "error",
                    "message": "Line is longer than 240 characters (found 275).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "104",
                    "severity": "error",
                    "message": "Line is longer than 240 characters (found 311).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "108",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 4, expected is 2, indentation should be the same level as line 113.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "117",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 4, expected is 2, indentation should be the same level as line 123.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "127",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 4, expected is 2, indentation should be the same level as line 131.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "157",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 8, expected is 4, indentation should be the same level as line 163.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "168",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 8, expected is 4, indentation should be the same level as line 174.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "179",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 8, expected is 4, indentation should be the same level as line 185.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "190",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 8, expected is 4, indentation should be the same level as line 196.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "201",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 8, expected is 4, indentation should be the same level as line 207.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "212",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 8, expected is 4, indentation should be the same level as line 218.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "223",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 8, expected is 4, indentation should be the same level as line 228.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/116/StartMessageSubscriptionImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/codebuff/116/StartMessageSubscriptionImpl.java\nindex 55f1fce0c53..2482cd389c5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/116/StartMessageSubscriptionImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/codebuff/116/StartMessageSubscriptionImpl.java\n@@ -18,211 +18,215 @@ package org.activiti.api.runtime.model.impl;\n \n import java.util.Date;\n import java.util.Objects;\n-\n import org.activiti.api.process.model.StartMessageSubscription;\n \n+\n public class StartMessageSubscriptionImpl implements StartMessageSubscription {\n-    \n-    private String id;\n-    private String eventName;\n-    private String processDefinitionId;\n-    private String configuration;\n-    private String activityId;\n-    private Date created;\n \n-    private StartMessageSubscriptionImpl(Builder builder) {\n-        this.id = builder.id;\n-        this.eventName = builder.eventName;\n-        this.processDefinitionId = builder.processDefinitionId;\n-        this.configuration = builder.configuration;\n-        this.activityId = builder.activityId;\n-        this.created = builder.created;\n-    }\n+  private String id;\n \n-    StartMessageSubscriptionImpl() {\n-    }\n-    \n-    public String getId() {\n-        return id;\n-    }\n-    \n-    public String getEventName() {\n-        return eventName;\n-    }\n-    \n-    public String getProcessDefinitionId() {\n-        return processDefinitionId;\n-    }\n-    \n-    public String getConfiguration() {\n-        return configuration;\n-    }\n-    \n-    public String getActivityId() {\n-        return activityId;\n-    }\n-    \n-    public Date getCreated() {\n-        return created;\n-    }\n+  private String eventName;\n \n+  private String processDefinitionId;\n \n-    @Override\n-    public int hashCode() {\n-        return Objects.hash(activityId,\n-                            configuration,\n-                            created,\n-                            eventName,\n-                            id,\n-                            processDefinitionId);\n-    }\n+  private String configuration;\n \n-    @Override\n-    public boolean equals(Object obj) {\n-        if (this == obj) {\n-            return true;\n-        }\n-        if (obj == null) {\n-            return false;\n-        }\n-        if (getClass() != obj.getClass()) {\n-            return false;\n-        }\n-        StartMessageSubscriptionImpl other = (StartMessageSubscriptionImpl) obj;\n-        return Objects.equals(activityId, other.activityId) && \n-                Objects.equals(configuration, other.configuration) && \n-                Objects.equals(created, other.created) && \n-                Objects.equals(eventName, other.eventName) && \n-                Objects.equals(id, other.id) && \n-                Objects.equals(processDefinitionId, other.processDefinitionId);\n-    }\n+  private String activityId;\n+\n+  private Date created;\n+\n+  private StartMessageSubscriptionImpl(Builder builder) {\n+    this.id = builder.id;\n+    this.eventName = builder.eventName;\n+    this.processDefinitionId = builder.processDefinitionId;\n+    this.configuration = builder.configuration;\n+    this.activityId = builder.activityId;\n+    this.created = builder.created;\n+  }\n+\n+  StartMessageSubscriptionImpl() {\n+  }\n \n-    @Override\n-    public String toString() {\n-        StringBuilder builder2 = new StringBuilder();\n-        builder2.append(\"MessageEventSubscriptionImpl [id=\")\n-                .append(id)\n-                .append(\", eventName=\")\n-                .append(eventName)\n-                .append(\", processDefinitionId=\")\n-                .append(processDefinitionId)\n-                .append(\", configuration=\")\n-                .append(configuration)\n-                .append(\", activityId=\")\n-                .append(activityId)\n-                .append(\", created=\")\n-                .append(created)\n-                .append(\"]\");\n-        return builder2.toString();\n+  public String getId() {\n+    return id;\n+  }\n+\n+  public String getEventName() {\n+    return eventName;\n+  }\n+\n+  public String getProcessDefinitionId() {\n+    return processDefinitionId;\n+  }\n+\n+  public String getConfiguration() {\n+    return configuration;\n+  }\n+\n+  public String getActivityId() {\n+    return activityId;\n+  }\n+\n+  public Date getCreated() {\n+    return created;\n+  }\n+\n+  @Override\n+  public int hashCode() {\n+    return Objects.hash(activityId,\n+                        configuration,\n+                        created,\n+                        eventName,\n+                        id,\n+                        processDefinitionId);\n+  }\n+\n+  @Override\n+  public boolean equals(Object obj) {\n+    if (this == obj) {\n+      return true;\n+    }\n+    if (obj == null) {\n+      return false;\n+    }\n+    if (getClass() != obj.getClass()) {\n+      return false;\n     }\n \n+    StartMessageSubscriptionImpl other = (StartMessageSubscriptionImpl) obj;\n+    return Objects.equals(activityId, other.activityId) && Objects.equals(configuration, other.configuration) && Objects.equals(created, other.created) && Objects.equals(eventName, other.eventName) && Objects.equals(id, other.id) && Objects.equals(processDefinitionId,\n+                                                                                                                                                                                                                                                        other.processDefinitionId);\n+  }\n+\n+  @Override\n+  public String toString() {\n+    StringBuilder builder2 = new StringBuilder();\n+    builder2.append(\"MessageEventSubscriptionImpl [id=\").append(id).append(\", eventName=\").append(eventName).append(\", processDefinitionId=\").append(processDefinitionId).append(\", configuration=\").append(configuration).append(\", activityId=\").append(activityId).append(\", created=\").append(created).append(\"]\");\n+    return builder2.toString();\n+  }\n+\n     /**\n      * Creates a builder to build {@link StartMessageSubscriptionImpl}.\n      * @return created builder\n      */\n-    public static Builder builder() {\n-        return new Builder();\n-    }\n+\n+  public static Builder builder() {\n+    return new Builder();\n+  }\n     \n     /**\n      * Creates a builder to build {@link StartMessageSubscriptionImpl} and initialize it with the given object.\n      * @param startMessageSubscriptionImpl to initialize the builder with\n      * @return created builder\n      */\n-    public static Builder builderFrom(StartMessageSubscriptionImpl startMessageSubscriptionImpl) {\n-        return new Builder(startMessageSubscriptionImpl);\n-    }\n+\n+  public static Builder builderFrom(StartMessageSubscriptionImpl startMessageSubscriptionImpl) {\n+    return new Builder(startMessageSubscriptionImpl);\n+  }\n \n     /**\n      * Builder to build {@link StartMessageSubscriptionImpl}.\n      */\n-    public static final class Builder {\n-\n-        private String id;\n-        private String eventName;\n-        private String processDefinitionId;\n-        private String configuration;\n-        private String activityId;\n-        private Date created;\n-\n-        public Builder() {\n-        }\n-\n-        private Builder(StartMessageSubscriptionImpl startMessageSubscriptionImpl) {\n-            this.id = startMessageSubscriptionImpl.id;\n-            this.eventName = startMessageSubscriptionImpl.eventName;\n-            this.processDefinitionId = startMessageSubscriptionImpl.processDefinitionId;\n-            this.configuration = startMessageSubscriptionImpl.configuration;\n-            this.activityId = startMessageSubscriptionImpl.activityId;\n-            this.created = startMessageSubscriptionImpl.created;\n-        }\n+\n+  public static final class Builder {\n+\n+    private String id;\n+\n+    private String eventName;\n+\n+    private String processDefinitionId;\n+\n+    private String configuration;\n+\n+    private String activityId;\n+\n+    private Date created;\n+\n+    public Builder() {\n+    }\n+\n+    private Builder(StartMessageSubscriptionImpl startMessageSubscriptionImpl) {\n+      this.id = startMessageSubscriptionImpl.id;\n+      this.eventName = startMessageSubscriptionImpl.eventName;\n+      this.processDefinitionId = startMessageSubscriptionImpl.processDefinitionId;\n+      this.configuration = startMessageSubscriptionImpl.configuration;\n+      this.activityId = startMessageSubscriptionImpl.activityId;\n+      this.created = startMessageSubscriptionImpl.created;\n+    }\n \n         /**\n         * Builder method for id parameter.\n         * @param id field to set\n         * @return builder\n         */\n-        public Builder withId(String id) {\n-            this.id = id;\n-            return this;\n-        }\n+\n+    public Builder withId(String id) {\n+      this.id = id;\n+      return this;\n+    }\n \n         /**\n         * Builder method for eventName parameter.\n         * @param eventName field to set\n         * @return builder\n         */\n-        public Builder withEventName(String eventName) {\n-            this.eventName = eventName;\n-            return this;\n-        }\n+\n+    public Builder withEventName(String eventName) {\n+      this.eventName = eventName;\n+      return this;\n+    }\n \n         /**\n         * Builder method for processDefinitionId parameter.\n         * @param processDefinitionId field to set\n         * @return builder\n         */\n-        public Builder withProcessDefinitionId(String processDefinitionId) {\n-            this.processDefinitionId = processDefinitionId;\n-            return this;\n-        }\n+\n+    public Builder withProcessDefinitionId(String processDefinitionId) {\n+      this.processDefinitionId = processDefinitionId;\n+      return this;\n+    }\n \n         /**\n         * Builder method for configuration parameter.\n         * @param configuration field to set\n         * @return builder\n         */\n-        public Builder withConfiguration(String configuration) {\n-            this.configuration = configuration;\n-            return this;\n-        }\n+\n+    public Builder withConfiguration(String configuration) {\n+      this.configuration = configuration;\n+      return this;\n+    }\n \n         /**\n         * Builder method for activityId parameter.\n         * @param activityId field to set\n         * @return builder\n         */\n-        public Builder withActivityId(String activityId) {\n-            this.activityId = activityId;\n-            return this;\n-        }\n+\n+    public Builder withActivityId(String activityId) {\n+      this.activityId = activityId;\n+      return this;\n+    }\n \n         /**\n         * Builder method for created parameter.\n         * @param created field to set\n         * @return builder\n         */\n-        public Builder withCreated(Date created) {\n-            this.created = created;\n-            return this;\n-        }\n+\n+    public Builder withCreated(Date created) {\n+      this.created = created;\n+      return this;\n+    }\n \n         /**\n         * Builder method of the builder.\n         * @return built class\n         */\n-        public StartMessageSubscriptionImpl build() {\n-            return new StartMessageSubscriptionImpl(this);\n-        }\n+\n+    public StartMessageSubscriptionImpl build() {\n+      return new StartMessageSubscriptionImpl(this);\n     }\n-}\n+  }\n+}\n\\ No newline at end of file\n",
            "diff_size": 197
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/116/StartMessageSubscriptionImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_random/116/StartMessageSubscriptionImpl.java\nindex 55f1fce0c53..ed0a9dbae8f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/116/StartMessageSubscriptionImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_random/116/StartMessageSubscriptionImpl.java\n@@ -66,7 +66,6 @@ public class StartMessageSubscriptionImpl implements StartMessageSubscription {\n         return created;\n     }\n \n-\n     @Override\n     public int hashCode() {\n         return Objects.hash(activityId,\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/116/StartMessageSubscriptionImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_three_grams/116/StartMessageSubscriptionImpl.java\nindex 55f1fce0c53..ed0a9dbae8f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/116/StartMessageSubscriptionImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_three_grams/116/StartMessageSubscriptionImpl.java\n@@ -66,7 +66,6 @@ public class StartMessageSubscriptionImpl implements StartMessageSubscription {\n         return created;\n     }\n \n-\n     @Override\n     public int hashCode() {\n         return Objects.hash(activityId,\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "intellij",
        "naturalize",
        "codebuff"
    ]
}
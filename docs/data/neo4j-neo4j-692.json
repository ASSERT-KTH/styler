{
    "project_name": "neo4j-neo4j",
    "error_id": "692",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "49",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/692/ValueMerger.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/692/ValueMerger.java\nindex 81ad7aa105c..de68d62f76e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/692/ValueMerger.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/692/ValueMerger.java\n@@ -17,24 +17,25 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.index.internal.gbptree;\n \n /**\n  * Decides what to do when inserting key which already exists in index. Different implementations of\n  * {@link ValueMerger} can result in unique/non-unique indexes for example.\n  *\n- * @param <KEY> type of keys to merge.\n+ * @param <KEY>   type of keys to merge.\n  * @param <VALUE> type of values to merge.\n  */\n-public interface ValueMerger<KEY,VALUE>\n+public interface ValueMerger<KEY, VALUE>\n {\n     /**\n      * Merge an existing value with a new value.\n      *\n-     * @param existingKey existing key\n-     * @param newKey new key\n+     * @param existingKey   existing key\n+     * @param newKey        new key\n      * @param existingValue existing value\n-     * @param newValue new value\n+     * @param newValue      new value\n      * @return result of the merge. What the various results mean:\n      * <ul>\n      *     <li>{@link MergeResult#UNCHANGED} the existing value will remain unchanged, i.e. no change to the tree whatsoever</li>\n@@ -45,7 +46,7 @@ public interface ValueMerger<KEY,VALUE>\n      *     The existing key and value will be removed from the tree</li>\n      * </ul>\n      */\n-    MergeResult merge( KEY existingKey, KEY newKey, VALUE existingValue, VALUE newValue );\n+    MergeResult merge(KEY existingKey, KEY newKey, VALUE existingValue, VALUE newValue);\n \n     /**\n      * Result of a merge, i.e. what the (mutable) values passed into {@link #merge(Object, Object, Object, Object)} mean when the call is completed.\n",
            "diff_size": 7
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
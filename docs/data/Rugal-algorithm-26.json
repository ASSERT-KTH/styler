{
    "project_name": "Rugal-algorithm",
    "error_id": "26",
    "information": {
        "errors": [
            {
                "line": "16",
                "severity": "warning",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * limitations under the License.\n */\npackage ga.rugal.lintcode.amazon.longestpalindromicsubstring;\n\n/**\n * https://www.lintcode.com/problem/longest-palindromic-substring",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/errored/1/26/Solution.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/styler/26/Solution.java\nindex e1c1871ec01..9314f6f08ca 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/errored/1/26/Solution.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/styler/26/Solution.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\r\n  * limitations under the License.\r\n  */\r\n+\r\n package ga.rugal.lintcode.amazon.longestpalindromicsubstring;\r\n \r\n /**\r\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/errored/1/26/Solution.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/intellij/26/Solution.java\nindex e1c1871ec01..9314f6f08ca 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/errored/1/26/Solution.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/intellij/26/Solution.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\r\n  * limitations under the License.\r\n  */\r\n+\r\n package ga.rugal.lintcode.amazon.longestpalindromicsubstring;\r\n \r\n /**\r\n",
            "diff_size": 1
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 0, expected is 3, indentation should be the same level as line 15.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "15",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/errored/1/26/Solution.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/naturalize/26/Solution.java\nindex e1c1871ec01..bd04b7e3d2f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/errored/1/26/Solution.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/naturalize/26/Solution.java\n@@ -12,8 +12,7 @@\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n  * See the License for the specific language governing permissions and\r\n  * limitations under the License.\r\n- */\r\n-package ga.rugal.lintcode.amazon.longestpalindromicsubstring;\r\n+ */package ga.rugal.lintcode.amazon.longestpalindromicsubstring;\r\n \r\n /**\r\n  * https://www.lintcode.com/problem/longest-palindromic-substring\r\n@@ -53,4 +52,4 @@ public class Solution {\n     }\r\n     return true;\r\n   }\r\n-}\r\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "16",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/errored/1/26/Solution.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/codebuff/26/Solution.java\nindex e1c1871ec01..1a20b6bd502 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/errored/1/26/Solution.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/codebuff/26/Solution.java\n@@ -19,38 +19,40 @@ package ga.rugal.lintcode.amazon.longestpalindromicsubstring;\n  * https://www.lintcode.com/problem/longest-palindromic-substring\r\n  *\r\n  * @author rugal\r\n- */\r\n-public class Solution {\r\n-\r\n-  public String longestPalindrome(final String s) {\r\n-    if (s == null || s.isEmpty()) {\r\n-      return \"\";\r\n-    }\r\n-    int length = 1;\r\n-    String result = s.substring(0, 1);\r\n-    for (int i = 0; i < s.length(); ++i) {\r\n-      if (this.isPalindrome(s, i - length - 1, i)) {\r\n-        result = s.substring(i - length - 1, i + 1);\r\n-        length += 2;\r\n-        continue;\r\n-      }\r\n-      if (this.isPalindrome(s, i - length, i)) {\r\n-        result = s.substring(i - length, i + 1);\r\n-        ++length;\r\n-      }\r\n-    }\r\n-    return result;\r\n-  }\r\n-\r\n-  private boolean isPalindrome(final String s, int begin, int end) {\r\n-    if (begin < 0) {\r\n-      return false;\r\n-    }\r\n-    while (begin < end) {\r\n-      if (s.charAt(begin++) != s.charAt(end--)) {\r\n-        return false;\r\n-      }\r\n-    }\r\n-    return true;\r\n-  }\r\n-}\r\n+ */\n+\n+\n+public class Solution {\n+\n+  public String longestPalindrome(final String s) {\n+    if (s == null || s.isEmpty()) {\n+      return \"\";\n+    }\n+    int length = 1;\n+    String result = s.substring(0, 1);\n+    for (int i = 0; i < s.length(); ++i) {\n+      if (this.isPalindrome(s, i - length - 1, i)) {\n+        result = s.substring(i - length - 1, i + 1);\n+        length += 2;\n+        continue;\n+      }\n+      if (this.isPalindrome(s, i - length, i)) {\n+        result = s.substring(i - length, i + 1);\n+        ++length;\n+      }\n+    }\n+    return result;\n+  }\n+\n+  private boolean isPalindrome(final String s, int begin, int end) {\n+    if (begin < 0) {\n+      return false;\n+    }\n+    while (begin < end) {\n+      if (s.charAt(begin++) != s.charAt(end--)) {\n+        return false;\n+      }\n+    }\n+    return true;\n+  }\n+}\n\\ No newline at end of file\n",
            "diff_size": 37
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/errored/1/26/Solution.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/styler_random/26/Solution.java\nindex e1c1871ec01..9314f6f08ca 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/errored/1/26/Solution.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/styler_random/26/Solution.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\r\n  * limitations under the License.\r\n  */\r\n+\r\n package ga.rugal.lintcode.amazon.longestpalindromicsubstring;\r\n \r\n /**\r\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/errored/1/26/Solution.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/styler_three_grams/26/Solution.java\nindex e1c1871ec01..9314f6f08ca 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/errored/1/26/Solution.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/styler_three_grams/26/Solution.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\r\n  * limitations under the License.\r\n  */\r\n+\r\n package ga.rugal.lintcode.amazon.longestpalindromicsubstring;\r\n \r\n /**\r\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
{
    "project_name": "decorators-squad-eo-yaml",
    "error_id": "19",
    "information": {
        "errors": [
            {
                "line": "353",
                "severity": "error",
                "message": "Line is longer than 80 characters (found 88).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "    public void printsReadYamlCommentsOnMapOrSequence() throws Exception {\n        final YamlMapping read = Yaml.createYamlInput(\n                new File(\"src/test/resources/printing_tests/yamlCommentsOnMapOrSeq.txt\")\n        ).readYamlMapping();\n        MatcherAssert.assertThat(\n                read.toString(),",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "353",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 84).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-eo-yaml/errored/1/19/YamlMappingPrintTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-eo-yaml/styler/19/YamlMappingPrintTest.java\nindex 7790f5abcaa..9bcf94eb2f2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-eo-yaml/errored/1/19/YamlMappingPrintTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-eo-yaml/styler/19/YamlMappingPrintTest.java\n@@ -350,7 +350,7 @@ public final class YamlMappingPrintTest {\n     @Test\n     public void printsReadYamlCommentsOnMapOrSequence() throws Exception {\n         final YamlMapping read = Yaml.createYamlInput(\n-                new File(\"src/test/resources/printing_tests/yamlCommentsOnMapOrSeq.txt\")\n+            new File(\"src/test/resources/printing_tests/yamlCommentsOnMapOrSeq.txt\")\n         ).readYamlMapping();\n         MatcherAssert.assertThat(\n                 read.toString(),\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-eo-yaml/errored/1/19/YamlMappingPrintTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-eo-yaml/intellij/19/YamlMappingPrintTest.java\nindex 7790f5abcaa..e7040c09832 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-eo-yaml/errored/1/19/YamlMappingPrintTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-eo-yaml/intellij/19/YamlMappingPrintTest.java\n@@ -1,17 +1,17 @@\n /**\n  * Copyright (c) 2016-2020, Mihai Emil Andronache\n  * All rights reserved.\n- *\n+ * <p>\n  * Redistribution and use in source and binary forms, with or without\n- *  modification, are permitted provided that the following conditions are met:\n+ * modification, are permitted provided that the following conditions are met:\n  * Redistributions of source code must retain the above copyright notice, this\n- *  list of conditions and the following disclaimer.\n- *  Redistributions in binary form must reproduce the above copyright notice,\n- *  this list of conditions and the following disclaimer in the documentation\n- *  and/or other materials provided with the distribution.\n+ * list of conditions and the following disclaimer.\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following disclaimer in the documentation\n+ * and/or other materials provided with the distribution.\n  * Neither the name of the copyright holder nor the names of its\n- *  contributors may be used to endorse or promote products derived from\n- *  this software without specific prior written permission.\n+ * contributors may be used to endorse or promote products derived from\n+ * this software without specific prior written permission.\n  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n  * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n@@ -25,6 +25,7 @@\n  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n  * SUCH DAMAGE.\n  */\n+\n package com.amihaiemil.eoyaml;\n \n import org.apache.commons.io.IOUtils;\n@@ -59,7 +60,8 @@ public final class YamlMappingPrintTest {\n     @Test\n     public void printsReadYamlMappingWithIndentedComment() throws Exception {\n         final YamlMapping read = Yaml.createYamlInput(\n-            new File(\"src/test/resources/printing_tests/yamlMappingIndentedComments.yml\")\n+            new File(\n+                \"src/test/resources/printing_tests/yamlMappingIndentedComments.yml\")\n         ).readYamlMapping();\n         MatcherAssert.assertThat(\n             read.toString(),\n@@ -77,7 +79,8 @@ public final class YamlMappingPrintTest {\n     @Test\n     public void printsReadYamlMappingWithAllNodes() throws Exception {\n         final YamlMapping read = Yaml.createYamlInput(\n-            new File(\"src/test/resources/printing_tests/yamlMappingAllNodes.txt\")\n+            new File(\n+                \"src/test/resources/printing_tests/yamlMappingAllNodes.txt\")\n         ).readYamlMapping();\n         MatcherAssert.assertThat(\n             read.toString(),\n@@ -332,13 +335,14 @@ public final class YamlMappingPrintTest {\n     @Test\n     public void printsReadYamlDuplicatedComments() throws Exception {\n         final YamlMapping read = Yaml.createYamlInput(\n-                new File(\"src/test/resources/printing_tests/yamlDuplicatedComments.txt\")\n+            new File(\n+                \"src/test/resources/printing_tests/yamlDuplicatedComments.txt\")\n         ).readYamlMapping();\n         MatcherAssert.assertThat(\n-                read.toString(),\n-                Matchers.equalTo(\n-                        this.readExpected(\"yamlDuplicatedCommentsRoundTrip.txt\")\n-                )\n+            read.toString(),\n+            Matchers.equalTo(\n+                this.readExpected(\"yamlDuplicatedCommentsRoundTrip.txt\")\n+            )\n         );\n     }\n \n@@ -350,13 +354,14 @@ public final class YamlMappingPrintTest {\n     @Test\n     public void printsReadYamlCommentsOnMapOrSequence() throws Exception {\n         final YamlMapping read = Yaml.createYamlInput(\n-                new File(\"src/test/resources/printing_tests/yamlCommentsOnMapOrSeq.txt\")\n+            new File(\n+                \"src/test/resources/printing_tests/yamlCommentsOnMapOrSeq.txt\")\n         ).readYamlMapping();\n         MatcherAssert.assertThat(\n-                read.toString(),\n-                Matchers.equalTo(\n-                        this.readExpected(\"yamlCommentsOnMapOrSeqRoundTrip.txt\")\n-                )\n+            read.toString(),\n+            Matchers.equalTo(\n+                this.readExpected(\"yamlCommentsOnMapOrSeqRoundTrip.txt\")\n+            )\n         );\n     }\n \n@@ -373,11 +378,11 @@ public final class YamlMappingPrintTest {\n                 \"src/test/resources/printing_tests/yamlCommentsOnMapAndSeq.txt\")\n         ).readYamlMapping();\n         MatcherAssert.assertThat(\n-                read.toString(),\n-                Matchers.equalTo(\n-                        this.readExpected(\n-                                \"yamlCommentsOnMapAndSeqRoundTrip.txt\")\n-                )\n+            read.toString(),\n+            Matchers.equalTo(\n+                this.readExpected(\n+                    \"yamlCommentsOnMapAndSeqRoundTrip.txt\")\n+            )\n         );\n     }\n \n@@ -394,7 +399,7 @@ public final class YamlMappingPrintTest {\n             IOUtils.toByteArray(\n                 new FileInputStream(\n                     new File(\n-                    \"src/test/resources/printing_tests/\" + fileName\n+                        \"src/test/resources/printing_tests/\" + fileName\n                     )\n                 )\n             )\n",
            "diff_size": 31
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "134",
                    "severity": "error",
                    "message": "'Yaml' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "144",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "160",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "165",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "182",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "187",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "203",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "208",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "225",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "230",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "246",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "251",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "268",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "273",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "295",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "305",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "353",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 91).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-eo-yaml/errored/1/19/YamlMappingPrintTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-eo-yaml/naturalize/19/YamlMappingPrintTest.java\nindex 7790f5abcaa..b817b47d819 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-eo-yaml/errored/1/19/YamlMappingPrintTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-eo-yaml/naturalize/19/YamlMappingPrintTest.java\n@@ -63,9 +63,7 @@ public final class YamlMappingPrintTest {\n         ).readYamlMapping();\n         MatcherAssert.assertThat(\n             read.toString(),\n-            Matchers.equalTo(\n-                this.readExpected(\"yamlMappingIndentedComments.yml\")\n-            )\n+            Matchers.equalTo(this.readExpected(\"yamlMappingIndentedComments.yml\"))\n         );\n     }\n \n@@ -81,9 +79,7 @@ public final class YamlMappingPrintTest {\n         ).readYamlMapping();\n         MatcherAssert.assertThat(\n             read.toString(),\n-            Matchers.equalTo(\n-                this.readExpected(\"yamlMappingAllNodes.txt\")\n-            )\n+            Matchers.equalTo(this.readExpected(\"yamlMappingAllNodes.txt\"))\n         );\n     }\n \n@@ -102,63 +98,52 @@ public final class YamlMappingPrintTest {\n                     .addLine(\"literal\")\n                     .addLine(\"block\")\n                     .addLine(\"scalar\")\n-                    .buildLiteralBlockScalar()\n-            )\n+                    .buildLiteralBlockScalar())\n             .add(\n                 \"key3\",\n                 Yaml.createYamlScalarBuilder()\n                     .addLine(\"a scalar folded\")\n                     .addLine(\"on more lines\")\n                     .addLine(\"for readability\")\n-                    .buildFoldedBlockScalar()\n-            )\n+                    .buildFoldedBlockScalar())\n             .add(\n                 \"key4\",\n                 Yaml.createYamlMappingBuilder()\n                     .add(\"key\", \"value\")\n-                    .build()\n-            )\n+                    .build())\n             .add(\n                 \"key5\",\n                 Yaml.createYamlSequenceBuilder()\n                     .add(\"a sequence\")\n                     .add(\"of plain scalars\")\n                     .add(\"as value\")\n-                    .build()\n-            )\n+                    .build())\n             .add(\n                 \"key6\",\n                 Yaml.createYamlMappingBuilder()\n-                    .build()\n-            )\n+                    .build())\n             .add(\n                 \"key7\",\n                 Yaml.createYamlSequenceBuilder()\n-                    .build()\n-            )\n+                    .build())\n             .add(\n                 Yaml.createYamlSequenceBuilder()\n                     .add(\"Atlanta Braves\")\n                     .add(\"New York Yankees\")\n                     .build(),\n-                Yaml.createYamlSequenceBuilder()\n+Yaml.createYamlSequenceBuilder()\n                     .add(\"2001-07-02\")\n                     .add(\"2001-08-12\")\n                     .add(\"2001-08-14\")\n-                    .build()\n-            )\n+                    .build())\n             .add(\n                 Yaml.createYamlMappingBuilder()\n                     .add(\"map\", \"asKey\")\n-                    .build(),\n-                \"scalar\"\n-            )\n+                    .build(), \"scalar\")\n             .build();\n-        MatcherAssert.assertThat(\n+MatcherAssert.assertThat(\n             built.toString(),\n-            Matchers.equalTo(\n-                this.readExpected(\"yamlMappingAllNodes.txt\")\n-            )\n+            Matchers.equalTo(this.readExpected(\"yamlMappingAllNodes.txt\"))\n         );\n     }\n \n@@ -172,12 +157,12 @@ public final class YamlMappingPrintTest {\n             .add(\"seq\", Yaml.createYamlSequenceBuilder().build())\n             .add(\"anotherKey\", \"value2\")\n             .build();\n-        final StringBuilder expected = new StringBuilder();\n+final StringBuilder expected = new StringBuilder();\n         expected\n             .append(\"key: value1\").append(System.lineSeparator())\n             .append(\"seq: []\").append(System.lineSeparator())\n             .append(\"anotherKey: value2\");\n-        MatcherAssert.assertThat(\n+MatcherAssert.assertThat(\n             map.toString(),\n             Matchers.equalTo(expected.toString())\n         );\n@@ -194,12 +179,12 @@ public final class YamlMappingPrintTest {\n             .add(\"seq\", seq)\n             .add(\"anotherKey\", \"value2\")\n             .build();\n-        final StringBuilder expected = new StringBuilder();\n+final StringBuilder expected = new StringBuilder();\n         expected\n             .append(\"key: value1\").append(System.lineSeparator())\n             .append(\"seq: null\").append(System.lineSeparator())\n             .append(\"anotherKey: value2\");\n-        MatcherAssert.assertThat(\n+MatcherAssert.assertThat(\n             map.toString(),\n             Matchers.equalTo(expected.toString())\n         );\n@@ -215,12 +200,12 @@ public final class YamlMappingPrintTest {\n             .add(\"map\", Yaml.createYamlMappingBuilder().build())\n             .add(\"anotherKey\", \"value2\")\n             .build();\n-        final StringBuilder expected = new StringBuilder();\n+final StringBuilder expected = new StringBuilder();\n         expected\n             .append(\"key: value1\").append(System.lineSeparator())\n             .append(\"map: {}\").append(System.lineSeparator())\n             .append(\"anotherKey: value2\");\n-        MatcherAssert.assertThat(\n+MatcherAssert.assertThat(\n             map.toString(),\n             Matchers.equalTo(expected.toString())\n         );\n@@ -237,12 +222,12 @@ public final class YamlMappingPrintTest {\n             .add(\"map\", nullMap)\n             .add(\"anotherKey\", \"value2\")\n             .build();\n-        final StringBuilder expected = new StringBuilder();\n+final StringBuilder expected = new StringBuilder();\n         expected\n             .append(\"key: value1\").append(System.lineSeparator())\n             .append(\"map: null\").append(System.lineSeparator())\n             .append(\"anotherKey: value2\");\n-        MatcherAssert.assertThat(\n+MatcherAssert.assertThat(\n             map.toString(),\n             Matchers.equalTo(expected.toString())\n         );\n@@ -258,12 +243,12 @@ public final class YamlMappingPrintTest {\n             .add(\"scalar\", Yaml.createYamlScalarBuilder().buildPlainScalar())\n             .add(\"anotherKey\", \"value2\")\n             .build();\n-        final StringBuilder expected = new StringBuilder();\n+final StringBuilder expected = new StringBuilder();\n         expected\n             .append(\"key: value1\").append(System.lineSeparator())\n             .append(\"scalar: null\").append(System.lineSeparator())\n             .append(\"anotherKey: value2\");\n-        MatcherAssert.assertThat(\n+MatcherAssert.assertThat(\n             map.toString(),\n             Matchers.equalTo(expected.toString())\n         );\n@@ -280,12 +265,12 @@ public final class YamlMappingPrintTest {\n             .add(\"scalar\", nullScalar)\n             .add(\"anotherKey\", \"value2\")\n             .build();\n-        final StringBuilder expected = new StringBuilder();\n+final StringBuilder expected = new StringBuilder();\n         expected\n             .append(\"key: value1\").append(System.lineSeparator())\n             .append(\"scalar: null\").append(System.lineSeparator())\n             .append(\"anotherKey: value2\");\n-        MatcherAssert.assertThat(\n+MatcherAssert.assertThat(\n             map.toString(),\n             Matchers.equalTo(expected.toString())\n         );\n@@ -307,7 +292,7 @@ public final class YamlMappingPrintTest {\n             .add(\"degrees\", \"-15C\")\n             .add(\"percentage\", \"3% reads \\\"3 per cent\\\"\")\n             .build();\n-        final StringBuilder expected = new StringBuilder();\n+final StringBuilder expected = new StringBuilder();\n         expected\n             .append(\"time: \\\"15:00\\\"\").append(System.lineSeparator())\n             .append(\"color: \\\"#314132\\\"\").append(System.lineSeparator())\n@@ -317,7 +302,7 @@ public final class YamlMappingPrintTest {\n             .append(\"xor: \\\"a || b\\\"\").append(System.lineSeparator())\n             .append(\"degrees: \\\"-15C\\\"\").append(System.lineSeparator())\n             .append(\"percentage: '3% reads \\\"3 per cent\\\"'\");\n-        MatcherAssert.assertThat(\n+MatcherAssert.assertThat(\n             map.toString(),\n             Matchers.equalTo(expected.toString())\n         );\n@@ -331,14 +316,10 @@ public final class YamlMappingPrintTest {\n      */\n     @Test\n     public void printsReadYamlDuplicatedComments() throws Exception {\n-        final YamlMapping read = Yaml.createYamlInput(\n-                new File(\"src/test/resources/printing_tests/yamlDuplicatedComments.txt\")\n+        final YamlMapping read = Yaml.createYamlInput(new File(\"src/test/resources/printing_tests/yamlDuplicatedComments.txt\")\n         ).readYamlMapping();\n-        MatcherAssert.assertThat(\n-                read.toString(),\n-                Matchers.equalTo(\n-                        this.readExpected(\"yamlDuplicatedCommentsRoundTrip.txt\")\n-                )\n+        MatcherAssert.assertThat(read.toString(),\n+                Matchers.equalTo(this.readExpected(\"yamlDuplicatedCommentsRoundTrip.txt\"))\n         );\n     }\n \n@@ -349,14 +330,10 @@ public final class YamlMappingPrintTest {\n      */\n     @Test\n     public void printsReadYamlCommentsOnMapOrSequence() throws Exception {\n-        final YamlMapping read = Yaml.createYamlInput(\n-                new File(\"src/test/resources/printing_tests/yamlCommentsOnMapOrSeq.txt\")\n+        final YamlMapping read = Yaml.createYamlInput(new File(\"src/test/resources/printing_tests/yamlCommentsOnMapOrSeq.txt\")\n         ).readYamlMapping();\n-        MatcherAssert.assertThat(\n-                read.toString(),\n-                Matchers.equalTo(\n-                        this.readExpected(\"yamlCommentsOnMapOrSeqRoundTrip.txt\")\n-                )\n+        MatcherAssert.assertThat(read.toString(),\n+                Matchers.equalTo(this.readExpected(\"yamlCommentsOnMapOrSeqRoundTrip.txt\"))\n         );\n     }\n \n@@ -372,12 +349,8 @@ public final class YamlMappingPrintTest {\n             new File(\n                 \"src/test/resources/printing_tests/yamlCommentsOnMapAndSeq.txt\")\n         ).readYamlMapping();\n-        MatcherAssert.assertThat(\n-                read.toString(),\n-                Matchers.equalTo(\n-                        this.readExpected(\n-                                \"yamlCommentsOnMapAndSeqRoundTrip.txt\")\n-                )\n+        MatcherAssert.assertThat(read.toString(),\n+                Matchers.equalTo(this.readExpected(\"yamlCommentsOnMapAndSeqRoundTrip.txt\"))\n         );\n     }\n \n@@ -394,10 +367,9 @@ public final class YamlMappingPrintTest {\n             IOUtils.toByteArray(\n                 new FileInputStream(\n                     new File(\n-                    \"src/test/resources/printing_tests/\" + fileName\n-                    )\n-                )\n-            )\n+    \"src/test/resources/printing_tests/\" + fileName\n+    )\n+                ))\n         );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 67
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "70",
                    "severity": "error",
                    "message": "'read' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "71",
                    "severity": "error",
                    "message": "'Matchers' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "72",
                    "severity": "error",
                    "message": "'this' has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "73",
                    "severity": "error",
                    "message": "')' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "74",
                    "severity": "error",
                    "message": "'method call rparen' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "91",
                    "severity": "error",
                    "message": "'read' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "92",
                    "severity": "error",
                    "message": "'Matchers' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "93",
                    "severity": "error",
                    "message": "'this' has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "94",
                    "severity": "error",
                    "message": "')' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "95",
                    "severity": "error",
                    "message": "'method call rparen' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "123",
                    "severity": "error",
                    "message": "'built' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "124",
                    "severity": "error",
                    "message": "'Matchers' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "125",
                    "severity": "error",
                    "message": "'this' has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "126",
                    "severity": "error",
                    "message": "')' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "127",
                    "severity": "error",
                    "message": "'method call rparen' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "141",
                    "severity": "error",
                    "message": "'map' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "142",
                    "severity": "error",
                    "message": "'Matchers' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "143",
                    "severity": "error",
                    "message": "'expected' has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "144",
                    "severity": "error",
                    "message": "')' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "145",
                    "severity": "error",
                    "message": "'method call rparen' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "160",
                    "severity": "error",
                    "message": "'map' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "161",
                    "severity": "error",
                    "message": "'Matchers' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "162",
                    "severity": "error",
                    "message": "'expected' has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "163",
                    "severity": "error",
                    "message": "')' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "164",
                    "severity": "error",
                    "message": "'method call rparen' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "178",
                    "severity": "error",
                    "message": "'map' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "179",
                    "severity": "error",
                    "message": "'Matchers' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "180",
                    "severity": "error",
                    "message": "'expected' has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "181",
                    "severity": "error",
                    "message": "')' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "182",
                    "severity": "error",
                    "message": "'method call rparen' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "197",
                    "severity": "error",
                    "message": "'map' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "198",
                    "severity": "error",
                    "message": "'Matchers' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "199",
                    "severity": "error",
                    "message": "'expected' has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "200",
                    "severity": "error",
                    "message": "')' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "201",
                    "severity": "error",
                    "message": "'method call rparen' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "218",
                    "severity": "error",
                    "message": "'map' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "219",
                    "severity": "error",
                    "message": "'Matchers' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "220",
                    "severity": "error",
                    "message": "'expected' has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "221",
                    "severity": "error",
                    "message": "')' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "222",
                    "severity": "error",
                    "message": "'method call rparen' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "237",
                    "severity": "error",
                    "message": "'map' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "238",
                    "severity": "error",
                    "message": "'Matchers' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "239",
                    "severity": "error",
                    "message": "'expected' has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "240",
                    "severity": "error",
                    "message": "')' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "241",
                    "severity": "error",
                    "message": "'method call rparen' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "256",
                    "severity": "error",
                    "message": "'map' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "257",
                    "severity": "error",
                    "message": "'Matchers' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "258",
                    "severity": "error",
                    "message": "'expected' has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "259",
                    "severity": "error",
                    "message": "')' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "260",
                    "severity": "error",
                    "message": "'method call rparen' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "278",
                    "severity": "error",
                    "message": "'read' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "279",
                    "severity": "error",
                    "message": "'Matchers' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "280",
                    "severity": "error",
                    "message": "'this' has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "281",
                    "severity": "error",
                    "message": "')' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "282",
                    "severity": "error",
                    "message": "'method call rparen' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "299",
                    "severity": "error",
                    "message": "'read' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "300",
                    "severity": "error",
                    "message": "'Matchers' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "301",
                    "severity": "error",
                    "message": "'this' has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "302",
                    "severity": "error",
                    "message": "')' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "303",
                    "severity": "error",
                    "message": "'method call rparen' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "321",
                    "severity": "error",
                    "message": "'read' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "322",
                    "severity": "error",
                    "message": "'Matchers' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "323",
                    "severity": "error",
                    "message": "'this' has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "324",
                    "severity": "error",
                    "message": "')' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "325",
                    "severity": "error",
                    "message": "'method call rparen' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-eo-yaml/errored/1/19/YamlMappingPrintTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-eo-yaml/codebuff/19/YamlMappingPrintTest.java\nindex 7790f5abcaa..221d877c832 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-eo-yaml/errored/1/19/YamlMappingPrintTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-eo-yaml/codebuff/19/YamlMappingPrintTest.java\n@@ -31,7 +31,6 @@ import org.apache.commons.io.IOUtils;\n import org.hamcrest.MatcherAssert;\n import org.hamcrest.Matchers;\n import org.junit.Test;\n-\n import java.io.File;\n import java.io.FileInputStream;\n import java.io.FileNotFoundException;\n@@ -49,6 +48,8 @@ import java.io.IOException;\n  * @version $Id: 52a80930e8f26c7f38f12dc93a2f34481d792357 $\n  * @since 4.0.0\n  */\n+\n+\n public final class YamlMappingPrintTest {\n \n     /**\n@@ -56,17 +57,21 @@ public final class YamlMappingPrintTest {\n      * and print it.\n      * @throws Exception If something goes wrong.\n      */\n+\n+\n     @Test\n     public void printsReadYamlMappingWithIndentedComment() throws Exception {\n         final YamlMapping read = Yaml.createYamlInput(\n-            new File(\"src/test/resources/printing_tests/yamlMappingIndentedComments.yml\")\n-        ).readYamlMapping();\n+                                     new File(\n+                                         \"src/test/resources/printing_tests/yamlMappingIndentedComments.yml\"\n+                                     )\n+                                 ).readYamlMapping();\n         MatcherAssert.assertThat(\n-            read.toString(),\n-            Matchers.equalTo(\n-                this.readExpected(\"yamlMappingIndentedComments.yml\")\n-            )\n-        );\n+read.toString(),\n+Matchers.equalTo(\n+    this.readExpected(\"yamlMappingIndentedComments.yml\")\n+)\n+);\n     }\n \n     /**\n@@ -74,17 +79,20 @@ public final class YamlMappingPrintTest {\n      * YamlNode we have so far and print it.\n      * @throws Exception If something goes wrong.\n      */\n+\n     @Test\n     public void printsReadYamlMappingWithAllNodes() throws Exception {\n         final YamlMapping read = Yaml.createYamlInput(\n-            new File(\"src/test/resources/printing_tests/yamlMappingAllNodes.txt\")\n-        ).readYamlMapping();\n+                                     new File(\n+                                         \"src/test/resources/printing_tests/yamlMappingAllNodes.txt\"\n+                                     )\n+                                 ).readYamlMapping();\n         MatcherAssert.assertThat(\n-            read.toString(),\n-            Matchers.equalTo(\n-                this.readExpected(\"yamlMappingAllNodes.txt\")\n-            )\n-        );\n+read.toString(),\n+Matchers.equalTo(\n+    this.readExpected(\"yamlMappingAllNodes.txt\")\n+)\n+);\n     }\n \n     /**\n@@ -92,235 +100,164 @@ public final class YamlMappingPrintTest {\n      * YamlNode we have so far and print it.\n      * @throws Exception If something goes wrong.\n      */\n+\n     @Test\n     public void printsBuiltYamlMappingWithAllNodes() throws Exception {\n-        final YamlMapping built = Yaml.createYamlMappingBuilder()\n-            .add(\"key1\", \"plain scalar\")\n-            .add(\n-                \"key2\",\n-                Yaml.createYamlScalarBuilder()\n-                    .addLine(\"literal\")\n-                    .addLine(\"block\")\n-                    .addLine(\"scalar\")\n-                    .buildLiteralBlockScalar()\n-            )\n-            .add(\n-                \"key3\",\n-                Yaml.createYamlScalarBuilder()\n-                    .addLine(\"a scalar folded\")\n-                    .addLine(\"on more lines\")\n-                    .addLine(\"for readability\")\n-                    .buildFoldedBlockScalar()\n-            )\n-            .add(\n-                \"key4\",\n-                Yaml.createYamlMappingBuilder()\n-                    .add(\"key\", \"value\")\n-                    .build()\n-            )\n-            .add(\n-                \"key5\",\n-                Yaml.createYamlSequenceBuilder()\n-                    .add(\"a sequence\")\n-                    .add(\"of plain scalars\")\n-                    .add(\"as value\")\n-                    .build()\n-            )\n-            .add(\n-                \"key6\",\n-                Yaml.createYamlMappingBuilder()\n-                    .build()\n-            )\n-            .add(\n-                \"key7\",\n-                Yaml.createYamlSequenceBuilder()\n-                    .build()\n-            )\n-            .add(\n-                Yaml.createYamlSequenceBuilder()\n-                    .add(\"Atlanta Braves\")\n-                    .add(\"New York Yankees\")\n-                    .build(),\n-                Yaml.createYamlSequenceBuilder()\n-                    .add(\"2001-07-02\")\n-                    .add(\"2001-08-12\")\n-                    .add(\"2001-08-14\")\n-                    .build()\n-            )\n-            .add(\n-                Yaml.createYamlMappingBuilder()\n-                    .add(\"map\", \"asKey\")\n-                    .build(),\n-                \"scalar\"\n-            )\n-            .build();\n+        final YamlMapping built = Yaml.createYamlMappingBuilder().add(\"key1\", \"plain scalar\").add(\n+                                      \"key2\",\n+                                      Yaml.createYamlScalarBuilder().addLine(\"literal\").addLine(\"block\").addLine(\"scalar\").buildLiteralBlockScalar()\n+                                  ).add(\n+                                      \"key3\",\n+                                      Yaml.createYamlScalarBuilder().addLine(\"a scalar folded\").addLine(\"on more lines\").addLine(\"for readability\").buildFoldedBlockScalar()\n+                                  ).add(\n+                                      \"key4\",\n+                                      Yaml.createYamlMappingBuilder().add(\"key\", \"value\").build()\n+                                  ).add(\n+                                      \"key5\",\n+                                      Yaml.createYamlSequenceBuilder().add(\"a sequence\").add(\"of plain scalars\").add(\"as value\").build()\n+                                  ).add(\"key6\", Yaml.createYamlMappingBuilder().build()).add(\"key7\", Yaml.createYamlSequenceBuilder().build()).add(Yaml.createYamlSequenceBuilder().add(\"Atlanta Braves\").add(\"New York Yankees\").build(), Yaml.createYamlSequenceBuilder().add(\"2001-07-02\").add(\"2001-08-12\").add(\"2001-08-14\").build()).add(\n+                                      Yaml.createYamlMappingBuilder().add(\"map\", \"asKey\").build(),\n+                                      \"scalar\"\n+                                  ).build();\n         MatcherAssert.assertThat(\n-            built.toString(),\n-            Matchers.equalTo(\n-                this.readExpected(\"yamlMappingAllNodes.txt\")\n-            )\n-        );\n+built.toString(),\n+Matchers.equalTo(\n+    this.readExpected(\"yamlMappingAllNodes.txt\")\n+)\n+);\n     }\n \n     /**\n      * An empty YamlSequence value is printed as empty sequence ([]).\n      */\n+\n     @Test\n     public void printsEmptySequenceAsNull() {\n-        final YamlMapping map = Yaml.createYamlMappingBuilder()\n-            .add(\"key\", \"value1\")\n-            .add(\"seq\", Yaml.createYamlSequenceBuilder().build())\n-            .add(\"anotherKey\", \"value2\")\n-            .build();\n+        final YamlMapping map = Yaml.createYamlMappingBuilder().add(\"key\", \"value1\").add(\"seq\", Yaml.createYamlSequenceBuilder().build()).add(\"anotherKey\", \"value2\").build();\n         final StringBuilder expected = new StringBuilder();\n-        expected\n-            .append(\"key: value1\").append(System.lineSeparator())\n-            .append(\"seq: []\").append(System.lineSeparator())\n-            .append(\"anotherKey: value2\");\n+        expected.append(\n+    \"key: value1\").append(System.lineSeparator()).append(\"seq: []\").append(System.lineSeparator()).append(\"anotherKey: value2\");\n         MatcherAssert.assertThat(\n-            map.toString(),\n-            Matchers.equalTo(expected.toString())\n-        );\n+map.toString(),\n+Matchers.equalTo(\n+    expected.toString()\n+)\n+);\n     }\n \n     /**\n      * An null YamlSequence value is printed as null.\n      */\n+\n     @Test\n     public void printsNullSequenceAsNull() {\n         final YamlSequence seq = null;\n-        final YamlMapping map = Yaml.createYamlMappingBuilder()\n-            .add(\"key\", \"value1\")\n-            .add(\"seq\", seq)\n-            .add(\"anotherKey\", \"value2\")\n-            .build();\n+        final YamlMapping map = Yaml.createYamlMappingBuilder().add(\"key\", \"value1\").add(\"seq\", seq).add(\"anotherKey\", \"value2\").build();\n         final StringBuilder expected = new StringBuilder();\n-        expected\n-            .append(\"key: value1\").append(System.lineSeparator())\n-            .append(\"seq: null\").append(System.lineSeparator())\n-            .append(\"anotherKey: value2\");\n+        expected.append(\n+    \"key: value1\").append(System.lineSeparator()).append(\"seq: null\").append(System.lineSeparator()).append(\"anotherKey: value2\");\n         MatcherAssert.assertThat(\n-            map.toString(),\n-            Matchers.equalTo(expected.toString())\n-        );\n+map.toString(),\n+Matchers.equalTo(\n+    expected.toString()\n+)\n+);\n     }\n \n     /**\n      * An empty YamlMapping value is printed as empty mapping ({}).\n      */\n+\n     @Test\n     public void printsEmptyMappingAsNull() {\n-        final YamlMapping map = Yaml.createYamlMappingBuilder()\n-            .add(\"key\", \"value1\")\n-            .add(\"map\", Yaml.createYamlMappingBuilder().build())\n-            .add(\"anotherKey\", \"value2\")\n-            .build();\n+        final YamlMapping map = Yaml.createYamlMappingBuilder().add(\"key\", \"value1\").add(\"map\", Yaml.createYamlMappingBuilder().build()).add(\"anotherKey\", \"value2\").build();\n         final StringBuilder expected = new StringBuilder();\n-        expected\n-            .append(\"key: value1\").append(System.lineSeparator())\n-            .append(\"map: {}\").append(System.lineSeparator())\n-            .append(\"anotherKey: value2\");\n+        expected.append(\n+    \"key: value1\").append(System.lineSeparator()).append(\"map: {}\").append(System.lineSeparator()).append(\"anotherKey: value2\");\n         MatcherAssert.assertThat(\n-            map.toString(),\n-            Matchers.equalTo(expected.toString())\n-        );\n+map.toString(),\n+Matchers.equalTo(\n+    expected.toString()\n+)\n+);\n     }\n \n     /**\n      * An null YamlMapping value is printed as null.\n      */\n+\n     @Test\n     public void printsNullMappingAsNull() {\n         final YamlMapping nullMap = null;\n-        final YamlMapping map = Yaml.createYamlMappingBuilder()\n-            .add(\"key\", \"value1\")\n-            .add(\"map\", nullMap)\n-            .add(\"anotherKey\", \"value2\")\n-            .build();\n+        final YamlMapping map = Yaml.createYamlMappingBuilder().add(\"key\", \"value1\").add(\"map\", nullMap).add(\"anotherKey\", \"value2\").build();\n         final StringBuilder expected = new StringBuilder();\n-        expected\n-            .append(\"key: value1\").append(System.lineSeparator())\n-            .append(\"map: null\").append(System.lineSeparator())\n-            .append(\"anotherKey: value2\");\n+        expected.append(\n+    \"key: value1\").append(System.lineSeparator()).append(\"map: null\").append(System.lineSeparator()).append(\"anotherKey: value2\");\n         MatcherAssert.assertThat(\n-            map.toString(),\n-            Matchers.equalTo(expected.toString())\n-        );\n+map.toString(),\n+Matchers.equalTo(\n+    expected.toString()\n+)\n+);\n     }\n \n     /**\n      * An empty Scalar value is printed as null.\n      */\n+\n     @Test\n     public void printsEmptyScalarAsNull() {\n-        final YamlMapping map = Yaml.createYamlMappingBuilder()\n-            .add(\"key\", \"value1\")\n-            .add(\"scalar\", Yaml.createYamlScalarBuilder().buildPlainScalar())\n-            .add(\"anotherKey\", \"value2\")\n-            .build();\n+        final YamlMapping map = Yaml.createYamlMappingBuilder().add(\"key\", \"value1\").add(\n+                                    \"scalar\",\n+                                    Yaml.createYamlScalarBuilder().buildPlainScalar()\n+                                ).add(\"anotherKey\", \"value2\").build();\n         final StringBuilder expected = new StringBuilder();\n-        expected\n-            .append(\"key: value1\").append(System.lineSeparator())\n-            .append(\"scalar: null\").append(System.lineSeparator())\n-            .append(\"anotherKey: value2\");\n+        expected.append(\n+    \"key: value1\").append(System.lineSeparator()).append(\"scalar: null\").append(System.lineSeparator()).append(\"anotherKey: value2\");\n         MatcherAssert.assertThat(\n-            map.toString(),\n-            Matchers.equalTo(expected.toString())\n-        );\n+map.toString(),\n+Matchers.equalTo(\n+    expected.toString()\n+)\n+);\n     }\n \n     /**\n      * An null Scalar value is printed as null.\n      */\n+\n     @Test\n     public void printsNullScalarAsNull() {\n         final Scalar nullScalar = null;\n-        final YamlMapping map = Yaml.createYamlMappingBuilder()\n-            .add(\"key\", \"value1\")\n-            .add(\"scalar\", nullScalar)\n-            .add(\"anotherKey\", \"value2\")\n-            .build();\n+        final YamlMapping map = Yaml.createYamlMappingBuilder().add(\"key\", \"value1\").add(\"scalar\", nullScalar).add(\"anotherKey\", \"value2\").build();\n         final StringBuilder expected = new StringBuilder();\n-        expected\n-            .append(\"key: value1\").append(System.lineSeparator())\n-            .append(\"scalar: null\").append(System.lineSeparator())\n-            .append(\"anotherKey: value2\");\n+        expected.append(\n+    \"key: value1\").append(System.lineSeparator()).append(\"scalar: null\").append(System.lineSeparator()).append(\"anotherKey: value2\");\n         MatcherAssert.assertThat(\n-            map.toString(),\n-            Matchers.equalTo(expected.toString())\n-        );\n+map.toString(),\n+Matchers.equalTo(\n+    expected.toString()\n+)\n+);\n     }\n \n     /**\n      * When a scalar value in a mapping contains a reserved symbol,\n      * it should be escaped (wrapped between quotes or apostrophes).\n      */\n+\n     @Test\n     public void printsEscapedScalars() {\n-        final YamlMapping map = Yaml.createYamlMappingBuilder()\n-            .add(\"time\", \"15:00\")\n-            .add(\"color\", \"#314132\")\n-            .add(\"gt\", \"&gt;\")\n-            .add(\"cash\", \"$15\")\n-            .add(\"compare\", \"a>b\")\n-            .add(\"xor\", \"a || b\")\n-            .add(\"degrees\", \"-15C\")\n-            .add(\"percentage\", \"3% reads \\\"3 per cent\\\"\")\n-            .build();\n+        final YamlMapping map = Yaml.createYamlMappingBuilder().add(\"time\", \"15:00\").add(\"color\", \"#314132\").add(\"gt\", \"&gt;\").add(\"cash\", \"$15\").add(\"compare\", \"a>b\").add(\"xor\", \"a || b\").add(\"degrees\", \"-15C\").add(\"percentage\", \"3% reads \\\"3 per cent\\\"\").build();\n         final StringBuilder expected = new StringBuilder();\n-        expected\n-            .append(\"time: \\\"15:00\\\"\").append(System.lineSeparator())\n-            .append(\"color: \\\"#314132\\\"\").append(System.lineSeparator())\n-            .append(\"gt: \\\"&gt;\\\"\").append(System.lineSeparator())\n-            .append(\"cash: \\\"$15\\\"\").append(System.lineSeparator())\n-            .append(\"compare: \\\"a>b\\\"\").append(System.lineSeparator())\n-            .append(\"xor: \\\"a || b\\\"\").append(System.lineSeparator())\n-            .append(\"degrees: \\\"-15C\\\"\").append(System.lineSeparator())\n-            .append(\"percentage: '3% reads \\\"3 per cent\\\"'\");\n+        expected.append(\n+    \"time: \\\"15:00\\\"\").append(System.lineSeparator()).append(\"color: \\\"#314132\\\"\").append(System.lineSeparator()).append(\"gt: \\\"&gt;\\\"\").append(System.lineSeparator()).append(\"cash: \\\"$15\\\"\").append(System.lineSeparator()).append(\"compare: \\\"a>b\\\"\").append(System.lineSeparator()).append(\"xor: \\\"a || b\\\"\").append(System.lineSeparator()).append(\"degrees: \\\"-15C\\\"\").append(System.lineSeparator()).append(\"percentage: '3% reads \\\"3 per cent\\\"'\");\n         MatcherAssert.assertThat(\n-            map.toString(),\n-            Matchers.equalTo(expected.toString())\n-        );\n+map.toString(),\n+Matchers.equalTo(\n+    expected.toString()\n+)\n+);\n     }\n \n     /**\n@@ -329,17 +266,20 @@ public final class YamlMappingPrintTest {\n      *\n      * @throws Exception If something goes wrong.\n      */\n+\n     @Test\n     public void printsReadYamlDuplicatedComments() throws Exception {\n         final YamlMapping read = Yaml.createYamlInput(\n-                new File(\"src/test/resources/printing_tests/yamlDuplicatedComments.txt\")\n-        ).readYamlMapping();\n+                                     new File(\n+                                         \"src/test/resources/printing_tests/yamlDuplicatedComments.txt\"\n+                                     )\n+                                 ).readYamlMapping();\n         MatcherAssert.assertThat(\n-                read.toString(),\n-                Matchers.equalTo(\n-                        this.readExpected(\"yamlDuplicatedCommentsRoundTrip.txt\")\n-                )\n-        );\n+read.toString(),\n+Matchers.equalTo(\n+    this.readExpected(\"yamlDuplicatedCommentsRoundTrip.txt\")\n+)\n+);\n     }\n \n     /**\n@@ -347,17 +287,20 @@ public final class YamlMappingPrintTest {\n      *\n      * @throws Exception If something goes wrong.\n      */\n+\n     @Test\n     public void printsReadYamlCommentsOnMapOrSequence() throws Exception {\n         final YamlMapping read = Yaml.createYamlInput(\n-                new File(\"src/test/resources/printing_tests/yamlCommentsOnMapOrSeq.txt\")\n-        ).readYamlMapping();\n+                                     new File(\n+                                         \"src/test/resources/printing_tests/yamlCommentsOnMapOrSeq.txt\"\n+                                     )\n+                                 ).readYamlMapping();\n         MatcherAssert.assertThat(\n-                read.toString(),\n-                Matchers.equalTo(\n-                        this.readExpected(\"yamlCommentsOnMapOrSeqRoundTrip.txt\")\n-                )\n-        );\n+read.toString(),\n+Matchers.equalTo(\n+    this.readExpected(\"yamlCommentsOnMapOrSeqRoundTrip.txt\")\n+)\n+);\n     }\n \n     /**\n@@ -366,19 +309,20 @@ public final class YamlMappingPrintTest {\n      *\n      * @throws Exception If something goes wrong.\n      */\n+\n     @Test\n     public void printsReadYamlCommentsOnMapAndSequence() throws Exception {\n         final YamlMapping read = Yaml.createYamlInput(\n-            new File(\n-                \"src/test/resources/printing_tests/yamlCommentsOnMapAndSeq.txt\")\n-        ).readYamlMapping();\n+                                     new File(\n+                                         \"src/test/resources/printing_tests/yamlCommentsOnMapAndSeq.txt\"\n+                                     )\n+                                 ).readYamlMapping();\n         MatcherAssert.assertThat(\n-                read.toString(),\n-                Matchers.equalTo(\n-                        this.readExpected(\n-                                \"yamlCommentsOnMapAndSeqRoundTrip.txt\")\n-                )\n-        );\n+read.toString(),\n+Matchers.equalTo(\n+    this.readExpected(\"yamlCommentsOnMapAndSeqRoundTrip.txt\")\n+)\n+);\n     }\n \n     /**\n@@ -388,16 +332,15 @@ public final class YamlMappingPrintTest {\n      * @throws FileNotFoundException If something is wrong.\n      * @throws IOException If something is wrong.\n      */\n-    private String readExpected(final String fileName)\n-        throws FileNotFoundException, IOException {\n-        return new String(\n-            IOUtils.toByteArray(\n-                new FileInputStream(\n-                    new File(\n-                    \"src/test/resources/printing_tests/\" + fileName\n-                    )\n-                )\n-            )\n-        );\n+\n+    private String readExpected(final String fileName) throws FileNotFoundException, IOException {\n+        return new String(IOUtils.toByteArray(\n+                              new FileInputStream(\n+                                  new File(\n+                                      \"src/test/resources/printing_tests/\" + fileName\n+                                  )\n+                              )\n+                          ));\n     }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 249
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "353",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 84).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-eo-yaml/errored/1/19/YamlMappingPrintTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-eo-yaml/styler_random/19/YamlMappingPrintTest.java\nindex 7790f5abcaa..9bcf94eb2f2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-eo-yaml/errored/1/19/YamlMappingPrintTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-eo-yaml/styler_random/19/YamlMappingPrintTest.java\n@@ -350,7 +350,7 @@ public final class YamlMappingPrintTest {\n     @Test\n     public void printsReadYamlCommentsOnMapOrSequence() throws Exception {\n         final YamlMapping read = Yaml.createYamlInput(\n-                new File(\"src/test/resources/printing_tests/yamlCommentsOnMapOrSeq.txt\")\n+            new File(\"src/test/resources/printing_tests/yamlCommentsOnMapOrSeq.txt\")\n         ).readYamlMapping();\n         MatcherAssert.assertThat(\n                 read.toString(),\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "353",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 84).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-eo-yaml/errored/1/19/YamlMappingPrintTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-eo-yaml/styler_three_grams/19/YamlMappingPrintTest.java\nindex 7790f5abcaa..9bcf94eb2f2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-eo-yaml/errored/1/19/YamlMappingPrintTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-eo-yaml/styler_three_grams/19/YamlMappingPrintTest.java\n@@ -350,7 +350,7 @@ public final class YamlMappingPrintTest {\n     @Test\n     public void printsReadYamlCommentsOnMapOrSequence() throws Exception {\n         final YamlMapping read = Yaml.createYamlInput(\n-                new File(\"src/test/resources/printing_tests/yamlCommentsOnMapOrSeq.txt\")\n+            new File(\"src/test/resources/printing_tests/yamlCommentsOnMapOrSeq.txt\")\n         ).readYamlMapping();\n         MatcherAssert.assertThat(\n                 read.toString(),\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
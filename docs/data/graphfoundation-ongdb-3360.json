{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3360",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "32",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "32",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3360/ValueContext.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3360/ValueContext.java\nindex 10ab4dbc81f..e65d9e1d1a0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3360/ValueContext.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3360/ValueContext.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.index.lucene;\n \n /**\n@@ -25,64 +26,65 @@ package org.neo4j.index.lucene;\n  */\n public class ValueContext\n {\n-    private final Object value;\n-    private boolean indexNumeric;\n+  private final Object value;\n+  private boolean indexNumeric;\n \n-    public ValueContext( Object value )\n-    {\n-        this.value = value;\n-    }\n+  public ValueContext(Object value)\n+  {\n+    this.value = value;\n+  }\n \n-    /**\n-     * @return the value object specified in the constructor.\n-     */\n-    public Object getValue()\n-    {\n-        return value;\n-    }\n+  /**\n+   * @return the value object specified in the constructor.\n+   */\n+  public Object getValue()\n+  {\n+    return value;\n+  }\n \n-    /**\n-     * Returns a ValueContext to be used with\n-     * {@link org.neo4j.graphdb.index.Index#add(org.neo4j.graphdb.PropertyContainer, String, Object)}\n-     *\n-     * @return a numeric ValueContext\n-     */\n-    public ValueContext indexNumeric()\n+  /**\n+   * Returns a ValueContext to be used with\n+   * {@link org.neo4j.graphdb.index.Index#add(org.neo4j.graphdb.PropertyContainer, String, Object)}\n+   *\n+   * @return a numeric ValueContext\n+   */\n+  public ValueContext indexNumeric()\n+  {\n+    if (!(this.value instanceof Number))\n     {\n-        if ( !( this.value instanceof Number ) )\n-        {\n-            throw new IllegalStateException( \"Value should be a Number, is \" + value +\n-                    \" (\" + value.getClass() + \")\" );\n-        }\n-        this.indexNumeric = true;\n-        return this;\n+      throw new IllegalStateException(\"Value should be a Number, is \" + value +\n+          \" (\" + value.getClass() + \")\");\n     }\n+    this.indexNumeric = true;\n+    return this;\n+  }\n \n-    /**\n-     * Returns the string representation of the value given in the constructor,\n-     * or the unmodified value if {@link #indexNumeric()} has been called.\n-     *\n-     * @return the, by the user, intended value to index.\n-     */\n-    public Object getCorrectValue()\n-    {\n-        return this.indexNumeric ? this.value : this.value.toString();\n-    }\n+  /**\n+   * Returns the string representation of the value given in the constructor,\n+   * or the unmodified value if {@link #indexNumeric()} has been called.\n+   *\n+   * @return the, by the user, intended value to index.\n+   */\n+  public Object getCorrectValue()\n+  {\n+    return this.indexNumeric ? this.value : this.value.toString();\n+  }\n \n-    @Override\n-    public String toString()\n-    {\n-        return value.toString();\n-    }\n+  @Override\n+  public String toString()\n+  {\n+    return value.toString();\n+  }\n \n-    /**\n-     * Convience method to add a numeric value to an index.\n-     * @param value The value to add\n-     * @return A ValueContext that can be used with\n-     * {@link org.neo4j.graphdb.index.Index#add(org.neo4j.graphdb.PropertyContainer, String, Object)}\n-     */\n-    public static ValueContext numeric( Number value )\n-    {\n-        return new ValueContext( value ).indexNumeric();\n-    }\n+  /**\n+   * Convience method to add a numeric value to an index.\n+   *\n+   * @param value The value to add\n+   * @return A ValueContext that can be used with\n+   * {@link org.neo4j.graphdb.index.Index#add(org.neo4j.graphdb.PropertyContainer, String, Object)}\n+   */\n+  public static ValueContext numeric(Number value)\n+  {\n+    return new ValueContext(value).indexNumeric();\n+  }\n }\n",
            "diff_size": 59
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3360/ValueContext.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3360/ValueContext.java\nindex 10ab4dbc81f..46be62203ce 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3360/ValueContext.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3360/ValueContext.java\n@@ -51,8 +51,7 @@ public class ValueContext\n     {\n         if ( !( this.value instanceof Number ) )\n         {\n-            throw new IllegalStateException( \"Value should be a Number, is \" + value +\n-                    \" (\" + value.getClass() + \")\" );\n+            throw new IllegalStateException( \"Value should be a Number, is \" + value + \" (\" + value.getClass() + \")\" );\n         }\n         this.indexNumeric = true;\n         return this;\n@@ -85,4 +84,4 @@ public class ValueContext\n     {\n         return new ValueContext( value ).indexNumeric();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "57",
                    "column": "85",
                    "severity": "error",
                    "message": "'+' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3360/ValueContext.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/3360/ValueContext.java\nindex 10ab4dbc81f..3a35d376747 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3360/ValueContext.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/3360/ValueContext.java\n@@ -23,6 +23,7 @@ package org.neo4j.index.lucene;\n  * ValueContext allows you to give not just a value, but to give the value\n  * some context to live in.\n  */\n+\n public class ValueContext\n {\n     private final Object value;\n@@ -36,6 +37,7 @@ public class ValueContext\n     /**\n      * @return the value object specified in the constructor.\n      */\n+\n     public Object getValue()\n     {\n         return value;\n@@ -47,13 +49,14 @@ public class ValueContext\n      *\n      * @return a numeric ValueContext\n      */\n+\n     public ValueContext indexNumeric()\n     {\n-        if ( !( this.value instanceof Number ) )\n+        if ( ! ( this.value instanceof Number) )\n         {\n-            throw new IllegalStateException( \"Value should be a Number, is \" + value +\n-                    \" (\" + value.getClass() + \")\" );\n+            throw new IllegalStateException( \"Value should be a Number, is \" + value+ \" (\" + value.getClass() + \")\" );\n         }\n+\n         this.indexNumeric = true;\n         return this;\n     }\n@@ -64,6 +67,7 @@ public class ValueContext\n      *\n      * @return the, by the user, intended value to index.\n      */\n+\n     public Object getCorrectValue()\n     {\n         return this.indexNumeric ? this.value : this.value.toString();\n@@ -81,8 +85,9 @@ public class ValueContext\n      * @return A ValueContext that can be used with\n      * {@link org.neo4j.graphdb.index.Index#add(org.neo4j.graphdb.PropertyContainer, String, Object)}\n      */\n+\n     public static ValueContext numeric( Number value )\n     {\n         return new ValueContext( value ).indexNumeric();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 10
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "wso2-attic-commons",
    "error_id": "311",
    "information": {
        "errors": [
            {
                "line": "108",
                "severity": "error",
                "message": "Line is longer than 120 characters (found 123).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "\t * Retrieves the base URI that the BPEL Process execution contextis running relative to.\n\t * \n\t * @return URI - the URI representing the absolute physical file path location that this process is defined within.\n\t */\n\tURI getBaseResourceURI();    \n",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "108",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 123).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/311/EvaluationContext.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler/311/EvaluationContext.java\nindex e0de097b6eb..e4a9c7ec72f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/311/EvaluationContext.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler/311/EvaluationContext.java\n@@ -101,7 +101,7 @@ public interface EvaluationContext {\n      * using this evaluation context.\n      */\n     boolean narrowTypes();\n-    \n+\n \t/**\n \t * Retrieves the base URI that the BPEL Process execution contextis running relative to.\n \t * \n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/311/EvaluationContext.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/intellij/311/EvaluationContext.java\nindex e0de097b6eb..375b7d6e152 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/311/EvaluationContext.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/intellij/311/EvaluationContext.java\n@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n package org.apache.ode.bpel.rtrep.v1;\n \n import java.net.URI;\n@@ -38,82 +39,77 @@ import org.w3c.dom.Node;\n  */\n public interface EvaluationContext {\n \n-    /**\n-     * Read the value of a BPEL variable.\n-     *\n-     * @param variable\n-     *          variable to read\n-     * @param part\n-     *          the part (or <code>null</code>)\n-     * @return the value of the variable, wrapped in a <code>Node</code>\n-     */\n-    Node readVariable(OScope.Variable variable, OMessageVarType.Part part) throws FaultException;\n-\n-    Node getPartData(Element message, OMessageVarType.Part part) throws FaultException;\n-    /**\n-     * Read the value of a BPEL property.\n-     *\n-     * @param variable\n-     *          variable containing property\n-     * @param property\n-     *          property to read\n-     * @return value of the property\n-     */\n-    String readMessageProperty(OScope.Variable variable, OProcess.OProperty property)\n-            throws FaultException;\n-\n-    /**\n-     * Obtain the status of a control link.\n-     *\n-     * @param olink\n-     *          link to check\n-     * @return <code>true</code> if the link is active, <code>false</code>\n-     *         otherwise.\n-     */\n-    boolean isLinkActive(OLink olink) throws FaultException;\n-\n-    /**\n-     * Obtain the root node.\n-     *\n-     * @return root node\n-     */\n-    Node getRootNode();\n-\n-    /**\n-     * Evaluate a query expression.\n-     *\n-     * @param root\n-     *          the root context\n-     * @param expr\n-     *          the query expression\n-     * @return node returned by query\n-     */\n-    Node evaluateQuery(Node root, OExpression expr) throws FaultException;\n-\n-    /**\n-     * Reads the current process instance id.\n-     * @return instance id\n-     */\n-    Long getProcessId();\n-\n-    /**\n-     * Indicates whether simple types should be narrowed to a Java type when\n-     * using this evaluation context.\n-     */\n-    boolean narrowTypes();\n-    \n-\t/**\n-\t * Retrieves the base URI that the BPEL Process execution contextis running relative to.\n-\t * \n-\t * @return URI - the URI representing the absolute physical file path location that this process is defined within.\n-\t */\n-\tURI getBaseResourceURI();    \n-\n-\t/**\n-\t * Retrieves the property value that has been defined for this BPEL Process type.\n-\t * \n-\t * @return propertyValue - the value corresponding to the process property name.\n-\t */\n-\tNode getPropertyValue(QName propertyName);\n+  /**\n+   * Read the value of a BPEL variable.\n+   *\n+   * @param variable variable to read\n+   * @param part     the part (or <code>null</code>)\n+   * @return the value of the variable, wrapped in a <code>Node</code>\n+   */\n+  Node readVariable(OScope.Variable variable, OMessageVarType.Part part) throws FaultException;\n+\n+  Node getPartData(Element message, OMessageVarType.Part part) throws FaultException;\n+\n+  /**\n+   * Read the value of a BPEL property.\n+   *\n+   * @param variable variable containing property\n+   * @param property property to read\n+   * @return value of the property\n+   */\n+  String readMessageProperty(OScope.Variable variable, OProcess.OProperty property)\n+    throws FaultException;\n+\n+  /**\n+   * Obtain the status of a control link.\n+   *\n+   * @param olink link to check\n+   * @return <code>true</code> if the link is active, <code>false</code>\n+   * otherwise.\n+   */\n+  boolean isLinkActive(OLink olink) throws FaultException;\n+\n+  /**\n+   * Obtain the root node.\n+   *\n+   * @return root node\n+   */\n+  Node getRootNode();\n+\n+  /**\n+   * Evaluate a query expression.\n+   *\n+   * @param root the root context\n+   * @param expr the query expression\n+   * @return node returned by query\n+   */\n+  Node evaluateQuery(Node root, OExpression expr) throws FaultException;\n+\n+  /**\n+   * Reads the current process instance id.\n+   *\n+   * @return instance id\n+   */\n+  Long getProcessId();\n+\n+  /**\n+   * Indicates whether simple types should be narrowed to a Java type when\n+   * using this evaluation context.\n+   */\n+  boolean narrowTypes();\n+\n+  /**\n+   * Retrieves the base URI that the BPEL Process execution contextis running relative to.\n+   *\n+   * @return URI - the URI representing the absolute physical file path location that this process is defined within.\n+   */\n+  URI getBaseResourceURI();\n+\n+  /**\n+   * Retrieves the property value that has been defined for this BPEL Process type.\n+   *\n+   * @return propertyValue - the value corresponding to the process property name.\n+   */\n+  Node getPropertyValue(QName propertyName);\n \n }\n",
            "diff_size": 78
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "108",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 123).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/311/EvaluationContext.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/naturalize/311/EvaluationContext.java\nindex e0de097b6eb..dd5181b7b63 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/311/EvaluationContext.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/naturalize/311/EvaluationContext.java\n@@ -101,8 +101,8 @@ public interface EvaluationContext {\n      * using this evaluation context.\n      */\n     boolean narrowTypes();\n-    \n-\t/**\n+\n+    /**\n \t * Retrieves the base URI that the BPEL Process execution contextis running relative to.\n \t * \n \t * @return URI - the URI representing the absolute physical file path location that this process is defined within.\n@@ -116,4 +116,4 @@ public interface EvaluationContext {\n \t */\n \tNode getPropertyValue(QName propertyName);\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "108",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 123).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/311/EvaluationContext.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler_random/311/EvaluationContext.java\nindex e0de097b6eb..e4a9c7ec72f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/311/EvaluationContext.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler_random/311/EvaluationContext.java\n@@ -101,7 +101,7 @@ public interface EvaluationContext {\n      * using this evaluation context.\n      */\n     boolean narrowTypes();\n-    \n+\n \t/**\n \t * Retrieves the base URI that the BPEL Process execution contextis running relative to.\n \t * \n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "108",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 123).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/311/EvaluationContext.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler_three_grams/311/EvaluationContext.java\nindex e0de097b6eb..e4a9c7ec72f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/311/EvaluationContext.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler_three_grams/311/EvaluationContext.java\n@@ -101,7 +101,7 @@ public interface EvaluationContext {\n      * using this evaluation context.\n      */\n     boolean narrowTypes();\n-    \n+\n \t/**\n \t * Retrieves the base URI that the BPEL Process execution contextis running relative to.\n \t * \n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
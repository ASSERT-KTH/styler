{
    "project_name": "neo4j-neo4j",
    "error_id": "2230",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "53",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "116",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "158",
                    "column": "63",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "158",
                    "column": "106",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "165",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "165",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "168",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "177",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "177",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "180",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "180",
                    "column": "105",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "180",
                    "column": "106",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "185",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "185",
                    "column": "123",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "187",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "187",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "190",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "190",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "202",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "202",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2230/EagerResult.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2230/EagerResult.java\nindex cd3196a36e0..8330fee01cf 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2230/EagerResult.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2230/EagerResult.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.cypher.internal.javacompat;\n \n import java.io.PrintWriter;\n@@ -49,7 +50,7 @@ class EagerResult implements Result\n     private final List<Map<String, Object>> queryResult = new ArrayList<>();\n     private int cursor;\n \n-    EagerResult( Result result, VersionContext versionContext )\n+    EagerResult(Result result, VersionContext versionContext)\n     {\n         this.originalResult = result;\n         this.versionContext = versionContext;\n@@ -57,15 +58,15 @@ class EagerResult implements Result\n \n     public void consume()\n     {\n-        while ( originalResult.hasNext() )\n+        while (originalResult.hasNext())\n         {\n-            queryResult.add( originalResult.next() );\n+            queryResult.add(originalResult.next());\n         }\n     }\n \n-    QueryExecution streamToSubscriber( QuerySubscriber subscriber, QueryExecution innerExecution )\n+    QueryExecution streamToSubscriber(QuerySubscriber subscriber, QueryExecution innerExecution)\n     {\n-        return new EagerQueryExecution( subscriber, innerExecution, originalResult.getQueryStatistics(), queryResult );\n+        return new EagerQueryExecution(subscriber, innerExecution, originalResult.getQueryStatistics(), queryResult);\n     }\n \n     @Override\n@@ -81,9 +82,9 @@ class EagerResult implements Result\n     }\n \n     @Override\n-    public <T> ResourceIterator<T> columnAs( String name )\n+    public <T> ResourceIterator<T> columnAs(String name)\n     {\n-        return new EagerResultResourceIterator<>( name );\n+        return new EagerResultResourceIterator<>(name);\n     }\n \n     @Override\n@@ -93,9 +94,9 @@ class EagerResult implements Result\n     }\n \n     @Override\n-    public Map<String,Object> next()\n+    public Map<String, Object> next()\n     {\n-        return queryResult.get( cursor++ );\n+        return queryResult.get(cursor++);\n     }\n \n     @Override\n@@ -121,30 +122,30 @@ class EagerResult implements Result\n     {\n         List<String> columns = originalResult.columns();\n         StringBuilder builder = new StringBuilder();\n-        builder.append( String.join( ITEM_SEPARATOR, columns ) );\n-        if ( !queryResult.isEmpty() )\n+        builder.append(String.join(ITEM_SEPARATOR, columns));\n+        if (!queryResult.isEmpty())\n         {\n-            builder.append( lineSeparator() );\n+            builder.append(lineSeparator());\n             int numberOfColumns = columns.size();\n-            for ( Map<String,Object> row : queryResult )\n+            for (Map<String, Object> row : queryResult)\n             {\n-                writeRow( columns, builder, numberOfColumns, row );\n-                builder.append( lineSeparator() );\n+                writeRow(columns, builder, numberOfColumns, row);\n+                builder.append(lineSeparator());\n             }\n         }\n         return builder.toString();\n     }\n \n     @Override\n-    public void writeAsStringTo( PrintWriter writer )\n+    public void writeAsStringTo(PrintWriter writer)\n     {\n-        writer.print( resultAsString() );\n+        writer.print(resultAsString());\n     }\n \n     @Override\n     public void remove()\n     {\n-        throw new UnsupportedOperationException( \"Not supported\" );\n+        throw new UnsupportedOperationException(\"Not supported\");\n     }\n \n     @Override\n@@ -154,18 +155,17 @@ class EagerResult implements Result\n     }\n \n     @Override\n-    public <VisitationException extends Exception> void accept( ResultVisitor<VisitationException> visitor )\n-            throws VisitationException\n+    public <VisitationException extends Exception> void accept(ResultVisitor<VisitationException> visitor)\n+      throws VisitationException\n     {\n         try\n         {\n-            for ( Map<String,Object> map : queryResult )\n+            for (Map<String, Object> map : queryResult)\n             {\n-                visitor.visit( new ResultRowImpl( map ) );\n+                visitor.visit(new ResultRowImpl(map));\n             }\n             checkIfDirty();\n-        }\n-        catch ( NotFoundException e )\n+        } catch (NotFoundException e)\n         {\n             checkIfDirty();\n             throw e;\n@@ -174,22 +174,22 @@ class EagerResult implements Result\n \n     private void checkIfDirty()\n     {\n-        if ( versionContext.isDirty() )\n+        if (versionContext.isDirty())\n         {\n             throw new QueryExecutionKernelException(\n-                    new UnstableSnapshotException( \"Unable to get clean data snapshot for query serialisation.\" ) )\n-                    .asUserException();\n+              new UnstableSnapshotException(\"Unable to get clean data snapshot for query serialisation.\"))\n+              .asUserException();\n         }\n     }\n \n-    private static void writeRow( List<String> columns, StringBuilder builder, int numberOfColumns, Map<String,Object> row )\n+    private static void writeRow(List<String> columns, StringBuilder builder, int numberOfColumns, Map<String, Object> row)\n     {\n-        for ( int i = 0; i < numberOfColumns; i++ )\n+        for (int i = 0; i < numberOfColumns; i++)\n         {\n-            builder.append( row.get( columns.get( i ) ) );\n-            if ( i != numberOfColumns - 1 )\n+            builder.append(row.get(columns.get(i)));\n+            if (i != numberOfColumns - 1)\n             {\n-                builder.append( ITEM_SEPARATOR );\n+                builder.append(ITEM_SEPARATOR);\n             }\n         }\n     }\n@@ -199,7 +199,7 @@ class EagerResult implements Result\n         private final String column;\n         int cursor;\n \n-        EagerResultResourceIterator( String column )\n+        EagerResultResourceIterator(String column)\n         {\n             this.column = column;\n         }\n@@ -213,7 +213,7 @@ class EagerResult implements Result\n         @Override\n         public T next()\n         {\n-            return (T) queryResult.get( cursor++ ).get( column );\n+            return (T) queryResult.get(cursor++).get(column);\n         }\n \n         @Override\n",
            "diff_size": 35
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
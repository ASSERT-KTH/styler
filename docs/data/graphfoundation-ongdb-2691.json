{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2691",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "52",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "60",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "114",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2691/UpdateRecordsStep.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2691/UpdateRecordsStep.java\nindex 4080e507cd7..375e19474a4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2691/UpdateRecordsStep.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2691/UpdateRecordsStep.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.unsafe.impl.batchimport;\n \n import java.util.Collection;\n@@ -40,56 +41,56 @@ import org.neo4j.unsafe.impl.batchimport.store.PrepareIdSequence;\n  * Updates a batch of records to a store.\n  */\n public class UpdateRecordsStep<RECORD extends AbstractBaseRecord>\n-        extends ProcessorStep<RECORD[]>\n-        implements StatsProvider\n+    extends ProcessorStep<RECORD[]>\n+    implements StatsProvider\n {\n-    protected final RecordStore<RECORD> store;\n-    private final int recordSize;\n-    private final PrepareIdSequence prepareIdSequence;\n-    private final LongAdder recordsUpdated = new LongAdder();\n+  protected final RecordStore<RECORD> store;\n+  private final int recordSize;\n+  private final PrepareIdSequence prepareIdSequence;\n+  private final LongAdder recordsUpdated = new LongAdder();\n \n-    public UpdateRecordsStep( StageControl control, Configuration config, RecordStore<RECORD> store,\n-            PrepareIdSequence prepareIdSequence )\n-    {\n-        super( control, \"v\", config, config.parallelRecordWrites() ? 0 : 1 );\n-        this.store = store;\n-        this.prepareIdSequence = prepareIdSequence;\n-        this.recordSize = store.getRecordSize();\n-    }\n+  public UpdateRecordsStep(StageControl control, Configuration config, RecordStore<RECORD> store,\n+                           PrepareIdSequence prepareIdSequence)\n+  {\n+    super(control, \"v\", config, config.parallelRecordWrites() ? 0 : 1);\n+    this.store = store;\n+    this.prepareIdSequence = prepareIdSequence;\n+    this.recordSize = store.getRecordSize();\n+  }\n \n-    @Override\n-    protected void process( RECORD[] batch, BatchSender sender )\n+  @Override\n+  protected void process(RECORD[] batch, BatchSender sender)\n+  {\n+    LongFunction<IdSequence> idSequence = prepareIdSequence.apply(store);\n+    int recordsUpdatedInThisBatch = 0;\n+    for (RECORD record : batch)\n     {\n-        LongFunction<IdSequence> idSequence = prepareIdSequence.apply( store );\n-        int recordsUpdatedInThisBatch = 0;\n-        for ( RECORD record : batch )\n-        {\n-            if ( record != null && record.inUse() && !IdValidator.isReservedId( record.getId() ) )\n-            {\n-                store.prepareForCommit( record, idSequence.apply( record.getId() ) );\n-                store.updateRecord( record );\n-                recordsUpdatedInThisBatch++;\n-            }\n-        }\n-        recordsUpdated.add( recordsUpdatedInThisBatch );\n+      if (record != null && record.inUse() && !IdValidator.isReservedId(record.getId()))\n+      {\n+        store.prepareForCommit(record, idSequence.apply(record.getId()));\n+        store.updateRecord(record);\n+        recordsUpdatedInThisBatch++;\n+      }\n     }\n+    recordsUpdated.add(recordsUpdatedInThisBatch);\n+  }\n \n-    @Override\n-    protected void collectStatsProviders( Collection<StatsProvider> into )\n-    {\n-        super.collectStatsProviders( into );\n-        into.add( this );\n-    }\n+  @Override\n+  protected void collectStatsProviders(Collection<StatsProvider> into)\n+  {\n+    super.collectStatsProviders(into);\n+    into.add(this);\n+  }\n \n-    @Override\n-    public Stat stat( Key key )\n-    {\n-        return key == Keys.io_throughput ? new IoThroughputStat( startTime, endTime, recordSize * recordsUpdated.sum() ) : null;\n-    }\n+  @Override\n+  public Stat stat(Key key)\n+  {\n+    return key == Keys.io_throughput ? new IoThroughputStat(startTime, endTime, recordSize * recordsUpdated.sum()) : null;\n+  }\n \n-    @Override\n-    public Key[] keys()\n-    {\n-        return new Keys[] {Keys.io_throughput};\n-    }\n+  @Override\n+  public Key[] keys()\n+  {\n+    return new Keys[] {Keys.io_throughput};\n+  }\n }\n",
            "diff_size": 51
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2691/UpdateRecordsStep.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2691/UpdateRecordsStep.java\nindex 4080e507cd7..e0bc87e5fed 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2691/UpdateRecordsStep.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2691/UpdateRecordsStep.java\n@@ -39,9 +39,7 @@ import org.neo4j.unsafe.impl.batchimport.store.PrepareIdSequence;\n /**\n  * Updates a batch of records to a store.\n  */\n-public class UpdateRecordsStep<RECORD extends AbstractBaseRecord>\n-        extends ProcessorStep<RECORD[]>\n-        implements StatsProvider\n+public class UpdateRecordsStep<RECORD extends AbstractBaseRecord> extends ProcessorStep<RECORD[]> implements StatsProvider\n {\n     protected final RecordStore<RECORD> store;\n     private final int recordSize;\n@@ -90,6 +88,6 @@ public class UpdateRecordsStep<RECORD extends AbstractBaseRecord>\n     @Override\n     public Key[] keys()\n     {\n-        return new Keys[] {Keys.io_throughput};\n+        return new Keys[]{Keys.io_throughput};\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "42",
                    "column": "32",
                    "severity": "error",
                    "message": "'<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "63",
                    "column": "9",
                    "severity": "error",
                    "message": "'for' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "63",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "32",
                    "severity": "error",
                    "message": "'&&' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "65",
                    "column": "49",
                    "severity": "error",
                    "message": "'&&' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "86",
                    "column": "96",
                    "severity": "error",
                    "message": "'*' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2691/UpdateRecordsStep.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/2691/UpdateRecordsStep.java\nindex 4080e507cd7..011ac547ef7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2691/UpdateRecordsStep.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/2691/UpdateRecordsStep.java\n@@ -22,7 +22,6 @@ package org.neo4j.unsafe.impl.batchimport;\n import java.util.Collection;\n import java.util.concurrent.atomic.LongAdder;\n import java.util.function.LongFunction;\n-\n import org.neo4j.kernel.impl.store.RecordStore;\n import org.neo4j.kernel.impl.store.id.IdSequence;\n import org.neo4j.kernel.impl.store.id.validation.IdValidator;\n@@ -39,17 +38,16 @@ import org.neo4j.unsafe.impl.batchimport.store.PrepareIdSequence;\n /**\n  * Updates a batch of records to a store.\n  */\n-public class UpdateRecordsStep<RECORD extends AbstractBaseRecord>\n-        extends ProcessorStep<RECORD[]>\n-        implements StatsProvider\n+\n+public class UpdateRecordsStep <RECORD extends AbstractBaseRecord> extends ProcessorStep<RECORD[]>\n+implements StatsProvider\n {\n     protected final RecordStore<RECORD> store;\n     private final int recordSize;\n     private final PrepareIdSequence prepareIdSequence;\n     private final LongAdder recordsUpdated = new LongAdder();\n \n-    public UpdateRecordsStep( StageControl control, Configuration config, RecordStore<RECORD> store,\n-            PrepareIdSequence prepareIdSequence )\n+    public UpdateRecordsStep( StageControl control, Configuration config, RecordStore<RECORD> store, PrepareIdSequence prepareIdSequence )\n     {\n         super( control, \"v\", config, config.parallelRecordWrites() ? 0 : 1 );\n         this.store = store;\n@@ -62,15 +60,16 @@ public class UpdateRecordsStep<RECORD extends AbstractBaseRecord>\n     {\n         LongFunction<IdSequence> idSequence = prepareIdSequence.apply( store );\n         int recordsUpdatedInThisBatch = 0;\n-        for ( RECORD record : batch )\n+        for( RECORD record : batch)\n         {\n-            if ( record != null && record.inUse() && !IdValidator.isReservedId( record.getId() ) )\n+            if ( record != null&& record.inUse()&& ! IdValidator.isReservedId( record.getId() ) )\n             {\n                 store.prepareForCommit( record, idSequence.apply( record.getId() ) );\n                 store.updateRecord( record );\n                 recordsUpdatedInThisBatch++;\n             }\n         }\n+\n         recordsUpdated.add( recordsUpdatedInThisBatch );\n     }\n \n@@ -84,12 +83,12 @@ public class UpdateRecordsStep<RECORD extends AbstractBaseRecord>\n     @Override\n     public Stat stat( Key key )\n     {\n-        return key == Keys.io_throughput ? new IoThroughputStat( startTime, endTime, recordSize * recordsUpdated.sum() ) : null;\n+        return key == Keys.io_throughput ? new IoThroughputStat( startTime, endTime, recordSize* recordsUpdated.sum() ) : null;\n     }\n \n     @Override\n     public Key[] keys()\n     {\n-        return new Keys[] {Keys.io_throughput};\n+        return new Keys[]{Keys.io_throughput};\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 12
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
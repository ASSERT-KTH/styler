{
    "project_name": "Activiti-Activiti",
    "error_id": "273",
    "information": {
        "errors": [
            {
                "line": "16",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * limitations under the License.\n */\npackage org.activiti.engine.impl.jobexecutor;\n\nimport org.activiti.engine.impl.util.json.JSONException;\nimport org.activiti.engine.impl.util.json.JSONObject;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/273/TimerEventHandler.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler/273/TimerEventHandler.java\nindex 1146d88490c..d9c5e583cfb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/273/TimerEventHandler.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler/273/TimerEventHandler.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.engine.impl.jobexecutor;\n \n import org.activiti.engine.impl.util.json.JSONException;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/273/TimerEventHandler.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/intellij/273/TimerEventHandler.java\nindex 1146d88490c..51f4e9029ea 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/273/TimerEventHandler.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/intellij/273/TimerEventHandler.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.engine.impl.jobexecutor;\n \n import org.activiti.engine.impl.util.json.JSONException;\n@@ -20,74 +21,74 @@ import org.activiti.engine.impl.util.json.JSONObject;\n \n public class TimerEventHandler {\n \n-  public static final String PROPERTYNAME_TIMER_ACTIVITY_ID = \"activityId\";\n-  public static final String PROPERTYNAME_END_DATE_EXPRESSION = \"timerEndDate\";\n-  public static final String PROPERTYNAME_CALENDAR_NAME_EXPRESSION = \"calendarName\";\n+    public static final String PROPERTYNAME_TIMER_ACTIVITY_ID = \"activityId\";\n+    public static final String PROPERTYNAME_END_DATE_EXPRESSION = \"timerEndDate\";\n+    public static final String PROPERTYNAME_CALENDAR_NAME_EXPRESSION = \"calendarName\";\n \n-  public static String createConfiguration(String id, String endDate, String calendarName) {\n-    JSONObject cfgJson = new JSONObject();\n-    cfgJson.put(PROPERTYNAME_TIMER_ACTIVITY_ID, id);\n-    if (endDate != null) {\n-      cfgJson.put(PROPERTYNAME_END_DATE_EXPRESSION, endDate);\n-    }\n-    if (calendarName != null) {\n-      cfgJson.put(PROPERTYNAME_CALENDAR_NAME_EXPRESSION, calendarName);\n+    public static String createConfiguration(String id, String endDate, String calendarName) {\n+        JSONObject cfgJson = new JSONObject();\n+        cfgJson.put(PROPERTYNAME_TIMER_ACTIVITY_ID, id);\n+        if (endDate != null) {\n+            cfgJson.put(PROPERTYNAME_END_DATE_EXPRESSION, endDate);\n+        }\n+        if (calendarName != null) {\n+            cfgJson.put(PROPERTYNAME_CALENDAR_NAME_EXPRESSION, calendarName);\n+        }\n+        return cfgJson.toString();\n     }\n-    return cfgJson.toString();\n-  }\n \n-  public static String setActivityIdToConfiguration(String jobHandlerConfiguration, String activityId) {\n-    try {\n-      JSONObject cfgJson = new JSONObject(jobHandlerConfiguration);\n-      cfgJson.put(PROPERTYNAME_TIMER_ACTIVITY_ID, activityId);\n-      return cfgJson.toString();\n-    } catch (JSONException ex) {\n-      return jobHandlerConfiguration;\n+    public static String setActivityIdToConfiguration(String jobHandlerConfiguration, String activityId) {\n+        try {\n+            JSONObject cfgJson = new JSONObject(jobHandlerConfiguration);\n+            cfgJson.put(PROPERTYNAME_TIMER_ACTIVITY_ID, activityId);\n+            return cfgJson.toString();\n+        } catch (JSONException ex) {\n+            return jobHandlerConfiguration;\n+        }\n     }\n-  }\n \n-  public static String getActivityIdFromConfiguration(String jobHandlerConfiguration) {\n-    try {\n-      JSONObject cfgJson = new JSONObject(jobHandlerConfiguration);\n-      return cfgJson.get(PROPERTYNAME_TIMER_ACTIVITY_ID).toString();\n-    } catch (JSONException ex) {\n-      return jobHandlerConfiguration;\n+    public static String getActivityIdFromConfiguration(String jobHandlerConfiguration) {\n+        try {\n+            JSONObject cfgJson = new JSONObject(jobHandlerConfiguration);\n+            return cfgJson.get(PROPERTYNAME_TIMER_ACTIVITY_ID).toString();\n+        } catch (JSONException ex) {\n+            return jobHandlerConfiguration;\n+        }\n     }\n-  }\n \n-  public static String geCalendarNameFromConfiguration(String jobHandlerConfiguration) {\n-    try {\n-      JSONObject cfgJson = new JSONObject(jobHandlerConfiguration);\n-      return cfgJson.get(PROPERTYNAME_CALENDAR_NAME_EXPRESSION).toString();\n-    } catch (JSONException ex) {\n-      // calendar name is not specified\n-      return \"\";\n+    public static String geCalendarNameFromConfiguration(String jobHandlerConfiguration) {\n+        try {\n+            JSONObject cfgJson = new JSONObject(jobHandlerConfiguration);\n+            return cfgJson.get(PROPERTYNAME_CALENDAR_NAME_EXPRESSION).toString();\n+        } catch (JSONException ex) {\n+            // calendar name is not specified\n+            return \"\";\n+        }\n     }\n-  }\n \n-  public static String setEndDateToConfiguration(String jobHandlerConfiguration, String endDate) {\n-    JSONObject cfgJson = null;\n-    try {\n-      cfgJson = new JSONObject(jobHandlerConfiguration);\n-    } catch (JSONException ex) {\n-      // create the json config\n-      cfgJson = new JSONObject();\n-      cfgJson.put(PROPERTYNAME_TIMER_ACTIVITY_ID, jobHandlerConfiguration);\n-    }\n-    if (endDate != null) {\n-      cfgJson.put(PROPERTYNAME_END_DATE_EXPRESSION, endDate);\n-    }\n+    public static String setEndDateToConfiguration(String jobHandlerConfiguration, String endDate) {\n+        JSONObject cfgJson = null;\n+        try {\n+            cfgJson = new JSONObject(jobHandlerConfiguration);\n+        } catch (JSONException ex) {\n+            // create the json config\n+            cfgJson = new JSONObject();\n+            cfgJson.put(PROPERTYNAME_TIMER_ACTIVITY_ID, jobHandlerConfiguration);\n+        }\n+        if (endDate != null) {\n+            cfgJson.put(PROPERTYNAME_END_DATE_EXPRESSION, endDate);\n+        }\n \n-    return cfgJson.toString();\n-  }\n+        return cfgJson.toString();\n+    }\n \n-  public static String getEndDateFromConfiguration(String jobHandlerConfiguration) {\n-    try {\n-      JSONObject cfgJson = new JSONObject(jobHandlerConfiguration);\n-      return cfgJson.get(PROPERTYNAME_END_DATE_EXPRESSION).toString();\n-    } catch (JSONException ex) {\n-      return null;\n+    public static String getEndDateFromConfiguration(String jobHandlerConfiguration) {\n+        try {\n+            JSONObject cfgJson = new JSONObject(jobHandlerConfiguration);\n+            return cfgJson.get(PROPERTYNAME_END_DATE_EXPRESSION).toString();\n+        } catch (JSONException ex) {\n+            return null;\n+        }\n     }\n-  }\n \n }\n",
            "diff_size": 64
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "16",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "22",
                    "severity": "error",
                    "message": "'CLASS_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'METHOD_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/273/TimerEventHandler.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/codebuff/273/TimerEventHandler.java\nindex 1146d88490c..4a413e6e37b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/273/TimerEventHandler.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/codebuff/273/TimerEventHandler.java\n@@ -18,12 +18,12 @@ package org.activiti.engine.impl.jobexecutor;\n import org.activiti.engine.impl.util.json.JSONException;\n import org.activiti.engine.impl.util.json.JSONObject;\n \n+\n public class TimerEventHandler {\n \n   public static final String PROPERTYNAME_TIMER_ACTIVITY_ID = \"activityId\";\n   public static final String PROPERTYNAME_END_DATE_EXPRESSION = \"timerEndDate\";\n   public static final String PROPERTYNAME_CALENDAR_NAME_EXPRESSION = \"calendarName\";\n-\n   public static String createConfiguration(String id, String endDate, String calendarName) {\n     JSONObject cfgJson = new JSONObject();\n     cfgJson.put(PROPERTYNAME_TIMER_ACTIVITY_ID, id);\n@@ -31,7 +31,8 @@ public class TimerEventHandler {\n       cfgJson.put(PROPERTYNAME_END_DATE_EXPRESSION, endDate);\n     }\n     if (calendarName != null) {\n-      cfgJson.put(PROPERTYNAME_CALENDAR_NAME_EXPRESSION, calendarName);\n+      cfgJson.put(PROPERTYNAME_CALENDAR_NAME_EXPRESSION,\n+                  calendarName);\n     }\n     return cfgJson.toString();\n   }\n@@ -72,12 +73,12 @@ public class TimerEventHandler {\n     } catch (JSONException ex) {\n       // create the json config\n       cfgJson = new JSONObject();\n-      cfgJson.put(PROPERTYNAME_TIMER_ACTIVITY_ID, jobHandlerConfiguration);\n+      cfgJson.put(PROPERTYNAME_TIMER_ACTIVITY_ID,\n+                  jobHandlerConfiguration);\n     }\n     if (endDate != null) {\n       cfgJson.put(PROPERTYNAME_END_DATE_EXPRESSION, endDate);\n     }\n-\n     return cfgJson.toString();\n   }\n \n@@ -89,5 +90,4 @@ public class TimerEventHandler {\n       return null;\n     }\n   }\n-\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/273/TimerEventHandler.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_random/273/TimerEventHandler.java\nindex 1146d88490c..d9c5e583cfb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/273/TimerEventHandler.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_random/273/TimerEventHandler.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.engine.impl.jobexecutor;\n \n import org.activiti.engine.impl.util.json.JSONException;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/273/TimerEventHandler.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_three_grams/273/TimerEventHandler.java\nindex 1146d88490c..d9c5e583cfb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/273/TimerEventHandler.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_three_grams/273/TimerEventHandler.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.engine.impl.jobexecutor;\n \n import org.activiti.engine.impl.util.json.JSONException;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
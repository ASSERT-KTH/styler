{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1609",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "51",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "115",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "127",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1609/GraphiteOutput.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1609/GraphiteOutput.java\nindex 4c812b33650..35e4734f00c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1609/GraphiteOutput.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1609/GraphiteOutput.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.metrics.output;\n \n import com.codahale.metrics.Counter;\n@@ -39,68 +40,68 @@ import org.neo4j.logging.Log;\n \n public class GraphiteOutput implements Lifecycle, EventReporter\n {\n-    private final HostnamePort hostnamePort;\n-    private final long period;\n-    private final MetricRegistry registry;\n-    private final Log logger;\n-    private final String prefix;\n+  private final HostnamePort hostnamePort;\n+  private final long period;\n+  private final MetricRegistry registry;\n+  private final Log logger;\n+  private final String prefix;\n \n-    private GraphiteReporter graphiteReporter;\n+  private GraphiteReporter graphiteReporter;\n \n-    public GraphiteOutput( HostnamePort hostnamePort, long period, MetricRegistry registry, Log logger, String prefix )\n-    {\n-        this.hostnamePort = hostnamePort;\n-        this.period = period;\n-        this.registry = registry;\n-        this.logger = logger;\n-        this.prefix = prefix;\n-    }\n+  public GraphiteOutput(HostnamePort hostnamePort, long period, MetricRegistry registry, Log logger, String prefix)\n+  {\n+    this.hostnamePort = hostnamePort;\n+    this.period = period;\n+    this.registry = registry;\n+    this.logger = logger;\n+    this.prefix = prefix;\n+  }\n \n-    @Override\n-    public void init()\n-    {\n-        // Setup Graphite reporting\n-        final Graphite graphite = new Graphite( hostnamePort.getHost(), hostnamePort.getPort() );\n+  @Override\n+  public void init()\n+  {\n+    // Setup Graphite reporting\n+    final Graphite graphite = new Graphite(hostnamePort.getHost(), hostnamePort.getPort());\n \n-        graphiteReporter = GraphiteReporter.forRegistry( registry )\n-                .prefixedWith( prefix )\n-                .convertRatesTo( TimeUnit.SECONDS )\n-                .convertDurationsTo( TimeUnit.MILLISECONDS )\n-                .filter( MetricFilter.ALL )\n-                .build( graphite );\n-    }\n+    graphiteReporter = GraphiteReporter.forRegistry(registry)\n+        .prefixedWith(prefix)\n+        .convertRatesTo(TimeUnit.SECONDS)\n+        .convertDurationsTo(TimeUnit.MILLISECONDS)\n+        .filter(MetricFilter.ALL)\n+        .build(graphite);\n+  }\n \n-    @Override\n-    public void start()\n-    {\n-        graphiteReporter.start( period, TimeUnit.MILLISECONDS );\n-        logger.info( \"Sending metrics to Graphite server at \" + hostnamePort );\n-    }\n+  @Override\n+  public void start()\n+  {\n+    graphiteReporter.start(period, TimeUnit.MILLISECONDS);\n+    logger.info(\"Sending metrics to Graphite server at \" + hostnamePort);\n+  }\n \n-    @Override\n-    public void stop()\n-    {\n-        graphiteReporter.close();\n-    }\n+  @Override\n+  public void stop()\n+  {\n+    graphiteReporter.close();\n+  }\n \n-    @Override\n-    public void shutdown()\n-    {\n-        graphiteReporter = null;\n-    }\n+  @Override\n+  public void shutdown()\n+  {\n+    graphiteReporter = null;\n+  }\n \n-    @Override\n-    public void report( SortedMap<String,Gauge> gauges, SortedMap<String,Counter> counters,\n-            SortedMap<String,Histogram> histograms, SortedMap<String,Meter> meters, SortedMap<String,Timer> timers )\n+  @Override\n+  public void report(SortedMap<String, Gauge> gauges, SortedMap<String, Counter> counters,\n+                     SortedMap<String, Histogram> histograms, SortedMap<String, Meter> meters, SortedMap<String, Timer> timers)\n+  {\n+    /*\n+     * The synchronized is needed here since the `report` method called below is also called by the recurring\n+     * scheduled thread.  In order to avoid races with that thread we synchronize on the same monitor\n+     * before reporting.\n+     */\n+    synchronized (graphiteReporter)\n     {\n-        /*\n-         * The synchronized is needed here since the `report` method called below is also called by the recurring\n-         * scheduled thread.  In order to avoid races with that thread we synchronize on the same monitor\n-         * before reporting.\n-         */\n-        synchronized ( graphiteReporter )\n-        {\n-            graphiteReporter.report( gauges, counters, histograms, meters, timers );\n-        }\n+      graphiteReporter.report(gauges, counters, histograms, meters, timers);\n     }\n+  }\n }\n",
            "diff_size": 63
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
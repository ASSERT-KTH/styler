{
    "project_name": "findbugsproject-findbugs",
    "error_id": "106",
    "information": {
        "errors": [
            {
                "line": "19",
                "column": "1",
                "severity": "error",
                "message": "File contains tab characters (this is the first instance).",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
            }
        ]
    },
    "source_code": "    /**\n     * Returns a SortBugCollection of bugs that are in the classes that\n\t * are passed to it.\n     * @param classes String[] of classes in the project\n     * @return\n     * @throws IOException",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "19",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/106/RunFindbugs.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/intellij/106/RunFindbugs.java\nindex 2bb0bd5e380..97c50c09547 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/106/RunFindbugs.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/intellij/106/RunFindbugs.java\n@@ -16,30 +16,32 @@ public class RunFindbugs {\n \n     /**\n      * Returns a SortBugCollection of bugs that are in the classes that\n-\t * are passed to it.\n+     * are passed to it.\n+     *\n      * @param classes String[] of classes in the project\n      * @return\n      * @throws IOException\n-\t * @throws InterruptedException\n+     * @throws InterruptedException\n      */\n     public static SortedBugCollection getBugs(String[] classes) throws IOException, InterruptedException {\n         Project findBugsProject = new Project();\n-\t\tfor(String f : classes)\n+        for (String f : classes) {\n             findBugsProject.addFile(f);\n+        }\n         final SortedBugCollection bugs = new SortedBugCollection();\n         BugReporter reporter = new MyReporter(bugs);\n         System.setProperty(\"findbugs.jaws\", \"true\");\n         // System.out.println(System.getProperty(\"findbugs.jaws\"));\n         DetectorFactoryCollection.instance();\n-        \n-      \n+\n+\n         IFindBugsEngine findBugs = new FindBugs2();\n         findBugs.setBugReporter(reporter);\n         findBugs.setProject(findBugsProject);\n         findBugs.setDetectorFactoryCollection(DetectorFactoryCollection.instance());\n //      Honor current UserPreferences\n         findBugs.setUserPreferences(UserPreferences.createDefaultUserPreferences());\n-        \n+\n         reporter.setPriorityThreshold(Detector.NORMAL_PRIORITY);\n \n         // System.setProperty(\"findbugs.home\", \"/Users/pugh/Documents/eclipse-3.2/workspace/findbugs\");\n@@ -47,6 +49,6 @@ public class RunFindbugs {\n \n         findBugs.execute();\n \n-\t\treturn bugs;\t\t\n+        return bugs;\n     }\n }\n",
            "diff_size": 9
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/106/RunFindbugs.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/codebuff/106/RunFindbugs.java\nindex 2bb0bd5e380..95ad18480b6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/106/RunFindbugs.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/codebuff/106/RunFindbugs.java\n@@ -1,7 +1,6 @@\n package edu.umd.cs.findbugs.bluej;\n \n import java.io.IOException;\n-\n import edu.umd.cs.findbugs.BugReporter;\n import edu.umd.cs.findbugs.Detector;\n import edu.umd.cs.findbugs.DetectorFactoryCollection;\n@@ -16,37 +15,33 @@ public class RunFindbugs {\n \n     /**\n      * Returns a SortBugCollection of bugs that are in the classes that\n-\t * are passed to it.\n+     * are passed to it.\n      * @param classes String[] of classes in the project\n      * @return\n      * @throws IOException\n-\t * @throws InterruptedException\n+     * @throws InterruptedException\n      */\n     public static SortedBugCollection getBugs(String[] classes) throws IOException, InterruptedException {\n         Project findBugsProject = new Project();\n-\t\tfor(String f : classes)\n+        for (String f : classes)\n             findBugsProject.addFile(f);\n+\n         final SortedBugCollection bugs = new SortedBugCollection();\n         BugReporter reporter = new MyReporter(bugs);\n         System.setProperty(\"findbugs.jaws\", \"true\");\n         // System.out.println(System.getProperty(\"findbugs.jaws\"));\n         DetectorFactoryCollection.instance();\n-        \n-      \n         IFindBugsEngine findBugs = new FindBugs2();\n         findBugs.setBugReporter(reporter);\n         findBugs.setProject(findBugsProject);\n         findBugs.setDetectorFactoryCollection(DetectorFactoryCollection.instance());\n //      Honor current UserPreferences\n         findBugs.setUserPreferences(UserPreferences.createDefaultUserPreferences());\n-        \n         reporter.setPriorityThreshold(Detector.NORMAL_PRIORITY);\n \n         // System.setProperty(\"findbugs.home\", \"/Users/pugh/Documents/eclipse-3.2/workspace/findbugs\");\n-\n-\n         findBugs.execute();\n-\n-\t\treturn bugs;\t\t\n+        return bugs;\n     }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 14
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "19",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": null,
            "diff": null
        }
    ],
    "repaired_by": [
        "intellij",
        "codebuff"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ]
}
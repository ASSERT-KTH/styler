{
    "project_name": "StevenLooman-sonar-magik",
    "error_id": "7",
    "information": {
        "errors": [
            {
                "line": "100",
                "severity": "warning",
                "message": "Line is longer than 100 characters (found 102).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "      AstNode indexerParametersNode = parentNode.getFirstChild(MagikGrammar.INDEXER_PARAMETERS);\n      if (indexerParametersNode != null) {\n        List<AstNode> identifierNodes = indexerParametersNode.getDescendants(MagikGrammar.IDENTIFIER);\n        for (AstNode identifierNode : identifierNodes) {\n          AstNode parameterNode = identifierNode.getParent();\n          String identifier = identifierNode.getTokenValue();",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "100",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/errored/1/7/ScopeBuilderVisitor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/intellij/7/ScopeBuilderVisitor.java\nindex cd48ea1b58c..f0f83be2e65 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/errored/1/7/ScopeBuilderVisitor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/intellij/7/ScopeBuilderVisitor.java\n@@ -37,6 +37,7 @@ public class ScopeBuilderVisitor extends MagikVisitor {\n \n   /**\n    * Get the {{GlobalScope}}.\n+   *\n    * @return Global scope\n    */\n   public GlobalScope getGlobalScope() {\n@@ -65,7 +66,7 @@ public class ScopeBuilderVisitor extends MagikVisitor {\n     } else if (nodeType == MagikGrammar.BODY) {\n       visitNodeBody(node);\n     } else if (nodeType == MagikGrammar.ASSIGNMENT_EXPRESSION\n-               || nodeType == MagikGrammar.AUGMENTED_ASSIGNMENT_EXPRESSION) {\n+        || nodeType == MagikGrammar.AUGMENTED_ASSIGNMENT_EXPRESSION) {\n       visitNodeAssignmentExpression(node);\n     } else if (nodeType == MagikGrammar.VARIABLE_DEFINITION_STATEMENT) {\n       visitNodeVariableDefinitionStatement(node);\n@@ -97,7 +98,8 @@ public class ScopeBuilderVisitor extends MagikVisitor {\n       // add indexer parameters\n       AstNode indexerParametersNode = parentNode.getFirstChild(MagikGrammar.INDEXER_PARAMETERS);\n       if (indexerParametersNode != null) {\n-        List<AstNode> identifierNodes = indexerParametersNode.getDescendants(MagikGrammar.IDENTIFIER);\n+        List<AstNode> identifierNodes =\n+            indexerParametersNode.getDescendants(MagikGrammar.IDENTIFIER);\n         for (AstNode identifierNode : identifierNodes) {\n           AstNode parameterNode = identifierNode.getParent();\n           String identifier = identifierNode.getTokenValue();\n@@ -120,7 +122,7 @@ public class ScopeBuilderVisitor extends MagikVisitor {\n       AstNode identifiersNode = tryNode.getFirstChild(MagikGrammar.IDENTIFIERS);\n       if (identifiersNode != null) {\n         List<AstNode> identifierNodes = identifiersNode.getChildren(MagikGrammar.IDENTIFIER);\n-        for (AstNode identifierNode: identifierNodes) {\n+        for (AstNode identifierNode : identifierNodes) {\n           String identifier = identifierNode.getTokenValue();\n           scope.addDeclaration(ScopeEntry.Type.PARAMETER, identifier, identifierNode, null);\n         }\n@@ -136,7 +138,7 @@ public class ScopeBuilderVisitor extends MagikVisitor {\n         if (forNode.getType() == MagikGrammar.FOR) {\n           AstNode identifiersNode = forNode.getFirstChild(MagikGrammar.IDENTIFIERS_WITH_GATHER);\n           List<AstNode> identifierNodes = identifiersNode.getChildren(MagikGrammar.IDENTIFIER);\n-          for (AstNode identifierNode: identifierNodes) {\n+          for (AstNode identifierNode : identifierNodes) {\n             String identifier = identifierNode.getTokenValue();\n             scope.addDeclaration(ScopeEntry.Type.DEFINITION, identifier, identifierNode, null);\n           }\n@@ -163,7 +165,7 @@ public class ScopeBuilderVisitor extends MagikVisitor {\n       identifierNodes = identifiersWithGatherNode.getChildren(MagikGrammar.IDENTIFIER);\n     } else {\n       identifierNodes = new ArrayList<>();\n-      for (AstNode varDefNode: node.getChildren(MagikGrammar.VARIABLE_DEFINITION)) {\n+      for (AstNode varDefNode : node.getChildren(MagikGrammar.VARIABLE_DEFINITION)) {\n         AstNode identifierNode = varDefNode.getFirstChild(MagikGrammar.IDENTIFIER);\n         identifierNodes.add(identifierNode);\n       }\n@@ -189,7 +191,7 @@ public class ScopeBuilderVisitor extends MagikVisitor {\n   private void visitNodeMultipleAssignmentStatement(AstNode node) {\n     AstNode identifiersNode = node.getFirstChild(MagikGrammar.IDENTIFIERS_WITH_GATHER);\n     List<AstNode> identifierNodes = identifiersNode.getChildren(MagikGrammar.IDENTIFIER);\n-    for (AstNode identifierNode: identifierNodes) {\n+    for (AstNode identifierNode : identifierNodes) {\n       String identifier = identifierNode.getTokenValue();\n       if (scope.getScopeEntry(identifier) != null) {\n         // don't overwrite entries\n",
            "diff_size": 8
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "68",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "69",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 2, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "100",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "161",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 110).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/errored/1/7/ScopeBuilderVisitor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/naturalize/7/ScopeBuilderVisitor.java\nindex cd48ea1b58c..f89fbeccf2a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/errored/1/7/ScopeBuilderVisitor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/naturalize/7/ScopeBuilderVisitor.java\n@@ -65,8 +65,8 @@ public class ScopeBuilderVisitor extends MagikVisitor {\n     } else if (nodeType == MagikGrammar.BODY) {\n       visitNodeBody(node);\n     } else if (nodeType == MagikGrammar.ASSIGNMENT_EXPRESSION\n-               || nodeType == MagikGrammar.AUGMENTED_ASSIGNMENT_EXPRESSION) {\n-      visitNodeAssignmentExpression(node);\n+    || nodeType == MagikGrammar.AUGMENTED_ASSIGNMENT_EXPRESSION) {\n+  visitNodeAssignmentExpression(node);\n     } else if (nodeType == MagikGrammar.VARIABLE_DEFINITION_STATEMENT) {\n       visitNodeVariableDefinitionStatement(node);\n     } else if (nodeType == MagikGrammar.MULTIPLE_ASSIGNMENT_STATEMENT) {\n@@ -158,8 +158,7 @@ public class ScopeBuilderVisitor extends MagikVisitor {\n     AstNode varDefMultiNode = node.getFirstChild(MagikGrammar.VARIABLE_DEFINITION_MULTI);\n     List<AstNode> identifierNodes;\n     if (varDefMultiNode != null) {\n-      AstNode identifiersWithGatherNode =\n-          varDefMultiNode.getFirstChild(MagikGrammar.IDENTIFIERS_WITH_GATHER);\n+      AstNode identifiersWithGatherNode = varDefMultiNode.getFirstChild(MagikGrammar.IDENTIFIERS_WITH_GATHER);\n       identifierNodes = identifiersWithGatherNode.getChildren(MagikGrammar.IDENTIFIER);\n     } else {\n       identifierNodes = new ArrayList<>();\n@@ -256,4 +255,4 @@ public class ScopeBuilderVisitor extends MagikVisitor {\n     scope = scope.getParentScope();\n   }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "51",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 253).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "61",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 13, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "62",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 11, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "64",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 20, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "65",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 18, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "66",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 27, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "67",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 25, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "68",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 34, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "69",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 32, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "70",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 41, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "71",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 39, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "97",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "114",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 13, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "116",
                    "severity": "warning",
                    "message": "Comment has incorrect indentation level 6, expected is 13, indentation should be the same level as line 118.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "118",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 13, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "119",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 13, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "120",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 13, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "121",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 15, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "122",
                    "severity": "warning",
                    "message": "'for' has incorrect indentation level 15, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "123",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 17, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "124",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 17, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "125",
                    "severity": "warning",
                    "message": "'for rcurly' has incorrect indentation level 15, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "126",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 13, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "127",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 11, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "128",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 20, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "130",
                    "severity": "warning",
                    "message": "Comment has incorrect indentation level 6, expected is 20, indentation should be the same level as line 132.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "132",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 20, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "133",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 20, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "134",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 20, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "135",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 22, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "136",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 22, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "137",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 24, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "137",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 110).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "138",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 24, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "138",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 109).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "139",
                    "severity": "warning",
                    "message": "'for' has incorrect indentation level 24, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "140",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 26, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "141",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 26, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "141",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 109).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "142",
                    "severity": "warning",
                    "message": "'for rcurly' has incorrect indentation level 24, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "143",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 22, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "144",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 20, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "145",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 18, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "146",
                    "severity": "warning",
                    "message": "Comment has incorrect indentation level 6, expected is 20, indentation should be the same level as line 147.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "147",
                    "severity": "warning",
                    "message": "'else' child has incorrect indentation level 20, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "148",
                    "severity": "warning",
                    "message": "'else rcurly' has incorrect indentation level 11, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "161",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 110).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/errored/1/7/ScopeBuilderVisitor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/codebuff/7/ScopeBuilderVisitor.java\nindex cd48ea1b58c..3ebbf314426 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/errored/1/7/ScopeBuilderVisitor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/codebuff/7/ScopeBuilderVisitor.java\n@@ -2,10 +2,8 @@ package org.stevenlooman.sw.magik.analysis.scope;\n \n import com.sonar.sslr.api.AstNode;\n import com.sonar.sslr.api.AstNodeType;\n-\n import org.stevenlooman.sw.magik.MagikVisitor;\n import org.stevenlooman.sw.magik.api.MagikGrammar;\n-\n import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.HashMap;\n@@ -17,6 +15,7 @@ public class ScopeBuilderVisitor extends MagikVisitor {\n   /**\n    * Global scope.\n    */\n+\n   private GlobalScope globalScope;\n \n   /**\n@@ -32,6 +31,8 @@ public class ScopeBuilderVisitor extends MagikVisitor {\n   /**\n    * Constructor.\n    */\n+\n+\n   public ScopeBuilderVisitor() {\n   }\n \n@@ -39,21 +40,15 @@ public class ScopeBuilderVisitor extends MagikVisitor {\n    * Get the {{GlobalScope}}.\n    * @return Global scope\n    */\n+\n+\n   public GlobalScope getGlobalScope() {\n     return globalScope;\n   }\n \n   @Override\n   public List<AstNodeType> subscribedTo() {\n-    return Arrays.asList(\n-        MagikGrammar.MAGIK,\n-        MagikGrammar.BODY,\n-        MagikGrammar.ASSIGNMENT_EXPRESSION,\n-        MagikGrammar.AUGMENTED_ASSIGNMENT_EXPRESSION,\n-        MagikGrammar.VARIABLE_DEFINITION_STATEMENT,\n-        MagikGrammar.MULTIPLE_ASSIGNMENT_STATEMENT,\n-        MagikGrammar.ATOM\n-    );\n+    return Arrays.asList(MagikGrammar.MAGIK, MagikGrammar.BODY, MagikGrammar.ASSIGNMENT_EXPRESSION, MagikGrammar.AUGMENTED_ASSIGNMENT_EXPRESSION, MagikGrammar.VARIABLE_DEFINITION_STATEMENT, MagikGrammar.MULTIPLE_ASSIGNMENT_STATEMENT, MagikGrammar.ATOM);\n   }\n \n   @Override\n@@ -63,17 +58,17 @@ public class ScopeBuilderVisitor extends MagikVisitor {\n     if (nodeType == MagikGrammar.MAGIK) {\n       scope = globalScope = new GlobalScope(scopeIndex, node);\n     } else if (nodeType == MagikGrammar.BODY) {\n-      visitNodeBody(node);\n-    } else if (nodeType == MagikGrammar.ASSIGNMENT_EXPRESSION\n+             visitNodeBody(node);\n+           } else if (nodeType == MagikGrammar.ASSIGNMENT_EXPRESSION\n                || nodeType == MagikGrammar.AUGMENTED_ASSIGNMENT_EXPRESSION) {\n-      visitNodeAssignmentExpression(node);\n-    } else if (nodeType == MagikGrammar.VARIABLE_DEFINITION_STATEMENT) {\n-      visitNodeVariableDefinitionStatement(node);\n-    } else if (nodeType == MagikGrammar.MULTIPLE_ASSIGNMENT_STATEMENT) {\n-      visitNodeMultipleAssignmentStatement(node);\n-    } else if (nodeType == MagikGrammar.ATOM) {\n-      visitNodeAtom(node);\n-    }\n+                    visitNodeAssignmentExpression(node);\n+                  } else if (nodeType == MagikGrammar.VARIABLE_DEFINITION_STATEMENT) {\n+                           visitNodeVariableDefinitionStatement(node);\n+                         } else if (nodeType == MagikGrammar.MULTIPLE_ASSIGNMENT_STATEMENT) {\n+                                  visitNodeMultipleAssignmentStatement(node);\n+                                } else if (nodeType == MagikGrammar.ATOM) {\n+                                         visitNodeAtom(node);\n+                                       }\n   }\n \n   private void visitNodeBody(AstNode node) {\n@@ -84,6 +79,7 @@ public class ScopeBuilderVisitor extends MagikVisitor {\n       scope = new ProcedureScope(scope, node);\n \n       // add parameters to scope\n+\n       AstNode parametersNode = parentNode.getFirstChild(MagikGrammar.PARAMETERS);\n       if (parametersNode != null) {\n         List<AstNode> identifierNodes = parametersNode.getDescendants(MagikGrammar.IDENTIFIER);\n@@ -95,6 +91,7 @@ public class ScopeBuilderVisitor extends MagikVisitor {\n       }\n \n       // add indexer parameters\n+\n       AstNode indexerParametersNode = parentNode.getFirstChild(MagikGrammar.INDEXER_PARAMETERS);\n       if (indexerParametersNode != null) {\n         List<AstNode> identifierNodes = indexerParametersNode.getDescendants(MagikGrammar.IDENTIFIER);\n@@ -106,6 +103,7 @@ public class ScopeBuilderVisitor extends MagikVisitor {\n       }\n \n       // add assignment parameter to scope\n+\n       AstNode assignmentParameterNode = parentNode.getFirstChild(MagikGrammar.ASSIGNMENT_PARAMETER);\n       if (assignmentParameterNode != null) {\n         AstNode identifierNode = assignmentParameterNode.getFirstChild(MagikGrammar.IDENTIFIER);\n@@ -113,62 +111,64 @@ public class ScopeBuilderVisitor extends MagikVisitor {\n         scope.addDeclaration(ScopeEntry.Type.PARAMETER, identifier, identifierNode, null);\n       }\n     } else if (parentNode.getType() == MagikGrammar.WHEN) {\n-      scope = new BodyScope(scope, node);\n+             scope = new BodyScope(scope, node);\n \n       // add _with items to scope\n-      AstNode tryNode = parentNode.getParent();\n-      AstNode identifiersNode = tryNode.getFirstChild(MagikGrammar.IDENTIFIERS);\n-      if (identifiersNode != null) {\n-        List<AstNode> identifierNodes = identifiersNode.getChildren(MagikGrammar.IDENTIFIER);\n-        for (AstNode identifierNode: identifierNodes) {\n-          String identifier = identifierNode.getTokenValue();\n-          scope.addDeclaration(ScopeEntry.Type.PARAMETER, identifier, identifierNode, null);\n-        }\n-      }\n-    } else if (parentNode.getType() == MagikGrammar.LOOP) {\n-      scope = new BodyScope(scope, node);\n+\n+             AstNode tryNode = parentNode.getParent();\n+             AstNode identifiersNode = tryNode.getFirstChild(MagikGrammar.IDENTIFIERS);\n+             if (identifiersNode != null) {\n+               List<AstNode> identifierNodes = identifiersNode.getChildren(MagikGrammar.IDENTIFIER);\n+               for (AstNode identifierNode : identifierNodes) {\n+                 String identifier = identifierNode.getTokenValue();\n+                 scope.addDeclaration(ScopeEntry.Type.PARAMETER, identifier, identifierNode, null);\n+               }\n+             }\n+           } else if (parentNode.getType() == MagikGrammar.LOOP) {\n+                    scope = new BodyScope(scope, node);\n \n       // add for-items to scope\n-      AstNode loopNode = node.getParent();\n-      AstNode overNode = loopNode.getParent();\n-      if (overNode.getType() == MagikGrammar.OVER) {\n-        AstNode forNode = overNode.getParent();\n-        if (forNode.getType() == MagikGrammar.FOR) {\n-          AstNode identifiersNode = forNode.getFirstChild(MagikGrammar.IDENTIFIERS_WITH_GATHER);\n-          List<AstNode> identifierNodes = identifiersNode.getChildren(MagikGrammar.IDENTIFIER);\n-          for (AstNode identifierNode: identifierNodes) {\n-            String identifier = identifierNode.getTokenValue();\n-            scope.addDeclaration(ScopeEntry.Type.DEFINITION, identifier, identifierNode, null);\n-          }\n-        }\n-      }\n-    } else {\n+\n+                    AstNode loopNode = node.getParent();\n+                    AstNode overNode = loopNode.getParent();\n+                    if (overNode.getType() == MagikGrammar.OVER) {\n+                      AstNode forNode = overNode.getParent();\n+                      if (forNode.getType() == MagikGrammar.FOR) {\n+                        AstNode identifiersNode = forNode.getFirstChild(MagikGrammar.IDENTIFIERS_WITH_GATHER);\n+                        List<AstNode> identifierNodes = identifiersNode.getChildren(MagikGrammar.IDENTIFIER);\n+                        for (AstNode identifierNode : identifierNodes) {\n+                          String identifier = identifierNode.getTokenValue();\n+                          scope.addDeclaration(ScopeEntry.Type.DEFINITION, identifier, identifierNode, null);\n+                        }\n+                      }\n+                    }\n+                  } else {\n       // regular scope\n-      scope = new BodyScope(scope, node);\n-    }\n+                    scope = new BodyScope(scope, node);\n+           }\n \n     scopeIndex.put(node, scope);\n   }\n \n   private void visitNodeVariableDefinitionStatement(AstNode node) {\n-    String type = node.getFirstChild(MagikGrammar.VARIABLE_DEFINITION_MODIFIER)\n-        .getTokenValue().toUpperCase().substring(1);\n+    String type = node.getFirstChild(MagikGrammar.VARIABLE_DEFINITION_MODIFIER).getTokenValue()\n+                                                                               .toUpperCase()\n+                                                                               .substring(1);\n     ScopeEntry.Type scopeEntryType = ScopeEntry.Type.valueOf(type);\n-\n     AstNode varDefMultiNode = node.getFirstChild(MagikGrammar.VARIABLE_DEFINITION_MULTI);\n     List<AstNode> identifierNodes;\n     if (varDefMultiNode != null) {\n-      AstNode identifiersWithGatherNode =\n-          varDefMultiNode.getFirstChild(MagikGrammar.IDENTIFIERS_WITH_GATHER);\n+      AstNode identifiersWithGatherNode = varDefMultiNode.getFirstChild(MagikGrammar.IDENTIFIERS_WITH_GATHER);\n       identifierNodes = identifiersWithGatherNode.getChildren(MagikGrammar.IDENTIFIER);\n     } else {\n       identifierNodes = new ArrayList<>();\n-      for (AstNode varDefNode: node.getChildren(MagikGrammar.VARIABLE_DEFINITION)) {\n+      for (AstNode varDefNode : node.getChildren(MagikGrammar.VARIABLE_DEFINITION)) {\n         AstNode identifierNode = varDefNode.getFirstChild(MagikGrammar.IDENTIFIER);\n         identifierNodes.add(identifierNode);\n       }\n     }\n \n+\n     for (AstNode identifierNode : identifierNodes) {\n       String identifier = identifierNode.getTokenValue();\n       if (scope.getScopeEntry(identifier) != null) {\n@@ -189,7 +189,7 @@ public class ScopeBuilderVisitor extends MagikVisitor {\n   private void visitNodeMultipleAssignmentStatement(AstNode node) {\n     AstNode identifiersNode = node.getFirstChild(MagikGrammar.IDENTIFIERS_WITH_GATHER);\n     List<AstNode> identifierNodes = identifiersNode.getChildren(MagikGrammar.IDENTIFIER);\n-    for (AstNode identifierNode: identifierNodes) {\n+    for (AstNode identifierNode : identifierNodes) {\n       String identifier = identifierNode.getTokenValue();\n       if (scope.getScopeEntry(identifier) != null) {\n         // don't overwrite entries\n@@ -218,6 +218,7 @@ public class ScopeBuilderVisitor extends MagikVisitor {\n     }\n \n     // add as definition\n+\n     scope.addDeclaration(ScopeEntry.Type.DEFINITION, identifier, identifierNode, null);\n   }\n \n@@ -235,10 +236,12 @@ public class ScopeBuilderVisitor extends MagikVisitor {\n       }\n \n       // don't overwrite entries\n+\n       return;\n     }\n \n     // add as global, and use directly\n+\n     ScopeEntry entry = scope.addDeclaration(ScopeEntry.Type.GLOBAL, identifier, node, null);\n     entry.addUsage(node);\n   }\n@@ -255,5 +258,4 @@ public class ScopeBuilderVisitor extends MagikVisitor {\n     // pop current scope\n     scope = scope.getParentScope();\n   }\n-\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 73
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "100",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "100",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "java110-MicroCommunity",
    "error_id": "87",
    "information": {
        "errors": [
            {
                "line": "45",
                "severity": "error",
                "message": "Line is longer than 150 characters (found 196).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "        }\n\n        List<ReturnPayFeeDto> returnPayFees = BeanConvertUtil.covertBeanList(returnPayFeeServiceDaoImpl.getReturnPayFeeInfo(BeanConvertUtil.beanCovertMap(returnPayFeeDto)), ReturnPayFeeDto.class);\n\n        if (returnPayFees == null || returnPayFees.size() == 0) {\n            return returnPayFees;",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "45",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 196).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/87/ReturnPayFeeInnerServiceSMOImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/intellij/87/ReturnPayFeeInnerServiceSMOImpl.java\nindex ce3859c13a8..5906493e39b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/87/ReturnPayFeeInnerServiceSMOImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/intellij/87/ReturnPayFeeInnerServiceSMOImpl.java\n@@ -42,7 +42,8 @@ public class ReturnPayFeeInnerServiceSMOImpl extends BaseServiceSMO implements I\n             returnPayFeeDto.setPage((page - 1) * returnPayFeeDto.getRow());\n         }\n \n-        List<ReturnPayFeeDto> returnPayFees = BeanConvertUtil.covertBeanList(returnPayFeeServiceDaoImpl.getReturnPayFeeInfo(BeanConvertUtil.beanCovertMap(returnPayFeeDto)), ReturnPayFeeDto.class);\n+        List<ReturnPayFeeDto> returnPayFees = BeanConvertUtil\n+            .covertBeanList(returnPayFeeServiceDaoImpl.getReturnPayFeeInfo(BeanConvertUtil.beanCovertMap(returnPayFeeDto)), ReturnPayFeeDto.class);\n \n         if (returnPayFees == null || returnPayFees.size() == 0) {\n             return returnPayFees;\n",
            "diff_size": 2
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "45",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 196).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/87/ReturnPayFeeInnerServiceSMOImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/naturalize/87/ReturnPayFeeInnerServiceSMOImpl.java\nindex ce3859c13a8..805111ed25c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/87/ReturnPayFeeInnerServiceSMOImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/naturalize/87/ReturnPayFeeInnerServiceSMOImpl.java\n@@ -47,7 +47,6 @@ public class ReturnPayFeeInnerServiceSMOImpl extends BaseServiceSMO implements I\n         if (returnPayFees == null || returnPayFees.size() == 0) {\n             return returnPayFees;\n         }\n-\n //        String[] userIds = getUserIds(returnPayFees);\n //        //\u6839\u636e userId \u67e5\u8be2\u7528\u6237\u4fe1\u606f\n //        List<UserDto> users = userInnerServiceSMOImpl.getUserInfo(userIds);\n@@ -57,35 +56,10 @@ public class ReturnPayFeeInnerServiceSMOImpl extends BaseServiceSMO implements I\n //        }\n         return returnPayFees;\n     }\n-\n //    /**\n //     * \u4ece\u7528\u6237\u5217\u8868\u4e2d\u67e5\u8be2\u7528\u6237\uff0c\u5c06\u7528\u6237\u4e2d\u7684\u4fe1\u606f \u5237\u65b0\u5230 floor\u5bf9\u8c61\u4e2d\n-//     *\n-//     * @param returnPayFee \u5c0f\u533a\u9000\u8d39\u8868\u4fe1\u606f\n-//     * @param users        \u7528\u6237\u5217\u8868\n-//     */\n-//    private void refreshReturnPayFee(ReturnPayFeeDto returnPayFee, List<UserDto> users) {\n-//        for (UserDto user : users) {\n-//            if (returnPayFee.getUserId().equals(user.getUserId())) {\n-//                BeanConvertUtil.covertBean(user, returnPayFee);\n-//            }\n-//        }\n-//    }\n-//\n-//    /**\n-//     * \u83b7\u53d6\u6279\u91cfuserId\n-//     *\n-//     * @param returnPayFees \u5c0f\u533a\u697c\u4fe1\u606f\n-//     * @return \u6279\u91cfuserIds \u4fe1\u606f\n-//     */\n-//    private String[] getUserIds(List<ReturnPayFeeDto> returnPayFees) {\n-//        List<String> userIds = new ArrayList<String>();\n-//        for (ReturnPayFeeDto returnPayFee : returnPayFees) {\n-//            userIds.add(returnPayFee.getUserId());\n-//        }\n-//\n-//        return userIds.toArray(new String[userIds.size()]);\n-//    }\n+//  \n+\n \n     @Override\n     public int queryReturnPayFeesCount(@RequestBody ReturnPayFeeDto returnPayFeeDto) {\n@@ -107,4 +81,4 @@ public class ReturnPayFeeInnerServiceSMOImpl extends BaseServiceSMO implements I\n     public void setUserInnerServiceSMOImpl(IUserInnerServiceSMO userInnerServiceSMOImpl) {\n         this.userInnerServiceSMOImpl = userInnerServiceSMOImpl;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 29
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "46",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 196).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/87/ReturnPayFeeInnerServiceSMOImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/codebuff/87/ReturnPayFeeInnerServiceSMOImpl.java\nindex ce3859c13a8..83ecf951325 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/87/ReturnPayFeeInnerServiceSMOImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/codebuff/87/ReturnPayFeeInnerServiceSMOImpl.java\n@@ -1,6 +1,5 @@\n package com.java110.fee.smo.impl;\n \n-\n import com.java110.dto.returnPayFee.ReturnPayFeeDto;\n import com.java110.fee.dao.IReturnPayFeeServiceDao;\n import com.java110.utils.util.BeanConvertUtil;\n@@ -11,7 +10,6 @@ import com.java110.dto.PageDto;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.web.bind.annotation.RequestBody;\n import org.springframework.web.bind.annotation.RestController;\n-\n import java.util.List;\n \n /**\n@@ -22,6 +20,8 @@ import java.util.List;\n  * @Version 1.0\n  * add by wuxw 2019/4/24\n  **/\n+\n+\n @RestController\n public class ReturnPayFeeInnerServiceSMOImpl extends BaseServiceSMO implements IReturnPayFeeInnerServiceSMO {\n \n@@ -36,14 +36,14 @@ public class ReturnPayFeeInnerServiceSMOImpl extends BaseServiceSMO implements I\n \n         //\u6821\u9a8c\u662f\u5426\u4f20\u4e86 \u5206\u9875\u4fe1\u606f\n \n-        int page = returnPayFeeDto.getPage();\n \n+\n+        int page = returnPayFeeDto.getPage();\n         if (page != PageDto.DEFAULT_PAGE) {\n             returnPayFeeDto.setPage((page - 1) * returnPayFeeDto.getRow());\n         }\n \n         List<ReturnPayFeeDto> returnPayFees = BeanConvertUtil.covertBeanList(returnPayFeeServiceDaoImpl.getReturnPayFeeInfo(BeanConvertUtil.beanCovertMap(returnPayFeeDto)), ReturnPayFeeDto.class);\n-\n         if (returnPayFees == null || returnPayFees.size() == 0) {\n             return returnPayFees;\n         }\n@@ -107,4 +107,4 @@ public class ReturnPayFeeInnerServiceSMOImpl extends BaseServiceSMO implements I\n     public void setUserInnerServiceSMOImpl(IUserInnerServiceSMO userInnerServiceSMOImpl) {\n         this.userInnerServiceSMOImpl = userInnerServiceSMOImpl;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "45",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 196).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "46",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' should be on the previous line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.MethodParamPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/87/ReturnPayFeeInnerServiceSMOImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/styler_three_grams/87/ReturnPayFeeInnerServiceSMOImpl.java\nindex ce3859c13a8..aa1439d2e72 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/87/ReturnPayFeeInnerServiceSMOImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/styler_three_grams/87/ReturnPayFeeInnerServiceSMOImpl.java\n@@ -41,8 +41,9 @@ public class ReturnPayFeeInnerServiceSMOImpl extends BaseServiceSMO implements I\n         if (page != PageDto.DEFAULT_PAGE) {\n             returnPayFeeDto.setPage((page - 1) * returnPayFeeDto.getRow());\n         }\n+    List<ReturnPayFeeDto> returnPayFees = BeanConvertUtil.covertBeanList(returnPayFeeServiceDaoImpl.getReturnPayFeeInfo\n \n-        List<ReturnPayFeeDto> returnPayFees = BeanConvertUtil.covertBeanList(returnPayFeeServiceDaoImpl.getReturnPayFeeInfo(BeanConvertUtil.beanCovertMap(returnPayFeeDto)), ReturnPayFeeDto.class);\n+        ( BeanConvertUtil.beanCovertMap(returnPayFeeDto)), ReturnPayFeeDto.class);\n \n         if (returnPayFees == null || returnPayFees.size() == 0) {\n             return returnPayFees;\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
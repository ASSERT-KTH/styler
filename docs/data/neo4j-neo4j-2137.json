{
    "project_name": "neo4j-neo4j",
    "error_id": "2137",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "49",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "112",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2137/StorageEngine.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2137/StorageEngine.java\nindex 0456bfc850a..e3e8561e3c5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2137/StorageEngine.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2137/StorageEngine.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.storageengine.api;\n \n import java.io.IOException;\n@@ -45,28 +46,31 @@ public interface StorageEngine extends Lifecycle\n      * PageCursorTracer, MemoryTracker)}.\n      * Must be {@link CommandCreationContext#close() closed} after used, before being discarded.\n      */\n-    CommandCreationContext newCommandCreationContext( PageCursorTracer cursorTracer, MemoryTracker memoryTracker );\n+    CommandCreationContext newCommandCreationContext(PageCursorTracer cursorTracer, MemoryTracker memoryTracker);\n \n     /**\n      * Adds an {@link IndexUpdateListener} which will receive streams of index updates from changes that gets\n      * {@link #apply(CommandsToApply, TransactionApplicationMode) applied} to this storage engine.\n+     *\n      * @param indexUpdateListener {@link IndexUpdateListener} to add.\n      */\n-    void addIndexUpdateListener( IndexUpdateListener indexUpdateListener );\n+    void addIndexUpdateListener(IndexUpdateListener indexUpdateListener);\n \n     /**\n      * Adds an {@link EntityTokenUpdateListener} which will receive streams of node label updates from changes that gets\n      * {@link #apply(CommandsToApply, TransactionApplicationMode) applied} to this storage engine.\n+     *\n      * @param entityTokenUpdateListener {@link EntityTokenUpdateListener} to add.\n      */\n-    void addNodeLabelUpdateListener( EntityTokenUpdateListener entityTokenUpdateListener );\n+    void addNodeLabelUpdateListener(EntityTokenUpdateListener entityTokenUpdateListener);\n \n     /**\n      * Adds an {@link EntityTokenUpdateListener} which will receive streams of relationship type updates from changes that gets\n      * {@link #apply(CommandsToApply, TransactionApplicationMode) applied} to this storage engine.\n+     *\n      * @param entityTokenUpdateListener {@link EntityTokenUpdateListener} to add.\n      */\n-    void addRelationshipTypeUpdateListener( EntityTokenUpdateListener entityTokenUpdateListener );\n+    void addRelationshipTypeUpdateListener(EntityTokenUpdateListener entityTokenUpdateListener);\n \n     /**\n      * Generates a list of {@link StorageCommand commands} representing the changes in the given transaction state\n@@ -75,61 +79,62 @@ public interface StorageEngine extends Lifecycle\n      * storage using {@link #apply(CommandsToApply, TransactionApplicationMode)}.\n      * The reason this is separated like this is that the generated commands can be used for other things\n      * than applying to storage, f.ex replicating to another storage engine.\n-     * @param target {@link Collection} to put {@link StorageCommand commands} into.\n-     * @param state {@link ReadableTransactionState} representing logical store changes to generate commands for.\n-     * @param storageReader {@link StorageReader} to use for reading store state during creation of commands.\n-     * @param creationContext {@link CommandCreationContext} to use for do contextualized command creation e.g. id allocation.\n-     * @param locks {@link ResourceLocker} can grab additional locks.\n-     * This locks client still have the potential to acquire more locks at this point.\n-     * TODO we should try to get rid of this locking mechanism during creation of commands\n-     * The reason it's needed is that some relationship changes in the record storage engine\n-     * needs to lock prev/next relationships and these changes happens when creating commands\n-     * The EntityLocker interface is a subset of Locks.Client interface, just to fit in while it's here.\n+     *\n+     * @param target                       {@link Collection} to put {@link StorageCommand commands} into.\n+     * @param state                        {@link ReadableTransactionState} representing logical store changes to generate commands for.\n+     * @param storageReader                {@link StorageReader} to use for reading store state during creation of commands.\n+     * @param creationContext              {@link CommandCreationContext} to use for do contextualized command creation e.g. id allocation.\n+     * @param locks                        {@link ResourceLocker} can grab additional locks.\n+     *                                     This locks client still have the potential to acquire more locks at this point.\n+     *                                     TODO we should try to get rid of this locking mechanism during creation of commands\n+     *                                     The reason it's needed is that some relationship changes in the record storage engine\n+     *                                     needs to lock prev/next relationships and these changes happens when creating commands\n+     *                                     The EntityLocker interface is a subset of Locks.Client interface, just to fit in while it's here.\n      * @param lastTransactionIdWhenStarted transaction id which was seen as last committed when this\n-     * transaction started, i.e. before any changes were made and before any data was read.\n-     * @param additionalTxStateVisitor any additional tx state visitor decoration.\n-     * @param cursorTracer underlying page cursor tracer\n-     * @param memoryTracker to report allocations to\n+     *                                     transaction started, i.e. before any changes were made and before any data was read.\n+     * @param additionalTxStateVisitor     any additional tx state visitor decoration.\n+     * @param cursorTracer                 underlying page cursor tracer\n+     * @param memoryTracker                to report allocations to\n      * @throws KernelException on known errors while creating commands.\n      */\n     void createCommands(\n-            Collection<StorageCommand> target,\n-            ReadableTransactionState state,\n-            StorageReader storageReader,\n-            CommandCreationContext creationContext,\n-            ResourceLocker locks,\n-            long lastTransactionIdWhenStarted,\n-            TxStateVisitor.Decorator additionalTxStateVisitor,\n-            PageCursorTracer cursorTracer,\n-            MemoryTracker memoryTracker )\n-            throws KernelException;\n+      Collection<StorageCommand> target,\n+      ReadableTransactionState state,\n+      StorageReader storageReader,\n+      CommandCreationContext creationContext,\n+      ResourceLocker locks,\n+      long lastTransactionIdWhenStarted,\n+      TxStateVisitor.Decorator additionalTxStateVisitor,\n+      PageCursorTracer cursorTracer,\n+      MemoryTracker memoryTracker)\n+      throws KernelException;\n \n     /**\n      * Apply a batch of groups of commands to this storage.\n      *\n      * @param batch batch of groups of commands to apply to storage.\n-     * @param mode {@link TransactionApplicationMode} when applying.\n+     * @param mode  {@link TransactionApplicationMode} when applying.\n      * @throws Exception if an error occurs during application.\n      */\n-    void apply( CommandsToApply batch, TransactionApplicationMode mode ) throws Exception;\n+    void apply(CommandsToApply batch, TransactionApplicationMode mode) throws Exception;\n \n     /**\n      * Flushes and forces all changes down to underlying storage. This is a blocking call and when it returns\n      * all changes applied to this storage engine will be durable.\n      *\n-     * @param limiter The {@link IOLimiter} used to moderate the rate of IO caused by the flush process.\n+     * @param limiter      The {@link IOLimiter} used to moderate the rate of IO caused by the flush process.\n      * @param cursorTracer underlying page cursor tracer\n      * @throws IOException on I/O error.\n      */\n-    void flushAndForce( IOLimiter limiter, PageCursorTracer cursorTracer ) throws IOException;\n+    void flushAndForce(IOLimiter limiter, PageCursorTracer cursorTracer) throws IOException;\n \n     /**\n      * Dump diagnostics about the storage.\n      *\n-     * @param errorLog to which to log error messages.\n+     * @param errorLog       to which to log error messages.\n      * @param diagnosticsLog to which to log diagnostics messages.\n      */\n-    void dumpDiagnostics( Log errorLog, DiagnosticsLogger diagnosticsLog );\n+    void dumpDiagnostics(Log errorLog, DiagnosticsLogger diagnosticsLog);\n \n     /**\n      * Force close all opened resources. This may be called during startup if there's a failure\n",
            "diff_size": 39
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2137/StorageEngine.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/2137/StorageEngine.java\nindex 0456bfc850a..fed6d3094ca 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2137/StorageEngine.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/2137/StorageEngine.java\n@@ -168,4 +168,4 @@ public interface StorageEngine extends Lifecycle\n      * @return an interface for accessing data in the storage.\n      */\n     StorageReader newReader();\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
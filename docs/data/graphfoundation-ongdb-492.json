{
    "project_name": "graphfoundation-ongdb",
    "error_id": "492",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "37",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "62",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "89",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "95",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "114",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "129",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "156",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/492/IndexSamplingJobTracker.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/492/IndexSamplingJobTracker.java\nindex cf83db09f78..8d2e6945676 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/492/IndexSamplingJobTracker.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/492/IndexSamplingJobTracker.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.api.index.sampling;\n \n import java.util.HashSet;\n@@ -30,142 +31,135 @@ import org.neo4j.scheduler.JobScheduler;\n \n public class IndexSamplingJobTracker\n {\n-    private final JobScheduler jobScheduler;\n-    private final int jobLimit;\n-    private final Set<Long> executingJobs;\n-    private final Lock lock = new ReentrantLock( true );\n-    private final Condition canSchedule = lock.newCondition();\n-    private final Condition allJobsFinished = lock.newCondition();\n-\n-    private boolean stopped;\n-\n-    public IndexSamplingJobTracker( IndexSamplingConfig config, JobScheduler jobScheduler )\n+  private final JobScheduler jobScheduler;\n+  private final int jobLimit;\n+  private final Set<Long> executingJobs;\n+  private final Lock lock = new ReentrantLock(true);\n+  private final Condition canSchedule = lock.newCondition();\n+  private final Condition allJobsFinished = lock.newCondition();\n+\n+  private boolean stopped;\n+\n+  public IndexSamplingJobTracker(IndexSamplingConfig config, JobScheduler jobScheduler)\n+  {\n+    this.jobScheduler = jobScheduler;\n+    this.jobLimit = config.jobLimit();\n+    this.executingJobs = new HashSet<>();\n+  }\n+\n+  public boolean canExecuteMoreSamplingJobs()\n+  {\n+    lock.lock();\n+    try\n     {\n-        this.jobScheduler = jobScheduler;\n-        this.jobLimit = config.jobLimit();\n-        this.executingJobs = new HashSet<>();\n+      return !stopped && executingJobs.size() < jobLimit;\n+    } finally\n+    {\n+      lock.unlock();\n     }\n+  }\n \n-    public boolean canExecuteMoreSamplingJobs()\n+  public void scheduleSamplingJob(final IndexSamplingJob samplingJob)\n+  {\n+    lock.lock();\n+    try\n     {\n-        lock.lock();\n+      if (stopped)\n+      {\n+        return;\n+      }\n+\n+      long indexId = samplingJob.indexId();\n+      if (executingJobs.contains(indexId))\n+      {\n+        return;\n+      }\n+\n+      executingJobs.add(indexId);\n+      jobScheduler.schedule(JobScheduler.Groups.indexSampling, () ->\n+      {\n         try\n         {\n-            return !stopped && executingJobs.size() < jobLimit;\n-        }\n-        finally\n+          samplingJob.run();\n+        } finally\n         {\n-            lock.unlock();\n+          samplingJobCompleted(samplingJob);\n         }\n+      });\n+    } finally\n+    {\n+      lock.unlock();\n     }\n+  }\n \n-    public void scheduleSamplingJob( final IndexSamplingJob samplingJob )\n+  private void samplingJobCompleted(IndexSamplingJob samplingJob)\n+  {\n+    lock.lock();\n+    try\n     {\n-        lock.lock();\n-        try\n-        {\n-            if ( stopped )\n-            {\n-                return;\n-            }\n-\n-            long indexId = samplingJob.indexId();\n-            if ( executingJobs.contains( indexId ) )\n-            {\n-                return;\n-            }\n-\n-            executingJobs.add( indexId );\n-            jobScheduler.schedule( JobScheduler.Groups.indexSampling, () ->\n-            {\n-                try\n-                {\n-                    samplingJob.run();\n-                }\n-                finally\n-                {\n-                    samplingJobCompleted( samplingJob );\n-                }\n-            } );\n-        }\n-        finally\n-        {\n-            lock.unlock();\n-        }\n+      executingJobs.remove(samplingJob.indexId());\n+      canSchedule.signalAll();\n+      allJobsFinished.signalAll();\n+    } finally\n+    {\n+      lock.unlock();\n     }\n+  }\n \n-    private void samplingJobCompleted( IndexSamplingJob samplingJob )\n+  public void waitUntilCanExecuteMoreSamplingJobs()\n+  {\n+    lock.lock();\n+    try\n     {\n-        lock.lock();\n-        try\n+      while (!canExecuteMoreSamplingJobs())\n+      {\n+        if (stopped)\n         {\n-            executingJobs.remove( samplingJob.indexId() );\n-            canSchedule.signalAll();\n-            allJobsFinished.signalAll();\n+          return;\n         }\n-        finally\n-        {\n-            lock.unlock();\n-        }\n-    }\n \n-    public void waitUntilCanExecuteMoreSamplingJobs()\n+        canSchedule.awaitUninterruptibly();\n+      }\n+    } finally\n     {\n-        lock.lock();\n-        try\n-        {\n-            while ( !canExecuteMoreSamplingJobs() )\n-            {\n-                if ( stopped )\n-                {\n-                    return;\n-                }\n-\n-                canSchedule.awaitUninterruptibly();\n-            }\n-        }\n-        finally\n-        {\n-            lock.unlock();\n-        }\n+      lock.unlock();\n     }\n+  }\n \n-    public void awaitAllJobs( long time, TimeUnit unit ) throws InterruptedException\n+  public void awaitAllJobs(long time, TimeUnit unit) throws InterruptedException\n+  {\n+    lock.lock();\n+    try\n     {\n-        lock.lock();\n-        try\n-        {\n-            if ( stopped )\n-            {\n-                return;\n-            }\n-\n-            while ( !executingJobs.isEmpty() )\n-            {\n-                allJobsFinished.await( time, unit );\n-            }\n-        }\n-        finally\n-        {\n-            lock.unlock();\n-        }\n+      if (stopped)\n+      {\n+        return;\n+      }\n+\n+      while (!executingJobs.isEmpty())\n+      {\n+        allJobsFinished.await(time, unit);\n+      }\n+    } finally\n+    {\n+      lock.unlock();\n     }\n+  }\n \n-    public void stopAndAwaitAllJobs()\n+  public void stopAndAwaitAllJobs()\n+  {\n+    lock.lock();\n+    try\n     {\n-        lock.lock();\n-        try\n-        {\n-            stopped = true;\n+      stopped = true;\n \n-            while ( !executingJobs.isEmpty() )\n-            {\n-                allJobsFinished.awaitUninterruptibly();\n-            }\n-        }\n-        finally\n-        {\n-            lock.unlock();\n-        }\n+      while (!executingJobs.isEmpty())\n+      {\n+        allJobsFinished.awaitUninterruptibly();\n+      }\n+    } finally\n+    {\n+      lock.unlock();\n     }\n+  }\n }\n",
            "diff_size": 165
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/492/IndexSamplingJobTracker.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/492/IndexSamplingJobTracker.java\nindex cf83db09f78..ec91ed35958 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/492/IndexSamplingJobTracker.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/492/IndexSamplingJobTracker.java\n@@ -168,4 +168,4 @@ public class IndexSamplingJobTracker\n             lock.unlock();\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
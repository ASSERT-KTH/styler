{
    "project_name": "O2-Czech-Republic-proxima-platform",
    "error_id": "99",
    "information": {
        "errors": [
            {
                "line": "41",
                "severity": "error",
                "message": "Line is longer than 90 characters (found 94).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "   * Signals that a source is idle.\n   *\n   * @param currentWatermark the most recent watermark estimated by watermark estimator {@link\n   *     WatermarkEstimator}.\n   */\n  default void idle(long currentWatermark) {}",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "41",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 94).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "43",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 94).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/99/WatermarkIdlePolicy.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/intellij/99/WatermarkIdlePolicy.java\nindex 7cfded723c4..325508dfe6c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/99/WatermarkIdlePolicy.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/intellij/99/WatermarkIdlePolicy.java\n@@ -1,18 +1,19 @@\n /**\n  * Copyright 2017-2021 O2 Czech Republic, a.s.\n- *\n+ * <p>\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *\n- *    http://www.apache.org/licenses/LICENSE-2.0\n- *\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package cz.o2.proxima.time;\n \n import cz.o2.proxima.storage.StreamElement;\n@@ -33,7 +34,8 @@ public interface WatermarkIdlePolicy extends Serializable {\n    *\n    * @param element a stream element.\n    */\n-  default void update(StreamElement element) {}\n+  default void update(StreamElement element) {\n+  }\n \n   /**\n    * Signals that a source is idle.\n@@ -41,5 +43,6 @@ public interface WatermarkIdlePolicy extends Serializable {\n    * @param currentWatermark the most recent watermark estimated by watermark estimator {@link\n    *     WatermarkEstimator}.\n    */\n-  default void idle(long currentWatermark) {}\n+  default void idle(long currentWatermark) {\n+  }\n }\n",
            "diff_size": 9
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "41",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 94).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/99/WatermarkIdlePolicy.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/naturalize/99/WatermarkIdlePolicy.java\nindex 7cfded723c4..c1e25e96b20 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/99/WatermarkIdlePolicy.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/naturalize/99/WatermarkIdlePolicy.java\n@@ -42,4 +42,4 @@ public interface WatermarkIdlePolicy extends Serializable {\n    *     WatermarkEstimator}.\n    */\n   default void idle(long currentWatermark) {}\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "47",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 94).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/99/WatermarkIdlePolicy.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/codebuff/99/WatermarkIdlePolicy.java\nindex 7cfded723c4..69e2be9fa3d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/99/WatermarkIdlePolicy.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/codebuff/99/WatermarkIdlePolicy.java\n@@ -19,6 +19,8 @@ import cz.o2.proxima.storage.StreamElement;\n import java.io.Serializable;\n \n /** Policy defines behaviour how watermark should behave when streaming source is idle */\n+\n+\n public interface WatermarkIdlePolicy extends Serializable {\n \n   /**\n@@ -26,6 +28,8 @@ public interface WatermarkIdlePolicy extends Serializable {\n    *\n    * @return the watermark.\n    */\n+\n+\n   long getIdleWatermark();\n \n   /**\n@@ -33,6 +37,8 @@ public interface WatermarkIdlePolicy extends Serializable {\n    *\n    * @param element a stream element.\n    */\n+\n+\n   default void update(StreamElement element) {}\n \n   /**\n@@ -41,5 +47,7 @@ public interface WatermarkIdlePolicy extends Serializable {\n    * @param currentWatermark the most recent watermark estimated by watermark estimator {@link\n    *     WatermarkEstimator}.\n    */\n+\n+\n   default void idle(long currentWatermark) {}\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "41",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 94).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "41",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 94).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
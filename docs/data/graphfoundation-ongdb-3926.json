{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3926",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "36",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "36",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3926/ReadableState.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3926/ReadableState.java\nindex d0332fff88f..2dace948447 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3926/ReadableState.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3926/ReadableState.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.store.kvstore;\n \n import java.io.Closeable;\n@@ -26,110 +27,110 @@ import static org.neo4j.kernel.impl.store.kvstore.DataProvider.EMPTY_DATA_PROVID\n \n abstract class ReadableState<Key> implements Closeable\n {\n-    protected abstract KeyFormat<Key> keyFormat();\n+  protected abstract KeyFormat<Key> keyFormat();\n \n-    protected abstract Headers headers();\n+  protected abstract Headers headers();\n \n-    protected abstract long version();\n+  protected abstract long version();\n \n-    protected abstract boolean lookup( Key key, ValueSink sink ) throws IOException;\n+  protected abstract boolean lookup(Key key, ValueSink sink) throws IOException;\n \n-    protected abstract DataProvider dataProvider() throws IOException;\n+  protected abstract DataProvider dataProvider() throws IOException;\n \n-    protected abstract int storedEntryCount();\n+  protected abstract int storedEntryCount();\n \n-    static <Key> ReadableState<Key> store( final KeyFormat<Key> keys, final KeyValueStoreFile store )\n+  static <Key> ReadableState<Key> store(final KeyFormat<Key> keys, final KeyValueStoreFile store)\n+  {\n+    return new ReadableState<Key>()\n     {\n-        return new ReadableState<Key>()\n-        {\n-            @Override\n-            protected KeyFormat<Key> keyFormat()\n-            {\n-                return keys;\n-            }\n-\n-            @Override\n-            protected Headers headers()\n-            {\n-                return store.headers();\n-            }\n-\n-            @Override\n-            protected long version()\n-            {\n-                return keys.version( headers() ); // TODO: 'keys' is not the right guy to have this responsibility\n-            }\n-\n-            @Override\n-            protected boolean lookup( Key key, ValueSink sink ) throws IOException\n-            {\n-                return store.scan( new KeyFormat.Searcher<>( keys, key ), sink );\n-            }\n-\n-            @Override\n-            protected DataProvider dataProvider() throws IOException\n-            {\n-                return store.dataProvider();\n-            }\n-\n-            @Override\n-            protected int storedEntryCount()\n-            {\n-                return store.entryCount();\n-            }\n-\n-            @Override\n-            public void close() throws IOException\n-            {\n-                store.close();\n-            }\n-        };\n-    }\n-\n-    static <Key> ReadableState<Key> empty( final KeyFormat<Key> keys, final long version )\n+      @Override\n+      protected KeyFormat<Key> keyFormat()\n+      {\n+        return keys;\n+      }\n+\n+      @Override\n+      protected Headers headers()\n+      {\n+        return store.headers();\n+      }\n+\n+      @Override\n+      protected long version()\n+      {\n+        return keys.version(headers()); // TODO: 'keys' is not the right guy to have this responsibility\n+      }\n+\n+      @Override\n+      protected boolean lookup(Key key, ValueSink sink) throws IOException\n+      {\n+        return store.scan(new KeyFormat.Searcher<>(keys, key), sink);\n+      }\n+\n+      @Override\n+      protected DataProvider dataProvider() throws IOException\n+      {\n+        return store.dataProvider();\n+      }\n+\n+      @Override\n+      protected int storedEntryCount()\n+      {\n+        return store.entryCount();\n+      }\n+\n+      @Override\n+      public void close() throws IOException\n+      {\n+        store.close();\n+      }\n+    };\n+  }\n+\n+  static <Key> ReadableState<Key> empty(final KeyFormat<Key> keys, final long version)\n+  {\n+    return new ReadableState<Key>()\n     {\n-        return new ReadableState<Key>()\n-        {\n-            @Override\n-            protected KeyFormat<Key> keyFormat()\n-            {\n-                return keys;\n-            }\n-\n-            @Override\n-            protected Headers headers()\n-            {\n-                return null;\n-            }\n-\n-            @Override\n-            protected long version()\n-            {\n-                return version;\n-            }\n-\n-            @Override\n-            protected boolean lookup( Key key, ValueSink sink )\n-            {\n-                return false;\n-            }\n-\n-            @Override\n-            protected DataProvider dataProvider()\n-            {\n-                return EMPTY_DATA_PROVIDER;\n-            }\n-\n-            @Override\n-            protected int storedEntryCount()\n-            {\n-                return 0;\n-            }\n-\n-            @Override\n-            public void close()\n-            {\n-            }\n-        };\n-    }\n+      @Override\n+      protected KeyFormat<Key> keyFormat()\n+      {\n+        return keys;\n+      }\n+\n+      @Override\n+      protected Headers headers()\n+      {\n+        return null;\n+      }\n+\n+      @Override\n+      protected long version()\n+      {\n+        return version;\n+      }\n+\n+      @Override\n+      protected boolean lookup(Key key, ValueSink sink)\n+      {\n+        return false;\n+      }\n+\n+      @Override\n+      protected DataProvider dataProvider()\n+      {\n+        return EMPTY_DATA_PROVIDER;\n+      }\n+\n+      @Override\n+      protected int storedEntryCount()\n+      {\n+        return 0;\n+      }\n+\n+      @Override\n+      public void close()\n+      {\n+      }\n+    };\n+  }\n }\n",
            "diff_size": 101
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3926/ReadableState.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3926/ReadableState.java\nindex d0332fff88f..24a45d8f08c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3926/ReadableState.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3926/ReadableState.java\n@@ -132,4 +132,4 @@ abstract class ReadableState<Key> implements Closeable\n             }\n         };\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
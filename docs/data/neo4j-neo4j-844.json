{
    "project_name": "neo4j-neo4j",
    "error_id": "844",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "52",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "59",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "17",
                    "severity": "error",
                    "message": "'}' at column 17 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "74",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "121",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "69",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "118",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "69",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "150",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "150",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "118",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "71",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "106",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "172",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "172",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "186",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "186",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "191",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "191",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "193",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "193",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "195",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "195",
                    "column": "102",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "208",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "208",
                    "column": "104",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "215",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "215",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "217",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "217",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "223",
                    "column": "21",
                    "severity": "error",
                    "message": "'}' at column 21 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "223",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "223",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "228",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "228",
                    "column": "106",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "238",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "238",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "249",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "249",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "251",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "251",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "253",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "253",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "264",
                    "column": "54",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "264",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "269",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "269",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "271",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "271",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "273",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "273",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "276",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "276",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "278",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "278",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "293",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "293",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "295",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "295",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "297",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "297",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "300",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "300",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "302",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "302",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "305",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "305",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "307",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "307",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "321",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "321",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "323",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "323",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "325",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "325",
                    "column": "113",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "336",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "337",
                    "column": "111",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "342",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "342",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "348",
                    "column": "17",
                    "severity": "error",
                    "message": "'}' at column 17 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "348",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "348",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "364",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "364",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "379",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "379",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "391",
                    "column": "64",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "391",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "396",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "396",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "399",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "399",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "401",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "401",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "403",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "403",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "405",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "405",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "407",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "407",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "409",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "409",
                    "column": "149",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "421",
                    "column": "59",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "422",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "427",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "427",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "430",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "430",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "432",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "432",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "434",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "434",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "436",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "436",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "441",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "441",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "443",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "443",
                    "column": "137",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "445",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "445",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "453",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "453",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "455",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "455",
                    "column": "152",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "458",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "458",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "460",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "461",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "473",
                    "column": "59",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "473",
                    "column": "105",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "478",
                    "column": "61",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "478",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "483",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "483",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "489",
                    "column": "85",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "489",
                    "column": "123",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "494",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "494",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "496",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "496",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "498",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "498",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/844/SettingConstraints.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/844/SettingConstraints.java\nindex 3801f3faeb9..b3569dece73 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/844/SettingConstraints.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/844/SettingConstraints.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.configuration;\n \n import org.apache.commons.lang3.ArrayUtils;\n@@ -48,18 +49,18 @@ public final class SettingConstraints\n     {\n     }\n \n-    public static SettingConstraint<String> except( String... forbiddenValues )\n+    public static SettingConstraint<String> except(String... forbiddenValues)\n     {\n         return new SettingConstraint<>()\n         {\n             @Override\n-            public void validate( String value, Configuration config )\n+            public void validate(String value, Configuration config)\n             {\n-                if ( StringUtils.isNotBlank( value ) )\n+                if (StringUtils.isNotBlank(value))\n                 {\n-                    if ( ArrayUtils.contains( forbiddenValues, value ) )\n+                    if (ArrayUtils.contains(forbiddenValues, value))\n                     {\n-                        throw new IllegalArgumentException( format( \"not allowed value is: %s\", value ) );\n+                        throw new IllegalArgumentException(format(\"not allowed value is: %s\", value));\n                     }\n                 }\n             }\n@@ -67,179 +68,177 @@ public final class SettingConstraints\n             @Override\n             public String getDescription()\n             {\n-                if ( forbiddenValues.length > 1 )\n+                if (forbiddenValues.length > 1)\n                 {\n-                    return format( \"is none of %s\", Arrays.toString( forbiddenValues ) );\n-                }\n-                else if ( forbiddenValues.length == 1 )\n+                    return format(\"is none of %s\", Arrays.toString(forbiddenValues));\n+                } else if (forbiddenValues.length == 1)\n                 {\n-                    return format( \"is not `%s`\", forbiddenValues[0] );\n+                    return format(\"is not `%s`\", forbiddenValues[0]);\n                 }\n                 return \"\";\n             }\n         };\n     }\n \n-    public static SettingConstraint<String> matches( String regex, String description )\n+    public static SettingConstraint<String> matches(String regex, String description)\n     {\n         return new SettingConstraint<>()\n         {\n-            private final String descMsg = StringUtils.isEmpty( description ) ? \"\" : format(\" (%s)\", description);\n-            private final Pattern pattern = Pattern.compile( regex );\n+            private final String descMsg = StringUtils.isEmpty(description) ? \"\" : format(\" (%s)\", description);\n+            private final Pattern pattern = Pattern.compile(regex);\n \n             @Override\n-            public void validate( String value, Configuration config )\n+            public void validate(String value, Configuration config)\n             {\n-                if ( !pattern.matcher( value ).matches() )\n+                if (!pattern.matcher(value).matches())\n                 {\n-                    throw new IllegalArgumentException( format(\"value does not match expression: `%s`%s\", regex, descMsg ) );\n+                    throw new IllegalArgumentException(format(\"value does not match expression: `%s`%s\", regex, descMsg));\n                 }\n             }\n \n             @Override\n             public String getDescription()\n             {\n-                return format( \"matches the pattern `%s`%s\", regex, descMsg );\n+                return format(\"matches the pattern `%s`%s\", regex, descMsg);\n             }\n         };\n     }\n \n-    public static SettingConstraint<String> matches( String regex )\n+    public static SettingConstraint<String> matches(String regex)\n     {\n-        return matches( regex, null );\n+        return matches(regex, null);\n     }\n \n-    public static <T extends Comparable<T>> SettingConstraint<T> min( final T minValue )\n+    public static <T extends Comparable<T>> SettingConstraint<T> min(final T minValue)\n     {\n         return new SettingConstraint<>()\n         {\n             @Override\n-            public void validate( T value, Configuration config )\n+            public void validate(T value, Configuration config)\n             {\n-                if ( value == null )\n+                if (value == null)\n                 {\n-                    throw new IllegalArgumentException( \"can not be null\" );\n+                    throw new IllegalArgumentException(\"can not be null\");\n                 }\n \n-                if ( minValue.compareTo( value ) > 0 )\n+                if (minValue.compareTo(value) > 0)\n                 {\n-                    throw new IllegalArgumentException( format( \"minimum allowed value is %s\", valueToString( minValue ) ) );\n+                    throw new IllegalArgumentException(format(\"minimum allowed value is %s\", valueToString(minValue)));\n                 }\n             }\n \n             @Override\n             public String getDescription()\n             {\n-                return format( \"is minimum `%s`\", valueToString( minValue ) );\n+                return format(\"is minimum `%s`\", valueToString(minValue));\n             }\n         };\n     }\n \n-    public static <T extends Comparable<T>> SettingConstraint<T> max( final T maxValue )\n+    public static <T extends Comparable<T>> SettingConstraint<T> max(final T maxValue)\n     {\n         return new SettingConstraint<>()\n         {\n             @Override\n-            public void validate( T value, Configuration config )\n+            public void validate(T value, Configuration config)\n             {\n-                if ( value == null )\n+                if (value == null)\n                 {\n-                    throw new IllegalArgumentException( \"can not be null\" );\n+                    throw new IllegalArgumentException(\"can not be null\");\n                 }\n \n-                if ( maxValue.compareTo( value ) < 0 )\n+                if (maxValue.compareTo(value) < 0)\n                 {\n-                    throw new IllegalArgumentException( format( \"maximum allowed value is %s\", valueToString( maxValue ) ) );\n+                    throw new IllegalArgumentException(format(\"maximum allowed value is %s\", valueToString(maxValue)));\n                 }\n             }\n \n             @Override\n             public String getDescription()\n             {\n-                return format( \"is maximum `%s`\", valueToString( maxValue ) );\n+                return format(\"is maximum `%s`\", valueToString(maxValue));\n             }\n         };\n     }\n \n-    public static <T extends Comparable<T>> SettingConstraint<T> range( final T minValue, final T maxValue )\n+    public static <T extends Comparable<T>> SettingConstraint<T> range(final T minValue, final T maxValue)\n     {\n         return new SettingConstraint<>()\n         {\n-            private SettingConstraint<T> max = max( maxValue );\n-            private SettingConstraint<T> min = min( minValue );\n+            private SettingConstraint<T> max = max(maxValue);\n+            private SettingConstraint<T> min = min(minValue);\n \n             @Override\n-            public void validate( T value, Configuration config )\n+            public void validate(T value, Configuration config)\n             {\n-                min.validate( value, config );\n-                max.validate( value, config );\n+                min.validate(value, config);\n+                max.validate(value, config);\n             }\n \n             @Override\n             public String getDescription()\n             {\n-                return format( \"is in the range `%s` to `%s`\", valueToString( minValue ), valueToString( maxValue ) );\n+                return format(\"is in the range `%s` to `%s`\", valueToString(minValue), valueToString(maxValue));\n             }\n         };\n     }\n \n-    public static <T> SettingConstraint<T> is( final T expected )\n+    public static <T> SettingConstraint<T> is(final T expected)\n     {\n         return new SettingConstraint<>()\n         {\n             @Override\n-            public void validate( T value, Configuration config )\n+            public void validate(T value, Configuration config)\n             {\n-                if ( !Objects.equals( value, expected ) )\n+                if (!Objects.equals(value, expected))\n                 {\n-                    throw new IllegalArgumentException( format( \"is not `%s`\", valueToString( expected ) ) );\n+                    throw new IllegalArgumentException(format(\"is not `%s`\", valueToString(expected)));\n                 }\n             }\n \n             @Override\n             public String getDescription()\n             {\n-                return format( \"is `%s`\", valueToString( expected ) );\n+                return format(\"is `%s`\", valueToString(expected));\n             }\n         };\n     }\n \n     @SafeVarargs\n-    public static <T> SettingConstraint<T> any( SettingConstraint<T> first, SettingConstraint<T>... rest )\n+    public static <T> SettingConstraint<T> any(SettingConstraint<T> first, SettingConstraint<T>... rest)\n     {\n         return new SettingConstraint<>()\n         {\n-            private final SettingConstraint<T>[] constraints = ArrayUtil.concat( first, rest );\n+            private final SettingConstraint<T>[] constraints = ArrayUtil.concat(first, rest);\n \n             @Override\n-            public void validate( T value, Configuration config )\n+            public void validate(T value, Configuration config)\n             {\n-                for ( SettingConstraint<T> constraint : constraints )\n+                for (SettingConstraint<T> constraint : constraints)\n                 {\n                     try\n                     {\n-                        constraint.validate( value, config );\n+                        constraint.validate(value, config);\n                         return; // Only one constraint needs to pass for this to pass.\n-                    }\n-                    catch ( RuntimeException e )\n+                    } catch (RuntimeException e)\n                     {\n                         // Ignore\n                     }\n                 }\n-                throw new IllegalArgumentException( format( \"does not fulfill any of %s\", getDescription() ) );\n+                throw new IllegalArgumentException(format(\"does not fulfill any of %s\", getDescription()));\n             }\n \n             @Override\n             public String getDescription()\n             {\n-                return Arrays.stream( constraints ).map( SettingConstraint::getDescription ).collect( Collectors.joining( \" or \" ));\n+                return Arrays.stream(constraints).map(SettingConstraint::getDescription).collect(Collectors.joining(\" or \"));\n             }\n \n             @Override\n-            void setParser( SettingValueParser<T> parser )\n+            void setParser(SettingValueParser<T> parser)\n             {\n-                super.setParser( parser );\n-                Arrays.stream( constraints ).forEach( constraint -> constraint.setParser( parser ) );\n+                super.setParser(parser);\n+                Arrays.stream(constraints).forEach(constraint -> constraint.setParser(parser));\n             }\n         };\n     }\n@@ -247,11 +246,11 @@ public final class SettingConstraints\n     public static final SettingConstraint<Long> POWER_OF_2 = new SettingConstraint<>()\n     {\n         @Override\n-        public void validate( Long value, Configuration config )\n+        public void validate(Long value, Configuration config)\n         {\n-            if ( value != null && !Numbers.isPowerOfTwo( value ) )\n+            if (value != null && !Numbers.isPowerOfTwo(value))\n             {\n-                throw new IllegalArgumentException( \"only power of 2 values allowed\" );\n+                throw new IllegalArgumentException(\"only power of 2 values allowed\");\n             }\n         }\n \n@@ -262,28 +261,28 @@ public final class SettingConstraints\n         }\n     };\n \n-    public static <T> SettingConstraint<List<T>> size( final int size )\n+    public static <T> SettingConstraint<List<T>> size(final int size)\n     {\n         return new SettingConstraint<>()\n         {\n             @Override\n-            public void validate( List<T> value, Configuration config )\n+            public void validate(List<T> value, Configuration config)\n             {\n-                if ( value == null )\n+                if (value == null)\n                 {\n-                    throw new IllegalArgumentException( \"can not be null\" );\n+                    throw new IllegalArgumentException(\"can not be null\");\n                 }\n \n-                if ( value.size() != size )\n+                if (value.size() != size)\n                 {\n-                    throw new IllegalArgumentException( format( \"needs to be of size %s\", size ) );\n+                    throw new IllegalArgumentException(format(\"needs to be of size %s\", size));\n                 }\n             }\n \n             @Override\n             public String getDescription()\n             {\n-                return format( \"is of size `%s`\", size );\n+                return format(\"is of size `%s`\", size);\n             }\n         };\n     }\n@@ -291,21 +290,21 @@ public final class SettingConstraints\n     public static final SettingConstraint<SocketAddress> HOSTNAME_ONLY = new SettingConstraint<>()\n     {\n         @Override\n-        public void validate( SocketAddress value, Configuration config )\n+        public void validate(SocketAddress value, Configuration config)\n         {\n-            if ( value == null )\n+            if (value == null)\n             {\n-                throw new IllegalArgumentException( \"can not be null\" );\n+                throw new IllegalArgumentException(\"can not be null\");\n             }\n \n-            if ( value.getPort() >= 0 )\n+            if (value.getPort() >= 0)\n             {\n-                throw new IllegalArgumentException( \"can not have a port\" );\n+                throw new IllegalArgumentException(\"can not have a port\");\n             }\n \n-            if ( StringUtils.isBlank( value.getHostname() ) )\n+            if (StringUtils.isBlank(value.getHostname()))\n             {\n-                throw new IllegalArgumentException( \"needs not a hostname\" );\n+                throw new IllegalArgumentException(\"needs not a hostname\");\n             }\n         }\n \n@@ -319,11 +318,11 @@ public final class SettingConstraints\n     public static final SettingConstraint<Path> ABSOLUTE_PATH = new SettingConstraint<>()\n     {\n         @Override\n-        public void validate( Path value, Configuration config )\n+        public void validate(Path value, Configuration config)\n         {\n-            if ( !value.isAbsolute() )\n+            if (!value.isAbsolute())\n             {\n-                throw new IllegalArgumentException( format( \"`%s` is not an absolute path.\", valueToString( value ) ) );\n+                throw new IllegalArgumentException(format(\"`%s` is not an absolute path.\", valueToString(value)));\n             }\n         }\n \n@@ -334,41 +333,40 @@ public final class SettingConstraints\n         }\n     };\n \n-    public static <T,U> SettingConstraint<T> dependency( SettingConstraint<T> ifconstraint, SettingConstraint<T> elseconstraint,\n-            Setting<U> dependency, SettingConstraint<U> condition )\n+    public static <T, U> SettingConstraint<T> dependency(SettingConstraint<T> ifconstraint, SettingConstraint<T> elseconstraint,\n+                                                         Setting<U> dependency, SettingConstraint<U> condition)\n     {\n         return new SettingConstraint<>()\n         {\n             @Override\n-            public void validate( T value, Configuration config )\n+            public void validate(T value, Configuration config)\n             {\n-                U depValue = config.get( dependency );\n+                U depValue = config.get(dependency);\n                 try\n                 {\n-                    condition.validate( depValue, config );\n-                }\n-                catch ( IllegalArgumentException e )\n+                    condition.validate(depValue, config);\n+                } catch (IllegalArgumentException e)\n                 {\n-                    elseconstraint.validate( value, config );\n+                    elseconstraint.validate(value, config);\n                     return;\n                 }\n-                ifconstraint.validate( value, config );\n+                ifconstraint.validate(value, config);\n             }\n \n             @Override\n             public String getDescription()\n             {\n-                return format( \"depends on %s. If %s %s then it %s otherwise it %s.\", dependency.name(), dependency.name(), condition.getDescription(),\n-                        ifconstraint.getDescription(), elseconstraint.getDescription() );\n+                return format(\"depends on %s. If %s %s then it %s otherwise it %s.\", dependency.name(), dependency.name(), condition.getDescription(),\n+                  ifconstraint.getDescription(), elseconstraint.getDescription());\n             }\n \n             @Override\n-            void setParser( SettingValueParser<T> parser )\n+            void setParser(SettingValueParser<T> parser)\n             {\n-                super.setParser( parser );\n-                ifconstraint.setParser( parser );\n-                elseconstraint.setParser( parser );\n-                condition.setParser( ((SettingImpl<U>) dependency).parser() );\n+                super.setParser(parser);\n+                ifconstraint.setParser(parser);\n+                elseconstraint.setParser(parser);\n+                condition.setParser(((SettingImpl<U>) dependency).parser());\n             }\n         };\n     }\n@@ -378,7 +376,7 @@ public final class SettingConstraints\n         return new SettingConstraint<>()\n         {\n             @Override\n-            public void validate( T value, Configuration config )\n+            public void validate(T value, Configuration config)\n             {\n             }\n \n@@ -390,121 +388,121 @@ public final class SettingConstraints\n         };\n     }\n \n-    public static SettingConstraint<Integer> greaterThanOrEqual( Setting<Integer> other )\n+    public static SettingConstraint<Integer> greaterThanOrEqual(Setting<Integer> other)\n     {\n         return new SettingConstraint<>()\n         {\n             @Override\n-            public void validate( Integer value, Configuration config )\n+            public void validate(Integer value, Configuration config)\n             {\n-                var otherValue = config.get( other );\n-                if ( value == null )\n+                var otherValue = config.get(other);\n+                if (value == null)\n                 {\n-                    throw new IllegalArgumentException( \"can not be null\" );\n+                    throw new IllegalArgumentException(\"can not be null\");\n                 }\n-                if ( otherValue == null )\n+                if (otherValue == null)\n                 {\n-                    throw new IllegalArgumentException( other.name() + \" can not be null\" );\n+                    throw new IllegalArgumentException(other.name() + \" can not be null\");\n                 }\n-                if ( value < otherValue )\n+                if (value < otherValue)\n                 {\n-                    throw new IllegalArgumentException( getDescription() + format( \"was %d, which is not more than or equal to %d\", value, otherValue ) );\n+                    throw new IllegalArgumentException(getDescription() + format(\"was %d, which is not more than or equal to %d\", value, otherValue));\n                 }\n             }\n \n             @Override\n             public String getDescription()\n             {\n-                return format( \"Must be set greater than or equal to value of '%s'\", other.name() );\n+                return format(\"Must be set greater than or equal to value of '%s'\", other.name());\n             }\n         };\n     }\n \n-    public static <T> SettingConstraint<T> lessThanOrEqual( Function<T, Long> converter, Setting<T> other, LongFunction<Long> otherModifier,\n-                                                            String modifierDescription )\n+    public static <T> SettingConstraint<T> lessThanOrEqual(Function<T, Long> converter, Setting<T> other, LongFunction<Long> otherModifier,\n+                                                           String modifierDescription)\n     {\n         return new SettingConstraint<>()\n         {\n             @Override\n-            public void validate( T value, Configuration config )\n+            public void validate(T value, Configuration config)\n             {\n-                var otherValue = config.get( other );\n-                if ( value == null )\n+                var otherValue = config.get(other);\n+                if (value == null)\n                 {\n-                    throw new IllegalArgumentException( \"can not be null\" );\n+                    throw new IllegalArgumentException(\"can not be null\");\n                 }\n-                if ( otherValue == null )\n+                if (otherValue == null)\n                 {\n-                    throw new IllegalArgumentException( other.name() + \" can not be null\" );\n+                    throw new IllegalArgumentException(other.name() + \" can not be null\");\n                 }\n \n-                var thisAsLong = converter.apply( value );\n-                var otherAsLong = converter.apply( otherValue );\n-                if ( thisAsLong == null )\n+                var thisAsLong = converter.apply(value);\n+                var otherAsLong = converter.apply(otherValue);\n+                if (thisAsLong == null)\n                 {\n-                    throw new IllegalStateException( \"Result of \" + converter.toString() + \" on \" + value.toString() + \" can not be null\" );\n+                    throw new IllegalStateException(\"Result of \" + converter.toString() + \" on \" + value.toString() + \" can not be null\");\n                 }\n-                if ( otherAsLong == null )\n+                if (otherAsLong == null)\n                 {\n                     throw new IllegalStateException(\n-                            \"Result of \" + converter.toString() + \" on \" + other.name() + \" (\" + otherValue.toString() + \") can not be null\"\n+                      \"Result of \" + converter.toString() + \" on \" + other.name() + \" (\" + otherValue.toString() + \") can not be null\"\n                     );\n                 }\n \n-                var modifiedOther = otherModifier.apply( otherAsLong );\n-                if ( modifiedOther == null )\n+                var modifiedOther = otherModifier.apply(otherAsLong);\n+                if (modifiedOther == null)\n                 {\n-                    throw new IllegalStateException( \"Result of \" + otherModifier.toString() + \" on \" + other.name() + \" (\" + otherAsLong + \") was null\" );\n+                    throw new IllegalStateException(\"Result of \" + otherModifier.toString() + \" on \" + other.name() + \" (\" + otherAsLong + \") was null\");\n                 }\n \n-                if ( thisAsLong > modifiedOther )\n+                if (thisAsLong > modifiedOther)\n                 {\n-                    throw new IllegalArgumentException( getDescription() + format( \"was %d, which is not less than or equal to %d from %s\",\n-                                                                                   thisAsLong, modifiedOther, other.name() ) );\n+                    throw new IllegalArgumentException(getDescription() + format(\"was %d, which is not less than or equal to %d from %s\",\n+                      thisAsLong, modifiedOther, other.name()));\n                 }\n             }\n \n             @Override\n             public String getDescription()\n             {\n-                return format( \"Must be set less than or equal to value of '%s' %s\", other.name(), modifierDescription );\n+                return format(\"Must be set less than or equal to value of '%s' %s\", other.name(), modifierDescription);\n             }\n         };\n     }\n \n-    public static <T> SettingConstraint<T> lessThanOrEqual( Function<T,Long> converter, Setting<T> other )\n+    public static <T> SettingConstraint<T> lessThanOrEqual(Function<T, Long> converter, Setting<T> other)\n     {\n-        return lessThanOrEqual( converter, other, s -> s, \"\" );\n+        return lessThanOrEqual(converter, other, s -> s, \"\");\n     }\n \n-    public static SettingConstraint<Integer> lessThanOrEqual( Setting<Integer> other )\n+    public static SettingConstraint<Integer> lessThanOrEqual(Setting<Integer> other)\n     {\n-        return lessThanOrEqual( Long::valueOf, other );\n+        return lessThanOrEqual(Long::valueOf, other);\n     }\n \n-    public static <T> SettingConstraint<T> ifCluster( SettingConstraint<T> settingConstraint )\n+    public static <T> SettingConstraint<T> ifCluster(SettingConstraint<T> settingConstraint)\n     {\n-        return dependency( settingConstraint, unconstrained(),\n-                GraphDatabaseSettings.mode, any( is( GraphDatabaseSettings.Mode.CORE ), is( GraphDatabaseSettings.Mode.READ_REPLICA ) ) );\n+        return dependency(settingConstraint, unconstrained(),\n+          GraphDatabaseSettings.mode, any(is(GraphDatabaseSettings.Mode.CORE), is(GraphDatabaseSettings.Mode.READ_REPLICA)));\n     }\n \n-    public static <T, C extends Collection<T>> SettingConstraint<C> shouldNotContain( T value, String collectionDescription )\n+    public static <T, C extends Collection<T>> SettingConstraint<C> shouldNotContain(T value, String collectionDescription)\n     {\n         return new SettingConstraint<>()\n         {\n             @Override\n-            public void validate( C coll, Configuration config )\n+            public void validate(C coll, Configuration config)\n             {\n-                if ( coll.contains( value ) )\n+                if (coll.contains(value))\n                 {\n-                    throw new IllegalArgumentException( getDescription() );\n+                    throw new IllegalArgumentException(getDescription());\n                 }\n             }\n \n             @Override\n             public String getDescription()\n             {\n-                return String.format( \"Value '%s' can't be included in %s!\", value.toString(), collectionDescription );\n+                return String.format(\"Value '%s' can't be included in %s!\", value.toString(), collectionDescription);\n             }\n         };\n     }\n",
            "diff_size": 138
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "423",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 169).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "460",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 184).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/844/SettingConstraints.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/844/SettingConstraints.java\nindex 3801f3faeb9..91a25f6f472 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/844/SettingConstraints.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/844/SettingConstraints.java\n@@ -420,9 +420,8 @@ public final class SettingConstraints\n         };\n     }\n \n-    public static <T> SettingConstraint<T> lessThanOrEqual( Function<T, Long> converter, Setting<T> other, LongFunction<Long> otherModifier,\n-                                                            String modifierDescription )\n-    {\n+    public static <T> SettingConstraint<T> lessThanOrEqual( Function<T, Long> converter, Setting<T> other, LongFunction<Long> otherModifier, String modifierDescription )\n+{\n         return new SettingConstraint<>()\n         {\n             @Override\n@@ -447,8 +446,7 @@ public final class SettingConstraints\n                 if ( otherAsLong == null )\n                 {\n                     throw new IllegalStateException(\n-                            \"Result of \" + converter.toString() + \" on \" + other.name() + \" (\" + otherValue.toString() + \") can not be null\"\n-                    );\n+                            \"Result of \" + converter.toString() + \" on \" + other.name() + \" (\" + otherValue.toString() + \") can not be null\" );\n                 }\n \n                 var modifiedOther = otherModifier.apply( otherAsLong );\n@@ -459,9 +457,8 @@ public final class SettingConstraints\n \n                 if ( thisAsLong > modifiedOther )\n                 {\n-                    throw new IllegalArgumentException( getDescription() + format( \"was %d, which is not less than or equal to %d from %s\",\n-                                                                                   thisAsLong, modifiedOther, other.name() ) );\n-                }\n+                    throw new IllegalArgumentException( getDescription() + format( \"was %d, which is not less than or equal to %d from %s\", thisAsLong, modifiedOther, other.name() ) );\n+    }\n             }\n \n             @Override\n@@ -508,4 +505,4 @@ public final class SettingConstraints\n             }\n         };\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "googleapis-google-cloud-java",
    "error_id": "842",
    "information": {
        "errors": [
            {
                "line": "449",
                "severity": "warning",
                "message": "Line is longer than 100 characters (found 104).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "  public int hashCode() {\n    return Objects.hash(logName, resource, timestamp, receiveTimestamp, severity, insertId,\n        httpRequest, labels, operation, getTrace(), getSpanId(), traceSampled, sourceLocation, payload);\n  }\n\n  @Override",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/842/LogEntry.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/styler/842/LogEntry.java\nindex 7db2e9e7d55..c04d8375c12 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/842/LogEntry.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/styler/842/LogEntry.java\n@@ -446,7 +446,7 @@ public class LogEntry implements Serializable {\n   @Override\n   public int hashCode() {\n     return Objects.hash(logName, resource, timestamp, receiveTimestamp, severity, insertId,\n-        httpRequest, labels, operation, getTrace(), getSpanId(), traceSampled, sourceLocation, payload);\n+    httpRequest, labels, operation, getTrace(), getSpanId(), traceSampled, sourceLocation, payload);\n   }\n \n   @Override\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/842/LogEntry.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/intellij/842/LogEntry.java\nindex 7db2e9e7d55..cc10a228e73 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/842/LogEntry.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/intellij/842/LogEntry.java\n@@ -446,7 +446,8 @@ public class LogEntry implements Serializable {\n   @Override\n   public int hashCode() {\n     return Objects.hash(logName, resource, timestamp, receiveTimestamp, severity, insertId,\n-        httpRequest, labels, operation, getTrace(), getSpanId(), traceSampled, sourceLocation, payload);\n+        httpRequest, labels, operation, getTrace(), getSpanId(), traceSampled, sourceLocation,\n+        payload);\n   }\n \n   @Override\n",
            "diff_size": 2
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "52",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 0, expected level should be 2, 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "450",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 104).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "513",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/842/LogEntry.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/naturalize/842/LogEntry.java\nindex 7db2e9e7d55..a824ce60cfe 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/842/LogEntry.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/naturalize/842/LogEntry.java\n@@ -48,7 +48,8 @@ public class LogEntry implements Serializable {\n   private static final long serialVersionUID = -944788159728228219L;\n   private static final long NANOS_PER_MILLISECOND = 1000000;\n   private static final long MILLIS_PER_SECOND = 1000;\n-  static final Function<com.google.logging.v2.LogEntry, LogEntry> FROM_PB_FUNCTION =\n+\n+static final Function<com.google.logging.v2.LogEntry, LogEntry> FROM_PB_FUNCTION =\n       new Function<com.google.logging.v2.LogEntry, LogEntry>() {\n         @Override\n         public LogEntry apply(com.google.logging.v2.LogEntry pb) {\n@@ -509,8 +510,7 @@ public class LogEntry implements Serializable {\n   }\n \n   private static Long millisFromTimestamp(Timestamp timestamp) {\n-    return timestamp.getSeconds() * MILLIS_PER_SECOND\n-        + timestamp.getNanos() / NANOS_PER_MILLISECOND;\n+    return timestamp.getSeconds() * MILLIS_PER_SECOND + timestamp.getNanos() / NANOS_PER_MILLISECOND;\n   }\n \n   com.google.logging.v2.LogEntry toPb(String projectId) {\n@@ -629,4 +629,4 @@ public class LogEntry implements Serializable {\n       }\n     };\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "53",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 143).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "54",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be one of the following: 4, 6, 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "56",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "57",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 0, expected level should be one of the following: 4, 6, 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "58",
                    "severity": "warning",
                    "message": "'object def rcurly' has incorrect indentation level 0, expected level should be one of the following: 2, 4, 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "482",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 188).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "495",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "496",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "497",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "498",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "499",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "500",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "501",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "502",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "503",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "504",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "505",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "506",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "507",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "512",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 447).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "531",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "625",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "646",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "648",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "649",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 0, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "650",
                    "severity": "warning",
                    "message": "'object def rcurly' has incorrect indentation level 0, expected level should be one of the following: 4, 6, 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/842/LogEntry.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/codebuff/842/LogEntry.java\nindex 7db2e9e7d55..f06fceff085 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/842/LogEntry.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/codebuff/842/LogEntry.java\n@@ -27,7 +27,6 @@ import com.google.logging.v2.LogEntrySourceLocation;\n import com.google.logging.v2.LogName;\n import com.google.logging.v2.ProjectLogName;\n import com.google.protobuf.Timestamp;\n-\n import java.io.Serializable;\n import java.util.HashMap;\n import java.util.Map;\n@@ -43,19 +42,20 @@ import java.util.Objects;\n  *\n  * @see <a href=\"https://cloud.google.com/logging/docs/view/logs_index\">Log Entries and Logs</a>\n  */\n+\n+\n public class LogEntry implements Serializable {\n \n   private static final long serialVersionUID = -944788159728228219L;\n   private static final long NANOS_PER_MILLISECOND = 1000000;\n   private static final long MILLIS_PER_SECOND = 1000;\n-  static final Function<com.google.logging.v2.LogEntry, LogEntry> FROM_PB_FUNCTION =\n-      new Function<com.google.logging.v2.LogEntry, LogEntry>() {\n-        @Override\n-        public LogEntry apply(com.google.logging.v2.LogEntry pb) {\n-          return fromPb(pb);\n-        }\n-      };\n \n+  static final Function<com.google.logging.v2.LogEntry, LogEntry> FROM_PB_FUNCTION = new Function<com.google.logging.v2.LogEntry, LogEntry>() {\n+@Override\n+public LogEntry apply(com.google.logging.v2.LogEntry pb) {\n+  return fromPb(pb);\n+}\n+};\n   private final String logName;\n   private final MonitoredResource resource;\n   private final Long timestamp;\n@@ -74,6 +74,7 @@ public class LogEntry implements Serializable {\n   /**\n    * A builder for {@code LogEntry} objects.\n    */\n+\n   public static class Builder {\n \n     private String logName;\n@@ -120,6 +121,7 @@ public class LogEntry implements Serializable {\n      * forward-slash ({@code /}) characters in the log name must be URL-encoded. Examples:\n      * {@code syslog}, {@code library.googleapis.com%2Fbook_log}.\n      */\n+\n     public Builder setLogName(String logName) {\n       this.logName = logName;\n       return this;\n@@ -131,6 +133,7 @@ public class LogEntry implements Serializable {\n      * a database error would be associated with the monitored resource designating the particular\n      * database that reported the error.\n      */\n+\n     public Builder setResource(MonitoredResource resource) {\n       this.resource = resource;\n       return this;\n@@ -141,6 +144,7 @@ public class LogEntry implements Serializable {\n      * Sets the time at which the event described by the log entry occurred, in milliseconds. If\n      * omitted, the Logging service will use the time at which the log entry is received.\n      */\n+\n     public Builder setTimestamp(long timestamp) {\n       this.timestamp = timestamp;\n       return this;\n@@ -150,6 +154,7 @@ public class LogEntry implements Serializable {\n     /**\n      * Sets the time the log entry was received by Stackdriver Logging.\n      */\n+\n     public Builder setReceiveTimestamp(long receiveTimestamp) {\n       this.receiveTimestamp = receiveTimestamp;\n       return this;\n@@ -159,6 +164,7 @@ public class LogEntry implements Serializable {\n     /**\n      * Sets the severity of the log entry. If not set, {@link Severity#DEFAULT} is used.\n      */\n+\n     public Builder setSeverity(Severity severity) {\n       this.severity = severity;\n       return this;\n@@ -170,6 +176,7 @@ public class LogEntry implements Serializable {\n      * other log entries in the same log with the same ID as duplicates which can be removed. If\n      * omitted, the Logging service will generate a unique ID for this log entry.\n      */\n+\n     public Builder setInsertId(String insertId) {\n       this.insertId = insertId;\n       return this;\n@@ -179,6 +186,7 @@ public class LogEntry implements Serializable {\n     /**\n      * Sets information about the HTTP request associated with this log entry, if applicable.\n      */\n+\n     public Builder setHttpRequest(HttpRequest httpRequest) {\n       this.httpRequest = httpRequest;\n       return this;\n@@ -189,6 +197,7 @@ public class LogEntry implements Serializable {\n      * Sets an optional set of user-defined (key, value) data that provides additional information\n      * about the log entry.\n      */\n+\n     public Builder setLabels(Map<String, String> labels) {\n       this.labels = new HashMap<>(checkNotNull(labels));\n       return this;\n@@ -199,6 +208,7 @@ public class LogEntry implements Serializable {\n      * Adds a label to the log entry's labels. Labels are user-defined (key, value) data that\n      * provides additional information about the log entry.\n      */\n+\n     public Builder addLabel(String key, String value) {\n       this.labels.put(key, value);\n       return this;\n@@ -209,6 +219,7 @@ public class LogEntry implements Serializable {\n      * Clears all the labels of the log entry. Labels are user-defined (key, value) data that\n      * provides additional information about the log entry.\n      */\n+\n     public Builder clearLabels() {\n       this.labels.clear();\n       return this;\n@@ -218,6 +229,7 @@ public class LogEntry implements Serializable {\n     /**\n      * Sets information about an operation associated with the log entry, if applicable.\n      */\n+\n     public Builder setOperation(Operation operation) {\n       this.operation = operation;\n       return this;\n@@ -227,6 +239,7 @@ public class LogEntry implements Serializable {\n      * Sets the resource name of the trace associated with the log entry, if any. If it contains a\n      * relative resource name, the name is assumed to be relative to `//tracing.googleapis.com`.\n      */\n+\n     public Builder setTrace(String trace) {\n       this.trace = trace;\n       return this;\n@@ -236,6 +249,7 @@ public class LogEntry implements Serializable {\n      * Sets the resource name of the trace associated with the log entry, if any. If it contains a\n      * relative resource name, the name is assumed to be relative to `//tracing.googleapis.com`.\n      */\n+\n     public Builder setTrace(Object trace) {\n       this.trace = trace;\n       return this;\n@@ -244,6 +258,7 @@ public class LogEntry implements Serializable {\n     /**\n      * Sets the ID of the trace span associated with the log entry, if any.\n      */\n+\n     public Builder setSpanId(String spanId) {\n       this.spanId = spanId;\n       return this;\n@@ -252,6 +267,7 @@ public class LogEntry implements Serializable {\n     /**\n      * Sets the ID of the trace span associated with the log entry, if any.\n      */\n+\n     public Builder setSpanId(Object spanId) {\n       this.spanId = spanId;\n       return this;\n@@ -261,6 +277,7 @@ public class LogEntry implements Serializable {\n     /**\n      * Sets the sampling decision of the trace span associated with the log entry.\n      */\n+\n     public Builder setTraceSampled(boolean traceSampled) {\n       this.traceSampled = traceSampled;\n       return this;\n@@ -270,6 +287,7 @@ public class LogEntry implements Serializable {\n     /**\n      * Sets the source code location information associated with the log entry if any.\n      */\n+\n     public Builder setSourceLocation(SourceLocation sourceLocation) {\n       this.sourceLocation = sourceLocation;\n       return this;\n@@ -283,6 +301,7 @@ public class LogEntry implements Serializable {\n      *\n      * @see <a href=\"https://cloud.google.com/logging/docs/view/logs_index\">Log Entries and Logs</a>\n      */\n+\n     public Builder setPayload(Payload payload) {\n       this.payload = payload;\n       return this;\n@@ -291,6 +310,7 @@ public class LogEntry implements Serializable {\n     /**\n      * Creates a {@code LogEntry} object for this builder.\n      */\n+\n     public LogEntry build() {\n       return new LogEntry(this);\n     }\n@@ -321,6 +341,7 @@ public class LogEntry implements Serializable {\n    * forward-slash ({@code /}) characters in the log name must be URL-encoded. Examples:\n    * {@code syslog}, {@code library.googleapis.com%2Fbook_log}.\n    */\n+\n   public String getLogName() {\n     return logName;\n   }\n@@ -331,6 +352,7 @@ public class LogEntry implements Serializable {\n    * reports a database error would be associated with the monitored resource designating the\n    * particular database that reported the error.\n    */\n+\n   public MonitoredResource getResource() {\n     return resource;\n   }\n@@ -340,6 +362,7 @@ public class LogEntry implements Serializable {\n    * Returns the time at which the event described by the log entry occurred, in milliseconds. If\n    * omitted, the Logging service will use the time at which the log entry is received.\n    */\n+\n   public Long getTimestamp() {\n     return timestamp;\n   }\n@@ -348,6 +371,7 @@ public class LogEntry implements Serializable {\n   /**\n    * Returns the time the log entry was received by Stackdriver Logging.\n    */\n+\n   public Long getReceiveTimestamp() {\n     return receiveTimestamp;\n   }\n@@ -356,6 +380,7 @@ public class LogEntry implements Serializable {\n   /**\n    * Returns the severity of the log entry. If not set, {@link Severity#DEFAULT} is used.\n    */\n+\n   public Severity getSeverity() {\n     return severity;\n   }\n@@ -365,6 +390,7 @@ public class LogEntry implements Serializable {\n    * Returns a unique ID for the log entry. The Logging service considers other log entries in the\n    * same log with the same ID as duplicates which can be removed.\n    */\n+\n   public String getInsertId() {\n     return insertId;\n   }\n@@ -373,6 +399,7 @@ public class LogEntry implements Serializable {\n   /**\n    * Returns information about the HTTP request associated with this log entry, if applicable.\n    */\n+\n   public HttpRequest getHttpRequest() {\n     return httpRequest;\n   }\n@@ -382,6 +409,7 @@ public class LogEntry implements Serializable {\n    * Returns an optional set of user-defined (key, value) data that provides additional information\n    * about the log entry.\n    */\n+\n   public Map<String, String> getLabels() {\n     return labels;\n   }\n@@ -390,6 +418,7 @@ public class LogEntry implements Serializable {\n   /**\n    * Returns information about an operation associated with the log entry, if applicable.\n    */\n+\n   public Operation getOperation() {\n     return operation;\n   }\n@@ -399,6 +428,7 @@ public class LogEntry implements Serializable {\n    * Returns the resource name of the trace associated with the log entry, if any. If it contains a\n    * relative resource name, the name is assumed to be relative to `//tracing.googleapis.com`.\n    */\n+\n   public String getTrace() {\n     // For backwards compatibility return null when trace not set instead of \"null\".\n     return trace == null ? null : String.valueOf(trace);\n@@ -408,6 +438,7 @@ public class LogEntry implements Serializable {\n   /**\n    * Returns the ID of the trace span associated with the log entry, if any.\n    */\n+\n   public String getSpanId() {\n     // For backwards compatibility return null when spanId not set instead of \"null\".\n     return spanId == null ? null : String.valueOf(spanId);\n@@ -418,6 +449,7 @@ public class LogEntry implements Serializable {\n    * Returns the sampling decision of the trace span associated with the log entry, or\n    * {@code false} if there is no trace span.\n    */\n+\n   public boolean getTraceSampled() {\n     return traceSampled;\n   }\n@@ -426,6 +458,7 @@ public class LogEntry implements Serializable {\n   /**\n    * Returns the source code location information associated with the log entry, if any.\n    */\n+\n   public SourceLocation getSourceLocation() {\n     return sourceLocation;\n   }\n@@ -438,6 +471,7 @@ public class LogEntry implements Serializable {\n    *\n    * @see <a href=\"https://cloud.google.com/logging/docs/view/logs_index\">Log Entries and Logs</a>\n    */\n+\n   @SuppressWarnings(\"unchecked\")\n   public <T extends Payload> T getPayload() {\n     return (T) payload;\n@@ -445,8 +479,7 @@ public class LogEntry implements Serializable {\n \n   @Override\n   public int hashCode() {\n-    return Objects.hash(logName, resource, timestamp, receiveTimestamp, severity, insertId,\n-        httpRequest, labels, operation, getTrace(), getSpanId(), traceSampled, sourceLocation, payload);\n+    return Objects.hash(logName, resource, timestamp, receiveTimestamp, severity, insertId, httpRequest, labels, operation, getTrace(), getSpanId(), traceSampled, sourceLocation, payload);\n   }\n \n   @Override\n@@ -459,44 +492,30 @@ public class LogEntry implements Serializable {\n     }\n     LogEntry other = (LogEntry) obj;\n     return Objects.equals(logName, other.logName)\n-        && Objects.equals(resource, other.resource)\n-        && Objects.equals(timestamp, other.timestamp)\n-        && Objects.equals(receiveTimestamp, other.receiveTimestamp)\n-        && Objects.equals(severity, other.severity)\n-        && Objects.equals(insertId, other.insertId)\n-        && Objects.equals(httpRequest, other.httpRequest)\n-        && Objects.equals(labels, other.labels)\n-        && Objects.equals(operation, other.operation)\n-        && Objects.equals(getTrace(), other.getTrace())\n-        && Objects.equals(getSpanId(), other.getSpanId())\n-        && Objects.equals(traceSampled, other.traceSampled)\n-        && Objects.equals(sourceLocation, other.sourceLocation)\n-        && Objects.equals(payload, other.payload);\n+    && Objects.equals(resource, other.resource)\n+    && Objects.equals(timestamp, other.timestamp)\n+    && Objects.equals(receiveTimestamp, other.receiveTimestamp)\n+    && Objects.equals(severity, other.severity)\n+    && Objects.equals(insertId, other.insertId)\n+    && Objects.equals(httpRequest, other.httpRequest)\n+    && Objects.equals(labels, other.labels)\n+    && Objects.equals(operation, other.operation)\n+    && Objects.equals(getTrace(), other.getTrace())\n+    && Objects.equals(getSpanId(), other.getSpanId())\n+    && Objects.equals(traceSampled, other.traceSampled)\n+    && Objects.equals(sourceLocation, other.sourceLocation)\n+    && Objects.equals(payload, other.payload);\n   }\n \n   @Override\n   public String toString() {\n-    return MoreObjects.toStringHelper(this)\n-        .add(\"logName\", logName)\n-        .add(\"resource\", resource)\n-        .add(\"timestamp\", timestamp)\n-        .add(\"receiveTimestamp\", receiveTimestamp)\n-        .add(\"severity\", severity)\n-        .add(\"insertId\", insertId)\n-        .add(\"httpRequest\", httpRequest)\n-        .add(\"labels\", labels)\n-        .add(\"operation\", operation)\n-        .add(\"trace\", trace)\n-        .add(\"spanId\", spanId)\n-        .add(\"traceSampled\", traceSampled)\n-        .add(\"sourceLocation\", sourceLocation)\n-        .add(\"payload\", payload)\n-        .toString();\n+    return MoreObjects.toStringHelper(this).add(\"logName\", logName).add(\"resource\", resource).add(\"timestamp\", timestamp).add(\"receiveTimestamp\", receiveTimestamp).add(\"severity\", severity).add(\"insertId\", insertId).add(\"httpRequest\", httpRequest).add(\"labels\", labels).add(\"operation\", operation).add(\"trace\", trace).add(\"spanId\", spanId).add(\"traceSampled\", traceSampled).add(\"sourceLocation\", sourceLocation).add(\"payload\", payload).toString();\n   }\n \n   /**\n    * Returns a {@code Builder} for this log entry.\n    */\n+\n   public Builder toBuilder() {\n     return new Builder(this);\n   }\n@@ -509,8 +528,7 @@ public class LogEntry implements Serializable {\n   }\n \n   private static Long millisFromTimestamp(Timestamp timestamp) {\n-    return timestamp.getSeconds() * MILLIS_PER_SECOND\n-        + timestamp.getNanos() / NANOS_PER_MILLISECOND;\n+    return timestamp.getSeconds() * MILLIS_PER_SECOND + timestamp.getNanos() / NANOS_PER_MILLISECOND;\n   }\n \n   com.google.logging.v2.LogEntry toPb(String projectId) {\n@@ -557,6 +575,7 @@ public class LogEntry implements Serializable {\n   /**\n    * Returns a builder for {@code LogEntry} objects given the entry payload.\n    */\n+\n   public static Builder newBuilder(Payload<?> payload) {\n     return new Builder(payload);\n   }\n@@ -564,6 +583,7 @@ public class LogEntry implements Serializable {\n   /**\n    * Creates a {@code LogEntry} object given the entry payload.\n    */\n+\n   public static LogEntry of(Payload<?> payload) {\n     return newBuilder(payload).build();\n   }\n@@ -572,6 +592,7 @@ public class LogEntry implements Serializable {\n    * Creates a {@code LogEntry} object given the log name, the monitored resource and the entry\n    * payload.\n    */\n+\n   public static LogEntry of(String logName, MonitoredResource resource, Payload<?> payload) {\n     return newBuilder(payload).setLogName(logName).setResource(resource).build();\n   }\n@@ -601,8 +622,7 @@ public class LogEntry implements Serializable {\n     if (!entryPb.getInsertId().equals(\"\")) {\n       builder.setInsertId(entryPb.getInsertId());\n     }\n-    if (!entryPb.getHttpRequest().equals(\n-        com.google.logging.type.HttpRequest.getDefaultInstance())) {\n+    if (!entryPb.getHttpRequest().equals(com.google.logging.type.HttpRequest.getDefaultInstance())) {\n       builder.setHttpRequest(HttpRequest.fromPb(entryPb.getHttpRequest()));\n     }\n     if (!entryPb.getOperation().equals(LogEntryOperation.getDefaultInstance())) {\n@@ -623,10 +643,10 @@ public class LogEntry implements Serializable {\n \n   static Function<LogEntry, com.google.logging.v2.LogEntry> toPbFunction(final String projectId) {\n     return new Function<LogEntry, com.google.logging.v2.LogEntry>() {\n-      @Override\n-      public com.google.logging.v2.LogEntry apply(LogEntry entry) {\n-        return entry.toPb(projectId);\n-      }\n-    };\n-  }\n+@Override\n+public com.google.logging.v2.LogEntry apply(LogEntry entry) {\n+  return entry.toPb(projectId);\n }\n+};\n+  }\n+}\n\\ No newline at end of file\n",
            "diff_size": 98
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "449",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 104).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/842/LogEntry.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/styler_three_grams/842/LogEntry.java\nindex 7db2e9e7d55..c04d8375c12 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/842/LogEntry.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/styler_three_grams/842/LogEntry.java\n@@ -446,7 +446,7 @@ public class LogEntry implements Serializable {\n   @Override\n   public int hashCode() {\n     return Objects.hash(logName, resource, timestamp, receiveTimestamp, severity, insertId,\n-        httpRequest, labels, operation, getTrace(), getSpanId(), traceSampled, sourceLocation, payload);\n+    httpRequest, labels, operation, getTrace(), getSpanId(), traceSampled, sourceLocation, payload);\n   }\n \n   @Override\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff",
        "styler_random"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1653",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "30",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "30",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "34",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "34",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1653/RelationshipCheckType.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1653/RelationshipCheckType.java\nindex 4b361366721..376859b20a5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1653/RelationshipCheckType.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1653/RelationshipCheckType.java\n@@ -17,48 +17,49 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.tools.txlog.checktypes;\n \n import org.neo4j.kernel.impl.store.record.RelationshipRecord;\n import org.neo4j.kernel.impl.transaction.command.Command;\n \n-public class RelationshipCheckType extends CheckType<Command.RelationshipCommand,RelationshipRecord>\n+public class RelationshipCheckType extends CheckType<Command.RelationshipCommand, RelationshipRecord>\n {\n-    RelationshipCheckType()\n-    {\n-        super( Command.RelationshipCommand.class );\n-    }\n+  RelationshipCheckType()\n+  {\n+    super(Command.RelationshipCommand.class);\n+  }\n \n-    @Override\n-    public RelationshipRecord before( Command.RelationshipCommand command )\n-    {\n-        return command.getBefore();\n-    }\n+  @Override\n+  public RelationshipRecord before(Command.RelationshipCommand command)\n+  {\n+    return command.getBefore();\n+  }\n \n-    @Override\n-    public RelationshipRecord after( Command.RelationshipCommand command )\n-    {\n-        return command.getAfter();\n-    }\n+  @Override\n+  public RelationshipRecord after(Command.RelationshipCommand command)\n+  {\n+    return command.getAfter();\n+  }\n \n-    @Override\n-    protected boolean inUseRecordsEqual( RelationshipRecord record1, RelationshipRecord record2 )\n-    {\n-        return record1.getNextProp() == record2.getNextProp() &&\n-               record1.isFirstInFirstChain() == record2.isFirstInFirstChain() &&\n-               record1.isFirstInSecondChain() == record2.isFirstInSecondChain() &&\n-               record1.getFirstNextRel() == record2.getFirstNextRel() &&\n-               record1.getFirstNode() == record2.getFirstNode() &&\n-               record1.getFirstPrevRel() == record2.getFirstPrevRel() &&\n-               record1.getSecondNextRel() == record2.getSecondNextRel() &&\n-               record1.getSecondNode() == record2.getSecondNode() &&\n-               record1.getSecondPrevRel() == record2.getSecondPrevRel() &&\n-               record1.getType() == record2.getType();\n-    }\n+  @Override\n+  protected boolean inUseRecordsEqual(RelationshipRecord record1, RelationshipRecord record2)\n+  {\n+    return record1.getNextProp() == record2.getNextProp() &&\n+        record1.isFirstInFirstChain() == record2.isFirstInFirstChain() &&\n+        record1.isFirstInSecondChain() == record2.isFirstInSecondChain() &&\n+        record1.getFirstNextRel() == record2.getFirstNextRel() &&\n+        record1.getFirstNode() == record2.getFirstNode() &&\n+        record1.getFirstPrevRel() == record2.getFirstPrevRel() &&\n+        record1.getSecondNextRel() == record2.getSecondNextRel() &&\n+        record1.getSecondNode() == record2.getSecondNode() &&\n+        record1.getSecondPrevRel() == record2.getSecondPrevRel() &&\n+        record1.getType() == record2.getType();\n+  }\n \n-    @Override\n-    public String name()\n-    {\n-        return \"relationship\";\n-    }\n+  @Override\n+  public String name()\n+  {\n+    return \"relationship\";\n+  }\n }\n",
            "diff_size": 35
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "47",
                    "column": "63",
                    "severity": "error",
                    "message": "'&&' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1653/RelationshipCheckType.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1653/RelationshipCheckType.java\nindex 4b361366721..960d42b4823 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1653/RelationshipCheckType.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1653/RelationshipCheckType.java\n@@ -44,8 +44,7 @@ public class RelationshipCheckType extends CheckType<Command.RelationshipCommand\n     @Override\n     protected boolean inUseRecordsEqual( RelationshipRecord record1, RelationshipRecord record2 )\n     {\n-        return record1.getNextProp() == record2.getNextProp() &&\n-               record1.isFirstInFirstChain() == record2.isFirstInFirstChain() &&\n+        return record1.getNextProp() == record2.getNextProp() &&record1.isFirstInFirstChain() == record2.isFirstInFirstChain() &&\n                record1.isFirstInSecondChain() == record2.isFirstInSecondChain() &&\n                record1.getFirstNextRel() == record2.getFirstNextRel() &&\n                record1.getFirstNode() == record2.getFirstNode() &&\n@@ -61,4 +60,4 @@ public class RelationshipCheckType extends CheckType<Command.RelationshipCommand\n     {\n         return \"relationship\";\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
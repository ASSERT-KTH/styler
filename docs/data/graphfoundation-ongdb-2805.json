{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2805",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "38",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2805/ListConverter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2805/ListConverter.java\nindex d234f2c7d88..c3f83c0d225 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2805/ListConverter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2805/ListConverter.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.proc;\n \n import java.lang.reflect.Type;\n@@ -29,28 +30,27 @@ import static org.neo4j.internal.kernel.api.procs.DefaultParameterValue.ntList;\n import static org.neo4j.kernel.impl.proc.ParseUtil.parseList;\n \n \n-public class ListConverter implements Function<String,DefaultParameterValue>\n+public class ListConverter implements Function<String, DefaultParameterValue>\n {\n-    private final Type type;\n-    private final Neo4jTypes.AnyType neoType;\n+  private final Type type;\n+  private final Neo4jTypes.AnyType neoType;\n \n-    public ListConverter( Type type, Neo4jTypes.AnyType neoType )\n-    {\n-        this.type = type;\n-        this.neoType = neoType;\n-    }\n+  public ListConverter(Type type, Neo4jTypes.AnyType neoType)\n+  {\n+    this.type = type;\n+    this.neoType = neoType;\n+  }\n \n-    @Override\n-    public DefaultParameterValue apply( String s )\n+  @Override\n+  public DefaultParameterValue apply(String s)\n+  {\n+    String value = s.trim();\n+    if (value.equalsIgnoreCase(\"null\"))\n+    {\n+      return ntList(null, neoType);\n+    } else\n     {\n-        String value = s.trim();\n-        if ( value.equalsIgnoreCase( \"null\" ) )\n-        {\n-            return ntList( null, neoType );\n-        }\n-        else\n-        {\n-            return ntList( parseList( value, type ), neoType );\n-        }\n+      return ntList(parseList(value, type), neoType);\n     }\n+  }\n }\n",
            "diff_size": 27
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2805/ListConverter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2805/ListConverter.java\nindex d234f2c7d88..92e070bc50f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2805/ListConverter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2805/ListConverter.java\n@@ -28,7 +28,6 @@ import org.neo4j.internal.kernel.api.procs.Neo4jTypes;\n import static org.neo4j.internal.kernel.api.procs.DefaultParameterValue.ntList;\n import static org.neo4j.kernel.impl.proc.ParseUtil.parseList;\n \n-\n public class ListConverter implements Function<String,DefaultParameterValue>\n {\n     private final Type type;\n@@ -53,4 +52,4 @@ public class ListConverter implements Function<String,DefaultParameterValue>\n             return ntList( parseList( value, type ), neoType );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
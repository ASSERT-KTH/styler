{
    "project_name": "Rugal-algorithm",
    "error_id": "22",
    "information": {
        "errors": [
            {
                "line": "16",
                "severity": "warning",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * limitations under the License.\n */\npackage ga.rugal.leetcode.wordsearchii;\n\nimport java.util.ArrayList;\nimport java.util.HashSet;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/errored/1/22/Solution.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/styler/22/Solution.java\nindex ff93b7ca1f9..582f47b3804 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/errored/1/22/Solution.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/styler/22/Solution.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package ga.rugal.leetcode.wordsearchii;\n \n import java.util.ArrayList;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/errored/1/22/Solution.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/intellij/22/Solution.java\nindex ff93b7ca1f9..06f2312d296 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/errored/1/22/Solution.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/intellij/22/Solution.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package ga.rugal.leetcode.wordsearchii;\n \n import java.util.ArrayList;\n@@ -35,9 +36,9 @@ public class Solution {\n \n   private boolean find = false;\n \n-  private static final int[] X = new int[]{0, 1, 0, -1};\n+  private static final int[] X = new int[] {0, 1, 0, -1};\n \n-  private static final int[] Y = new int[]{1, 0, -1, 0};\n+  private static final int[] Y = new int[] {1, 0, -1, 0};\n \n   public List<String> findWords(final char[][] board, final String[] words) {\n     this.board = board;\n@@ -64,8 +65,8 @@ public class Solution {\n \n   private boolean isValid(final int row, final int column, final boolean[][] visit) {\n     return row >= 0 && row < this.board.length\n-           && column >= 0 && column < this.board[0].length\n-           && !visit[row][column];\n+      && column >= 0 && column < this.board[0].length\n+      && !visit[row][column];\n   }\n \n   private boolean dfs(final int row, final int column, final int index, final boolean[][] visited) {\n@@ -82,7 +83,7 @@ public class Solution {\n     visited[row][column] = true;\n     for (int i = 0; i < X.length; ++i) {\n       if (this.isValid(row + X[i], column + Y[i], visited)\n-          && this.dfs(row + X[i], column + Y[i], index + 1, visited)) {\n+        && this.dfs(row + X[i], column + Y[i], index + 1, visited)) {\n         return true;\n       }\n     }\n",
            "diff_size": 6
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 0, expected is 3, indentation should be the same level as line 15.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "15",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "83",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 120).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "84",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/errored/1/22/Solution.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/naturalize/22/Solution.java\nindex ff93b7ca1f9..96a9a64c152 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/errored/1/22/Solution.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/naturalize/22/Solution.java\n@@ -12,8 +12,7 @@\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n- */\n-package ga.rugal.leetcode.wordsearchii;\n+ */package ga.rugal.leetcode.wordsearchii;\n \n import java.util.ArrayList;\n import java.util.HashSet;\n@@ -81,13 +80,12 @@ public class Solution {\n     }\n     visited[row][column] = true;\n     for (int i = 0; i < X.length; ++i) {\n-      if (this.isValid(row + X[i], column + Y[i], visited)\n-          && this.dfs(row + X[i], column + Y[i], index + 1, visited)) {\n-        return true;\n+      if (this.isValid(row + X[i], column + Y[i], visited) && this.dfs(row + X[i], column + Y[i], index + 1, visited)) {\n+  return true;\n       }\n     }\n     visited[row][column] = false;\n \n     return false;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "16",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "85",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 120).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/errored/1/22/Solution.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/codebuff/22/Solution.java\nindex ff93b7ca1f9..1ab0e4f8176 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/errored/1/22/Solution.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/codebuff/22/Solution.java\n@@ -25,6 +25,8 @@ import java.util.Set;\n  *\n  * @author rugalbernstein\n  */\n+\n+\n public class Solution {\n \n   private char[][] board;\n@@ -64,8 +66,7 @@ public class Solution {\n \n   private boolean isValid(final int row, final int column, final boolean[][] visit) {\n     return row >= 0 && row < this.board.length\n-           && column >= 0 && column < this.board[0].length\n-           && !visit[row][column];\n+           && column >= 0 && column < this.board[0].length && !visit[row][column];\n   }\n \n   private boolean dfs(final int row, final int column, final int index, final boolean[][] visited) {\n@@ -81,13 +82,11 @@ public class Solution {\n     }\n     visited[row][column] = true;\n     for (int i = 0; i < X.length; ++i) {\n-      if (this.isValid(row + X[i], column + Y[i], visited)\n-          && this.dfs(row + X[i], column + Y[i], index + 1, visited)) {\n+      if (this.isValid(row + X[i], column + Y[i], visited) && this.dfs(row + X[i], column + Y[i], index + 1, visited)) {\n         return true;\n       }\n     }\n     visited[row][column] = false;\n-\n     return false;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/errored/1/22/Solution.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/styler_random/22/Solution.java\nindex ff93b7ca1f9..582f47b3804 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/errored/1/22/Solution.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/styler_random/22/Solution.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package ga.rugal.leetcode.wordsearchii;\n \n import java.util.ArrayList;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/errored/1/22/Solution.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/styler_three_grams/22/Solution.java\nindex ff93b7ca1f9..582f47b3804 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/errored/1/22/Solution.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/styler_three_grams/22/Solution.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package ga.rugal.leetcode.wordsearchii;\n \n import java.util.ArrayList;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
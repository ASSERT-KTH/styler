{
    "project_name": "neo4j-neo4j",
    "error_id": "2998",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "68",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "142",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "142",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "165",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "165",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "179",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "179",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "192",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "192",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "196",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "196",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "199",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "199",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "204",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "204",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "211",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "211",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "227",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "227",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "229",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "229",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "243",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "243",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "254",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "254",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "259",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "259",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "261",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "261",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "265",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "265",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "265",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "269",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "278",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "278",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "284",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "284",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "308",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "308",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "313",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "313",
                    "column": "106",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "316",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "316",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "318",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "318",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "333",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "333",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "338",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "338",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "353",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "353",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "358",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "358",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "369",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "369",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2998/HexPrinter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2998/HexPrinter.java\nindex 89a746f8218..286937417ae 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2998/HexPrinter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2998/HexPrinter.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.common;\n \n import java.io.ByteArrayOutputStream;\n@@ -30,17 +31,17 @@ import static java.nio.ByteBuffer.wrap;\n \n /**\n  * Prints streams of bytes as hex, printed in columns and rows neatly ordered. For example:\n- *  <p>\n- *  @ 0x000A: FF B9 E2 5B 95 2B 69 21  CF 01 10 89 1E 05 67 51  0C 91 32 20 40 8A 4B 92  01 8C C7 93 F8 66 58 F0\n- *  <br>\n- *  @ 0x000B: 39 C8 F1 2B 84 3B AF 8E  C7 50 F7 82 E7 1C DB 20  BF E3 C1 08 68 12 46 72  BA 72 5F 82 13 9A C1 DF\n- *  <br>\n- *  @ 0x000C: 56 A6 83 85 36 25 00 DA  B4 57 02 FF E6 97 1C 69  F9 16 56 AF 78 C9 0F A4  CD A4 1F A8 08 08 3B 3B\n- *  <p>\n+ * <p>\n+ *\n+ * @ 0x000A: FF B9 E2 5B 95 2B 69 21  CF 01 10 89 1E 05 67 51  0C 91 32 20 40 8A 4B 92  01 8C C7 93 F8 66 58 F0\n+ * <br>\n+ * @ 0x000B: 39 C8 F1 2B 84 3B AF 8E  C7 50 F7 82 E7 1C DB 20  BF E3 C1 08 68 12 46 72  BA 72 5F 82 13 9A C1 DF\n+ * <br>\n+ * @ 0x000C: 56 A6 83 85 36 25 00 DA  B4 57 02 FF E6 97 1C 69  F9 16 56 AF 78 C9 0F A4  CD A4 1F A8 08 08 3B 3B\n+ * <p>\n  * where number of bytes per line, number of bytes per group, byte group separator, length of line number, prefix\n  * or suffix of line number can be controlled. If the length of line number is set to a non-positive number,\n  * then no line number, prefix, or suffix will be added.\n- *\n  */\n public class HexPrinter\n {\n@@ -64,55 +65,55 @@ public class HexPrinter\n     private static final String DEFAULT_LINE_NUMBER_SUFFIX = \": \";\n     private static final String DEFAULT_BYTE_SEPARATOR = \" \";\n \n-    public HexPrinter withBytesPerLine( int bytesPerLine )\n+    public HexPrinter withBytesPerLine(int bytesPerLine)\n     {\n         this.bytesPerLine = bytesPerLine;\n         return this;\n     }\n \n-    public HexPrinter withBytesPerGroup( int bytesPerGroup )\n+    public HexPrinter withBytesPerGroup(int bytesPerGroup)\n     {\n         this.bytesPerGroup = bytesPerGroup;\n         return this;\n     }\n \n-    public HexPrinter withGroupSeparator( String separator )\n+    public HexPrinter withGroupSeparator(String separator)\n     {\n         this.groupSeparator = separator;\n         return this;\n     }\n \n-    public HexPrinter withLineNumberDigits( int maxLineNumberDigits )\n+    public HexPrinter withLineNumberDigits(int maxLineNumberDigits)\n     {\n         this.maxLineNumberDigits = maxLineNumberDigits;\n         return this;\n     }\n \n-    public HexPrinter withLineNumberPrefix( String prefix )\n+    public HexPrinter withLineNumberPrefix(String prefix)\n     {\n         this.lineNumberPrefix = prefix;\n         return this;\n     }\n \n-    public HexPrinter withLineNumberSuffix( String suffix )\n+    public HexPrinter withLineNumberSuffix(String suffix)\n     {\n         this.lineNumberSuffix = suffix;\n         return this;\n     }\n \n-    public HexPrinter withLineNumberOffset( long offset )\n+    public HexPrinter withLineNumberOffset(long offset)\n     {\n         this.currentLineNumber = offset;\n         return this;\n     }\n \n-    public HexPrinter withByteSeparator( String byteSeparator )\n+    public HexPrinter withByteSeparator(String byteSeparator)\n     {\n         this.byteSeparator = byteSeparator;\n         return this;\n     }\n \n-    public HexPrinter withBytesGroupingFormat( int bytesPerLine, int bytesPerGroup, String separator )\n+    public HexPrinter withBytesGroupingFormat(int bytesPerLine, int bytesPerGroup, String separator)\n     {\n         this.bytesPerLine = bytesPerLine;\n         this.bytesPerGroup = bytesPerGroup;\n@@ -120,7 +121,7 @@ public class HexPrinter\n         return this;\n     }\n \n-    public HexPrinter withLineNumberFormat( int maxLineNumberDigits, String prefix, String suffix )\n+    public HexPrinter withLineNumberFormat(int maxLineNumberDigits, String prefix, String suffix)\n     {\n         this.maxLineNumberDigits = maxLineNumberDigits;\n         this.lineNumberPrefix = prefix;\n@@ -138,12 +139,12 @@ public class HexPrinter\n      *\n      * @param out\n      */\n-    public HexPrinter( PrintStream out )\n+    public HexPrinter(PrintStream out)\n     {\n-        this( out, DEFAULT_BYTES_PER_GROUP, DEFAULT_GROUP_SEPARATOR );\n+        this(out, DEFAULT_BYTES_PER_GROUP, DEFAULT_GROUP_SEPARATOR);\n     }\n \n-    public HexPrinter( PrintStream out, int bytesPerGroup, String groupSep )\n+    public HexPrinter(PrintStream out, int bytesPerGroup, String groupSep)\n     {\n         this.out = out;\n         this.bytesPerLine = DEFAULT_GROUPS_PER_LINE * bytesPerGroup;\n@@ -157,56 +158,59 @@ public class HexPrinter\n \n     /**\n      * Append one byte into the print stream\n+     *\n      * @param value\n      * @return\n      */\n-    public HexPrinter append( byte value )\n+    public HexPrinter append(byte value)\n     {\n         checkNewLine();\n-        addHexValue( value );\n+        addHexValue(value);\n         return this;\n     }\n \n     /**\n      * Append all the bytes in the channel into print stream\n+     *\n      * @param source\n      * @return\n      * @throws IOException\n      */\n-    public HexPrinter append( ReadableByteChannel source ) throws IOException\n+    public HexPrinter append(ReadableByteChannel source) throws IOException\n     {\n-        return append( source, -1 );\n+        return append(source, -1);\n     }\n \n     /**\n      * Append {@code atMost} count of bytes into print stream\n+     *\n      * @param source\n      * @param atMost\n      * @return\n      * @throws IOException\n      */\n-    public HexPrinter append( ReadableByteChannel source, int atMost ) throws IOException\n+    public HexPrinter append(ReadableByteChannel source, int atMost) throws IOException\n     {\n         boolean indefinite = atMost == -1;\n-        ByteBuffer buffer = ByteBuffer.allocate( 4 * 1024 );\n-        while ( true )\n+        ByteBuffer buffer = ByteBuffer.allocate(4 * 1024);\n+        while (true)\n         {\n             buffer.clear();\n-            if ( !indefinite )\n+            if (!indefinite)\n             {\n-                buffer.limit( Math.min( buffer.capacity(), atMost ) );\n+                buffer.limit(Math.min(buffer.capacity(), atMost));\n             }\n-            int read = source.read( buffer );\n-            if ( read == -1 )\n+            int read = source.read(buffer);\n+            if (read == -1)\n             {\n                 break;\n             }\n \n             atMost -= read;\n             buffer.flip();\n-            while ( buffer.hasRemaining() )\n+            while (buffer.hasRemaining())\n             {\n-                append( buffer.get() );\n+                append(buffer.get());\n             }\n         }\n         return this;\n@@ -214,16 +218,17 @@ public class HexPrinter\n \n     /**\n      * Append a part of byte buffer into print stream\n+     *\n      * @param bytes\n      * @param offset\n      * @param length\n      * @return\n      */\n-    public HexPrinter append( ByteBuffer bytes, int offset, int length )\n+    public HexPrinter append(ByteBuffer bytes, int offset, int length)\n     {\n-        for ( int i = offset; i < offset + length; i++ )\n+        for (int i = offset; i < offset + length; i++)\n         {\n-            append( bytes.get( i ) );\n+            append(bytes.get(i));\n         }\n         return this;\n     }\n@@ -231,57 +236,57 @@ public class HexPrinter\n     /**\n      * Append the bytes in the byte buffer, from its current position to its limit into print stream. This operation\n      * will not move the buffers current position.\n+     *\n      * @param bytes\n      * @return\n      */\n-    public HexPrinter append( ByteBuffer bytes )\n+    public HexPrinter append(ByteBuffer bytes)\n     {\n-        return append( bytes, bytes.position(), bytes.remaining() );\n+        return append(bytes, bytes.position(), bytes.remaining());\n     }\n \n     /**\n      * Append the whole byte array into print stream\n+     *\n      * @param bytes\n      * @return\n      */\n-    public HexPrinter append( byte[] bytes )\n+    public HexPrinter append(byte[] bytes)\n     {\n-        return append( wrap( bytes ), 0, bytes.length );\n+        return append(wrap(bytes), 0, bytes.length);\n     }\n \n-    private void addHexValue( byte value )\n+    private void addHexValue(byte value)\n     {\n-        if ( bytesOnThisLine == 1 )\n+        if (bytesOnThisLine == 1)\n         {\n             // it is the first byte\n             // out.append( NOTHING )\n-        }\n-        else if ( bytesOnThisLine % bytesPerGroup == 1 )\n+        } else if (bytesOnThisLine % bytesPerGroup == 1)\n         {\n             // it is the first byte for a new byte group\n-            out.append( groupSeparator );\n-        }\n-        else\n+            out.append(groupSeparator);\n+        } else\n         {\n-            out.append( byteSeparator );\n+            out.append(byteSeparator);\n         }\n-        out.printf( \"%X%X\", 0xF & (value >> 4), 0xF & value );\n+        out.printf(\"%X%X\", 0xF & (value >> 4), 0xF & value);\n     }\n \n     private void checkNewLine()\n     {\n-        if ( bytesOnThisLine >= bytesPerLine )\n+        if (bytesOnThisLine >= bytesPerLine)\n         {\n             out.println();\n             bytesOnThisLine = 0;\n             currentLineNumber++;\n         }\n-        if ( bytesOnThisLine == 0 && maxLineNumberDigits > 0 )\n+        if (bytesOnThisLine == 0 && maxLineNumberDigits > 0)\n         {\n             // a new line and line number enabled\n-            out.append( lineNumberPrefix );\n-            out.printf( \"0x%0\" + maxLineNumberDigits + \"X\", currentLineNumber );\n-            out.append( lineNumberSuffix );\n+            out.append(lineNumberPrefix);\n+            out.printf(\"0x%0\" + maxLineNumberDigits + \"X\", currentLineNumber);\n+            out.append(lineNumberSuffix);\n         }\n         bytesOnThisLine++;\n     }\n@@ -291,7 +296,7 @@ public class HexPrinter\n     /**\n      * Convert a subsection of a byte buffer to a human readable string of nicely formatted hex numbers.\n      * Output looks like:\n-     *\n+     * <p>\n      * 01 02 03 04 05 06 07 08    01 02 03 04 05 06 07 08    01 02 03 04 05 06 07 08    01 02 03 04 05 06 07 08\n      * 01 02 03 04 05 06 07 08    01 02 03 04 05 06 07 08    01 02 03 04 05 06 07 08    01 02 03 04 05 06 07 08\n      *\n@@ -300,68 +305,69 @@ public class HexPrinter\n      * @param length\n      * @return formatted hex numbers in string\n      */\n-    public static String hex( ByteBuffer bytes, int offset, int length )\n+    public static String hex(ByteBuffer bytes, int offset, int length)\n     {\n-        return hex( bytes, offset, length, DEFAULT_BYTES_PER_GROUP, DEFAULT_GROUP_SEPARATOR );\n+        return hex(bytes, offset, length, DEFAULT_BYTES_PER_GROUP, DEFAULT_GROUP_SEPARATOR);\n     }\n \n-    public static String hex( ByteBuffer bytes, int offset, int length, int bytesPerBlock, String groupSep )\n+    public static String hex(ByteBuffer bytes, int offset, int length, int bytesPerBlock, String groupSep)\n     {\n         ByteArrayOutputStream outStream = new ByteArrayOutputStream();\n-        PrintStream out = new PrintStream( outStream, false, StandardCharsets.UTF_8 );\n+        PrintStream out = new PrintStream(outStream, false, StandardCharsets.UTF_8);\n \n-        new HexPrinter( out, bytesPerBlock, groupSep ).append( bytes, offset, length );\n+        new HexPrinter(out, bytesPerBlock, groupSep).append(bytes, offset, length);\n         out.flush();\n-        return outStream.toString( StandardCharsets.UTF_8 );\n+        return outStream.toString(StandardCharsets.UTF_8);\n     }\n \n     /**\n      * Convert a full byte buffer to a human readable string of nicely formatted hex numbers using default hex format.\n      * Output looks like:\n-     *\n+     * <p>\n      * 01 02 03 04 05 06 07 08    01 02 03 04 05 06 07 08    01 02 03 04 05 06 07 08    01 02 03 04 05 06 07 08\n      * 01 02 03 04 05 06 07 08    01 02 03 04 05 06 07 08    01 02 03 04 05 06 07 08    01 02 03 04 05 06 07 08\n      *\n      * @param bytes\n      * @return formatted hex numbers in string\n      */\n-    public static String hex( ByteBuffer bytes )\n+    public static String hex(ByteBuffer bytes)\n     {\n-        return hex( bytes, DEFAULT_BYTES_PER_GROUP, DEFAULT_GROUP_SEPARATOR );\n+        return hex(bytes, DEFAULT_BYTES_PER_GROUP, DEFAULT_GROUP_SEPARATOR);\n     }\n \n-    public static String hex( ByteBuffer bytes, int bytesPerBlock, String groupSep )\n+    public static String hex(ByteBuffer bytes, int bytesPerBlock, String groupSep)\n     {\n-        return hex( bytes, bytes.position(), bytes.limit(), bytesPerBlock, groupSep );\n+        return hex(bytes, bytes.position(), bytes.limit(), bytesPerBlock, groupSep);\n     }\n \n     /**\n      * Convert a full byte buffer to a human readable string of nicely formatted hex numbers.\n      * Output looks like:\n-     *\n+     * <p>\n      * 01 02 03 04 05 06 07 08    01 02 03 04 05 06 07 08    01 02 03 04 05 06 07 08    01 02 03 04 05 06 07 08\n      * 01 02 03 04 05 06 07 08    01 02 03 04 05 06 07 08    01 02 03 04 05 06 07 08    01 02 03 04 05 06 07 08\n      *\n      * @param bytes\n      * @return formatted hex numbers in string\n      */\n-    public static String hex( byte[] bytes )\n+    public static String hex(byte[] bytes)\n     {\n-        return hex( bytes, DEFAULT_BYTES_PER_GROUP, DEFAULT_GROUP_SEPARATOR );\n+        return hex(bytes, DEFAULT_BYTES_PER_GROUP, DEFAULT_GROUP_SEPARATOR);\n     }\n \n-    public static String hex( byte[] bytes, int bytesPerBlock, String groupSep )\n+    public static String hex(byte[] bytes, int bytesPerBlock, String groupSep)\n     {\n-        return hex( wrap( bytes ), bytesPerBlock, groupSep );\n+        return hex(wrap(bytes), bytesPerBlock, groupSep);\n     }\n \n     /**\n      * Convert a single byte to a human-readable hex number. The number will always be two characters wide.\n+     *\n      * @param b\n      * @return formatted hex numbers in string\n      */\n-    public static String hex( byte b )\n+    public static String hex(byte b)\n     {\n-        return String.format( \"%02X\", b );\n+        return String.format(\"%02X\", b);\n     }\n }\n",
            "diff_size": 83
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
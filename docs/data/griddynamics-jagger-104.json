{
    "project_name": "griddynamics-jagger",
    "error_id": "104",
    "information": {
        "errors": [
            {
                "line": "20",
                "severity": "warning",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\npackage com.griddynamics.jagger.engine.e1.aggregator.workload;\n\nimport com.griddynamics.jagger.coordinator.NodeId;\nimport com.griddynamics.jagger.dbapi.entity.ProfilingSuT;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/104/ProfilerLogProcessor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/styler/104/ProfilerLogProcessor.java\nindex 92eab76c2af..881bd1d1b1d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/104/ProfilerLogProcessor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/styler/104/ProfilerLogProcessor.java\n@@ -17,6 +17,7 @@\n  * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package com.griddynamics.jagger.engine.e1.aggregator.workload;\n \n import com.griddynamics.jagger.coordinator.NodeId;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/104/ProfilerLogProcessor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/intellij/104/ProfilerLogProcessor.java\nindex 92eab76c2af..881bd1d1b1d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/104/ProfilerLogProcessor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/intellij/104/ProfilerLogProcessor.java\n@@ -17,6 +17,7 @@\n  * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package com.griddynamics.jagger.engine.e1.aggregator.workload;\n \n import com.griddynamics.jagger.coordinator.NodeId;\n",
            "diff_size": 1
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/104/ProfilerLogProcessor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/naturalize/104/ProfilerLogProcessor.java\nindex 92eab76c2af..fa854aa9cb3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/104/ProfilerLogProcessor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/naturalize/104/ProfilerLogProcessor.java\n@@ -17,6 +17,7 @@\n  * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package com.griddynamics.jagger.engine.e1.aggregator.workload;\n \n import com.griddynamics.jagger.coordinator.NodeId;\n@@ -114,8 +115,7 @@ public class ProfilerLogProcessor extends LogProcessor implements DistributionLi\n                     String prefix = \"Agent on (\" + profileDTO.getHostAddress() + \") : \";\n                     for (Map.Entry<String, RuntimeGraph> runtimeGraphEntry : profileDTO.getRuntimeGraphs().entrySet()) {\n                         String context = SerializationUtils.toString(runtimeGraphEntry.getValue());\n-                        session.persist(new ProfilingSuT(prefix + runtimeGraphEntry.getKey(), sessionId,\n-                                taskData, context));\n+                        session.persist(new ProfilingSuT(prefix + runtimeGraphEntry.getKey(), sessionId, taskData, context));\n                     }\n                     session.flush();\n                     return null;\n@@ -123,4 +123,4 @@ public class ProfilerLogProcessor extends LogProcessor implements DistributionLi\n             });\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "20",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "90",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "91",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "120",
                    "severity": "warning",
                    "message": "'\") : \"' has incorrect indentation level 20, expected level should be 28.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/104/ProfilerLogProcessor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/codebuff/104/ProfilerLogProcessor.java\nindex 92eab76c2af..c13b1691fa4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/104/ProfilerLogProcessor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/codebuff/104/ProfilerLogProcessor.java\n@@ -38,14 +38,15 @@ import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.springframework.beans.factory.annotation.Required;\n import org.springframework.orm.hibernate3.HibernateCallback;\n-\n import java.io.IOException;\n import java.sql.SQLException;\n import java.util.Collection;\n import java.util.Map;\n import java.util.Set;\n \n+\n public class ProfilerLogProcessor extends LogProcessor implements DistributionListener {\n+\n     private static Logger log = LoggerFactory.getLogger(ProfilerLogProcessor.class);\n     private FileStorage fileStorage;\n     private LogReader logReader;\n@@ -63,6 +64,7 @@ public class ProfilerLogProcessor extends LogProcessor implements DistributionLi\n     @Override\n     public void onDistributionStarted(String sessionId, String taskId, Task task, Collection<NodeId> capableNodes) {\n         // do nothing\n+\n     }\n \n     @Override\n@@ -84,7 +86,9 @@ public class ProfilerLogProcessor extends LogProcessor implements DistributionLi\n \n     private void saveProfiles(final String sessionId, final String taskId) throws IOException {\n         String dir;\n-        dir = sessionId + \"/\" + taskId + \"/\" + MonitorProcess.PROFILER_MARKER;\n+        dir = sessionId +\n+        \"/\" + taskId +\n+        \"/\" + MonitorProcess.PROFILER_MARKER;\n \n         Set<String> fileNameList = fileStorage.getFileNameList(dir);\n         if (fileNameList.isEmpty()) {\n@@ -106,16 +110,17 @@ public class ProfilerLogProcessor extends LogProcessor implements DistributionLi\n                 log.warn(e.getMessage(), e);\n                 return;\n             }\n-            final ProfileDTO profileDTO = SerializationUtils.fromString(reader.iterator().next().toString());\n \n+            final ProfileDTO profileDTO = SerializationUtils.fromString(reader.iterator().next()\n+                                                                                         .toString());\n             getHibernateTemplate().execute(new HibernateCallback<Void>() {\n                 @Override\n                 public Void doInHibernate(Session session) throws HibernateException, SQLException {\n-                    String prefix = \"Agent on (\" + profileDTO.getHostAddress() + \") : \";\n+                    String prefix = \"Agent on (\" + profileDTO.getHostAddress() +\n+                    \") : \";\n                     for (Map.Entry<String, RuntimeGraph> runtimeGraphEntry : profileDTO.getRuntimeGraphs().entrySet()) {\n                         String context = SerializationUtils.toString(runtimeGraphEntry.getValue());\n-                        session.persist(new ProfilingSuT(prefix + runtimeGraphEntry.getKey(), sessionId,\n-                                taskData, context));\n+                        session.persist(new ProfilingSuT(prefix + runtimeGraphEntry.getKey(), sessionId, taskData, context));\n                     }\n                     session.flush();\n                     return null;\n@@ -123,4 +128,4 @@ public class ProfilerLogProcessor extends LogProcessor implements DistributionLi\n             });\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 15
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/104/ProfilerLogProcessor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/styler_random/104/ProfilerLogProcessor.java\nindex 92eab76c2af..881bd1d1b1d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/104/ProfilerLogProcessor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/styler_random/104/ProfilerLogProcessor.java\n@@ -17,6 +17,7 @@\n  * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package com.griddynamics.jagger.engine.e1.aggregator.workload;\n \n import com.griddynamics.jagger.coordinator.NodeId;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/104/ProfilerLogProcessor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/styler_three_grams/104/ProfilerLogProcessor.java\nindex 92eab76c2af..881bd1d1b1d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/104/ProfilerLogProcessor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/styler_three_grams/104/ProfilerLogProcessor.java\n@@ -17,6 +17,7 @@\n  * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package com.griddynamics.jagger.engine.e1.aggregator.workload;\n \n import com.griddynamics.jagger.coordinator.NodeId;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "codebuff"
    ]
}
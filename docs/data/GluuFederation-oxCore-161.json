{
    "project_name": "GluuFederation-oxCore",
    "error_id": "161",
    "information": {
        "errors": [
            {
                "line": "10",
                "column": "1",
                "severity": "error",
                "message": "File contains tab characters (this is the first instance).",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
            }
        ]
    },
    "source_code": "public abstract class AbstractRedisProvider {\n\n\tprotected RedisConfiguration redisConfiguration;\n\n\tpublic AbstractRedisProvider(RedisConfiguration redisConfiguration) {\n\t\tthis.redisConfiguration = redisConfiguration;",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "12",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/errored/1/161/AbstractRedisProvider.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/styler/161/AbstractRedisProvider.java\nindex 79155656b8f..8d95392f307 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/errored/1/161/AbstractRedisProvider.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/styler/161/AbstractRedisProvider.java\n@@ -7,7 +7,7 @@ import redis.clients.jedis.HostAndPort;\n  */\n public abstract class AbstractRedisProvider {\n \n-\tprotected RedisConfiguration redisConfiguration;\n+    protected RedisConfiguration redisConfiguration;\n \n \tpublic AbstractRedisProvider(RedisConfiguration redisConfiguration) {\n \t\tthis.redisConfiguration = redisConfiguration;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/errored/1/161/AbstractRedisProvider.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/intellij/161/AbstractRedisProvider.java\nindex 79155656b8f..9ee32009d22 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/errored/1/161/AbstractRedisProvider.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/intellij/161/AbstractRedisProvider.java\n@@ -7,46 +7,46 @@ import redis.clients.jedis.HostAndPort;\n  */\n public abstract class AbstractRedisProvider {\n \n-\tprotected RedisConfiguration redisConfiguration;\n+    protected RedisConfiguration redisConfiguration;\n \n-\tpublic AbstractRedisProvider(RedisConfiguration redisConfiguration) {\n-\t\tthis.redisConfiguration = redisConfiguration;\n+    public AbstractRedisProvider(RedisConfiguration redisConfiguration) {\n+        this.redisConfiguration = redisConfiguration;\n         HostAndPort.setLocalhost(\"127.0.0.1\");\n-\t}\n+    }\n \n-\tpublic RedisConfiguration getRedisConfiguration() {\n-\t\treturn redisConfiguration;\n-\t}\n+    public RedisConfiguration getRedisConfiguration() {\n+        return redisConfiguration;\n+    }\n \n-\tpublic void testConnection() {\n-\t\tput(2, \"testKey\", \"testValue\");\n-\t\tif (!\"testValue\".equals(get(\"testKey\"))) {\n-\t\t\tthrow new RuntimeException(\"Failed to connect to redis server. Configuration: \" + redisConfiguration);\n-\t\t}\n-\t}\n+    public void testConnection() {\n+        put(2, \"testKey\", \"testValue\");\n+        if (!\"testValue\".equals(get(\"testKey\"))) {\n+            throw new RuntimeException(\"Failed to connect to redis server. Configuration: \" + redisConfiguration);\n+        }\n+    }\n \n-\tpublic boolean isConnected() {\n-\t\tput(2, \"testKey\", \"testValue\");\n-\t\tif (!\"testValue\".equals(get(\"testKey\"))) {\n-\t\t\treturn false;\n-\t\t}\n-\t\treturn true;\n-\t}\n+    public boolean isConnected() {\n+        put(2, \"testKey\", \"testValue\");\n+        if (!\"testValue\".equals(get(\"testKey\"))) {\n+            return false;\n+        }\n+        return true;\n+    }\n \n-\tpublic abstract void create();\n+    public abstract void create();\n \n-\tpublic abstract void destroy();\n+    public abstract void destroy();\n \n-\tpublic abstract Object getDelegate();\n+    public abstract Object getDelegate();\n \n-\tpublic abstract Object get(String key);\n+    public abstract Object get(String key);\n \n-\tpublic abstract void remove(String key);\n+    public abstract void remove(String key);\n \n-\tpublic abstract void clear();\n+    public abstract void clear();\n \n-\tpublic abstract void put(int expirationInSeconds, String key, Object object);\n+    public abstract void put(int expirationInSeconds, String key, Object object);\n \n-\tpublic abstract void put(String key, Object object);\n+    public abstract void put(String key, Object object);\n \n }\n",
            "diff_size": 28
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "12",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/errored/1/161/AbstractRedisProvider.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/naturalize/161/AbstractRedisProvider.java\nindex 79155656b8f..3936cbb5dd7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/errored/1/161/AbstractRedisProvider.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/naturalize/161/AbstractRedisProvider.java\n@@ -7,31 +7,31 @@ import redis.clients.jedis.HostAndPort;\n  */\n public abstract class AbstractRedisProvider {\n \n-\tprotected RedisConfiguration redisConfiguration;\n+    protected RedisConfiguration redisConfiguration;\n \n \tpublic AbstractRedisProvider(RedisConfiguration redisConfiguration) {\n-\t\tthis.redisConfiguration = redisConfiguration;\n-        HostAndPort.setLocalhost(\"127.0.0.1\");\n-\t}\n+    this.redisConfiguration = redisConfiguration;\n+HostAndPort.setLocalhost(\"127.0.0.1\");\n+    }\n \n \tpublic RedisConfiguration getRedisConfiguration() {\n-\t\treturn redisConfiguration;\n-\t}\n+    return redisConfiguration;\n+    }\n \n \tpublic void testConnection() {\n-\t\tput(2, \"testKey\", \"testValue\");\n+    put(2, \"testKey\", \"testValue\");\n \t\tif (!\"testValue\".equals(get(\"testKey\"))) {\n-\t\t\tthrow new RuntimeException(\"Failed to connect to redis server. Configuration: \" + redisConfiguration);\n-\t\t}\n-\t}\n+    throw new RuntimeException(\"Failed to connect to redis server. Configuration: \" + redisConfiguration);\n+    }\n+    }\n \n \tpublic boolean isConnected() {\n-\t\tput(2, \"testKey\", \"testValue\");\n+    put(2, \"testKey\", \"testValue\");\n \t\tif (!\"testValue\".equals(get(\"testKey\"))) {\n-\t\t\treturn false;\n-\t\t}\n+    return false;\n+    }\n \t\treturn true;\n-\t}\n+    }\n \n \tpublic abstract void create();\n \n@@ -49,4 +49,4 @@ public abstract class AbstractRedisProvider {\n \n \tpublic abstract void put(String key, Object object);\n \n-}\n+    }\n\\ No newline at end of file\n",
            "diff_size": 15
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/errored/1/161/AbstractRedisProvider.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/codebuff/161/AbstractRedisProvider.java\nindex 79155656b8f..ff44e4e8482 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/errored/1/161/AbstractRedisProvider.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/codebuff/161/AbstractRedisProvider.java\n@@ -5,48 +5,51 @@ import redis.clients.jedis.HostAndPort;\n /**\n  * @author yuriyz\n  */\n+\n+\n public abstract class AbstractRedisProvider {\n \n-\tprotected RedisConfiguration redisConfiguration;\n+    protected RedisConfiguration redisConfiguration;\n \n-\tpublic AbstractRedisProvider(RedisConfiguration redisConfiguration) {\n-\t\tthis.redisConfiguration = redisConfiguration;\n+    public AbstractRedisProvider(RedisConfiguration redisConfiguration) {\n+        this.redisConfiguration = redisConfiguration;\n         HostAndPort.setLocalhost(\"127.0.0.1\");\n-\t}\n+    }\n+\n+    public RedisConfiguration getRedisConfiguration() {\n+        return redisConfiguration;\n+    }\n \n-\tpublic RedisConfiguration getRedisConfiguration() {\n-\t\treturn redisConfiguration;\n-\t}\n+    public void testConnection() {\n+        put(2, \"testKey\", \"testValue\");\n+        if (!\"testValue\".equals(get(\"testKey\"))) {\n+            throw new RuntimeException(\"Failed to connect to redis server. Configuration: \" + redisConfiguration);\n+        }\n+    }\n \n-\tpublic void testConnection() {\n-\t\tput(2, \"testKey\", \"testValue\");\n-\t\tif (!\"testValue\".equals(get(\"testKey\"))) {\n-\t\t\tthrow new RuntimeException(\"Failed to connect to redis server. Configuration: \" + redisConfiguration);\n-\t\t}\n-\t}\n+    public boolean isConnected() {\n+        put(2, \"testKey\", \"testValue\");\n+        if (!\"testValue\".equals(get(\"testKey\"))) {\n+            return false;\n+        }\n \n-\tpublic boolean isConnected() {\n-\t\tput(2, \"testKey\", \"testValue\");\n-\t\tif (!\"testValue\".equals(get(\"testKey\"))) {\n-\t\t\treturn false;\n-\t\t}\n-\t\treturn true;\n-\t}\n+        return true;\n+    }\n \n-\tpublic abstract void create();\n+    public abstract void create();\n \n-\tpublic abstract void destroy();\n+    public abstract void destroy();\n \n-\tpublic abstract Object getDelegate();\n+    public abstract Object getDelegate();\n \n-\tpublic abstract Object get(String key);\n+    public abstract Object get(String key);\n \n-\tpublic abstract void remove(String key);\n+    public abstract void remove(String key);\n \n-\tpublic abstract void clear();\n+    public abstract void clear();\n \n-\tpublic abstract void put(int expirationInSeconds, String key, Object object);\n+    public abstract void put(int expirationInSeconds, String key, Object object);\n \n-\tpublic abstract void put(String key, Object object);\n+    public abstract void put(String key, Object object);\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 38
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "12",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/errored/1/161/AbstractRedisProvider.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/styler_random/161/AbstractRedisProvider.java\nindex 79155656b8f..8d95392f307 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/errored/1/161/AbstractRedisProvider.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/styler_random/161/AbstractRedisProvider.java\n@@ -7,7 +7,7 @@ import redis.clients.jedis.HostAndPort;\n  */\n public abstract class AbstractRedisProvider {\n \n-\tprotected RedisConfiguration redisConfiguration;\n+    protected RedisConfiguration redisConfiguration;\n \n \tpublic AbstractRedisProvider(RedisConfiguration redisConfiguration) {\n \t\tthis.redisConfiguration = redisConfiguration;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "12",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/errored/1/161/AbstractRedisProvider.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/styler_three_grams/161/AbstractRedisProvider.java\nindex 79155656b8f..8d95392f307 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/errored/1/161/AbstractRedisProvider.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-oxCore/styler_three_grams/161/AbstractRedisProvider.java\n@@ -7,7 +7,7 @@ import redis.clients.jedis.HostAndPort;\n  */\n public abstract class AbstractRedisProvider {\n \n-\tprotected RedisConfiguration redisConfiguration;\n+    protected RedisConfiguration redisConfiguration;\n \n \tpublic AbstractRedisProvider(RedisConfiguration redisConfiguration) {\n \t\tthis.redisConfiguration = redisConfiguration;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "intellij",
        "codebuff"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "neo4j-neo4j",
    "error_id": "2246",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "33",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "33",
                    "column": "121",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "35",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "35",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "70",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "158",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "158",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2246/DynamicByteArray.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2246/DynamicByteArray.java\nindex 43efa05d1de..6879450c7f6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2246/DynamicByteArray.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2246/DynamicByteArray.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.internal.batchimport.cache;\n \n import java.nio.ByteBuffer;\n@@ -29,146 +30,145 @@ public class DynamicByteArray extends DynamicNumberArray<ByteArray> implements B\n     private final ByteBuffer defaultValueConvenienceBuffer;\n     private final MemoryTracker memoryTracker;\n \n-    public DynamicByteArray( NumberArrayFactory factory, long chunkSize, byte[] defaultValue, MemoryTracker memoryTracker )\n+    public DynamicByteArray(NumberArrayFactory factory, long chunkSize, byte[] defaultValue, MemoryTracker memoryTracker)\n     {\n-        super( factory, chunkSize, new ByteArray[0] );\n+        super(factory, chunkSize, new ByteArray[0]);\n         this.defaultValue = defaultValue;\n-        this.defaultValueConvenienceBuffer = ByteBuffer.wrap( defaultValue );\n+        this.defaultValueConvenienceBuffer = ByteBuffer.wrap(defaultValue);\n         this.memoryTracker = memoryTracker;\n     }\n \n     @Override\n-    public void swap( long fromIndex, long toIndex )\n+    public void swap(long fromIndex, long toIndex)\n     {\n-        ByteArray fromArray = at( fromIndex );\n-        ByteArray toArray = at( toIndex );\n+        ByteArray fromArray = at(fromIndex);\n+        ByteArray toArray = at(toIndex);\n \n         // Byte-wise swap\n-        for ( int i = 0; i < defaultValue.length; i++ )\n+        for (int i = 0; i < defaultValue.length; i++)\n         {\n-            byte intermediary = fromArray.getByte( fromIndex, i );\n-            fromArray.setByte( fromIndex, i, toArray.getByte( toIndex, i ) );\n-            toArray.setByte( toIndex, i, intermediary );\n+            byte intermediary = fromArray.getByte(fromIndex, i);\n+            fromArray.setByte(fromIndex, i, toArray.getByte(toIndex, i));\n+            toArray.setByte(toIndex, i, intermediary);\n         }\n     }\n \n     @Override\n-    public void get( long index, byte[] into )\n+    public void get(long index, byte[] into)\n     {\n-        ByteArray chunk = chunkOrNullAt( index );\n-        if ( chunk != null )\n+        ByteArray chunk = chunkOrNullAt(index);\n+        if (chunk != null)\n         {\n-            chunk.get( index, into );\n-        }\n-        else\n+            chunk.get(index, into);\n+        } else\n         {\n-            System.arraycopy( defaultValue, 0, into, 0, defaultValue.length );\n+            System.arraycopy(defaultValue, 0, into, 0, defaultValue.length);\n         }\n     }\n \n     @Override\n-    public byte getByte( long index, int offset )\n+    public byte getByte(long index, int offset)\n     {\n-        ByteArray chunk = chunkOrNullAt( index );\n-        return chunk != null ? chunk.getByte( index, offset ) : defaultValueConvenienceBuffer.get( offset );\n+        ByteArray chunk = chunkOrNullAt(index);\n+        return chunk != null ? chunk.getByte(index, offset) : defaultValueConvenienceBuffer.get(offset);\n     }\n \n     @Override\n-    public short getShort( long index, int offset )\n+    public short getShort(long index, int offset)\n     {\n-        ByteArray chunk = chunkOrNullAt( index );\n-        return chunk != null ? chunk.getShort( index, offset ) : defaultValueConvenienceBuffer.getShort( offset );\n+        ByteArray chunk = chunkOrNullAt(index);\n+        return chunk != null ? chunk.getShort(index, offset) : defaultValueConvenienceBuffer.getShort(offset);\n     }\n \n     @Override\n-    public int getInt( long index, int offset )\n+    public int getInt(long index, int offset)\n     {\n-        ByteArray chunk = chunkOrNullAt( index );\n-        return chunk != null ? chunk.getInt( index, offset ) : defaultValueConvenienceBuffer.getInt( offset );\n+        ByteArray chunk = chunkOrNullAt(index);\n+        return chunk != null ? chunk.getInt(index, offset) : defaultValueConvenienceBuffer.getInt(offset);\n     }\n \n     @Override\n-    public int get3ByteInt( long index, int offset )\n+    public int get3ByteInt(long index, int offset)\n     {\n-        ByteArray chunk = chunkOrNullAt( index );\n-        return chunk != null ? chunk.get3ByteInt( index, offset ) :\n-               HeapByteArray.get3ByteIntFromByteBuffer( defaultValueConvenienceBuffer, offset );\n+        ByteArray chunk = chunkOrNullAt(index);\n+        return chunk != null ? chunk.get3ByteInt(index, offset) :\n+          HeapByteArray.get3ByteIntFromByteBuffer(defaultValueConvenienceBuffer, offset);\n     }\n \n     @Override\n-    public long get5ByteLong( long index, int offset )\n+    public long get5ByteLong(long index, int offset)\n     {\n-        ByteArray chunk = chunkOrNullAt( index );\n-        return chunk != null ? chunk.get5ByteLong( index, offset ) :\n-               HeapByteArray.get5BLongFromByteBuffer( defaultValueConvenienceBuffer, offset );\n+        ByteArray chunk = chunkOrNullAt(index);\n+        return chunk != null ? chunk.get5ByteLong(index, offset) :\n+          HeapByteArray.get5BLongFromByteBuffer(defaultValueConvenienceBuffer, offset);\n     }\n \n     @Override\n-    public long get6ByteLong( long index, int offset )\n+    public long get6ByteLong(long index, int offset)\n     {\n-        ByteArray chunk = chunkOrNullAt( index );\n-        return chunk != null ? chunk.get6ByteLong( index, offset ) :\n-               HeapByteArray.get6BLongFromByteBuffer( defaultValueConvenienceBuffer, offset );\n+        ByteArray chunk = chunkOrNullAt(index);\n+        return chunk != null ? chunk.get6ByteLong(index, offset) :\n+          HeapByteArray.get6BLongFromByteBuffer(defaultValueConvenienceBuffer, offset);\n     }\n \n     @Override\n-    public long getLong( long index, int offset )\n+    public long getLong(long index, int offset)\n     {\n-        ByteArray chunk = chunkOrNullAt( index );\n-        return chunk != null ? chunk.getLong( index, offset ) : defaultValueConvenienceBuffer.getLong( offset );\n+        ByteArray chunk = chunkOrNullAt(index);\n+        return chunk != null ? chunk.getLong(index, offset) : defaultValueConvenienceBuffer.getLong(offset);\n     }\n \n     @Override\n-    public void set( long index, byte[] value )\n+    public void set(long index, byte[] value)\n     {\n-        at( index ).set( index, value );\n+        at(index).set(index, value);\n     }\n \n     @Override\n-    public void setByte( long index, int offset, byte value )\n+    public void setByte(long index, int offset, byte value)\n     {\n-        at( index ).setByte( index, offset, value );\n+        at(index).setByte(index, offset, value);\n     }\n \n     @Override\n-    public void setShort( long index, int offset, short value )\n+    public void setShort(long index, int offset, short value)\n     {\n-        at( index ).setShort( index, offset, value );\n+        at(index).setShort(index, offset, value);\n     }\n \n     @Override\n-    public void setInt( long index, int offset, int value )\n+    public void setInt(long index, int offset, int value)\n     {\n-        at( index ).setInt( index, offset, value );\n+        at(index).setInt(index, offset, value);\n     }\n \n     @Override\n-    public void set5ByteLong( long index, int offset, long value )\n+    public void set5ByteLong(long index, int offset, long value)\n     {\n-        at( index ).set5ByteLong( index, offset, value );\n+        at(index).set5ByteLong(index, offset, value);\n     }\n \n     @Override\n-    public void set6ByteLong( long index, int offset, long value )\n+    public void set6ByteLong(long index, int offset, long value)\n     {\n-        at( index ).set6ByteLong( index, offset, value );\n+        at(index).set6ByteLong(index, offset, value);\n     }\n \n     @Override\n-    public void setLong( long index, int offset, long value )\n+    public void setLong(long index, int offset, long value)\n     {\n-        at( index ).setLong( index, offset, value );\n+        at(index).setLong(index, offset, value);\n     }\n \n     @Override\n-    public void set3ByteInt( long index, int offset, int value )\n+    public void set3ByteInt(long index, int offset, int value)\n     {\n-        at( index ).set3ByteInt( index, offset, value );\n+        at(index).set3ByteInt(index, offset, value);\n     }\n \n     @Override\n-    protected ByteArray addChunk( long chunkSize, long base )\n+    protected ByteArray addChunk(long chunkSize, long base)\n     {\n-        return factory.newByteArray( chunkSize, defaultValue, base, memoryTracker );\n+        return factory.newByteArray(chunkSize, defaultValue, base, memoryTracker);\n     }\n }\n",
            "diff_size": 60
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
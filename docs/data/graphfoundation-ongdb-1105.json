{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1105",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "45",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1105/TemporalUtil.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1105/TemporalUtil.java\nindex ce991908847..b83d3f0dbec 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1105/TemporalUtil.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1105/TemporalUtil.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.values.utils;\n \n import java.time.OffsetTime;\n@@ -26,40 +27,42 @@ import static java.time.temporal.ChronoUnit.DAYS;\n \n public final class TemporalUtil\n {\n-    public static final long NANOS_PER_SECOND = 1_000_000_000L;\n-    public static final long AVG_NANOS_PER_MONTH = 2_629_746_000_000_000L;\n+  public static final long NANOS_PER_SECOND = 1_000_000_000L;\n+  public static final long AVG_NANOS_PER_MONTH = 2_629_746_000_000_000L;\n \n-    public static final long SECONDS_PER_DAY = DAYS.getDuration().getSeconds();\n-    public static final long AVG_SECONDS_PER_MONTH = 2_629_746;\n+  public static final long SECONDS_PER_DAY = DAYS.getDuration().getSeconds();\n+  public static final long AVG_SECONDS_PER_MONTH = 2_629_746;\n \n-    /** 30.4375 days = 30 days, 10 hours, 30 minutes */\n-    public static final double AVG_DAYS_PER_MONTH = 365.2425 / 12;\n+  /**\n+   * 30.4375 days = 30 days, 10 hours, 30 minutes\n+   */\n+  public static final double AVG_DAYS_PER_MONTH = 365.2425 / 12;\n \n-    private TemporalUtil()\n-    {\n-    }\n+  private TemporalUtil()\n+  {\n+  }\n \n-    public static OffsetTime truncateOffsetToMinutes( OffsetTime value )\n-    {\n-        int offsetMinutes = value.getOffset().getTotalSeconds() / 60;\n-        ZoneOffset truncatedOffset = ZoneOffset.ofTotalSeconds( offsetMinutes * 60 );\n-        return value.withOffsetSameInstant( truncatedOffset );\n-    }\n+  public static OffsetTime truncateOffsetToMinutes(OffsetTime value)\n+  {\n+    int offsetMinutes = value.getOffset().getTotalSeconds() / 60;\n+    ZoneOffset truncatedOffset = ZoneOffset.ofTotalSeconds(offsetMinutes * 60);\n+    return value.withOffsetSameInstant(truncatedOffset);\n+  }\n \n-    public static long nanosOfDayToUTC( long nanosOfDayLocal, int offsetSeconds )\n-    {\n-        return nanosOfDayLocal - offsetSeconds * NANOS_PER_SECOND;\n-    }\n+  public static long nanosOfDayToUTC(long nanosOfDayLocal, int offsetSeconds)\n+  {\n+    return nanosOfDayLocal - offsetSeconds * NANOS_PER_SECOND;\n+  }\n \n-    public static long nanosOfDayToLocal( long nanosOfDayUTC, int offsetSeconds )\n-    {\n-        return nanosOfDayUTC + (long) offsetSeconds * NANOS_PER_SECOND;\n-    }\n+  public static long nanosOfDayToLocal(long nanosOfDayUTC, int offsetSeconds)\n+  {\n+    return nanosOfDayUTC + (long) offsetSeconds * NANOS_PER_SECOND;\n+  }\n \n-    public static long getNanosOfDayUTC( OffsetTime value )\n-    {\n-        long secondsOfDayLocal = value.toLocalTime().toSecondOfDay();\n-        long secondsOffset = value.getOffset().getTotalSeconds();\n-        return (secondsOfDayLocal - secondsOffset) * NANOS_PER_SECOND + value.getNano();\n-    }\n+  public static long getNanosOfDayUTC(OffsetTime value)\n+  {\n+    long secondsOfDayLocal = value.toLocalTime().toSecondOfDay();\n+    long secondsOffset = value.getOffset().getTotalSeconds();\n+    return (secondsOfDayLocal - secondsOffset) * NANOS_PER_SECOND + value.getNano();\n+  }\n }\n",
            "diff_size": 32
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1105/TemporalUtil.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1105/TemporalUtil.java\nindex ce991908847..e1236d6b6cb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1105/TemporalUtil.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1105/TemporalUtil.java\n@@ -27,7 +27,8 @@ import static java.time.temporal.ChronoUnit.DAYS;\n public final class TemporalUtil\n {\n     public static final long NANOS_PER_SECOND = 1_000_000_000L;\n-    public static final long AVG_NANOS_PER_MONTH = 2_629_746_000_000_000L;\n+\n+public static final long AVG_NANOS_PER_MONTH = 2_629_746_000_000_000L;\n \n     public static final long SECONDS_PER_DAY = DAYS.getDuration().getSeconds();\n     public static final long AVG_SECONDS_PER_MONTH = 2_629_746;\n@@ -60,6 +61,6 @@ public final class TemporalUtil\n     {\n         long secondsOfDayLocal = value.toLocalTime().toSecondOfDay();\n         long secondsOffset = value.getOffset().getTotalSeconds();\n-        return (secondsOfDayLocal - secondsOffset) * NANOS_PER_SECOND + value.getNano();\n+        return ( secondsOfDayLocal - secondsOffset) * NANOS_PER_SECOND + value.getNano();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
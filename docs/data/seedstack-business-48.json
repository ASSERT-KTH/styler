{
    "project_name": "seedstack-business",
    "error_id": "48",
    "information": {
        "errors": [
            {
                "line": "8",
                "column": "1",
                "severity": "warning",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\npackage org.seedstack.business.internal.domain;\n\nimport static com.google.inject.util.Types.newParameterizedType;\n",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/48/DefaultFactoryStrategy.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/styler/48/DefaultFactoryStrategy.java\nindex fd72d039153..8cd8b272e1e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/48/DefaultFactoryStrategy.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/styler/48/DefaultFactoryStrategy.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.business.internal.domain;\n \n import static com.google.inject.util.Types.newParameterizedType;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/48/DefaultFactoryStrategy.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/intellij/48/DefaultFactoryStrategy.java\nindex fd72d039153..fae4e94b4a8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/48/DefaultFactoryStrategy.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/intellij/48/DefaultFactoryStrategy.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.business.internal.domain;\n \n import static com.google.inject.util.Types.newParameterizedType;\n@@ -65,7 +66,7 @@ class DefaultFactoryStrategy<T extends Factory<?>> implements BindingStrategy {\n      * @param bindGuiceFactory allow to control the binding of the Guice assisted factory\n      */\n     DefaultFactoryStrategy(Class<T> injecteeClass, Class<? extends T> injectedClass,\n-            Multimap<Type, Class<?>> producedTypeMap, boolean bindGuiceFactory) {\n+                           Multimap<Type, Class<?>> producedTypeMap, boolean bindGuiceFactory) {\n         this.injecteeClass = injecteeClass;\n         this.injectedClass = injectedClass;\n         this.typeVariables = producedTypeMap;\n",
            "diff_size": 2
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "8",
                    "column": "1",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "67",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 154).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "68",
                    "column": "5",
                    "severity": "warning",
                    "message": "'ctor def' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/48/DefaultFactoryStrategy.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/naturalize/48/DefaultFactoryStrategy.java\nindex fd72d039153..1c53e15589c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/48/DefaultFactoryStrategy.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/naturalize/48/DefaultFactoryStrategy.java\n@@ -64,9 +64,8 @@ class DefaultFactoryStrategy<T extends Factory<?>> implements BindingStrategy {\n      * @param producedTypeMap  the map of produced type and produced type implementation\n      * @param bindGuiceFactory allow to control the binding of the Guice assisted factory\n      */\n-    DefaultFactoryStrategy(Class<T> injecteeClass, Class<? extends T> injectedClass,\n-            Multimap<Type, Class<?>> producedTypeMap, boolean bindGuiceFactory) {\n-        this.injecteeClass = injecteeClass;\n+    DefaultFactoryStrategy(Class<T> injecteeClass, Class<? extends T> injectedClass, Multimap<Type, Class<?>> producedTypeMap, boolean bindGuiceFactory) {\n+    this.injecteeClass = injecteeClass;\n         this.injectedClass = injectedClass;\n         this.typeVariables = producedTypeMap;\n         this.bindGuiceFactory = bindGuiceFactory;\n@@ -93,4 +92,4 @@ class DefaultFactoryStrategy<T extends Factory<?>> implements BindingStrategy {\n             binder.install(guiceFactoryBuilder.build(guiceAssistedFactory));\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "8",
                    "column": "1",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "69",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 154).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "80",
                    "column": "9",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'for' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "81",
                    "column": "77",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 76, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "83",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 164).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "83",
                    "column": "77",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 76, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "85",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 170).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "85",
                    "column": "77",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 76, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "87",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 169).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "87",
                    "column": "77",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 76, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "88",
                    "column": "77",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 76, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "89",
                    "column": "77",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 76, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "90",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 126).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "90",
                    "column": "77",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 76, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "91",
                    "column": "73",
                    "severity": "warning",
                    "message": "'for rcurly' has incorrect indentation level 72, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "94",
                    "column": "9",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'if' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/48/DefaultFactoryStrategy.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/codebuff/48/DefaultFactoryStrategy.java\nindex fd72d039153..09436b7cf22 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/48/DefaultFactoryStrategy.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/codebuff/48/DefaultFactoryStrategy.java\n@@ -8,7 +8,6 @@\n package org.seedstack.business.internal.domain;\n \n import static com.google.inject.util.Types.newParameterizedType;\n-\n import com.google.common.collect.Multimap;\n import com.google.inject.Binder;\n import com.google.inject.Key;\n@@ -48,6 +47,8 @@ import org.seedstack.seed.core.internal.guice.GenericGuiceProvider;\n  * MyPolicyImpl.class}). <p> Notice that if {@code MyPolicyImpl} is qualified, the factory injectee\n  * point should be also qualified. </p>\n  */\n+\n+\n class DefaultFactoryStrategy<T extends Factory<?>> implements BindingStrategy {\n \n     private static final Class<?> FACTORY_CLASS = GenericGuiceFactory.class;\n@@ -64,8 +65,8 @@ class DefaultFactoryStrategy<T extends Factory<?>> implements BindingStrategy {\n      * @param producedTypeMap  the map of produced type and produced type implementation\n      * @param bindGuiceFactory allow to control the binding of the Guice assisted factory\n      */\n-    DefaultFactoryStrategy(Class<T> injecteeClass, Class<? extends T> injectedClass,\n-            Multimap<Type, Class<?>> producedTypeMap, boolean bindGuiceFactory) {\n+\n+    DefaultFactoryStrategy(Class<T> injecteeClass, Class<? extends T> injectedClass, Multimap<Type, Class<?>> producedTypeMap, boolean bindGuiceFactory) {\n         this.injecteeClass = injecteeClass;\n         this.injectedClass = injectedClass;\n         this.typeVariables = producedTypeMap;\n@@ -76,21 +77,23 @@ class DefaultFactoryStrategy<T extends Factory<?>> implements BindingStrategy {\n     @Override\n     public void resolve(Binder binder) {\n         FactoryModuleBuilder guiceFactoryBuilder = new FactoryModuleBuilder();\n-        for (Map.Entry<Type, Class<?>> classes : typeVariables.entries()) {\n-            Type producedType = classes.getKey();\n-            Class<? extends T> producedImplementationType = (Class<? extends T>) classes.getValue();\n+        for(Map.Entry<Type, Class<?>> classes :typeVariables.entries()) {\n+                                                                            Type producedType = classes.getKey();\n \n-            Key<T> key = BindingUtils.resolveKey(injecteeClass, producedImplementationType, producedType);\n-            Provider<T> provider = new GenericGuiceProvider<>(injectedClass, producedImplementationType);\n-            binder.requestInjection(provider);\n-            binder.bind(key).toProvider(provider);\n-            guiceFactoryBuilder.implement(key, injectedClass);\n-        }\n+                                                                            Class<? extends T> producedImplementationType = (Class<? extends T>) classes.getValue();\n+\n+                                                                            Key<T> key = BindingUtils.resolveKey(injecteeClass, producedImplementationType, producedType);\n+\n+                                                                            Provider<T> provider = new GenericGuiceProvider<>(injectedClass, producedImplementationType);\n+                                                                            binder.requestInjection(provider);\n+                                                                            binder.bind(key).toProvider(provider);\n+                                                                            guiceFactoryBuilder.implement(key, injectedClass);\n+                                                                        }\n \n         // Assisted factory should not be bound twice\n-        if (bindGuiceFactory) {\n+        if(bindGuiceFactory) {\n             TypeLiteral<?> guiceAssistedFactory = TypeLiteral.get(newParameterizedType(FACTORY_CLASS, injectedClass));\n             binder.install(guiceFactoryBuilder.build(guiceAssistedFactory));\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 19
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/48/DefaultFactoryStrategy.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/styler_random/48/DefaultFactoryStrategy.java\nindex fd72d039153..8cd8b272e1e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/48/DefaultFactoryStrategy.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/styler_random/48/DefaultFactoryStrategy.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.business.internal.domain;\n \n import static com.google.inject.util.Types.newParameterizedType;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/48/DefaultFactoryStrategy.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/styler_three_grams/48/DefaultFactoryStrategy.java\nindex fd72d039153..8cd8b272e1e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/48/DefaultFactoryStrategy.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/styler_three_grams/48/DefaultFactoryStrategy.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.business.internal.domain;\n \n import static com.google.inject.util.Types.newParameterizedType;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
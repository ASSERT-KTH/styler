{
    "project_name": "Activiti-Activiti",
    "error_id": "899",
    "information": {
        "errors": [
            {
                "line": "16",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * limitations under the License.\n */\npackage org.activiti.bpmn.model;\n\nimport java.util.ArrayList;\nimport java.util.List;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/899/Interface.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler/899/Interface.java\nindex 71438e71712..ea2b9a18099 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/899/Interface.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler/899/Interface.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.bpmn.model;\n \n import java.util.ArrayList;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/899/Interface.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/intellij/899/Interface.java\nindex 71438e71712..ec523655511 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/899/Interface.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/intellij/899/Interface.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.bpmn.model;\n \n import java.util.ArrayList;\n@@ -20,50 +21,50 @@ import java.util.List;\n \n public class Interface extends BaseElement {\n \n-  protected String name;\n-  protected String implementationRef;\n-  protected List<Operation> operations = new ArrayList<Operation>();\n+    protected String name;\n+    protected String implementationRef;\n+    protected List<Operation> operations = new ArrayList<Operation>();\n \n-  public String getName() {\n-    return name;\n-  }\n+    public String getName() {\n+        return name;\n+    }\n \n-  public void setName(String name) {\n-    this.name = name;\n-  }\n+    public void setName(String name) {\n+        this.name = name;\n+    }\n \n-  public String getImplementationRef() {\n-    return implementationRef;\n-  }\n+    public String getImplementationRef() {\n+        return implementationRef;\n+    }\n \n-  public void setImplementationRef(String implementationRef) {\n-    this.implementationRef = implementationRef;\n-  }\n+    public void setImplementationRef(String implementationRef) {\n+        this.implementationRef = implementationRef;\n+    }\n \n-  public List<Operation> getOperations() {\n-    return operations;\n-  }\n+    public List<Operation> getOperations() {\n+        return operations;\n+    }\n \n-  public void setOperations(List<Operation> operations) {\n-    this.operations = operations;\n-  }\n+    public void setOperations(List<Operation> operations) {\n+        this.operations = operations;\n+    }\n \n-  public Interface clone() {\n-    Interface clone = new Interface();\n-    clone.setValues(this);\n-    return clone;\n-  }\n+    public Interface clone() {\n+        Interface clone = new Interface();\n+        clone.setValues(this);\n+        return clone;\n+    }\n \n-  public void setValues(Interface otherElement) {\n-    super.setValues(otherElement);\n-    setName(otherElement.getName());\n-    setImplementationRef(otherElement.getImplementationRef());\n+    public void setValues(Interface otherElement) {\n+        super.setValues(otherElement);\n+        setName(otherElement.getName());\n+        setImplementationRef(otherElement.getImplementationRef());\n \n-    operations = new ArrayList<Operation>();\n-    if (otherElement.getOperations() != null && !otherElement.getOperations().isEmpty()) {\n-      for (Operation operation : otherElement.getOperations()) {\n-        operations.add(operation.clone());\n-      }\n+        operations = new ArrayList<Operation>();\n+        if (otherElement.getOperations() != null && !otherElement.getOperations().isEmpty()) {\n+            for (Operation operation : otherElement.getOperations()) {\n+                operations.add(operation.clone());\n+            }\n+        }\n     }\n-  }\n }\n",
            "diff_size": 38
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "16",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "22",
                    "severity": "error",
                    "message": "'CLASS_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'METHOD_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/899/Interface.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/codebuff/899/Interface.java\nindex 71438e71712..3651f5471d5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/899/Interface.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/codebuff/899/Interface.java\n@@ -18,12 +18,12 @@ package org.activiti.bpmn.model;\n import java.util.ArrayList;\n import java.util.List;\n \n+\n public class Interface extends BaseElement {\n \n   protected String name;\n   protected String implementationRef;\n   protected List<Operation> operations = new ArrayList<Operation>();\n-\n   public String getName() {\n     return name;\n   }\n@@ -58,12 +58,11 @@ public class Interface extends BaseElement {\n     super.setValues(otherElement);\n     setName(otherElement.getName());\n     setImplementationRef(otherElement.getImplementationRef());\n-\n     operations = new ArrayList<Operation>();\n     if (otherElement.getOperations() != null && !otherElement.getOperations().isEmpty()) {\n-      for (Operation operation : otherElement.getOperations()) {\n-        operations.add(operation.clone());\n-      }\n+        for (Operation operation : otherElement.getOperations()) {\n+            operations.add(operation.clone());\n+        }\n     }\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/899/Interface.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_random/899/Interface.java\nindex 71438e71712..ea2b9a18099 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/899/Interface.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_random/899/Interface.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.bpmn.model;\n \n import java.util.ArrayList;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/899/Interface.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_three_grams/899/Interface.java\nindex 71438e71712..ea2b9a18099 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/899/Interface.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_three_grams/899/Interface.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.bpmn.model;\n \n import java.util.ArrayList;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
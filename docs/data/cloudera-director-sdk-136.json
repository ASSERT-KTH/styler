{
    "project_name": "cloudera-director-sdk",
    "error_id": "136",
    "information": {
        "errors": [
            {
                "line": "0",
                "severity": "error",
                "message": "Required pattern 'Cloudera copyright header' missing in file.",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
            }
        ]
    },
    "source_code": "// Licensed to Cloudera, Inc. under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/errored/1/136/Environment.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/intellij/136/Environment.java\nindex 45113450c35..824bee1baf4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/errored/1/136/Environment.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/intellij/136/Environment.java\n@@ -26,7 +26,9 @@ public class Environment {\n   private String name;\n   /* IaaS provider config */\n   private InstanceProviderConfig provider;\n-  public Environment() { }\n+\n+  public Environment() {\n+  }\n \n   private Environment(SshCredentials credentials, String name, InstanceProviderConfig provider) {\n     this.credentials = credentials;\n@@ -71,14 +73,16 @@ public class Environment {\n \n   public EnvironmentBuilder toBuilder() {\n     return builder()\n-      .credentials(credentials)\n-      .name(name)\n-      .provider(provider)\n-      ;\n+        .credentials(credentials)\n+        .name(name)\n+        .provider(provider)\n+        ;\n   }\n+\n   public SshCredentials getCredentials() {\n     return credentials;\n   }\n+\n   public void setCredentials(SshCredentials credentials) {\n     this.credentials = credentials;\n   }\n@@ -86,6 +90,7 @@ public class Environment {\n   public String getName() {\n     return name;\n   }\n+\n   public void setName(String name) {\n     this.name = name;\n   }\n@@ -93,26 +98,37 @@ public class Environment {\n   public InstanceProviderConfig getProvider() {\n     return provider;\n   }\n+\n   public void setProvider(InstanceProviderConfig provider) {\n     this.provider = provider;\n   }\n \n   @Override\n   public boolean equals(Object o) {\n-    if (this == o) return true;\n-    if (o == null || getClass() != o.getClass()) return false;\n+    if (this == o) {\n+      return true;\n+    }\n+    if (o == null || getClass() != o.getClass()) {\n+      return false;\n+    }\n \n     Environment other = (Environment) o; // NOPMD\n \n     if (credentials != null ?\n         !credentials.equals(other.credentials) :\n-        other.credentials != null) return false;\n+        other.credentials != null) {\n+      return false;\n+    }\n     if (name != null ?\n         !name.equals(other.name) :\n-        other.name != null) return false;\n+        other.name != null) {\n+      return false;\n+    }\n     if (provider != null ?\n         !provider.equals(other.provider) :\n-        other.provider != null) return false;\n+        other.provider != null) {\n+      return false;\n+    }\n     return true;\n   }\n \n@@ -126,7 +142,7 @@ public class Environment {\n   }\n \n   @Override\n-  public String toString()  {\n+  public String toString() {\n     StringBuilder sb = new StringBuilder();\n     String newLine = System.getProperty(\"line.separator\");\n     sb.append(\"class Environment {\" + newLine);\n",
            "diff_size": 27
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                },
                {
                    "line": "95",
                    "column": "29",
                    "severity": "warning",
                    "message": "'?' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "97",
                    "column": "18",
                    "severity": "warning",
                    "message": "'?' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "99",
                    "column": "22",
                    "severity": "warning",
                    "message": "'?' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/errored/1/136/Environment.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/naturalize/136/Environment.java\nindex 45113450c35..142aa213a51 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/errored/1/136/Environment.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/naturalize/136/Environment.java\n@@ -1,24 +1,8 @@\n-// Licensed to Cloudera, Inc. under one\n-// or more contributor license agreements.  See the NOTICE file\n-// distributed with this work for additional information\n-// regarding copyright ownership.  Cloudera, Inc. licenses this file\n-// to you under the Apache License, Version 2.0 (the\n-// \"License\"); you may not use this file except in compliance\n-// with the License.  You may obtain a copy of the License at\n-//\n-//     http://www.apache.org/licenses/LICENSE-2.0\n-//\n-// Unless required by applicable law or agreed to in writing, software\n-// distributed under the License is distributed on an \"AS IS\" BASIS,\n-// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n-// See the License for the specific language governing permissions and\n-// limitations under the License.\n-\n+// Licensed to Cloudera, Inc.\n // Note: This file is auto generated. Do not edit manually.\n \n package com.cloudera.director.client.v9.model;\n \n-\n public class Environment {\n   /* SSH credentials */\n   private SshCredentials credentials;\n@@ -26,7 +10,8 @@ public class Environment {\n   private String name;\n   /* IaaS provider config */\n   private InstanceProviderConfig provider;\n-  public Environment() { }\n+\n+public Environment() { }\n \n   private Environment(SshCredentials credentials, String name, InstanceProviderConfig provider) {\n     this.credentials = credentials;\n@@ -45,7 +30,8 @@ public class Environment {\n   }\n \n   public static class EnvironmentBuilder {\n-    private SshCredentials credentials = null;\n+\n+  private SshCredentials credentials = null;\n     private String name = null;\n     private InstanceProviderConfig provider = null;\n \n@@ -70,13 +56,12 @@ public class Environment {\n   }\n \n   public EnvironmentBuilder toBuilder() {\n-    return builder()\n-      .credentials(credentials)\n+    return builder().credentials(credentials)\n       .name(name)\n-      .provider(provider)\n-      ;\n+      .provider(provider);\n   }\n-  public SshCredentials getCredentials() {\n+\n+public SshCredentials getCredentials() {\n     return credentials;\n   }\n   public void setCredentials(SshCredentials credentials) {\n@@ -100,19 +85,18 @@ public class Environment {\n   @Override\n   public boolean equals(Object o) {\n     if (this == o) return true;\n-    if (o == null || getClass() != o.getClass()) return false;\n-\n-    Environment other = (Environment) o; // NOPMD\n-\n-    if (credentials != null ?\n-        !credentials.equals(other.credentials) :\n-        other.credentials != null) return false;\n-    if (name != null ?\n-        !name.equals(other.name) :\n-        other.name != null) return false;\n-    if (provider != null ?\n-        !provider.equals(other.provider) :\n-        other.provider != null) return false;\n+    if (o == null ||\n+getClass() != o.getClass()) return false;\n+\n+    Environment other = (Environment) o;\n+\n+// NOPMD\n+\n+    if (credentials != null ?!credentials.equals(other.credentials) : other.credentials != null) return false;\n+\n+if (name != null ?!name.equals(other.name) : other.name != null) return false;\n+\n+if (provider != null ?!provider.equals(other.provider) : other.provider != null) return false;\n     return true;\n   }\n \n@@ -126,7 +110,7 @@ public class Environment {\n   }\n \n   @Override\n-  public String toString()  {\n+  public String toString() {\n     StringBuilder sb = new StringBuilder();\n     String newLine = System.getProperty(\"line.separator\");\n     sb.append(\"class Environment {\" + newLine);\n@@ -136,5 +120,4 @@ public class Environment {\n     sb.append(\"}\" + newLine);\n     return sb.toString();\n   }\n-}\n-\n+}\n\\ No newline at end of file\n",
            "diff_size": 43
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                },
                {
                    "line": "33",
                    "column": "24",
                    "severity": "warning",
                    "message": "'{' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "33",
                    "column": "25",
                    "severity": "warning",
                    "message": "'}' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "37",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 127).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "39",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "115",
                    "column": "18",
                    "severity": "warning",
                    "message": "'||' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "118",
                    "column": "37",
                    "severity": "warning",
                    "message": "'typecast' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "120",
                    "column": "28",
                    "severity": "warning",
                    "message": "'?' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "120",
                    "column": "28",
                    "severity": "warning",
                    "message": "'?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "120",
                    "column": "67",
                    "severity": "warning",
                    "message": "':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "121",
                    "column": "21",
                    "severity": "warning",
                    "message": "'?' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "121",
                    "column": "21",
                    "severity": "warning",
                    "message": "'?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "121",
                    "column": "46",
                    "severity": "warning",
                    "message": "':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "122",
                    "column": "25",
                    "severity": "warning",
                    "message": "'?' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "122",
                    "column": "25",
                    "severity": "warning",
                    "message": "'?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "122",
                    "column": "58",
                    "severity": "warning",
                    "message": "':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "130",
                    "column": "16",
                    "severity": "warning",
                    "message": "'*' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "130",
                    "column": "16",
                    "severity": "warning",
                    "message": "'*' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "130",
                    "column": "46",
                    "severity": "warning",
                    "message": "'?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "130",
                    "column": "70",
                    "severity": "warning",
                    "message": "':' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "130",
                    "column": "70",
                    "severity": "warning",
                    "message": "':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "131",
                    "column": "16",
                    "severity": "warning",
                    "message": "'*' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "131",
                    "column": "16",
                    "severity": "warning",
                    "message": "'*' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "131",
                    "column": "39",
                    "severity": "warning",
                    "message": "'?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "131",
                    "column": "56",
                    "severity": "warning",
                    "message": "':' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "131",
                    "column": "56",
                    "severity": "warning",
                    "message": "':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "132",
                    "column": "16",
                    "severity": "warning",
                    "message": "'*' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "132",
                    "column": "16",
                    "severity": "warning",
                    "message": "'*' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "132",
                    "column": "43",
                    "severity": "warning",
                    "message": "'?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "132",
                    "column": "64",
                    "severity": "warning",
                    "message": "':' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "132",
                    "column": "64",
                    "severity": "warning",
                    "message": "':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/errored/1/136/Environment.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/codebuff/136/Environment.java\nindex 45113450c35..6fbd31ff681 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/errored/1/136/Environment.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/codebuff/136/Environment.java\n@@ -18,35 +18,43 @@\n \n package com.cloudera.director.client.v9.model;\n \n-\n public class Environment {\n   /* SSH credentials */\n+\n   private SshCredentials credentials;\n   /* Environment name */\n+\n   private String name;\n   /* IaaS provider config */\n+\n   private InstanceProviderConfig provider;\n-  public Environment() { }\n+\n+\n+  public Environment() {}\n+\n \n   private Environment(SshCredentials credentials, String name, InstanceProviderConfig provider) {\n-    this.credentials = credentials;\n-    this.name = name;\n-    this.provider = provider;\n-  }\n+                                                                                                this.credentials = credentials;\n+                                                                                                this.name = name;\n+                                                                                                this.provider = provider;\n+                         }\n \n   private Environment(EnvironmentBuilder builder) {\n-    this.credentials = builder.credentials;\n-    this.name = builder.name;\n-    this.provider = builder.provider;\n-  }\n+                                                  this.credentials = builder.credentials;\n+                                                  this.name = builder.name;\n+                                                  this.provider = builder.provider;\n+                         }\n \n   public static EnvironmentBuilder builder() {\n     return new EnvironmentBuilder();\n   }\n \n   public static class EnvironmentBuilder {\n+\n     private SshCredentials credentials = null;\n+\n     private String name = null;\n+\n     private InstanceProviderConfig provider = null;\n \n     public EnvironmentBuilder credentials(SshCredentials credentials) {\n@@ -73,12 +81,13 @@ public class Environment {\n     return builder()\n       .credentials(credentials)\n       .name(name)\n-      .provider(provider)\n-      ;\n+      .provider(provider);\n   }\n+\n   public SshCredentials getCredentials() {\n     return credentials;\n   }\n+\n   public void setCredentials(SshCredentials credentials) {\n     this.credentials = credentials;\n   }\n@@ -86,6 +95,7 @@ public class Environment {\n   public String getName() {\n     return name;\n   }\n+\n   public void setName(String name) {\n     this.name = name;\n   }\n@@ -93,48 +103,50 @@ public class Environment {\n   public InstanceProviderConfig getProvider() {\n     return provider;\n   }\n+\n   public void setProvider(InstanceProviderConfig provider) {\n     this.provider = provider;\n   }\n \n+\n   @Override\n   public boolean equals(Object o) {\n     if (this == o) return true;\n-    if (o == null || getClass() != o.getClass()) return false;\n-\n-    Environment other = (Environment) o; // NOPMD\n-\n-    if (credentials != null ?\n-        !credentials.equals(other.credentials) :\n-        other.credentials != null) return false;\n-    if (name != null ?\n-        !name.equals(other.name) :\n-        other.name != null) return false;\n-    if (provider != null ?\n-        !provider.equals(other.provider) :\n-        other.provider != null) return false;\n+    if (o == null||\n+        getClass() != o.getClass()) return false;\n+\n+    Environment other = (Environment)o; // NOPMD\n+\n+    if (credentials != null?!credentials.equals(other.credentials): other.credentials != null) return false;\n+    if (name != null?!name.equals(other.name): other.name != null) return false;\n+    if (provider != null?!provider.equals(other.provider): other.provider != null) return false;\n     return true;\n   }\n \n+\n   @Override\n   public int hashCode() {\n     int result = 0;\n-    result = 31 * result + (credentials != null ? credentials.hashCode() : 0);\n-    result = 31 * result + (name != null ? name.hashCode() : 0);\n-    result = 31 * result + (provider != null ? provider.hashCode() : 0);\n+    result = 31*result + (credentials != null? credentials.hashCode():0);\n+    result = 31*result + (name != null? name.hashCode():0);\n+    result = 31*result + (provider != null? provider.hashCode():0);\n     return result;\n   }\n \n+\n   @Override\n-  public String toString()  {\n+  public String toString() {\n     StringBuilder sb = new StringBuilder();\n+\n     String newLine = System.getProperty(\"line.separator\");\n     sb.append(\"class Environment {\" + newLine);\n-    sb.append(\"  credentials: \").append(credentials).append(newLine);\n-    sb.append(\"  name: \").append(name).append(newLine);\n-    sb.append(\"  provider: \").append(provider).append(newLine);\n+    sb.append(\"  credentials: \")\n+      .append(credentials).append(newLine);\n+    sb.append(\"  name: \")\n+      .append(name).append(newLine);\n+    sb.append(\"  provider: \")\n+      .append(provider).append(newLine);\n     sb.append(\"}\" + newLine);\n     return sb.toString();\n   }\n-}\n-\n+}\n\\ No newline at end of file\n",
            "diff_size": 54
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
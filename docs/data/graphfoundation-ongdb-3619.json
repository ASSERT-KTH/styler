{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3619",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "36",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "107",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "60",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "75",
                    "column": "65",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3619/HazelcastDiscoveryServiceFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3619/HazelcastDiscoveryServiceFactory.java\nindex 7fb1b9f533b..72eabcc595a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3619/HazelcastDiscoveryServiceFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3619/HazelcastDiscoveryServiceFactory.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering.discovery;\n \n import com.hazelcast.spi.properties.GroupProperty;\n@@ -31,56 +32,55 @@ import org.neo4j.scheduler.JobScheduler;\n \n public class HazelcastDiscoveryServiceFactory implements DiscoveryServiceFactory\n {\n-    @Override\n-    public CoreTopologyService coreTopologyService( Config config, MemberId myself, JobScheduler jobScheduler,\n-            LogProvider logProvider, LogProvider userLogProvider, HostnameResolver hostnameResolver,\n-            TopologyServiceRetryStrategy topologyServiceRetryStrategy )\n-    {\n-        configureHazelcast( config, logProvider );\n-        return new HazelcastCoreTopologyService( config, myself, jobScheduler, logProvider, userLogProvider, hostnameResolver,\n-                topologyServiceRetryStrategy );\n-    }\n+  @Override\n+  public CoreTopologyService coreTopologyService(Config config, MemberId myself, JobScheduler jobScheduler,\n+                                                 LogProvider logProvider, LogProvider userLogProvider, HostnameResolver hostnameResolver,\n+                                                 TopologyServiceRetryStrategy topologyServiceRetryStrategy)\n+  {\n+    configureHazelcast(config, logProvider);\n+    return new HazelcastCoreTopologyService(config, myself, jobScheduler, logProvider, userLogProvider, hostnameResolver,\n+        topologyServiceRetryStrategy);\n+  }\n+\n+  @Override\n+  public TopologyService topologyService(Config config, LogProvider logProvider,\n+                                         JobScheduler jobScheduler, MemberId myself, HostnameResolver hostnameResolver,\n+                                         TopologyServiceRetryStrategy topologyServiceRetryStrategy)\n+  {\n+    configureHazelcast(config, logProvider);\n+    return new HazelcastClient(new HazelcastClientConnector(config, logProvider, hostnameResolver), jobScheduler,\n+        logProvider, config, myself, topologyServiceRetryStrategy);\n+  }\n \n-    @Override\n-    public TopologyService topologyService( Config config, LogProvider logProvider,\n-                                            JobScheduler jobScheduler, MemberId myself, HostnameResolver hostnameResolver,\n-                                            TopologyServiceRetryStrategy topologyServiceRetryStrategy )\n+  public static void configureHazelcast(Config config, LogProvider logProvider)\n+  {\n+    // tell hazelcast to not phone home\n+    GroupProperty.PHONE_HOME_ENABLED.setSystemProperty(\"false\");\n+    GroupProperty.SOCKET_BIND_ANY.setSystemProperty(\"false\");\n+    GroupProperty.SHUTDOWNHOOK_ENABLED.setSystemProperty(\"false\");\n+\n+    String licenseKey = config.get(CausalClusteringSettings.hazelcast_license_key);\n+    if (licenseKey != null)\n     {\n-        configureHazelcast( config, logProvider );\n-        return new HazelcastClient( new HazelcastClientConnector( config, logProvider, hostnameResolver ), jobScheduler,\n-                logProvider, config, myself, topologyServiceRetryStrategy );\n+      GroupProperty.ENTERPRISE_LICENSE_KEY.setSystemProperty(licenseKey);\n     }\n \n-    public static void configureHazelcast( Config config, LogProvider logProvider )\n+    // Make hazelcast quiet\n+    if (config.get(CausalClusteringSettings.disable_middleware_logging))\n     {\n-        // tell hazelcast to not phone home\n-        GroupProperty.PHONE_HOME_ENABLED.setSystemProperty( \"false\" );\n-        GroupProperty.SOCKET_BIND_ANY.setSystemProperty( \"false\" );\n-        GroupProperty.SHUTDOWNHOOK_ENABLED.setSystemProperty( \"false\" );\n-\n-        String licenseKey = config.get( CausalClusteringSettings.hazelcast_license_key );\n-        if ( licenseKey != null )\n-        {\n-            GroupProperty.ENTERPRISE_LICENSE_KEY.setSystemProperty( licenseKey );\n-        }\n-\n-        // Make hazelcast quiet\n-        if ( config.get( CausalClusteringSettings.disable_middleware_logging ) )\n-        {\n-            // This is clunky, but the documented programmatic way doesn't seem to work\n-            GroupProperty.LOGGING_TYPE.setSystemProperty( \"none\" );\n-        }\n-        else\n-        {\n-            HazelcastLogging.enable( logProvider, new HazelcastLogLevel( config ) );\n-        }\n+      // This is clunky, but the documented programmatic way doesn't seem to work\n+      GroupProperty.LOGGING_TYPE.setSystemProperty(\"none\");\n+    } else\n+    {\n+      HazelcastLogging.enable(logProvider, new HazelcastLogLevel(config));\n     }\n+  }\n \n-    private static class HazelcastLogLevel extends Level\n+  private static class HazelcastLogLevel extends Level\n+  {\n+    HazelcastLogLevel(Config config)\n     {\n-        HazelcastLogLevel( Config config )\n-        {\n-            super( \"HAZELCAST\", config.get( CausalClusteringSettings.middleware_logging_level ) );\n-        }\n+      super(\"HAZELCAST\", config.get(CausalClusteringSettings.middleware_logging_level));\n     }\n+  }\n }\n",
            "diff_size": 64
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "45",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 162).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3619/HazelcastDiscoveryServiceFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3619/HazelcastDiscoveryServiceFactory.java\nindex 7fb1b9f533b..5559d53bff0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3619/HazelcastDiscoveryServiceFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3619/HazelcastDiscoveryServiceFactory.java\n@@ -42,10 +42,9 @@ public class HazelcastDiscoveryServiceFactory implements DiscoveryServiceFactory\n     }\n \n     @Override\n-    public TopologyService topologyService( Config config, LogProvider logProvider,\n-                                            JobScheduler jobScheduler, MemberId myself, HostnameResolver hostnameResolver,\n+    public TopologyService topologyService( Config config, LogProvider logProvider, JobScheduler jobScheduler, MemberId myself, HostnameResolver hostnameResolver,\n                                             TopologyServiceRetryStrategy topologyServiceRetryStrategy )\n-    {\n+{\n         configureHazelcast( config, logProvider );\n         return new HazelcastClient( new HazelcastClientConnector( config, logProvider, hostnameResolver ), jobScheduler,\n                 logProvider, config, myself, topologyServiceRetryStrategy );\n@@ -57,8 +56,7 @@ public class HazelcastDiscoveryServiceFactory implements DiscoveryServiceFactory\n         GroupProperty.PHONE_HOME_ENABLED.setSystemProperty( \"false\" );\n         GroupProperty.SOCKET_BIND_ANY.setSystemProperty( \"false\" );\n         GroupProperty.SHUTDOWNHOOK_ENABLED.setSystemProperty( \"false\" );\n-\n-        String licenseKey = config.get( CausalClusteringSettings.hazelcast_license_key );\n+String licenseKey = config.get( CausalClusteringSettings.hazelcast_license_key );\n         if ( licenseKey != null )\n         {\n             GroupProperty.ENTERPRISE_LICENSE_KEY.setSystemProperty( licenseKey );\n@@ -83,4 +81,4 @@ public class HazelcastDiscoveryServiceFactory implements DiscoveryServiceFactory\n             super( \"HAZELCAST\", config.get( CausalClusteringSettings.middleware_logging_level ) );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "33",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 259).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "40",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 222).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "43",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 181).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3619/HazelcastDiscoveryServiceFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/3619/HazelcastDiscoveryServiceFactory.java\nindex 7fb1b9f533b..8965e030c2d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3619/HazelcastDiscoveryServiceFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/3619/HazelcastDiscoveryServiceFactory.java\n@@ -20,9 +20,7 @@\n package org.neo4j.causalclustering.discovery;\n \n import com.hazelcast.spi.properties.GroupProperty;\n-\n import java.util.logging.Level;\n-\n import org.neo4j.causalclustering.core.CausalClusteringSettings;\n import org.neo4j.causalclustering.identity.MemberId;\n import org.neo4j.kernel.configuration.Config;\n@@ -32,23 +30,17 @@ import org.neo4j.scheduler.JobScheduler;\n public class HazelcastDiscoveryServiceFactory implements DiscoveryServiceFactory\n {\n     @Override\n-    public CoreTopologyService coreTopologyService( Config config, MemberId myself, JobScheduler jobScheduler,\n-            LogProvider logProvider, LogProvider userLogProvider, HostnameResolver hostnameResolver,\n-            TopologyServiceRetryStrategy topologyServiceRetryStrategy )\n+    public CoreTopologyService coreTopologyService( Config config, MemberId myself, JobScheduler jobScheduler, LogProvider logProvider, LogProvider userLogProvider, HostnameResolver hostnameResolver, TopologyServiceRetryStrategy topologyServiceRetryStrategy )\n     {\n         configureHazelcast( config, logProvider );\n-        return new HazelcastCoreTopologyService( config, myself, jobScheduler, logProvider, userLogProvider, hostnameResolver,\n-                topologyServiceRetryStrategy );\n+        return new HazelcastCoreTopologyService( config, myself, jobScheduler, logProvider, userLogProvider, hostnameResolver, topologyServiceRetryStrategy );\n     }\n \n     @Override\n-    public TopologyService topologyService( Config config, LogProvider logProvider,\n-                                            JobScheduler jobScheduler, MemberId myself, HostnameResolver hostnameResolver,\n-                                            TopologyServiceRetryStrategy topologyServiceRetryStrategy )\n+    public TopologyService topologyService( Config config, LogProvider logProvider, JobScheduler jobScheduler, MemberId myself, HostnameResolver hostnameResolver, TopologyServiceRetryStrategy topologyServiceRetryStrategy )\n     {\n         configureHazelcast( config, logProvider );\n-        return new HazelcastClient( new HazelcastClientConnector( config, logProvider, hostnameResolver ), jobScheduler,\n-                logProvider, config, myself, topologyServiceRetryStrategy );\n+        return new HazelcastClient( new HazelcastClientConnector( config, logProvider, hostnameResolver ), jobScheduler, logProvider, config, myself, topologyServiceRetryStrategy );\n     }\n \n     public static void configureHazelcast( Config config, LogProvider logProvider )\n@@ -57,7 +49,6 @@ public class HazelcastDiscoveryServiceFactory implements DiscoveryServiceFactory\n         GroupProperty.PHONE_HOME_ENABLED.setSystemProperty( \"false\" );\n         GroupProperty.SOCKET_BIND_ANY.setSystemProperty( \"false\" );\n         GroupProperty.SHUTDOWNHOOK_ENABLED.setSystemProperty( \"false\" );\n-\n         String licenseKey = config.get( CausalClusteringSettings.hazelcast_license_key );\n         if ( licenseKey != null )\n         {\n@@ -65,6 +56,7 @@ public class HazelcastDiscoveryServiceFactory implements DiscoveryServiceFactory\n         }\n \n         // Make hazelcast quiet\n+\n         if ( config.get( CausalClusteringSettings.disable_middleware_logging ) )\n         {\n             // This is clunky, but the documented programmatic way doesn't seem to work\n@@ -83,4 +75,4 @@ public class HazelcastDiscoveryServiceFactory implements DiscoveryServiceFactory\n             super( \"HAZELCAST\", config.get( CausalClusteringSettings.middleware_logging_level ) );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 15
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
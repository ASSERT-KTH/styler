{
    "project_name": "CONNECT-Solution-CONNECT",
    "error_id": "766",
    "information": {
        "errors": [
            {
                "line": "27",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\npackage gov.hhs.fha.nhinc.docquery.orchestration;\n\nimport gov.hhs.fha.nhinc.common.nhinccommon.HomeCommunityType;\nimport gov.hhs.fha.nhinc.connectmgr.NhinEndpointManager;",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "28",
                    "severity": "error",
                    "message": "'import' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/766/OrchestrationContextFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler/766/OrchestrationContextFactory.java\nindex bfb85929251..19bebaaaccf 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/766/OrchestrationContextFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler/766/OrchestrationContextFactory.java\n@@ -25,7 +25,6 @@\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n package gov.hhs.fha.nhinc.docquery.orchestration;\n-\n import gov.hhs.fha.nhinc.common.nhinccommon.HomeCommunityType;\n import gov.hhs.fha.nhinc.connectmgr.NhinEndpointManager;\n import gov.hhs.fha.nhinc.docquery.entity.OutboundDocQueryFactory;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/766/OrchestrationContextFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/intellij/766/OrchestrationContextFactory.java\nindex bfb85929251..54f18c1c9df 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/766/OrchestrationContextFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/intellij/766/OrchestrationContextFactory.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.docquery.orchestration;\n \n import gov.hhs.fha.nhinc.common.nhinccommon.HomeCommunityType;\n@@ -35,38 +36,39 @@ import gov.hhs.fha.nhinc.orchestration.OrchestrationContextBuilder;\n \n /**\n  * @author zmelnick\n- *\n  */\n public final class OrchestrationContextFactory extends AbstractOrchestrationContextFactory {\n \n-    //CHECKSTYLE:OFF\n-    private static OrchestrationContextFactory INSTANCE = new OrchestrationContextFactory();\n-    //CHECKSTYLE:ON\n+  //CHECKSTYLE:OFF\n+  private static OrchestrationContextFactory INSTANCE = new OrchestrationContextFactory();\n+  //CHECKSTYLE:ON\n \n-    private OrchestrationContextFactory() {\n-    }\n+  private OrchestrationContextFactory() {\n+  }\n \n-    /**\n-     * This method returns DocQueryInstance of Orchestartion.\n-     * @return OrchestrationContextFactory for DocQuery.\n-     */\n-    public static OrchestrationContextFactory getInstance() {\n-        return INSTANCE;\n-    }\n+  /**\n+   * This method returns DocQueryInstance of Orchestartion.\n+   *\n+   * @return OrchestrationContextFactory for DocQuery.\n+   */\n+  public static OrchestrationContextFactory getInstance() {\n+    return INSTANCE;\n+  }\n \n-    /**\n-     * This method creates OrchestrationContextBuilder based on g0 or g1 apiLevel.\n-     * @param homeCommunityType The homeCommunityId.\n-     * @param serviceName The serviceName is DocQuery.\n-     * @return OrchestrationContextFactory for DocQuery.\n-     */\n-    @Override\n-    public OrchestrationContextBuilder getBuilder(HomeCommunityType homeCommunityType,\n-            NhincConstants.NHIN_SERVICE_NAMES serviceName) {\n-        NhinEndpointManager nem = new NhinEndpointManager();\n-        NhincConstants.GATEWAY_API_LEVEL apiLevel = nem.getApiVersion(homeCommunityType.getHomeCommunityId(),\n-                serviceName);\n-        return OutboundDocQueryFactory.getInstance().createOrchestrationContextBuilder(apiLevel);\n-    }\n+  /**\n+   * This method creates OrchestrationContextBuilder based on g0 or g1 apiLevel.\n+   *\n+   * @param homeCommunityType The homeCommunityId.\n+   * @param serviceName       The serviceName is DocQuery.\n+   * @return OrchestrationContextFactory for DocQuery.\n+   */\n+  @Override\n+  public OrchestrationContextBuilder getBuilder(HomeCommunityType homeCommunityType,\n+                                                NhincConstants.NHIN_SERVICE_NAMES serviceName) {\n+    NhinEndpointManager nem = new NhinEndpointManager();\n+    NhincConstants.GATEWAY_API_LEVEL apiLevel = nem.getApiVersion(homeCommunityType.getHomeCommunityId(),\n+        serviceName);\n+    return OutboundDocQueryFactory.getInstance().createOrchestrationContextBuilder(apiLevel);\n+  }\n \n }\n",
            "diff_size": 30
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "65",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 135).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "67",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 123).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/766/OrchestrationContextFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/naturalize/766/OrchestrationContextFactory.java\nindex bfb85929251..fcfb0aca72f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/766/OrchestrationContextFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/naturalize/766/OrchestrationContextFactory.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.docquery.orchestration;\n \n import gov.hhs.fha.nhinc.common.nhinccommon.HomeCommunityType;\n@@ -61,12 +62,11 @@ public final class OrchestrationContextFactory extends AbstractOrchestrationCont\n      * @return OrchestrationContextFactory for DocQuery.\n      */\n     @Override\n-    public OrchestrationContextBuilder getBuilder(HomeCommunityType homeCommunityType,\n-            NhincConstants.NHIN_SERVICE_NAMES serviceName) {\n+    public OrchestrationContextBuilder getBuilder(HomeCommunityType homeCommunityType, NhincConstants.NHIN_SERVICE_NAMES serviceName) {\n         NhinEndpointManager nem = new NhinEndpointManager();\n-        NhincConstants.GATEWAY_API_LEVEL apiLevel = nem.getApiVersion(homeCommunityType.getHomeCommunityId(),\n-                serviceName);\n-        return OutboundDocQueryFactory.getInstance().createOrchestrationContextBuilder(apiLevel);\n+        NhincConstants.GATEWAY_API_LEVEL apiLevel = nem.getApiVersion(homeCommunityType.getHomeCommunityId(), serviceName);\n+\n+return OutboundDocQueryFactory.getInstance().createOrchestrationContextBuilder(apiLevel);\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "49",
                    "severity": "error",
                    "message": "'CTOR_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "71",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 135).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "73",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 123).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/766/OrchestrationContextFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/codebuff/766/OrchestrationContextFactory.java\nindex bfb85929251..bd8f9838e9b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/766/OrchestrationContextFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/codebuff/766/OrchestrationContextFactory.java\n@@ -37,19 +37,24 @@ import gov.hhs.fha.nhinc.orchestration.OrchestrationContextBuilder;\n  * @author zmelnick\n  *\n  */\n-public final class OrchestrationContextFactory extends AbstractOrchestrationContextFactory {\n+\n+\n+public final class OrchestrationContextFactory extends\n+    AbstractOrchestrationContextFactory {\n \n     //CHECKSTYLE:OFF\n+\n     private static OrchestrationContextFactory INSTANCE = new OrchestrationContextFactory();\n     //CHECKSTYLE:ON\n-\n     private OrchestrationContextFactory() {\n-    }\n+}\n \n     /**\n      * This method returns DocQueryInstance of Orchestartion.\n      * @return OrchestrationContextFactory for DocQuery.\n      */\n+\n+\n     public static OrchestrationContextFactory getInstance() {\n         return INSTANCE;\n     }\n@@ -60,13 +65,12 @@ public final class OrchestrationContextFactory extends AbstractOrchestrationCont\n      * @param serviceName The serviceName is DocQuery.\n      * @return OrchestrationContextFactory for DocQuery.\n      */\n+\n+\n     @Override\n-    public OrchestrationContextBuilder getBuilder(HomeCommunityType homeCommunityType,\n-            NhincConstants.NHIN_SERVICE_NAMES serviceName) {\n+    public OrchestrationContextBuilder getBuilder(HomeCommunityType homeCommunityType, NhincConstants.NHIN_SERVICE_NAMES serviceName) {\n         NhinEndpointManager nem = new NhinEndpointManager();\n-        NhincConstants.GATEWAY_API_LEVEL apiLevel = nem.getApiVersion(homeCommunityType.getHomeCommunityId(),\n-                serviceName);\n+        NhincConstants.GATEWAY_API_LEVEL apiLevel = nem.getApiVersion(homeCommunityType.getHomeCommunityId(), serviceName);\n         return OutboundDocQueryFactory.getInstance().createOrchestrationContextBuilder(apiLevel);\n     }\n-\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 17
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "28",
                    "severity": "error",
                    "message": "'import' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/766/OrchestrationContextFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_random/766/OrchestrationContextFactory.java\nindex bfb85929251..19bebaaaccf 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/766/OrchestrationContextFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_random/766/OrchestrationContextFactory.java\n@@ -25,7 +25,6 @@\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n package gov.hhs.fha.nhinc.docquery.orchestration;\n-\n import gov.hhs.fha.nhinc.common.nhinccommon.HomeCommunityType;\n import gov.hhs.fha.nhinc.connectmgr.NhinEndpointManager;\n import gov.hhs.fha.nhinc.docquery.entity.OutboundDocQueryFactory;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": null,
            "diff": null
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
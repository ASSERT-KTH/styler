{
    "project_name": "findbugsproject-findbugs",
    "error_id": "50",
    "information": {
        "errors": [
            {
                "line": "24",
                "column": "12",
                "severity": "error",
                "message": "File contains tab characters (this is the first instance).",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
            }
        ]
    },
    "source_code": "public class FindBugsPreferences extends JPanel implements PreferenceGenerator {\n\n    private\tBlueJ bluej;\n    private static JRadioButton[] radioList = new JRadioButton[3];\n\n    //Description of each radioButton.",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/50/FindBugsPreferences.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/styler/50/FindBugsPreferences.java\nindex 4a587d8184c..915bd9d2e3c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/50/FindBugsPreferences.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/styler/50/FindBugsPreferences.java\n@@ -21,7 +21,7 @@ import bluej.extensions.PreferenceGenerator;\n @SuppressWarnings(\"serial\")\n public class FindBugsPreferences extends JPanel implements PreferenceGenerator {\n \n-    private\tBlueJ bluej;\n+    private BlueJ bluej;\n     private static JRadioButton[] radioList = new JRadioButton[3];\n \n     //Description of each radioButton.\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/50/FindBugsPreferences.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/intellij/50/FindBugsPreferences.java\nindex 4a587d8184c..91afaa1e063 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/50/FindBugsPreferences.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/intellij/50/FindBugsPreferences.java\n@@ -15,19 +15,19 @@ import bluej.extensions.PreferenceGenerator;\n  * compiling all uncompiled classes when FindBugs is run, not compiling the classes,\n  * or popping up a dialog box each time there are uncompiled classes when FindBugs\n  * is called.\n- * @author Kristin Stephens\n  *\n+ * @author Kristin Stephens\n  */\n @SuppressWarnings(\"serial\")\n public class FindBugsPreferences extends JPanel implements PreferenceGenerator {\n \n-    private\tBlueJ bluej;\n+    private BlueJ bluej;\n     private static JRadioButton[] radioList = new JRadioButton[3];\n \n     //Description of each radioButton.\n     private static String[] radioDescription = {\"Compile all classes not already compiled.\",\n-            \"Do not compile classes not already compiled.\",\n-            \"Show dialog box.\"};\n+        \"Do not compile classes not already compiled.\",\n+        \"Show dialog box.\"};\n \n     //Warning if this is changed must check and/or change loadValues()\n     //and RunFindbugs method compileSucceeded()\n@@ -38,9 +38,10 @@ public class FindBugsPreferences extends JPanel implements PreferenceGenerator {\n \n     /**\n      * Creates the preference panel and loads the value.\n+     *\n      * @param bluej Instance of BlueJ\n      */\n-    public FindBugsPreferences(BlueJ bluej){\n+    public FindBugsPreferences(BlueJ bluej) {\n         this.bluej = bluej;\n         compileGroup = new ButtonGroup();\n \n@@ -48,7 +49,7 @@ public class FindBugsPreferences extends JPanel implements PreferenceGenerator {\n \n         add(new JLabel(\"When FindBugs runs:\"));\n \n-        for(int i = 0; i < radioList.length; i++){\n+        for (int i = 0; i < radioList.length; i++) {\n             radioList[i] = new JRadioButton(radioDescription[i]);\n             radioList[i].setActionCommand(radioCommand[i]);\n             compileGroup.add(radioList[i]);\n@@ -69,15 +70,17 @@ public class FindBugsPreferences extends JPanel implements PreferenceGenerator {\n      * @see bluej.extensions.PreferenceGenerator\n      */\n     public void loadValues() {\n-        String strButton = bluej.getExtensionPropertyString(PROFILE_LABEL,\"\");\n+        String strButton = bluej.getExtensionPropertyString(PROFILE_LABEL, \"\");\n \n-        if(strButton.equals(\"\"))\n+        if (strButton.equals(\"\")) {\n             radioList[2].setSelected(true);\n-        else\n-            for(int i = 0; i < radioCommand.length; i++){\n-                if(strButton.equalsIgnoreCase(radioCommand[i]))\n+        } else {\n+            for (int i = 0; i < radioCommand.length; i++) {\n+                if (strButton.equalsIgnoreCase(radioCommand[i])) {\n                     radioList[i].setSelected(true);\n+                }\n             }\n+        }\n     }\n \n     /**\n",
            "diff_size": 15
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/50/FindBugsPreferences.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/naturalize/50/FindBugsPreferences.java\nindex 4a587d8184c..4a2445a5fb1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/50/FindBugsPreferences.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/naturalize/50/FindBugsPreferences.java\n@@ -21,13 +21,13 @@ import bluej.extensions.PreferenceGenerator;\n @SuppressWarnings(\"serial\")\n public class FindBugsPreferences extends JPanel implements PreferenceGenerator {\n \n-    private\tBlueJ bluej;\n+    private BlueJ bluej;\n     private static JRadioButton[] radioList = new JRadioButton[3];\n \n     //Description of each radioButton.\n     private static String[] radioDescription = {\"Compile all classes not already compiled.\",\n             \"Do not compile classes not already compiled.\",\n-            \"Show dialog box.\"};\n+            \"Show dialog box.\" };\n \n     //Warning if this is changed must check and/or change loadValues()\n     //and RunFindbugs method compileSucceeded()\n@@ -40,7 +40,7 @@ public class FindBugsPreferences extends JPanel implements PreferenceGenerator {\n      * Creates the preference panel and loads the value.\n      * @param bluej Instance of BlueJ\n      */\n-    public FindBugsPreferences(BlueJ bluej){\n+    public FindBugsPreferences(BlueJ bluej) {\n         this.bluej = bluej;\n         compileGroup = new ButtonGroup();\n \n@@ -48,7 +48,7 @@ public class FindBugsPreferences extends JPanel implements PreferenceGenerator {\n \n         add(new JLabel(\"When FindBugs runs:\"));\n \n-        for(int i = 0; i < radioList.length; i++){\n+        for (int i = 0; i < radioList.length; i++) {\n             radioList[i] = new JRadioButton(radioDescription[i]);\n             radioList[i].setActionCommand(radioCommand[i]);\n             compileGroup.add(radioList[i]);\n@@ -71,11 +71,11 @@ public class FindBugsPreferences extends JPanel implements PreferenceGenerator {\n     public void loadValues() {\n         String strButton = bluej.getExtensionPropertyString(PROFILE_LABEL,\"\");\n \n-        if(strButton.equals(\"\"))\n+        if (strButton.equals(\"\"))\n             radioList[2].setSelected(true);\n         else\n-            for(int i = 0; i < radioCommand.length; i++){\n-                if(strButton.equalsIgnoreCase(radioCommand[i]))\n+            for(int i = 0; i < radioCommand.length; i++) {\n+    if (strButton.equalsIgnoreCase(radioCommand[i]))\n                     radioList[i].setSelected(true);\n             }\n     }\n@@ -87,4 +87,4 @@ public class FindBugsPreferences extends JPanel implements PreferenceGenerator {\n         bluej.setExtensionPropertyString(PROFILE_LABEL, compileGroup.getSelection().getActionCommand());\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/50/FindBugsPreferences.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/codebuff/50/FindBugsPreferences.java\nindex 4a587d8184c..ef21f56c337 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/50/FindBugsPreferences.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/codebuff/50/FindBugsPreferences.java\n@@ -5,7 +5,6 @@ import javax.swing.ButtonGroup;\n import javax.swing.JLabel;\n import javax.swing.JPanel;\n import javax.swing.JRadioButton;\n-\n import bluej.extensions.BlueJ;\n import bluej.extensions.PreferenceGenerator;\n \n@@ -18,49 +17,51 @@ import bluej.extensions.PreferenceGenerator;\n  * @author Kristin Stephens\n  *\n  */\n+\n @SuppressWarnings(\"serial\")\n public class FindBugsPreferences extends JPanel implements PreferenceGenerator {\n+    private BlueJ bluej;\n \n-    private\tBlueJ bluej;\n     private static JRadioButton[] radioList = new JRadioButton[3];\n \n     //Description of each radioButton.\n-    private static String[] radioDescription = {\"Compile all classes not already compiled.\",\n-            \"Do not compile classes not already compiled.\",\n-            \"Show dialog box.\"};\n+\n+    private static String[] radioDescription = { \"Compile all classes not already compiled.\", \"Do not compile classes not already compiled.\", \"Show dialog box.\" };\n \n     //Warning if this is changed must check and/or change loadValues()\n     //and RunFindbugs method compileSucceeded()\n-    static String[] radioCommand = {\"Compile\", \"DoNotCompile\", \"DialogBox\"};\n+\n+    static String[] radioCommand = { \"Compile\", \"DoNotCompile\", \"DialogBox\" };\n \n     static final String PROFILE_LABEL = \"FindBugsPreference\";\n+\n     private ButtonGroup compileGroup;\n \n     /**\n      * Creates the preference panel and loads the value.\n      * @param bluej Instance of BlueJ\n      */\n-    public FindBugsPreferences(BlueJ bluej){\n+\n+\n+    public FindBugsPreferences(BlueJ bluej) {\n         this.bluej = bluej;\n         compileGroup = new ButtonGroup();\n-\n         setLayout(new BoxLayout(this, BoxLayout.Y_AXIS));\n-\n         add(new JLabel(\"When FindBugs runs:\"));\n-\n-        for(int i = 0; i < radioList.length; i++){\n+        for (int i = 0; i < radioList.length; i++) {\n             radioList[i] = new JRadioButton(radioDescription[i]);\n             radioList[i].setActionCommand(radioCommand[i]);\n             compileGroup.add(radioList[i]);\n             add(radioList[i]);\n         }\n-\n         loadValues();\n     }\n \n     /**\n      * @see bluej.extensions.PreferenceGenerator\n      */\n+\n+\n     public JPanel getPanel() {\n         return this;\n     }\n@@ -68,14 +69,14 @@ public class FindBugsPreferences extends JPanel implements PreferenceGenerator {\n     /**\n      * @see bluej.extensions.PreferenceGenerator\n      */\n-    public void loadValues() {\n-        String strButton = bluej.getExtensionPropertyString(PROFILE_LABEL,\"\");\n \n-        if(strButton.equals(\"\"))\n+    public void loadValues() {\n+        String strButton = bluej.getExtensionPropertyString(PROFILE_LABEL, \"\");\n+        if (strButton.equals(\"\"))\n             radioList[2].setSelected(true);\n         else\n-            for(int i = 0; i < radioCommand.length; i++){\n-                if(strButton.equalsIgnoreCase(radioCommand[i]))\n+            for (int i = 0; i < radioCommand.length; i++) {\n+                if (strButton.equalsIgnoreCase(radioCommand[i]))\n                     radioList[i].setSelected(true);\n             }\n     }\n@@ -83,8 +84,8 @@ public class FindBugsPreferences extends JPanel implements PreferenceGenerator {\n     /**\n      * @see bluej.extensions.PreferenceGenerator\n      */\n+\n     public void saveValues() {\n         bluej.setExtensionPropertyString(PROFILE_LABEL, compileGroup.getSelection().getActionCommand());\n     }\n-\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 30
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/50/FindBugsPreferences.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/styler_random/50/FindBugsPreferences.java\nindex 4a587d8184c..915bd9d2e3c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/50/FindBugsPreferences.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/styler_random/50/FindBugsPreferences.java\n@@ -21,7 +21,7 @@ import bluej.extensions.PreferenceGenerator;\n @SuppressWarnings(\"serial\")\n public class FindBugsPreferences extends JPanel implements PreferenceGenerator {\n \n-    private\tBlueJ bluej;\n+    private BlueJ bluej;\n     private static JRadioButton[] radioList = new JRadioButton[3];\n \n     //Description of each radioButton.\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": null,
            "diff": null
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random"
    ],
    "not_repaired_by": [
        "styler_three_grams"
    ]
}
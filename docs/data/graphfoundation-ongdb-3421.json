{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3421",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "32",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "32",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3421/CachingInputChunk.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3421/CachingInputChunk.java\nindex 8ae551bb2dd..ddd0f9ef16c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3421/CachingInputChunk.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3421/CachingInputChunk.java\n@@ -17,46 +17,46 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.unsafe.impl.batchimport.input;\n \n import java.io.IOException;\n \n class CachingInputChunk implements InputChunk\n {\n-    private final InputChunk actual;\n-    private final InputCacher cacher;\n-    private InputEntityVisitor wrapped;\n-    private InputEntityVisitor unwrapped;\n+  private final InputChunk actual;\n+  private final InputCacher cacher;\n+  private InputEntityVisitor wrapped;\n+  private InputEntityVisitor unwrapped;\n \n-    CachingInputChunk( InputChunk actual, InputCacher cacher )\n-    {\n-        this.actual = actual;\n-        this.cacher = cacher;\n-    }\n+  CachingInputChunk(InputChunk actual, InputCacher cacher)\n+  {\n+    this.actual = actual;\n+    this.cacher = cacher;\n+  }\n \n-    InputChunk actual()\n-    {\n-        return actual;\n-    }\n+  InputChunk actual()\n+  {\n+    return actual;\n+  }\n \n-    @Override\n-    public void close() throws IOException\n-    {\n-        actual.close();\n-    }\n+  @Override\n+  public void close() throws IOException\n+  {\n+    actual.close();\n+  }\n \n-    @Override\n-    public boolean next( InputEntityVisitor unwrapped ) throws IOException\n+  @Override\n+  public boolean next(InputEntityVisitor unwrapped) throws IOException\n+  {\n+    if (wrapped == null)\n+    {\n+      this.unwrapped = unwrapped;\n+      wrapped = cacher.wrap(unwrapped);\n+    } else\n     {\n-        if ( wrapped == null )\n-        {\n-            this.unwrapped = unwrapped;\n-            wrapped = cacher.wrap( unwrapped );\n-        }\n-        else\n-        {\n-            assert this.unwrapped == unwrapped;\n-        }\n-        return actual.next( wrapped );\n+      assert this.unwrapped == unwrapped;\n     }\n+    return actual.next(wrapped);\n+  }\n }\n",
            "diff_size": 39
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3421/CachingInputChunk.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3421/CachingInputChunk.java\nindex 8ae551bb2dd..24a12231ba0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3421/CachingInputChunk.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3421/CachingInputChunk.java\n@@ -57,6 +57,7 @@ class CachingInputChunk implements InputChunk\n         {\n             assert this.unwrapped == unwrapped;\n         }\n-        return actual.next( wrapped );\n+\n+return actual.next( wrapped );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
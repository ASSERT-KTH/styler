{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1259",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "53",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "89",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "63",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "113",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1259/LuceneBatchInserterIndexProviderNewImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1259/LuceneBatchInserterIndexProviderNewImpl.java\nindex d48f5c601aa..7b0f67d1cbd 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1259/LuceneBatchInserterIndexProviderNewImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1259/LuceneBatchInserterIndexProviderNewImpl.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.index.impl.lucene.explicit;\n \n import java.io.File;\n@@ -44,74 +45,73 @@ import org.neo4j.unsafe.batchinsert.internal.IndexConfigStoreProvider;\n  */\n public class LuceneBatchInserterIndexProviderNewImpl implements BatchInserterIndexProvider\n {\n-    private final BatchInserter inserter;\n-    private final Map<IndexIdentifier, LuceneBatchInserterIndex> indexes = new HashMap<>();\n-    final IndexConfigStore indexStore;\n-    private LuceneBatchInserterIndex.RelationshipLookup relationshipLookup;\n+  private final BatchInserter inserter;\n+  private final Map<IndexIdentifier, LuceneBatchInserterIndex> indexes = new HashMap<>();\n+  final IndexConfigStore indexStore;\n+  private LuceneBatchInserterIndex.RelationshipLookup relationshipLookup;\n \n-    public LuceneBatchInserterIndexProviderNewImpl( final BatchInserter inserter )\n+  public LuceneBatchInserterIndexProviderNewImpl(final BatchInserter inserter)\n+  {\n+    this.inserter = inserter;\n+    this.indexStore = ((IndexConfigStoreProvider) inserter).getIndexStore();\n+    this.relationshipLookup = id ->\n     {\n-        this.inserter = inserter;\n-        this.indexStore = ((IndexConfigStoreProvider) inserter).getIndexStore();\n-        this.relationshipLookup = id ->\n-        {\n-            // TODO too may objects allocated here\n-            BatchRelationship rel = inserter.getRelationshipById( id );\n-            return new EntityId.RelationshipData( id, rel.getStartNode(), rel.getEndNode() );\n-        };\n-    }\n+      // TODO too may objects allocated here\n+      BatchRelationship rel = inserter.getRelationshipById(id);\n+      return new EntityId.RelationshipData(id, rel.getStartNode(), rel.getEndNode());\n+    };\n+  }\n \n-    @Override\n-    public BatchInserterIndex nodeIndex( String indexName, Map<String, String> config )\n-    {\n-        config( Node.class, indexName, config );\n-        return index( new IndexIdentifier( IndexEntityType.Node, indexName ), config );\n-    }\n+  @Override\n+  public BatchInserterIndex nodeIndex(String indexName, Map<String, String> config)\n+  {\n+    config(Node.class, indexName, config);\n+    return index(new IndexIdentifier(IndexEntityType.Node, indexName), config);\n+  }\n \n-    private Map<String, String> config( Class<? extends PropertyContainer> cls,\n-            String indexName, Map<String, String> config )\n+  private Map<String, String> config(Class<? extends PropertyContainer> cls,\n+                                     String indexName, Map<String, String> config)\n+  {\n+    // TODO Doesn't look right\n+    if (config != null)\n     {\n-        // TODO Doesn't look right\n-        if ( config != null )\n-        {\n-            config = MapUtil.stringMap( new HashMap<>( config ),\n-                    IndexManager.PROVIDER, LuceneIndexImplementation.SERVICE_NAME );\n-            indexStore.setIfNecessary( cls, indexName, config );\n-            return config;\n-        }\n-        else\n-        {\n-            return indexStore.get( cls, indexName );\n-        }\n-    }\n-\n-    @Override\n-    public BatchInserterIndex relationshipIndex( String indexName, Map<String, String> config )\n+      config = MapUtil.stringMap(new HashMap<>(config),\n+          IndexManager.PROVIDER, LuceneIndexImplementation.SERVICE_NAME);\n+      indexStore.setIfNecessary(cls, indexName, config);\n+      return config;\n+    } else\n     {\n-        config( Relationship.class, indexName, config );\n-        return index( new IndexIdentifier( IndexEntityType.Relationship, indexName ), config );\n+      return indexStore.get(cls, indexName);\n     }\n+  }\n \n-    private BatchInserterIndex index( IndexIdentifier identifier, Map<String, String> config )\n-    {\n-        // We don't care about threads here... c'mon... it's a\n-        // single-threaded batch inserter\n-        return indexes.computeIfAbsent( identifier,\n-                k -> getLuceneBatchInserterIndex( identifier, config ) );\n-    }\n+  @Override\n+  public BatchInserterIndex relationshipIndex(String indexName, Map<String, String> config)\n+  {\n+    config(Relationship.class, indexName, config);\n+    return index(new IndexIdentifier(IndexEntityType.Relationship, indexName), config);\n+  }\n \n-    private LuceneBatchInserterIndex getLuceneBatchInserterIndex( IndexIdentifier identifier,\n-            Map<String,String> config )\n-    {\n-        return new LuceneBatchInserterIndex( new File( inserter.getStoreDir() ), identifier, config, relationshipLookup );\n-    }\n+  private BatchInserterIndex index(IndexIdentifier identifier, Map<String, String> config)\n+  {\n+    // We don't care about threads here... c'mon... it's a\n+    // single-threaded batch inserter\n+    return indexes.computeIfAbsent(identifier,\n+        k -> getLuceneBatchInserterIndex(identifier, config));\n+  }\n+\n+  private LuceneBatchInserterIndex getLuceneBatchInserterIndex(IndexIdentifier identifier,\n+                                                               Map<String, String> config)\n+  {\n+    return new LuceneBatchInserterIndex(new File(inserter.getStoreDir()), identifier, config, relationshipLookup);\n+  }\n \n-    @Override\n-    public void shutdown()\n+  @Override\n+  public void shutdown()\n+  {\n+    for (LuceneBatchInserterIndex index : indexes.values())\n     {\n-        for ( LuceneBatchInserterIndex index : indexes.values() )\n-        {\n-            index.shutdown();\n-        }\n+      index.shutdown();\n     }\n+  }\n }\n",
            "diff_size": 78
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1259/LuceneBatchInserterIndexProviderNewImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1259/LuceneBatchInserterIndexProviderNewImpl.java\nindex d48f5c601aa..e0172ad6632 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1259/LuceneBatchInserterIndexProviderNewImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1259/LuceneBatchInserterIndexProviderNewImpl.java\n@@ -45,7 +45,7 @@ import org.neo4j.unsafe.batchinsert.internal.IndexConfigStoreProvider;\n public class LuceneBatchInserterIndexProviderNewImpl implements BatchInserterIndexProvider\n {\n     private final BatchInserter inserter;\n-    private final Map<IndexIdentifier, LuceneBatchInserterIndex> indexes = new HashMap<>();\n+    private final Map<IndexIdentifier,LuceneBatchInserterIndex> indexes = new HashMap<>();\n     final IndexConfigStore indexStore;\n     private LuceneBatchInserterIndex.RelationshipLookup relationshipLookup;\n \n@@ -62,21 +62,20 @@ public class LuceneBatchInserterIndexProviderNewImpl implements BatchInserterInd\n     }\n \n     @Override\n-    public BatchInserterIndex nodeIndex( String indexName, Map<String, String> config )\n+    public BatchInserterIndex nodeIndex( String indexName, Map<String,String> config )\n     {\n         config( Node.class, indexName, config );\n         return index( new IndexIdentifier( IndexEntityType.Node, indexName ), config );\n     }\n \n-    private Map<String, String> config( Class<? extends PropertyContainer> cls,\n-            String indexName, Map<String, String> config )\n+    private Map<String,String> config( Class<? extends PropertyContainer> cls,\n+            String indexName, Map<String,String> config )\n     {\n         // TODO Doesn't look right\n         if ( config != null )\n         {\n-            config = MapUtil.stringMap( new HashMap<>( config ),\n-                    IndexManager.PROVIDER, LuceneIndexImplementation.SERVICE_NAME );\n-            indexStore.setIfNecessary( cls, indexName, config );\n+            config = MapUtil.stringMap( new HashMap<>( config ), IndexManager.PROVIDER, LuceneIndexImplementation.SERVICE_NAME );\n+indexStore.setIfNecessary( cls, indexName, config );\n             return config;\n         }\n         else\n@@ -86,13 +85,13 @@ public class LuceneBatchInserterIndexProviderNewImpl implements BatchInserterInd\n     }\n \n     @Override\n-    public BatchInserterIndex relationshipIndex( String indexName, Map<String, String> config )\n+    public BatchInserterIndex relationshipIndex( String indexName, Map<String,String> config )\n     {\n         config( Relationship.class, indexName, config );\n         return index( new IndexIdentifier( IndexEntityType.Relationship, indexName ), config );\n     }\n \n-    private BatchInserterIndex index( IndexIdentifier identifier, Map<String, String> config )\n+    private BatchInserterIndex index( IndexIdentifier identifier, Map<String,String> config )\n     {\n         // We don't care about threads here... c'mon... it's a\n         // single-threaded batch inserter\n@@ -100,8 +99,7 @@ public class LuceneBatchInserterIndexProviderNewImpl implements BatchInserterInd\n                 k -> getLuceneBatchInserterIndex( identifier, config ) );\n     }\n \n-    private LuceneBatchInserterIndex getLuceneBatchInserterIndex( IndexIdentifier identifier,\n-            Map<String,String> config )\n+    private LuceneBatchInserterIndex getLuceneBatchInserterIndex( IndexIdentifier identifier, Map<String,String> config )\n     {\n         return new LuceneBatchInserterIndex( new File( inserter.getStoreDir() ), identifier, config, relationshipLookup );\n     }\n@@ -114,4 +112,4 @@ public class LuceneBatchInserterIndexProviderNewImpl implements BatchInserterInd\n             index.shutdown();\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 12
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
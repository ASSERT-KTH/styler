{
    "project_name": "neo4j-neo4j",
    "error_id": "1164",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "49",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "125",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "79",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "82",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "179",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "179",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "201",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "201",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "206",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "206",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1164/VmPauseMonitor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1164/VmPauseMonitor.java\nindex 8f71b6b8093..b11bbcaaf6c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1164/VmPauseMonitor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1164/VmPauseMonitor.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.monitoring;\n \n import java.lang.management.GarbageCollectorMXBean;\n@@ -45,26 +46,26 @@ public class VmPauseMonitor\n     private volatile boolean stopped;\n     private JobHandle job;\n \n-    public VmPauseMonitor( Duration measureInterval, Duration stallAlertThreshold, Monitor monitor, JobScheduler jobScheduler )\n+    public VmPauseMonitor(Duration measureInterval, Duration stallAlertThreshold, Monitor monitor, JobScheduler jobScheduler)\n     {\n-        this.measurementDurationNs = Preconditions.requirePositive( measureInterval.toNanos() );\n-        this.stallAlertThresholdNs = Preconditions.requireNonNegative( stallAlertThreshold.toNanos() );\n-        this.monitor = requireNonNull( monitor );\n-        this.jobScheduler = requireNonNull( jobScheduler );\n+        this.measurementDurationNs = Preconditions.requirePositive(measureInterval.toNanos());\n+        this.stallAlertThresholdNs = Preconditions.requireNonNegative(stallAlertThreshold.toNanos());\n+        this.monitor = requireNonNull(monitor);\n+        this.jobScheduler = requireNonNull(jobScheduler);\n     }\n \n     public void start()\n     {\n         monitor.started();\n-        Preconditions.checkState( job == null, \"VM pause monitor is already started\" );\n+        Preconditions.checkState(job == null, \"VM pause monitor is already started\");\n         stopped = false;\n-        job = requireNonNull( jobScheduler.schedule( Group.VM_PAUSE_MONITOR, NOT_MONITORED, this::run ) );\n+        job = requireNonNull(jobScheduler.schedule(Group.VM_PAUSE_MONITOR, NOT_MONITORED, this::run));\n     }\n \n     public void stop()\n     {\n         monitor.stopped();\n-        Preconditions.checkState( job != null, \"VM pause monitor is not started\" );\n+        Preconditions.checkState(job != null, \"VM pause monitor is not started\");\n         stopped = true;\n         job.cancel();\n         job = null;\n@@ -75,14 +76,12 @@ public class VmPauseMonitor\n         try\n         {\n             monitor();\n-        }\n-        catch ( InterruptedException ignore )\n+        } catch (InterruptedException ignore)\n         {\n             monitor.interrupted();\n-        }\n-        catch ( RuntimeException e )\n+        } catch (RuntimeException e)\n         {\n-            monitor.failed( e );\n+            monitor.failed(e);\n         }\n     }\n \n@@ -92,28 +91,28 @@ public class VmPauseMonitor\n         GcStats lastGcStats = getGcStats();\n         long nextCheckPoint = nanoTime() + measurementDurationNs;\n \n-        while ( !isStopped() )\n+        while (!isStopped())\n         {\n-            NANOSECONDS.sleep( measurementDurationNs );\n+            NANOSECONDS.sleep(measurementDurationNs);\n             final long now = nanoTime();\n-            final long pauseNs = max( 0L, now - nextCheckPoint );\n+            final long pauseNs = max(0L, now - nextCheckPoint);\n             nextCheckPoint = now + measurementDurationNs;\n \n             final GcStats gcStats = getGcStats();\n-            if ( pauseNs >= stallAlertThresholdNs )\n+            if (pauseNs >= stallAlertThresholdNs)\n             {\n                 final VmPauseInfo pauseInfo = new VmPauseInfo(\n-                        NANOSECONDS.toMillis( pauseNs ),\n-                        gcStats.time - lastGcStats.time,\n-                        gcStats.count - lastGcStats.count\n+                  NANOSECONDS.toMillis(pauseNs),\n+                  gcStats.time - lastGcStats.time,\n+                  gcStats.count - lastGcStats.count\n                 );\n-                monitor.pauseDetected( pauseInfo );\n+                monitor.pauseDetected(pauseInfo);\n             }\n             lastGcStats = gcStats;\n         }\n     }\n \n-    @SuppressWarnings( \"MethodMayBeStatic\" )\n+    @SuppressWarnings(\"MethodMayBeStatic\")\n     @VisibleForTesting\n     boolean isStopped()\n     {\n@@ -126,7 +125,7 @@ public class VmPauseMonitor\n         private final long gcTime;\n         private final long gcCount;\n \n-        public VmPauseInfo( long pauseTime, long gcTime, long gcCount )\n+        public VmPauseInfo(long pauseTime, long gcTime, long gcCount)\n         {\n             this.pauseTime = pauseTime;\n             this.gcTime = gcTime;\n@@ -141,7 +140,7 @@ public class VmPauseMonitor\n         @Override\n         public String toString()\n         {\n-            return format( \"{pauseTime=%d, gcTime=%d, gcCount=%d}\", pauseTime, gcTime, gcCount );\n+            return format(\"{pauseTime=%d, gcTime=%d, gcCount=%d}\", pauseTime, gcTime, gcCount);\n         }\n     }\n \n@@ -149,12 +148,12 @@ public class VmPauseMonitor\n     {\n         long time = 0;\n         long count = 0;\n-        for ( GarbageCollectorMXBean gcBean : ManagementFactory.getGarbageCollectorMXBeans() )\n+        for (GarbageCollectorMXBean gcBean : ManagementFactory.getGarbageCollectorMXBeans())\n         {\n             time += gcBean.getCollectionTime();\n             count += gcBean.getCollectionCount();\n         }\n-        return new GcStats( time, count );\n+        return new GcStats(time, count);\n     }\n \n     private static class GcStats\n@@ -162,7 +161,7 @@ public class VmPauseMonitor\n         private final long time;\n         private final long count;\n \n-        private GcStats( long time, long count )\n+        private GcStats(long time, long count)\n         {\n             this.time = time;\n             this.count = count;\n@@ -177,9 +176,9 @@ public class VmPauseMonitor\n \n         void interrupted();\n \n-        void failed( Exception e );\n+        void failed(Exception e);\n \n-        void pauseDetected( VmPauseInfo info );\n+        void pauseDetected(VmPauseInfo info);\n \n         class Adapter implements Monitor\n         {\n@@ -199,12 +198,12 @@ public class VmPauseMonitor\n             }\n \n             @Override\n-            public void failed( Exception e )\n+            public void failed(Exception e)\n             {   // no-op\n             }\n \n             @Override\n-            public void pauseDetected( VmPauseInfo info )\n+            public void pauseDetected(VmPauseInfo info)\n             {   // no-op\n             }\n         }\n",
            "diff_size": 32
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1164/VmPauseMonitor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/1164/VmPauseMonitor.java\nindex 8f71b6b8093..b25f7e4b4e2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1164/VmPauseMonitor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/1164/VmPauseMonitor.java\n@@ -105,8 +105,7 @@ public class VmPauseMonitor\n                 final VmPauseInfo pauseInfo = new VmPauseInfo(\n                         NANOSECONDS.toMillis( pauseNs ),\n                         gcStats.time - lastGcStats.time,\n-                        gcStats.count - lastGcStats.count\n-                );\n+                        gcStats.count - lastGcStats.count );\n                 monitor.pauseDetected( pauseInfo );\n             }\n             lastGcStats = gcStats;\n@@ -211,4 +210,4 @@ public class VmPauseMonitor\n \n         Monitor EMPTY = new Adapter();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "ibinti-bugvm",
    "error_id": "78",
    "information": {
        "errors": [
            {
                "line": "8",
                "severity": "error",
                "message": "Line is longer than 80 characters (found 87).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "\n// BEGIN android-note\n// omit links to ForkJoinPool, ForkJoinTask, LinkedTransferQueue, Phaser, TransferQueue\n// END android-note\n\n/**",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "8",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 87).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "8",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 87).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/errored/1/78/package-info.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/intellij/78/package-info.java\nindex 51a29e870af..867a5f895f4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/errored/1/78/package-info.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/intellij/78/package-info.java\n@@ -20,7 +20,7 @@\n  * <h2>Executors</h2>\n  *\n  * <b>Interfaces.</b>\n- *\n+ * <p>\n  * {@link java.util.concurrent.Executor} is a simple standardized\n  * interface for defining custom thread-like subsystems, including\n  * thread pools, asynchronous I/O, and lightweight task frameworks.\n@@ -28,23 +28,23 @@\n  * execute in a newly created thread, an existing task-execution thread,\n  * or the thread calling {@link java.util.concurrent.Executor#execute\n  * execute}, and may execute sequentially or concurrently.\n- *\n+ * <p>\n  * {@link java.util.concurrent.ExecutorService} provides a more\n  * complete asynchronous task execution framework.  An\n  * ExecutorService manages queuing and scheduling of tasks,\n  * and allows controlled shutdown.\n- *\n+ * <p>\n  * The {@link java.util.concurrent.ScheduledExecutorService}\n  * subinterface and associated interfaces add support for\n  * delayed and periodic task execution.  ExecutorServices\n  * provide methods arranging asynchronous execution of any\n  * function expressed as {@link java.util.concurrent.Callable},\n  * the result-bearing analog of {@link java.lang.Runnable}.\n- *\n+ * <p>\n  * A {@link java.util.concurrent.Future} returns the results of\n  * a function, allows determination of whether execution has\n  * completed, and provides a means to cancel execution.\n- *\n+ * <p>\n  * A {@link java.util.concurrent.RunnableFuture} is a {@code Future}\n  * that possesses a {@code run} method that upon execution,\n  * sets its results.\n@@ -52,11 +52,11 @@\n  * <p>\n  *\n  * <b>Implementations.</b>\n- *\n+ * <p>\n  * Classes {@link java.util.concurrent.ThreadPoolExecutor} and\n  * {@link java.util.concurrent.ScheduledThreadPoolExecutor}\n  * provide tunable, flexible thread pools.\n- *\n+ * <p>\n  * The {@link java.util.concurrent.Executors} class provides\n  * factory methods for the most common kinds and configurations\n  * of Executors, as well as a few utility methods for using\n@@ -68,7 +68,7 @@\n  * asynchronous tasks.\n  *\n  * <h2>Queues</h2>\n- *\n+ * <p>\n  * The {@link java.util.concurrent.ConcurrentLinkedQueue} class\n  * supplies an efficient scalable thread-safe non-blocking FIFO\n  * queue.\n@@ -92,7 +92,7 @@\n  * provides an implementation.\n  *\n  * <h2>Timing</h2>\n- *\n+ * <p>\n  * The {@link java.util.concurrent.TimeUnit} class provides\n  * multiple granularities (including nanoseconds) for\n  * specifying and controlling time-out based operations.  Most\n@@ -110,7 +110,7 @@\n  * of {@code Long.MAX_VALUE}.\n  *\n  * <h2>Synchronizers</h2>\n- *\n+ * <p>\n  * Four classes aid common special-purpose synchronization idioms.\n  * <ul>\n  *\n@@ -131,7 +131,7 @@\n  * </ul>\n  *\n  * <h2>Concurrent Collections</h2>\n- *\n+ * <p>\n  * Besides Queues, this package supplies Collection implementations\n  * designed for use in multithreaded contexts:\n  * {@link java.util.concurrent.ConcurrentHashMap},\n@@ -210,8 +210,8 @@\n  *   successfully returns from a {@code join} on that thread.\n  *\n  * </ul>\n- *\n- *\n+ * <p>\n+ * <p>\n  * The methods of all classes in {@code java.util.concurrent} and its\n  * subpackages extend these guarantees to higher-level\n  * synchronization.  In particular:\n@@ -253,4 +253,5 @@\n  *\n  * @since 1.5\n  */\n+\n package java.util.concurrent;\n",
            "diff_size": 14
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "8",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 87).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/errored/1/78/package-info.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/naturalize/78/package-info.java\nindex 51a29e870af..acfecf1b6a1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/errored/1/78/package-info.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/naturalize/78/package-info.java\n@@ -253,4 +253,4 @@\n  *\n  * @since 1.5\n  */\n-package java.util.concurrent;\n+package java.util.concurrent;\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "8",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 87).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/errored/1/78/package-info.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/codebuff/78/package-info.java\nindex 51a29e870af..acfecf1b6a1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/errored/1/78/package-info.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/codebuff/78/package-info.java\n@@ -253,4 +253,4 @@\n  *\n  * @since 1.5\n  */\n-package java.util.concurrent;\n+package java.util.concurrent;\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "8",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 87).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "8",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 87).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
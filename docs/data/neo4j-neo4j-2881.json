{
    "project_name": "neo4j-neo4j",
    "error_id": "2881",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "71",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "104",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "63",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "158",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "167",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "167",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "175",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "175",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "179",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "179",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "185",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "185",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "191",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "191",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "195",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "195",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "198",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "198",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "200",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "200",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "221",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "228",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "228",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "233",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "233",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "235",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "235",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "239",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "239",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "242",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "242",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "243",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "243",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "247",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "247",
                    "column": "102",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "251",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "251",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "274",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "274",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "276",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "276",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "282",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "282",
                    "column": "106",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "303",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "303",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "310",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "310",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "316",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "316",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2881/ByteCodeMethodWriter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2881/ByteCodeMethodWriter.java\nindex cf8a13e6e28..ff218a88a4f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2881/ByteCodeMethodWriter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2881/ByteCodeMethodWriter.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.codegen.bytecode;\n \n import org.objectweb.asm.ClassVisitor;\n@@ -67,24 +68,24 @@ class ByteCodeMethodWriter implements MethodWriter\n     private final ExpressionVisitor expressionVisitor;\n     private Deque<Block> stateStack = new LinkedList<>();\n \n-    ByteCodeMethodWriter( ClassVisitor classVisitor, MethodDeclaration declaration, TypeReference ignore )\n+    ByteCodeMethodWriter(ClassVisitor classVisitor, MethodDeclaration declaration, TypeReference ignore)\n     {\n         this.declaration = declaration;\n-        for ( Parameter parameter : declaration.parameters() )\n+        for (Parameter parameter : declaration.parameters())\n         {\n             TypeReference type = parameter.type();\n-            if ( type.isInnerClass() && !type.isArray() )\n+            if (type.isInnerClass() && !type.isArray())\n             {\n-                classVisitor.visitInnerClass( byteCodeName( type ), outerName( type ),\n-                        type.simpleName(), type.modifiers() );\n+                classVisitor.visitInnerClass(byteCodeName(type), outerName(type),\n+                  type.simpleName(), type.modifiers());\n             }\n         }\n         int access = declaration.isStatic() ? ACC_PUBLIC + ACC_STATIC : ACC_PUBLIC;\n-        this.methodVisitor = classVisitor.visitMethod( access, declaration.name(), desc( declaration ),\n-                signature( declaration ), exceptions( declaration ) );\n+        this.methodVisitor = classVisitor.visitMethod(access, declaration.name(), desc(declaration),\n+          signature(declaration), exceptions(declaration));\n         this.methodVisitor.visitCode();\n-        this.expressionVisitor = new ByteCodeExpressionVisitor( this.methodVisitor );\n-        stateStack.push( new Method( methodVisitor, declaration.returnType().isVoid() ) );\n+        this.expressionVisitor = new ByteCodeExpressionVisitor(this.methodVisitor);\n+        stateStack.push(new Method(methodVisitor, declaration.returnType().isVoid()));\n     }\n \n     @Override\n@@ -100,222 +101,221 @@ class ByteCodeMethodWriter implements MethodWriter\n     }\n \n     @Override\n-    public void expression( Expression expression )\n+    public void expression(Expression expression)\n     {\n-        expression.accept( expressionVisitor );\n+        expression.accept(expressionVisitor);\n     }\n \n     @Override\n-    public void put( Expression target, FieldReference field, Expression value )\n+    public void put(Expression target, FieldReference field, Expression value)\n     {\n-        target.accept( expressionVisitor );\n-        value.accept( expressionVisitor );\n+        target.accept(expressionVisitor);\n+        value.accept(expressionVisitor);\n         methodVisitor\n-                .visitFieldInsn( PUTFIELD, byteCodeName( field.owner() ), field.name(), typeName( field.type() ) );\n+          .visitFieldInsn(PUTFIELD, byteCodeName(field.owner()), field.name(), typeName(field.type()));\n     }\n \n     @Override\n-    public void putStatic( FieldReference field, Expression value )\n+    public void putStatic(FieldReference field, Expression value)\n     {\n-        value.accept( expressionVisitor );\n-        methodVisitor.visitFieldInsn( PUTSTATIC, byteCodeName( field.owner() ), field.name(), typeName( field.type() ) );\n+        value.accept(expressionVisitor);\n+        methodVisitor.visitFieldInsn(PUTSTATIC, byteCodeName(field.owner()), field.name(), typeName(field.type()));\n     }\n \n     @Override\n     public void returns()\n     {\n-        methodVisitor.visitInsn( RETURN );\n+        methodVisitor.visitInsn(RETURN);\n     }\n \n     @Override\n-    public void returns( Expression value )\n+    public void returns(Expression value)\n     {\n-        value.accept( expressionVisitor );\n-        if ( declaration.returnType().isPrimitive() )\n+        value.accept(expressionVisitor);\n+        if (declaration.returnType().isPrimitive())\n         {\n-            switch ( declaration.returnType().name() )\n+            switch (declaration.returnType().name())\n             {\n-            case \"int\":\n-            case \"byte\":\n-            case \"short\":\n-            case \"char\":\n-            case \"boolean\":\n-                methodVisitor.visitInsn( IRETURN );\n-                break;\n-            case \"long\":\n-                methodVisitor.visitInsn( LRETURN );\n-                break;\n-            case \"float\":\n-                methodVisitor.visitInsn( FRETURN );\n-                break;\n-            case \"double\":\n-                methodVisitor.visitInsn( DRETURN );\n-                break;\n-            default:\n-                methodVisitor.visitInsn( ARETURN );\n+                case \"int\":\n+                case \"byte\":\n+                case \"short\":\n+                case \"char\":\n+                case \"boolean\":\n+                    methodVisitor.visitInsn(IRETURN);\n+                    break;\n+                case \"long\":\n+                    methodVisitor.visitInsn(LRETURN);\n+                    break;\n+                case \"float\":\n+                    methodVisitor.visitInsn(FRETURN);\n+                    break;\n+                case \"double\":\n+                    methodVisitor.visitInsn(DRETURN);\n+                    break;\n+                default:\n+                    methodVisitor.visitInsn(ARETURN);\n             }\n-        }\n-        else\n+        } else\n         {\n-            methodVisitor.visitInsn( ARETURN );\n+            methodVisitor.visitInsn(ARETURN);\n         }\n     }\n \n     @Override\n     public void continues()\n     {\n-        for ( Block block : stateStack )\n+        for (Block block : stateStack)\n         {\n-            if ( block instanceof While )\n+            if (block instanceof While)\n             {\n-                ((While)block).continueBlock();\n+                ((While) block).continueBlock();\n                 return;\n             }\n         }\n-        throw new IllegalStateException( \"Found no block to continue\" );\n+        throw new IllegalStateException(\"Found no block to continue\");\n     }\n \n     @Override\n-    public void breaks( String labelName )\n+    public void breaks(String labelName)\n     {\n-        for ( Block block : stateStack )\n+        for (Block block : stateStack)\n         {\n-            if ( block instanceof While )\n+            if (block instanceof While)\n             {\n-                if ( ((While)block).breakBlock( labelName ) )\n+                if (((While) block).breakBlock(labelName))\n                 {\n                     return;\n                 }\n             }\n         }\n-        throw new IllegalStateException( \"Found no block to break out of with label \" + labelName );\n+        throw new IllegalStateException(\"Found no block to break out of with label \" + labelName);\n     }\n \n     @Override\n-    public void assign( LocalVariable variable, Expression value )\n+    public void assign(LocalVariable variable, Expression value)\n     {\n-        value.accept( expressionVisitor );\n-        if ( variable.type().isPrimitive() )\n+        value.accept(expressionVisitor);\n+        if (variable.type().isPrimitive())\n         {\n-            switch ( variable.type().name() )\n+            switch (variable.type().name())\n             {\n-            case \"int\":\n-            case \"byte\":\n-            case \"short\":\n-            case \"char\":\n-            case \"boolean\":\n-                methodVisitor.visitVarInsn( ISTORE, variable.index() );\n-                break;\n-            case \"long\":\n-                methodVisitor.visitVarInsn( LSTORE, variable.index() );\n-                break;\n-            case \"float\":\n-                methodVisitor.visitVarInsn( FSTORE, variable.index() );\n-                break;\n-            case \"double\":\n-                methodVisitor.visitVarInsn( DSTORE, variable.index() );\n-                break;\n-            default:\n-                methodVisitor.visitVarInsn( ASTORE, variable.index() );\n+                case \"int\":\n+                case \"byte\":\n+                case \"short\":\n+                case \"char\":\n+                case \"boolean\":\n+                    methodVisitor.visitVarInsn(ISTORE, variable.index());\n+                    break;\n+                case \"long\":\n+                    methodVisitor.visitVarInsn(LSTORE, variable.index());\n+                    break;\n+                case \"float\":\n+                    methodVisitor.visitVarInsn(FSTORE, variable.index());\n+                    break;\n+                case \"double\":\n+                    methodVisitor.visitVarInsn(DSTORE, variable.index());\n+                    break;\n+                default:\n+                    methodVisitor.visitVarInsn(ASTORE, variable.index());\n             }\n-        }\n-        else\n+        } else\n         {\n-            methodVisitor.visitVarInsn( ASTORE, variable.index() );\n+            methodVisitor.visitVarInsn(ASTORE, variable.index());\n         }\n     }\n \n     @Override\n-    public void beginWhile( Expression test, String labelName )\n+    public void beginWhile(Expression test, String labelName)\n     {\n         Label repeat = new Label();\n         Label done = new Label();\n-        methodVisitor.visitLabel( repeat );\n-        test.accept( new JumpVisitor( expressionVisitor, methodVisitor, done ) );\n+        methodVisitor.visitLabel(repeat);\n+        test.accept(new JumpVisitor(expressionVisitor, methodVisitor, done));\n \n-        stateStack.push( new While( methodVisitor, repeat, done, labelName ) );\n+        stateStack.push(new While(methodVisitor, repeat, done, labelName));\n     }\n \n     @Override\n-    public void beginIf( Expression test )\n+    public void beginIf(Expression test)\n     {\n         Label after = new Label();\n-        test.accept( new JumpVisitor( expressionVisitor, methodVisitor, after ) );\n-        stateStack.push( new If( methodVisitor, after ) );\n+        test.accept(new JumpVisitor(expressionVisitor, methodVisitor, after));\n+        stateStack.push(new If(methodVisitor, after));\n     }\n \n     @Override\n-    public <T> void ifElseStatement( Expression test, Consumer<T> onTrue, Consumer<T> onFalse, T block )\n+    public <T> void ifElseStatement(Expression test, Consumer<T> onTrue, Consumer<T> onFalse, T block)\n     {\n         Label onFailLabel = new Label();\n         Label doneLabel = new Label();\n-        test.accept( new JumpVisitor( expressionVisitor, methodVisitor, onFailLabel ) );\n+        test.accept(new JumpVisitor(expressionVisitor, methodVisitor, onFailLabel));\n         //test true, evaluate and GOTO done\n-        onTrue.accept( block );\n-        methodVisitor.visitJumpInsn( GOTO, doneLabel );\n+        onTrue.accept(block);\n+        methodVisitor.visitJumpInsn(GOTO, doneLabel);\n \n         //test false, go to here\n-        methodVisitor.visitLabel( onFailLabel );\n-        onFalse.accept( block );\n+        methodVisitor.visitLabel(onFailLabel);\n+        onFalse.accept(block);\n \n         //goto here when onTrue body is done\n-        methodVisitor.visitLabel( doneLabel );\n+        methodVisitor.visitLabel(doneLabel);\n     }\n \n     @Override\n     public void beginBlock()\n     {\n-        stateStack.push( () -> {} );\n+        stateStack.push(() -> {\n+        });\n     }\n \n     @Override\n     public void endBlock()\n     {\n-        if ( stateStack.isEmpty() )\n+        if (stateStack.isEmpty())\n         {\n-            throw new IllegalStateException( \"Unbalanced blocks\" );\n+            throw new IllegalStateException(\"Unbalanced blocks\");\n         }\n         stateStack.pop().endBlock();\n     }\n \n     @Override\n-    public <T> void tryCatchBlock( Consumer<T> body, Consumer<T> handler, LocalVariable exception, T block )\n+    public <T> void tryCatchBlock(Consumer<T> body, Consumer<T> handler, LocalVariable exception, T block)\n     {\n         Label start = new Label();\n         Label end = new Label();\n         Label handle = new Label();\n         Label after = new Label();\n-        methodVisitor.visitTryCatchBlock( start, end, handle,\n-                byteCodeName( exception.type() ) );\n-        methodVisitor.visitLabel( start );\n-        body.accept( block );\n-        methodVisitor.visitLabel( end );\n-        methodVisitor.visitJumpInsn( GOTO, after );\n+        methodVisitor.visitTryCatchBlock(start, end, handle,\n+          byteCodeName(exception.type()));\n+        methodVisitor.visitLabel(start);\n+        body.accept(block);\n+        methodVisitor.visitLabel(end);\n+        methodVisitor.visitJumpInsn(GOTO, after);\n         //handle catch\n-        methodVisitor.visitLabel( handle );\n-        methodVisitor.visitVarInsn( ASTORE, exception.index() );\n+        methodVisitor.visitLabel(handle);\n+        methodVisitor.visitVarInsn(ASTORE, exception.index());\n \n-        handler.accept( block );\n-        methodVisitor.visitLabel( after );\n+        handler.accept(block);\n+        methodVisitor.visitLabel(after);\n     }\n \n     @Override\n-    public void throwException( Expression exception )\n+    public void throwException(Expression exception)\n     {\n-        exception.accept( expressionVisitor );\n-        methodVisitor.visitInsn( ATHROW );\n+        exception.accept(expressionVisitor);\n+        methodVisitor.visitInsn(ATHROW);\n     }\n \n     @Override\n-    public void declare( LocalVariable local )\n+    public void declare(LocalVariable local)\n     {\n         //declare is a noop bytecode wise\n     }\n \n     @Override\n-    public void assignVariableInScope( LocalVariable local, Expression value )\n+    public void assignVariableInScope(LocalVariable local, Expression value)\n     {\n         //these are equivalent when it comes to bytecode\n-        assign( local, value );\n+        assign(local, value);\n     }\n }\n",
            "diff_size": 114
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2881/ByteCodeMethodWriter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/2881/ByteCodeMethodWriter.java\nindex cf8a13e6e28..4fe48a44959 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2881/ByteCodeMethodWriter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/2881/ByteCodeMethodWriter.java\n@@ -110,8 +110,7 @@ class ByteCodeMethodWriter implements MethodWriter\n     {\n         target.accept( expressionVisitor );\n         value.accept( expressionVisitor );\n-        methodVisitor\n-                .visitFieldInsn( PUTFIELD, byteCodeName( field.owner() ), field.name(), typeName( field.type() ) );\n+        methodVisitor.visitFieldInsn( PUTFIELD, byteCodeName( field.owner() ), field.name(), typeName( field.type() ) );\n     }\n \n     @Override\n@@ -318,4 +317,4 @@ class ByteCodeMethodWriter implements MethodWriter\n         //these are equivalent when it comes to bytecode\n         assign( local, value );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
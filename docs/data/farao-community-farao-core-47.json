{
    "project_name": "farao-community-farao-core",
    "error_id": "47",
    "information": {
        "errors": [
            {
                "line": "26",
                "column": "1",
                "severity": "error",
                "message": "'/*' has more than 1 empty lines before.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": "\n\n/**\n * Convert a single GlskPoint to LinearGlsk\n * @author Pengbo Wang {@literal <pengbo.wang@rte-international.com>}\n */",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/farao-community-farao-core/errored/1/47/GlskPointLinearGlskConverter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/farao-community-farao-core/styler/47/GlskPointLinearGlskConverter.java\nindex aa8cdfb0be0..c5683b2051a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/farao-community-farao-core/errored/1/47/GlskPointLinearGlskConverter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/farao-community-farao-core/styler/47/GlskPointLinearGlskConverter.java\n@@ -22,7 +22,6 @@ import java.util.Map;\n import java.util.Objects;\n import java.util.stream.Collectors;\n \n-\n /**\n  * Convert a single GlskPoint to LinearGlsk\n  * @author Pengbo Wang {@literal <pengbo.wang@rte-international.com>}\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "27",
                    "column": "1",
                    "severity": "error",
                    "message": "'/*' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/farao-community-farao-core/errored/1/47/GlskPointLinearGlskConverter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/farao-community-farao-core/intellij/47/GlskPointLinearGlskConverter.java\nindex aa8cdfb0be0..18d7f018f9a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/farao-community-farao-core/errored/1/47/GlskPointLinearGlskConverter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/farao-community-farao-core/intellij/47/GlskPointLinearGlskConverter.java\n@@ -4,6 +4,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package com.farao_community.farao.commons.data.glsk_file.actors;\n \n import com.farao_community.farao.commons.FaraoException;\n@@ -25,6 +26,7 @@ import java.util.stream.Collectors;\n \n /**\n  * Convert a single GlskPoint to LinearGlsk\n+ *\n  * @author Pengbo Wang {@literal <pengbo.wang@rte-international.com>}\n  */\n public class GlskPointLinearGlskConverter {\n@@ -32,7 +34,7 @@ public class GlskPointLinearGlskConverter {\n     private static final Logger LOGGER = LoggerFactory.getLogger(GlskPointLinearGlskConverter.class);\n \n     /**\n-     * @param network IIDM network\n+     * @param network   IIDM network\n      * @param glskPoint GLSK Point\n      * @return farao-core LinearGlsk\n      */\n@@ -71,8 +73,8 @@ public class GlskPointLinearGlskConverter {\n     }\n \n     /**\n-     * @param network iidm network\n-     * @param glskShiftKey country type shiftkey\n+     * @param network       iidm network\n+     * @param glskShiftKey  country type shiftkey\n      * @param linearGlskMap linearGlsk to be filled\n      */\n     private void convertCountryProportionalGlskPointToLinearGlskMap(Network network, GlskShiftKey glskShiftKey, Map<String, Float> linearGlskMap) {\n@@ -82,16 +84,16 @@ public class GlskPointLinearGlskConverter {\n             //Generator A04\n             //calculate sum P of country's generators\n             double totalCountryP = network.getGeneratorStream().filter(generator -> generator.getTerminal().getVoltageLevel().getSubstation().getCountry().orElse(null).equals(country))\n-                    .mapToDouble(Generator::getTargetP).sum();\n+                .mapToDouble(Generator::getTargetP).sum();\n             //calculate factor of each generator\n             network.getGeneratorStream().filter(generator -> generator.getTerminal().getVoltageLevel().getSubstation().getCountry().orElse(null).equals(country))\n-                    .forEach(generator -> linearGlskMap.put(generator.getId(), glskShiftKey.getQuantity().floatValue() * (float) generator.getTargetP() / (float) totalCountryP));\n+                .forEach(generator -> linearGlskMap.put(generator.getId(), glskShiftKey.getQuantity().floatValue() * (float) generator.getTargetP() / (float) totalCountryP));\n         } else if (glskShiftKey.getPsrType().equals(\"A05\")) {\n             //Load A05\n             double totalCountryLoad = network.getLoadStream().filter(load -> load.getTerminal().getVoltageLevel().getSubstation().getCountry().orElse(null).equals(country))\n-                    .mapToDouble(Load::getP0).sum();\n+                .mapToDouble(Load::getP0).sum();\n             network.getLoadStream().filter(load -> load.getTerminal().getVoltageLevel().getSubstation().getCountry().orElse(null).equals(country))\n-                    .forEach(load -> linearGlskMap.put(load.getId(), glskShiftKey.getQuantity().floatValue() * (float) load.getP0() / (float) totalCountryLoad));\n+                .forEach(load -> linearGlskMap.put(load.getId(), glskShiftKey.getQuantity().floatValue() * (float) load.getP0() / (float) totalCountryLoad));\n         } else {\n             //unknown PsrType\n             throw new FaraoException(\"convertCountryProportionalGlskPointToLinearGlskMap PsrType not supported\");\n@@ -99,8 +101,8 @@ public class GlskPointLinearGlskConverter {\n     }\n \n     /**\n-     * @param network iidm network\n-     * @param glskShiftKey explicit type shiftkey\n+     * @param network       iidm network\n+     * @param glskShiftKey  explicit type shiftkey\n      * @param linearGlskMap linearGlsk to be filled\n      */\n     private void convertExplicitProportionalGlskPointToLinearGlskMap(Network network, GlskShiftKey glskShiftKey, Map<String, Float> linearGlskMap, TypeGlskFile typeGlskFile) {\n@@ -108,19 +110,19 @@ public class GlskPointLinearGlskConverter {\n         if (glskShiftKey.getPsrType().equals(\"A04\")) {\n             //Generator A04\n             List<String> generatorsList = glskShiftKey.getRegisteredResourceArrayList().stream()\n-                    .map(generatorResource -> generatorResource.getGeneratorId(typeGlskFile)).collect(Collectors.toList());\n+                .map(generatorResource -> generatorResource.getGeneratorId(typeGlskFile)).collect(Collectors.toList());\n             double totalP = network.getGeneratorStream().filter(generator -> generatorsList.contains(generator.getId()))\n-                    .mapToDouble(Generator::getTargetP).sum();\n+                .mapToDouble(Generator::getTargetP).sum();\n             network.getGeneratorStream().filter(generator -> generatorsList.contains(generator.getId()))\n-                    .forEach(generator -> linearGlskMap.put(generator.getId(), glskShiftKey.getQuantity().floatValue() * (float) generator.getTargetP() / (float) totalP));\n+                .forEach(generator -> linearGlskMap.put(generator.getId(), glskShiftKey.getQuantity().floatValue() * (float) generator.getTargetP() / (float) totalP));\n         } else if (glskShiftKey.getPsrType().equals(\"A05\")) {\n             //Load A05\n             List<String> loadsList = glskShiftKey.getRegisteredResourceArrayList().stream()\n-                    .map(loadResource -> loadResource.getLoadId(typeGlskFile)).collect(Collectors.toList());\n+                .map(loadResource -> loadResource.getLoadId(typeGlskFile)).collect(Collectors.toList());\n             double totalLoad = network.getLoadStream().filter(load -> loadsList.contains(load.getId()))\n-                    .mapToDouble(Load::getP0).sum();\n+                .mapToDouble(Load::getP0).sum();\n             network.getLoadStream().filter(load -> loadsList.contains(load.getId()))\n-                    .forEach(load -> linearGlskMap.put(load.getId(), glskShiftKey.getQuantity().floatValue() * (float) load.getP0() / (float) totalLoad));\n+                .forEach(load -> linearGlskMap.put(load.getId(), glskShiftKey.getQuantity().floatValue() * (float) load.getP0() / (float) totalLoad));\n         } else {\n             //unknown PsrType\n             throw new FaraoException(\"convertExplicitProportionalGlskPointToLinearGlskMap PsrType not supported\");\n@@ -128,8 +130,8 @@ public class GlskPointLinearGlskConverter {\n     }\n \n     /**\n-     * @param network iidm network\n-     * @param glskShiftKey parcitipation factor type shiftkey\n+     * @param network       iidm network\n+     * @param glskShiftKey  parcitipation factor type shiftkey\n      * @param linearGlskMap linearGlsk to be filled\n      */\n     private void convertParticipationFactorGlskPointToLinearGlskMap(Network network, GlskShiftKey glskShiftKey, Map<String, Float> linearGlskMap, TypeGlskFile typeGlskFile) {\n@@ -138,20 +140,20 @@ public class GlskPointLinearGlskConverter {\n             //Generator A04\n             List<GlskRegisteredResource> generatorsResourceList = glskShiftKey.getRegisteredResourceArrayList();\n             double totalFactor = glskShiftKey.getRegisteredResourceArrayList().stream()\n-                    .filter(generatorResource -> network.getGenerator(generatorResource.getGeneratorId(typeGlskFile)) != null)\n-                    .mapToDouble(GlskRegisteredResource::getParticipationFactor).sum();\n+                .filter(generatorResource -> network.getGenerator(generatorResource.getGeneratorId(typeGlskFile)) != null)\n+                .mapToDouble(GlskRegisteredResource::getParticipationFactor).sum();\n \n             generatorsResourceList.stream().filter(generatorResource -> network.getGenerator(generatorResource.getGeneratorId(typeGlskFile)) != null)\n-                    .forEach(generatorResource -> linearGlskMap.put(generatorResource.getmRID(), glskShiftKey.getQuantity().floatValue() * (float) generatorResource.getParticipationFactor() / (float) totalFactor));\n+                .forEach(generatorResource -> linearGlskMap.put(generatorResource.getmRID(), glskShiftKey.getQuantity().floatValue() * (float) generatorResource.getParticipationFactor() / (float) totalFactor));\n         } else if (glskShiftKey.getPsrType().equals(\"A05\")) {\n             //Load A05\n             List<GlskRegisteredResource> loadsResourceList = glskShiftKey.getRegisteredResourceArrayList();\n             double totalFactor = glskShiftKey.getRegisteredResourceArrayList().stream()\n-                    .filter(loadResource -> network.getLoad(loadResource.getLoadId(typeGlskFile)) != null)\n-                    .mapToDouble(GlskRegisteredResource::getParticipationFactor).sum();\n+                .filter(loadResource -> network.getLoad(loadResource.getLoadId(typeGlskFile)) != null)\n+                .mapToDouble(GlskRegisteredResource::getParticipationFactor).sum();\n \n             loadsResourceList.stream().filter(loadResource -> network.getLoad(loadResource.getLoadId(typeGlskFile)) != null)\n-                    .forEach(loadResource -> linearGlskMap.put(loadResource.getmRID(), glskShiftKey.getQuantity().floatValue() * (float) loadResource.getParticipationFactor() / (float) totalFactor));\n+                .forEach(loadResource -> linearGlskMap.put(loadResource.getmRID(), glskShiftKey.getQuantity().floatValue() * (float) loadResource.getParticipationFactor() / (float) totalFactor));\n         } else {\n             //unknown PsrType\n             throw new FaraoException(\"convertParticipationFactorGlskPointToLinearGlskMap PsrType not supported\");\n",
            "diff_size": 25
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/farao-community-farao-core/errored/1/47/GlskPointLinearGlskConverter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/farao-community-farao-core/naturalize/47/GlskPointLinearGlskConverter.java\nindex aa8cdfb0be0..ae30cabefad 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/farao-community-farao-core/errored/1/47/GlskPointLinearGlskConverter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/farao-community-farao-core/naturalize/47/GlskPointLinearGlskConverter.java\n@@ -22,7 +22,6 @@ import java.util.Map;\n import java.util.Objects;\n import java.util.stream.Collectors;\n \n-\n /**\n  * Convert a single GlskPoint to LinearGlsk\n  * @author Pengbo Wang {@literal <pengbo.wang@rte-international.com>}\n@@ -83,7 +82,8 @@ public class GlskPointLinearGlskConverter {\n             //calculate sum P of country's generators\n             double totalCountryP = network.getGeneratorStream().filter(generator -> generator.getTerminal().getVoltageLevel().getSubstation().getCountry().orElse(null).equals(country))\n                     .mapToDouble(Generator::getTargetP).sum();\n-            //calculate factor of each generator\n+\n+//calculate factor of each generator\n             network.getGeneratorStream().filter(generator -> generator.getTerminal().getVoltageLevel().getSubstation().getCountry().orElse(null).equals(country))\n                     .forEach(generator -> linearGlskMap.put(generator.getId(), glskShiftKey.getQuantity().floatValue() * (float) generator.getTargetP() / (float) totalCountryP));\n         } else if (glskShiftKey.getPsrType().equals(\"A05\")) {\n@@ -157,4 +157,4 @@ public class GlskPointLinearGlskConverter {\n             throw new FaraoException(\"convertParticipationFactorGlskPointToLinearGlskMap PsrType not supported\");\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "25",
                    "column": "1",
                    "severity": "error",
                    "message": "'/*' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "31",
                    "column": "1",
                    "severity": "error",
                    "message": "'CLASS_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "56",
                    "column": "24",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 23, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "57",
                    "column": "24",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 23, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "58",
                    "column": "20",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 19, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "59",
                    "column": "31",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 30, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "60",
                    "column": "31",
                    "severity": "error",
                    "message": "'if' has incorrect indentation level 30, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "61",
                    "column": "35",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 34, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "62",
                    "column": "31",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 30, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "63",
                    "column": "35",
                    "severity": "error",
                    "message": "'else' child has incorrect indentation level 34, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "64",
                    "column": "31",
                    "severity": "error",
                    "message": "'else rcurly' has incorrect indentation level 30, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "65",
                    "column": "27",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 26, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "66",
                    "column": "31",
                    "severity": "error",
                    "message": "'else' child has incorrect indentation level 30, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "67",
                    "column": "27",
                    "severity": "error",
                    "message": "'else rcurly' has incorrect indentation level 26, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "100",
                    "column": "20",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 19, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "107",
                    "column": "20",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 19, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "112",
                    "column": "1",
                    "severity": "error",
                    "message": "'glskShiftKey' has incorrect indentation level 0, expected level should be 23.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "113",
                    "column": "16",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 15, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "115",
                    "column": "20",
                    "severity": "error",
                    "message": "'else' child has incorrect indentation level 19, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "116",
                    "column": "16",
                    "severity": "error",
                    "message": "'else rcurly' has incorrect indentation level 15, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "138",
                    "column": "20",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 19, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "141",
                    "column": "20",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 19, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "144",
                    "column": "20",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 19, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "145",
                    "column": "1",
                    "severity": "error",
                    "message": "'glskShiftKey' has incorrect indentation level 0, expected level should be 23.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "146",
                    "column": "16",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 15, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "148",
                    "column": "20",
                    "severity": "error",
                    "message": "'else' child has incorrect indentation level 19, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "149",
                    "column": "16",
                    "severity": "error",
                    "message": "'else rcurly' has incorrect indentation level 15, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "170",
                    "column": "20",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 19, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "171",
                    "column": "20",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 19, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "175",
                    "column": "20",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 19, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "176",
                    "column": "16",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 15, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "178",
                    "column": "20",
                    "severity": "error",
                    "message": "'else' child has incorrect indentation level 19, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "179",
                    "column": "16",
                    "severity": "error",
                    "message": "'else rcurly' has incorrect indentation level 15, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/farao-community-farao-core/errored/1/47/GlskPointLinearGlskConverter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/farao-community-farao-core/codebuff/47/GlskPointLinearGlskConverter.java\nindex aa8cdfb0be0..c3f3f5d132c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/farao-community-farao-core/errored/1/47/GlskPointLinearGlskConverter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/farao-community-farao-core/codebuff/47/GlskPointLinearGlskConverter.java\n@@ -15,7 +15,6 @@ import com.powsybl.iidm.network.Network;\n import com.powsybl.sensitivity.factors.variables.LinearGlsk;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n-\n import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n@@ -27,8 +26,9 @@ import java.util.stream.Collectors;\n  * Convert a single GlskPoint to LinearGlsk\n  * @author Pengbo Wang {@literal <pengbo.wang@rte-international.com>}\n  */\n-public class GlskPointLinearGlskConverter {\n \n+\n+public class GlskPointLinearGlskConverter {\n     private static final Logger LOGGER = LoggerFactory.getLogger(GlskPointLinearGlskConverter.class);\n \n     /**\n@@ -36,37 +36,36 @@ public class GlskPointLinearGlskConverter {\n      * @param glskPoint GLSK Point\n      * @return farao-core LinearGlsk\n      */\n-    public LinearGlsk convertGlskPointToLinearGlsk(Network network, GlskPoint glskPoint, TypeGlskFile typeGlskFile) {\n \n+    public LinearGlsk convertGlskPointToLinearGlsk(Network network, GlskPoint glskPoint, TypeGlskFile typeGlskFile) {\n         Map<String, Float> linearGlskMap = new HashMap<>();\n+\n         String linearGlskId = glskPoint.getSubjectDomainmRID() + \":\" + glskPoint.getPointInterval().toString();\n-        String linearGlskName = linearGlskId; //what name for linear glsk? generate internal uuid?\n \n+        String linearGlskName = linearGlskId; //what name for linear glsk? generate internal uuid?\n         Objects.requireNonNull(glskPoint.getGlskShiftKeys());\n-\n         if (glskPoint.getGlskShiftKeys().size() > 2) {\n             throw new FaraoException(\"Multi (GSK+LSK) shift keys not supported yet...\");\n         }\n-\n         for (GlskShiftKey glskShiftKey : glskPoint.getGlskShiftKeys()) {\n-            if (glskShiftKey.getBusinessType().equals(\"B42\") && glskShiftKey.getRegisteredResourceArrayList().isEmpty()) {\n+            if (glskShiftKey.getBusinessType().equals(\"B42\") &&\n+                glskShiftKey.getRegisteredResourceArrayList().isEmpty()) {\n                 LOGGER.debug(\"GLSK Type B42, empty registered resources list --> country (proportional) GLSK\");\n                 convertCountryProportionalGlskPointToLinearGlskMap(network, glskShiftKey, linearGlskMap);\n             } else if (glskShiftKey.getBusinessType().equals(\"B42\") && !glskShiftKey.getRegisteredResourceArrayList().isEmpty()) {\n-                LOGGER.debug(\"GLSK Type B42, not empty registered resources list --> (explicit/manual) proportional GSK\");\n-                convertExplicitProportionalGlskPointToLinearGlskMap(network, glskShiftKey, linearGlskMap, typeGlskFile);\n-            } else if (glskShiftKey.getBusinessType().equals(\"B43\")) {\n-                LOGGER.debug(\"GLSK Type B43 --> participation factor proportional GSK\");\n-                if (glskShiftKey.getRegisteredResourceArrayList().isEmpty()) {\n-                    throw new FaraoException(\"Empty Registered Resources List in B43 type shift key.\");\n-                } else {\n-                    convertParticipationFactorGlskPointToLinearGlskMap(network, glskShiftKey, linearGlskMap, typeGlskFile);\n-                }\n-            } else {\n-                throw new FaraoException(\"convertGlskPointToLinearGlsk not supported\");\n-            }\n+                       LOGGER.debug(\"GLSK Type B42, not empty registered resources list --> (explicit/manual) proportional GSK\");\n+                       convertExplicitProportionalGlskPointToLinearGlskMap(network, glskShiftKey, linearGlskMap, typeGlskFile);\n+                   } else if (glskShiftKey.getBusinessType().equals(\"B43\")) {\n+                              LOGGER.debug(\"GLSK Type B43 --> participation factor proportional GSK\");\n+                              if (glskShiftKey.getRegisteredResourceArrayList().isEmpty()) {\n+                                  throw new FaraoException(\"Empty Registered Resources List in B43 type shift key.\");\n+                              } else {\n+                                  convertParticipationFactorGlskPointToLinearGlskMap(network, glskShiftKey, linearGlskMap, typeGlskFile);\n+                              }\n+                          } else {\n+                              throw new FaraoException(\"convertGlskPointToLinearGlsk not supported\");\n+                          }\n         }\n-\n         return new LinearGlsk(linearGlskId, linearGlskName, linearGlskMap);\n     }\n \n@@ -75,27 +74,46 @@ public class GlskPointLinearGlskConverter {\n      * @param glskShiftKey country type shiftkey\n      * @param linearGlskMap linearGlsk to be filled\n      */\n+\n     private void convertCountryProportionalGlskPointToLinearGlskMap(Network network, GlskShiftKey glskShiftKey, Map<String, Float> linearGlskMap) {\n         Country country = new EICode(glskShiftKey.getSubjectDomainmRID()).getCountry();\n         //Generator A04 or Load A05\n+\n         if (glskShiftKey.getPsrType().equals(\"A04\")) {\n             //Generator A04\n             //calculate sum P of country's generators\n-            double totalCountryP = network.getGeneratorStream().filter(generator -> generator.getTerminal().getVoltageLevel().getSubstation().getCountry().orElse(null).equals(country))\n-                    .mapToDouble(Generator::getTargetP).sum();\n+            double totalCountryP = network.getGeneratorStream().filter(generator -> generator.getTerminal().getVoltageLevel()\n+                                                                                                           .getSubstation()\n+                                                                                                           .getCountry()\n+                                                                                                           .orElse(null)\n+                                                                                                           .equals(country))\n+                                                               .mapToDouble(Generator::getTargetP)\n+                                                               .sum();\n             //calculate factor of each generator\n-            network.getGeneratorStream().filter(generator -> generator.getTerminal().getVoltageLevel().getSubstation().getCountry().orElse(null).equals(country))\n-                    .forEach(generator -> linearGlskMap.put(generator.getId(), glskShiftKey.getQuantity().floatValue() * (float) generator.getTargetP() / (float) totalCountryP));\n+            network.getGeneratorStream().filter(generator -> generator.getTerminal().getVoltageLevel()\n+                                                                                    .getSubstation()\n+                                                                                    .getCountry()\n+                                                                                    .orElse(null)\n+                                                                                    .equals(country)).forEach(generator -> linearGlskMap.put(generator.getId(), glskShiftKey.getQuantity().floatValue() * (float) generator.getTargetP() / (float) totalCountryP));\n         } else if (glskShiftKey.getPsrType().equals(\"A05\")) {\n             //Load A05\n-            double totalCountryLoad = network.getLoadStream().filter(load -> load.getTerminal().getVoltageLevel().getSubstation().getCountry().orElse(null).equals(country))\n-                    .mapToDouble(Load::getP0).sum();\n-            network.getLoadStream().filter(load -> load.getTerminal().getVoltageLevel().getSubstation().getCountry().orElse(null).equals(country))\n-                    .forEach(load -> linearGlskMap.put(load.getId(), glskShiftKey.getQuantity().floatValue() * (float) load.getP0() / (float) totalCountryLoad));\n-        } else {\n+                   double totalCountryLoad = network.getLoadStream().filter(load -> load.getTerminal().getVoltageLevel()\n+                                                                                                      .getSubstation()\n+                                                                                                      .getCountry()\n+                                                                                                      .orElse(null)\n+                                                                                                      .equals(country))\n+                                                                    .mapToDouble(Load::getP0)\n+                                                                    .sum();\n+                   network.getLoadStream().filter(load -> load.getTerminal().getVoltageLevel()\n+                                                                            .getSubstation()\n+                                                                            .getCountry()\n+                                                                            .orElse(null)\n+                                                                            .equals(country)).forEach(load -> linearGlskMap.put(load.getId(),\n+glskShiftKey.getQuantity().floatValue() * (float) load.getP0() / (float) totalCountryLoad));\n+               } else {\n             //unknown PsrType\n-            throw new FaraoException(\"convertCountryProportionalGlskPointToLinearGlskMap PsrType not supported\");\n-        }\n+                   throw new FaraoException(\"convertCountryProportionalGlskPointToLinearGlskMap PsrType not supported\");\n+               }\n     }\n \n     /**\n@@ -103,28 +121,32 @@ public class GlskPointLinearGlskConverter {\n      * @param glskShiftKey explicit type shiftkey\n      * @param linearGlskMap linearGlsk to be filled\n      */\n+\n     private void convertExplicitProportionalGlskPointToLinearGlskMap(Network network, GlskShiftKey glskShiftKey, Map<String, Float> linearGlskMap, TypeGlskFile typeGlskFile) {\n         //Generator A04 or Load A05\n         if (glskShiftKey.getPsrType().equals(\"A04\")) {\n             //Generator A04\n             List<String> generatorsList = glskShiftKey.getRegisteredResourceArrayList().stream()\n-                    .map(generatorResource -> generatorResource.getGeneratorId(typeGlskFile)).collect(Collectors.toList());\n+                                                                                       .map(generatorResource -> generatorResource.getGeneratorId(typeGlskFile))\n+                                                                                       .collect(Collectors.toList());\n             double totalP = network.getGeneratorStream().filter(generator -> generatorsList.contains(generator.getId()))\n-                    .mapToDouble(Generator::getTargetP).sum();\n-            network.getGeneratorStream().filter(generator -> generatorsList.contains(generator.getId()))\n-                    .forEach(generator -> linearGlskMap.put(generator.getId(), glskShiftKey.getQuantity().floatValue() * (float) generator.getTargetP() / (float) totalP));\n+                                                        .mapToDouble(Generator::getTargetP)\n+                                                        .sum();\n+            network.getGeneratorStream().filter(generator -> generatorsList.contains(generator.getId())).forEach(generator -> linearGlskMap.put(generator.getId(), glskShiftKey.getQuantity().floatValue() * (float) generator.getTargetP() / (float) totalP));\n         } else if (glskShiftKey.getPsrType().equals(\"A05\")) {\n             //Load A05\n-            List<String> loadsList = glskShiftKey.getRegisteredResourceArrayList().stream()\n-                    .map(loadResource -> loadResource.getLoadId(typeGlskFile)).collect(Collectors.toList());\n-            double totalLoad = network.getLoadStream().filter(load -> loadsList.contains(load.getId()))\n-                    .mapToDouble(Load::getP0).sum();\n-            network.getLoadStream().filter(load -> loadsList.contains(load.getId()))\n-                    .forEach(load -> linearGlskMap.put(load.getId(), glskShiftKey.getQuantity().floatValue() * (float) load.getP0() / (float) totalLoad));\n-        } else {\n+                   List<String> loadsList = glskShiftKey.getRegisteredResourceArrayList().stream()\n+                                                                                         .map(loadResource -> loadResource.getLoadId(typeGlskFile))\n+                                                                                         .collect(Collectors.toList());\n+                   double totalLoad = network.getLoadStream().filter(load -> loadsList.contains(load.getId()))\n+                                                             .mapToDouble(Load::getP0)\n+                                                             .sum();\n+                   network.getLoadStream().filter(load -> loadsList.contains(load.getId())).forEach(load -> linearGlskMap.put(load.getId(),\n+glskShiftKey.getQuantity().floatValue() * (float) load.getP0() / (float) totalLoad));\n+               } else {\n             //unknown PsrType\n-            throw new FaraoException(\"convertExplicitProportionalGlskPointToLinearGlskMap PsrType not supported\");\n-        }\n+                   throw new FaraoException(\"convertExplicitProportionalGlskPointToLinearGlskMap PsrType not supported\");\n+               }\n     }\n \n     /**\n@@ -132,29 +154,28 @@ public class GlskPointLinearGlskConverter {\n      * @param glskShiftKey parcitipation factor type shiftkey\n      * @param linearGlskMap linearGlsk to be filled\n      */\n+\n     private void convertParticipationFactorGlskPointToLinearGlskMap(Network network, GlskShiftKey glskShiftKey, Map<String, Float> linearGlskMap, TypeGlskFile typeGlskFile) {\n         //Generator A04 or Load A05\n         if (glskShiftKey.getPsrType().equals(\"A04\")) {\n             //Generator A04\n             List<GlskRegisteredResource> generatorsResourceList = glskShiftKey.getRegisteredResourceArrayList();\n             double totalFactor = glskShiftKey.getRegisteredResourceArrayList().stream()\n-                    .filter(generatorResource -> network.getGenerator(generatorResource.getGeneratorId(typeGlskFile)) != null)\n-                    .mapToDouble(GlskRegisteredResource::getParticipationFactor).sum();\n-\n-            generatorsResourceList.stream().filter(generatorResource -> network.getGenerator(generatorResource.getGeneratorId(typeGlskFile)) != null)\n-                    .forEach(generatorResource -> linearGlskMap.put(generatorResource.getmRID(), glskShiftKey.getQuantity().floatValue() * (float) generatorResource.getParticipationFactor() / (float) totalFactor));\n+                                                                              .filter(generatorResource -> network.getGenerator(generatorResource.getGeneratorId(typeGlskFile)) != null)\n+                                                                              .mapToDouble(GlskRegisteredResource::getParticipationFactor)\n+                                                                              .sum();\n+            generatorsResourceList.stream().filter(generatorResource -> network.getGenerator(generatorResource.getGeneratorId(typeGlskFile)) != null).forEach(generatorResource -> linearGlskMap.put(generatorResource.getmRID(), glskShiftKey.getQuantity().floatValue() * (float) generatorResource.getParticipationFactor() / (float) totalFactor));\n         } else if (glskShiftKey.getPsrType().equals(\"A05\")) {\n             //Load A05\n-            List<GlskRegisteredResource> loadsResourceList = glskShiftKey.getRegisteredResourceArrayList();\n-            double totalFactor = glskShiftKey.getRegisteredResourceArrayList().stream()\n-                    .filter(loadResource -> network.getLoad(loadResource.getLoadId(typeGlskFile)) != null)\n-                    .mapToDouble(GlskRegisteredResource::getParticipationFactor).sum();\n-\n-            loadsResourceList.stream().filter(loadResource -> network.getLoad(loadResource.getLoadId(typeGlskFile)) != null)\n-                    .forEach(loadResource -> linearGlskMap.put(loadResource.getmRID(), glskShiftKey.getQuantity().floatValue() * (float) loadResource.getParticipationFactor() / (float) totalFactor));\n-        } else {\n+                   List<GlskRegisteredResource> loadsResourceList = glskShiftKey.getRegisteredResourceArrayList();\n+                   double totalFactor = glskShiftKey.getRegisteredResourceArrayList().stream()\n+                                                                                     .filter(loadResource -> network.getLoad(loadResource.getLoadId(typeGlskFile)) != null)\n+                                                                                     .mapToDouble(GlskRegisteredResource::getParticipationFactor)\n+                                                                                     .sum();\n+                   loadsResourceList.stream().filter(loadResource -> network.getLoad(loadResource.getLoadId(typeGlskFile)) != null).forEach(loadResource -> linearGlskMap.put(loadResource.getmRID(), glskShiftKey.getQuantity().floatValue() * (float) loadResource.getParticipationFactor() / (float) totalFactor));\n+               } else {\n             //unknown PsrType\n-            throw new FaraoException(\"convertParticipationFactorGlskPointToLinearGlskMap PsrType not supported\");\n-        }\n+                   throw new FaraoException(\"convertParticipationFactorGlskPointToLinearGlskMap PsrType not supported\");\n+               }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 90
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/farao-community-farao-core/errored/1/47/GlskPointLinearGlskConverter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/farao-community-farao-core/styler_random/47/GlskPointLinearGlskConverter.java\nindex aa8cdfb0be0..c5683b2051a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/farao-community-farao-core/errored/1/47/GlskPointLinearGlskConverter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/farao-community-farao-core/styler_random/47/GlskPointLinearGlskConverter.java\n@@ -22,7 +22,6 @@ import java.util.Map;\n import java.util.Objects;\n import java.util.stream.Collectors;\n \n-\n /**\n  * Convert a single GlskPoint to LinearGlsk\n  * @author Pengbo Wang {@literal <pengbo.wang@rte-international.com>}\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/farao-community-farao-core/errored/1/47/GlskPointLinearGlskConverter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/farao-community-farao-core/styler_three_grams/47/GlskPointLinearGlskConverter.java\nindex aa8cdfb0be0..c5683b2051a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/farao-community-farao-core/errored/1/47/GlskPointLinearGlskConverter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/farao-community-farao-core/styler_three_grams/47/GlskPointLinearGlskConverter.java\n@@ -22,7 +22,6 @@ import java.util.Map;\n import java.util.Objects;\n import java.util.stream.Collectors;\n \n-\n /**\n  * Convert a single GlskPoint to LinearGlsk\n  * @author Pengbo Wang {@literal <pengbo.wang@rte-international.com>}\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "intellij",
        "codebuff"
    ]
}
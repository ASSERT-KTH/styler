{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2091",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "44",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "6",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "61",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "19",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2091/StoreScanChunk.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2091/StoreScanChunk.java\nindex 3aecc3b37cf..43c1b13af18 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2091/StoreScanChunk.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2091/StoreScanChunk.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.storemigration.participant;\n \n import java.io.IOException;\n@@ -33,67 +34,67 @@ import org.neo4j.unsafe.impl.batchimport.input.InputEntityVisitor;\n \n abstract class StoreScanChunk<T extends PrimitiveRecord> implements InputChunk\n {\n-    protected final StorePropertyCursor storePropertyCursor;\n-    protected final RecordCursors recordCursors;\n-    private final RecordCursor<T> cursor;\n-    private final boolean requiresPropertyMigration;\n-    private long id;\n-    private long endId;\n+  protected final StorePropertyCursor storePropertyCursor;\n+  protected final RecordCursors recordCursors;\n+  private final RecordCursor<T> cursor;\n+  private final boolean requiresPropertyMigration;\n+  private long id;\n+  private long endId;\n \n-    StoreScanChunk( RecordCursor<T> cursor, NeoStores neoStores, boolean requiresPropertyMigration )\n-    {\n-        this.cursor = cursor;\n-        this.recordCursors = new RecordCursors( neoStores );\n-        this.requiresPropertyMigration = requiresPropertyMigration;\n-        this.storePropertyCursor = new StorePropertyCursor( recordCursors, ignored -> {} );\n-    }\n+  StoreScanChunk(RecordCursor<T> cursor, NeoStores neoStores, boolean requiresPropertyMigration)\n+  {\n+    this.cursor = cursor;\n+    this.recordCursors = new RecordCursors(neoStores);\n+    this.requiresPropertyMigration = requiresPropertyMigration;\n+    this.storePropertyCursor = new StorePropertyCursor(recordCursors, ignored -> {\n+    });\n+  }\n \n-    void visitProperties( T record, InputEntityVisitor visitor )\n+  void visitProperties(T record, InputEntityVisitor visitor)\n+  {\n+    if (!requiresPropertyMigration)\n     {\n-        if ( !requiresPropertyMigration )\n-        {\n-            visitor.propertyId( record.getNextProp() );\n-        }\n-        else\n-        {\n-            storePropertyCursor.init( record.getNextProp(), LockService.NO_LOCK, AssertOpen.ALWAYS_OPEN );\n-            while ( storePropertyCursor.next() )\n-            {\n-                // add key as int here as to have the importer use the token id\n-                visitor.property( storePropertyCursor.propertyKeyId(), storePropertyCursor.value().asObject() );\n-            }\n-            storePropertyCursor.close();\n-        }\n-    }\n-\n-    @Override\n-    public void close()\n+      visitor.propertyId(record.getNextProp());\n+    } else\n     {\n-        recordCursors.close();\n-        cursor.close();\n+      storePropertyCursor.init(record.getNextProp(), LockService.NO_LOCK, AssertOpen.ALWAYS_OPEN);\n+      while (storePropertyCursor.next())\n+      {\n+        // add key as int here as to have the importer use the token id\n+        visitor.property(storePropertyCursor.propertyKeyId(), storePropertyCursor.value().asObject());\n+      }\n+      storePropertyCursor.close();\n     }\n+  }\n \n-    @Override\n-    public boolean next( InputEntityVisitor visitor ) throws IOException\n-    {\n-        if ( id < endId )\n-        {\n-            if ( cursor.next( id ) )\n-            {\n-                visitRecord( cursor.get(), visitor );\n-                visitor.endOfEntity();\n-            }\n-            id++;\n-            return true;\n-        }\n-        return false;\n-    }\n+  @Override\n+  public void close()\n+  {\n+    recordCursors.close();\n+    cursor.close();\n+  }\n \n-    public void initialize( long startId, long endId )\n+  @Override\n+  public boolean next(InputEntityVisitor visitor) throws IOException\n+  {\n+    if (id < endId)\n     {\n-        this.id = startId;\n-        this.endId = endId;\n+      if (cursor.next(id))\n+      {\n+        visitRecord(cursor.get(), visitor);\n+        visitor.endOfEntity();\n+      }\n+      id++;\n+      return true;\n     }\n+    return false;\n+  }\n+\n+  public void initialize(long startId, long endId)\n+  {\n+    this.id = startId;\n+    this.endId = endId;\n+  }\n \n-    abstract void visitRecord( T record, InputEntityVisitor visitor );\n+  abstract void visitRecord(T record, InputEntityVisitor visitor);\n }\n",
            "diff_size": 79
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2091/StoreScanChunk.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2091/StoreScanChunk.java\nindex 3aecc3b37cf..843fc08f0a6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2091/StoreScanChunk.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2091/StoreScanChunk.java\n@@ -96,4 +96,4 @@ abstract class StoreScanChunk<T extends PrimitiveRecord> implements InputChunk\n     }\n \n     abstract void visitRecord( T record, InputEntityVisitor visitor );\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
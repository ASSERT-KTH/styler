{
    "project_name": "findbugsproject-findbugs",
    "error_id": "21",
    "information": {
        "errors": [
            {
                "line": "17",
                "column": "1",
                "severity": "error",
                "message": "File contains tab characters (this is the first instance).",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
            }
        ]
    },
    "source_code": "public class Log\n{\n\t//If true will pop a window with the stackTrace in it.\n\t//If false will simply log onto logFile.\n\tprivate final static boolean DEBUG = true;\n\tprivate static File logFile;",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "18",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/21/Log.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/styler/21/Log.java\nindex 7b002f0afb0..f3bec8216e8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/21/Log.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/styler/21/Log.java\n@@ -14,7 +14,7 @@ import javax.swing.JOptionPane;\n  */\n public class Log\n {\n-\t//If true will pop a window with the stackTrace in it.\n+//If true will pop a window with the stackTrace in it. //If false will simply log onto logFile.\n \t//If false will simply log onto logFile.\n \tprivate final static boolean DEBUG = true;\n \tprivate static File logFile;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/21/Log.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/intellij/21/Log.java\nindex 7b002f0afb0..f5aaad4ac15 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/21/Log.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/intellij/21/Log.java\n@@ -9,50 +9,47 @@ import javax.swing.JOptionPane;\n /**\n  * Used to log any exceptions that are thrown. Can be used to log or debug.\n  * If debugging can use to pop a JOptionPane with the stackTrace.\n- * @author Kristin Stephens\n  *\n+ * @author Kristin Stephens\n  */\n-public class Log\n-{\n-\t//If true will pop a window with the stackTrace in it.\n-\t//If false will simply log onto logFile.\n-\tprivate final static boolean DEBUG = true;\n-\tprivate static File logFile;\n+public class Log {\n+    //If true will pop a window with the stackTrace in it.\n+    //If false will simply log onto logFile.\n+    private final static boolean DEBUG = true;\n+    private static File logFile;\n \n-\t/**\n-\t * Set where Log will log any exceptions.\n-\t * @param logFile\n-\t */\n-\tstatic void setPath(File logFile)\n-\t{\n-\t\tLog.logFile = logFile;\n-\t}\n+    /**\n+     * Set where Log will log any exceptions.\n+     *\n+     * @param logFile\n+     */\n+    static void setPath(File logFile) {\n+        Log.logFile = logFile;\n+    }\n \n-\t/**\n-\t * Takes the exception and dependi on DEBUG either posts onto a dialog box\n-\t * or will record it for later use.\n-\t * \n-\t * @param e\n-\t */\n-\tstatic void recordBug(Exception e)\n-\t{\n-\t\tStringBuffer msg = new StringBuffer();\n-\t\tmsg.append(e.getClass().getName() + \": \" + e.getMessage() + \"\\n\");\n-\t\tfor (StackTraceElement i : e.getStackTrace())\n-\t\t\tmsg.append(i + \"\\n\");\n+    /**\n+     * Takes the exception and dependi on DEBUG either posts onto a dialog box\n+     * or will record it for later use.\n+     *\n+     * @param e\n+     */\n+    static void recordBug(Exception e) {\n+        StringBuffer msg = new StringBuffer();\n+        msg.append(e.getClass().getName() + \": \" + e.getMessage() + \"\\n\");\n+        for (StackTraceElement i : e.getStackTrace()) {\n+            msg.append(i + \"\\n\");\n+        }\n \n-\t\tif (DEBUG)\n-\t\t\tJOptionPane.showMessageDialog(null, msg);\n-\t\telse\n-\t\t{\n-\t\t\ttry\n-\t\t\t{\n-\t\t\t\tlogFile.createNewFile();\n-\t\t\t\tPrintWriter pw = new PrintWriter(new FileOutputStream(logFile));\n-\t\t\t\tpw.println(msg);\n-\t\t\t\tpw.close();\n-\t\t\t}\n-\t\t\tcatch (IOException ohWell) {}\n-\t\t}\n-\t}\n+        if (DEBUG) {\n+            JOptionPane.showMessageDialog(null, msg);\n+        } else {\n+            try {\n+                logFile.createNewFile();\n+                PrintWriter pw = new PrintWriter(new FileOutputStream(logFile));\n+                pw.println(msg);\n+                pw.close();\n+            } catch (IOException ohWell) {\n+            }\n+        }\n+    }\n }\n",
            "diff_size": 42
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "17",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/21/Log.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/naturalize/21/Log.java\nindex 7b002f0afb0..d20c0a9abd0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/21/Log.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/naturalize/21/Log.java\n@@ -12,9 +12,8 @@ import javax.swing.JOptionPane;\n  * @author Kristin Stephens\n  *\n  */\n-public class Log\n-{\n-\t//If true will pop a window with the stackTrace in it.\n+public class Log {\n+    //If true will pop a window with the stackTrace in it.\n \t//If false will simply log onto logFile.\n \tprivate final static boolean DEBUG = true;\n \tprivate static File logFile;\n@@ -23,10 +22,9 @@ public class Log\n \t * Set where Log will log any exceptions.\n \t * @param logFile\n \t */\n-\tstatic void setPath(File logFile)\n-\t{\n-\t\tLog.logFile = logFile;\n-\t}\n+\tstatic void setPath(File logFile) {\n+   Log.logFile = logFile;\n+    }\n \n \t/**\n \t * Takes the exception and dependi on DEBUG either posts onto a dialog box\n@@ -34,25 +32,20 @@ public class Log\n \t * \n \t * @param e\n \t */\n-\tstatic void recordBug(Exception e)\n-\t{\n-\t\tStringBuffer msg = new StringBuffer();\n+\tstatic void recordBug(Exception e) {\n+   StringBuffer msg = new StringBuffer();\n \t\tmsg.append(e.getClass().getName() + \": \" + e.getMessage() + \"\\n\");\n \t\tfor (StackTraceElement i : e.getStackTrace())\n-\t\t\tmsg.append(i + \"\\n\");\n-\n-\t\tif (DEBUG)\n-\t\t\tJOptionPane.showMessageDialog(null, msg);\n-\t\telse\n-\t\t{\n-\t\t\ttry\n-\t\t\t{\n-\t\t\t\tlogFile.createNewFile();\n+    msg.append(i + \"\\n\");\n+if (DEBUG)\n+    JOptionPane.showMessageDialog(null, msg);\n+    else {\n+    try {\n+    logFile.createNewFile();\n \t\t\t\tPrintWriter pw = new PrintWriter(new FileOutputStream(logFile));\n \t\t\t\tpw.println(msg);\n \t\t\t\tpw.close();\n-\t\t\t}\n-\t\t\tcatch (IOException ohWell) {}\n-\t\t}\n-\t}\n-}\n+    }\n+\t\t\tcatch (IOException ohWell) {} }\n+    }\n+    }\n\\ No newline at end of file\n",
            "diff_size": 24
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/21/Log.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/codebuff/21/Log.java\nindex 7b002f0afb0..550d863e3f5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/21/Log.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/codebuff/21/Log.java\n@@ -12,47 +12,46 @@ import javax.swing.JOptionPane;\n  * @author Kristin Stephens\n  *\n  */\n-public class Log\n-{\n-\t//If true will pop a window with the stackTrace in it.\n-\t//If false will simply log onto logFile.\n-\tprivate final static boolean DEBUG = true;\n-\tprivate static File logFile;\n-\n-\t/**\n-\t * Set where Log will log any exceptions.\n-\t * @param logFile\n-\t */\n-\tstatic void setPath(File logFile)\n-\t{\n-\t\tLog.logFile = logFile;\n-\t}\n-\n-\t/**\n-\t * Takes the exception and dependi on DEBUG either posts onto a dialog box\n-\t * or will record it for later use.\n-\t * \n-\t * @param e\n-\t */\n-\tstatic void recordBug(Exception e)\n-\t{\n-\t\tStringBuffer msg = new StringBuffer();\n-\t\tmsg.append(e.getClass().getName() + \": \" + e.getMessage() + \"\\n\");\n-\t\tfor (StackTraceElement i : e.getStackTrace())\n-\t\t\tmsg.append(i + \"\\n\");\n-\n-\t\tif (DEBUG)\n-\t\t\tJOptionPane.showMessageDialog(null, msg);\n-\t\telse\n-\t\t{\n-\t\t\ttry\n-\t\t\t{\n-\t\t\t\tlogFile.createNewFile();\n-\t\t\t\tPrintWriter pw = new PrintWriter(new FileOutputStream(logFile));\n-\t\t\t\tpw.println(msg);\n-\t\t\t\tpw.close();\n-\t\t\t}\n-\t\t\tcatch (IOException ohWell) {}\n-\t\t}\n-\t}\n-}\n+\n+public class Log {\n+    //If true will pop a window with the stackTrace in it.\n+    //If false will simply log onto logFile.\n+    private final static boolean DEBUG = true;\n+\n+    private static File logFile;\n+\n+    /**\n+     * Set where Log will log any exceptions.\n+     * @param logFile\n+     */\n+\n+    static void setPath(File logFile) {\n+        Log.logFile = logFile;\n+    }\n+\n+    /**\n+     * Takes the exception and dependi on DEBUG either posts onto a dialog box\n+     * or will record it for later use.\n+     * \n+     * @param e\n+     */\n+\n+    static void recordBug(Exception e) {\n+        StringBuffer msg = new StringBuffer();\n+        msg.append(e.getClass().getName() + \": \" + e.getMessage() + \"\\n\");\n+        for (StackTraceElement i : e.getStackTrace())\n+            msg.append(i + \"\\n\");\n+        if (DEBUG)\n+            JOptionPane.showMessageDialog(null, msg);\n+        else {\n+            try {\n+                logFile.createNewFile();\n+                PrintWriter pw = new PrintWriter(new FileOutputStream(logFile));\n+                pw.println(msg);\n+                pw.close();\n+            } catch (IOException ohWell) {\n+\n+            }\n+        }\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 44
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "18",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/21/Log.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/styler_random/21/Log.java\nindex 7b002f0afb0..f3bec8216e8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/21/Log.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/styler_random/21/Log.java\n@@ -14,7 +14,7 @@ import javax.swing.JOptionPane;\n  */\n public class Log\n {\n-\t//If true will pop a window with the stackTrace in it.\n+//If true will pop a window with the stackTrace in it. //If false will simply log onto logFile.\n \t//If false will simply log onto logFile.\n \tprivate final static boolean DEBUG = true;\n \tprivate static File logFile;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": null,
            "diff": null
        }
    ],
    "repaired_by": [
        "intellij",
        "codebuff"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1976",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "54",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "79",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "83",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "15",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "17",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1976/EntryRecordCursor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1976/EntryRecordCursor.java\nindex 44d677b6533..4cfb6071089 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1976/EntryRecordCursor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1976/EntryRecordCursor.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering.core.consensus.log.segmented;\n \n import java.io.IOException;\n@@ -39,88 +40,85 @@ import static org.neo4j.causalclustering.core.consensus.log.EntryRecord.read;\n  */\n class EntryRecordCursor implements IOCursor<EntryRecord>\n {\n-    private ReadAheadChannel<StoreChannel> bufferedReader;\n+  private ReadAheadChannel<StoreChannel> bufferedReader;\n+\n+  private final LogPosition position;\n+  private final CursorValue<EntryRecord> currentRecord = new CursorValue<>();\n+  private final Reader reader;\n+  private ChannelMarshal<ReplicatedContent> contentMarshal;\n+  private final SegmentFile segment;\n \n-    private final LogPosition position;\n-    private final CursorValue<EntryRecord> currentRecord = new CursorValue<>();\n-    private final Reader reader;\n-    private ChannelMarshal<ReplicatedContent> contentMarshal;\n-    private final SegmentFile segment;\n+  private boolean hadError;\n+  private boolean closed;\n \n-    private boolean hadError;\n-    private boolean closed;\n+  EntryRecordCursor(Reader reader, ChannelMarshal<ReplicatedContent> contentMarshal,\n+                    long currentIndex, long wantedIndex, SegmentFile segment) throws IOException, EndOfStreamException\n+  {\n+    this.bufferedReader = new ReadAheadChannel<>(reader.channel());\n+    this.reader = reader;\n+    this.contentMarshal = contentMarshal;\n+    this.segment = segment;\n \n-    EntryRecordCursor( Reader reader, ChannelMarshal<ReplicatedContent> contentMarshal,\n-            long currentIndex, long wantedIndex, SegmentFile segment ) throws IOException, EndOfStreamException\n+    /* The cache lookup might have given us an earlier position, scan forward to the exact position. */\n+    while (currentIndex < wantedIndex)\n     {\n-        this.bufferedReader = new ReadAheadChannel<>( reader.channel() );\n-        this.reader = reader;\n-        this.contentMarshal = contentMarshal;\n-        this.segment = segment;\n-\n-        /* The cache lookup might have given us an earlier position, scan forward to the exact position. */\n-        while ( currentIndex < wantedIndex )\n-        {\n-            read( bufferedReader, contentMarshal );\n-            currentIndex++;\n-        }\n-\n-        this.position = new LogPosition( currentIndex, bufferedReader.position() );\n+      read(bufferedReader, contentMarshal);\n+      currentIndex++;\n     }\n \n-    @Override\n-    public boolean next() throws IOException\n+    this.position = new LogPosition(currentIndex, bufferedReader.position());\n+  }\n+\n+  @Override\n+  public boolean next() throws IOException\n+  {\n+    EntryRecord entryRecord;\n+    try\n+    {\n+      entryRecord = read(bufferedReader, contentMarshal);\n+    } catch (EndOfStreamException e)\n+    {\n+      currentRecord.invalidate();\n+      return false;\n+    } catch (IOException e)\n     {\n-        EntryRecord entryRecord;\n-        try\n-        {\n-            entryRecord = read( bufferedReader, contentMarshal );\n-        }\n-        catch ( EndOfStreamException e )\n-        {\n-            currentRecord.invalidate();\n-            return false;\n-        }\n-        catch ( IOException e )\n-        {\n-            hadError = true;\n-            throw e;\n-        }\n-\n-        currentRecord.set( entryRecord );\n-        position.byteOffset = bufferedReader.position();\n-        position.logIndex++;\n-        return true;\n+      hadError = true;\n+      throw e;\n     }\n \n-    @Override\n-    public void close() throws IOException\n+    currentRecord.set(entryRecord);\n+    position.byteOffset = bufferedReader.position();\n+    position.logIndex++;\n+    return true;\n+  }\n+\n+  @Override\n+  public void close() throws IOException\n+  {\n+    if (closed)\n     {\n-        if ( closed )\n-        {\n-            /* This is just a defensive measure, for catching user errors from messing up the refCount. */\n-            throw new IllegalStateException( \"Already closed\" );\n-        }\n-\n-        bufferedReader = null;\n-        closed = true;\n-        segment.refCount().decrease();\n-\n-        if ( hadError )\n-        {\n-            /* If the reader had en error, then it should be closed instead of returned to the pool. */\n-            reader.close();\n-        }\n-        else\n-        {\n-            segment.positionCache().put( position );\n-            segment.readerPool().release( reader );\n-        }\n+      /* This is just a defensive measure, for catching user errors from messing up the refCount. */\n+      throw new IllegalStateException(\"Already closed\");\n     }\n \n-    @Override\n-    public EntryRecord get()\n+    bufferedReader = null;\n+    closed = true;\n+    segment.refCount().decrease();\n+\n+    if (hadError)\n     {\n-        return currentRecord.get();\n+      /* If the reader had en error, then it should be closed instead of returned to the pool. */\n+      reader.close();\n+    } else\n+    {\n+      segment.positionCache().put(position);\n+      segment.readerPool().release(reader);\n     }\n+  }\n+\n+  @Override\n+  public EntryRecord get()\n+  {\n+    return currentRecord.get();\n+  }\n }\n",
            "diff_size": 118
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1976/EntryRecordCursor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1976/EntryRecordCursor.java\nindex 44d677b6533..0d3dcbf92c7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1976/EntryRecordCursor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1976/EntryRecordCursor.java\n@@ -52,7 +52,7 @@ class EntryRecordCursor implements IOCursor<EntryRecord>\n \n     EntryRecordCursor( Reader reader, ChannelMarshal<ReplicatedContent> contentMarshal,\n             long currentIndex, long wantedIndex, SegmentFile segment ) throws IOException, EndOfStreamException\n-    {\n+{\n         this.bufferedReader = new ReadAheadChannel<>( reader.channel() );\n         this.reader = reader;\n         this.contentMarshal = contentMarshal;\n@@ -105,8 +105,7 @@ class EntryRecordCursor implements IOCursor<EntryRecord>\n         bufferedReader = null;\n         closed = true;\n         segment.refCount().decrease();\n-\n-        if ( hadError )\n+if ( hadError )\n         {\n             /* If the reader had en error, then it should be closed instead of returned to the pool. */\n             reader.close();\n@@ -123,4 +122,4 @@ class EntryRecordCursor implements IOCursor<EntryRecord>\n     {\n         return currentRecord.get();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
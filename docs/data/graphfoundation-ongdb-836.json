{
    "project_name": "graphfoundation-ongdb",
    "error_id": "836",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "42",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "78",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/836/NonTransactionalTokenNameLookup.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/836/NonTransactionalTokenNameLookup.java\nindex 8ae597676cb..6fb4b90a158 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/836/NonTransactionalTokenNameLookup.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/836/NonTransactionalTokenNameLookup.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.api;\n \n import org.neo4j.internal.kernel.api.TokenNameLookup;\n@@ -34,51 +35,50 @@ import static java.lang.String.format;\n  */\n public class NonTransactionalTokenNameLookup implements TokenNameLookup\n {\n-    private final LabelTokenHolder labelTokenHolder;\n-    private final RelationshipTypeTokenHolder relationshipTypeTokenHolder;\n-    private final PropertyKeyTokenHolder propertyKeyTokenHolder;\n+  private final LabelTokenHolder labelTokenHolder;\n+  private final RelationshipTypeTokenHolder relationshipTypeTokenHolder;\n+  private final PropertyKeyTokenHolder propertyKeyTokenHolder;\n \n-    public NonTransactionalTokenNameLookup( LabelTokenHolder labelTokenHolder,\n-            RelationshipTypeTokenHolder relationshipTypeTokenHolder,\n-            PropertyKeyTokenHolder propertyKeyTokenHolder )\n-    {\n-        this.labelTokenHolder = labelTokenHolder;\n-        this.relationshipTypeTokenHolder = relationshipTypeTokenHolder;\n-        this.propertyKeyTokenHolder = propertyKeyTokenHolder;\n-    }\n+  public NonTransactionalTokenNameLookup(LabelTokenHolder labelTokenHolder,\n+                                         RelationshipTypeTokenHolder relationshipTypeTokenHolder,\n+                                         PropertyKeyTokenHolder propertyKeyTokenHolder)\n+  {\n+    this.labelTokenHolder = labelTokenHolder;\n+    this.relationshipTypeTokenHolder = relationshipTypeTokenHolder;\n+    this.propertyKeyTokenHolder = propertyKeyTokenHolder;\n+  }\n \n-    @Override\n-    public String labelGetName( int labelId )\n-    {\n-        return tokenById( labelTokenHolder, labelId, \"label\" );\n-    }\n+  @Override\n+  public String labelGetName(int labelId)\n+  {\n+    return tokenById(labelTokenHolder, labelId, \"label\");\n+  }\n \n-    @Override\n-    public String relationshipTypeGetName( int relTypeId )\n-    {\n-        return tokenById( relationshipTypeTokenHolder, relTypeId, \"relationshipType\" );\n-    }\n+  @Override\n+  public String relationshipTypeGetName(int relTypeId)\n+  {\n+    return tokenById(relationshipTypeTokenHolder, relTypeId, \"relationshipType\");\n+  }\n \n-    @Override\n-    public String propertyKeyGetName( int propertyKeyId )\n-    {\n-        return tokenById( propertyKeyTokenHolder, propertyKeyId, \"property\" );\n-    }\n+  @Override\n+  public String propertyKeyGetName(int propertyKeyId)\n+  {\n+    return tokenById(propertyKeyTokenHolder, propertyKeyId, \"property\");\n+  }\n \n-    private static String tokenById( TokenHolder tokenHolder, int tokenId, String tokenName )\n+  private static String tokenById(TokenHolder tokenHolder, int tokenId, String tokenName)\n+  {\n+    try\n+    {\n+      Token token = tokenHolder.getTokenByIdOrNull(tokenId);\n+      if (token != null)\n+      {\n+        return token.name();\n+      }\n+    } catch (RuntimeException e)\n     {\n-        try\n-        {\n-            Token token = tokenHolder.getTokenByIdOrNull( tokenId );\n-            if ( token != null )\n-            {\n-                return token.name();\n-            }\n-        }\n-        catch ( RuntimeException e )\n-        {\n-            // Ignore errors from reading key\n-        }\n-        return format( \"%s[%d]\", tokenName, tokenId );\n+      // Ignore errors from reading key\n     }\n+    return format(\"%s[%d]\", tokenName, tokenId);\n+  }\n }\n",
            "diff_size": 52
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/836/NonTransactionalTokenNameLookup.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/836/NonTransactionalTokenNameLookup.java\nindex 8ae597676cb..5e803e7d019 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/836/NonTransactionalTokenNameLookup.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/836/NonTransactionalTokenNameLookup.java\n@@ -79,6 +79,7 @@ public class NonTransactionalTokenNameLookup implements TokenNameLookup\n         {\n             // Ignore errors from reading key\n         }\n-        return format( \"%s[%d]\", tokenName, tokenId );\n+\n+return format( \"%s[%d]\", tokenName, tokenId );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "neo4j-neo4j",
    "error_id": "2039",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "43",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2039/BoltConnectionInfo.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2039/BoltConnectionInfo.java\nindex e213c16020c..0dec22459c8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2039/BoltConnectionInfo.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2039/BoltConnectionInfo.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.query.clientconnection;\n \n import java.net.SocketAddress;\n@@ -36,10 +37,10 @@ public class BoltConnectionInfo extends ClientConnectionInfo\n     private final SocketAddress serverAddress;\n \n     public BoltConnectionInfo(\n-            String connectionId,\n-            String clientName,\n-            SocketAddress clientAddress,\n-            SocketAddress serverAddress )\n+      String connectionId,\n+      String clientName,\n+      SocketAddress clientAddress,\n+      SocketAddress serverAddress)\n     {\n         this.connectionId = connectionId;\n         this.clientName = clientName;\n@@ -51,10 +52,10 @@ public class BoltConnectionInfo extends ClientConnectionInfo\n     public String asConnectionDetails()\n     {\n         return String.format(\n-                \"bolt-session\\tbolt\\t%s\\t\\tclient%s\\tserver%s>\",\n-                clientName,\n-                clientAddress,\n-                serverAddress );\n+          \"bolt-session\\tbolt\\t%s\\t\\tclient%s\\tserver%s>\",\n+          clientName,\n+          clientAddress,\n+          serverAddress);\n     }\n \n     @Override\n@@ -72,12 +73,12 @@ public class BoltConnectionInfo extends ClientConnectionInfo\n     @Override\n     public String clientAddress()\n     {\n-        return format( clientAddress );\n+        return format(clientAddress);\n     }\n \n     @Override\n     public String requestURI()\n     {\n-        return format( serverAddress );\n+        return format(serverAddress);\n     }\n }\n",
            "diff_size": 11
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
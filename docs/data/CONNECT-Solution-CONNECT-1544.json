{
    "project_name": "CONNECT-Solution-CONNECT",
    "error_id": "1544",
    "information": {
        "errors": [
            {
                "line": "27",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\npackage gov.hhs.fha.nhinc.async;\n\nimport javax.xml.parsers.DocumentBuilderFactory;\nimport javax.xml.parsers.ParserConfigurationException;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1544/ElementBuilder.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler/1544/ElementBuilder.java\nindex d45891bcb8f..d59a1a658db 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1544/ElementBuilder.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler/1544/ElementBuilder.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.async;\n \n import javax.xml.parsers.DocumentBuilderFactory;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1544/ElementBuilder.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/intellij/1544/ElementBuilder.java\nindex d45891bcb8f..2e0f500e1e1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1544/ElementBuilder.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/intellij/1544/ElementBuilder.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.async;\n \n import javax.xml.parsers.DocumentBuilderFactory;\n@@ -36,70 +37,69 @@ import org.w3c.dom.Element;\n \n /**\n  * @author bhumphrey\n- *\n  */\n public final class ElementBuilder {\n \n-    private static final Logger LOG = LoggerFactory.getLogger(ElementBuilder.class);\n-\n-    private Document document;\n-\n-    private ElementBuilder() {\n-        try {\n-            document = DocumentBuilderFactory.newInstance().newDocumentBuilder().newDocument();\n-        } catch (ParserConfigurationException e) {\n-            LOG.error(\"Unable to create document: {}\" + e.getLocalizedMessage(), e);\n-        }\n-    }\n+  private static final Logger LOG = LoggerFactory.getLogger(ElementBuilder.class);\n \n-    /**\n-     * @param ns - The Namespace\n-     * @param name - The Name\n-     * @return built element\n-     */\n-    public Element buildElement(final String ns, final String name) {\n+  private Document document;\n \n-        return buildElement(ns, name, null, null);\n+  private ElementBuilder() {\n+    try {\n+      document = DocumentBuilderFactory.newInstance().newDocumentBuilder().newDocument();\n+    } catch (ParserConfigurationException e) {\n+      LOG.error(\"Unable to create document: {}\" + e.getLocalizedMessage(), e);\n     }\n-\n-    /**\n-     * @param ns Namespace\n-     * @param name Name\n-     * @param content Content\n-     * @return built element\n-     */\n-    public Element buildElement(final String ns, final String name, final String content) {\n-\n-        return buildElement(ns, name, content, null);\n-    }\n-\n-    /**\n-     * @param ns Namespace\n-     * @param name Name\n-     * @param content Content\n-     * @param mustUnderstand mustUnderstand, true or false\n-     * @return built element\n-     */\n-    public Element buildElement(final String ns, final String name, final String content, Boolean mustUnderstand) {\n-\n-        Element theElement = null;\n-        theElement = document.createElementNS(ns, name);\n-\n-        if (content != null) {\n-            theElement.setTextContent(content);\n-        }\n-\n-        if (mustUnderstand != null) {\n-            theElement.setAttribute(\"mustUnderstand\", mustUnderstand.toString());\n-        }\n-        return theElement;\n+  }\n+\n+  /**\n+   * @param ns   - The Namespace\n+   * @param name - The Name\n+   * @return built element\n+   */\n+  public Element buildElement(final String ns, final String name) {\n+\n+    return buildElement(ns, name, null, null);\n+  }\n+\n+  /**\n+   * @param ns      Namespace\n+   * @param name    Name\n+   * @param content Content\n+   * @return built element\n+   */\n+  public Element buildElement(final String ns, final String name, final String content) {\n+\n+    return buildElement(ns, name, content, null);\n+  }\n+\n+  /**\n+   * @param ns             Namespace\n+   * @param name           Name\n+   * @param content        Content\n+   * @param mustUnderstand mustUnderstand, true or false\n+   * @return built element\n+   */\n+  public Element buildElement(final String ns, final String name, final String content, Boolean mustUnderstand) {\n+\n+    Element theElement = null;\n+    theElement = document.createElementNS(ns, name);\n+\n+    if (content != null) {\n+      theElement.setTextContent(content);\n     }\n \n-    /**\n-     * @return A new instance of ElementBuilder.\n-     */\n-    public static ElementBuilder newInstance() {\n-        return new ElementBuilder();\n+    if (mustUnderstand != null) {\n+      theElement.setAttribute(\"mustUnderstand\", mustUnderstand.toString());\n     }\n+    return theElement;\n+  }\n+\n+  /**\n+   * @return A new instance of ElementBuilder.\n+   */\n+  public static ElementBuilder newInstance() {\n+    return new ElementBuilder();\n+  }\n \n }\n",
            "diff_size": 75
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1544/ElementBuilder.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/naturalize/1544/ElementBuilder.java\nindex d45891bcb8f..ef91d4d2711 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1544/ElementBuilder.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/naturalize/1544/ElementBuilder.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.async;\n \n import javax.xml.parsers.DocumentBuilderFactory;\n@@ -58,8 +59,7 @@ public final class ElementBuilder {\n      * @return built element\n      */\n     public Element buildElement(final String ns, final String name) {\n-\n-        return buildElement(ns, name, null, null);\n+    return buildElement(ns, name, null, null);\n     }\n \n     /**\n@@ -69,8 +69,7 @@ public final class ElementBuilder {\n      * @return built element\n      */\n     public Element buildElement(final String ns, final String name, final String content) {\n-\n-        return buildElement(ns, name, content, null);\n+    return buildElement(ns, name, content, null);\n     }\n \n     /**\n@@ -84,14 +83,14 @@ public final class ElementBuilder {\n \n         Element theElement = null;\n         theElement = document.createElementNS(ns, name);\n-\n-        if (content != null) {\n+if (content != null) {\n             theElement.setTextContent(content);\n         }\n \n         if (mustUnderstand != null) {\n             theElement.setAttribute(\"mustUnderstand\", mustUnderstand.toString());\n-        }\n+\n+    }\n         return theElement;\n     }\n \n@@ -102,4 +101,4 @@ public final class ElementBuilder {\n         return new ElementBuilder();\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 10
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "46",
                    "severity": "error",
                    "message": "'CTOR_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1544/ElementBuilder.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/codebuff/1544/ElementBuilder.java\nindex d45891bcb8f..487c16b5bc1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1544/ElementBuilder.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/codebuff/1544/ElementBuilder.java\n@@ -28,7 +28,6 @@ package gov.hhs.fha.nhinc.async;\n \n import javax.xml.parsers.DocumentBuilderFactory;\n import javax.xml.parsers.ParserConfigurationException;\n-\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.w3c.dom.Document;\n@@ -38,12 +37,12 @@ import org.w3c.dom.Element;\n  * @author bhumphrey\n  *\n  */\n+\n+\n public final class ElementBuilder {\n \n     private static final Logger LOG = LoggerFactory.getLogger(ElementBuilder.class);\n-\n     private Document document;\n-\n     private ElementBuilder() {\n         try {\n             document = DocumentBuilderFactory.newInstance().newDocumentBuilder().newDocument();\n@@ -57,8 +56,9 @@ public final class ElementBuilder {\n      * @param name - The Name\n      * @return built element\n      */\n-    public Element buildElement(final String ns, final String name) {\n \n+\n+    public Element buildElement(final String ns, final String name) {\n         return buildElement(ns, name, null, null);\n     }\n \n@@ -68,8 +68,10 @@ public final class ElementBuilder {\n      * @param content Content\n      * @return built element\n      */\n-    public Element buildElement(final String ns, final String name, final String content) {\n \n+\n+    public Element buildElement(final String ns,\n+        final String name, final String content) {\n         return buildElement(ns, name, content, null);\n     }\n \n@@ -80,15 +82,16 @@ public final class ElementBuilder {\n      * @param mustUnderstand mustUnderstand, true or false\n      * @return built element\n      */\n-    public Element buildElement(final String ns, final String name, final String content, Boolean mustUnderstand) {\n \n+\n+    public Element buildElement(final String ns,\n+        final String name,\n+        final String content, Boolean mustUnderstand) {\n         Element theElement = null;\n         theElement = document.createElementNS(ns, name);\n-\n         if (content != null) {\n             theElement.setTextContent(content);\n         }\n-\n         if (mustUnderstand != null) {\n             theElement.setAttribute(\"mustUnderstand\", mustUnderstand.toString());\n         }\n@@ -98,8 +101,10 @@ public final class ElementBuilder {\n     /**\n      * @return A new instance of ElementBuilder.\n      */\n+\n+\n     public static ElementBuilder newInstance() {\n         return new ElementBuilder();\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 22
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1544/ElementBuilder.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_three_grams/1544/ElementBuilder.java\nindex d45891bcb8f..d59a1a658db 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1544/ElementBuilder.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_three_grams/1544/ElementBuilder.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.async;\n \n import javax.xml.parsers.DocumentBuilderFactory;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "codebuff",
        "styler_random"
    ]
}
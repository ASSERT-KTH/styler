{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2161",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "35",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "35",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2161/LabelScanViewIdIterator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2161/LabelScanViewIdIterator.java\nindex bc60f4fc925..2c1eee01545 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2161/LabelScanViewIdIterator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2161/LabelScanViewIdIterator.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.transaction.state.storeview;\n \n import org.neo4j.collection.primitive.PrimitiveLongIterator;\n@@ -28,30 +29,30 @@ import org.neo4j.storageengine.api.schema.LabelScanReader;\n  */\n class LabelScanViewIdIterator implements PrimitiveLongResourceIterator\n {\n-    private LabelScanReader labelScanReader;\n-    private PrimitiveLongIterator idIterator;\n+  private LabelScanReader labelScanReader;\n+  private PrimitiveLongIterator idIterator;\n \n-    LabelScanViewIdIterator( LabelScanReader labelScanReader, int[] labelIds )\n-    {\n-        this.labelScanReader = labelScanReader;\n-        this.idIterator = labelScanReader.nodesWithAnyOfLabels( labelIds );\n-    }\n+  LabelScanViewIdIterator(LabelScanReader labelScanReader, int[] labelIds)\n+  {\n+    this.labelScanReader = labelScanReader;\n+    this.idIterator = labelScanReader.nodesWithAnyOfLabels(labelIds);\n+  }\n \n-    @Override\n-    public void close()\n-    {\n-        labelScanReader.close();\n-    }\n+  @Override\n+  public void close()\n+  {\n+    labelScanReader.close();\n+  }\n \n-    @Override\n-    public boolean hasNext()\n-    {\n-        return idIterator.hasNext();\n-    }\n+  @Override\n+  public boolean hasNext()\n+  {\n+    return idIterator.hasNext();\n+  }\n \n-    @Override\n-    public long next()\n-    {\n-        return idIterator.next();\n-    }\n+  @Override\n+  public long next()\n+  {\n+    return idIterator.next();\n+  }\n }\n",
            "diff_size": 23
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2161/LabelScanViewIdIterator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2161/LabelScanViewIdIterator.java\nindex bc60f4fc925..6c57bc4f4ad 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2161/LabelScanViewIdIterator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2161/LabelScanViewIdIterator.java\n@@ -54,4 +54,4 @@ class LabelScanViewIdIterator implements PrimitiveLongResourceIterator\n     {\n         return idIterator.next();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
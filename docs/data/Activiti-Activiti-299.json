{
    "project_name": "Activiti-Activiti",
    "error_id": "299",
    "information": {
        "errors": [
            {
                "line": "16",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * limitations under the License.\n */\npackage org.activiti.runtime.api.event.impl;\n\nimport java.util.Optional;\n",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/299/StartMessageSubscriptionConverter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler/299/StartMessageSubscriptionConverter.java\nindex b9ae18d3154..12a983e6a64 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/299/StartMessageSubscriptionConverter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler/299/StartMessageSubscriptionConverter.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.runtime.api.event.impl;\n \n import java.util.Optional;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/299/StartMessageSubscriptionConverter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/intellij/299/StartMessageSubscriptionConverter.java\nindex b9ae18d3154..840b09eb119 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/299/StartMessageSubscriptionConverter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/intellij/299/StartMessageSubscriptionConverter.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.runtime.api.event.impl;\n \n import java.util.Optional;\n@@ -25,15 +26,15 @@ public class StartMessageSubscriptionConverter {\n     public StartMessageSubscriptionImpl convertToStartMessageSubscription(MessageEventSubscriptionEntity messageEventSubscriptionEntity) {\n \n         return Optional.of(messageEventSubscriptionEntity)\n-                       .map(entity -> StartMessageSubscriptionImpl.builder()\n-                                                                       .withId(entity.getId())\n-                                                                       .withEventName(entity.getEventName())\n-                                                                       .withProcessDefinitionId(entity.getProcessDefinitionId())\n-                                                                       .withConfiguration(entity.getConfiguration())\n-                                                                       .withActivityId(entity.getActivityId())\n-                                                                       .withCreated(entity.getCreated())\n-                                                                       .build())\n-                       .orElseThrow(() -> new IllegalArgumentException(\"messageEventSubscriptionEntity must not be null\"));\n+                .map(entity -> StartMessageSubscriptionImpl.builder()\n+                        .withId(entity.getId())\n+                        .withEventName(entity.getEventName())\n+                        .withProcessDefinitionId(entity.getProcessDefinitionId())\n+                        .withConfiguration(entity.getConfiguration())\n+                        .withActivityId(entity.getActivityId())\n+                        .withCreated(entity.getCreated())\n+                        .build())\n+                .orElseThrow(() -> new IllegalArgumentException(\"messageEventSubscriptionEntity must not be null\"));\n     }\n \n }\n",
            "diff_size": 10
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/299/StartMessageSubscriptionConverter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/naturalize/299/StartMessageSubscriptionConverter.java\nindex b9ae18d3154..c907087be79 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/299/StartMessageSubscriptionConverter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/naturalize/299/StartMessageSubscriptionConverter.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.runtime.api.event.impl;\n \n import java.util.Optional;\n@@ -23,17 +24,13 @@ import org.activiti.engine.impl.persistence.entity.MessageEventSubscriptionEntit\n public class StartMessageSubscriptionConverter {\n \n     public StartMessageSubscriptionImpl convertToStartMessageSubscription(MessageEventSubscriptionEntity messageEventSubscriptionEntity) {\n-\n-        return Optional.of(messageEventSubscriptionEntity)\n-                       .map(entity -> StartMessageSubscriptionImpl.builder()\n-                                                                       .withId(entity.getId())\n+  return Optional.of(messageEventSubscriptionEntity).map(entity -> StartMessageSubscriptionImpl.builder().withId(entity.getId())\n                                                                        .withEventName(entity.getEventName())\n                                                                        .withProcessDefinitionId(entity.getProcessDefinitionId())\n                                                                        .withConfiguration(entity.getConfiguration())\n                                                                        .withActivityId(entity.getActivityId())\n                                                                        .withCreated(entity.getCreated())\n-                                                                       .build())\n-                       .orElseThrow(() -> new IllegalArgumentException(\"messageEventSubscriptionEntity must not be null\"));\n+                                                                       .build()).orElseThrow(() -> new IllegalArgumentException(\"messageEventSubscriptionEntity must not be null\"));\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "16",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "23",
                    "severity": "error",
                    "message": "'CLASS_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "26",
                    "severity": "error",
                    "message": "Line is longer than 240 characters (found 450).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/299/StartMessageSubscriptionConverter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/codebuff/299/StartMessageSubscriptionConverter.java\nindex b9ae18d3154..ef865ce11d6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/299/StartMessageSubscriptionConverter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/codebuff/299/StartMessageSubscriptionConverter.java\n@@ -16,24 +16,14 @@\n package org.activiti.runtime.api.event.impl;\n \n import java.util.Optional;\n-\n import org.activiti.api.runtime.model.impl.StartMessageSubscriptionImpl;\n import org.activiti.engine.impl.persistence.entity.MessageEventSubscriptionEntity;\n \n-public class StartMessageSubscriptionConverter {\n \n-    public StartMessageSubscriptionImpl convertToStartMessageSubscription(MessageEventSubscriptionEntity messageEventSubscriptionEntity) {\n+public class StartMessageSubscriptionConverter {\n \n-        return Optional.of(messageEventSubscriptionEntity)\n-                       .map(entity -> StartMessageSubscriptionImpl.builder()\n-                                                                       .withId(entity.getId())\n-                                                                       .withEventName(entity.getEventName())\n-                                                                       .withProcessDefinitionId(entity.getProcessDefinitionId())\n-                                                                       .withConfiguration(entity.getConfiguration())\n-                                                                       .withActivityId(entity.getActivityId())\n-                                                                       .withCreated(entity.getCreated())\n-                                                                       .build())\n-                       .orElseThrow(() -> new IllegalArgumentException(\"messageEventSubscriptionEntity must not be null\"));\n-    }\n+  public StartMessageSubscriptionImpl convertToStartMessageSubscription(MessageEventSubscriptionEntity messageEventSubscriptionEntity) {\n+    return Optional.of(messageEventSubscriptionEntity).map(entity -> StartMessageSubscriptionImpl.builder().withId(entity.getId()).withEventName(entity.getEventName()).withProcessDefinitionId(entity.getProcessDefinitionId()).withConfiguration(entity.getConfiguration()).withActivityId(entity.getActivityId()).withCreated(entity.getCreated()).build()).orElseThrow(() -> new IllegalArgumentException(\"messageEventSubscriptionEntity must not be null\"));\n+  }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 15
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/299/StartMessageSubscriptionConverter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_random/299/StartMessageSubscriptionConverter.java\nindex b9ae18d3154..12a983e6a64 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/299/StartMessageSubscriptionConverter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_random/299/StartMessageSubscriptionConverter.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.runtime.api.event.impl;\n \n import java.util.Optional;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/299/StartMessageSubscriptionConverter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_three_grams/299/StartMessageSubscriptionConverter.java\nindex b9ae18d3154..12a983e6a64 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/299/StartMessageSubscriptionConverter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_three_grams/299/StartMessageSubscriptionConverter.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.runtime.api.event.impl;\n \n import java.util.Optional;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "codebuff"
    ]
}
{
    "project_name": "apache-ignite-3",
    "error_id": "36",
    "information": {
        "errors": [
            {
                "line": "32",
                "column": "5",
                "severity": "error",
                "message": "'VARIABLE_DEF' should be separated from previous line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": "\n    private final CountDownLatch latch = new CountDownLatch(1);\n    private final Closure closure;\n\n    public JoinableClosure(Closure closure) {\n        this.closure = Requires.requireNonNull(closure, \"closure\");",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/errored/1/36/JoinableClosure.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/styler/36/JoinableClosure.java\nindex f8f0aed9f5a..600218bdef5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/errored/1/36/JoinableClosure.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/styler/36/JoinableClosure.java\n@@ -29,6 +29,7 @@ import org.apache.ignite.raft.jraft.util.Requires;\n public class JoinableClosure implements Closure {\n \n     private final CountDownLatch latch = new CountDownLatch(1);\n+\n     private final Closure closure;\n \n     public JoinableClosure(Closure closure) {\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/errored/1/36/JoinableClosure.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/intellij/36/JoinableClosure.java\nindex f8f0aed9f5a..41a62a33a23 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/errored/1/36/JoinableClosure.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/intellij/36/JoinableClosure.java\n@@ -14,6 +14,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.apache.ignite.raft.jraft.closure;\n \n import java.util.concurrent.CountDownLatch;\n@@ -28,30 +29,31 @@ import org.apache.ignite.raft.jraft.util.Requires;\n  */\n public class JoinableClosure implements Closure {\n \n-    private final CountDownLatch latch = new CountDownLatch(1);\n-    private final Closure closure;\n+  private final CountDownLatch latch = new CountDownLatch(1);\n \n-    public JoinableClosure(Closure closure) {\n-        this.closure = Requires.requireNonNull(closure, \"closure\");\n-    }\n+  private final Closure closure;\n \n-    @Override\n-    public void run(final Status status) {\n-        this.closure.run(status);\n-        latch.countDown();\n-    }\n+  public JoinableClosure(Closure closure) {\n+    this.closure = Requires.requireNonNull(closure, \"closure\");\n+  }\n \n-    public void join() throws InterruptedException {\n-        this.latch.await();\n-    }\n+  @Override\n+  public void run(final Status status) {\n+    this.closure.run(status);\n+    latch.countDown();\n+  }\n \n-    public void join(final long timeoutMillis) throws InterruptedException, TimeoutException {\n-        if (!this.latch.await(timeoutMillis, TimeUnit.MILLISECONDS)) {\n-            throw new TimeoutException(\"joined timeout\");\n-        }\n-    }\n+  public void join() throws InterruptedException {\n+    this.latch.await();\n+  }\n \n-    public Closure getClosure() {\n-        return closure;\n+  public void join(final long timeoutMillis) throws InterruptedException, TimeoutException {\n+    if (!this.latch.await(timeoutMillis, TimeUnit.MILLISECONDS)) {\n+      throw new TimeoutException(\"joined timeout\");\n     }\n+  }\n+\n+  public Closure getClosure() {\n+    return closure;\n+  }\n }\n",
            "diff_size": 29
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "31",
                    "column": "5",
                    "severity": "error",
                    "message": "'VARIABLE_DEF' should be separated from previous line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/errored/1/36/JoinableClosure.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/naturalize/36/JoinableClosure.java\nindex f8f0aed9f5a..5359513a62f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/errored/1/36/JoinableClosure.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/naturalize/36/JoinableClosure.java\n@@ -27,8 +27,7 @@ import org.apache.ignite.raft.jraft.util.Requires;\n  *\n  */\n public class JoinableClosure implements Closure {\n-\n-    private final CountDownLatch latch = new CountDownLatch(1);\n+private final CountDownLatch latch = new CountDownLatch(1);\n     private final Closure closure;\n \n     public JoinableClosure(Closure closure) {\n@@ -54,4 +53,4 @@ public class JoinableClosure implements Closure {\n     public Closure getClosure() {\n         return closure;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "31",
                    "column": "1",
                    "severity": "error",
                    "message": "'CLASS_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "36",
                    "column": "5",
                    "severity": "error",
                    "message": "'VARIABLE_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "39",
                    "column": "5",
                    "severity": "error",
                    "message": "'CTOR_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "44",
                    "column": "5",
                    "severity": "error",
                    "message": "'METHOD_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/errored/1/36/JoinableClosure.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/codebuff/36/JoinableClosure.java\nindex f8f0aed9f5a..08e4aa292a3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/errored/1/36/JoinableClosure.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/codebuff/36/JoinableClosure.java\n@@ -26,18 +26,24 @@ import org.apache.ignite.raft.jraft.util.Requires;\n /**\n  *\n  */\n+\n+\n public class JoinableClosure implements Closure {\n \n     private final CountDownLatch latch = new CountDownLatch(1);\n+\n+\n     private final Closure closure;\n \n+\n     public JoinableClosure(Closure closure) {\n         this.closure = Requires.requireNonNull(closure, \"closure\");\n     }\n \n-    @Override\n-    public void run(final Status status) {\n+\n+    @Override public void run(final Status status) {\n         this.closure.run(status);\n+\n         latch.countDown();\n     }\n \n@@ -54,4 +60,4 @@ public class JoinableClosure implements Closure {\n     public Closure getClosure() {\n         return closure;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/errored/1/36/JoinableClosure.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/styler_random/36/JoinableClosure.java\nindex f8f0aed9f5a..600218bdef5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/errored/1/36/JoinableClosure.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/styler_random/36/JoinableClosure.java\n@@ -29,6 +29,7 @@ import org.apache.ignite.raft.jraft.util.Requires;\n public class JoinableClosure implements Closure {\n \n     private final CountDownLatch latch = new CountDownLatch(1);\n+\n     private final Closure closure;\n \n     public JoinableClosure(Closure closure) {\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/errored/1/36/JoinableClosure.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/styler_three_grams/36/JoinableClosure.java\nindex f8f0aed9f5a..600218bdef5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/errored/1/36/JoinableClosure.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/styler_three_grams/36/JoinableClosure.java\n@@ -29,6 +29,7 @@ import org.apache.ignite.raft.jraft.util.Requires;\n public class JoinableClosure implements Closure {\n \n     private final CountDownLatch latch = new CountDownLatch(1);\n+\n     private final Closure closure;\n \n     public JoinableClosure(Closure closure) {\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
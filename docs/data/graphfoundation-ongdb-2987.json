{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2987",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "41",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2987/RecordPageLocationCalculator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2987/RecordPageLocationCalculator.java\nindex be551ba7ba9..bd226d33e75 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2987/RecordPageLocationCalculator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2987/RecordPageLocationCalculator.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.store;\n \n /**\n@@ -24,36 +25,36 @@ package org.neo4j.kernel.impl.store;\n  */\n public class RecordPageLocationCalculator\n {\n-    private RecordPageLocationCalculator()\n-    {\n-    }\n+  private RecordPageLocationCalculator()\n+  {\n+  }\n \n-    /**\n-     * Calculates which page a record with the given {@code id} should go into.\n-     *\n-     * @param id record id\n-     * @param pageSize size of each page\n-     * @param recordSize size of each record\n-     * @return which page the record with the given {@code id} should go into, given the\n-     * {@code pageSize} and {@code recordSize}.\n-     */\n-    public static long pageIdForRecord( long id, int pageSize, int recordSize )\n-    {\n-        return id * recordSize / pageSize;\n-    }\n+  /**\n+   * Calculates which page a record with the given {@code id} should go into.\n+   *\n+   * @param id         record id\n+   * @param pageSize   size of each page\n+   * @param recordSize size of each record\n+   * @return which page the record with the given {@code id} should go into, given the\n+   * {@code pageSize} and {@code recordSize}.\n+   */\n+  public static long pageIdForRecord(long id, int pageSize, int recordSize)\n+  {\n+    return id * recordSize / pageSize;\n+  }\n \n-    /**\n-     * Calculates which offset into the right page (had by {@link #pageIdForRecord(long, int, int)})\n-     * the given {@code id} lives at.\n-     *\n-     * @param id record id\n-     * @param pageSize size of each page\n-     * @param recordSize size of each record\n-     * @return which offset into the right page the given {@code id} lives at, given the\n-     * {@code pageSize} and {@code recordSize}.\n-     */\n-    public static int offsetForId( long id, int pageSize, int recordSize )\n-    {\n-        return (int) ((id * recordSize) % pageSize);\n-    }\n+  /**\n+   * Calculates which offset into the right page (had by {@link #pageIdForRecord(long, int, int)})\n+   * the given {@code id} lives at.\n+   *\n+   * @param id         record id\n+   * @param pageSize   size of each page\n+   * @param recordSize size of each record\n+   * @return which offset into the right page the given {@code id} lives at, given the\n+   * {@code pageSize} and {@code recordSize}.\n+   */\n+  public static int offsetForId(long id, int pageSize, int recordSize)\n+  {\n+    return (int) ((id * recordSize) % pageSize);\n+  }\n }\n",
            "diff_size": 31
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "57",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2987/RecordPageLocationCalculator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2987/RecordPageLocationCalculator.java\nindex be551ba7ba9..aaec29b4137 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2987/RecordPageLocationCalculator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2987/RecordPageLocationCalculator.java\n@@ -54,6 +54,6 @@ public class RecordPageLocationCalculator\n      */\n     public static int offsetForId( long id, int pageSize, int recordSize )\n     {\n-        return (int) ((id * recordSize) % pageSize);\n+        return ( int) ((id * recordSize) % pageSize);\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
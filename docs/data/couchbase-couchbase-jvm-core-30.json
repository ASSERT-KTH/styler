{
    "project_name": "couchbase-couchbase-jvm-core",
    "error_id": "30",
    "information": {
        "errors": [
            {
                "line": "42",
                "severity": "warning",
                "message": "Line is longer than 120 characters (found 130).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "    }\n\n    public SearchEndpoint(String hostname, String bucket, String username, String password, int port, CoreEnvironment environment,\n                          RingBuffer<ResponseEvent> responseBuffer) {\n        super(hostname, bucket, username, password, port, environment, responseBuffer, false,\n                environment.searchIoPool() == null ? environment.ioPool() : environment.searchIoPool(), false);",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/30/SearchEndpoint.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/styler/30/SearchEndpoint.java\nindex 2a22a8c6df2..a585aa6abd7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/30/SearchEndpoint.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/styler/30/SearchEndpoint.java\n@@ -39,8 +39,9 @@ public class SearchEndpoint extends AbstractEndpoint {\n         this(hostname, bucket, bucket, password, port, environment, responseBuffer);\n     }\n \n-    public SearchEndpoint(String hostname, String bucket, String username, String password, int port, CoreEnvironment environment,\n-                          RingBuffer<ResponseEvent> responseBuffer) {\n+    public SearchEndpoint(String hostname, String bucket, String username, String password, int port, CoreEnvironment\n+        environment,\n+                           RingBuffer<ResponseEvent> responseBuffer) {\n         super(hostname, bucket, username, password, port, environment, responseBuffer, false,\n                 environment.searchIoPool() == null ? environment.ioPool() : environment.searchIoPool(), false);\n     }\n",
            "diff_size": 3
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/30/SearchEndpoint.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/intellij/30/SearchEndpoint.java\nindex 2a22a8c6df2..9a66619c029 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/30/SearchEndpoint.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/intellij/30/SearchEndpoint.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package com.couchbase.client.core.endpoint.search;\n \n import com.couchbase.client.core.ResponseEvent;\n@@ -39,10 +40,11 @@ public class SearchEndpoint extends AbstractEndpoint {\n         this(hostname, bucket, bucket, password, port, environment, responseBuffer);\n     }\n \n-    public SearchEndpoint(String hostname, String bucket, String username, String password, int port, CoreEnvironment environment,\n+    public SearchEndpoint(String hostname, String bucket, String username, String password, int port,\n+                          CoreEnvironment environment,\n                           RingBuffer<ResponseEvent> responseBuffer) {\n         super(hostname, bucket, username, password, port, environment, responseBuffer, false,\n-                environment.searchIoPool() == null ? environment.ioPool() : environment.searchIoPool(), false);\n+            environment.searchIoPool() == null ? environment.ioPool() : environment.searchIoPool(), false);\n     }\n \n     @Override\n@@ -51,6 +53,6 @@ public class SearchEndpoint extends AbstractEndpoint {\n             pipeline.addLast(new IdleStateHandler(environment().keepAliveInterval(), 0, 0, TimeUnit.MILLISECONDS));\n         }\n         pipeline.addLast(new HttpClientCodec())\n-                .addLast(new SearchHandler(this, responseBuffer(), false, false));\n+            .addLast(new SearchHandler(this, responseBuffer(), false, false));\n     }\n }\n",
            "diff_size": 5
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "37",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 157).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "41",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 174).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "42",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 185).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "51",
                    "severity": "warning",
                    "message": "'method call' child has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/30/SearchEndpoint.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/naturalize/30/SearchEndpoint.java\nindex 2a22a8c6df2..546b27e2020 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/30/SearchEndpoint.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/naturalize/30/SearchEndpoint.java\n@@ -34,15 +34,12 @@ import java.util.concurrent.TimeUnit;\n public class SearchEndpoint extends AbstractEndpoint {\n \n     @Deprecated\n-    public SearchEndpoint(String hostname, String bucket, String password, int port, CoreEnvironment environment,\n-                          RingBuffer<ResponseEvent> responseBuffer) {\n-        this(hostname, bucket, bucket, password, port, environment, responseBuffer);\n+    public SearchEndpoint(String hostname, String bucket, String password, int port, CoreEnvironment environment, RingBuffer<ResponseEvent> responseBuffer) {\n+    this(hostname, bucket, bucket, password, port, environment, responseBuffer);\n     }\n \n-    public SearchEndpoint(String hostname, String bucket, String username, String password, int port, CoreEnvironment environment,\n-                          RingBuffer<ResponseEvent> responseBuffer) {\n-        super(hostname, bucket, username, password, port, environment, responseBuffer, false,\n-                environment.searchIoPool() == null ? environment.ioPool() : environment.searchIoPool(), false);\n+    public SearchEndpoint(String hostname, String bucket, String username, String password, int port, CoreEnvironment environment, RingBuffer<ResponseEvent> responseBuffer) {\n+    super(hostname, bucket, username, password, port, environment, responseBuffer, false, environment.searchIoPool() == null ? environment.ioPool() : environment.searchIoPool(), false);\n     }\n \n     @Override\n@@ -51,6 +48,6 @@ public class SearchEndpoint extends AbstractEndpoint {\n             pipeline.addLast(new IdleStateHandler(environment().keepAliveInterval(), 0, 0, TimeUnit.MILLISECONDS));\n         }\n         pipeline.addLast(new HttpClientCodec())\n-                .addLast(new SearchHandler(this, responseBuffer(), false, false));\n+.addLast(new SearchHandler(this, responseBuffer(), false, false));\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "37",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 157).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "41",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 174).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "42",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 189).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/30/SearchEndpoint.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/codebuff/30/SearchEndpoint.java\nindex 2a22a8c6df2..215c73dab0b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/30/SearchEndpoint.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/codebuff/30/SearchEndpoint.java\n@@ -22,7 +22,6 @@ import com.lmax.disruptor.RingBuffer;\n import io.netty.channel.ChannelPipeline;\n import io.netty.handler.codec.http.HttpClientCodec;\n import io.netty.handler.timeout.IdleStateHandler;\n-\n import java.util.concurrent.TimeUnit;\n \n /**\n@@ -31,18 +30,16 @@ import java.util.concurrent.TimeUnit;\n  * @author Sergey Avseyev\n  * @since 1.2\n  */\n+\n public class SearchEndpoint extends AbstractEndpoint {\n \n     @Deprecated\n-    public SearchEndpoint(String hostname, String bucket, String password, int port, CoreEnvironment environment,\n-                          RingBuffer<ResponseEvent> responseBuffer) {\n+    public SearchEndpoint(String hostname, String bucket, String password, int port, CoreEnvironment environment, RingBuffer<ResponseEvent> responseBuffer) {\n         this(hostname, bucket, bucket, password, port, environment, responseBuffer);\n     }\n \n-    public SearchEndpoint(String hostname, String bucket, String username, String password, int port, CoreEnvironment environment,\n-                          RingBuffer<ResponseEvent> responseBuffer) {\n-        super(hostname, bucket, username, password, port, environment, responseBuffer, false,\n-                environment.searchIoPool() == null ? environment.ioPool() : environment.searchIoPool(), false);\n+    public SearchEndpoint(String hostname, String bucket, String username, String password, int port, CoreEnvironment environment, RingBuffer<ResponseEvent> responseBuffer) {\n+        super(hostname, bucket, username, password, port, environment, responseBuffer, false, environment.searchIoPool() == null ? environment.ioPool() : environment.searchIoPool(), false);\n     }\n \n     @Override\n@@ -50,7 +47,9 @@ public class SearchEndpoint extends AbstractEndpoint {\n         if (environment().keepAliveInterval() > 0) {\n             pipeline.addLast(new IdleStateHandler(environment().keepAliveInterval(), 0, 0, TimeUnit.MILLISECONDS));\n         }\n-        pipeline.addLast(new HttpClientCodec())\n-                .addLast(new SearchHandler(this, responseBuffer(), false, false));\n+        pipeline.addLast(new HttpClientCodec()).addLast(new SearchHandler(this,\n+            responseBuffer(),\n+            false,\n+            false));\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 13
        },
        {
            "tool": "styler_random",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/30/SearchEndpoint.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/styler_three_grams/30/SearchEndpoint.java\nindex 2a22a8c6df2..a585aa6abd7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/30/SearchEndpoint.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/styler_three_grams/30/SearchEndpoint.java\n@@ -39,8 +39,9 @@ public class SearchEndpoint extends AbstractEndpoint {\n         this(hostname, bucket, bucket, password, port, environment, responseBuffer);\n     }\n \n-    public SearchEndpoint(String hostname, String bucket, String username, String password, int port, CoreEnvironment environment,\n-                          RingBuffer<ResponseEvent> responseBuffer) {\n+    public SearchEndpoint(String hostname, String bucket, String username, String password, int port, CoreEnvironment\n+        environment,\n+                           RingBuffer<ResponseEvent> responseBuffer) {\n         super(hostname, bucket, username, password, port, environment, responseBuffer, false,\n                 environment.searchIoPool() == null ? environment.ioPool() : environment.searchIoPool(), false);\n     }\n",
            "diff_size": 3
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff",
        "styler_random"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1856",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "35",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "35",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1856/GroupSettingSupport.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1856/GroupSettingSupport.java\nindex 8c27df98173..22fe0e68874 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1856/GroupSettingSupport.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1856/GroupSettingSupport.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.configuration;\n \n import org.neo4j.graphdb.config.Setting;\n@@ -28,38 +29,38 @@ import org.neo4j.graphdb.config.Setting;\n  */\n public class GroupSettingSupport\n {\n-    private final String groupName;\n-    public final String groupKey;\n+  private final String groupName;\n+  public final String groupKey;\n \n-    private static String groupPrefix( Class<?> groupClass )\n-    {\n-        return groupClass.getAnnotation( Group.class ).value();\n-    }\n+  private static String groupPrefix(Class<?> groupClass)\n+  {\n+    return groupClass.getAnnotation(Group.class).value();\n+  }\n \n-    public GroupSettingSupport( Class<?> groupClass, String groupKey )\n-    {\n-        this( groupPrefix( groupClass ), groupKey );\n-    }\n+  public GroupSettingSupport(Class<?> groupClass, String groupKey)\n+  {\n+    this(groupPrefix(groupClass), groupKey);\n+  }\n \n-    /**\n-     * @param groupPrefix the base that is common for each group of this kind, eg. 'dbms.mygroup'\n-     * @param groupKey the unique key for this particular group instance, eg. '0' or 'group1',\n-     *                 this gets combined with the groupPrefix to eg. `dbms.mygroup.0`\n-     */\n-    private GroupSettingSupport( String groupPrefix, String groupKey )\n-    {\n-        this.groupKey = groupKey;\n-        this.groupName = groupPrefix + \".\" + groupKey;\n-    }\n+  /**\n+   * @param groupPrefix the base that is common for each group of this kind, eg. 'dbms.mygroup'\n+   * @param groupKey    the unique key for this particular group instance, eg. '0' or 'group1',\n+   *                    this gets combined with the groupPrefix to eg. `dbms.mygroup.0`\n+   */\n+  private GroupSettingSupport(String groupPrefix, String groupKey)\n+  {\n+    this.groupKey = groupKey;\n+    this.groupName = groupPrefix + \".\" + groupKey;\n+  }\n \n-    /**\n-     * Define a sub-setting of this group. The setting passed in should not worry about\n-     * the group prefix or key. If you want config like `dbms.mygroup.0.foo=bar`, you should\n-     * pass in a setting with the key `foo` here.\n-     */\n-    public <T> Setting<T> scope( Setting<T> setting )\n-    {\n-        setting.withScope( key -> groupName + \".\" + key );\n-        return setting;\n-    }\n+  /**\n+   * Define a sub-setting of this group. The setting passed in should not worry about\n+   * the group prefix or key. If you want config like `dbms.mygroup.0.foo=bar`, you should\n+   * pass in a setting with the key `foo` here.\n+   */\n+  public <T> Setting<T> scope(Setting<T> setting)\n+  {\n+    setting.withScope(key -> groupName + \".\" + key);\n+    return setting;\n+  }\n }\n",
            "diff_size": 31
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1856/GroupSettingSupport.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1856/GroupSettingSupport.java\nindex 8c27df98173..49988e9734a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1856/GroupSettingSupport.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1856/GroupSettingSupport.java\n@@ -29,7 +29,8 @@ import org.neo4j.graphdb.config.Setting;\n public class GroupSettingSupport\n {\n     private final String groupName;\n-    public final String groupKey;\n+\n+public final String groupKey;\n \n     private static String groupPrefix( Class<?> groupClass )\n     {\n@@ -62,4 +63,4 @@ public class GroupSettingSupport\n         setting.withScope( key -> groupName + \".\" + key );\n         return setting;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "988",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "34",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "34",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "36",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "36",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/988/CombinedIndexHits.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/988/CombinedIndexHits.java\nindex 4b03fc1bcc9..d0da1a93b79 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/988/CombinedIndexHits.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/988/CombinedIndexHits.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.index.impl.lucene.explicit;\n \n import java.util.Collection;\n@@ -25,46 +26,46 @@ import org.neo4j.collection.primitive.PrimitiveLongCollections;\n import org.neo4j.kernel.api.ExplicitIndexHits;\n \n public class CombinedIndexHits extends PrimitiveLongCollections.PrimitiveLongConcatingIterator implements\n-        ExplicitIndexHits\n+    ExplicitIndexHits\n {\n-    private final Collection<ExplicitIndexHits> allIndexHits;\n-    private final int size;\n+  private final Collection<ExplicitIndexHits> allIndexHits;\n+  private final int size;\n \n-    public CombinedIndexHits( Collection<ExplicitIndexHits> iterators )\n-    {\n-        super( iterators.iterator() );\n-        this.allIndexHits = iterators;\n-        size = accumulatedSize( iterators );\n-    }\n+  public CombinedIndexHits(Collection<ExplicitIndexHits> iterators)\n+  {\n+    super(iterators.iterator());\n+    this.allIndexHits = iterators;\n+    size = accumulatedSize(iterators);\n+  }\n \n-    private int accumulatedSize( Collection<ExplicitIndexHits> iterators )\n+  private int accumulatedSize(Collection<ExplicitIndexHits> iterators)\n+  {\n+    int result = 0;\n+    for (ExplicitIndexHits hits : iterators)\n     {\n-        int result = 0;\n-        for ( ExplicitIndexHits hits : iterators )\n-        {\n-            result += hits.size();\n-        }\n-        return result;\n+      result += hits.size();\n     }\n+    return result;\n+  }\n \n-    @Override\n-    public int size()\n-    {\n-        return size;\n-    }\n+  @Override\n+  public int size()\n+  {\n+    return size;\n+  }\n \n-    @Override\n-    public void close()\n+  @Override\n+  public void close()\n+  {\n+    for (ExplicitIndexHits hits : allIndexHits)\n     {\n-        for ( ExplicitIndexHits hits : allIndexHits )\n-        {\n-            hits.close();\n-        }\n+      hits.close();\n     }\n+  }\n \n-    @Override\n-    public float currentScore()\n-    {\n-        return ((ExplicitIndexHits)currentIterator()).currentScore();\n-    }\n+  @Override\n+  public float currentScore()\n+  {\n+    return ((ExplicitIndexHits) currentIterator()).currentScore();\n+  }\n }\n",
            "diff_size": 41
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/988/CombinedIndexHits.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/988/CombinedIndexHits.java\nindex 4b03fc1bcc9..8c9c4983e15 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/988/CombinedIndexHits.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/988/CombinedIndexHits.java\n@@ -24,8 +24,7 @@ import java.util.Collection;\n import org.neo4j.collection.primitive.PrimitiveLongCollections;\n import org.neo4j.kernel.api.ExplicitIndexHits;\n \n-public class CombinedIndexHits extends PrimitiveLongCollections.PrimitiveLongConcatingIterator implements\n-        ExplicitIndexHits\n+public class CombinedIndexHits extends PrimitiveLongCollections.PrimitiveLongConcatingIterator implements ExplicitIndexHits\n {\n     private final Collection<ExplicitIndexHits> allIndexHits;\n     private final int size;\n@@ -44,7 +43,8 @@ public class CombinedIndexHits extends PrimitiveLongCollections.PrimitiveLongCon\n         {\n             result += hits.size();\n         }\n-        return result;\n+\n+return result;\n     }\n \n     @Override\n@@ -65,6 +65,6 @@ public class CombinedIndexHits extends PrimitiveLongCollections.PrimitiveLongCon\n     @Override\n     public float currentScore()\n     {\n-        return ((ExplicitIndexHits)currentIterator()).currentScore();\n+        return ((ExplicitIndexHits) currentIterator()).currentScore();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
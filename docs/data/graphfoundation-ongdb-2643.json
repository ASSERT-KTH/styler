{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2643",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "36",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "36",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2643/ConstraintDescriptor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2643/ConstraintDescriptor.java\nindex 836a643cc7a..cd2bde1284f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2643/ConstraintDescriptor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2643/ConstraintDescriptor.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.api.schema.constaints;\n \n import org.neo4j.internal.kernel.api.TokenNameLookup;\n@@ -30,75 +31,74 @@ import static java.lang.String.format;\n public abstract class ConstraintDescriptor implements org.neo4j.internal.kernel.api.schema.constraints.ConstraintDescriptor\n {\n \n-    private final ConstraintDescriptor.Type type;\n+  private final ConstraintDescriptor.Type type;\n \n-    ConstraintDescriptor( Type type )\n-    {\n-        this.type = type;\n-    }\n+  ConstraintDescriptor(Type type)\n+  {\n+    this.type = type;\n+  }\n \n-    // METHODS\n+  // METHODS\n \n-    @Override\n-    public Type type()\n-    {\n-        return type;\n-    }\n+  @Override\n+  public Type type()\n+  {\n+    return type;\n+  }\n \n-    @Override\n-    public boolean enforcesUniqueness()\n-    {\n-        return type.enforcesUniqueness();\n-    }\n+  @Override\n+  public boolean enforcesUniqueness()\n+  {\n+    return type.enforcesUniqueness();\n+  }\n \n-    @Override\n-    public boolean enforcesPropertyExistence()\n-    {\n-        return type.enforcesPropertyExistence();\n-    }\n+  @Override\n+  public boolean enforcesPropertyExistence()\n+  {\n+    return type.enforcesPropertyExistence();\n+  }\n \n-    /**\n-     * @param tokenNameLookup used for looking up names for token ids.\n-     * @return a user friendly description of this constraint.\n-     */\n-    @Override\n-    public String userDescription( TokenNameLookup tokenNameLookup )\n-    {\n-        return format( \"Constraint( %s, %s )\", type.name(), schema().userDescription( tokenNameLookup ) );\n-    }\n+  /**\n+   * @param tokenNameLookup used for looking up names for token ids.\n+   * @return a user friendly description of this constraint.\n+   */\n+  @Override\n+  public String userDescription(TokenNameLookup tokenNameLookup)\n+  {\n+    return format(\"Constraint( %s, %s )\", type.name(), schema().userDescription(tokenNameLookup));\n+  }\n \n-    @Override\n-    public final boolean isSame( Supplier supplier )\n-    {\n-        return this.equals( supplier.getConstraintDescriptor() );\n-    }\n+  @Override\n+  public final boolean isSame(Supplier supplier)\n+  {\n+    return this.equals(supplier.getConstraintDescriptor());\n+  }\n \n-    @Override\n-    public final boolean equals( Object o )\n+  @Override\n+  public final boolean equals(Object o)\n+  {\n+    if (o instanceof ConstraintDescriptor)\n     {\n-        if ( o instanceof ConstraintDescriptor )\n-        {\n-            ConstraintDescriptor that = (ConstraintDescriptor)o;\n-            return this.type() == that.type() && this.schema().equals( that.schema() );\n-        }\n-        return false;\n+      ConstraintDescriptor that = (ConstraintDescriptor) o;\n+      return this.type() == that.type() && this.schema().equals(that.schema());\n     }\n+    return false;\n+  }\n \n-    @Override\n-    public final int hashCode()\n-    {\n-        return type.hashCode() & schema().hashCode();\n-    }\n+  @Override\n+  public final int hashCode()\n+  {\n+    return type.hashCode() & schema().hashCode();\n+  }\n \n-    String escapeLabelOrRelTyp( String name )\n+  String escapeLabelOrRelTyp(String name)\n+  {\n+    if (name.contains(\":\"))\n+    {\n+      return \"`\" + name + \"`\";\n+    } else\n     {\n-        if ( name.contains( \":\" ) )\n-        {\n-            return \"`\" + name + \"`\";\n-        }\n-        else\n-        {\n-            return name;\n-        }\n+      return name;\n     }\n+  }\n }\n",
            "diff_size": 68
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2643/ConstraintDescriptor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2643/ConstraintDescriptor.java\nindex 836a643cc7a..f5943a6e3db 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2643/ConstraintDescriptor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2643/ConstraintDescriptor.java\n@@ -29,7 +29,6 @@ import static java.lang.String.format;\n  */\n public abstract class ConstraintDescriptor implements org.neo4j.internal.kernel.api.schema.constraints.ConstraintDescriptor\n {\n-\n     private final ConstraintDescriptor.Type type;\n \n     ConstraintDescriptor( Type type )\n@@ -101,4 +100,4 @@ public abstract class ConstraintDescriptor implements org.neo4j.internal.kernel.\n             return name;\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1714",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "58",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "64",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "150",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "150",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "11",
                    "severity": "error",
                    "message": "'}' at column 11 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "161",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "176",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "176",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "176",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1714/ConsoleInput.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1714/ConsoleInput.java\nindex ddfadb98fb4..670f0389efb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1714/ConsoleInput.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1714/ConsoleInput.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.tools.console.input;\n \n import java.io.BufferedReader;\n@@ -36,11 +37,11 @@ import static org.neo4j.tools.console.input.ConsoleUtil.tokenizeStringWithQuotes\n  * Useful utility which listens to input from console and reacts to each line, i.e. after each ENTER.\n  * {@link Command} are added with {@link #add(String, Command)} and are then reacted to in a separate thread,\n  * which continuously sits and listens to console input.\n- *\n+ * <p>\n  * Use of this class can be a shell-like tool which boots up, instantiates a {@link ConsoleInput},\n  * {@link #start() starts it} followed by {@link #waitFor()} which will block until the input stream ends\n  * or an exit command is issued.\n- *\n+ * <p>\n  * Another use is to instantiate {@link ConsoleInput}, {@link #start() start it} and then move on to do\n  * something else entirely. That way the commands added here will be available user input something in\n  * the console while all other things are happening. In this case {@link #shutdown()} should be called\n@@ -48,138 +49,136 @@ import static org.neo4j.tools.console.input.ConsoleUtil.tokenizeStringWithQuotes\n  */\n public class ConsoleInput extends LifecycleAdapter\n {\n-    private final Map<String,Command> commands = new HashMap<>();\n-    private Reactor reactor;\n-    private final BufferedReader inputReader;\n-    private final Listener<PrintStream> prompt;\n-    private final PrintStream out;\n-\n-    public ConsoleInput( InputStream input, PrintStream out, Listener<PrintStream> prompt )\n+  private final Map<String, Command> commands = new HashMap<>();\n+  private Reactor reactor;\n+  private final BufferedReader inputReader;\n+  private final Listener<PrintStream> prompt;\n+  private final PrintStream out;\n+\n+  public ConsoleInput(InputStream input, PrintStream out, Listener<PrintStream> prompt)\n+  {\n+    this.out = out;\n+    this.prompt = prompt;\n+    this.inputReader = new BufferedReader(new InputStreamReader(input));\n+  }\n+\n+  /**\n+   * Add {@link Command} to be available and executed when input uses it.\n+   *\n+   * @param name    command name, i.e the first word of the whole command line to listen for.\n+   * @param command {@link Command} to {@link Command#run(String[], PrintStream) run} as part of command line\n+   *                starting with {@code name}-\n+   */\n+  public void add(String name, Command command)\n+  {\n+    commands.put(name, command);\n+  }\n+\n+  /**\n+   * Starts to listen on the input supplied in constructor.\n+   */\n+  @Override\n+  public void start()\n+  {\n+    reactor = new Reactor();\n+    reactor.start();\n+  }\n+\n+  /**\n+   * Waits till input stream ends or exit command is given.\n+   */\n+  public void waitFor() throws InterruptedException\n+  {\n+    reactor.join();\n+  }\n+\n+  /**\n+   * Shuts down and stops listen on the input.\n+   */\n+  @Override\n+  public void stop() throws InterruptedException\n+  {\n+    reactor.halt();\n+    waitFor();\n+  }\n+\n+  /**\n+   * Prints usage and help for all available commands.\n+   */\n+  public void printUsage()\n+  {\n+    out.println(\"Available commands:\");\n+    for (Map.Entry<String, Command> entry : commands.entrySet())\n     {\n-        this.out = out;\n-        this.prompt = prompt;\n-        this.inputReader = new BufferedReader( new InputStreamReader( input ) );\n+      out.println(entry.getKey() + \": \" + entry.getValue());\n     }\n+  }\n \n-    /**\n-     * Add {@link Command} to be available and executed when input uses it.\n-     *\n-     * @param name command name, i.e the first word of the whole command line to listen for.\n-     * @param command {@link Command} to {@link Command#run(String[], PrintStream) run} as part of command line\n-     * starting with {@code name}-\n-     */\n-    public void add( String name, Command command )\n-    {\n-        commands.put( name, command );\n-    }\n+  private class Reactor extends Thread\n+  {\n+    private volatile boolean halted;\n \n-    /**\n-     * Starts to listen on the input supplied in constructor.\n-     */\n-    @Override\n-    public void start()\n+    Reactor()\n     {\n-        reactor = new Reactor();\n-        reactor.start();\n+      super(ConsoleInput.class.getSimpleName() + \" reactor\");\n     }\n \n-    /**\n-     * Waits till input stream ends or exit command is given.\n-     */\n-    public void waitFor() throws InterruptedException\n+    void halt()\n     {\n-        reactor.join();\n-    }\n+      halted = true;\n \n-    /**\n-     * Shuts down and stops listen on the input.\n-     */\n-    @Override\n-    public void stop() throws InterruptedException\n-    {\n-        reactor.halt();\n-        waitFor();\n+      // Interrupt this thread since it's probably sitting listening to input.\n+      interrupt();\n     }\n \n-    /**\n-     * Prints usage and help for all available commands.\n-     */\n-    public void printUsage()\n-    {\n-        out.println( \"Available commands:\" );\n-        for ( Map.Entry<String, Command> entry : commands.entrySet() )\n-        {\n-            out.println( entry.getKey() + \": \" + entry.getValue() );\n-        }\n-    }\n-\n-    private class Reactor extends Thread\n+    @Override\n+    public void run()\n     {\n-        private volatile boolean halted;\n-\n-        Reactor()\n-        {\n-            super( ConsoleInput.class.getSimpleName() + \" reactor\" );\n-        }\n-\n-        void halt()\n+      while (!halted)\n+      {\n+        try\n         {\n+          prompt.receive(out);\n+          String commandLine = inputReader.readLine(); // Blocking call\n+          if (commandLine == null)\n+          {\n             halted = true;\n-\n-            // Interrupt this thread since it's probably sitting listening to input.\n-            interrupt();\n-        }\n-\n-        @Override\n-        public void run()\n-        {\n-            while ( !halted )\n+            break;\n+          }\n+\n+          String[] args = tokenizeStringWithQuotes(commandLine);\n+          if (args.length == 0)\n+          {\n+            continue;\n+          }\n+          String commandName = args[0];\n+          Command action = commands.get(commandName);\n+          if (action != null)\n+          {\n+            action.run(copyOfRange(args, 1, args.length), out);\n+          } else\n+          {\n+            switch (commandName)\n             {\n-                try\n-                {\n-                    prompt.receive( out );\n-                    String commandLine = inputReader.readLine(); // Blocking call\n-                    if ( commandLine == null )\n-                    {\n-                        halted = true;\n-                        break;\n-                    }\n-\n-                    String[] args = tokenizeStringWithQuotes( commandLine );\n-                    if ( args.length == 0 )\n-                    {\n-                        continue;\n-                    }\n-                    String commandName = args[0];\n-                    Command action = commands.get( commandName );\n-                    if ( action != null )\n-                    {\n-                        action.run( copyOfRange( args, 1, args.length ), out );\n-                    }\n-                    else\n-                    {\n-                        switch ( commandName )\n-                        {\n-                            case \"help\":\n-                            case \"?\":\n-                            case \"man\":\n-                                printUsage();\n-                                break;\n-                            case \"exit\":\n-                                halt();\n-                                break;\n-                            default:\n-                                System.err.println( \"Unrecognized command '\" + commandName + \"'\" );\n-                                break;\n-                        }\n-                    }\n-                }\n-                catch ( Exception e )\n-                {\n-                    e.printStackTrace();\n-                    // The show must go on\n-                }\n+              case \"help\":\n+              case \"?\":\n+              case \"man\":\n+                printUsage();\n+                break;\n+              case \"exit\":\n+                halt();\n+                break;\n+              default:\n+                System.err.println(\"Unrecognized command '\" + commandName + \"'\");\n+                break;\n             }\n+          }\n+        } catch (Exception e)\n+        {\n+          e.printStackTrace();\n+          // The show must go on\n         }\n+      }\n     }\n+  }\n }\n",
            "diff_size": 191
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1714/ConsoleInput.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1714/ConsoleInput.java\nindex ddfadb98fb4..15c400192a7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1714/ConsoleInput.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1714/ConsoleInput.java\n@@ -107,7 +107,7 @@ public class ConsoleInput extends LifecycleAdapter\n     public void printUsage()\n     {\n         out.println( \"Available commands:\" );\n-        for ( Map.Entry<String, Command> entry : commands.entrySet() )\n+        for ( Map.Entry<String,Command> entry : commands.entrySet() )\n         {\n             out.println( entry.getKey() + \": \" + entry.getValue() );\n         }\n@@ -150,7 +150,8 @@ public class ConsoleInput extends LifecycleAdapter\n                     {\n                         continue;\n                     }\n-                    String commandName = args[0];\n+\n+String commandName = args[0];\n                     Command action = commands.get( commandName );\n                     if ( action != null )\n                     {\n@@ -160,7 +161,7 @@ public class ConsoleInput extends LifecycleAdapter\n                     {\n                         switch ( commandName )\n                         {\n-                            case \"help\":\n+case \"help\":\n                             case \"?\":\n                             case \"man\":\n                                 printUsage();\n@@ -171,7 +172,7 @@ public class ConsoleInput extends LifecycleAdapter\n                             default:\n                                 System.err.println( \"Unrecognized command '\" + commandName + \"'\" );\n                                 break;\n-                        }\n+    }\n                     }\n                 }\n                 catch ( Exception e )\n@@ -182,4 +183,4 @@ public class ConsoleInput extends LifecycleAdapter\n             }\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
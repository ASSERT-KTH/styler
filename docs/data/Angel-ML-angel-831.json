{
    "project_name": "Angel-ML-angel",
    "error_id": "831",
    "information": {
        "errors": [
            {
                "line": "6",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 102).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * Copyright (C) 2017-2018 THL A29 Limited, a Tencent company. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in\n * compliance with the License. You may obtain a copy of the License at\n *\n * https://opensource.org/licenses/Apache-2.0",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/831/CompLongLongRowUpdateSplit.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/831/CompLongLongRowUpdateSplit.java\nindex 93b5296bc2b..825fcc72628 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/831/CompLongLongRowUpdateSplit.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/831/CompLongLongRowUpdateSplit.java\n@@ -42,7 +42,7 @@ public class CompLongLongRowUpdateSplit extends RowUpdateSplit {\n    * Create a new CompLongIntRowUpdateSplit.\n    *\n    * @param rowIndex row index\n-   * @param split update split\n+   * @param split    update split\n    */\n   public CompLongLongRowUpdateSplit(int rowIndex, LongLongVector split) {\n     super(rowIndex, RowType.T_LONG_SPARSE_LONGKEY_COMPONENT, -1, -1);\n",
            "diff_size": 1
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "88",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 109).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "97",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 128).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/831/CompLongLongRowUpdateSplit.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/831/CompLongLongRowUpdateSplit.java\nindex 93b5296bc2b..3883fdbb630 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/831/CompLongLongRowUpdateSplit.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/831/CompLongLongRowUpdateSplit.java\n@@ -15,7 +15,6 @@\n  *\n  */\n \n-\n package com.tencent.angel.psagent.matrix.oplog.cache;\n \n import com.tencent.angel.ml.math2.VFactory;\n@@ -86,8 +85,7 @@ public class CompLongLongRowUpdateSplit extends RowUpdateSplit {\n         buf.writeLong(values[i]);\n       }\n     } else {\n-      throw new UnsupportedOperationException(\n-          \"unsupport split for storage \" + storage.getClass().getName());\n+      throw new UnsupportedOperationException(\"unsupport split for storage \" + storage.getClass().getName());\n     }\n   }\n \n@@ -96,8 +94,7 @@ public class CompLongLongRowUpdateSplit extends RowUpdateSplit {\n     super.deserialize(buf);\n     int elemNum = buf.readInt();\n     if (rowType == RowType.T_LONG_SPARSE_LONGKEY_COMPONENT) {\n-      vector = VFactory.sparseLongKeyLongVector(\n-          splitContext.getPartKey().getEndCol() - splitContext.getPartKey().getStartCol(),\n+      vector = VFactory.sparseLongKeyLongVector(splitContext.getPartKey().getEndCol() - splitContext.getPartKey().getStartCol(),\n           elemNum);\n       for (int i = 0; i < elemNum; i++) {\n         ((LongLongVector) vector).set(buf.readLong(), buf.readLong());\n@@ -116,4 +113,4 @@ public class CompLongLongRowUpdateSplit extends RowUpdateSplit {\n   public int bufferLen() {\n     return 4 + super.bufferLen() + split.getStorage().size() * 16;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "94",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 109).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "104",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 138).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/831/CompLongLongRowUpdateSplit.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/831/CompLongLongRowUpdateSplit.java\nindex 93b5296bc2b..9306cd18aa3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/831/CompLongLongRowUpdateSplit.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/831/CompLongLongRowUpdateSplit.java\n@@ -31,11 +31,13 @@ import it.unimi.dsi.fastutil.objects.ObjectIterator;\n /**\n  * Component long key int value row update split\n  */\n+\n public class CompLongLongRowUpdateSplit extends RowUpdateSplit {\n \n   /**\n    * Row update split\n    */\n+\n   private final LongLongVector split;\n \n   /**\n@@ -44,6 +46,7 @@ public class CompLongLongRowUpdateSplit extends RowUpdateSplit {\n    * @param rowIndex row index\n    * @param split update split\n    */\n+\n   public CompLongLongRowUpdateSplit(int rowIndex, LongLongVector split) {\n     super(rowIndex, RowType.T_LONG_SPARSE_LONGKEY_COMPONENT, -1, -1);\n     this.split = split;\n@@ -52,6 +55,7 @@ public class CompLongLongRowUpdateSplit extends RowUpdateSplit {\n   /**\n    * Create new empty CompLongLongRowUpdateSplit\n    */\n+\n   public CompLongLongRowUpdateSplit() {\n     this(-1, null);\n   }\n@@ -61,6 +65,7 @@ public class CompLongLongRowUpdateSplit extends RowUpdateSplit {\n    *\n    * @return row update split vector\n    */\n+\n   public LongLongVector getSplit() {\n     return split;\n   }\n@@ -86,19 +91,17 @@ public class CompLongLongRowUpdateSplit extends RowUpdateSplit {\n         buf.writeLong(values[i]);\n       }\n     } else {\n-      throw new UnsupportedOperationException(\n-          \"unsupport split for storage \" + storage.getClass().getName());\n+      throw new UnsupportedOperationException(\"unsupport split for storage \" + storage.getClass().getName());\n     }\n   }\n \n   @Override\n   public void deserialize(ByteBuf buf) {\n     super.deserialize(buf);\n+\n     int elemNum = buf.readInt();\n     if (rowType == RowType.T_LONG_SPARSE_LONGKEY_COMPONENT) {\n-      vector = VFactory.sparseLongKeyLongVector(\n-          splitContext.getPartKey().getEndCol() - splitContext.getPartKey().getStartCol(),\n-          elemNum);\n+      vector = VFactory.sparseLongKeyLongVector(splitContext.getPartKey().getEndCol() - splitContext.getPartKey().getStartCol(), elemNum);\n       for (int i = 0; i < elemNum; i++) {\n         ((LongLongVector) vector).set(buf.readLong(), buf.readLong());\n       }\n@@ -116,4 +119,4 @@ public class CompLongLongRowUpdateSplit extends RowUpdateSplit {\n   public int bufferLen() {\n     return 4 + super.bufferLen() + split.getStorage().size() * 16;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 12
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
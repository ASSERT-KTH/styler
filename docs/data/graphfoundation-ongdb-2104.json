{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2104",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "41",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "94",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2104/DefaultFileSystemWatcherService.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2104/DefaultFileSystemWatcherService.java\nindex a9077e992b7..fce94f7d111 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2104/DefaultFileSystemWatcherService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2104/DefaultFileSystemWatcherService.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.util.watcher;\n \n import java.util.concurrent.ThreadFactory;\n@@ -31,74 +32,73 @@ import org.neo4j.scheduler.JobScheduler;\n  */\n public class DefaultFileSystemWatcherService implements FileSystemWatcherService\n {\n-    private final JobScheduler jobScheduler;\n-    private final FileWatcher fileWatcher;\n-    private final FileSystemEventWatcher eventWatcher;\n-    private ThreadFactory fileWatchers;\n-    private Thread watcher;\n+  private final JobScheduler jobScheduler;\n+  private final FileWatcher fileWatcher;\n+  private final FileSystemEventWatcher eventWatcher;\n+  private ThreadFactory fileWatchers;\n+  private Thread watcher;\n \n-    public DefaultFileSystemWatcherService( JobScheduler jobScheduler, FileWatcher fileWatcher )\n-    {\n-        this.jobScheduler = jobScheduler;\n-        this.fileWatcher = fileWatcher;\n-        this.eventWatcher = new FileSystemEventWatcher();\n-    }\n+  public DefaultFileSystemWatcherService(JobScheduler jobScheduler, FileWatcher fileWatcher)\n+  {\n+    this.jobScheduler = jobScheduler;\n+    this.fileWatcher = fileWatcher;\n+    this.eventWatcher = new FileSystemEventWatcher();\n+  }\n \n-    @Override\n-    public void init()\n-    {\n-        fileWatchers = jobScheduler.threadFactory( JobScheduler.Groups.fileWatch );\n-    }\n+  @Override\n+  public void init()\n+  {\n+    fileWatchers = jobScheduler.threadFactory(JobScheduler.Groups.fileWatch);\n+  }\n \n-    @Override\n-    public void start()\n-    {\n-        assert watcher == null;\n-        watcher = fileWatchers.newThread( eventWatcher );\n-        watcher.start();\n-    }\n+  @Override\n+  public void start()\n+  {\n+    assert watcher == null;\n+    watcher = fileWatchers.newThread(eventWatcher);\n+    watcher.start();\n+  }\n \n-    @Override\n-    public void stop() throws Throwable\n+  @Override\n+  public void stop() throws Throwable\n+  {\n+    eventWatcher.stopWatching();\n+    if (watcher != null)\n     {\n-        eventWatcher.stopWatching();\n-        if ( watcher != null )\n-        {\n-            watcher.interrupt();\n-            watcher.join();\n-            watcher = null;\n-        }\n+      watcher.interrupt();\n+      watcher.join();\n+      watcher = null;\n     }\n+  }\n \n-    @Override\n-    public void shutdown() throws Throwable\n-    {\n-        fileWatcher.close();\n-    }\n+  @Override\n+  public void shutdown() throws Throwable\n+  {\n+    fileWatcher.close();\n+  }\n+\n+  @Override\n+  public FileWatcher getFileWatcher()\n+  {\n+    return fileWatcher;\n+  }\n \n+  private class FileSystemEventWatcher implements Runnable\n+  {\n     @Override\n-    public FileWatcher getFileWatcher()\n+    public void run()\n     {\n-        return fileWatcher;\n+      try\n+      {\n+        fileWatcher.startWatching();\n+      } catch (InterruptedException ignored)\n+      {\n+      }\n     }\n \n-    private class FileSystemEventWatcher implements Runnable\n+    void stopWatching()\n     {\n-        @Override\n-        public void run()\n-        {\n-            try\n-            {\n-                fileWatcher.startWatching();\n-            }\n-            catch ( InterruptedException ignored )\n-            {\n-            }\n-        }\n-\n-        void stopWatching()\n-        {\n-            fileWatcher.stopWatching();\n-        }\n+      fileWatcher.stopWatching();\n     }\n+  }\n }\n",
            "diff_size": 75
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2104/DefaultFileSystemWatcherService.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2104/DefaultFileSystemWatcherService.java\nindex a9077e992b7..cf37dcba7b8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2104/DefaultFileSystemWatcherService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2104/DefaultFileSystemWatcherService.java\n@@ -101,4 +101,4 @@ public class DefaultFileSystemWatcherService implements FileSystemWatcherService\n             fileWatcher.stopWatching();\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1138",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "75",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "107",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "119",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "138",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "175",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "175",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "175",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "184",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "184",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "223",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "223",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "223",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "235",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "235",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "235",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "247",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "247",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "253",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "253",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "253",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "265",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "265",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "265",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "277",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "277",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "277",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "284",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "284",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "289",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "289",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "289",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "302",
                    "column": "61",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "302",
                    "column": "104",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "316",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "316",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "327",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "327",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "338",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "338",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "338",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "350",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "350",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "350",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "362",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "362",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "362",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "374",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "374",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "374",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "392",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "392",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "394",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "394",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1138/ExecutionResult.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1138/ExecutionResult.java\nindex 2fd56a71324..d8cb6b81f1a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1138/ExecutionResult.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1138/ExecutionResult.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.cypher.internal.javacompat;\n \n import scala.collection.JavaConversions;\n@@ -48,360 +49,348 @@ import org.neo4j.kernel.impl.query.QueryExecutionKernelException;\n  * with the terms used in the \"return\" clause of the Cypher query.\n  * The result objects could be {@link org.neo4j.graphdb.Node Nodes},\n  * {@link org.neo4j.graphdb.Relationship Relationships} or java primitives.\n- *\n- *\n+ * <p>\n+ * <p>\n  * Either iterate directly over the ExecutionResult to retrieve each row of the result\n  * set, or use <code>columnAs()</code> to access a single column with result objects\n  * cast to a type.\n  */\n-public class ExecutionResult implements ResourceIterable<Map<String,Object>>, Result, QueryResultProvider\n+public class ExecutionResult implements ResourceIterable<Map<String, Object>>, Result, QueryResultProvider\n {\n-    private final InternalExecutionResult inner;\n-\n-    /**\n-     * Initialized lazily and should be accessed with {@link #innerIterator()} method\n-     * because {@link #accept(ResultVisitor)} does not require iterator.\n-     */\n-    private ResourceIterator<Map<String,Object>> innerIterator;\n-\n-    /**\n-     * Constructor used by the Cypher framework. End-users should not\n-     * create an ExecutionResult directly, but instead use the result\n-     * returned from calling {@link QueryExecutionEngine#executeQuery(String, Map, org.neo4j.kernel.impl.query.TransactionalContext)}.\n-     *\n-     * @param   projection Execution result projection to use.\n-     */\n-    public ExecutionResult( InternalExecutionResult projection )\n+  private final InternalExecutionResult inner;\n+\n+  /**\n+   * Initialized lazily and should be accessed with {@link #innerIterator()} method\n+   * because {@link #accept(ResultVisitor)} does not require iterator.\n+   */\n+  private ResourceIterator<Map<String, Object>> innerIterator;\n+\n+  /**\n+   * Constructor used by the Cypher framework. End-users should not\n+   * create an ExecutionResult directly, but instead use the result\n+   * returned from calling {@link QueryExecutionEngine#executeQuery(String, Map, org.neo4j.kernel.impl.query.TransactionalContext)}.\n+   *\n+   * @param projection Execution result projection to use.\n+   */\n+  public ExecutionResult(InternalExecutionResult projection)\n+  {\n+    inner = Objects.requireNonNull(projection);\n+    //if updating query we must fetch the iterator right away in order to eagerly perform updates\n+    if (projection.executionType().queryType() == QueryType.WRITE)\n     {\n-        inner = Objects.requireNonNull( projection );\n-        //if updating query we must fetch the iterator right away in order to eagerly perform updates\n-        if ( projection.executionType().queryType() == QueryType.WRITE )\n-        {\n-            innerIterator();\n-        }\n+      innerIterator();\n     }\n-\n-    /**\n-     * Returns an iterator with the result objects from a single column of the result set. This method is best used for\n-     * single column results.\n-     *\n-     * <p><b>To ensure that any resources, including transactions bound to it, are properly closed, the iterator must\n-     * either be fully exhausted, or the {@link ResourceIterator#close() close()} method must be\n-     * called.</b></p>\n-     *\n-     * @param n exact name of the column, as it appeared in the original query\n-     * @param <T> desired type cast for the result objects\n-     * @return an iterator of the result objects, possibly empty\n-     * @throws ClassCastException when the result object can not be cast to the requested type\n-     * @throws org.neo4j.graphdb.NotFoundException when the column name does not appear in the original query\n-     */\n-    @Override\n-    public <T> ResourceIterator<T> columnAs( String n )\n+  }\n+\n+  /**\n+   * Returns an iterator with the result objects from a single column of the result set. This method is best used for\n+   * single column results.\n+   *\n+   * <p><b>To ensure that any resources, including transactions bound to it, are properly closed, the iterator must\n+   * either be fully exhausted, or the {@link ResourceIterator#close() close()} method must be\n+   * called.</b></p>\n+   *\n+   * @param n   exact name of the column, as it appeared in the original query\n+   * @param <T> desired type cast for the result objects\n+   * @return an iterator of the result objects, possibly empty\n+   * @throws ClassCastException                  when the result object can not be cast to the requested type\n+   * @throws org.neo4j.graphdb.NotFoundException when the column name does not appear in the original query\n+   */\n+  @Override\n+  public <T> ResourceIterator<T> columnAs(String n)\n+  {\n+    // this method is both a legacy method, and a method on Result,\n+    // prefer conforming to the new API and convert exceptions\n+    try\n     {\n-        // this method is both a legacy method, and a method on Result,\n-        // prefer conforming to the new API and convert exceptions\n-        try\n-        {\n-            return new ExceptionConversion<>( inner.<T>javaColumnAs( n ) );\n-        }\n-        catch ( CypherException e )\n-        {\n-            throw converted( e );\n-        }\n-    }\n-\n-    @Override\n-    public QueryExecutionType getQueryExecutionType()\n+      return new ExceptionConversion<>(inner.<T>javaColumnAs(n));\n+    } catch (CypherException e)\n     {\n-        try\n-        {\n-            return inner.executionType();\n-        }\n-        catch ( CypherException e )\n-        {\n-            throw converted( e );\n-        }\n+      throw converted(e);\n     }\n+  }\n \n-    /**\n-     * The exact names used to represent each column in the result set.\n-     *\n-     * @return List of the column names.\n-     */\n-    @Override\n-    public List<String> columns()\n+  @Override\n+  public QueryExecutionType getQueryExecutionType()\n+  {\n+    try\n     {\n-        // this method is both a legacy method, and a method on Result,\n-        // prefer conforming to the new API and convert exceptions\n-        try\n-        {\n-            return inner.javaColumns();\n-        }\n-        catch ( CypherException e )\n-        {\n-            throw converted( e );\n-        }\n-    }\n-\n-    @Override\n-    public String toString()\n+      return inner.executionType();\n+    } catch (CypherException e)\n     {\n-        return inner.toString(); // legacy method - don't convert exceptions...\n+      throw converted(e);\n     }\n-\n-    /**\n-     * Provides a textual representation of the query result.\n-     * <p><b>\n-     * The execution result represented by this object will be consumed in its entirety after this method is called.\n-     * Calling any of the other iterating methods on it should not be expected to return any results.\n-     * </b></p>\n-     * @return Returns the execution result\n-     */\n-    public String dumpToString()\n+  }\n+\n+  /**\n+   * The exact names used to represent each column in the result set.\n+   *\n+   * @return List of the column names.\n+   */\n+  @Override\n+  public List<String> columns()\n+  {\n+    // this method is both a legacy method, and a method on Result,\n+    // prefer conforming to the new API and convert exceptions\n+    try\n     {\n-        return inner.dumpToString(); // legacy method - don't convert exceptions...\n-    }\n-\n-    /**\n-     * Returns statistics about this result.\n-     * @return statistics about this result\n-     */\n-    @Override\n-    public QueryStatistics getQueryStatistics()\n+      return inner.javaColumns();\n+    } catch (CypherException e)\n     {\n-        try\n-        {\n-            return inner.queryStatistics();\n-        }\n-        catch ( CypherException e )\n-        {\n-            throw converted( e );\n-        }\n+      throw converted(e);\n     }\n-\n-    public void toString( PrintWriter writer )\n+  }\n+\n+  @Override\n+  public String toString()\n+  {\n+    return inner.toString(); // legacy method - don't convert exceptions...\n+  }\n+\n+  /**\n+   * Provides a textual representation of the query result.\n+   * <p><b>\n+   * The execution result represented by this object will be consumed in its entirety after this method is called.\n+   * Calling any of the other iterating methods on it should not be expected to return any results.\n+   * </b></p>\n+   *\n+   * @return Returns the execution result\n+   */\n+  public String dumpToString()\n+  {\n+    return inner.dumpToString(); // legacy method - don't convert exceptions...\n+  }\n+\n+  /**\n+   * Returns statistics about this result.\n+   *\n+   * @return statistics about this result\n+   */\n+  @Override\n+  public QueryStatistics getQueryStatistics()\n+  {\n+    try\n     {\n-        inner.dumpToString( writer ); // legacy method - don't convert exceptions...\n-        for ( Notification notification : JavaConversions.asJavaIterable( inner.notifications() ) )\n-        {\n-            writer.println( notification.getDescription() );\n-        }\n-    }\n-\n-    /**\n-     * Returns an iterator over the <i>return</i> clause of the query. The format is a map that has as keys the names\n-     * of the columns or their explicit names (set via 'as') and the value is the calculated value. Each iterator item\n-     * is one row of the query result.\n-     *\n-     * <p><b>To ensure that any resources, including transactions bound to it, are properly closed, the iterator must\n-     * either be fully exhausted, or the {@link ResourceIterator#close() close()} method must be\n-     * called.</b></p>\n-     *\n-     * @return An iterator over the result of the query as a map from projected column name to value\n-     */\n-    @Override\n-    public ResourceIterator<Map<String, Object>> iterator()\n+      return inner.queryStatistics();\n+    } catch (CypherException e)\n     {\n-        return innerIterator(); // legacy method - don't convert exceptions...\n+      throw converted(e);\n     }\n+  }\n \n-    /**\n-     * @return this result as a {@link Stream}\n-     */\n-    @Override\n-    public Stream<Map<String,Object>> stream()\n+  public void toString(PrintWriter writer)\n+  {\n+    inner.dumpToString(writer); // legacy method - don't convert exceptions...\n+    for (Notification notification : JavaConversions.asJavaIterable(inner.notifications()))\n     {\n-        // Need to implement to disambiguate Iterable/Iterator stream\n-        return iterator().stream();\n+      writer.println(notification.getDescription());\n     }\n-\n-    @Override\n-    public boolean hasNext()\n+  }\n+\n+  /**\n+   * Returns an iterator over the <i>return</i> clause of the query. The format is a map that has as keys the names\n+   * of the columns or their explicit names (set via 'as') and the value is the calculated value. Each iterator item\n+   * is one row of the query result.\n+   *\n+   * <p><b>To ensure that any resources, including transactions bound to it, are properly closed, the iterator must\n+   * either be fully exhausted, or the {@link ResourceIterator#close() close()} method must be\n+   * called.</b></p>\n+   *\n+   * @return An iterator over the result of the query as a map from projected column name to value\n+   */\n+  @Override\n+  public ResourceIterator<Map<String, Object>> iterator()\n+  {\n+    return innerIterator(); // legacy method - don't convert exceptions...\n+  }\n+\n+  /**\n+   * @return this result as a {@link Stream}\n+   */\n+  @Override\n+  public Stream<Map<String, Object>> stream()\n+  {\n+    // Need to implement to disambiguate Iterable/Iterator stream\n+    return iterator().stream();\n+  }\n+\n+  @Override\n+  public boolean hasNext()\n+  {\n+    try\n     {\n-        try\n-        {\n-            return innerIterator().hasNext();\n-        }\n-        catch ( CypherException e )\n-        {\n-            throw converted( e );\n-        }\n-    }\n-\n-    @Override\n-    public Map<String, Object> next()\n+      return innerIterator().hasNext();\n+    } catch (CypherException e)\n     {\n-        try\n-        {\n-            return innerIterator().next();\n-        }\n-        catch ( CypherException e )\n-        {\n-            throw converted( e );\n-        }\n+      throw converted(e);\n     }\n+  }\n \n-    @Override\n-    public void close()\n+  @Override\n+  public Map<String, Object> next()\n+  {\n+    try\n     {\n-        try\n-        {\n-            // inner iterator might be null if this result was consumed using visitor\n-            if ( innerIterator != null )\n-            {\n-                innerIterator.close();\n-            }\n-            // but we still need to close the underlying exetended execution result\n-            inner.close();\n-        }\n-        catch ( CypherException e )\n-        {\n-            throw converted( e );\n-        }\n-    }\n-\n-    @Override\n-    public ExecutionPlanDescription getExecutionPlanDescription()\n+      return innerIterator().next();\n+    } catch (CypherException e)\n     {\n-        try\n-        {\n-            return inner.executionPlanDescription();\n-        }\n-        catch ( CypherException e )\n-        {\n-            throw converted( e );\n-        }\n+      throw converted(e);\n     }\n+  }\n \n-    @Override\n-    public String resultAsString()\n+  @Override\n+  public void close()\n+  {\n+    try\n+    {\n+      // inner iterator might be null if this result was consumed using visitor\n+      if (innerIterator != null)\n+      {\n+        innerIterator.close();\n+      }\n+      // but we still need to close the underlying exetended execution result\n+      inner.close();\n+    } catch (CypherException e)\n     {\n-        try\n-        {\n-            return dumpToString();\n-        }\n-        catch ( CypherException e )\n-        {\n-            throw converted( e );\n-        }\n+      throw converted(e);\n     }\n+  }\n \n-    @Override\n-    public void writeAsStringTo( PrintWriter writer )\n+  @Override\n+  public ExecutionPlanDescription getExecutionPlanDescription()\n+  {\n+    try\n     {\n-        try\n-        {\n-            toString( writer );\n-        }\n-        catch ( CypherException e )\n-        {\n-            throw converted( e );\n-        }\n+      return inner.executionPlanDescription();\n+    } catch (CypherException e)\n+    {\n+      throw converted(e);\n     }\n+  }\n \n-    @Override\n-    public void remove()\n+  @Override\n+  public String resultAsString()\n+  {\n+    try\n     {\n-        throw new UnsupportedOperationException();\n+      return dumpToString();\n+    } catch (CypherException e)\n+    {\n+      throw converted(e);\n     }\n+  }\n \n-    @Override\n-    public <VisitationException extends Exception> void accept( ResultVisitor<VisitationException> visitor )\n-            throws VisitationException\n+  @Override\n+  public void writeAsStringTo(PrintWriter writer)\n+  {\n+    try\n+    {\n+      toString(writer);\n+    } catch (CypherException e)\n     {\n-        inner.accept( visitor );\n+      throw converted(e);\n     }\n-\n-    @Override\n-    public Iterable<Notification> getNotifications()\n+  }\n+\n+  @Override\n+  public void remove()\n+  {\n+    throw new UnsupportedOperationException();\n+  }\n+\n+  @Override\n+  public <VisitationException extends Exception> void accept(ResultVisitor<VisitationException> visitor)\n+      throws VisitationException\n+  {\n+    inner.accept(visitor);\n+  }\n+\n+  @Override\n+  public Iterable<Notification> getNotifications()\n+  {\n+    return JavaConversions.asJavaIterable(inner.notifications());\n+  }\n+\n+  private ResourceIterator<Map<String, Object>> innerIterator()\n+  {\n+    if (innerIterator == null)\n     {\n-        return JavaConversions.asJavaIterable( inner.notifications() );\n+      innerIterator = inner.javaIterator();\n     }\n+    return innerIterator;\n+  }\n+\n+  private static class ExceptionConversion<T> implements ResourceIterator<T>\n+  {\n+    private final ResourceIterator<T> inner;\n \n-    private ResourceIterator<Map<String,Object>> innerIterator()\n+    ExceptionConversion(ResourceIterator<T> inner)\n     {\n-        if ( innerIterator == null )\n-        {\n-            innerIterator = inner.javaIterator();\n-        }\n-        return innerIterator;\n+      this.inner = inner;\n     }\n \n-    private static class ExceptionConversion<T> implements ResourceIterator<T>\n+    @Override\n+    public void close()\n     {\n-        private final ResourceIterator<T> inner;\n-\n-        ExceptionConversion( ResourceIterator<T> inner )\n-        {\n-            this.inner = inner;\n-        }\n-\n-        @Override\n-        public void close()\n-        {\n-            try\n-            {\n-                inner.close();\n-            }\n-            catch ( CypherException e )\n-            {\n-                throw converted( e );\n-            }\n-        }\n-\n-        @Override\n-        public boolean hasNext()\n-        {\n-            try\n-            {\n-                return inner.hasNext();\n-            }\n-            catch ( CypherException e )\n-            {\n-                throw converted( e );\n-            }\n-        }\n-\n-        @Override\n-        public T next()\n-        {\n-            try\n-            {\n-                return inner.next();\n-            }\n-            catch ( CypherException e )\n-            {\n-                throw converted( e );\n-            }\n-        }\n-\n-        @Override\n-        public void remove()\n-        {\n-            try\n-            {\n-                inner.remove();\n-            }\n-            catch ( CypherException e )\n-            {\n-                throw converted( e );\n-            }\n-        }\n+      try\n+      {\n+        inner.close();\n+      } catch (CypherException e)\n+      {\n+        throw converted(e);\n+      }\n     }\n \n-    public InternalExecutionResult internalExecutionResult()\n+    @Override\n+    public boolean hasNext()\n     {\n-        return inner;\n+      try\n+      {\n+        return inner.hasNext();\n+      } catch (CypherException e)\n+      {\n+        throw converted(e);\n+      }\n     }\n \n     @Override\n-    public QueryResult queryResult()\n+    public T next()\n     {\n-        return inner;\n+      try\n+      {\n+        return inner.next();\n+      } catch (CypherException e)\n+      {\n+        throw converted(e);\n+      }\n     }\n \n-    private static QueryExecutionException converted( CypherException e )\n+    @Override\n+    public void remove()\n     {\n-        return new QueryExecutionKernelException( e ).asUserException();\n+      try\n+      {\n+        inner.remove();\n+      } catch (CypherException e)\n+      {\n+        throw converted(e);\n+      }\n     }\n+  }\n+\n+  public InternalExecutionResult internalExecutionResult()\n+  {\n+    return inner;\n+  }\n+\n+  @Override\n+  public QueryResult queryResult()\n+  {\n+    return inner;\n+  }\n+\n+  private static QueryExecutionException converted(CypherException e)\n+  {\n+    return new QueryExecutionKernelException(e).asUserException();\n+  }\n }\n",
            "diff_size": 464
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "105",
                    "column": "55",
                    "severity": "error",
                    "message": "'>' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1138/ExecutionResult.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1138/ExecutionResult.java\nindex 2fd56a71324..cbc2f9a5b50 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1138/ExecutionResult.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1138/ExecutionResult.java\n@@ -102,7 +102,7 @@ public class ExecutionResult implements ResourceIterable<Map<String,Object>>, Re\n         // prefer conforming to the new API and convert exceptions\n         try\n         {\n-            return new ExceptionConversion<>( inner.<T>javaColumnAs( n ) );\n+            return new ExceptionConversion<>( inner.<T> javaColumnAs( n ) );\n         }\n         catch ( CypherException e )\n         {\n@@ -229,7 +229,7 @@ public class ExecutionResult implements ResourceIterable<Map<String,Object>>, Re\n     }\n \n     @Override\n-    public Map<String, Object> next()\n+    public Map<String,Object> next()\n     {\n         try\n         {\n@@ -306,9 +306,8 @@ public class ExecutionResult implements ResourceIterable<Map<String,Object>>, Re\n     }\n \n     @Override\n-    public <VisitationException extends Exception> void accept( ResultVisitor<VisitationException> visitor )\n-            throws VisitationException\n-    {\n+    public <VisitationException extends Exception> void accept( ResultVisitor<VisitationException> visitor ) throws VisitationException\n+{\n         inner.accept( visitor );\n     }\n \n@@ -324,7 +323,8 @@ public class ExecutionResult implements ResourceIterable<Map<String,Object>>, Re\n         {\n             innerIterator = inner.javaIterator();\n         }\n-        return innerIterator;\n+\n+return innerIterator;\n     }\n \n     private static class ExceptionConversion<T> implements ResourceIterator<T>\n@@ -404,4 +404,4 @@ public class ExecutionResult implements ResourceIterable<Map<String,Object>>, Re\n     {\n         return new QueryExecutionKernelException( e ).asUserException();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "106",
                    "column": "54",
                    "severity": "error",
                    "message": "'<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "189",
                    "column": "9",
                    "severity": "error",
                    "message": "'for' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "338",
                    "column": "46",
                    "severity": "error",
                    "message": "'<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1138/ExecutionResult.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/1138/ExecutionResult.java\nindex 2fd56a71324..b1425835bf7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1138/ExecutionResult.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/1138/ExecutionResult.java\n@@ -20,13 +20,11 @@\n package org.neo4j.cypher.internal.javacompat;\n \n import scala.collection.JavaConversions;\n-\n import java.io.PrintWriter;\n import java.util.List;\n import java.util.Map;\n import java.util.Objects;\n import java.util.stream.Stream;\n-\n import org.neo4j.cypher.CypherException;\n import org.neo4j.cypher.internal.runtime.InternalExecutionResult;\n import org.neo4j.cypher.result.QueryResult;\n@@ -54,6 +52,7 @@ import org.neo4j.kernel.impl.query.QueryExecutionKernelException;\n  * set, or use <code>columnAs()</code> to access a single column with result objects\n  * cast to a type.\n  */\n+\n public class ExecutionResult implements ResourceIterable<Map<String,Object>>, Result, QueryResultProvider\n {\n     private final InternalExecutionResult inner;\n@@ -71,6 +70,7 @@ public class ExecutionResult implements ResourceIterable<Map<String,Object>>, Re\n      *\n      * @param   projection Execution result projection to use.\n      */\n+\n     public ExecutionResult( InternalExecutionResult projection )\n     {\n         inner = Objects.requireNonNull( projection );\n@@ -95,6 +95,7 @@ public class ExecutionResult implements ResourceIterable<Map<String,Object>>, Re\n      * @throws ClassCastException when the result object can not be cast to the requested type\n      * @throws org.neo4j.graphdb.NotFoundException when the column name does not appear in the original query\n      */\n+\n     @Override\n     public <T> ResourceIterator<T> columnAs( String n )\n     {\n@@ -102,7 +103,7 @@ public class ExecutionResult implements ResourceIterable<Map<String,Object>>, Re\n         // prefer conforming to the new API and convert exceptions\n         try\n         {\n-            return new ExceptionConversion<>( inner.<T>javaColumnAs( n ) );\n+            return new ExceptionConversion<>( inner. <T>javaColumnAs( n ) );\n         }\n         catch ( CypherException e )\n         {\n@@ -128,6 +129,7 @@ public class ExecutionResult implements ResourceIterable<Map<String,Object>>, Re\n      *\n      * @return List of the column names.\n      */\n+\n     @Override\n     public List<String> columns()\n     {\n@@ -157,6 +159,7 @@ public class ExecutionResult implements ResourceIterable<Map<String,Object>>, Re\n      * </b></p>\n      * @return Returns the execution result\n      */\n+\n     public String dumpToString()\n     {\n         return inner.dumpToString(); // legacy method - don't convert exceptions...\n@@ -166,6 +169,7 @@ public class ExecutionResult implements ResourceIterable<Map<String,Object>>, Re\n      * Returns statistics about this result.\n      * @return statistics about this result\n      */\n+\n     @Override\n     public QueryStatistics getQueryStatistics()\n     {\n@@ -182,7 +186,8 @@ public class ExecutionResult implements ResourceIterable<Map<String,Object>>, Re\n     public void toString( PrintWriter writer )\n     {\n         inner.dumpToString( writer ); // legacy method - don't convert exceptions...\n-        for ( Notification notification : JavaConversions.asJavaIterable( inner.notifications() ) )\n+        for( Notification notification : JavaConversions.asJavaIterable( inner.notifications() )\n+        )\n         {\n             writer.println( notification.getDescription() );\n         }\n@@ -199,8 +204,9 @@ public class ExecutionResult implements ResourceIterable<Map<String,Object>>, Re\n      *\n      * @return An iterator over the result of the query as a map from projected column name to value\n      */\n+\n     @Override\n-    public ResourceIterator<Map<String, Object>> iterator()\n+    public ResourceIterator<Map<String,Object>> iterator()\n     {\n         return innerIterator(); // legacy method - don't convert exceptions...\n     }\n@@ -208,6 +214,7 @@ public class ExecutionResult implements ResourceIterable<Map<String,Object>>, Re\n     /**\n      * @return this result as a {@link Stream}\n      */\n+\n     @Override\n     public Stream<Map<String,Object>> stream()\n     {\n@@ -229,7 +236,7 @@ public class ExecutionResult implements ResourceIterable<Map<String,Object>>, Re\n     }\n \n     @Override\n-    public Map<String, Object> next()\n+    public Map<String,Object> next()\n     {\n         try\n         {\n@@ -252,6 +259,7 @@ public class ExecutionResult implements ResourceIterable<Map<String,Object>>, Re\n                 innerIterator.close();\n             }\n             // but we still need to close the underlying exetended execution result\n+\n             inner.close();\n         }\n         catch ( CypherException e )\n@@ -306,8 +314,7 @@ public class ExecutionResult implements ResourceIterable<Map<String,Object>>, Re\n     }\n \n     @Override\n-    public <VisitationException extends Exception> void accept( ResultVisitor<VisitationException> visitor )\n-            throws VisitationException\n+    public <VisitationException extends Exception> void accept( ResultVisitor<VisitationException> visitor ) throws VisitationException\n     {\n         inner.accept( visitor );\n     }\n@@ -324,10 +331,11 @@ public class ExecutionResult implements ResourceIterable<Map<String,Object>>, Re\n         {\n             innerIterator = inner.javaIterator();\n         }\n+\n         return innerIterator;\n     }\n \n-    private static class ExceptionConversion<T> implements ResourceIterator<T>\n+    private static class ExceptionConversion <T> implements ResourceIterator<T>\n     {\n         private final ResourceIterator<T> inner;\n \n@@ -404,4 +412,4 @@ public class ExecutionResult implements ResourceIterable<Map<String,Object>>, Re\n     {\n         return new QueryExecutionKernelException( e ).asUserException();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 21
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3839",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "66",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "149",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "69",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "118",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "188",
                    "column": "58",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "188",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "191",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "191",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "193",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "193",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "195",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "195",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "201",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "201",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3839/ConfiguringPageCacheFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3839/ConfiguringPageCacheFactory.java\nindex 3b31e108cbe..74ebba308ea 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3839/ConfiguringPageCacheFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3839/ConfiguringPageCacheFactory.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.pagecache;\n \n import org.neo4j.helpers.Service;\n@@ -42,163 +43,163 @@ import static org.neo4j.kernel.configuration.Settings.BYTES;\n \n public class ConfiguringPageCacheFactory\n {\n-    private PageSwapperFactory swapperFactory;\n-    private final FileSystemAbstraction fs;\n-    private final Config config;\n-    private final PageCacheTracer pageCacheTracer;\n-    private final Log log;\n-    private final VersionContextSupplier versionContextSupplier;\n-    private PageCache pageCache;\n-    private PageCursorTracerSupplier pageCursorTracerSupplier;\n-\n-    /**\n-     * Construct configuring page cache factory\n-     * @param fs fileSystem file system that page cache will be based on\n-     * @param config page swapper configuration\n-     * @param pageCacheTracer global page cache tracer\n-     * @param pageCursorTracerSupplier supplier of thread local (transaction local) page cursor tracer that will provide\n-     * thread local page cache statistics\n-     * @param log page cache factory log\n-     * @param versionContextSupplier cursor context factory\n-     */\n-    public ConfiguringPageCacheFactory( FileSystemAbstraction fs, Config config, PageCacheTracer pageCacheTracer,\n-            PageCursorTracerSupplier pageCursorTracerSupplier, Log log,\n-            VersionContextSupplier versionContextSupplier )\n+  private PageSwapperFactory swapperFactory;\n+  private final FileSystemAbstraction fs;\n+  private final Config config;\n+  private final PageCacheTracer pageCacheTracer;\n+  private final Log log;\n+  private final VersionContextSupplier versionContextSupplier;\n+  private PageCache pageCache;\n+  private PageCursorTracerSupplier pageCursorTracerSupplier;\n+\n+  /**\n+   * Construct configuring page cache factory\n+   *\n+   * @param fs                       fileSystem file system that page cache will be based on\n+   * @param config                   page swapper configuration\n+   * @param pageCacheTracer          global page cache tracer\n+   * @param pageCursorTracerSupplier supplier of thread local (transaction local) page cursor tracer that will provide\n+   *                                 thread local page cache statistics\n+   * @param log                      page cache factory log\n+   * @param versionContextSupplier   cursor context factory\n+   */\n+  public ConfiguringPageCacheFactory(FileSystemAbstraction fs, Config config, PageCacheTracer pageCacheTracer,\n+                                     PageCursorTracerSupplier pageCursorTracerSupplier, Log log,\n+                                     VersionContextSupplier versionContextSupplier)\n+  {\n+    this.fs = fs;\n+    this.versionContextSupplier = versionContextSupplier;\n+    this.config = config;\n+    this.pageCacheTracer = pageCacheTracer;\n+    this.log = log;\n+    this.pageCursorTracerSupplier = pageCursorTracerSupplier;\n+  }\n+\n+  public synchronized PageCache getOrCreatePageCache()\n+  {\n+    if (pageCache == null)\n     {\n-        this.fs = fs;\n-        this.versionContextSupplier = versionContextSupplier;\n-        this.config = config;\n-        this.pageCacheTracer = pageCacheTracer;\n-        this.log = log;\n-        this.pageCursorTracerSupplier = pageCursorTracerSupplier;\n+      this.swapperFactory = createAndConfigureSwapperFactory(fs, config, log);\n+      this.pageCache = createPageCache();\n     }\n-\n-    public synchronized PageCache getOrCreatePageCache()\n+    return pageCache;\n+  }\n+\n+  protected PageCache createPageCache()\n+  {\n+    checkPageSize(config);\n+    MemoryAllocator memoryAllocator = buildMemoryAllocator(config);\n+    return new MuninnPageCache(swapperFactory, memoryAllocator, pageCacheTracer, pageCursorTracerSupplier,\n+        versionContextSupplier);\n+  }\n+\n+  private MemoryAllocator buildMemoryAllocator(Config config)\n+  {\n+    String pageCacheMemorySetting = config.get(pagecache_memory);\n+    if (pageCacheMemorySetting == null)\n     {\n-        if ( pageCache == null )\n-        {\n-            this.swapperFactory = createAndConfigureSwapperFactory( fs, config, log );\n-            this.pageCache = createPageCache();\n-        }\n-        return pageCache;\n+      long heuristic = defaultHeuristicPageCacheMemory();\n+      log.warn(\"The \" + pagecache_memory.name() + \" setting has not been configured. It is recommended that this \" +\n+          \"setting is always explicitly configured, to ensure the system has a balanced configuration. \" +\n+          \"Until then, a computed heuristic value of \" + heuristic + \" bytes will be used instead. \" +\n+          \"Run `neo4j-admin memrec` for memory configuration suggestions.\");\n+      pageCacheMemorySetting = \"\" + heuristic;\n     }\n \n-    protected PageCache createPageCache()\n-    {\n-        checkPageSize( config );\n-        MemoryAllocator memoryAllocator = buildMemoryAllocator( config );\n-        return new MuninnPageCache( swapperFactory, memoryAllocator, pageCacheTracer, pageCursorTracerSupplier,\n-                versionContextSupplier );\n-    }\n+    return MemoryAllocator.createAllocator(pageCacheMemorySetting, GlobalMemoryTracker.INSTANCE);\n+  }\n \n-    private MemoryAllocator buildMemoryAllocator( Config config )\n+  public static long defaultHeuristicPageCacheMemory()\n+  {\n+    // First check if we have a default override...\n+    String defaultMemoryOverride = System.getProperty(\"dbms.pagecache.memory.default.override\");\n+    if (defaultMemoryOverride != null)\n     {\n-        String pageCacheMemorySetting = config.get( pagecache_memory );\n-        if ( pageCacheMemorySetting == null )\n-        {\n-            long heuristic = defaultHeuristicPageCacheMemory();\n-            log.warn( \"The \" + pagecache_memory.name() + \" setting has not been configured. It is recommended that this \" +\n-                      \"setting is always explicitly configured, to ensure the system has a balanced configuration. \" +\n-                      \"Until then, a computed heuristic value of \" + heuristic + \" bytes will be used instead. \" +\n-                      \"Run `neo4j-admin memrec` for memory configuration suggestions.\" );\n-            pageCacheMemorySetting = \"\" + heuristic;\n-        }\n-\n-        return MemoryAllocator.createAllocator( pageCacheMemorySetting, GlobalMemoryTracker.INSTANCE );\n+      return BYTES.apply(defaultMemoryOverride);\n     }\n \n-    public static long defaultHeuristicPageCacheMemory()\n+    double ratioOfFreeMem = 0.50;\n+    String defaultMemoryRatioOverride = System.getProperty(\"dbms.pagecache.memory.ratio.default.override\");\n+    if (defaultMemoryRatioOverride != null)\n     {\n-        // First check if we have a default override...\n-        String defaultMemoryOverride = System.getProperty( \"dbms.pagecache.memory.default.override\" );\n-        if ( defaultMemoryOverride != null )\n-        {\n-            return BYTES.apply( defaultMemoryOverride );\n-        }\n-\n-        double ratioOfFreeMem = 0.50;\n-        String defaultMemoryRatioOverride = System.getProperty( \"dbms.pagecache.memory.ratio.default.override\" );\n-        if ( defaultMemoryRatioOverride != null )\n-        {\n-            ratioOfFreeMem = Double.parseDouble( defaultMemoryRatioOverride );\n-        }\n-\n-        // Try to compute (RAM - maxheap) * 0.50 if we can get reliable numbers...\n-        long maxHeapMemory = Runtime.getRuntime().maxMemory();\n-        if ( 0 < maxHeapMemory && maxHeapMemory < Long.MAX_VALUE )\n-        {\n-            try\n-            {\n-                long physicalMemory = OsBeanUtil.getTotalPhysicalMemory();\n-                if ( 0 < physicalMemory && physicalMemory < Long.MAX_VALUE && maxHeapMemory < physicalMemory )\n-                {\n-                    long heuristic = (long) ((physicalMemory - maxHeapMemory) * ratioOfFreeMem);\n-                    long min = ByteUnit.mebiBytes( 32 ); // We'd like at least 32 MiBs.\n-                    long max = Math.min( maxHeapMemory * 70, ByteUnit.gibiBytes( 20 ) );\n-                    // Don't heuristically take more than 20 GiBs, and don't take more than 70 times our max heap.\n-                    // 20 GiBs of page cache memory is ~2.6 million 8 KiB pages. If each page has an overhead of\n-                    // 72 bytes, then this will take up ~175 MiBs of heap memory. We should be able to tolerate that\n-                    // in most environments. The \"no more than 70 times heap\" heuristic is based on the page size over\n-                    // the per page overhead, 8192 / 72 ~= 114, plus leaving some extra room on the heap for the rest\n-                    // of the system. This means that we won't heuristically try to create a page cache that is too\n-                    // large to fit on the heap.\n-                    return Math.min( max, Math.max( min, heuristic ) );\n-                }\n-            }\n-            catch ( Exception ignore )\n-            {\n-            }\n-        }\n-        // ... otherwise we just go with 2 GiBs.\n-        return ByteUnit.gibiBytes( 2 );\n+      ratioOfFreeMem = Double.parseDouble(defaultMemoryRatioOverride);\n     }\n \n-    public void checkPageSize( Config config )\n+    // Try to compute (RAM - maxheap) * 0.50 if we can get reliable numbers...\n+    long maxHeapMemory = Runtime.getRuntime().maxMemory();\n+    if (0 < maxHeapMemory && maxHeapMemory < Long.MAX_VALUE)\n     {\n-        if ( config.get( mapped_memory_page_size ).intValue() != 0 )\n+      try\n+      {\n+        long physicalMemory = OsBeanUtil.getTotalPhysicalMemory();\n+        if (0 < physicalMemory && physicalMemory < Long.MAX_VALUE && maxHeapMemory < physicalMemory)\n         {\n-            log.warn( \"The setting unsupported.dbms.memory.pagecache.pagesize does not have any effect. It is \" +\n-                    \"deprecated and will be removed in a future version.\" );\n+          long heuristic = (long) ((physicalMemory - maxHeapMemory) * ratioOfFreeMem);\n+          long min = ByteUnit.mebiBytes(32); // We'd like at least 32 MiBs.\n+          long max = Math.min(maxHeapMemory * 70, ByteUnit.gibiBytes(20));\n+          // Don't heuristically take more than 20 GiBs, and don't take more than 70 times our max heap.\n+          // 20 GiBs of page cache memory is ~2.6 million 8 KiB pages. If each page has an overhead of\n+          // 72 bytes, then this will take up ~175 MiBs of heap memory. We should be able to tolerate that\n+          // in most environments. The \"no more than 70 times heap\" heuristic is based on the page size over\n+          // the per page overhead, 8192 / 72 ~= 114, plus leaving some extra room on the heap for the rest\n+          // of the system. This means that we won't heuristically try to create a page cache that is too\n+          // large to fit on the heap.\n+          return Math.min(max, Math.max(min, heuristic));\n         }\n+      } catch (Exception ignore)\n+      {\n+      }\n     }\n+    // ... otherwise we just go with 2 GiBs.\n+    return ByteUnit.gibiBytes(2);\n+  }\n \n-    public void dumpConfiguration()\n+  public void checkPageSize(Config config)\n+  {\n+    if (config.get(mapped_memory_page_size).intValue() != 0)\n     {\n-        checkPageSize( config );\n-        String pageCacheMemory = config.get( pagecache_memory );\n-        long totalPhysicalMemory = OsBeanUtil.getTotalPhysicalMemory();\n-        String totalPhysicalMemMb = (totalPhysicalMemory == OsBeanUtil.VALUE_UNAVAILABLE)\n-                                    ? \"?\" : \"\" + ByteUnit.Byte.toMebiBytes( totalPhysicalMemory );\n-        long maxVmUsageMb = ByteUnit.Byte.toMebiBytes( Runtime.getRuntime().maxMemory() );\n-        String msg = \"Physical mem: \" + totalPhysicalMemMb + \" MiB,\" +\n-                     \" Heap size: \" + maxVmUsageMb + \" MiB,\" +\n-                     \" Page cache: \" + pageCacheMemory + \".\";\n-\n-        log.info( msg );\n+      log.warn(\"The setting unsupported.dbms.memory.pagecache.pagesize does not have any effect. It is \" +\n+          \"deprecated and will be removed in a future version.\");\n     }\n-\n-    private static PageSwapperFactory createAndConfigureSwapperFactory( FileSystemAbstraction fs, Config config, Log log )\n-    {\n-        PageSwapperFactory factory = getPageSwapperFactory( config, log );\n-        factory.open( fs, config );\n-        return factory;\n-    }\n-\n-    private static PageSwapperFactory getPageSwapperFactory( Config config, Log log )\n+  }\n+\n+  public void dumpConfiguration()\n+  {\n+    checkPageSize(config);\n+    String pageCacheMemory = config.get(pagecache_memory);\n+    long totalPhysicalMemory = OsBeanUtil.getTotalPhysicalMemory();\n+    String totalPhysicalMemMb = (totalPhysicalMemory == OsBeanUtil.VALUE_UNAVAILABLE)\n+        ? \"?\" : \"\" + ByteUnit.Byte.toMebiBytes(totalPhysicalMemory);\n+    long maxVmUsageMb = ByteUnit.Byte.toMebiBytes(Runtime.getRuntime().maxMemory());\n+    String msg = \"Physical mem: \" + totalPhysicalMemMb + \" MiB,\" +\n+        \" Heap size: \" + maxVmUsageMb + \" MiB,\" +\n+        \" Page cache: \" + pageCacheMemory + \".\";\n+\n+    log.info(msg);\n+  }\n+\n+  private static PageSwapperFactory createAndConfigureSwapperFactory(FileSystemAbstraction fs, Config config, Log log)\n+  {\n+    PageSwapperFactory factory = getPageSwapperFactory(config, log);\n+    factory.open(fs, config);\n+    return factory;\n+  }\n+\n+  private static PageSwapperFactory getPageSwapperFactory(Config config, Log log)\n+  {\n+    String desiredImplementation = config.get(pagecache_swapper);\n+    if (desiredImplementation != null)\n     {\n-        String desiredImplementation = config.get( pagecache_swapper );\n-        if ( desiredImplementation != null )\n+      for (PageSwapperFactory factory : Service.load(PageSwapperFactory.class))\n+      {\n+        if (factory.implementationName().equals(desiredImplementation))\n         {\n-            for ( PageSwapperFactory factory : Service.load( PageSwapperFactory.class ) )\n-            {\n-                if ( factory.implementationName().equals( desiredImplementation ) )\n-                {\n-                    log.info( \"Configured \" + pagecache_swapper.name() + \": \" + desiredImplementation );\n-                    return factory;\n-                }\n-            }\n-            throw new IllegalArgumentException( \"Cannot find PageSwapperFactory: \" + desiredImplementation );\n+          log.info(\"Configured \" + pagecache_swapper.name() + \": \" + desiredImplementation);\n+          return factory;\n         }\n-        return new SingleFilePageSwapperFactory();\n+      }\n+      throw new IllegalArgumentException(\"Cannot find PageSwapperFactory: \" + desiredImplementation);\n     }\n+    return new SingleFilePageSwapperFactory();\n+  }\n }\n",
            "diff_size": 214
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "101",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 381).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "158",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 170).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "169",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 170).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "169",
                    "column": "170",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3839/ConfiguringPageCacheFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3839/ConfiguringPageCacheFactory.java\nindex 3b31e108cbe..9ba5d475c10 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3839/ConfiguringPageCacheFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3839/ConfiguringPageCacheFactory.java\n@@ -80,7 +80,8 @@ public class ConfiguringPageCacheFactory\n             this.swapperFactory = createAndConfigureSwapperFactory( fs, config, log );\n             this.pageCache = createPageCache();\n         }\n-        return pageCache;\n+\n+return pageCache;\n     }\n \n     protected PageCache createPageCache()\n@@ -97,11 +98,8 @@ public class ConfiguringPageCacheFactory\n         if ( pageCacheMemorySetting == null )\n         {\n             long heuristic = defaultHeuristicPageCacheMemory();\n-            log.warn( \"The \" + pagecache_memory.name() + \" setting has not been configured. It is recommended that this \" +\n-                      \"setting is always explicitly configured, to ensure the system has a balanced configuration. \" +\n-                      \"Until then, a computed heuristic value of \" + heuristic + \" bytes will be used instead. \" +\n-                      \"Run `neo4j-admin memrec` for memory configuration suggestions.\" );\n-            pageCacheMemorySetting = \"\" + heuristic;\n+            log.warn( \"The \" + pagecache_memory.name() + \" setting has not been configured. It is recommended that this \" + \"setting is always explicitly configured, to ensure the system has a balanced configuration. \" + \"Until then, a computed heuristic value of \" + heuristic + \" bytes will be used instead. \" + \"Run `neo4j-admin memrec` for memory configuration suggestions.\" );\n+pageCacheMemorySetting = \"\" + heuristic;\n         }\n \n         return MemoryAllocator.createAllocator( pageCacheMemorySetting, GlobalMemoryTracker.INSTANCE );\n@@ -157,9 +155,8 @@ public class ConfiguringPageCacheFactory\n     {\n         if ( config.get( mapped_memory_page_size ).intValue() != 0 )\n         {\n-            log.warn( \"The setting unsupported.dbms.memory.pagecache.pagesize does not have any effect. It is \" +\n-                    \"deprecated and will be removed in a future version.\" );\n-        }\n+            log.warn( \"The setting unsupported.dbms.memory.pagecache.pagesize does not have any effect. It is \" + \"deprecated and will be removed in a future version.\" );\n+    }\n     }\n \n     public void dumpConfiguration()\n@@ -167,14 +164,9 @@ public class ConfiguringPageCacheFactory\n         checkPageSize( config );\n         String pageCacheMemory = config.get( pagecache_memory );\n         long totalPhysicalMemory = OsBeanUtil.getTotalPhysicalMemory();\n-        String totalPhysicalMemMb = (totalPhysicalMemory == OsBeanUtil.VALUE_UNAVAILABLE)\n-                                    ? \"?\" : \"\" + ByteUnit.Byte.toMebiBytes( totalPhysicalMemory );\n-        long maxVmUsageMb = ByteUnit.Byte.toMebiBytes( Runtime.getRuntime().maxMemory() );\n-        String msg = \"Physical mem: \" + totalPhysicalMemMb + \" MiB,\" +\n-                     \" Heap size: \" + maxVmUsageMb + \" MiB,\" +\n-                     \" Page cache: \" + pageCacheMemory + \".\";\n-\n-        log.info( msg );\n+        String totalPhysicalMemMb = (totalPhysicalMemory == OsBeanUtil.VALUE_UNAVAILABLE) ? \"?\" : \"\" + ByteUnit.Byte.toMebiBytes( totalPhysicalMemory );\n+    long maxVmUsageMb = ByteUnit.Byte.toMebiBytes( Runtime.getRuntime().maxMemory() );\n+        String msg = \"Physical mem: \" + totalPhysicalMemMb + \" MiB,\" + \" Heap size: \" + maxVmUsageMb + \" MiB,\" + \" Page cache: \" + pageCacheMemory + \".\"; log.info( msg );\n     }\n \n     private static PageSwapperFactory createAndConfigureSwapperFactory( FileSystemAbstraction fs, Config config, Log log )\n@@ -201,4 +193,4 @@ public class ConfiguringPageCacheFactory\n         }\n         return new SingleFilePageSwapperFactory();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 19
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "neo4j-neo4j",
    "error_id": "419",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "69",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "131",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "54",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "61",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "92",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "106",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "144",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "108",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "134",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "143",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "95",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "147",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "58",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "134",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "166",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "166",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "182",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "185",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "191",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "191",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "197",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "198",
                    "column": "109",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "201",
                    "column": "59",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "201",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "208",
                    "column": "54",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "209",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "212",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "212",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "215",
                    "column": "66",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "215",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "217",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "217",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "224",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "224",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/419/FullCheck.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/419/FullCheck.java\nindex f5612ac11ac..4de42836a47 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/419/FullCheck.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/419/FullCheck.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.consistency.checking.full;\n \n import java.io.IOException;\n@@ -65,164 +66,164 @@ public class FullCheck\n     private final int threads;\n     private ConsistencyFlags flags;\n \n-    public FullCheck( ProgressMonitorFactory progressFactory, int threads,\n-                      ConsistencyFlags consistencyFlags, Config config, boolean verbose, NodeBasedMemoryLimiter.Factory memoryLimit )\n+    public FullCheck(ProgressMonitorFactory progressFactory, int threads,\n+                     ConsistencyFlags consistencyFlags, Config config, boolean verbose, NodeBasedMemoryLimiter.Factory memoryLimit)\n     {\n         this.threads = threads;\n         this.progressFactory = progressFactory;\n         this.flags = consistencyFlags;\n-        this.samplingConfig = new IndexSamplingConfig( config );\n+        this.samplingConfig = new IndexSamplingConfig(config);\n         this.config = config;\n         this.verbose = verbose;\n         this.memoryLimit = memoryLimit;\n     }\n \n-    public ConsistencySummaryStatistics execute( PageCache pageCache, DirectStoreAccess stores, ThrowingSupplier<CountsStore,IOException> countsSupplier,\n-            IndexAccessors.IndexAccessorLookup indexAccessorLookup, PageCacheTracer pageCacheTracer, MemoryTracker memoryTracker, Log log )\n-            throws ConsistencyCheckIncompleteException\n+    public ConsistencySummaryStatistics execute(PageCache pageCache, DirectStoreAccess stores, ThrowingSupplier<CountsStore, IOException> countsSupplier,\n+                                                IndexAccessors.IndexAccessorLookup indexAccessorLookup, PageCacheTracer pageCacheTracer,\n+                                                MemoryTracker memoryTracker, Log log)\n+      throws ConsistencyCheckIncompleteException\n     {\n         ConsistencySummaryStatistics summary = new ConsistencySummaryStatistics();\n-        InconsistencyReport report = new InconsistencyReport( new InconsistencyMessageLogger( log ), summary );\n-        CountsStore countsStore = getCountsStore( countsSupplier, log, summary );\n-        execute( pageCache, stores, report, countsStore, indexAccessorLookup, pageCacheTracer, memoryTracker );\n+        InconsistencyReport report = new InconsistencyReport(new InconsistencyMessageLogger(log), summary);\n+        CountsStore countsStore = getCountsStore(countsSupplier, log, summary);\n+        execute(pageCache, stores, report, countsStore, indexAccessorLookup, pageCacheTracer, memoryTracker);\n \n-        if ( !summary.isConsistent() )\n+        if (!summary.isConsistent())\n         {\n-            log.warn( \"Inconsistencies found: \" + summary );\n+            log.warn(\"Inconsistencies found: \" + summary);\n         }\n         return summary;\n     }\n \n-    private CountsStore getCountsStore( ThrowingSupplier<CountsStore,IOException> countsSupplier, Log log, ConsistencySummaryStatistics summary )\n+    private CountsStore getCountsStore(ThrowingSupplier<CountsStore, IOException> countsSupplier, Log log, ConsistencySummaryStatistics summary)\n     {\n         // Perhaps other read-only use cases thinks it's fine to just rebuild an in-memory counts store,\n         // but the consistency checker should instead prevent rebuild and report that the counts store is broken or missing\n         CountsStore countsStore = CountsStore.NULL_INSTANCE;\n-        if ( flags.isCheckGraph() || flags.isCheckIndexStructure() )\n+        if (flags.isCheckGraph() || flags.isCheckIndexStructure())\n         {\n             try\n             {\n                 countsStore = countsSupplier.get();\n-            }\n-            catch ( Exception e )\n+            } catch (Exception e)\n             {\n-                log.error( \"Counts store is missing, broken or of an older format and will not be consistency checked\", e );\n-                summary.update( RecordType.COUNTS, 1, 0 );\n+                log.error(\"Counts store is missing, broken or of an older format and will not be consistency checked\", e);\n+                summary.update(RecordType.COUNTS, 1, 0);\n             }\n         }\n         return countsStore;\n     }\n \n-    void execute( PageCache pageCache, final DirectStoreAccess directStoreAccess, final InconsistencyReport report, CountsStore countsStore,\n-            IndexAccessors.IndexAccessorLookup indexAccessorLookup, PageCacheTracer pageCacheTracer, MemoryTracker memoryTracker )\n-            throws ConsistencyCheckIncompleteException\n+    void execute(PageCache pageCache, final DirectStoreAccess directStoreAccess, final InconsistencyReport report, CountsStore countsStore,\n+                 IndexAccessors.IndexAccessorLookup indexAccessorLookup, PageCacheTracer pageCacheTracer, MemoryTracker memoryTracker)\n+      throws ConsistencyCheckIncompleteException\n     {\n-        try ( IndexAccessors indexes = new IndexAccessors( directStoreAccess.indexes(), directStoreAccess.nativeStores(), samplingConfig,\n-                indexAccessorLookup, pageCacheTracer, directStoreAccess.tokenHolders().lookupWithIds() ) )\n+        try (IndexAccessors indexes = new IndexAccessors(directStoreAccess.indexes(), directStoreAccess.nativeStores(), samplingConfig,\n+          indexAccessorLookup, pageCacheTracer, directStoreAccess.tokenHolders().lookupWithIds()))\n         {\n-            if ( !config.get( RelationshipTypeScanStoreSettings.enable_relationship_type_scan_store ) && flags.isCheckRelationshipTypeScanStore() )\n+            if (!config.get(RelationshipTypeScanStoreSettings.enable_relationship_type_scan_store) && flags.isCheckRelationshipTypeScanStore())\n             {\n-                report.warning( \"Consistency checker was configured to validate consistency of relationship type scan store, \" +\n-                        \"but this auxiliary store is not enabled and can therefore not be validated.\" );\n-                report.updateSummary( RecordType.RELATIONSHIP_TYPE_SCAN_DOCUMENT, 0, 1 );\n-                flags = new ConsistencyFlags( flags.isCheckGraph(), flags.isCheckIndexes(), flags.isCheckIndexStructure(), flags.isCheckLabelScanStore(), false,\n-                        flags.isCheckPropertyOwners() );\n+                report.warning(\"Consistency checker was configured to validate consistency of relationship type scan store, \" +\n+                  \"but this auxiliary store is not enabled and can therefore not be validated.\");\n+                report.updateSummary(RecordType.RELATIONSHIP_TYPE_SCAN_DOCUMENT, 0, 1);\n+                flags = new ConsistencyFlags(flags.isCheckGraph(), flags.isCheckIndexes(), flags.isCheckIndexStructure(), flags.isCheckLabelScanStore(), false,\n+                  flags.isCheckPropertyOwners());\n             }\n \n-            if ( flags.isCheckIndexStructure() )\n+            if (flags.isCheckIndexStructure())\n             {\n-                consistencyCheckIndexStructure( directStoreAccess.labelScanStore(), directStoreAccess.relationshipTypeScanStore(),\n-                        directStoreAccess.indexStatisticsStore(), countsStore, indexes, allIdGenerators( directStoreAccess ), report, progressFactory,\n-                        pageCacheTracer );\n+                consistencyCheckIndexStructure(directStoreAccess.labelScanStore(), directStoreAccess.relationshipTypeScanStore(),\n+                  directStoreAccess.indexStatisticsStore(), countsStore, indexes, allIdGenerators(directStoreAccess), report, progressFactory,\n+                  pageCacheTracer);\n             }\n \n-            try ( RecordStorageConsistencyChecker checker = new RecordStorageConsistencyChecker( pageCache,\n-                    directStoreAccess.nativeStores(), countsStore, directStoreAccess.labelScanStore(),\n-                    directStoreAccess.relationshipTypeScanStore(), indexes, report, progressFactory, config, threads, verbose, flags, memoryLimit,\n-                    pageCacheTracer, memoryTracker ) )\n+            try (RecordStorageConsistencyChecker checker = new RecordStorageConsistencyChecker(pageCache,\n+              directStoreAccess.nativeStores(), countsStore, directStoreAccess.labelScanStore(),\n+              directStoreAccess.relationshipTypeScanStore(), indexes, report, progressFactory, config, threads, verbose, flags, memoryLimit,\n+              pageCacheTracer, memoryTracker))\n             {\n                 checker.check();\n             }\n-        }\n-        catch ( Exception e )\n+        } catch (Exception e)\n         {\n-            throw new ConsistencyCheckIncompleteException( e );\n+            throw new ConsistencyCheckIncompleteException(e);\n         }\n     }\n \n-    private List<IdGenerator> allIdGenerators( DirectStoreAccess directStoreAccess )\n+    private List<IdGenerator> allIdGenerators(DirectStoreAccess directStoreAccess)\n     {\n         List<IdGenerator> idGenerators = new ArrayList<>();\n-        directStoreAccess.idGeneratorFactory().visit( idGenerators::add );\n+        directStoreAccess.idGeneratorFactory().visit(idGenerators::add);\n         return idGenerators;\n     }\n \n-    private static void consistencyCheckIndexStructure( LabelScanStore labelScanStore,\n-            RelationshipTypeScanStore relationshipTypeScanStore, IndexStatisticsStore indexStatisticsStore,\n-            CountsStore countsStore, IndexAccessors indexes,\n-            List<IdGenerator> idGenerators, InconsistencyReport report, ProgressMonitorFactory progressMonitorFactory, PageCacheTracer pageCacheTracer )\n+    private static void consistencyCheckIndexStructure(LabelScanStore labelScanStore,\n+                                                       RelationshipTypeScanStore relationshipTypeScanStore, IndexStatisticsStore indexStatisticsStore,\n+                                                       CountsStore countsStore, IndexAccessors indexes,\n+                                                       List<IdGenerator> idGenerators, InconsistencyReport report,\n+                                                       ProgressMonitorFactory progressMonitorFactory, PageCacheTracer pageCacheTracer)\n     {\n-        try ( var cursorTracer = pageCacheTracer.createPageCursorTracer( INDEX_STRUCTURE_CHECKER_TAG ) )\n+        try (var cursorTracer = pageCacheTracer.createPageCursorTracer(INDEX_STRUCTURE_CHECKER_TAG))\n         {\n-            final long schemaIndexCount = Iterables.count( indexes.onlineRules() );\n+            final long schemaIndexCount = Iterables.count(indexes.onlineRules());\n             final long additionalCount = 1 /*LabelScanStore*/ + 1 /*RelationshipTypeScanStore*/ + 1 /*IndexStatisticsStore*/ + 1 /*countsStore*/;\n             final long idGeneratorsCount = idGenerators.size();\n             final long totalCount = schemaIndexCount + additionalCount + idGeneratorsCount;\n-            var listener = progressMonitorFactory.singlePart( \"Index structure consistency check\", totalCount );\n+            var listener = progressMonitorFactory.singlePart(\"Index structure consistency check\", totalCount);\n             listener.started();\n \n-            consistencyCheckNonSchemaIndexes( report, listener, labelScanStore, relationshipTypeScanStore, indexStatisticsStore, countsStore, idGenerators,\n-                    cursorTracer );\n-            consistencyCheckSchemaIndexes( indexes, report, listener, cursorTracer );\n+            consistencyCheckNonSchemaIndexes(report, listener, labelScanStore, relationshipTypeScanStore, indexStatisticsStore, countsStore, idGenerators,\n+              cursorTracer);\n+            consistencyCheckSchemaIndexes(indexes, report, listener, cursorTracer);\n             listener.done();\n         }\n     }\n \n-    private static void consistencyCheckNonSchemaIndexes( InconsistencyReport report, ProgressListener listener,\n-            LabelScanStore labelScanStore, RelationshipTypeScanStore relationshipTypeScanStore,\n-            IndexStatisticsStore indexStatisticsStore, CountsStore countsStore, List<IdGenerator> idGenerators,\n-            PageCursorTracer cursorTracer )\n+    private static void consistencyCheckNonSchemaIndexes(InconsistencyReport report, ProgressListener listener,\n+                                                         LabelScanStore labelScanStore, RelationshipTypeScanStore relationshipTypeScanStore,\n+                                                         IndexStatisticsStore indexStatisticsStore, CountsStore countsStore, List<IdGenerator> idGenerators,\n+                                                         PageCursorTracer cursorTracer)\n     {\n-        consistencyCheckSingleCheckable( report, listener, labelScanStore, RecordType.LABEL_SCAN_DOCUMENT, cursorTracer );\n-        consistencyCheckSingleCheckable( report, listener, relationshipTypeScanStore, RecordType.RELATIONSHIP_TYPE_SCAN_DOCUMENT, cursorTracer );\n-        consistencyCheckSingleCheckable( report, listener, indexStatisticsStore, RecordType.INDEX_STATISTICS, cursorTracer );\n-        consistencyCheckSingleCheckable( report, listener, countsStore, RecordType.COUNTS, cursorTracer );\n-        for ( IdGenerator idGenerator : idGenerators )\n+        consistencyCheckSingleCheckable(report, listener, labelScanStore, RecordType.LABEL_SCAN_DOCUMENT, cursorTracer);\n+        consistencyCheckSingleCheckable(report, listener, relationshipTypeScanStore, RecordType.RELATIONSHIP_TYPE_SCAN_DOCUMENT, cursorTracer);\n+        consistencyCheckSingleCheckable(report, listener, indexStatisticsStore, RecordType.INDEX_STATISTICS, cursorTracer);\n+        consistencyCheckSingleCheckable(report, listener, countsStore, RecordType.COUNTS, cursorTracer);\n+        for (IdGenerator idGenerator : idGenerators)\n         {\n-            consistencyCheckSingleCheckable( report, listener, idGenerator, RecordType.ID_STORE, cursorTracer );\n+            consistencyCheckSingleCheckable(report, listener, idGenerator, RecordType.ID_STORE, cursorTracer);\n         }\n     }\n \n-    private static void consistencyCheckSingleCheckable( InconsistencyReport report, ProgressListener listener, ConsistencyCheckable checkable,\n-            RecordType recordType, PageCursorTracer cursorTracer )\n+    private static void consistencyCheckSingleCheckable(InconsistencyReport report, ProgressListener listener, ConsistencyCheckable checkable,\n+                                                        RecordType recordType, PageCursorTracer cursorTracer)\n     {\n-        ConsistencyReporter.FormattingDocumentedHandler handler = ConsistencyReporter.formattingHandler( report, recordType );\n-        ReporterFactory proxyFactory = new ReporterFactory( handler );\n+        ConsistencyReporter.FormattingDocumentedHandler handler = ConsistencyReporter.formattingHandler(report, recordType);\n+        ReporterFactory proxyFactory = new ReporterFactory(handler);\n \n-        checkable.consistencyCheck( proxyFactory, cursorTracer );\n+        checkable.consistencyCheck(proxyFactory, cursorTracer);\n         handler.updateSummary();\n-        listener.add( 1 );\n+        listener.add(1);\n     }\n \n-    private static void consistencyCheckSchemaIndexes( IndexAccessors indexes, InconsistencyReport report, ProgressListener listener,\n-            PageCursorTracer cursorTracer )\n+    private static void consistencyCheckSchemaIndexes(IndexAccessors indexes, InconsistencyReport report, ProgressListener listener,\n+                                                      PageCursorTracer cursorTracer)\n     {\n         List<IndexDescriptor> rulesToRemove = new ArrayList<>();\n-        for ( IndexDescriptor onlineRule : indexes.onlineRules() )\n+        for (IndexDescriptor onlineRule : indexes.onlineRules())\n         {\n-            ConsistencyReporter.FormattingDocumentedHandler handler = ConsistencyReporter.formattingHandler( report, RecordType.INDEX );\n-            ReporterFactory reporterFactory = new ReporterFactory( handler );\n-            IndexAccessor accessor = indexes.accessorFor( onlineRule );\n-            if ( !accessor.consistencyCheck( reporterFactory, cursorTracer ) )\n+            ConsistencyReporter.FormattingDocumentedHandler handler = ConsistencyReporter.formattingHandler(report, RecordType.INDEX);\n+            ReporterFactory reporterFactory = new ReporterFactory(handler);\n+            IndexAccessor accessor = indexes.accessorFor(onlineRule);\n+            if (!accessor.consistencyCheck(reporterFactory, cursorTracer))\n             {\n-                rulesToRemove.add( onlineRule );\n+                rulesToRemove.add(onlineRule);\n             }\n             handler.updateSummary();\n-            listener.add( 1 );\n+            listener.add(1);\n         }\n-        for ( IndexDescriptor toRemove : rulesToRemove )\n+        for (IndexDescriptor toRemove : rulesToRemove)\n         {\n-            indexes.remove( toRemove );\n+            indexes.remove(toRemove);\n         }\n     }\n }\n",
            "diff_size": 81
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
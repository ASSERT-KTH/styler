{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2393",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "46",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "74",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2393/RecordCursors.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2393/RecordCursors.java\nindex 09fa1020c7c..7c310bc0b0d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2393/RecordCursors.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2393/RecordCursors.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.store;\n \n import org.neo4j.io.IOUtils;\n@@ -34,69 +35,69 @@ import static org.neo4j.kernel.impl.store.record.RecordLoad.NORMAL;\n  */\n public class RecordCursors implements AutoCloseable\n {\n-    private final RecordCursor<NodeRecord> node;\n-    private final RecordCursor<RelationshipRecord> relationship;\n-    private final RecordCursor<RelationshipGroupRecord> relationshipGroup;\n-    private final RecordCursor<PropertyRecord> property;\n-    private final RecordCursor<DynamicRecord> propertyString;\n-    private final RecordCursor<DynamicRecord> propertyArray;\n-    private final RecordCursor<DynamicRecord> label;\n+  private final RecordCursor<NodeRecord> node;\n+  private final RecordCursor<RelationshipRecord> relationship;\n+  private final RecordCursor<RelationshipGroupRecord> relationshipGroup;\n+  private final RecordCursor<PropertyRecord> property;\n+  private final RecordCursor<DynamicRecord> propertyString;\n+  private final RecordCursor<DynamicRecord> propertyArray;\n+  private final RecordCursor<DynamicRecord> label;\n \n-    public RecordCursors( NeoStores neoStores )\n-    {\n-        node = newCursor( neoStores.getNodeStore() );\n-        relationship = newCursor( neoStores.getRelationshipStore() );\n-        relationshipGroup = newCursor( neoStores.getRelationshipGroupStore() );\n-        property = newCursor( neoStores.getPropertyStore() );\n-        propertyString = newCursor( neoStores.getPropertyStore().getStringStore() );\n-        propertyArray = newCursor( neoStores.getPropertyStore().getArrayStore() );\n-        label = newCursor( neoStores.getNodeStore().getDynamicLabelStore() );\n-    }\n+  public RecordCursors(NeoStores neoStores)\n+  {\n+    node = newCursor(neoStores.getNodeStore());\n+    relationship = newCursor(neoStores.getRelationshipStore());\n+    relationshipGroup = newCursor(neoStores.getRelationshipGroupStore());\n+    property = newCursor(neoStores.getPropertyStore());\n+    propertyString = newCursor(neoStores.getPropertyStore().getStringStore());\n+    propertyArray = newCursor(neoStores.getPropertyStore().getArrayStore());\n+    label = newCursor(neoStores.getNodeStore().getDynamicLabelStore());\n+  }\n \n-    private static <R extends AbstractBaseRecord> RecordCursor<R> newCursor( RecordStore<R> store )\n-    {\n-        return store.newRecordCursor( store.newRecord() ).acquire( store.getNumberOfReservedLowIds(), NORMAL );\n-    }\n+  private static <R extends AbstractBaseRecord> RecordCursor<R> newCursor(RecordStore<R> store)\n+  {\n+    return store.newRecordCursor(store.newRecord()).acquire(store.getNumberOfReservedLowIds(), NORMAL);\n+  }\n \n-    @Override\n-    public void close()\n-    {\n-        IOUtils.closeAll( RuntimeException.class,\n-                node, relationship, relationshipGroup, property, propertyArray, propertyString, label );\n-    }\n+  @Override\n+  public void close()\n+  {\n+    IOUtils.closeAll(RuntimeException.class,\n+        node, relationship, relationshipGroup, property, propertyArray, propertyString, label);\n+  }\n \n-    public RecordCursor<NodeRecord> node()\n-    {\n-        return node;\n-    }\n+  public RecordCursor<NodeRecord> node()\n+  {\n+    return node;\n+  }\n \n-    public RecordCursor<RelationshipRecord> relationship()\n-    {\n-        return relationship;\n-    }\n+  public RecordCursor<RelationshipRecord> relationship()\n+  {\n+    return relationship;\n+  }\n \n-    public RecordCursor<RelationshipGroupRecord> relationshipGroup()\n-    {\n-        return relationshipGroup;\n-    }\n+  public RecordCursor<RelationshipGroupRecord> relationshipGroup()\n+  {\n+    return relationshipGroup;\n+  }\n \n-    public RecordCursor<PropertyRecord> property()\n-    {\n-        return property;\n-    }\n+  public RecordCursor<PropertyRecord> property()\n+  {\n+    return property;\n+  }\n \n-    public RecordCursor<DynamicRecord> propertyArray()\n-    {\n-        return propertyArray;\n-    }\n+  public RecordCursor<DynamicRecord> propertyArray()\n+  {\n+    return propertyArray;\n+  }\n \n-    public RecordCursor<DynamicRecord> propertyString()\n-    {\n-        return propertyString;\n-    }\n+  public RecordCursor<DynamicRecord> propertyString()\n+  {\n+    return propertyString;\n+  }\n \n-    public RecordCursor<DynamicRecord> label()\n-    {\n-        return label;\n-    }\n+  public RecordCursor<DynamicRecord> label()\n+  {\n+    return label;\n+  }\n }\n",
            "diff_size": 56
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2393/RecordCursors.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2393/RecordCursors.java\nindex 09fa1020c7c..c77db7062aa 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2393/RecordCursors.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2393/RecordCursors.java\n@@ -99,4 +99,4 @@ public class RecordCursors implements AutoCloseable\n     {\n         return label;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
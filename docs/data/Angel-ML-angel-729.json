{
    "project_name": "Angel-ML-angel",
    "error_id": "729",
    "information": {
        "errors": [
            {
                "line": "6",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 102).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * Copyright (C) 2017-2018 THL A29 Limited, a Tencent company. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in\n * compliance with the License. You may obtain a copy of the License at\n *\n * https://opensource.org/licenses/Apache-2.0",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/729/VectorFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/729/VectorFactory.java\nindex b0f39dae24a..67239952432 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/729/VectorFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/729/VectorFactory.java\n@@ -57,16 +57,16 @@ public class VectorFactory {\n   /**\n    * Get a vector\n    *\n-   * @param rowType row type\n+   * @param rowType       row type\n    * @param storageMethod storage method\n-   * @param keyType index type\n-   * @param valueType value type\n-   * @param dim vector dimension\n-   * @param size vector size\n+   * @param keyType       index type\n+   * @param valueType     value type\n+   * @param dim           vector dimension\n+   * @param size          vector size\n    * @return vector\n    */\n   public static Vector getVector(RowType rowType, StorageMethod storageMethod, BasicType keyType,\n-      BasicType valueType, long dim, long size) {\n+                                 BasicType valueType, long dim, long size) {\n     switch (rowType) {\n       case T_INT_DENSE:\n       case T_INT_SPARSE: {\n",
            "diff_size": 6
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "76",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "78",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "90",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "92",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "104",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 105).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "106",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 105).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "118",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 107).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "120",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 107).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/729/VectorFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/729/VectorFactory.java\nindex b0f39dae24a..29a9cc1bf33 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/729/VectorFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/729/VectorFactory.java\n@@ -15,7 +15,6 @@\n  *\n  */\n \n-\n package com.tencent.angel.ps.storage.vector.storage;\n \n import com.tencent.angel.ml.math2.storage.IntDoubleDenseVectorStorage;\n@@ -74,12 +73,10 @@ public class VectorFactory {\n           case DENSE:\n             return new IntIntVector((int) dim, new IntIntDenseVectorStorage((int) size));\n           case SPARSE:\n-            return new IntIntVector((int) dim,\n-                new IntIntSparseVectorStorage((int) dim, (int) size));\n-          case SORTED:\n-            return new IntIntVector((int) dim,\n-                new IntIntSortedVectorStorage((int) dim, (int) size));\n-          default:\n+            return new IntIntVector((int) dim, new IntIntSparseVectorStorage((int) dim, (int) size));\n+  case SORTED:\n+            return new IntIntVector((int) dim, new IntIntSortedVectorStorage((int) dim, (int) size));\n+  default:\n             return new IntIntVector((int) dim, new IntIntDenseVectorStorage((int) size));\n         }\n       }\n@@ -90,12 +87,10 @@ public class VectorFactory {\n           case DENSE:\n             return new IntLongVector((int) dim, new IntLongDenseVectorStorage((int) size));\n           case SPARSE:\n-            return new IntLongVector((int) dim,\n-                new IntLongSparseVectorStorage((int) dim, (int) size));\n-          case SORTED:\n-            return new IntLongVector((int) dim,\n-                new IntLongSortedVectorStorage((int) dim, (int) size));\n-          default:\n+            return new IntLongVector((int) dim, new IntLongSparseVectorStorage((int) dim, (int) size));\n+  case SORTED:\n+            return new IntLongVector((int) dim, new IntLongSortedVectorStorage((int) dim, (int) size));\n+  default:\n             return new IntLongVector((int) dim, new IntLongDenseVectorStorage((int) size));\n         }\n       }\n@@ -106,12 +101,10 @@ public class VectorFactory {\n           case DENSE:\n             return new IntFloatVector((int) dim, new IntFloatDenseVectorStorage((int) size));\n           case SPARSE:\n-            return new IntFloatVector((int) dim,\n-                new IntFloatSparseVectorStorage((int) dim, (int) size));\n-          case SORTED:\n-            return new IntFloatVector((int) dim,\n-                new IntFloatSortedVectorStorage((int) dim, (int) size));\n-          default:\n+            return new IntFloatVector((int) dim, new IntFloatSparseVectorStorage((int) dim, (int) size));\n+  case SORTED:\n+            return new IntFloatVector((int) dim, new IntFloatSortedVectorStorage((int) dim, (int) size));\n+  default:\n             return new IntFloatVector((int) dim, new IntFloatDenseVectorStorage((int) size));\n         }\n       }\n@@ -122,12 +115,10 @@ public class VectorFactory {\n           case DENSE:\n             return new IntDoubleVector((int) dim, new IntDoubleDenseVectorStorage((int) size));\n           case SPARSE:\n-            return new IntDoubleVector((int) dim,\n-                new IntDoubleSparseVectorStorage((int) dim, (int) size));\n-          case SORTED:\n-            return new IntDoubleVector((int) dim,\n-                new IntDoubleSortedVectorStorage((int) dim, (int) size));\n-          default:\n+            return new IntDoubleVector((int) dim, new IntDoubleSparseVectorStorage((int) dim, (int) size));\n+  case SORTED:\n+            return new IntDoubleVector((int) dim, new IntDoubleSortedVectorStorage((int) dim, (int) size));\n+  default:\n             return new IntDoubleVector((int) dim, new IntDoubleDenseVectorStorage((int) size));\n         }\n       }\n@@ -137,9 +128,8 @@ public class VectorFactory {\n           case SPARSE:\n             return new LongIntVector(dim, new LongIntSparseVectorStorage(dim, (int) size));\n           case SORTED:\n-            return new LongIntVector(dim,\n-                new LongIntSortedVectorStorage(dim, (int) size));\n-          default:\n+            return new LongIntVector(dim, new LongIntSortedVectorStorage(dim, (int) size));\n+  default:\n             return new LongIntVector(dim, new LongIntSparseVectorStorage(dim, (int) size));\n         }\n       }\n@@ -149,9 +139,8 @@ public class VectorFactory {\n           case SPARSE:\n             return new LongLongVector(dim, new LongLongSparseVectorStorage(dim, (int) size));\n           case SORTED:\n-            return new LongLongVector(dim,\n-                new LongLongSortedVectorStorage(dim, (int) size));\n-          default:\n+            return new LongLongVector(dim, new LongLongSortedVectorStorage(dim, (int) size));\n+  default:\n             return new LongLongVector(dim, new LongLongSparseVectorStorage(dim, (int) size));\n         }\n       }\n@@ -161,9 +150,8 @@ public class VectorFactory {\n           case SPARSE:\n             return new LongFloatVector(dim, new LongFloatSparseVectorStorage(dim, (int) size));\n           case SORTED:\n-            return new LongFloatVector(dim,\n-                new LongFloatSortedVectorStorage(dim, (int) size));\n-          default:\n+            return new LongFloatVector(dim, new LongFloatSortedVectorStorage(dim, (int) size));\n+  default:\n             return new LongFloatVector(dim, new LongFloatSparseVectorStorage(dim, (int) size));\n         }\n       }\n@@ -173,17 +161,14 @@ public class VectorFactory {\n           case SPARSE:\n             return new LongDoubleVector(dim, new LongDoubleSparseVectorStorage(dim, (int) size));\n           case SORTED:\n-            return new LongDoubleVector(dim,\n-                new LongDoubleSortedVectorStorage(dim, (int) size));\n-          default:\n+            return new LongDoubleVector(dim, new LongDoubleSortedVectorStorage(dim, (int) size));\n+  default:\n             return new LongDoubleVector(dim, new LongDoubleSparseVectorStorage(dim, (int) size));\n         }\n       }\n \n       default:\n         throw new UnsupportedOperationException(\"Can not support row type \" + rowType);\n-    }\n-\n   }\n-}\n-\n+  }\n+}\n\\ No newline at end of file\n",
            "diff_size": 41
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "82",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "84",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "96",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "98",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "110",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 105).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "112",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 105).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "124",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 107).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "126",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 107).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/729/VectorFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/729/VectorFactory.java\nindex b0f39dae24a..77e731609f8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/729/VectorFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/729/VectorFactory.java\n@@ -52,6 +52,7 @@ import com.tencent.angel.ml.matrix.RowType;\n /**\n  * Vector factor\n  */\n+\n public class VectorFactory {\n \n   /**\n@@ -65,8 +66,12 @@ public class VectorFactory {\n    * @param size vector size\n    * @return vector\n    */\n-  public static Vector getVector(RowType rowType, StorageMethod storageMethod, BasicType keyType,\n-      BasicType valueType, long dim, long size) {\n+\n+  public static Vector getVector(RowType rowType,\n+                                 StorageMethod storageMethod,\n+                                 BasicType keyType,\n+                                 BasicType valueType,\n+                                 long dim, long size) {\n     switch (rowType) {\n       case T_INT_DENSE:\n       case T_INT_SPARSE: {\n@@ -74,11 +79,9 @@ public class VectorFactory {\n           case DENSE:\n             return new IntIntVector((int) dim, new IntIntDenseVectorStorage((int) size));\n           case SPARSE:\n-            return new IntIntVector((int) dim,\n-                new IntIntSparseVectorStorage((int) dim, (int) size));\n+            return new IntIntVector((int) dim, new IntIntSparseVectorStorage((int) dim, (int) size));\n           case SORTED:\n-            return new IntIntVector((int) dim,\n-                new IntIntSortedVectorStorage((int) dim, (int) size));\n+            return new IntIntVector((int) dim, new IntIntSortedVectorStorage((int) dim, (int) size));\n           default:\n             return new IntIntVector((int) dim, new IntIntDenseVectorStorage((int) size));\n         }\n@@ -90,11 +93,9 @@ public class VectorFactory {\n           case DENSE:\n             return new IntLongVector((int) dim, new IntLongDenseVectorStorage((int) size));\n           case SPARSE:\n-            return new IntLongVector((int) dim,\n-                new IntLongSparseVectorStorage((int) dim, (int) size));\n+            return new IntLongVector((int) dim, new IntLongSparseVectorStorage((int) dim, (int) size));\n           case SORTED:\n-            return new IntLongVector((int) dim,\n-                new IntLongSortedVectorStorage((int) dim, (int) size));\n+            return new IntLongVector((int) dim, new IntLongSortedVectorStorage((int) dim, (int) size));\n           default:\n             return new IntLongVector((int) dim, new IntLongDenseVectorStorage((int) size));\n         }\n@@ -106,11 +107,9 @@ public class VectorFactory {\n           case DENSE:\n             return new IntFloatVector((int) dim, new IntFloatDenseVectorStorage((int) size));\n           case SPARSE:\n-            return new IntFloatVector((int) dim,\n-                new IntFloatSparseVectorStorage((int) dim, (int) size));\n+            return new IntFloatVector((int) dim, new IntFloatSparseVectorStorage((int) dim, (int) size));\n           case SORTED:\n-            return new IntFloatVector((int) dim,\n-                new IntFloatSortedVectorStorage((int) dim, (int) size));\n+            return new IntFloatVector((int) dim, new IntFloatSortedVectorStorage((int) dim, (int) size));\n           default:\n             return new IntFloatVector((int) dim, new IntFloatDenseVectorStorage((int) size));\n         }\n@@ -122,11 +121,9 @@ public class VectorFactory {\n           case DENSE:\n             return new IntDoubleVector((int) dim, new IntDoubleDenseVectorStorage((int) size));\n           case SPARSE:\n-            return new IntDoubleVector((int) dim,\n-                new IntDoubleSparseVectorStorage((int) dim, (int) size));\n+            return new IntDoubleVector((int) dim, new IntDoubleSparseVectorStorage((int) dim, (int) size));\n           case SORTED:\n-            return new IntDoubleVector((int) dim,\n-                new IntDoubleSortedVectorStorage((int) dim, (int) size));\n+            return new IntDoubleVector((int) dim, new IntDoubleSortedVectorStorage((int) dim, (int) size));\n           default:\n             return new IntDoubleVector((int) dim, new IntDoubleDenseVectorStorage((int) size));\n         }\n@@ -137,8 +134,7 @@ public class VectorFactory {\n           case SPARSE:\n             return new LongIntVector(dim, new LongIntSparseVectorStorage(dim, (int) size));\n           case SORTED:\n-            return new LongIntVector(dim,\n-                new LongIntSortedVectorStorage(dim, (int) size));\n+            return new LongIntVector(dim, new LongIntSortedVectorStorage(dim, (int) size));\n           default:\n             return new LongIntVector(dim, new LongIntSparseVectorStorage(dim, (int) size));\n         }\n@@ -149,8 +145,7 @@ public class VectorFactory {\n           case SPARSE:\n             return new LongLongVector(dim, new LongLongSparseVectorStorage(dim, (int) size));\n           case SORTED:\n-            return new LongLongVector(dim,\n-                new LongLongSortedVectorStorage(dim, (int) size));\n+            return new LongLongVector(dim, new LongLongSortedVectorStorage(dim, (int) size));\n           default:\n             return new LongLongVector(dim, new LongLongSparseVectorStorage(dim, (int) size));\n         }\n@@ -161,8 +156,7 @@ public class VectorFactory {\n           case SPARSE:\n             return new LongFloatVector(dim, new LongFloatSparseVectorStorage(dim, (int) size));\n           case SORTED:\n-            return new LongFloatVector(dim,\n-                new LongFloatSortedVectorStorage(dim, (int) size));\n+            return new LongFloatVector(dim, new LongFloatSortedVectorStorage(dim, (int) size));\n           default:\n             return new LongFloatVector(dim, new LongFloatSparseVectorStorage(dim, (int) size));\n         }\n@@ -173,8 +167,7 @@ public class VectorFactory {\n           case SPARSE:\n             return new LongDoubleVector(dim, new LongDoubleSparseVectorStorage(dim, (int) size));\n           case SORTED:\n-            return new LongDoubleVector(dim,\n-                new LongDoubleSortedVectorStorage(dim, (int) size));\n+            return new LongDoubleVector(dim, new LongDoubleSortedVectorStorage(dim, (int) size));\n           default:\n             return new LongDoubleVector(dim, new LongDoubleSparseVectorStorage(dim, (int) size));\n         }\n@@ -183,7 +176,6 @@ public class VectorFactory {\n       default:\n         throw new UnsupportedOperationException(\"Can not support row type \" + rowType);\n     }\n-\n   }\n-}\n \n+}\n\\ No newline at end of file\n",
            "diff_size": 34
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1629",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "36",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "36",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "82",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "109",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1629/PeriodicThresholdPolicy.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1629/PeriodicThresholdPolicy.java\nindex c20619ade21..b26b1e2c658 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1629/PeriodicThresholdPolicy.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1629/PeriodicThresholdPolicy.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.transaction.log.checkpoint;\n \n import org.neo4j.graphdb.factory.GraphDatabaseSettings;\n@@ -32,25 +33,25 @@ import static org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThresho\n  * The {@code periodic} check point threshold policy uses the {@link GraphDatabaseSettings#check_point_interval_time}\n  * and {@link GraphDatabaseSettings#check_point_interval_tx} to decide when check points processes should be started.\n  */\n-@Service.Implementation( CheckPointThresholdPolicy.class )\n+@Service.Implementation(CheckPointThresholdPolicy.class)\n public class PeriodicThresholdPolicy extends CheckPointThresholdPolicy\n {\n-    public PeriodicThresholdPolicy()\n-    {\n-        super( \"periodic\" );\n-    }\n+  public PeriodicThresholdPolicy()\n+  {\n+    super(\"periodic\");\n+  }\n \n-    @Override\n-    public CheckPointThreshold createThreshold(\n-            Config config, SystemNanoClock clock, LogPruning logPruning, LogProvider logProvider )\n-    {\n-        int txThreshold = config.get( GraphDatabaseSettings.check_point_interval_tx );\n-        final CountCommittedTransactionThreshold countCommittedTransactionThreshold =\n-                new CountCommittedTransactionThreshold( txThreshold );\n+  @Override\n+  public CheckPointThreshold createThreshold(\n+      Config config, SystemNanoClock clock, LogPruning logPruning, LogProvider logProvider)\n+  {\n+    int txThreshold = config.get(GraphDatabaseSettings.check_point_interval_tx);\n+    final CountCommittedTransactionThreshold countCommittedTransactionThreshold =\n+        new CountCommittedTransactionThreshold(txThreshold);\n \n-        long timeMillisThreshold = config.get( GraphDatabaseSettings.check_point_interval_time ).toMillis();\n-        TimeCheckPointThreshold timeCheckPointThreshold = new TimeCheckPointThreshold( timeMillisThreshold, clock );\n+    long timeMillisThreshold = config.get(GraphDatabaseSettings.check_point_interval_time).toMillis();\n+    TimeCheckPointThreshold timeCheckPointThreshold = new TimeCheckPointThreshold(timeMillisThreshold, clock);\n \n-        return or( countCommittedTransactionThreshold, timeCheckPointThreshold );\n-    }\n+    return or(countCommittedTransactionThreshold, timeCheckPointThreshold);\n+  }\n }\n",
            "diff_size": 17
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1629/PeriodicThresholdPolicy.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1629/PeriodicThresholdPolicy.java\nindex c20619ade21..1389b0f030c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1629/PeriodicThresholdPolicy.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1629/PeriodicThresholdPolicy.java\n@@ -41,16 +41,12 @@ public class PeriodicThresholdPolicy extends CheckPointThresholdPolicy\n     }\n \n     @Override\n-    public CheckPointThreshold createThreshold(\n-            Config config, SystemNanoClock clock, LogPruning logPruning, LogProvider logProvider )\n+    public CheckPointThreshold createThreshold( Config config, SystemNanoClock clock, LogPruning logPruning, LogProvider logProvider )\n     {\n         int txThreshold = config.get( GraphDatabaseSettings.check_point_interval_tx );\n-        final CountCommittedTransactionThreshold countCommittedTransactionThreshold =\n-                new CountCommittedTransactionThreshold( txThreshold );\n-\n-        long timeMillisThreshold = config.get( GraphDatabaseSettings.check_point_interval_time ).toMillis();\n+        final CountCommittedTransactionThreshold countCommittedTransactionThreshold = new CountCommittedTransactionThreshold( txThreshold );\n+    long timeMillisThreshold = config.get( GraphDatabaseSettings.check_point_interval_time ).toMillis();\n         TimeCheckPointThreshold timeCheckPointThreshold = new TimeCheckPointThreshold( timeMillisThreshold, clock );\n-\n-        return or( countCommittedTransactionThreshold, timeCheckPointThreshold );\n+return or( countCommittedTransactionThreshold, timeCheckPointThreshold );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
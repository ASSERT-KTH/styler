{
    "project_name": "graphfoundation-ongdb",
    "error_id": "108",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "37",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "50",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "53",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "56",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "59",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "62",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "65",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "68",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "75",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "81",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "87",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "17",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/108/Strings.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/108/Strings.java\nindex 823d5f50c9f..f63d6601d2d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/108/Strings.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/108/Strings.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.helpers;\n \n import java.io.IOException;\n@@ -27,139 +28,130 @@ import java.util.Arrays;\n  */\n public final class Strings\n {\n-    public static final String TAB = \"\\t\";\n+  public static final String TAB = \"\\t\";\n+\n+  private Strings()\n+  {\n+  }\n \n-    private Strings()\n+  public static String prettyPrint(Object o)\n+  {\n+    if (o == null)\n     {\n+      return \"null\";\n     }\n \n-    public static String prettyPrint( Object o )\n+    Class<?> clazz = o.getClass();\n+    if (clazz.isArray())\n+    {\n+      if (clazz == byte[].class)\n+      {\n+        return Arrays.toString((byte[]) o);\n+      } else if (clazz == short[].class)\n+      {\n+        return Arrays.toString((short[]) o);\n+      } else if (clazz == int[].class)\n+      {\n+        return Arrays.toString((int[]) o);\n+      } else if (clazz == long[].class)\n+      {\n+        return Arrays.toString((long[]) o);\n+      } else if (clazz == float[].class)\n+      {\n+        return Arrays.toString((float[]) o);\n+      } else if (clazz == double[].class)\n+      {\n+        return Arrays.toString((double[]) o);\n+      } else if (clazz == char[].class)\n+      {\n+        return Arrays.toString((char[]) o);\n+      } else if (clazz == boolean[].class)\n+      {\n+        return Arrays.toString((boolean[]) o);\n+      } else\n+      {\n+        return Arrays.deepToString((Object[]) o);\n+      }\n+    } else\n     {\n-        if ( o == null )\n-        {\n-            return \"null\";\n-        }\n-\n-        Class<?> clazz = o.getClass();\n-        if ( clazz.isArray() )\n-        {\n-            if ( clazz == byte[].class )\n-            {\n-                return Arrays.toString( (byte[]) o );\n-            }\n-            else if ( clazz == short[].class )\n-            {\n-                return Arrays.toString( (short[]) o );\n-            }\n-            else if ( clazz == int[].class )\n-            {\n-                return Arrays.toString( (int[]) o );\n-            }\n-            else if ( clazz == long[].class )\n-            {\n-                return Arrays.toString( (long[]) o );\n-            }\n-            else if ( clazz == float[].class )\n-            {\n-                return Arrays.toString( (float[]) o );\n-            }\n-            else if ( clazz == double[].class )\n-            {\n-                return Arrays.toString( (double[]) o );\n-            }\n-            else if ( clazz == char[].class )\n-            {\n-                return Arrays.toString( (char[]) o );\n-            }\n-            else if ( clazz == boolean[].class )\n-            {\n-                return Arrays.toString( (boolean[]) o );\n-            }\n-            else\n-            {\n-                return Arrays.deepToString( (Object[]) o );\n-            }\n-        }\n-        else\n-        {\n-            return String.valueOf( o );\n-        }\n+      return String.valueOf(o);\n     }\n+  }\n \n-    public static String escape( String arg )\n+  public static String escape(String arg)\n+  {\n+    StringBuilder builder = new StringBuilder(arg.length());\n+    try\n     {\n-        StringBuilder builder = new StringBuilder( arg.length() );\n-        try\n-        {\n-            escape( builder, arg );\n-        }\n-        catch ( IOException e )\n-        {\n-            throw new AssertionError( \"IOException from using StringBuilder\", e );\n-        }\n-        return builder.toString();\n+      escape(builder, arg);\n+    } catch (IOException e)\n+    {\n+      throw new AssertionError(\"IOException from using StringBuilder\", e);\n     }\n-\n-    /**\n-     * Joining independent lines from provided elements into one line with {@link java.lang.System#lineSeparator} after\n-     * each element\n-     * @param elements - lines to join\n-     * @return joined line\n-     */\n-    public static String joinAsLines( String... elements )\n+    return builder.toString();\n+  }\n+\n+  /**\n+   * Joining independent lines from provided elements into one line with {@link java.lang.System#lineSeparator} after\n+   * each element\n+   *\n+   * @param elements - lines to join\n+   * @return joined line\n+   */\n+  public static String joinAsLines(String... elements)\n+  {\n+    StringBuilder result = new StringBuilder();\n+    for (String line : elements)\n     {\n-        StringBuilder result = new StringBuilder();\n-        for ( String line : elements )\n-        {\n-            result.append( line ).append( System.lineSeparator() );\n-        }\n-        return result.toString();\n+      result.append(line).append(System.lineSeparator());\n     }\n+    return result.toString();\n+  }\n \n-    public static void escape( Appendable output, String arg ) throws IOException\n+  public static void escape(Appendable output, String arg) throws IOException\n+  {\n+    int len = arg.length();\n+    for (int i = 0; i < len; i++)\n     {\n-        int len = arg.length();\n-        for ( int i = 0; i < len; i++ )\n-        {\n-            char ch = arg.charAt( i );\n-            switch ( ch )\n-            {\n-                case '\"':\n-                    output.append( \"\\\\\\\"\" );\n-                    break;\n-\n-                case '\\'':\n-                    output.append( \"\\\\\\'\" );\n-                    break;\n-\n-                case '\\\\':\n-                    output.append( \"\\\\\\\\\" );\n-                    break;\n-\n-                case '\\n':\n-                    output.append( \"\\\\n\" );\n-                    break;\n-\n-                case '\\t':\n-                    output.append( \"\\\\t\" );\n-                    break;\n-\n-                case '\\r':\n-                    output.append( \"\\\\r\" );\n-                    break;\n-\n-                case '\\b':\n-                    output.append( \"\\\\b\" );\n-                    break;\n-\n-                case '\\f':\n-                    output.append( \"\\\\f\" );\n-                    break;\n-\n-                default:\n-                    output.append( ch );\n-                    break;\n-            }\n-        }\n+      char ch = arg.charAt(i);\n+      switch (ch)\n+      {\n+        case '\"':\n+          output.append(\"\\\\\\\"\");\n+          break;\n+\n+        case '\\'':\n+          output.append(\"\\\\\\'\");\n+          break;\n+\n+        case '\\\\':\n+          output.append(\"\\\\\\\\\");\n+          break;\n+\n+        case '\\n':\n+          output.append(\"\\\\n\");\n+          break;\n+\n+        case '\\t':\n+          output.append(\"\\\\t\");\n+          break;\n+\n+        case '\\r':\n+          output.append(\"\\\\r\");\n+          break;\n+\n+        case '\\b':\n+          output.append(\"\\\\b\");\n+          break;\n+\n+        case '\\f':\n+          output.append(\"\\\\f\");\n+          break;\n+\n+        default:\n+          output.append(ch);\n+          break;\n+      }\n     }\n+  }\n }\n",
            "diff_size": 176
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "56",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/108/Strings.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/108/Strings.java\nindex 823d5f50c9f..e6347ce237f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/108/Strings.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/108/Strings.java\n@@ -53,7 +53,7 @@ public final class Strings\n             }\n             else if ( clazz == int[].class )\n             {\n-                return Arrays.toString( (int[]) o );\n+                return Arrays.toString( ( int[]) o );\n             }\n             else if ( clazz == long[].class )\n             {\n@@ -97,7 +97,8 @@ public final class Strings\n         {\n             throw new AssertionError( \"IOException from using StringBuilder\", e );\n         }\n-        return builder.toString();\n+\n+return builder.toString();\n     }\n \n     /**\n@@ -113,7 +114,8 @@ public final class Strings\n         {\n             result.append( line ).append( System.lineSeparator() );\n         }\n-        return result.toString();\n+\n+return result.toString();\n     }\n \n     public static void escape( Appendable output, String arg ) throws IOException\n@@ -124,42 +126,34 @@ public final class Strings\n             char ch = arg.charAt( i );\n             switch ( ch )\n             {\n-                case '\"':\n+case '\"':\n                     output.append( \"\\\\\\\"\" );\n                     break;\n-\n-                case '\\'':\n+    case '\\'':\n                     output.append( \"\\\\\\'\" );\n                     break;\n-\n-                case '\\\\':\n+    case '\\\\':\n                     output.append( \"\\\\\\\\\" );\n                     break;\n-\n-                case '\\n':\n+    case '\\n':\n                     output.append( \"\\\\n\" );\n                     break;\n-\n-                case '\\t':\n+    case '\\t':\n                     output.append( \"\\\\t\" );\n                     break;\n-\n-                case '\\r':\n+    case '\\r':\n                     output.append( \"\\\\r\" );\n                     break;\n-\n-                case '\\b':\n+    case '\\b':\n                     output.append( \"\\\\b\" );\n                     break;\n-\n-                case '\\f':\n+    case '\\f':\n                     output.append( \"\\\\f\" );\n                     break;\n-\n-                default:\n+    default:\n                     output.append( ch );\n                     break;\n-            }\n+    }\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 24
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
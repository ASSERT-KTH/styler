{
    "project_name": "findbugsproject-findbugs",
    "error_id": "26",
    "information": {
        "errors": [
            {
                "line": "18",
                "column": "1",
                "severity": "error",
                "message": "File contains tab characters (this is the first instance).",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
            }
        ]
    },
    "source_code": "    // of the EAWT application or our adapter\n    private static OSXAdapter theAdapter;\n\tprivate static com.apple.eawt.Application theApplication;\n\n    // reference to the app where the existing quit, about, prefs code is\n    private FindBugsFrame mainApp;",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "34",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/26/OSXAdapter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/styler/26/OSXAdapter.java\nindex 859b75b8498..9b8d2eeadb3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/26/OSXAdapter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/styler/26/OSXAdapter.java\n@@ -15,7 +15,7 @@ public class OSXAdapter extends ApplicationAdapter {\n     // pseudo-singleton model; no point in making multiple instances\n     // of the EAWT application or our adapter\n     private static OSXAdapter theAdapter;\n-\tprivate static com.apple.eawt.Application theApplication;\n+private static com.apple.eawt.Application theApplication;\n \n     // reference to the app where the existing quit, about, prefs code is\n     private FindBugsFrame mainApp;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "54",
                    "column": "3",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/26/OSXAdapter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/intellij/26/OSXAdapter.java\nindex 859b75b8498..d83a0d4ca37 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/26/OSXAdapter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/intellij/26/OSXAdapter.java\n@@ -15,12 +15,12 @@ public class OSXAdapter extends ApplicationAdapter {\n     // pseudo-singleton model; no point in making multiple instances\n     // of the EAWT application or our adapter\n     private static OSXAdapter theAdapter;\n-\tprivate static com.apple.eawt.Application theApplication;\n+    private static com.apple.eawt.Application theApplication;\n \n     // reference to the app where the existing quit, about, prefs code is\n     private FindBugsFrame mainApp;\n \n-    private OSXAdapter (FindBugsFrame inApp) {\n+    private OSXAdapter(FindBugsFrame inApp) {\n         mainApp = inApp;\n     }\n \n@@ -31,20 +31,20 @@ public class OSXAdapter extends ApplicationAdapter {\n     @Override\n     public void handleAbout(ApplicationEvent ae) {\n         if (mainApp != null) {\n-\t\t\tae.setHandled(true);\n-                        // We need to invoke modal About Dialog asynchronously\n-                        // otherwise the Application queue is locked for the duration\n-                        // of the about Dialog, which results in a deadlock if a URL is\n-\t\t\t\t\t\t// selected, and we get a ReOpenApplication event when user\n-                        // switches back to Findbugs.\n-                        javax.swing.SwingUtilities.invokeLater(new Runnable() {\n-                                public void run() {\n-\t\t\t\t\t\t\t\t\tmainApp.about();\n-                                }\n-                            });\n+            ae.setHandled(true);\n+            // We need to invoke modal About Dialog asynchronously\n+            // otherwise the Application queue is locked for the duration\n+            // of the about Dialog, which results in a deadlock if a URL is\n+            // selected, and we get a ReOpenApplication event when user\n+            // switches back to Findbugs.\n+            javax.swing.SwingUtilities.invokeLater(new Runnable() {\n+                public void run() {\n+                    mainApp.about();\n+                }\n+            });\n         } else {\n-\t\t\tthrow new IllegalStateException(\"handleAbout: \" +\n-                                                        \"MyApp instance detached from listener\");\n+            throw new IllegalStateException(\"handleAbout: \" +\n+                \"MyApp instance detached from listener\");\n         }\n     }\n \n@@ -55,7 +55,7 @@ public class OSXAdapter extends ApplicationAdapter {\n             ae.setHandled(true);\n         } else {\n             throw new IllegalStateException(\"handlePreferences: MyApp instance \" +\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"detached from listener\");\n+                \"detached from listener\");\n         }\n     }\n \n@@ -64,21 +64,21 @@ public class OSXAdapter extends ApplicationAdapter {\n         if (mainApp != null) {\n \n             /*\n-                         * You MUST setHandled(false) if you want to\n+             * You MUST setHandled(false) if you want to\n              * delay or cancel the quit. This is important\n-\t\t\t * for cross-platform development -- have a\n+             * for cross-platform development -- have a\n              * universal quit routine that chooses whether\n              * or not to quit, so the functionality is\n              * identical on all platforms.  This example\n-\t\t\t * simply cancels the AppleEvent-based quit and \n+             * simply cancels the AppleEvent-based quit and\n              * defers to that universal method.\n-            */\n+             */\n \n             ae.setHandled(false);\n             mainApp.exitFindBugs();\n         } else {\n-\t\t\tthrow new IllegalStateException(\"handleQuit: MyApp instance detached \" +\n-                                                        \"from listener\");\n+            throw new IllegalStateException(\"handleQuit: MyApp instance detached \" +\n+                \"from listener\");\n         }\n     }\n \n@@ -86,7 +86,7 @@ public class OSXAdapter extends ApplicationAdapter {\n     // The main entry-point for this functionality.  This is the only method\n     // that needs to be called at runtime, and it can easily be done using\n     // reflection (see MyApp.java)\n-\tpublic static synchronized void registerMacOSXApplication(FindBugsFrame inApp) {\n+    public static synchronized void registerMacOSXApplication(FindBugsFrame inApp) {\n         if (theApplication == null) {\n             theApplication = new com.apple.eawt.Application();\n         }\n@@ -94,15 +94,15 @@ public class OSXAdapter extends ApplicationAdapter {\n         if (theAdapter == null) {\n             theAdapter = new OSXAdapter(inApp);\n         }\n-\t\ttheApplication.addApplicationListener(theAdapter);\n+        theApplication.addApplicationListener(theAdapter);\n     }\n \n     // Another static entry point for EAWT functionality.  Enables the\n     // \"Preferences...\" menu item in the application menu.\n     public static synchronized void enablePrefs(boolean enabled) {\n-\t\tif (theApplication == null) {\n+        if (theApplication == null) {\n             theApplication = new com.apple.eawt.Application();\n         }\n         theApplication.setEnabledPreferencesMenu(enabled);\n-\t}\n+    }\n }\n",
            "diff_size": 26
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/26/OSXAdapter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/codebuff/26/OSXAdapter.java\nindex 859b75b8498..d75704bbe7d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/26/OSXAdapter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/codebuff/26/OSXAdapter.java\n@@ -10,17 +10,20 @@ import com.apple.eawt.ApplicationEvent;\n  * This class should only ever be referenced via reflection after\n  * checking that we are running on Mac OS X.\n  */\n+\n public class OSXAdapter extends ApplicationAdapter {\n \n     // pseudo-singleton model; no point in making multiple instances\n     // of the EAWT application or our adapter\n     private static OSXAdapter theAdapter;\n-\tprivate static com.apple.eawt.Application theApplication;\n+\n+    private static com.apple.eawt.Application theApplication;\n \n     // reference to the app where the existing quit, about, prefs code is\n+\n     private FindBugsFrame mainApp;\n \n-    private OSXAdapter (FindBugsFrame inApp) {\n+    private OSXAdapter(FindBugsFrame inApp) {\n         mainApp = inApp;\n     }\n \n@@ -31,31 +34,29 @@ public class OSXAdapter extends ApplicationAdapter {\n     @Override\n     public void handleAbout(ApplicationEvent ae) {\n         if (mainApp != null) {\n-\t\t\tae.setHandled(true);\n+            ae.setHandled(true);\n                         // We need to invoke modal About Dialog asynchronously\n                         // otherwise the Application queue is locked for the duration\n                         // of the about Dialog, which results in a deadlock if a URL is\n-\t\t\t\t\t\t// selected, and we get a ReOpenApplication event when user\n+                        // selected, and we get a ReOpenApplication event when user\n                         // switches back to Findbugs.\n-                        javax.swing.SwingUtilities.invokeLater(new Runnable() {\n-                                public void run() {\n-\t\t\t\t\t\t\t\t\tmainApp.about();\n-                                }\n-                            });\n+            javax.swing.SwingUtilities.invokeLater(new Runnable() {\n+                public void run() {\n+                    mainApp.about();\n+                }\n+            });\n         } else {\n-\t\t\tthrow new IllegalStateException(\"handleAbout: \" +\n-                                                        \"MyApp instance detached from listener\");\n+            throw new IllegalStateException(\"handleAbout: \" + \"MyApp instance detached from listener\");\n         }\n     }\n \n     @Override\n     public void handlePreferences(ApplicationEvent ae) {\n         if (mainApp != null) {\n-//\t\t\tmainApp.preferences();\n+//          mainApp.preferences();\n             ae.setHandled(true);\n         } else {\n-            throw new IllegalStateException(\"handlePreferences: MyApp instance \" +\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"detached from listener\");\n+            throw new IllegalStateException(\"handlePreferences: MyApp instance \" + \"detached from listener\");\n         }\n     }\n \n@@ -66,19 +67,17 @@ public class OSXAdapter extends ApplicationAdapter {\n             /*\n                          * You MUST setHandled(false) if you want to\n              * delay or cancel the quit. This is important\n-\t\t\t * for cross-platform development -- have a\n+             * for cross-platform development -- have a\n              * universal quit routine that chooses whether\n              * or not to quit, so the functionality is\n              * identical on all platforms.  This example\n-\t\t\t * simply cancels the AppleEvent-based quit and \n+             * simply cancels the AppleEvent-based quit and \n              * defers to that universal method.\n             */\n-\n             ae.setHandled(false);\n             mainApp.exitFindBugs();\n         } else {\n-\t\t\tthrow new IllegalStateException(\"handleQuit: MyApp instance detached \" +\n-                                                        \"from listener\");\n+            throw new IllegalStateException(\"handleQuit: MyApp instance detached \" + \"from listener\");\n         }\n     }\n \n@@ -86,23 +85,24 @@ public class OSXAdapter extends ApplicationAdapter {\n     // The main entry-point for this functionality.  This is the only method\n     // that needs to be called at runtime, and it can easily be done using\n     // reflection (see MyApp.java)\n-\tpublic static synchronized void registerMacOSXApplication(FindBugsFrame inApp) {\n+\n+    public static synchronized void registerMacOSXApplication(FindBugsFrame inApp) {\n         if (theApplication == null) {\n             theApplication = new com.apple.eawt.Application();\n         }\n-\n         if (theAdapter == null) {\n             theAdapter = new OSXAdapter(inApp);\n         }\n-\t\ttheApplication.addApplicationListener(theAdapter);\n+        theApplication.addApplicationListener(theAdapter);\n     }\n \n     // Another static entry point for EAWT functionality.  Enables the\n     // \"Preferences...\" menu item in the application menu.\n+\n     public static synchronized void enablePrefs(boolean enabled) {\n-\t\tif (theApplication == null) {\n+        if (theApplication == null) {\n             theApplication = new com.apple.eawt.Application();\n         }\n         theApplication.setEnabledPreferencesMenu(enabled);\n-\t}\n-}\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 30
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "34",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/26/OSXAdapter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/styler_random/26/OSXAdapter.java\nindex 859b75b8498..9b8d2eeadb3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/26/OSXAdapter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/styler_random/26/OSXAdapter.java\n@@ -15,7 +15,7 @@ public class OSXAdapter extends ApplicationAdapter {\n     // pseudo-singleton model; no point in making multiple instances\n     // of the EAWT application or our adapter\n     private static OSXAdapter theAdapter;\n-\tprivate static com.apple.eawt.Application theApplication;\n+private static com.apple.eawt.Application theApplication;\n \n     // reference to the app where the existing quit, about, prefs code is\n     private FindBugsFrame mainApp;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": null,
            "diff": null
        }
    ],
    "repaired_by": [
        "codebuff"
    ],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "neo4j-neo4j",
    "error_id": "4",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "46",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "130",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "73",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "106",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "134",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "128",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/4/DegreesRebuildFromStore.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/4/DegreesRebuildFromStore.java\nindex 87ee53787b7..962da3ac075 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/4/DegreesRebuildFromStore.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/4/DegreesRebuildFromStore.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.internal.counts;\n \n import org.neo4j.internal.recordstorage.RecordStorageReader;\n@@ -42,7 +43,7 @@ class DegreesRebuildFromStore implements GBPTreeRelationshipGroupDegreesStore.De\n {\n     private final NeoStores neoStores;\n \n-    DegreesRebuildFromStore( NeoStores neoStores )\n+    DegreesRebuildFromStore(NeoStores neoStores)\n     {\n         this.neoStores = neoStores;\n     }\n@@ -54,7 +55,7 @@ class DegreesRebuildFromStore implements GBPTreeRelationshipGroupDegreesStore.De\n     }\n \n     @Override\n-    public void rebuild( RelationshipGroupDegreesStore.Updater updater, PageCursorTracer cursorTracer, MemoryTracker memoryTracker )\n+    public void rebuild(RelationshipGroupDegreesStore.Updater updater, PageCursorTracer cursorTracer, MemoryTracker memoryTracker)\n     {\n         // === sketch of a more performant version\n         // - Read all groups and for every group make a mark in a memory-structure like so:\n@@ -68,40 +69,40 @@ class DegreesRebuildFromStore implements GBPTreeRelationshipGroupDegreesStore.De\n         // If not all data can fit in memory then do multiple passes (node id range)\n \n         RelationshipGroupStore groupStore = neoStores.getRelationshipGroupStore();\n-        try ( RecordStorageReader storageReader = new RecordStorageReader( neoStores );\n-                StorageRelationshipTraversalCursor traversalCursor = storageReader.allocateRelationshipTraversalCursor( cursorTracer );\n-                PageCursor groupCursor = groupStore.openPageCursorForReadingWithPrefetching( 0, cursorTracer ) )\n+        try (RecordStorageReader storageReader = new RecordStorageReader(neoStores);\n+             StorageRelationshipTraversalCursor traversalCursor = storageReader.allocateRelationshipTraversalCursor(cursorTracer);\n+             PageCursor groupCursor = groupStore.openPageCursorForReadingWithPrefetching(0, cursorTracer))\n         {\n             RelationshipGroupRecord groupRecord = groupStore.newRecord();\n             long highGroupId = groupStore.getHighId();\n-            for ( long id = groupStore.getNumberOfReservedLowIds(); id < highGroupId; id++ )\n+            for (long id = groupStore.getNumberOfReservedLowIds(); id < highGroupId; id++)\n             {\n-                groupStore.getRecordByCursor( id, groupRecord, RecordLoad.LENIENT_NORMAL, groupCursor );\n-                if ( groupRecord.inUse() &&\n-                        (groupRecord.hasExternalDegreesOut() || groupRecord.hasExternalDegreesIn() || groupRecord.hasExternalDegreesLoop()) )\n+                groupStore.getRecordByCursor(id, groupRecord, RecordLoad.LENIENT_NORMAL, groupCursor);\n+                if (groupRecord.inUse() &&\n+                  (groupRecord.hasExternalDegreesOut() || groupRecord.hasExternalDegreesIn() || groupRecord.hasExternalDegreesLoop()))\n                 {\n-                    updateDegree( groupRecord.hasExternalDegreesOut(), groupRecord.getFirstOut(), groupRecord, OUTGOING, traversalCursor, updater );\n-                    updateDegree( groupRecord.hasExternalDegreesIn(), groupRecord.getFirstIn(), groupRecord, INCOMING, traversalCursor, updater );\n-                    updateDegree( groupRecord.hasExternalDegreesLoop(), groupRecord.getFirstLoop(), groupRecord, LOOP, traversalCursor, updater );\n+                    updateDegree(groupRecord.hasExternalDegreesOut(), groupRecord.getFirstOut(), groupRecord, OUTGOING, traversalCursor, updater);\n+                    updateDegree(groupRecord.hasExternalDegreesIn(), groupRecord.getFirstIn(), groupRecord, INCOMING, traversalCursor, updater);\n+                    updateDegree(groupRecord.hasExternalDegreesLoop(), groupRecord.getFirstLoop(), groupRecord, LOOP, traversalCursor, updater);\n                 }\n             }\n         }\n     }\n \n-    private void updateDegree( boolean hasExternalDegrees, long firstRel, RelationshipGroupRecord groupRecord, RelationshipDirection direction,\n-            StorageRelationshipTraversalCursor traversalCursor, RelationshipGroupDegreesStore.Updater updater )\n+    private void updateDegree(boolean hasExternalDegrees, long firstRel, RelationshipGroupRecord groupRecord, RelationshipDirection direction,\n+                              StorageRelationshipTraversalCursor traversalCursor, RelationshipGroupDegreesStore.Updater updater)\n     {\n-        if ( !hasExternalDegrees )\n+        if (!hasExternalDegrees)\n         {\n             return;\n         }\n \n-        traversalCursor.init( groupRecord.getOwningNode(), firstRel, RelationshipSelection.ALL_RELATIONSHIPS );\n+        traversalCursor.init(groupRecord.getOwningNode(), firstRel, RelationshipSelection.ALL_RELATIONSHIPS);\n         long degree = 0;\n-        while ( traversalCursor.next() )\n+        while (traversalCursor.next())\n         {\n             degree++;\n         }\n-        updater.increment( groupRecord.getId(), direction, degree );\n+        updater.increment(groupRecord.getId(), direction, degree);\n     }\n }\n",
            "diff_size": 19
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
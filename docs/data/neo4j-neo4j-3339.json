{
    "project_name": "neo4j-neo4j",
    "error_id": "3339",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "40",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/3339/ResourceIds.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/3339/ResourceIds.java\nindex d7044bd10c3..9d244ede734 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/3339/ResourceIds.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/3339/ResourceIds.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.locking;\n \n import org.neo4j.hashing.HashFunction;\n@@ -27,7 +28,7 @@ public final class ResourceIds\n {\n     // The hash code function we use for index entries and schema names, since Neo4j 4.0.\n     private static final HashFunction HASH_40 = HashFunction.incrementalXXH64();\n-    private static final long HASH_40_INIT = HASH_40.initialise( 0x0123456789abcdefL );\n+    private static final long HASH_40_INIT = HASH_40.initialise(0x0123456789abcdefL);\n \n     private ResourceIds()\n     {\n@@ -36,21 +37,22 @@ public final class ResourceIds\n     /**\n      * Produces a 64-bit hashcode for locking index entries.\n      */\n-    public static long indexEntryResourceId( long labelId, IndexQuery.ExactPredicate... predicates )\n+    public static long indexEntryResourceId(long labelId, IndexQuery.ExactPredicate... predicates)\n     {\n-        return indexEntryResourceId_4_x( labelId, predicates );\n+        return indexEntryResourceId_4_x(labelId, predicates);\n     }\n \n     /**\n      * Produces a 64-bit hashcode for strings that are used as names of schema entities, like indexes and constraints.\n+     *\n      * @param schemaName The name to compute a hash code for.\n      * @return The hash code for the given schema name.\n      */\n-    public static long schemaNameResourceId( String schemaName )\n+    public static long schemaNameResourceId(String schemaName)\n     {\n         long hash = HASH_40_INIT;\n-        hash = schemaName.chars().asLongStream().reduce( hash, HASH_40::update );\n-        return HASH_40.finalise( hash );\n+        hash = schemaName.chars().asLongStream().reduce(hash, HASH_40::update);\n+        return HASH_40.finalise(hash);\n     }\n \n     /**\n@@ -58,19 +60,19 @@ public final class ResourceIds\n      *\n      * @see HashFunction#incrementalXXH64()\n      */\n-    static long indexEntryResourceId_4_x( long labelId, IndexQuery.ExactPredicate[] predicates )\n+    static long indexEntryResourceId_4_x(long labelId, IndexQuery.ExactPredicate[] predicates)\n     {\n         long hash = HASH_40_INIT;\n-        hash = HASH_40.update( hash, labelId );\n+        hash = HASH_40.update(hash, labelId);\n \n-        for ( IndexQuery.ExactPredicate predicate : predicates )\n+        for (IndexQuery.ExactPredicate predicate : predicates)\n         {\n             int propertyKeyId = predicate.propertyKeyId();\n-            hash = HASH_40.update( hash, propertyKeyId );\n+            hash = HASH_40.update(hash, propertyKeyId);\n             Value value = predicate.value();\n-            hash = value.updateHash( HASH_40, hash );\n+            hash = value.updateHash(HASH_40, hash);\n         }\n \n-        return HASH_40.finalise( hash );\n+        return HASH_40.finalise(hash);\n     }\n }\n",
            "diff_size": 14
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/3339/ResourceIds.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/3339/ResourceIds.java\nindex d7044bd10c3..7499192c47a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/3339/ResourceIds.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/3339/ResourceIds.java\n@@ -73,4 +73,4 @@ public final class ResourceIds\n \n         return HASH_40.finalise( hash );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "neo4j-neo4j",
    "error_id": "1555",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "49",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "124",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "82",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "101",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1555/KnownCommunitySecurityComponentVersion.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1555/KnownCommunitySecurityComponentVersion.java\nindex be24adf714a..28b0c0bb8af 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1555/KnownCommunitySecurityComponentVersion.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1555/KnownCommunitySecurityComponentVersion.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.server.security.systemgraph.versions;\n \n import java.util.List;\n@@ -42,64 +43,62 @@ import static org.neo4j.dbms.database.ComponentVersion.Neo4jVersions.UNKNOWN_VER\n \n public abstract class KnownCommunitySecurityComponentVersion extends KnownSystemComponentVersion\n {\n-    public static final Label USER_LABEL = Label.label( \"User\" );\n+    public static final Label USER_LABEL = Label.label(\"User\");\n     private final SecureHasher secureHasher = new SecureHasher();\n \n-    KnownCommunitySecurityComponentVersion( ComponentVersion componentVersion, Log log )\n+    KnownCommunitySecurityComponentVersion(ComponentVersion componentVersion, Log log)\n     {\n-        super( componentVersion, log );\n+        super(componentVersion, log);\n     }\n \n-    boolean componentNotInVersionNode( Transaction tx )\n+    boolean componentNotInVersionNode(Transaction tx)\n     {\n-        return getVersion( tx ) == UNKNOWN_VERSION;\n+        return getVersion(tx) == UNKNOWN_VERSION;\n     }\n \n-    public abstract void setupUsers( Transaction tx ) throws Exception;\n+    public abstract void setupUsers(Transaction tx) throws Exception;\n \n-    void addUser( Transaction tx, String username, Credential credentials, boolean passwordChangeRequired, boolean suspended )\n+    void addUser(Transaction tx, String username, Credential credentials, boolean passwordChangeRequired, boolean suspended)\n     {\n         // NOTE: If username already exists we will violate a constraint\n-        log.info( String.format( \"Creating new user '%s' (passwordChangeRequired=%b, suspended=%b)\", username, passwordChangeRequired, suspended ) );\n-        Node node = tx.createNode( USER_LABEL );\n-        node.setProperty( \"name\", username );\n-        node.setProperty( \"credentials\", credentials.serialize() );\n-        node.setProperty( \"passwordChangeRequired\", passwordChangeRequired );\n-        node.setProperty( \"suspended\", suspended );\n+        log.info(String.format(\"Creating new user '%s' (passwordChangeRequired=%b, suspended=%b)\", username, passwordChangeRequired, suspended));\n+        Node node = tx.createNode(USER_LABEL);\n+        node.setProperty(\"name\", username);\n+        node.setProperty(\"credentials\", credentials.serialize());\n+        node.setProperty(\"passwordChangeRequired\", passwordChangeRequired);\n+        node.setProperty(\"suspended\", suspended);\n     }\n \n-    public abstract void updateInitialUserPassword( Transaction tx ) throws Exception;\n+    public abstract void updateInitialUserPassword(Transaction tx) throws Exception;\n \n-    void updateInitialUserPassword( Transaction tx, User initialUser ) throws FormatException\n+    void updateInitialUserPassword(Transaction tx, User initialUser) throws FormatException\n     {\n         // The set-initial-password command should only take effect if the only existing user is the default user with the default password.\n-        ResourceIterator<Node> nodes = tx.findNodes( USER_LABEL );\n-        List<Node> users = nodes.stream().collect( Collectors.toList() );\n-        if ( users.size() == 0 )\n+        ResourceIterator<Node> nodes = tx.findNodes(USER_LABEL);\n+        List<Node> users = nodes.stream().collect(Collectors.toList());\n+        if (users.size() == 0)\n         {\n-            log.warn( String.format( \"Unable to update missing initial user password from `auth.ini` file: %s\", initialUser.name() ) );\n-        }\n-        else if ( users.size() == 1 )\n+            log.warn(String.format(\"Unable to update missing initial user password from `auth.ini` file: %s\", initialUser.name()));\n+        } else if (users.size() == 1)\n         {\n-            Node user = users.get( 0 );\n-            if ( user.getProperty( \"name\" ).equals( INITIAL_USER_NAME ) )\n+            Node user = users.get(0);\n+            if (user.getProperty(\"name\").equals(INITIAL_USER_NAME))\n             {\n-                SystemGraphCredential currentCredentials = SystemGraphCredential.deserialize( user.getProperty( \"credentials\" ).toString(), secureHasher );\n-                if ( currentCredentials.matchesPassword( UTF8.encode( INITIAL_PASSWORD ) ) )\n+                SystemGraphCredential currentCredentials = SystemGraphCredential.deserialize(user.getProperty(\"credentials\").toString(), secureHasher);\n+                if (currentCredentials.matchesPassword(UTF8.encode(INITIAL_PASSWORD)))\n                 {\n-                    log.info( \"Updating initial user password from `auth.ini` file: %s\", initialUser.name() );\n-                    user.setProperty( \"credentials\", initialUser.credentials().serialize() );\n-                    user.setProperty( \"passwordChangeRequired\", initialUser.passwordChangeRequired() );\n+                    log.info(\"Updating initial user password from `auth.ini` file: %s\", initialUser.name());\n+                    user.setProperty(\"credentials\", initialUser.credentials().serialize());\n+                    user.setProperty(\"passwordChangeRequired\", initialUser.passwordChangeRequired());\n                 }\n             }\n-        }\n-        else\n+        } else\n         {\n-            log.error( String.format( \"Multiple users matching initial user password from `auth.ini` file: %s\", initialUser.name() ) );\n+            log.error(String.format(\"Multiple users matching initial user password from `auth.ini` file: %s\", initialUser.name()));\n         }\n     }\n \n-    public void upgradeSecurityGraph( Transaction tx, KnownCommunitySecurityComponentVersion latest ) throws Exception\n+    public void upgradeSecurityGraph(Transaction tx, KnownCommunitySecurityComponentVersion latest) throws Exception\n     {\n         throw unsupported();\n     }\n",
            "diff_size": 33
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "apache-servicecomb-java-chassis",
    "error_id": "283",
    "information": {
        "errors": [
            {
                "line": "92",
                "column": "7",
                "severity": "warning",
                "message": "'if' is not followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
            }
        ]
    },
    "source_code": "    MicroserviceConfigLoader loader = new MicroserviceConfigLoader();\n    loader.loadAndSort();\n    if(model.getConfig() != null) {\n      loader.getConfigModels().add(model);\n    }\n",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/283/ConfigUtil.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler/283/ConfigUtil.java\nindex 7e991762490..924063b36ba 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/283/ConfigUtil.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler/283/ConfigUtil.java\n@@ -89,7 +89,7 @@ public final class ConfigUtil {\n   public static ConcurrentCompositeConfiguration createLocalConfig() {\n     MicroserviceConfigLoader loader = new MicroserviceConfigLoader();\n     loader.loadAndSort();\n-    if(model.getConfig() != null) {\n+    if (model.getConfig() != null) {\n       loader.getConfigModels().add(model);\n     }\n \n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/283/ConfigUtil.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/intellij/283/ConfigUtil.java\nindex 7e991762490..111712d0934 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/283/ConfigUtil.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/intellij/283/ConfigUtil.java\n@@ -89,7 +89,7 @@ public final class ConfigUtil {\n   public static ConcurrentCompositeConfiguration createLocalConfig() {\n     MicroserviceConfigLoader loader = new MicroserviceConfigLoader();\n     loader.loadAndSort();\n-    if(model.getConfig() != null) {\n+    if (model.getConfig() != null) {\n       loader.getConfigModels().add(model);\n     }\n \n@@ -104,7 +104,6 @@ public final class ConfigUtil {\n   }\n \n \n-\n   public static ConcurrentCompositeConfiguration createLocalConfig(List<ConfigModel> configModelList) {\n     ConcurrentCompositeConfiguration config = new ConcurrentCompositeConfiguration();\n \n@@ -151,8 +150,8 @@ public final class ConfigUtil {\n   }\n \n   private static void duplicateServiceCombConfigToCse(ConcurrentCompositeConfiguration compositeConfiguration,\n-      AbstractConfiguration source,\n-      String sourceName) {\n+                                                      AbstractConfiguration source,\n+                                                      String sourceName) {\n     duplicateServiceCombConfigToCse(source);\n \n     compositeConfiguration.addConfiguration(source, sourceName);\n",
            "diff_size": 4
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/283/ConfigUtil.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/naturalize/283/ConfigUtil.java\nindex 7e991762490..320d42766a4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/283/ConfigUtil.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/naturalize/283/ConfigUtil.java\n@@ -89,7 +89,7 @@ public final class ConfigUtil {\n   public static ConcurrentCompositeConfiguration createLocalConfig() {\n     MicroserviceConfigLoader loader = new MicroserviceConfigLoader();\n     loader.loadAndSort();\n-    if(model.getConfig() != null) {\n+    if (model.getConfig() != null) {\n       loader.getConfigModels().add(model);\n     }\n \n@@ -103,9 +103,7 @@ public final class ConfigUtil {\n     return config;\n   }\n \n-\n-\n-  public static ConcurrentCompositeConfiguration createLocalConfig(List<ConfigModel> configModelList) {\n+public static ConcurrentCompositeConfiguration createLocalConfig(List<ConfigModel> configModelList) {\n     ConcurrentCompositeConfiguration config = new ConcurrentCompositeConfiguration();\n \n     duplicateServiceCombConfigToCse(config,\n@@ -151,8 +149,7 @@ public final class ConfigUtil {\n   }\n \n   private static void duplicateServiceCombConfigToCse(ConcurrentCompositeConfiguration compositeConfiguration,\n-      AbstractConfiguration source,\n-      String sourceName) {\n+      AbstractConfiguration source, String sourceName) {\n     duplicateServiceCombConfigToCse(source);\n \n     compositeConfiguration.addConfiguration(source, sourceName);\n@@ -243,4 +240,4 @@ public final class ConfigUtil {\n       }\n     }\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/283/ConfigUtil.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler_random/283/ConfigUtil.java\nindex 7e991762490..924063b36ba 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/283/ConfigUtil.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler_random/283/ConfigUtil.java\n@@ -89,7 +89,7 @@ public final class ConfigUtil {\n   public static ConcurrentCompositeConfiguration createLocalConfig() {\n     MicroserviceConfigLoader loader = new MicroserviceConfigLoader();\n     loader.loadAndSort();\n-    if(model.getConfig() != null) {\n+    if (model.getConfig() != null) {\n       loader.getConfigModels().add(model);\n     }\n \n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/283/ConfigUtil.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler_three_grams/283/ConfigUtil.java\nindex 7e991762490..924063b36ba 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/283/ConfigUtil.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler_three_grams/283/ConfigUtil.java\n@@ -89,7 +89,7 @@ public final class ConfigUtil {\n   public static ConcurrentCompositeConfiguration createLocalConfig() {\n     MicroserviceConfigLoader loader = new MicroserviceConfigLoader();\n     loader.loadAndSort();\n-    if(model.getConfig() != null) {\n+    if (model.getConfig() != null) {\n       loader.getConfigModels().add(model);\n     }\n \n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "codebuff"
    ]
}
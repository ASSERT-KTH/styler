{
    "project_name": "wso2-attic-commons",
    "error_id": "91",
    "information": {
        "errors": [
            {
                "line": "166",
                "severity": "error",
                "message": "Line is longer than 120 characters (found 123).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "    public final OExpression location;\n\n    public OSigGetVariableData(OProcess owner, OScope.Variable variable, OMessageVarType.Part part, OExpression location) {\n      super(owner);\n      this.variable = variable;\n      this.part = part;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/91/OXPath10Expression.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler/91/OXPath10Expression.java\nindex e22403f3857..786e03f6ec2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/91/OXPath10Expression.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler/91/OXPath10Expression.java\n@@ -163,8 +163,9 @@ public class OXPath10Expression extends OLValueExpression implements Serializabl\n     public final OMessageVarType.Part part;\n     public final OExpression location;\n \n-    public OSigGetVariableData(OProcess owner, OScope.Variable variable, OMessageVarType.Part part, OExpression location) {\n-      super(owner);\n+    public OSigGetVariableData(OProcess owner, OScope.Variable variable,\n+                                          OMessageVarType.Part part, OExpression location) {\n+       super(owner);\n       this.variable = variable;\n       this.part = part;\n       this.location = location;\n",
            "diff_size": 3
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/91/OXPath10Expression.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/intellij/91/OXPath10Expression.java\nindex e22403f3857..65aaa391521 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/91/OXPath10Expression.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/intellij/91/OXPath10Expression.java\n@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n package org.apache.ode.bpel.elang.xpath10.o;\n \n import java.io.Serializable;\n@@ -41,31 +42,41 @@ import org.apache.ode.utils.NSContext;\n  * Jaxen-based compiled-xpath representation for XPATH 1.0 expression language.\n  */\n public class OXPath10Expression extends OLValueExpression implements Serializable {\n-    private static final long serialVersionUID = -1L;\n+  private static final long serialVersionUID = -1L;\n \n-  /** Map from query name to variable declaration. */\n+  /**\n+   * Map from query name to variable declaration.\n+   */\n   public HashMap<String, OScope.Variable> vars =\n     new HashMap<String, OScope.Variable>();\n \n   public final HashMap<String, OProcess.OProperty> properties =\n     new HashMap<String, OProcess.OProperty>();\n \n-  public final HashMap<String, OLink> links = new HashMap<String,OLink>();\n+  public final HashMap<String, OLink> links = new HashMap<String, OLink>();\n \n-  /** Map getVariableData invocation signature to compiled objects. */\n-  private final HashMap<SigGetVariableData,OSigGetVariableData> _getVariableDataSigs =\n-    new HashMap<SigGetVariableData,OSigGetVariableData>();\n+  /**\n+   * Map getVariableData invocation signature to compiled objects.\n+   */\n+  private final HashMap<SigGetVariableData, OSigGetVariableData> _getVariableDataSigs =\n+    new HashMap<SigGetVariableData, OSigGetVariableData>();\n \n   public String xpath;\n   public NSContext namespaceCtx;\n \n-  /** QName of the <code>bpws:getVariableData</code> function. */\n+  /**\n+   * QName of the <code>bpws:getVariableData</code> function.\n+   */\n   public final QName qname_getVariableData;\n \n-  /** QName of the <code>bpws:getVariableData</code> function. */\n+  /**\n+   * QName of the <code>bpws:getVariableData</code> function.\n+   */\n   public final QName qname_getVariableProperty;\n \n-  /** QName of the <code>bpws:getVariableData</code> function. */\n+  /**\n+   * QName of the <code>bpws:getVariableData</code> function.\n+   */\n   public final QName qname_getLinkStatus;\n \n   protected final HashMap<URI, OXslSheet> xslSheets = new HashMap<URI, OXslSheet>();\n@@ -82,33 +93,35 @@ public class OXPath10Expression extends OLValueExpression implements Serializabl\n \n   /**\n    * Get the compiled representation of a certain <code>bpws:getVariableData(...)</code> call.\n-   * @param varname variable name\n+   *\n+   * @param varname  variable name\n    * @param partname part name\n    * @param location location query\n    * @return compiled representation, or <code>null</code> if none found\n    */\n   public OSigGetVariableData resolveGetVariableDataSig(String varname, String partname, String location) {\n-    SigGetVariableData key = new SigGetVariableData(varname,  partname, location);\n+    SigGetVariableData key = new SigGetVariableData(varname, partname, location);\n     return _getVariableDataSigs.get(key);\n   }\n \n   /**\n    * Add a compiled representation for a certain <code>bpws:getVariableData(...)</code> call.\n-   * @param varname variable name\n+   *\n+   * @param varname  variable name\n    * @param partname part name\n    * @param location location query\n    * @param compiled compiled representation\n    */\n   public void addGetVariableDataSig(String varname, String partname, String location, OSigGetVariableData compiled) {\n-    _getVariableDataSigs.put(new SigGetVariableData(varname,  partname, location), compiled);\n+    _getVariableDataSigs.put(new SigGetVariableData(varname, partname, location), compiled);\n   }\n \n   public void setXslSheet(URI projectRelativeXslUri, OXslSheet xslSheet) {\n-      xslSheets.put(projectRelativeXslUri, xslSheet);\n+    xslSheets.put(projectRelativeXslUri, xslSheet);\n   }\n \n   public OXslSheet getXslSheet(URI projectRelativeXslUri) {\n-      return xslSheets.get(projectRelativeXslUri);\n+    return xslSheets.get(projectRelativeXslUri);\n   }\n \n   public String toString() {\n@@ -134,21 +147,30 @@ public class OXPath10Expression extends OLValueExpression implements Serializabl\n \n     public boolean equals(Object obj) {\n       SigGetVariableData other = (SigGetVariableData) obj;\n-      if (varname != null && (other.varname == null || !varname.equals(other.varname)))\n+      if (varname != null && (other.varname == null || !varname.equals(other.varname))) {\n         return false;\n-      if (partname != null && (other.partname == null || !partname.equals(other.partname)))\n+      }\n+      if (partname != null && (other.partname == null || !partname.equals(other.partname))) {\n         return false;\n-      if (location != null && (other.location == null || !location.equals(other.location)))\n+      }\n+      if (location != null && (other.location == null || !location.equals(other.location))) {\n         return false;\n+      }\n \n       return true;\n     }\n \n     public int hashCode() {\n       int hashCode = 0;\n-      if (varname != null) hashCode ^= varname.hashCode();\n-      if (partname != null) hashCode ^= partname.hashCode();\n-      if (location != null) hashCode ^= location.hashCode();\n+      if (varname != null) {\n+        hashCode ^= varname.hashCode();\n+      }\n+      if (partname != null) {\n+        hashCode ^= partname.hashCode();\n+      }\n+      if (location != null) {\n+        hashCode ^= location.hashCode();\n+      }\n       return hashCode;\n     }\n   }\n@@ -163,7 +185,8 @@ public class OXPath10Expression extends OLValueExpression implements Serializabl\n     public final OMessageVarType.Part part;\n     public final OExpression location;\n \n-    public OSigGetVariableData(OProcess owner, OScope.Variable variable, OMessageVarType.Part part, OExpression location) {\n+    public OSigGetVariableData(OProcess owner, OScope.Variable variable, OMessageVarType.Part part,\n+                               OExpression location) {\n       super(owner);\n       this.variable = variable;\n       this.part = part;\n@@ -171,20 +194,22 @@ public class OXPath10Expression extends OLValueExpression implements Serializabl\n     }\n   }\n \n-    /**\n-     * @see org.apache.ode.bpel.o.OLValueExpression#getVariable()\n-     */\n-    public Variable getVariable() {\n-        if(vars.size() == 0)\n-            throw new IllegalStateException(\"LValue must have one variable reference.\");\n-        // We're interested in the first variable referenced by the LValue\n-        for (String varName : vars.keySet()) {\n-            if (xpath.substring(1, xpath.length()).startsWith(varName))\n-                return vars.get(varName);\n-        }\n-        throw new IllegalStateException(\"Either the expression doesn't start with a variable reference or \" +\n-                \"the reference is unknow.\");\n+  /**\n+   * @see org.apache.ode.bpel.o.OLValueExpression#getVariable()\n+   */\n+  public Variable getVariable() {\n+    if (vars.size() == 0) {\n+      throw new IllegalStateException(\"LValue must have one variable reference.\");\n     }\n+    // We're interested in the first variable referenced by the LValue\n+    for (String varName : vars.keySet()) {\n+      if (xpath.substring(1, xpath.length()).startsWith(varName)) {\n+        return vars.get(varName);\n+      }\n+    }\n+    throw new IllegalStateException(\"Either the expression doesn't start with a variable reference or \" +\n+      \"the reference is unknow.\");\n+  }\n \n }\n \n",
            "diff_size": 67
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "168",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 123).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/91/OXPath10Expression.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/naturalize/91/OXPath10Expression.java\nindex e22403f3857..1cc8d1c8e58 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/91/OXPath10Expression.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/naturalize/91/OXPath10Expression.java\n@@ -70,8 +70,7 @@ public class OXPath10Expression extends OLValueExpression implements Serializabl\n \n   protected final HashMap<URI, OXslSheet> xslSheets = new HashMap<URI, OXslSheet>();\n \n-  public OXPath10Expression(OProcess owner,\n-                            QName qname_getVariableData,\n+  public OXPath10Expression(OProcess owner, QName qname_getVariableData,\n                             QName qname_getVariableProperty,\n                             QName qname_getLinkStatus) {\n     super(owner);\n@@ -88,7 +87,7 @@ public class OXPath10Expression extends OLValueExpression implements Serializabl\n    * @return compiled representation, or <code>null</code> if none found\n    */\n   public OSigGetVariableData resolveGetVariableDataSig(String varname, String partname, String location) {\n-    SigGetVariableData key = new SigGetVariableData(varname,  partname, location);\n+    SigGetVariableData key = new SigGetVariableData(varname, partname, location);\n     return _getVariableDataSigs.get(key);\n   }\n \n@@ -100,7 +99,7 @@ public class OXPath10Expression extends OLValueExpression implements Serializabl\n    * @param compiled compiled representation\n    */\n   public void addGetVariableDataSig(String varname, String partname, String location, OSigGetVariableData compiled) {\n-    _getVariableDataSigs.put(new SigGetVariableData(varname,  partname, location), compiled);\n+    _getVariableDataSigs.put(new SigGetVariableData(varname, partname, location), compiled);\n   }\n \n   public void setXslSheet(URI projectRelativeXslUri, OXslSheet xslSheet) {\n@@ -146,9 +145,12 @@ public class OXPath10Expression extends OLValueExpression implements Serializabl\n \n     public int hashCode() {\n       int hashCode = 0;\n-      if (varname != null) hashCode ^= varname.hashCode();\n-      if (partname != null) hashCode ^= partname.hashCode();\n-      if (location != null) hashCode ^= location.hashCode();\n+      if (varname != null)\n+    hashCode ^= varname.hashCode();\n+      if (partname != null)\n+    hashCode ^= partname.hashCode();\n+      if (location != null)\n+    hashCode ^= location.hashCode();\n       return hashCode;\n     }\n   }\n@@ -186,5 +188,4 @@ public class OXPath10Expression extends OLValueExpression implements Serializabl\n                 \"the reference is unknow.\");\n     }\n \n-}\n-\n+}\n\\ No newline at end of file\n",
            "diff_size": 12
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "166",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 123).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/91/OXPath10Expression.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler_three_grams/91/OXPath10Expression.java\nindex e22403f3857..786e03f6ec2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/91/OXPath10Expression.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler_three_grams/91/OXPath10Expression.java\n@@ -163,8 +163,9 @@ public class OXPath10Expression extends OLValueExpression implements Serializabl\n     public final OMessageVarType.Part part;\n     public final OExpression location;\n \n-    public OSigGetVariableData(OProcess owner, OScope.Variable variable, OMessageVarType.Part part, OExpression location) {\n-      super(owner);\n+    public OSigGetVariableData(OProcess owner, OScope.Variable variable,\n+                                          OMessageVarType.Part part, OExpression location) {\n+       super(owner);\n       this.variable = variable;\n       this.part = part;\n       this.location = location;\n",
            "diff_size": 3
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff",
        "styler_random"
    ]
}
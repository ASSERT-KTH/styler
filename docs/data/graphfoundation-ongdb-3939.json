{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3939",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "51",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3939/SlaveClient.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3939/SlaveClient.java\nindex 0a0da923992..3f970471352 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3939/SlaveClient.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3939/SlaveClient.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.ha.com.master;\n \n import org.neo4j.cluster.InstanceId;\n@@ -45,81 +46,81 @@ import static org.neo4j.com.storecopy.ResponseUnpacker.NO_OP_RESPONSE_UNPACKER;\n \n public class SlaveClient extends Client<Slave> implements Slave\n {\n-    private final InstanceId machineId;\n+  private final InstanceId machineId;\n+\n+  public SlaveClient(InstanceId machineId, String destinationHostNameOrIp, int destinationPort,\n+                     String originHostNameOrIp, LogProvider logProvider,\n+                     StoreId storeId, int maxConcurrentChannels, int chunkSize,\n+                     ByteCounterMonitor byteCounterMonitor, RequestMonitor requestMonitor,\n+                     LogEntryReader<ReadableClosablePositionAwareChannel> entryReader)\n+  {\n+    super(destinationHostNameOrIp, destinationPort, originHostNameOrIp, logProvider, storeId,\n+        Protocol.DEFAULT_FRAME_LENGTH, HaSettings.read_timeout.apply(from -> null).toMillis(), maxConcurrentChannels,\n+        chunkSize, NO_OP_RESPONSE_UNPACKER, byteCounterMonitor, requestMonitor, entryReader);\n+    this.machineId = machineId;\n+  }\n+\n+  @Override\n+  public Response<Void> pullUpdates(final long upToAndIncludingTxId)\n+  {\n+    return sendRequest(SlaveRequestType.PULL_UPDATES, RequestContext.EMPTY, buffer ->\n+    {\n+      writeString(buffer, NeoStoreDataSource.DEFAULT_DATA_SOURCE_NAME);\n+      buffer.writeLong(upToAndIncludingTxId);\n+    }, Protocol.VOID_DESERIALIZER);\n+  }\n+\n+  @Override\n+  public ProtocolVersion getProtocolVersion()\n+  {\n+    return SlaveServer.SLAVE_PROTOCOL_VERSION;\n+  }\n+\n+  public enum SlaveRequestType implements RequestType\n+  {\n+    PULL_UPDATES((TargetCaller<Slave, Void>) (master, context, input, target) ->\n+    {\n+      readString(input); // And discard\n+      return master.pullUpdates(input.readLong());\n+    }, VOID_SERIALIZER);\n+\n+    private final TargetCaller caller;\n+    private final ObjectSerializer serializer;\n \n-    public SlaveClient( InstanceId machineId, String destinationHostNameOrIp, int destinationPort,\n-                        String originHostNameOrIp, LogProvider logProvider,\n-                        StoreId storeId, int maxConcurrentChannels, int chunkSize,\n-                        ByteCounterMonitor byteCounterMonitor, RequestMonitor requestMonitor,\n-                        LogEntryReader<ReadableClosablePositionAwareChannel> entryReader )\n+    SlaveRequestType(TargetCaller caller, ObjectSerializer serializer)\n     {\n-        super( destinationHostNameOrIp, destinationPort, originHostNameOrIp, logProvider, storeId,\n-                Protocol.DEFAULT_FRAME_LENGTH, HaSettings.read_timeout.apply( from -> null ).toMillis(), maxConcurrentChannels,\n-                chunkSize, NO_OP_RESPONSE_UNPACKER, byteCounterMonitor, requestMonitor, entryReader );\n-        this.machineId = machineId;\n+      this.caller = caller;\n+      this.serializer = serializer;\n     }\n \n     @Override\n-    public Response<Void> pullUpdates( final long upToAndIncludingTxId )\n+    public TargetCaller getTargetCaller()\n     {\n-        return sendRequest( SlaveRequestType.PULL_UPDATES, RequestContext.EMPTY, buffer ->\n-        {\n-            writeString( buffer, NeoStoreDataSource.DEFAULT_DATA_SOURCE_NAME );\n-            buffer.writeLong( upToAndIncludingTxId );\n-        }, Protocol.VOID_DESERIALIZER );\n+      return caller;\n     }\n \n     @Override\n-    public ProtocolVersion getProtocolVersion()\n+    public ObjectSerializer getObjectSerializer()\n     {\n-        return SlaveServer.SLAVE_PROTOCOL_VERSION;\n+      return serializer;\n     }\n \n-    public enum SlaveRequestType implements RequestType\n+    @Override\n+    public byte id()\n     {\n-        PULL_UPDATES( (TargetCaller<Slave,Void>) ( master, context, input, target ) ->\n-        {\n-            readString( input ); // And discard\n-            return master.pullUpdates( input.readLong() );\n-        }, VOID_SERIALIZER );\n-\n-        private final TargetCaller caller;\n-        private final ObjectSerializer serializer;\n-\n-        SlaveRequestType( TargetCaller caller, ObjectSerializer serializer )\n-        {\n-            this.caller = caller;\n-            this.serializer = serializer;\n-        }\n-\n-        @Override\n-        public TargetCaller getTargetCaller()\n-        {\n-            return caller;\n-        }\n-\n-        @Override\n-        public ObjectSerializer getObjectSerializer()\n-        {\n-            return serializer;\n-        }\n-\n-        @Override\n-        public byte id()\n-        {\n-            return (byte) ordinal();\n-        }\n-\n-        @Override\n-        public boolean responseShouldBeUnpacked()\n-        {\n-            return false;\n-        }\n+      return (byte) ordinal();\n     }\n \n     @Override\n-    public int getServerId()\n+    public boolean responseShouldBeUnpacked()\n     {\n-        return machineId.toIntegerIndex();\n+      return false;\n     }\n+  }\n+\n+  @Override\n+  public int getServerId()\n+  {\n+    return machineId.toIntegerIndex();\n+  }\n }\n",
            "diff_size": 107
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "55",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 214).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3939/SlaveClient.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3939/SlaveClient.java\nindex 0a0da923992..254aaf630e0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3939/SlaveClient.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3939/SlaveClient.java\n@@ -47,16 +47,13 @@ public class SlaveClient extends Client<Slave> implements Slave\n {\n     private final InstanceId machineId;\n \n-    public SlaveClient( InstanceId machineId, String destinationHostNameOrIp, int destinationPort,\n-                        String originHostNameOrIp, LogProvider logProvider,\n+    public SlaveClient( InstanceId machineId, String destinationHostNameOrIp, int destinationPort, String originHostNameOrIp, LogProvider logProvider,\n                         StoreId storeId, int maxConcurrentChannels, int chunkSize,\n-                        ByteCounterMonitor byteCounterMonitor, RequestMonitor requestMonitor,\n-                        LogEntryReader<ReadableClosablePositionAwareChannel> entryReader )\n-    {\n+                        ByteCounterMonitor byteCounterMonitor, RequestMonitor requestMonitor, LogEntryReader<ReadableClosablePositionAwareChannel> entryReader )\n+{\n         super( destinationHostNameOrIp, destinationPort, originHostNameOrIp, logProvider, storeId,\n-                Protocol.DEFAULT_FRAME_LENGTH, HaSettings.read_timeout.apply( from -> null ).toMillis(), maxConcurrentChannels,\n-                chunkSize, NO_OP_RESPONSE_UNPACKER, byteCounterMonitor, requestMonitor, entryReader );\n-        this.machineId = machineId;\n+                Protocol.DEFAULT_FRAME_LENGTH, HaSettings.read_timeout.apply( from -> null ).toMillis(), maxConcurrentChannels, chunkSize, NO_OP_RESPONSE_UNPACKER, byteCounterMonitor, requestMonitor, entryReader );\n+this.machineId = machineId;\n     }\n \n     @Override\n@@ -122,4 +119,4 @@ public class SlaveClient extends Client<Slave> implements Slave\n     {\n         return machineId.toIntegerIndex();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 346).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "55",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 297).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "77",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3939/SlaveClient.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/3939/SlaveClient.java\nindex 0a0da923992..e496c5444df 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3939/SlaveClient.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/3939/SlaveClient.java\n@@ -37,25 +37,22 @@ import org.neo4j.kernel.impl.transaction.log.ReadableClosablePositionAwareChanne\n import org.neo4j.kernel.impl.transaction.log.entry.LogEntryReader;\n import org.neo4j.kernel.monitoring.ByteCounterMonitor;\n import org.neo4j.logging.LogProvider;\n-\n import static org.neo4j.com.Protocol.VOID_SERIALIZER;\n+\n import static org.neo4j.com.Protocol.readString;\n+\n import static org.neo4j.com.Protocol.writeString;\n+\n import static org.neo4j.com.storecopy.ResponseUnpacker.NO_OP_RESPONSE_UNPACKER;\n \n-public class SlaveClient extends Client<Slave> implements Slave\n+public class SlaveClient extends Client<Slave>\n+implements Slave\n {\n     private final InstanceId machineId;\n \n-    public SlaveClient( InstanceId machineId, String destinationHostNameOrIp, int destinationPort,\n-                        String originHostNameOrIp, LogProvider logProvider,\n-                        StoreId storeId, int maxConcurrentChannels, int chunkSize,\n-                        ByteCounterMonitor byteCounterMonitor, RequestMonitor requestMonitor,\n-                        LogEntryReader<ReadableClosablePositionAwareChannel> entryReader )\n+    public SlaveClient( InstanceId machineId, String destinationHostNameOrIp, int destinationPort, String originHostNameOrIp, LogProvider logProvider, StoreId storeId, int maxConcurrentChannels, int chunkSize, ByteCounterMonitor byteCounterMonitor, RequestMonitor requestMonitor, LogEntryReader<ReadableClosablePositionAwareChannel> entryReader )\n     {\n-        super( destinationHostNameOrIp, destinationPort, originHostNameOrIp, logProvider, storeId,\n-                Protocol.DEFAULT_FRAME_LENGTH, HaSettings.read_timeout.apply( from -> null ).toMillis(), maxConcurrentChannels,\n-                chunkSize, NO_OP_RESPONSE_UNPACKER, byteCounterMonitor, requestMonitor, entryReader );\n+        super( destinationHostNameOrIp, destinationPort, originHostNameOrIp, logProvider, storeId, Protocol.DEFAULT_FRAME_LENGTH, HaSettings.read_timeout.apply( from -> null ).toMillis(), maxConcurrentChannels, chunkSize, NO_OP_RESPONSE_UNPACKER, byteCounterMonitor, requestMonitor, entryReader );\n         this.machineId = machineId;\n     }\n \n@@ -63,10 +60,10 @@ public class SlaveClient extends Client<Slave> implements Slave\n     public Response<Void> pullUpdates( final long upToAndIncludingTxId )\n     {\n         return sendRequest( SlaveRequestType.PULL_UPDATES, RequestContext.EMPTY, buffer ->\n-        {\n-            writeString( buffer, NeoStoreDataSource.DEFAULT_DATA_SOURCE_NAME );\n-            buffer.writeLong( upToAndIncludingTxId );\n-        }, Protocol.VOID_DESERIALIZER );\n+                                                                                 {\n+                                                                                     writeString( buffer, NeoStoreDataSource.DEFAULT_DATA_SOURCE_NAME );\n+                                                                                     buffer.writeLong( upToAndIncludingTxId );\n+                                                                                 }, Protocol.VOID_DESERIALIZER );\n     }\n \n     @Override\n@@ -77,12 +74,13 @@ public class SlaveClient extends Client<Slave> implements Slave\n \n     public enum SlaveRequestType implements RequestType\n     {\n-        PULL_UPDATES( (TargetCaller<Slave,Void>) ( master, context, input, target ) ->\n-        {\n-            readString( input ); // And discard\n-            return master.pullUpdates( input.readLong() );\n-        }, VOID_SERIALIZER );\n-\n+        PULL_UPDATES( ( TargetCaller<Slave,Void>)\n+( master, context, input, target ) ->\n+{\n+    readString( input ); // And discard\n+    return master.pullUpdates( input.readLong() );\n+}, VOID_SERIALIZER )\n+    ;\n         private final TargetCaller caller;\n         private final ObjectSerializer serializer;\n \n@@ -115,6 +113,7 @@ public class SlaveClient extends Client<Slave> implements Slave\n         {\n             return false;\n         }\n+\n     }\n \n     @Override\n@@ -122,4 +121,4 @@ public class SlaveClient extends Client<Slave> implements Slave\n     {\n         return machineId.toIntegerIndex();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 27
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
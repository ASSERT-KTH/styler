{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2965",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "52",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "110",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "109",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "66",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "86",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2965/BackupImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2965/BackupImpl.java\nindex 0344bc775eb..cad55f10f30 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2965/BackupImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2965/BackupImpl.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.backup.impl;\n \n import java.util.function.Supplier;\n@@ -38,67 +39,65 @@ import static org.neo4j.com.RequestContext.anonymous;\n \n public class BackupImpl implements TheBackupInterface\n {\n-    static final String FULL_BACKUP_CHECKPOINT_TRIGGER = \"full backup\";\n+  static final String FULL_BACKUP_CHECKPOINT_TRIGGER = \"full backup\";\n \n-    private final StoreCopyServer storeCopyServer;\n-    private final ResponsePacker incrementalResponsePacker;\n-    private final LogicalTransactionStore logicalTransactionStore;\n-    private final Supplier<StoreId> storeId;\n-    private final TransactionIdStore transactionIdStore;\n-    private final LogFileInformation logFileInformation;\n-    private final Logger logger;\n+  private final StoreCopyServer storeCopyServer;\n+  private final ResponsePacker incrementalResponsePacker;\n+  private final LogicalTransactionStore logicalTransactionStore;\n+  private final Supplier<StoreId> storeId;\n+  private final TransactionIdStore transactionIdStore;\n+  private final LogFileInformation logFileInformation;\n+  private final Logger logger;\n \n-    public BackupImpl( StoreCopyServer storeCopyServer,\n-                       LogicalTransactionStore logicalTransactionStore, TransactionIdStore transactionIdStore,\n-                       LogFileInformation logFileInformation, Supplier<StoreId> storeId, LogProvider logProvider )\n-    {\n-        this.storeCopyServer = storeCopyServer;\n-        this.logicalTransactionStore = logicalTransactionStore;\n-        this.transactionIdStore = transactionIdStore;\n-        this.logFileInformation = logFileInformation;\n-        this.storeId = storeId;\n-        this.logger = logProvider.getLog( getClass() ).infoLogger();\n-        this.incrementalResponsePacker = new ResponsePacker( logicalTransactionStore, transactionIdStore, storeId );\n-    }\n+  public BackupImpl(StoreCopyServer storeCopyServer,\n+                    LogicalTransactionStore logicalTransactionStore, TransactionIdStore transactionIdStore,\n+                    LogFileInformation logFileInformation, Supplier<StoreId> storeId, LogProvider logProvider)\n+  {\n+    this.storeCopyServer = storeCopyServer;\n+    this.logicalTransactionStore = logicalTransactionStore;\n+    this.transactionIdStore = transactionIdStore;\n+    this.logFileInformation = logFileInformation;\n+    this.storeId = storeId;\n+    this.logger = logProvider.getLog(getClass()).infoLogger();\n+    this.incrementalResponsePacker = new ResponsePacker(logicalTransactionStore, transactionIdStore, storeId);\n+  }\n \n-    @Override\n-    public Response<Void> fullBackup( StoreWriter writer, boolean forensics )\n+  @Override\n+  public Response<Void> fullBackup(StoreWriter writer, boolean forensics)\n+  {\n+    String backupIdentifier = getBackupIdentifier();\n+    try (StoreWriter storeWriter = writer)\n     {\n-        String backupIdentifier = getBackupIdentifier();\n-        try ( StoreWriter storeWriter = writer )\n-        {\n-            logger.log( \"%s: Full backup started...\", backupIdentifier );\n-            RequestContext copyStartContext = storeCopyServer.flushStoresAndStreamStoreFiles(\n-                    FULL_BACKUP_CHECKPOINT_TRIGGER, storeWriter, forensics );\n-            ResponsePacker responsePacker = new StoreCopyResponsePacker( logicalTransactionStore, transactionIdStore,\n-                    logFileInformation, storeId, copyStartContext.lastAppliedTransaction() + 1,\n-                    storeCopyServer.monitor() );\n-            long optionalTransactionId = copyStartContext.lastAppliedTransaction();\n-            return responsePacker.packTransactionStreamResponse( anonymous( optionalTransactionId ), null/*no response object*/ );\n-        }\n-        finally\n-        {\n-            logger.log( \"%s: Full backup finished.\", backupIdentifier );\n-        }\n-    }\n-\n-    @Override\n-    public Response<Void> incrementalBackup( RequestContext context )\n+      logger.log(\"%s: Full backup started...\", backupIdentifier);\n+      RequestContext copyStartContext = storeCopyServer.flushStoresAndStreamStoreFiles(\n+          FULL_BACKUP_CHECKPOINT_TRIGGER, storeWriter, forensics);\n+      ResponsePacker responsePacker = new StoreCopyResponsePacker(logicalTransactionStore, transactionIdStore,\n+          logFileInformation, storeId, copyStartContext.lastAppliedTransaction() + 1,\n+          storeCopyServer.monitor());\n+      long optionalTransactionId = copyStartContext.lastAppliedTransaction();\n+      return responsePacker.packTransactionStreamResponse(anonymous(optionalTransactionId), null/*no response object*/);\n+    } finally\n     {\n-        String backupIdentifier = getBackupIdentifier();\n-        try\n-        {\n-            logger.log( \"%s: Incremental backup started...\", backupIdentifier );\n-            return incrementalResponsePacker.packTransactionStreamResponse( context, null );\n-        }\n-        finally\n-        {\n-            logger.log( \"%s: Incremental backup finished.\", backupIdentifier );\n-        }\n+      logger.log(\"%s: Full backup finished.\", backupIdentifier);\n     }\n+  }\n \n-    private String getBackupIdentifier()\n+  @Override\n+  public Response<Void> incrementalBackup(RequestContext context)\n+  {\n+    String backupIdentifier = getBackupIdentifier();\n+    try\n+    {\n+      logger.log(\"%s: Incremental backup started...\", backupIdentifier);\n+      return incrementalResponsePacker.packTransactionStreamResponse(context, null);\n+    } finally\n     {\n-        return Thread.currentThread().getName();\n+      logger.log(\"%s: Incremental backup finished.\", backupIdentifier);\n     }\n+  }\n+\n+  private String getBackupIdentifier()\n+  {\n+    return Thread.currentThread().getName();\n+  }\n }\n",
            "diff_size": 73
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2965/BackupImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2965/BackupImpl.java\nindex 0344bc775eb..c1c7fc46567 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2965/BackupImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2965/BackupImpl.java\n@@ -39,8 +39,7 @@ import static org.neo4j.com.RequestContext.anonymous;\n public class BackupImpl implements TheBackupInterface\n {\n     static final String FULL_BACKUP_CHECKPOINT_TRIGGER = \"full backup\";\n-\n-    private final StoreCopyServer storeCopyServer;\n+private final StoreCopyServer storeCopyServer;\n     private final ResponsePacker incrementalResponsePacker;\n     private final LogicalTransactionStore logicalTransactionStore;\n     private final Supplier<StoreId> storeId;\n@@ -48,10 +47,9 @@ public class BackupImpl implements TheBackupInterface\n     private final LogFileInformation logFileInformation;\n     private final Logger logger;\n \n-    public BackupImpl( StoreCopyServer storeCopyServer,\n-                       LogicalTransactionStore logicalTransactionStore, TransactionIdStore transactionIdStore,\n+    public BackupImpl( StoreCopyServer storeCopyServer, LogicalTransactionStore logicalTransactionStore, TransactionIdStore transactionIdStore,\n                        LogFileInformation logFileInformation, Supplier<StoreId> storeId, LogProvider logProvider )\n-    {\n+{\n         this.storeCopyServer = storeCopyServer;\n         this.logicalTransactionStore = logicalTransactionStore;\n         this.transactionIdStore = transactionIdStore;\n@@ -68,12 +66,11 @@ public class BackupImpl implements TheBackupInterface\n         try ( StoreWriter storeWriter = writer )\n         {\n             logger.log( \"%s: Full backup started...\", backupIdentifier );\n-            RequestContext copyStartContext = storeCopyServer.flushStoresAndStreamStoreFiles(\n-                    FULL_BACKUP_CHECKPOINT_TRIGGER, storeWriter, forensics );\n-            ResponsePacker responsePacker = new StoreCopyResponsePacker( logicalTransactionStore, transactionIdStore,\n+            RequestContext copyStartContext = storeCopyServer.flushStoresAndStreamStoreFiles( FULL_BACKUP_CHECKPOINT_TRIGGER, storeWriter, forensics );\n+ResponsePacker responsePacker = new StoreCopyResponsePacker( logicalTransactionStore, transactionIdStore,\n                     logFileInformation, storeId, copyStartContext.lastAppliedTransaction() + 1,\n                     storeCopyServer.monitor() );\n-            long optionalTransactionId = copyStartContext.lastAppliedTransaction();\n+    long optionalTransactionId = copyStartContext.lastAppliedTransaction();\n             return responsePacker.packTransactionStreamResponse( anonymous( optionalTransactionId ), null/*no response object*/ );\n         }\n         finally\n@@ -101,4 +98,4 @@ public class BackupImpl implements TheBackupInterface\n     {\n         return Thread.currentThread().getName();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 10
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
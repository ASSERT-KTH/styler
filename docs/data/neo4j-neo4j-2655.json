{
    "project_name": "neo4j-neo4j",
    "error_id": "2655",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "60",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "158",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "158",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "201",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "201",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "215",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "215",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "219",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "219",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "223",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "223",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "242",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "242",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2655/AbstractBaseRecord.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2655/AbstractBaseRecord.java\nindex 4845592ebef..a7fd4d8b570 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2655/AbstractBaseRecord.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2655/AbstractBaseRecord.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.store.record;\n \n import java.util.Objects;\n@@ -25,7 +26,7 @@ import java.util.Objects;\n  * {@link AbstractBaseRecord records} are intended to be reusable. Created with a zero-arg constructor\n  * and initialized with the public {@code initialize} method exposed by the specific record implementations,\n  * or {@link #clear() cleared} if reading a record that isn't in use.\n- *\n+ * <p>\n  * Regarding secondary unit there are three state fields involving secondary unit. This is an explanation of what they mean and how they relate to each other:\n  * <ul>\n  *     <li>{@link #requiresSecondaryUnit()} set when a record is prepared, at a time where actual ids cannot be allocated, for one or more reasons.\n@@ -56,13 +57,13 @@ public abstract class AbstractBaseRecord\n     // speed up records read/write operations.\n     private boolean useFixedReferences;\n \n-    protected AbstractBaseRecord( long id )\n+    protected AbstractBaseRecord(long id)\n     {\n         this.id = id;\n         clear();\n     }\n \n-    public AbstractBaseRecord( AbstractBaseRecord other )\n+    public AbstractBaseRecord(AbstractBaseRecord other)\n     {\n         this.id = other.id;\n         this.secondaryUnitId = other.secondaryUnitId;\n@@ -73,7 +74,7 @@ public abstract class AbstractBaseRecord\n         this.useFixedReferences = other.useFixedReferences;\n     }\n \n-    protected AbstractBaseRecord initialize( boolean inUse )\n+    protected AbstractBaseRecord initialize(boolean inUse)\n     {\n         this.inUse = inUse;\n         this.created = false;\n@@ -101,7 +102,7 @@ public abstract class AbstractBaseRecord\n \n     public AbstractBaseRecord copy()\n     {\n-        throw new UnsupportedOperationException( getClass().getSimpleName() + \" is not copyable.\" );\n+        throw new UnsupportedOperationException(getClass().getSimpleName() + \" is not copyable.\");\n     }\n \n     public long getId()\n@@ -111,10 +112,10 @@ public abstract class AbstractBaseRecord\n \n     public int getIntId()\n     {\n-        return Math.toIntExact( id );\n+        return Math.toIntExact(id);\n     }\n \n-    public final void setId( long id )\n+    public final void setId(long id)\n     {\n         this.id = id;\n     }\n@@ -123,7 +124,7 @@ public abstract class AbstractBaseRecord\n      * Sets a secondary record unit ID for this record on loading the record. Setting this id is separate from setting {@link #requiresSecondaryUnit()}\n      * since this secondary unit id may be used to just free that id at the time of updating in the store if a record goes from two to one unit.\n      */\n-    public void setSecondaryUnitIdOnLoad( long id )\n+    public void setSecondaryUnitIdOnLoad(long id)\n     {\n         this.secondaryUnitId = id;\n         this.requiresSecondaryUnit = secondaryUnitId != NO_ID;\n@@ -134,7 +135,7 @@ public abstract class AbstractBaseRecord\n      * Setting this id is separate from setting {@link #requiresSecondaryUnit()} since this secondary unit id may be used to just free that id\n      * at the time of updating in the store if a record goes from two to one unit.\n      */\n-    public void setSecondaryUnitIdOnCreate( long id )\n+    public void setSecondaryUnitIdOnCreate(long id)\n     {\n         this.secondaryUnitId = id;\n         this.createdSecondaryUnit = true;\n@@ -154,7 +155,7 @@ public abstract class AbstractBaseRecord\n         return this.secondaryUnitId;\n     }\n \n-    public void setRequiresSecondaryUnit( boolean requires )\n+    public void setRequiresSecondaryUnit(boolean requires)\n     {\n         this.requiresSecondaryUnit = requires;\n     }\n@@ -177,7 +178,7 @@ public abstract class AbstractBaseRecord\n         return inUse;\n     }\n \n-    public void setInUse( boolean inUse )\n+    public void setInUse(boolean inUse)\n     {\n         this.inUse = inUse;\n     }\n@@ -197,7 +198,7 @@ public abstract class AbstractBaseRecord\n         return useFixedReferences;\n     }\n \n-    public void setUseFixedReferences( boolean useFixedReferences )\n+    public void setUseFixedReferences(boolean useFixedReferences)\n     {\n         this.useFixedReferences = useFixedReferences;\n     }\n@@ -205,21 +206,21 @@ public abstract class AbstractBaseRecord\n     @Override\n     public int hashCode()\n     {\n-        return Objects.hash( id, inUse );\n+        return Objects.hash(id, inUse);\n     }\n \n     @Override\n-    public boolean equals( Object obj )\n+    public boolean equals(Object obj)\n     {\n-        if ( this == obj )\n+        if (this == obj)\n         {\n             return true;\n         }\n-        if ( obj == null )\n+        if (obj == null)\n         {\n             return false;\n         }\n-        if ( getClass() != obj.getClass() )\n+        if (getClass() != obj.getClass())\n         {\n             return false;\n         }\n@@ -238,10 +239,10 @@ public abstract class AbstractBaseRecord\n      */\n     protected String secondaryUnitToString()\n     {\n-        if ( !requiresSecondaryUnit() && !hasSecondaryUnitId() )\n+        if (!requiresSecondaryUnit() && !hasSecondaryUnitId())\n         {\n             return \"\";\n         }\n-        return String.format( \",%ssecondaryUnitId=%d\", requiresSecondaryUnit() ? \"+\" : \"-\", getSecondaryUnitId() );\n+        return String.format(\",%ssecondaryUnitId=%d\", requiresSecondaryUnit() ? \"+\" : \"-\", getSecondaryUnitId());\n     }\n }\n",
            "diff_size": 20
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2655/AbstractBaseRecord.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/2655/AbstractBaseRecord.java\nindex 4845592ebef..23879d27b23 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2655/AbstractBaseRecord.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/2655/AbstractBaseRecord.java\n@@ -244,4 +244,4 @@ public abstract class AbstractBaseRecord\n         }\n         return String.format( \",%ssecondaryUnitId=%d\", requiresSecondaryUnit() ? \"+\" : \"-\", getSecondaryUnitId() );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
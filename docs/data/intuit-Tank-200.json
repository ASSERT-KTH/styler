{
    "project_name": "intuit-Tank",
    "error_id": "200",
    "information": {
        "errors": [
            {
                "line": "95",
                "column": "33",
                "severity": "warning",
                "message": "'{' at column 33 should have line break after.",
                "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
            }
        ]
    },
    "source_code": "\n    @Override\n    public boolean isRunnable() { return JobStatusHelper.canBeRun(getStatus()); }\n\n    @Override\n    public boolean isPausable() {",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/200/VMNodeBean.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/styler/200/VMNodeBean.java\nindex e9585d8f962..82d84e21e2f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/200/VMNodeBean.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/styler/200/VMNodeBean.java\n@@ -92,7 +92,8 @@ public class VMNodeBean extends JobNodeBean {\n     }\n \n     @Override\n-    public boolean isRunnable() { return JobStatusHelper.canBeRun(getStatus()); }\n+    public boolean isRunnable() {\n+        return JobStatusHelper.canBeRun(getStatus()); }\n \n     @Override\n     public boolean isPausable() {\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/200/VMNodeBean.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/intellij/200/VMNodeBean.java\nindex e9585d8f962..0f5535ab5ff 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/200/VMNodeBean.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/intellij/200/VMNodeBean.java\n@@ -22,94 +22,96 @@ import com.intuit.tank.api.model.v1.cloud.CloudVmStatus;\n \n public class VMNodeBean extends JobNodeBean {\n \n-    private static final long serialVersionUID = 1L;\n-\n-    public VMNodeBean(CloudVmStatus vmStatus, boolean hasRights, FastDateFormat fmt) {\n-        super();\n-        this.setHasRights(hasRights);\n-        this.setName(\"Agent\");\n-        this.setJobId(vmStatus.getJobId());\n-        this.setId(vmStatus.getInstanceId());\n-        this.setReportMode(\"\");\n-        this.setStatus(vmStatus.getVmStatus().toString());\n-        this.setRegion(vmStatus.getVmRegion().toString());\n-        this.setActiveUsers(String.valueOf(vmStatus.getCurrentUsers()));\n-        this.setNumFailures(vmStatus.getValidationFailures());\n-        this.setUserDetails(vmStatus.getUserDetails());\n-        this.setTotalUsers(String.valueOf(vmStatus.getTotalUsers()));\n-        setTps(vmStatus.getTotalTps());\n-        this.setStartTime(vmStatus.getStartTime());\n-        this.setEndTime(vmStatus.getEndTime());\n-    }\n-\n-    @Override\n-    public void reCalculate() {\n-\n-    }\n-\n-    // private int calculateTPS(CloudVmStatus vmStatus) {\n-    // int ret = 0;\n-    // if (vmStatus != null && vmStatus.getTpsInfo() != null) {\n-    // Map<Date, Map<String, TPSInfo>> tpsInfoMap = new HashMap<Date, Map<String,TPSInfo>>();\n-    // Date maxTime = vmStatus.getTpsInfo().getMaxTime();\n-    // // don't accept any data from older than 60 minutes\n-    // int transactionCount = 0;\n-    // for (TPSInfo info : vmStatus.getTpsInfo().getTpsInfos()) {\n-    // Map<String, TPSInfo> map = tpsInfoMap.get(info.getTimestamp());\n-    // if (map == null) {\n-    // map = new HashMap<String, TPSInfo>();\n-    // tpsInfoMap.put(info.getTimestamp(), map);\n-    // }\n-    // map.put(info.getKey(), info);\n-    // if (info.getTimestamp().equals(maxTime)) {\n-    // transactionCount += info.getTransactions();\n-    // }\n-    // }\n-    // ret = Math.round(transactionCount / vmStatus.getTpsInfo().getPeriod());\n-    // setTpsDetailMap(tpsInfoMap);\n-    // }\n-    // return ret;\n-    // }\n-\n-    @Override\n-    public List<JobNodeBean> getSubNodes() {\n-        return new ArrayList<JobNodeBean>();\n-    }\n-\n-    @Override\n-    public boolean hasSubNodes() {\n-        return false;\n-    }\n-\n-    @Override\n-    public boolean isKillable() {\n-        return JobStatusHelper.canBeKilled(getStatus());\n-    }\n-\n-    @Override\n-    public boolean isStopable() {\n-        return JobStatusHelper.canBeStopped(getStatus());\n-    }\n-\n-    @Override\n-    public boolean isRunnable() { return JobStatusHelper.canBeRun(getStatus()); }\n-\n-    @Override\n-    public boolean isPausable() {\n-        return JobStatusHelper.canBePaused(getStatus());\n-    }\n-\n-    @Override\n-    public boolean isRampPausable() {\n-        return JobStatusHelper.canRampBePaused(getStatus());\n-    }\n-\n-    /**\n-     * @inheritDoc\n-     */\n-    @Override\n-    public String getType() {\n-        return \"vm\";\n-    }\n+  private static final long serialVersionUID = 1L;\n+\n+  public VMNodeBean(CloudVmStatus vmStatus, boolean hasRights, FastDateFormat fmt) {\n+    super();\n+    this.setHasRights(hasRights);\n+    this.setName(\"Agent\");\n+    this.setJobId(vmStatus.getJobId());\n+    this.setId(vmStatus.getInstanceId());\n+    this.setReportMode(\"\");\n+    this.setStatus(vmStatus.getVmStatus().toString());\n+    this.setRegion(vmStatus.getVmRegion().toString());\n+    this.setActiveUsers(String.valueOf(vmStatus.getCurrentUsers()));\n+    this.setNumFailures(vmStatus.getValidationFailures());\n+    this.setUserDetails(vmStatus.getUserDetails());\n+    this.setTotalUsers(String.valueOf(vmStatus.getTotalUsers()));\n+    setTps(vmStatus.getTotalTps());\n+    this.setStartTime(vmStatus.getStartTime());\n+    this.setEndTime(vmStatus.getEndTime());\n+  }\n+\n+  @Override\n+  public void reCalculate() {\n+\n+  }\n+\n+  // private int calculateTPS(CloudVmStatus vmStatus) {\n+  // int ret = 0;\n+  // if (vmStatus != null && vmStatus.getTpsInfo() != null) {\n+  // Map<Date, Map<String, TPSInfo>> tpsInfoMap = new HashMap<Date, Map<String,TPSInfo>>();\n+  // Date maxTime = vmStatus.getTpsInfo().getMaxTime();\n+  // // don't accept any data from older than 60 minutes\n+  // int transactionCount = 0;\n+  // for (TPSInfo info : vmStatus.getTpsInfo().getTpsInfos()) {\n+  // Map<String, TPSInfo> map = tpsInfoMap.get(info.getTimestamp());\n+  // if (map == null) {\n+  // map = new HashMap<String, TPSInfo>();\n+  // tpsInfoMap.put(info.getTimestamp(), map);\n+  // }\n+  // map.put(info.getKey(), info);\n+  // if (info.getTimestamp().equals(maxTime)) {\n+  // transactionCount += info.getTransactions();\n+  // }\n+  // }\n+  // ret = Math.round(transactionCount / vmStatus.getTpsInfo().getPeriod());\n+  // setTpsDetailMap(tpsInfoMap);\n+  // }\n+  // return ret;\n+  // }\n+\n+  @Override\n+  public List<JobNodeBean> getSubNodes() {\n+    return new ArrayList<JobNodeBean>();\n+  }\n+\n+  @Override\n+  public boolean hasSubNodes() {\n+    return false;\n+  }\n+\n+  @Override\n+  public boolean isKillable() {\n+    return JobStatusHelper.canBeKilled(getStatus());\n+  }\n+\n+  @Override\n+  public boolean isStopable() {\n+    return JobStatusHelper.canBeStopped(getStatus());\n+  }\n+\n+  @Override\n+  public boolean isRunnable() {\n+    return JobStatusHelper.canBeRun(getStatus());\n+  }\n+\n+  @Override\n+  public boolean isPausable() {\n+    return JobStatusHelper.canBePaused(getStatus());\n+  }\n+\n+  @Override\n+  public boolean isRampPausable() {\n+    return JobStatusHelper.canRampBePaused(getStatus());\n+  }\n+\n+  /**\n+   * @inheritDoc\n+   */\n+  @Override\n+  public String getType() {\n+    return \"vm\";\n+  }\n \n }\n",
            "diff_size": 91
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/200/VMNodeBean.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/naturalize/200/VMNodeBean.java\nindex e9585d8f962..bd2b0794cdc 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/200/VMNodeBean.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/naturalize/200/VMNodeBean.java\n@@ -92,7 +92,9 @@ public class VMNodeBean extends JobNodeBean {\n     }\n \n     @Override\n-    public boolean isRunnable() { return JobStatusHelper.canBeRun(getStatus()); }\n+    public boolean isRunnable() {\n+    return JobStatusHelper.canBeRun(getStatus());\n+    }\n \n     @Override\n     public boolean isPausable() {\n@@ -112,4 +114,4 @@ public class VMNodeBean extends JobNodeBean {\n         return \"vm\";\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/200/VMNodeBean.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/codebuff/200/VMNodeBean.java\nindex e9585d8f962..3e038540bc5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/200/VMNodeBean.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/codebuff/200/VMNodeBean.java\n@@ -13,13 +13,14 @@ package com.intuit.tank.job;\n  * #L%\n  */\n \n+\n+\n import java.util.ArrayList;\n import java.util.List;\n-\n import org.apache.commons.lang3.time.FastDateFormat;\n-\n import com.intuit.tank.api.model.v1.cloud.CloudVmStatus;\n \n+\n public class VMNodeBean extends JobNodeBean {\n \n     private static final long serialVersionUID = 1L;\n@@ -92,7 +93,9 @@ public class VMNodeBean extends JobNodeBean {\n     }\n \n     @Override\n-    public boolean isRunnable() { return JobStatusHelper.canBeRun(getStatus()); }\n+    public boolean isRunnable() {\n+        return JobStatusHelper.canBeRun(getStatus());\n+    }\n \n     @Override\n     public boolean isPausable() {\n@@ -107,9 +110,10 @@ public class VMNodeBean extends JobNodeBean {\n     /**\n      * @inheritDoc\n      */\n+\n     @Override\n     public String getType() {\n         return \"vm\";\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 10
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/200/VMNodeBean.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/styler_random/200/VMNodeBean.java\nindex e9585d8f962..82d84e21e2f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/200/VMNodeBean.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/styler_random/200/VMNodeBean.java\n@@ -92,7 +92,8 @@ public class VMNodeBean extends JobNodeBean {\n     }\n \n     @Override\n-    public boolean isRunnable() { return JobStatusHelper.canBeRun(getStatus()); }\n+    public boolean isRunnable() {\n+        return JobStatusHelper.canBeRun(getStatus()); }\n \n     @Override\n     public boolean isPausable() {\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/200/VMNodeBean.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/styler_three_grams/200/VMNodeBean.java\nindex e9585d8f962..82d84e21e2f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/200/VMNodeBean.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/styler_three_grams/200/VMNodeBean.java\n@@ -92,7 +92,8 @@ public class VMNodeBean extends JobNodeBean {\n     }\n \n     @Override\n-    public boolean isRunnable() { return JobStatusHelper.canBeRun(getStatus()); }\n+    public boolean isRunnable() {\n+        return JobStatusHelper.canBeRun(getStatus()); }\n \n     @Override\n     public boolean isPausable() {\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": []
}
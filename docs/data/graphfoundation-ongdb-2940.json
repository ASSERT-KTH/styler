{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2940",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "33",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "33",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2940/FusionIndexSampler.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2940/FusionIndexSampler.java\nindex d7c0468f0d3..c2f41af69b8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2940/FusionIndexSampler.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2940/FusionIndexSampler.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.index.schema.fusion;\n \n import org.neo4j.kernel.api.exceptions.index.IndexNotFoundKernelException;\n@@ -27,41 +28,41 @@ import static org.neo4j.io.IOUtils.closeAllSilently;\n \n public class FusionIndexSampler implements IndexSampler\n {\n-    private final IndexSampler[] samplers;\n+  private final IndexSampler[] samplers;\n \n-    public FusionIndexSampler( IndexSampler... samplers )\n-    {\n-        this.samplers = samplers;\n-    }\n+  public FusionIndexSampler(IndexSampler... samplers)\n+  {\n+    this.samplers = samplers;\n+  }\n \n-    @Override\n-    public IndexSample sampleIndex() throws IndexNotFoundKernelException\n+  @Override\n+  public IndexSample sampleIndex() throws IndexNotFoundKernelException\n+  {\n+    IndexSample[] samples = new IndexSample[samplers.length];\n+    for (int i = 0; i < samplers.length; i++)\n     {\n-        IndexSample[] samples = new IndexSample[samplers.length];\n-        for ( int i = 0; i < samplers.length; i++ )\n-        {\n-            samples[i] = samplers[i].sampleIndex();\n-        }\n-        return combineSamples( samples );\n+      samples[i] = samplers[i].sampleIndex();\n     }\n+    return combineSamples(samples);\n+  }\n \n-    public static IndexSample combineSamples( IndexSample... samples )\n+  public static IndexSample combineSamples(IndexSample... samples)\n+  {\n+    long indexSize = 0;\n+    long uniqueValues = 0;\n+    long sampleSize = 0;\n+    for (IndexSample sample : samples)\n     {\n-        long indexSize = 0;\n-        long uniqueValues = 0;\n-        long sampleSize = 0;\n-        for ( IndexSample sample : samples )\n-        {\n-            indexSize += sample.indexSize();\n-            uniqueValues += sample.uniqueValues();\n-            sampleSize += sample.sampleSize();\n-        }\n-        return new IndexSample( indexSize, uniqueValues, sampleSize );\n+      indexSize += sample.indexSize();\n+      uniqueValues += sample.uniqueValues();\n+      sampleSize += sample.sampleSize();\n     }\n+    return new IndexSample(indexSize, uniqueValues, sampleSize);\n+  }\n \n-    @Override\n-    public void close()\n-    {\n-        closeAllSilently( samplers );\n-    }\n+  @Override\n+  public void close()\n+  {\n+    closeAllSilently(samplers);\n+  }\n }\n",
            "diff_size": 42
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2940/FusionIndexSampler.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2940/FusionIndexSampler.java\nindex d7c0468f0d3..e1e1f3e52f6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2940/FusionIndexSampler.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2940/FusionIndexSampler.java\n@@ -42,7 +42,8 @@ public class FusionIndexSampler implements IndexSampler\n         {\n             samples[i] = samplers[i].sampleIndex();\n         }\n-        return combineSamples( samples );\n+\n+return combineSamples( samples );\n     }\n \n     public static IndexSample combineSamples( IndexSample... samples )\n@@ -64,4 +65,4 @@ public class FusionIndexSampler implements IndexSampler\n     {\n         closeAllSilently( samplers );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "53",
                    "column": "9",
                    "severity": "error",
                    "message": "'for' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "53",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2940/FusionIndexSampler.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/2940/FusionIndexSampler.java\nindex d7c0468f0d3..108130020be 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2940/FusionIndexSampler.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/2940/FusionIndexSampler.java\n@@ -22,7 +22,6 @@ package org.neo4j.kernel.impl.index.schema.fusion;\n import org.neo4j.kernel.api.exceptions.index.IndexNotFoundKernelException;\n import org.neo4j.storageengine.api.schema.IndexSample;\n import org.neo4j.storageengine.api.schema.IndexSampler;\n-\n import static org.neo4j.io.IOUtils.closeAllSilently;\n \n public class FusionIndexSampler implements IndexSampler\n@@ -40,8 +39,9 @@ public class FusionIndexSampler implements IndexSampler\n         IndexSample[] samples = new IndexSample[samplers.length];\n         for ( int i = 0; i < samplers.length; i++ )\n         {\n-            samples[i] = samplers[i].sampleIndex();\n+            samples[i] = samplers[ i].sampleIndex();\n         }\n+\n         return combineSamples( samples );\n     }\n \n@@ -50,12 +50,13 @@ public class FusionIndexSampler implements IndexSampler\n         long indexSize = 0;\n         long uniqueValues = 0;\n         long sampleSize = 0;\n-        for ( IndexSample sample : samples )\n+        for( IndexSample sample : samples)\n         {\n             indexSize += sample.indexSize();\n             uniqueValues += sample.uniqueValues();\n             sampleSize += sample.sampleSize();\n         }\n+\n         return new IndexSample( indexSize, uniqueValues, sampleSize );\n     }\n \n@@ -64,4 +65,4 @@ public class FusionIndexSampler implements IndexSampler\n     {\n         closeAllSilently( samplers );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
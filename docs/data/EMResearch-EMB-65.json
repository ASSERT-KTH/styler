{
    "project_name": "EMResearch-EMB",
    "error_id": "65",
    "information": {
        "errors": [
            {
                "line": "63",
                "severity": "warning",
                "message": "Line is longer than 120 characters (found 158).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "  @Override\n  protected String getLongMessageString() {\n    return \"Mogelijk verwarring: Bedoelde u <suggestion>$SUGGESTION</suggestion> (= $EXPLANATION_SUGGESTION) i.p.v. '$WRONGWORD' (= $EXPLANATION_WRONGWORD)?\";\n  }\n\n}",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "63",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 158).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "64",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 162).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/errored/1/65/DutchWrongWordInContextRule.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/intellij/65/DutchWrongWordInContextRule.java\nindex 29e9efa3cde..6c701e400fe 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/errored/1/65/DutchWrongWordInContextRule.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/intellij/65/DutchWrongWordInContextRule.java\n@@ -1,6 +1,6 @@\n-/* LanguageTool, a natural language style checker \n+/* LanguageTool, a natural language style checker\n  * Copyright (C) 2012 Markus Brenneis\n- * \n+ *\n  * This library is free software; you can redistribute it and/or\n  * modify it under the terms of the GNU Lesser General Public\n  * License as published by the Free Software Foundation; either\n@@ -16,6 +16,7 @@\n  * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301\n  * USA\n  */\n+\n package org.languagetool.rules.nl;\n \n import java.util.ResourceBundle;\n@@ -23,44 +24,44 @@ import java.util.ResourceBundle;\n import org.languagetool.rules.WrongWordInContextRule;\n \n public class DutchWrongWordInContextRule extends WrongWordInContextRule {\n-  \n-  public DutchWrongWordInContextRule(ResourceBundle messages) {\n-    super(messages);\n-  }\n-  \n-  @Override\n-  protected String getCategoryString() {\n-    return \"Gemakkelijk te verwarren woorden\";\n-  }\n-  \n-  @Override\n-  public String getId() {\n-    return \"DUTCH_WRONG_WORD_IN_CONTEXT\";\n-  }\n-  \n-  @Override\n-  public String getDescription() {\n-    return \"Woordverwarring\";\n-  }\n-  \n-  @Override\n-  protected String getFilename() {\n-    return \"/nl/wrongWordInContext.txt\";\n-  }\n-  \n-  @Override\n-  protected String getMessageString() {\n-    return \"Mogelijk verwarring: Bedoelde u <suggestion>$SUGGESTION</suggestion> i.p.v. '$WRONGWORD'?\";\n-  }\n-  \n-  @Override\n-  protected String getShortMessageString() {\n-    return \"Mogelijk verwarring\";\n-  }\n-  \n-  @Override\n-  protected String getLongMessageString() {\n-    return \"Mogelijk verwarring: Bedoelde u <suggestion>$SUGGESTION</suggestion> (= $EXPLANATION_SUGGESTION) i.p.v. '$WRONGWORD' (= $EXPLANATION_WRONGWORD)?\";\n-  }\n+\n+    public DutchWrongWordInContextRule(ResourceBundle messages) {\n+        super(messages);\n+    }\n+\n+    @Override\n+    protected String getCategoryString() {\n+        return \"Gemakkelijk te verwarren woorden\";\n+    }\n+\n+    @Override\n+    public String getId() {\n+        return \"DUTCH_WRONG_WORD_IN_CONTEXT\";\n+    }\n+\n+    @Override\n+    public String getDescription() {\n+        return \"Woordverwarring\";\n+    }\n+\n+    @Override\n+    protected String getFilename() {\n+        return \"/nl/wrongWordInContext.txt\";\n+    }\n+\n+    @Override\n+    protected String getMessageString() {\n+        return \"Mogelijk verwarring: Bedoelde u <suggestion>$SUGGESTION</suggestion> i.p.v. '$WRONGWORD'?\";\n+    }\n+\n+    @Override\n+    protected String getShortMessageString() {\n+        return \"Mogelijk verwarring\";\n+    }\n+\n+    @Override\n+    protected String getLongMessageString() {\n+        return \"Mogelijk verwarring: Bedoelde u <suggestion>$SUGGESTION</suggestion> (= $EXPLANATION_SUGGESTION) i.p.v. '$WRONGWORD' (= $EXPLANATION_WRONGWORD)?\";\n+    }\n \n }\n",
            "diff_size": 42
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "63",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 158).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/errored/1/65/DutchWrongWordInContextRule.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/naturalize/65/DutchWrongWordInContextRule.java\nindex 29e9efa3cde..afb4359f043 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/errored/1/65/DutchWrongWordInContextRule.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/naturalize/65/DutchWrongWordInContextRule.java\n@@ -63,4 +63,4 @@ public class DutchWrongWordInContextRule extends WrongWordInContextRule {\n     return \"Mogelijk verwarring: Bedoelde u <suggestion>$SUGGESTION</suggestion> (= $EXPLANATION_SUGGESTION) i.p.v. '$WRONGWORD' (= $EXPLANATION_WRONGWORD)?\";\n   }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "62",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 162).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/errored/1/65/DutchWrongWordInContextRule.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/codebuff/65/DutchWrongWordInContextRule.java\nindex 29e9efa3cde..a5cd0cb07ac 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/errored/1/65/DutchWrongWordInContextRule.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/codebuff/65/DutchWrongWordInContextRule.java\n@@ -19,48 +19,46 @@\n package org.languagetool.rules.nl;\n \n import java.util.ResourceBundle;\n-\n import org.languagetool.rules.WrongWordInContextRule;\n \n+\n public class DutchWrongWordInContextRule extends WrongWordInContextRule {\n-  \n-  public DutchWrongWordInContextRule(ResourceBundle messages) {\n+    public DutchWrongWordInContextRule(ResourceBundle messages) {\n     super(messages);\n-  }\n-  \n-  @Override\n-  protected String getCategoryString() {\n-    return \"Gemakkelijk te verwarren woorden\";\n-  }\n-  \n-  @Override\n-  public String getId() {\n-    return \"DUTCH_WRONG_WORD_IN_CONTEXT\";\n-  }\n-  \n-  @Override\n-  public String getDescription() {\n-    return \"Woordverwarring\";\n-  }\n-  \n-  @Override\n-  protected String getFilename() {\n-    return \"/nl/wrongWordInContext.txt\";\n-  }\n-  \n-  @Override\n-  protected String getMessageString() {\n-    return \"Mogelijk verwarring: Bedoelde u <suggestion>$SUGGESTION</suggestion> i.p.v. '$WRONGWORD'?\";\n-  }\n-  \n-  @Override\n-  protected String getShortMessageString() {\n-    return \"Mogelijk verwarring\";\n-  }\n-  \n-  @Override\n-  protected String getLongMessageString() {\n-    return \"Mogelijk verwarring: Bedoelde u <suggestion>$SUGGESTION</suggestion> (= $EXPLANATION_SUGGESTION) i.p.v. '$WRONGWORD' (= $EXPLANATION_WRONGWORD)?\";\n-  }\n+    }\n+\n+    @Override\n+    protected String getCategoryString() {\n+        return \"Gemakkelijk te verwarren woorden\";\n+    }\n+\n+    @Override\n+    public String getId() {\n+        return \"DUTCH_WRONG_WORD_IN_CONTEXT\";\n+    }\n+\n+    @Override\n+    public String getDescription() {\n+        return \"Woordverwarring\";\n+    }\n+\n+    @Override\n+    protected String getFilename() {\n+        return \"/nl/wrongWordInContext.txt\";\n+    }\n+\n+    @Override\n+    protected String getMessageString() {\n+        return \"Mogelijk verwarring: Bedoelde u <suggestion>$SUGGESTION</suggestion> i.p.v. '$WRONGWORD'?\";\n+    }\n+\n+    @Override\n+    protected String getShortMessageString() {\n+        return \"Mogelijk verwarring\";\n+    }\n \n-}\n+    @Override\n+    protected String getLongMessageString() {\n+        return \"Mogelijk verwarring: Bedoelde u <suggestion>$SUGGESTION</suggestion> (= $EXPLANATION_SUGGESTION) i.p.v. '$WRONGWORD' (= $EXPLANATION_WRONGWORD)?\";\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 45
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "63",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 158).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "63",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 158).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "CONNECT-Solution-CONNECT",
    "error_id": "988",
    "information": {
        "errors": [
            {
                "line": "27",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\npackage gov.hhs.fha.nhinc.docsubmission.configuration.jmx;\n\nimport gov.hhs.fha.nhinc.configuration.IConfiguration.serviceEnum;\nimport gov.hhs.fha.nhinc.docsubmission._11.entity.deferred.request.EntityDocSubmissionDeferredRequestSecured;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/988/DocumentSubmissionDefRequest11WebServices.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler/988/DocumentSubmissionDefRequest11WebServices.java\nindex 8d644db3eb5..9105abd60e2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/988/DocumentSubmissionDefRequest11WebServices.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler/988/DocumentSubmissionDefRequest11WebServices.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.docsubmission.configuration.jmx;\n \n import gov.hhs.fha.nhinc.configuration.IConfiguration.serviceEnum;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/988/DocumentSubmissionDefRequest11WebServices.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/intellij/988/DocumentSubmissionDefRequest11WebServices.java\nindex 8d644db3eb5..e3ff75f0755 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/988/DocumentSubmissionDefRequest11WebServices.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/intellij/988/DocumentSubmissionDefRequest11WebServices.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.docsubmission.configuration.jmx;\n \n import gov.hhs.fha.nhinc.configuration.IConfiguration.serviceEnum;\n@@ -40,183 +41,189 @@ import gov.hhs.fha.nhinc.docsubmission.outbound.deferred.request.OutboundDocSubm\n  */\n public class DocumentSubmissionDefRequest11WebServices extends AbstractDSDeferredReqWebServicesMXBean {\n \n-    /** The Constant NHIN_DS_BEAN_NAME. */\n-    private static final String NHIN_DS_BEAN_NAME = \"nhinXDRDeferredRequest\";\n-\n-    /** The Constant ENTITY_UNSECURED_DS_BEAN_NAME. */\n-    private static final String ENTITY_UNSECURED_DS_BEAN_NAME = \"entityXDRDeferredRequestUnsecured\";\n-\n-    /** The Constant ENTITY_SECURED_DS_BEAN_NAME. */\n-    private static final String ENTITY_SECURED_DS_BEAN_NAME = \"entityXDRDeferredRequestSecured\";\n-\n-    private final serviceEnum serviceName = serviceEnum.DocumentSubmissionDeferredRequest;\n-\n-    /*\n-     * (non-Javadoc)\n-     *\n-     * @see gov.hhs.fha.nhinc.configuration.jmx.WebServicesMXBean#isInboundPassthru()\n-     */\n-    @Override\n-    public boolean isInboundPassthru() {\n-        boolean isPassthru = false;\n-        NhinXDRRequest nhinDS = retrieveBean(NhinXDRRequest.class, getNhinBeanName());\n-        InboundDocSubmissionDeferredRequest outboundDS = nhinDS.getInboundDocSubmission();\n-        if (compareClassName(outboundDS, DEFAULT_INBOUND_PASSTHRU_IMPL_CLASS_NAME)) {\n-            isPassthru = true;\n-        }\n-        return isPassthru;\n-    }\n-\n-    /*\n-     * (non-Javadoc)\n-     *\n-     * @see gov.hhs.fha.nhinc.configuration.jmx.WebServicesMXBean#isOutboundPassthru()\n-     */\n-    @Override\n-    public boolean isOutboundPassthru() {\n-        boolean isPassthru = false;\n-        EntityDocSubmissionDeferredRequestUnsecured entityDS = retrieveBean(\n-                EntityDocSubmissionDeferredRequestUnsecured.class, getEntityUnsecuredBeanName());\n-        OutboundDocSubmissionDeferredRequest outboundDS = entityDS.getOutboundDocSubmission();\n-        if (compareClassName(outboundDS, DEFAULT_OUTBOUND_PASSTHRU_IMPL_CLASS_NAME)) {\n-            isPassthru = true;\n-        }\n-        return isPassthru;\n-    }\n-\n-    /*\n-     * (non-Javadoc)\n-     *\n-     * @see gov.hhs.fha.nhinc.configuration.jmx.AbstractWebServicesMXBean#getNhinBeanName()\n-     */\n-    @Override\n-    protected String getNhinBeanName() {\n-        return NHIN_DS_BEAN_NAME;\n-    }\n-\n-    /*\n-     * (non-Javadoc)\n-     *\n-     * @see gov.hhs.fha.nhinc.configuration.jmx.AbstractWebServicesMXBean#getEntityUnsecuredBeanName()\n-     */\n-    @Override\n-    protected String getEntityUnsecuredBeanName() {\n-        return ENTITY_UNSECURED_DS_BEAN_NAME;\n-    }\n-\n-    /*\n-     * (non-Javadoc)\n-     *\n-     * @see gov.hhs.fha.nhinc.configuration.jmx.AbstractWebServicesMXBean#getEntitySecuredBeanName()\n-     */\n-    @Override\n-    protected String getEntitySecuredBeanName() {\n-        return ENTITY_SECURED_DS_BEAN_NAME;\n-    }\n-\n-    /*\n-     * (non-Javadoc)\n-     *\n-     * @see gov.hhs.fha.nhinc.configuration.jmx.AbstractWebServicesMXBean#configureInboundImpl(java.lang.String)\n-     */\n-    @Override\n-    public void configureInboundStdImpl() throws InstantiationException, IllegalAccessException,\n-            ClassNotFoundException {\n-        NhinXDRRequest nhinDS = retrieveBean(NhinXDRRequest.class, getNhinBeanName());\n-        InboundDocSubmissionDeferredRequest inboundDS = retrieveBean(InboundDocSubmissionDeferredRequest.class,\n-                getStandardInboundBeanName());\n-\n-        nhinDS.setInboundDocSubmissionRequest(inboundDS);\n-    }\n-\n-    /*\n-     * (non-Javadoc)\n-     *\n-     * @see gov.hhs.fha.nhinc.configuration.jmx.AbstractWebServicesMXBean#configureInboundImpl(java.lang.String)\n-     */\n-    @Override\n-    public void configureInboundPtImpl() throws InstantiationException, IllegalAccessException,\n-            ClassNotFoundException {\n-        NhinXDRRequest nhinDS = retrieveBean(NhinXDRRequest.class, getNhinBeanName());\n-        InboundDocSubmissionDeferredRequest inboundDS = retrieveBean(InboundDocSubmissionDeferredRequest.class,\n-                getPassthroughInboundBeanName());\n-\n-        nhinDS.setInboundDocSubmissionRequest(inboundDS);\n-    }\n-\n-    /*\n-     * (non-Javadoc)\n-     *\n-     * @see gov.hhs.fha.nhinc.configuration.jmx.AbstractWebServicesMXBean#configureOutboundImpl(java.lang.String)\n-     */\n-    @Override\n-    public void configureOutboundStdImpl() throws InstantiationException, IllegalAccessException,\n-            ClassNotFoundException {\n-        OutboundDocSubmissionDeferredRequest outboundDS = retrieveBean(\n-                OutboundDocSubmissionDeferredRequest.class, getStandardOutboundBeanName());\n-        EntityDocSubmissionDeferredRequestUnsecured entityDSUnsecured = retrieveBean(\n-                EntityDocSubmissionDeferredRequestUnsecured.class, getEntityUnsecuredBeanName());\n-        EntityDocSubmissionDeferredRequestSecured entityDSSecured = retrieveBean(\n-                EntityDocSubmissionDeferredRequestSecured.class, getEntitySecuredBeanName());\n-\n-        entityDSSecured.setOutboundDocSubmissionRequest(outboundDS);\n-        entityDSUnsecured.setOutboundDocSubmissionRequest(outboundDS);\n+  /**\n+   * The Constant NHIN_DS_BEAN_NAME.\n+   */\n+  private static final String NHIN_DS_BEAN_NAME = \"nhinXDRDeferredRequest\";\n+\n+  /**\n+   * The Constant ENTITY_UNSECURED_DS_BEAN_NAME.\n+   */\n+  private static final String ENTITY_UNSECURED_DS_BEAN_NAME = \"entityXDRDeferredRequestUnsecured\";\n+\n+  /**\n+   * The Constant ENTITY_SECURED_DS_BEAN_NAME.\n+   */\n+  private static final String ENTITY_SECURED_DS_BEAN_NAME = \"entityXDRDeferredRequestSecured\";\n+\n+  private final serviceEnum serviceName = serviceEnum.DocumentSubmissionDeferredRequest;\n+\n+  /*\n+   * (non-Javadoc)\n+   *\n+   * @see gov.hhs.fha.nhinc.configuration.jmx.WebServicesMXBean#isInboundPassthru()\n+   */\n+  @Override\n+  public boolean isInboundPassthru() {\n+    boolean isPassthru = false;\n+    NhinXDRRequest nhinDS = retrieveBean(NhinXDRRequest.class, getNhinBeanName());\n+    InboundDocSubmissionDeferredRequest outboundDS = nhinDS.getInboundDocSubmission();\n+    if (compareClassName(outboundDS, DEFAULT_INBOUND_PASSTHRU_IMPL_CLASS_NAME)) {\n+      isPassthru = true;\n     }\n-\n-    /*\n-     * (non-Javadoc)\n-     *\n-     * @see gov.hhs.fha.nhinc.configuration.jmx.AbstractWebServicesMXBean#configureOutboundImpl(java.lang.String)\n-     */\n-    @Override\n-    public void configureOutboundPtImpl() throws InstantiationException, IllegalAccessException,\n-            ClassNotFoundException {\n-        OutboundDocSubmissionDeferredRequest outboundDS = retrieveBean(\n-                OutboundDocSubmissionDeferredRequest.class, getPassthroughOutboundBeanName());\n-        EntityDocSubmissionDeferredRequestUnsecured entityDSUnsecured = retrieveBean(\n-                EntityDocSubmissionDeferredRequestUnsecured.class, getEntityUnsecuredBeanName());\n-        EntityDocSubmissionDeferredRequestSecured entityDSSecured = retrieveBean(\n-                EntityDocSubmissionDeferredRequestSecured.class, getEntitySecuredBeanName());\n-\n-        entityDSSecured.setOutboundDocSubmissionRequest(outboundDS);\n-        entityDSUnsecured.setOutboundDocSubmissionRequest(outboundDS);\n+    return isPassthru;\n+  }\n+\n+  /*\n+   * (non-Javadoc)\n+   *\n+   * @see gov.hhs.fha.nhinc.configuration.jmx.WebServicesMXBean#isOutboundPassthru()\n+   */\n+  @Override\n+  public boolean isOutboundPassthru() {\n+    boolean isPassthru = false;\n+    EntityDocSubmissionDeferredRequestUnsecured entityDS = retrieveBean(\n+        EntityDocSubmissionDeferredRequestUnsecured.class, getEntityUnsecuredBeanName());\n+    OutboundDocSubmissionDeferredRequest outboundDS = entityDS.getOutboundDocSubmission();\n+    if (compareClassName(outboundDS, DEFAULT_OUTBOUND_PASSTHRU_IMPL_CLASS_NAME)) {\n+      isPassthru = true;\n     }\n-\n-    @Override\n-    public serviceEnum getServiceName() {\n-        return serviceName;\n+    return isPassthru;\n+  }\n+\n+  /*\n+   * (non-Javadoc)\n+   *\n+   * @see gov.hhs.fha.nhinc.configuration.jmx.AbstractWebServicesMXBean#getNhinBeanName()\n+   */\n+  @Override\n+  protected String getNhinBeanName() {\n+    return NHIN_DS_BEAN_NAME;\n+  }\n+\n+  /*\n+   * (non-Javadoc)\n+   *\n+   * @see gov.hhs.fha.nhinc.configuration.jmx.AbstractWebServicesMXBean#getEntityUnsecuredBeanName()\n+   */\n+  @Override\n+  protected String getEntityUnsecuredBeanName() {\n+    return ENTITY_UNSECURED_DS_BEAN_NAME;\n+  }\n+\n+  /*\n+   * (non-Javadoc)\n+   *\n+   * @see gov.hhs.fha.nhinc.configuration.jmx.AbstractWebServicesMXBean#getEntitySecuredBeanName()\n+   */\n+  @Override\n+  protected String getEntitySecuredBeanName() {\n+    return ENTITY_SECURED_DS_BEAN_NAME;\n+  }\n+\n+  /*\n+   * (non-Javadoc)\n+   *\n+   * @see gov.hhs.fha.nhinc.configuration.jmx.AbstractWebServicesMXBean#configureInboundImpl(java.lang.String)\n+   */\n+  @Override\n+  public void configureInboundStdImpl() throws InstantiationException, IllegalAccessException,\n+      ClassNotFoundException {\n+    NhinXDRRequest nhinDS = retrieveBean(NhinXDRRequest.class, getNhinBeanName());\n+    InboundDocSubmissionDeferredRequest inboundDS = retrieveBean(InboundDocSubmissionDeferredRequest.class,\n+        getStandardInboundBeanName());\n+\n+    nhinDS.setInboundDocSubmissionRequest(inboundDS);\n+  }\n+\n+  /*\n+   * (non-Javadoc)\n+   *\n+   * @see gov.hhs.fha.nhinc.configuration.jmx.AbstractWebServicesMXBean#configureInboundImpl(java.lang.String)\n+   */\n+  @Override\n+  public void configureInboundPtImpl() throws InstantiationException, IllegalAccessException,\n+      ClassNotFoundException {\n+    NhinXDRRequest nhinDS = retrieveBean(NhinXDRRequest.class, getNhinBeanName());\n+    InboundDocSubmissionDeferredRequest inboundDS = retrieveBean(InboundDocSubmissionDeferredRequest.class,\n+        getPassthroughInboundBeanName());\n+\n+    nhinDS.setInboundDocSubmissionRequest(inboundDS);\n+  }\n+\n+  /*\n+   * (non-Javadoc)\n+   *\n+   * @see gov.hhs.fha.nhinc.configuration.jmx.AbstractWebServicesMXBean#configureOutboundImpl(java.lang.String)\n+   */\n+  @Override\n+  public void configureOutboundStdImpl() throws InstantiationException, IllegalAccessException,\n+      ClassNotFoundException {\n+    OutboundDocSubmissionDeferredRequest outboundDS = retrieveBean(\n+        OutboundDocSubmissionDeferredRequest.class, getStandardOutboundBeanName());\n+    EntityDocSubmissionDeferredRequestUnsecured entityDSUnsecured = retrieveBean(\n+        EntityDocSubmissionDeferredRequestUnsecured.class, getEntityUnsecuredBeanName());\n+    EntityDocSubmissionDeferredRequestSecured entityDSSecured = retrieveBean(\n+        EntityDocSubmissionDeferredRequestSecured.class, getEntitySecuredBeanName());\n+\n+    entityDSSecured.setOutboundDocSubmissionRequest(outboundDS);\n+    entityDSUnsecured.setOutboundDocSubmissionRequest(outboundDS);\n+  }\n+\n+  /*\n+   * (non-Javadoc)\n+   *\n+   * @see gov.hhs.fha.nhinc.configuration.jmx.AbstractWebServicesMXBean#configureOutboundImpl(java.lang.String)\n+   */\n+  @Override\n+  public void configureOutboundPtImpl() throws InstantiationException, IllegalAccessException,\n+      ClassNotFoundException {\n+    OutboundDocSubmissionDeferredRequest outboundDS = retrieveBean(\n+        OutboundDocSubmissionDeferredRequest.class, getPassthroughOutboundBeanName());\n+    EntityDocSubmissionDeferredRequestUnsecured entityDSUnsecured = retrieveBean(\n+        EntityDocSubmissionDeferredRequestUnsecured.class, getEntityUnsecuredBeanName());\n+    EntityDocSubmissionDeferredRequestSecured entityDSSecured = retrieveBean(\n+        EntityDocSubmissionDeferredRequestSecured.class, getEntitySecuredBeanName());\n+\n+    entityDSSecured.setOutboundDocSubmissionRequest(outboundDS);\n+    entityDSUnsecured.setOutboundDocSubmissionRequest(outboundDS);\n+  }\n+\n+  @Override\n+  public serviceEnum getServiceName() {\n+    return serviceName;\n+  }\n+\n+  /*\n+   * (non-Javadoc)\n+   *\n+   * @see gov.hhs.fha.nhinc.configuration.jmx.WebServicesMXBean#isInboundStandard()\n+   */\n+  @Override\n+  public boolean isInboundStandard() {\n+    boolean isStandard = false;\n+    NhinXDRRequest nhinDS = retrieveBean(NhinXDRRequest.class, getNhinBeanName());\n+    InboundDocSubmissionDeferredRequest outboundDS = nhinDS.getInboundDocSubmission();\n+    if (compareClassName(outboundDS, DEFAULT_INBOUND_STANDARD_IMPL_CLASS_NAME)) {\n+      isStandard = true;\n     }\n-\n-    /*\n-     * (non-Javadoc)\n-     *\n-     * @see gov.hhs.fha.nhinc.configuration.jmx.WebServicesMXBean#isInboundStandard()\n-     */\n-    @Override\n-    public boolean isInboundStandard() {\n-        boolean isStandard = false;\n-        NhinXDRRequest nhinDS = retrieveBean(NhinXDRRequest.class, getNhinBeanName());\n-        InboundDocSubmissionDeferredRequest outboundDS = nhinDS.getInboundDocSubmission();\n-        if (compareClassName(outboundDS, DEFAULT_INBOUND_STANDARD_IMPL_CLASS_NAME)) {\n-            isStandard = true;\n-        }\n-        return isStandard;\n-    }\n-\n-    /*\n-     * (non-Javadoc)\n-     *\n-     * @see gov.hhs.fha.nhinc.configuration.jmx.WebServicesMXBean#isOutboundStandard()\n-     */\n-    @Override\n-    public boolean isOutboundStandard() {\n-        boolean isStandard = false;\n-        EntityDocSubmissionDeferredRequestUnsecured entityDS = retrieveBean(\n-                EntityDocSubmissionDeferredRequestUnsecured.class, getEntityUnsecuredBeanName());\n-        OutboundDocSubmissionDeferredRequest outboundDS = entityDS.getOutboundDocSubmission();\n-        if (compareClassName(outboundDS, DEFAULT_OUTBOUND_STANDARD_IMPL_CLASS_NAME)) {\n-            isStandard = true;\n-        }\n-        return isStandard;\n+    return isStandard;\n+  }\n+\n+  /*\n+   * (non-Javadoc)\n+   *\n+   * @see gov.hhs.fha.nhinc.configuration.jmx.WebServicesMXBean#isOutboundStandard()\n+   */\n+  @Override\n+  public boolean isOutboundStandard() {\n+    boolean isStandard = false;\n+    EntityDocSubmissionDeferredRequestUnsecured entityDS = retrieveBean(\n+        EntityDocSubmissionDeferredRequestUnsecured.class, getEntityUnsecuredBeanName());\n+    OutboundDocSubmissionDeferredRequest outboundDS = entityDS.getOutboundDocSubmission();\n+    if (compareClassName(outboundDS, DEFAULT_OUTBOUND_STANDARD_IMPL_CLASS_NAME)) {\n+      isStandard = true;\n     }\n+    return isStandard;\n+  }\n }\n",
            "diff_size": 292
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "79",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 157).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "124",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "126",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 142).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "138",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 145).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "148",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 122).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "149",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 146).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "151",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 158).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "153",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 150).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "164",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "165",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 149).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "167",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 158).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "169",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 150).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "203",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 157).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/988/DocumentSubmissionDefRequest11WebServices.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/naturalize/988/DocumentSubmissionDefRequest11WebServices.java\nindex 8d644db3eb5..295a8ffee46 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/988/DocumentSubmissionDefRequest11WebServices.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/naturalize/988/DocumentSubmissionDefRequest11WebServices.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.docsubmission.configuration.jmx;\n \n import gov.hhs.fha.nhinc.configuration.IConfiguration.serviceEnum;\n@@ -75,9 +76,9 @@ public class DocumentSubmissionDefRequest11WebServices extends AbstractDSDeferre\n     @Override\n     public boolean isOutboundPassthru() {\n         boolean isPassthru = false;\n-        EntityDocSubmissionDeferredRequestUnsecured entityDS = retrieveBean(\n-                EntityDocSubmissionDeferredRequestUnsecured.class, getEntityUnsecuredBeanName());\n-        OutboundDocSubmissionDeferredRequest outboundDS = entityDS.getOutboundDocSubmission();\n+        EntityDocSubmissionDeferredRequestUnsecured entityDS = retrieveBean(EntityDocSubmissionDeferredRequestUnsecured.class, getEntityUnsecuredBeanName());\n+\n+OutboundDocSubmissionDeferredRequest outboundDS = entityDS.getOutboundDocSubmission();\n         if (compareClassName(outboundDS, DEFAULT_OUTBOUND_PASSTHRU_IMPL_CLASS_NAME)) {\n             isPassthru = true;\n         }\n@@ -120,13 +121,10 @@ public class DocumentSubmissionDefRequest11WebServices extends AbstractDSDeferre\n      * @see gov.hhs.fha.nhinc.configuration.jmx.AbstractWebServicesMXBean#configureInboundImpl(java.lang.String)\n      */\n     @Override\n-    public void configureInboundStdImpl() throws InstantiationException, IllegalAccessException,\n-            ClassNotFoundException {\n+    public void configureInboundStdImpl() throws InstantiationException, IllegalAccessException, ClassNotFoundException {\n         NhinXDRRequest nhinDS = retrieveBean(NhinXDRRequest.class, getNhinBeanName());\n-        InboundDocSubmissionDeferredRequest inboundDS = retrieveBean(InboundDocSubmissionDeferredRequest.class,\n-                getStandardInboundBeanName());\n-\n-        nhinDS.setInboundDocSubmissionRequest(inboundDS);\n+        InboundDocSubmissionDeferredRequest inboundDS = retrieveBean(InboundDocSubmissionDeferredRequest.class, getStandardInboundBeanName());\n+nhinDS.setInboundDocSubmissionRequest(inboundDS);\n     }\n \n     /*\n@@ -135,13 +133,10 @@ public class DocumentSubmissionDefRequest11WebServices extends AbstractDSDeferre\n      * @see gov.hhs.fha.nhinc.configuration.jmx.AbstractWebServicesMXBean#configureInboundImpl(java.lang.String)\n      */\n     @Override\n-    public void configureInboundPtImpl() throws InstantiationException, IllegalAccessException,\n-            ClassNotFoundException {\n+    public void configureInboundPtImpl() throws InstantiationException, IllegalAccessException, ClassNotFoundException {\n         NhinXDRRequest nhinDS = retrieveBean(NhinXDRRequest.class, getNhinBeanName());\n-        InboundDocSubmissionDeferredRequest inboundDS = retrieveBean(InboundDocSubmissionDeferredRequest.class,\n-                getPassthroughInboundBeanName());\n-\n-        nhinDS.setInboundDocSubmissionRequest(inboundDS);\n+        InboundDocSubmissionDeferredRequest inboundDS = retrieveBean(InboundDocSubmissionDeferredRequest.class, getPassthroughInboundBeanName());\n+nhinDS.setInboundDocSubmissionRequest(inboundDS);\n     }\n \n     /*\n@@ -150,16 +145,13 @@ public class DocumentSubmissionDefRequest11WebServices extends AbstractDSDeferre\n      * @see gov.hhs.fha.nhinc.configuration.jmx.AbstractWebServicesMXBean#configureOutboundImpl(java.lang.String)\n      */\n     @Override\n-    public void configureOutboundStdImpl() throws InstantiationException, IllegalAccessException,\n-            ClassNotFoundException {\n-        OutboundDocSubmissionDeferredRequest outboundDS = retrieveBean(\n-                OutboundDocSubmissionDeferredRequest.class, getStandardOutboundBeanName());\n-        EntityDocSubmissionDeferredRequestUnsecured entityDSUnsecured = retrieveBean(\n-                EntityDocSubmissionDeferredRequestUnsecured.class, getEntityUnsecuredBeanName());\n-        EntityDocSubmissionDeferredRequestSecured entityDSSecured = retrieveBean(\n-                EntityDocSubmissionDeferredRequestSecured.class, getEntitySecuredBeanName());\n-\n-        entityDSSecured.setOutboundDocSubmissionRequest(outboundDS);\n+    public void configureOutboundStdImpl() throws InstantiationException, IllegalAccessException, ClassNotFoundException {\n+        OutboundDocSubmissionDeferredRequest outboundDS = retrieveBean(OutboundDocSubmissionDeferredRequest.class, getStandardOutboundBeanName());\n+\n+EntityDocSubmissionDeferredRequestUnsecured entityDSUnsecured = retrieveBean(EntityDocSubmissionDeferredRequestUnsecured.class, getEntityUnsecuredBeanName());\n+\n+EntityDocSubmissionDeferredRequestSecured entityDSSecured = retrieveBean(EntityDocSubmissionDeferredRequestSecured.class, getEntitySecuredBeanName());\n+entityDSSecured.setOutboundDocSubmissionRequest(outboundDS);\n         entityDSUnsecured.setOutboundDocSubmissionRequest(outboundDS);\n     }\n \n@@ -169,16 +161,13 @@ public class DocumentSubmissionDefRequest11WebServices extends AbstractDSDeferre\n      * @see gov.hhs.fha.nhinc.configuration.jmx.AbstractWebServicesMXBean#configureOutboundImpl(java.lang.String)\n      */\n     @Override\n-    public void configureOutboundPtImpl() throws InstantiationException, IllegalAccessException,\n-            ClassNotFoundException {\n-        OutboundDocSubmissionDeferredRequest outboundDS = retrieveBean(\n-                OutboundDocSubmissionDeferredRequest.class, getPassthroughOutboundBeanName());\n-        EntityDocSubmissionDeferredRequestUnsecured entityDSUnsecured = retrieveBean(\n-                EntityDocSubmissionDeferredRequestUnsecured.class, getEntityUnsecuredBeanName());\n-        EntityDocSubmissionDeferredRequestSecured entityDSSecured = retrieveBean(\n-                EntityDocSubmissionDeferredRequestSecured.class, getEntitySecuredBeanName());\n-\n-        entityDSSecured.setOutboundDocSubmissionRequest(outboundDS);\n+    public void configureOutboundPtImpl() throws InstantiationException, IllegalAccessException, ClassNotFoundException {\n+        OutboundDocSubmissionDeferredRequest outboundDS = retrieveBean(OutboundDocSubmissionDeferredRequest.class, getPassthroughOutboundBeanName());\n+\n+EntityDocSubmissionDeferredRequestUnsecured entityDSUnsecured = retrieveBean(EntityDocSubmissionDeferredRequestUnsecured.class, getEntityUnsecuredBeanName());\n+\n+EntityDocSubmissionDeferredRequestSecured entityDSSecured = retrieveBean(EntityDocSubmissionDeferredRequestSecured.class, getEntitySecuredBeanName());\n+entityDSSecured.setOutboundDocSubmissionRequest(outboundDS);\n         entityDSUnsecured.setOutboundDocSubmissionRequest(outboundDS);\n     }\n \n@@ -211,12 +200,12 @@ public class DocumentSubmissionDefRequest11WebServices extends AbstractDSDeferre\n     @Override\n     public boolean isOutboundStandard() {\n         boolean isStandard = false;\n-        EntityDocSubmissionDeferredRequestUnsecured entityDS = retrieveBean(\n-                EntityDocSubmissionDeferredRequestUnsecured.class, getEntityUnsecuredBeanName());\n-        OutboundDocSubmissionDeferredRequest outboundDS = entityDS.getOutboundDocSubmission();\n+        EntityDocSubmissionDeferredRequestUnsecured entityDS = retrieveBean(EntityDocSubmissionDeferredRequestUnsecured.class, getEntityUnsecuredBeanName());\n+\n+OutboundDocSubmissionDeferredRequest outboundDS = entityDS.getOutboundDocSubmission();\n         if (compareClassName(outboundDS, DEFAULT_OUTBOUND_STANDARD_IMPL_CLASS_NAME)) {\n             isStandard = true;\n         }\n         return isStandard;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 40
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "85",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 157).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "137",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "139",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 142).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "153",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 145).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "165",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 122).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "166",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 146).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "167",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 166).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "168",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 158).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "181",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "182",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 149).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "183",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 166).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "184",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 158).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "223",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 157).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/988/DocumentSubmissionDefRequest11WebServices.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/codebuff/988/DocumentSubmissionDefRequest11WebServices.java\nindex 8d644db3eb5..1b718926873 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/988/DocumentSubmissionDefRequest11WebServices.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/codebuff/988/DocumentSubmissionDefRequest11WebServices.java\n@@ -38,9 +38,13 @@ import gov.hhs.fha.nhinc.docsubmission.outbound.deferred.request.OutboundDocSubm\n  *\n  * @author msw\n  */\n-public class DocumentSubmissionDefRequest11WebServices extends AbstractDSDeferredReqWebServicesMXBean {\n+\n+\n+public class DocumentSubmissionDefRequest11WebServices extends\n+    AbstractDSDeferredReqWebServicesMXBean {\n \n     /** The Constant NHIN_DS_BEAN_NAME. */\n+\n     private static final String NHIN_DS_BEAN_NAME = \"nhinXDRDeferredRequest\";\n \n     /** The Constant ENTITY_UNSECURED_DS_BEAN_NAME. */\n@@ -48,7 +52,6 @@ public class DocumentSubmissionDefRequest11WebServices extends AbstractDSDeferre\n \n     /** The Constant ENTITY_SECURED_DS_BEAN_NAME. */\n     private static final String ENTITY_SECURED_DS_BEAN_NAME = \"entityXDRDeferredRequestSecured\";\n-\n     private final serviceEnum serviceName = serviceEnum.DocumentSubmissionDeferredRequest;\n \n     /*\n@@ -56,6 +59,8 @@ public class DocumentSubmissionDefRequest11WebServices extends AbstractDSDeferre\n      *\n      * @see gov.hhs.fha.nhinc.configuration.jmx.WebServicesMXBean#isInboundPassthru()\n      */\n+\n+\n     @Override\n     public boolean isInboundPassthru() {\n         boolean isPassthru = false;\n@@ -72,11 +77,12 @@ public class DocumentSubmissionDefRequest11WebServices extends AbstractDSDeferre\n      *\n      * @see gov.hhs.fha.nhinc.configuration.jmx.WebServicesMXBean#isOutboundPassthru()\n      */\n+\n+\n     @Override\n     public boolean isOutboundPassthru() {\n         boolean isPassthru = false;\n-        EntityDocSubmissionDeferredRequestUnsecured entityDS = retrieveBean(\n-                EntityDocSubmissionDeferredRequestUnsecured.class, getEntityUnsecuredBeanName());\n+        EntityDocSubmissionDeferredRequestUnsecured entityDS = retrieveBean(EntityDocSubmissionDeferredRequestUnsecured.class, getEntityUnsecuredBeanName());\n         OutboundDocSubmissionDeferredRequest outboundDS = entityDS.getOutboundDocSubmission();\n         if (compareClassName(outboundDS, DEFAULT_OUTBOUND_PASSTHRU_IMPL_CLASS_NAME)) {\n             isPassthru = true;\n@@ -89,6 +95,8 @@ public class DocumentSubmissionDefRequest11WebServices extends AbstractDSDeferre\n      *\n      * @see gov.hhs.fha.nhinc.configuration.jmx.AbstractWebServicesMXBean#getNhinBeanName()\n      */\n+\n+\n     @Override\n     protected String getNhinBeanName() {\n         return NHIN_DS_BEAN_NAME;\n@@ -99,6 +107,8 @@ public class DocumentSubmissionDefRequest11WebServices extends AbstractDSDeferre\n      *\n      * @see gov.hhs.fha.nhinc.configuration.jmx.AbstractWebServicesMXBean#getEntityUnsecuredBeanName()\n      */\n+\n+\n     @Override\n     protected String getEntityUnsecuredBeanName() {\n         return ENTITY_UNSECURED_DS_BEAN_NAME;\n@@ -109,6 +119,8 @@ public class DocumentSubmissionDefRequest11WebServices extends AbstractDSDeferre\n      *\n      * @see gov.hhs.fha.nhinc.configuration.jmx.AbstractWebServicesMXBean#getEntitySecuredBeanName()\n      */\n+\n+\n     @Override\n     protected String getEntitySecuredBeanName() {\n         return ENTITY_SECURED_DS_BEAN_NAME;\n@@ -119,13 +131,12 @@ public class DocumentSubmissionDefRequest11WebServices extends AbstractDSDeferre\n      *\n      * @see gov.hhs.fha.nhinc.configuration.jmx.AbstractWebServicesMXBean#configureInboundImpl(java.lang.String)\n      */\n+\n+\n     @Override\n-    public void configureInboundStdImpl() throws InstantiationException, IllegalAccessException,\n-            ClassNotFoundException {\n+    public void configureInboundStdImpl() throws InstantiationException, IllegalAccessException, ClassNotFoundException {\n         NhinXDRRequest nhinDS = retrieveBean(NhinXDRRequest.class, getNhinBeanName());\n-        InboundDocSubmissionDeferredRequest inboundDS = retrieveBean(InboundDocSubmissionDeferredRequest.class,\n-                getStandardInboundBeanName());\n-\n+        InboundDocSubmissionDeferredRequest inboundDS = retrieveBean(InboundDocSubmissionDeferredRequest.class, getStandardInboundBeanName());\n         nhinDS.setInboundDocSubmissionRequest(inboundDS);\n     }\n \n@@ -134,13 +145,12 @@ public class DocumentSubmissionDefRequest11WebServices extends AbstractDSDeferre\n      *\n      * @see gov.hhs.fha.nhinc.configuration.jmx.AbstractWebServicesMXBean#configureInboundImpl(java.lang.String)\n      */\n+\n+\n     @Override\n-    public void configureInboundPtImpl() throws InstantiationException, IllegalAccessException,\n-            ClassNotFoundException {\n+    public void configureInboundPtImpl() throws InstantiationException, IllegalAccessException, ClassNotFoundException {\n         NhinXDRRequest nhinDS = retrieveBean(NhinXDRRequest.class, getNhinBeanName());\n-        InboundDocSubmissionDeferredRequest inboundDS = retrieveBean(InboundDocSubmissionDeferredRequest.class,\n-                getPassthroughInboundBeanName());\n-\n+        InboundDocSubmissionDeferredRequest inboundDS = retrieveBean(InboundDocSubmissionDeferredRequest.class, getPassthroughInboundBeanName());\n         nhinDS.setInboundDocSubmissionRequest(inboundDS);\n     }\n \n@@ -149,16 +159,13 @@ public class DocumentSubmissionDefRequest11WebServices extends AbstractDSDeferre\n      *\n      * @see gov.hhs.fha.nhinc.configuration.jmx.AbstractWebServicesMXBean#configureOutboundImpl(java.lang.String)\n      */\n-    @Override\n-    public void configureOutboundStdImpl() throws InstantiationException, IllegalAccessException,\n-            ClassNotFoundException {\n-        OutboundDocSubmissionDeferredRequest outboundDS = retrieveBean(\n-                OutboundDocSubmissionDeferredRequest.class, getStandardOutboundBeanName());\n-        EntityDocSubmissionDeferredRequestUnsecured entityDSUnsecured = retrieveBean(\n-                EntityDocSubmissionDeferredRequestUnsecured.class, getEntityUnsecuredBeanName());\n-        EntityDocSubmissionDeferredRequestSecured entityDSSecured = retrieveBean(\n-                EntityDocSubmissionDeferredRequestSecured.class, getEntitySecuredBeanName());\n \n+\n+    @Override\n+    public void configureOutboundStdImpl() throws InstantiationException, IllegalAccessException, ClassNotFoundException {\n+        OutboundDocSubmissionDeferredRequest outboundDS = retrieveBean(OutboundDocSubmissionDeferredRequest.class, getStandardOutboundBeanName());\n+        EntityDocSubmissionDeferredRequestUnsecured entityDSUnsecured = retrieveBean(EntityDocSubmissionDeferredRequestUnsecured.class, getEntityUnsecuredBeanName());\n+        EntityDocSubmissionDeferredRequestSecured entityDSSecured = retrieveBean(EntityDocSubmissionDeferredRequestSecured.class, getEntitySecuredBeanName());\n         entityDSSecured.setOutboundDocSubmissionRequest(outboundDS);\n         entityDSUnsecured.setOutboundDocSubmissionRequest(outboundDS);\n     }\n@@ -168,20 +175,18 @@ public class DocumentSubmissionDefRequest11WebServices extends AbstractDSDeferre\n      *\n      * @see gov.hhs.fha.nhinc.configuration.jmx.AbstractWebServicesMXBean#configureOutboundImpl(java.lang.String)\n      */\n-    @Override\n-    public void configureOutboundPtImpl() throws InstantiationException, IllegalAccessException,\n-            ClassNotFoundException {\n-        OutboundDocSubmissionDeferredRequest outboundDS = retrieveBean(\n-                OutboundDocSubmissionDeferredRequest.class, getPassthroughOutboundBeanName());\n-        EntityDocSubmissionDeferredRequestUnsecured entityDSUnsecured = retrieveBean(\n-                EntityDocSubmissionDeferredRequestUnsecured.class, getEntityUnsecuredBeanName());\n-        EntityDocSubmissionDeferredRequestSecured entityDSSecured = retrieveBean(\n-                EntityDocSubmissionDeferredRequestSecured.class, getEntitySecuredBeanName());\n \n+\n+    @Override\n+    public void configureOutboundPtImpl() throws InstantiationException, IllegalAccessException, ClassNotFoundException {\n+        OutboundDocSubmissionDeferredRequest outboundDS = retrieveBean(OutboundDocSubmissionDeferredRequest.class, getPassthroughOutboundBeanName());\n+        EntityDocSubmissionDeferredRequestUnsecured entityDSUnsecured = retrieveBean(EntityDocSubmissionDeferredRequestUnsecured.class, getEntityUnsecuredBeanName());\n+        EntityDocSubmissionDeferredRequestSecured entityDSSecured = retrieveBean(EntityDocSubmissionDeferredRequestSecured.class, getEntitySecuredBeanName());\n         entityDSSecured.setOutboundDocSubmissionRequest(outboundDS);\n         entityDSUnsecured.setOutboundDocSubmissionRequest(outboundDS);\n     }\n \n+\n     @Override\n     public serviceEnum getServiceName() {\n         return serviceName;\n@@ -192,6 +197,8 @@ public class DocumentSubmissionDefRequest11WebServices extends AbstractDSDeferre\n      *\n      * @see gov.hhs.fha.nhinc.configuration.jmx.WebServicesMXBean#isInboundStandard()\n      */\n+\n+\n     @Override\n     public boolean isInboundStandard() {\n         boolean isStandard = false;\n@@ -208,15 +215,17 @@ public class DocumentSubmissionDefRequest11WebServices extends AbstractDSDeferre\n      *\n      * @see gov.hhs.fha.nhinc.configuration.jmx.WebServicesMXBean#isOutboundStandard()\n      */\n+\n+\n     @Override\n     public boolean isOutboundStandard() {\n         boolean isStandard = false;\n-        EntityDocSubmissionDeferredRequestUnsecured entityDS = retrieveBean(\n-                EntityDocSubmissionDeferredRequestUnsecured.class, getEntityUnsecuredBeanName());\n+        EntityDocSubmissionDeferredRequestUnsecured entityDS = retrieveBean(EntityDocSubmissionDeferredRequestUnsecured.class, getEntityUnsecuredBeanName());\n         OutboundDocSubmissionDeferredRequest outboundDS = entityDS.getOutboundDocSubmission();\n         if (compareClassName(outboundDS, DEFAULT_OUTBOUND_STANDARD_IMPL_CLASS_NAME)) {\n             isStandard = true;\n         }\n         return isStandard;\n     }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 71
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "28",
                    "severity": "error",
                    "message": "'import' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/988/DocumentSubmissionDefRequest11WebServices.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_random/988/DocumentSubmissionDefRequest11WebServices.java\nindex 8d644db3eb5..4f327ca2530 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/988/DocumentSubmissionDefRequest11WebServices.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_random/988/DocumentSubmissionDefRequest11WebServices.java\n@@ -25,7 +25,6 @@\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n package gov.hhs.fha.nhinc.docsubmission.configuration.jmx;\n-\n import gov.hhs.fha.nhinc.configuration.IConfiguration.serviceEnum;\n import gov.hhs.fha.nhinc.docsubmission._11.entity.deferred.request.EntityDocSubmissionDeferredRequestSecured;\n import gov.hhs.fha.nhinc.docsubmission._11.entity.deferred.request.EntityDocSubmissionDeferredRequestUnsecured;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/988/DocumentSubmissionDefRequest11WebServices.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_three_grams/988/DocumentSubmissionDefRequest11WebServices.java\nindex 8d644db3eb5..9105abd60e2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/988/DocumentSubmissionDefRequest11WebServices.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_three_grams/988/DocumentSubmissionDefRequest11WebServices.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.docsubmission.configuration.jmx;\n \n import gov.hhs.fha.nhinc.configuration.IConfiguration.serviceEnum;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff",
        "styler_random"
    ]
}
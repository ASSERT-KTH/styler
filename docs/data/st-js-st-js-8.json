{
    "project_name": "st-js-st-js",
    "error_id": "8",
    "information": {
        "errors": [
            {
                "line": "96",
                "severity": "error",
                "message": "Line is longer than 145 characters (found 163).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "\t\tassertCodeContains(\n\t\t\tgenerated,\n\t\t\t\"bool: \\\"Int8Array\\\", b: \\\"Int8Array\\\", s: \\\"Int16Array\\\", c: \\\"Uint16Array\\\", i: \\\"Int32Array\\\", f: \\\"Float32Array\\\", d: \\\"Float64Array\\\", bool2d: \\\"Array\\\"\");\n\t}\n\n\t@Test",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "96",
                    "severity": "error",
                    "message": "Line is longer than 145 characters (found 163).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/errored/1/8/TypedArrayTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/styler/8/TypedArrayTest.java\nindex e4c654ecb8b..46ff170e61e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/errored/1/8/TypedArrayTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/styler/8/TypedArrayTest.java\n@@ -94,7 +94,7 @@ public class TypedArrayTest extends AbstractStjsTest {\n \t\tassertCodeContains(\n \t\t\tgenerated,\n \t\t\t\"bool: \\\"Int8Array\\\", b: \\\"Int8Array\\\", s: \\\"Int16Array\\\", c: \\\"Uint16Array\\\", i: \\\"Int32Array\\\", f: \\\"Float32Array\\\", d: \\\"Float64Array\\\", bool2d: \\\"Array\\\"\");\n-\t}\n+\t\t}\n \n \t@Test\n \tpublic void testMultiInit() throws Exception {\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "8",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "9",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "10",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "13",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "15",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "16",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "17",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "18",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "20",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "21",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "22",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "23",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "24",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "25",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "26",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "28",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "29",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "30",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "31",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "33",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "34",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "35",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "36",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "38",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "39",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "40",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "41",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "43",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "44",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "45",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "46",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "48",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "49",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "50",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "51",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "54",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "55",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "56",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "58",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "59",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "61",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "62",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "63",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "64",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "65",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "66",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "67",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "68",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "69",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "70",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "72",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "74",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "75",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "76",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "77",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "79",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "80",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "81",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "82",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "83",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "84",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "85",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "86",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "87",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "88",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "89",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "91",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "92",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "93",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "94",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "95",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "96",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "96",
                    "severity": "error",
                    "message": "Line is longer than 145 characters (found 172).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "97",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "99",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "100",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "101",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "102",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "103",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "105",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "106",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "108",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "109",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "110",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "111",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "112",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "113",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "114",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "115",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "117",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "118",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "120",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "121",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "122",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "125",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "127",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "128",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "132",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "133",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "135",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "136",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "137",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "138",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "140",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/errored/1/8/TypedArrayTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/intellij/8/TypedArrayTest.java\nindex e4c654ecb8b..97834024fce 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/errored/1/8/TypedArrayTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/intellij/8/TypedArrayTest.java\n@@ -5,137 +5,137 @@ import org.stjs.generator.utils.AbstractStjsTest;\n \n public class TypedArrayTest extends AbstractStjsTest {\n \n-\t@Test\n-\tpublic void testEnhancedForLoopArray() throws Exception {\n-\t\tassertCodeContains(EnhancedForLoopIntArray.class, \"var arr = new Int32Array([42, 43]);\");\n-\t\t// int expected = EnhancedForLoopIntArray.method();\n-\t\t// assertEquals(expected, executeAndReturnNumber(EnhancedForLoopIntArray.class), 0.01);\n-\t}\n-\n-\t@Test\n-\tpublic void testFloatArray() throws Exception {\n-\t\tassertCodeContains(Float32ArrayInit.class, \"new Float32Array(1)\");\n-\t}\n-\n-\t@Test\n-\tpublic void testMF32AInit() throws Exception {\n-\t\tassertCodeContains(MultiF32AInit.class,\n-\t\t\t\"Array.apply(null, Array(1))\" //\n-\t\t\t\t+ \".map(function(){return Array.apply(null, Array(2))\" //\n-\t\t\t\t+ \".map(function(){return new Float32Array(3);});});\");\n-\t}\n-\n-\t@Test\n-\tpublic void testFloatArrayInit0() throws Exception {\n-\t\tassertCodeContains(Float32ArrayInit0.class, \"new Float32Array()\");\n-\t}\n-\n-\t@Test\n-\tpublic void testFloatArrayInit00() throws Exception {\n-\t\tassertCodeContains(Float32ArrayInit0Empty.class, \"var arr = new Float32Array()\");\n-\t}\n-\n-\t@Test\n-\tpublic void testMultiF32AInit0Empty() throws Exception {\n-\t\tassertCodeContains(MultiF32AInit0Empty.class, \"var arr = [];\");\n-\t}\n-\n-\t@Test\n-\tpublic void testMultiF32AInit0Empty2() throws Exception {\n-\t\tassertCodeContains(MultiF32AInit0Empty2.class, \"var arr2 = [[]];\");\n-\t}\n-\n-\t@Test\n-\tpublic void testMultiF32AInit0Empty3() throws Exception {\n-\t\tassertCodeContains(MultiF32AInit0Empty3.class, \"var arr3 = [[new Float32Array()]];\");\n-\t}\n-\n-\t@Test\n-\tpublic void testFloatArrayInit1() throws Exception {\n-\t\tassertCodeContains(Float32ArrayInit1.class, \"new Float32Array([1.2, 2.0, 3, 0.4, this.a()])\");\n-\t}\n-\n-\t@Test\n-\tpublic void testMultiFloatArrayInit1() throws Exception {\n-\t\t/* @formatter:off */\n-\t\tassertCodeContains(MultiF32AInit1.class,\n-\t\t\t\"[\"\n-\t\t\t\t+ \"[\"\n-\t\t\t\t+ \"new Float32Array([1.2, 2.0, 3, 0.4, this.a()]),\"\n-\t\t\t\t+ \"new Float32Array(),\"\n-\t\t\t\t+ \"new Float32Array(1),\"\n-\t\t\t\t+ \"this.myarray()\"\n-\t\t\t\t+ \"],\"\n-\t\t\t\t+ \"[]\"\n-\t\t\t\t+ \"]\");\n-\t\t/* @formatter:on */\n-\t}\n-\n-\t@Test\n-\tpublic void testFloatArrayInit2() throws Exception {\n-\t\tassertCodeContains(Float32ArrayInit2.class, \"new Float32Array([1.2, 2.0, 3, 0.4, this.a()])\");\n-\t}\n-\n-\t@Test\n-\tpublic void testTypes() throws Exception {\n-\t\tString generated = generate(Types.class);\n-\t\tassertCodeContains(generated, \"var bool = new Int8Array()\");\n-\t\tassertCodeContains(generated, \"var b = new Int8Array()\");\n-\t\tassertCodeContains(generated, \"var s = new Int16Array()\");\n-\t\tassertCodeContains(generated, \"var c = new Uint16Array()\");\n-\t\tassertCodeContains(generated, \"var i = new Int32Array()\");\n-\t\tassertCodeContains(generated, \"var f = new Float32Array()\");\n-\t\tassertCodeContains(generated, \"var d = new Float64Array()\");\n-\t}\n-\n-\t@Test\n-\tpublic void testPrimitiveArrayFields() throws Exception {\n-\t\tString generated = generate(PrimitiveArrayFields.class);\n-\t\tassertCodeContains(\n-\t\t\tgenerated,\n-\t\t\t\"bool: \\\"Int8Array\\\", b: \\\"Int8Array\\\", s: \\\"Int16Array\\\", c: \\\"Uint16Array\\\", i: \\\"Int32Array\\\", f: \\\"Float32Array\\\", d: \\\"Float64Array\\\", bool2d: \\\"Array\\\"\");\n-\t}\n-\n-\t@Test\n-\tpublic void testMultiInit() throws Exception {\n-\t\tString expected = \"Array.apply(null, Array(3)).map(function(){return Array(2);});\"; //\n-\t\tassertCodeContains(MultiInit.class, expected);\n-\t}\n-\n-\t@Test\n-\tpublic void testMultiInit2() throws Exception {\n-\t\t/* @formatter:off */\n-\t\tString expected =\n-\t\t\t\"var ac = [Array.apply(null, Array(2)).map(function() {\" + //\n-\t\t\t\t\"    return new Int32Array(3);\" + //\n-\t\t\t\t\"}), Array.apply(null, Array(4)).map(function() {\" + //\n-\t\t\t\t\"    return new Int32Array(5);\" + //\n-\t\t\t\t\"}), Array.apply(null, Array(6)).map(function() {\" + //\n-\t\t\t\t\"    return new Int32Array(7);\" + //\n-\t\t\t\t\"})]\";\n-\t\t/* @formatter:on */\n-\t\tassertCodeContains(MultiInit2.class, expected);\n-\t}\n-\n-\t@Test\n-\tpublic void testArrayMath() throws Exception {\n-\t\tassertCodeContains(ArrayMath.class, \"c[i]++;\");\n-\t\t// int expected = ArrayMath.method();\n-\t\t// assertEquals(expected, executeAndReturnNumber(ArrayMath.class), 0);\n-\t}\n-\n-\t@Test\n-\tpublic void testBooleanArray() throws Exception {\n-\t\t// int expected = BooleanArray.method();\n-\t\t// assertEquals(expected, executeAndReturnNumber(BooleanArray.class), 0);\n-\n-\t\tassertCodeContains(BooleanArray.class, \"var a = new Int8Array(3);\");\n-\t}\n-\n-\t@Test\n-\tpublic void testInstanceOf() {\n-\t\tString generated = generate(ArrayInstanceOf.class);\n-\t\tassertCodeContains(generated, \"isInstanceOf(o.constructor, Int8Array)\");\n-\t\t// assertEquals(44., executeAndReturnNumber(ArrayInstanceOf.class), 0.01);\n-\t}\n+    @Test\n+    public void testEnhancedForLoopArray() throws Exception {\n+        assertCodeContains(EnhancedForLoopIntArray.class, \"var arr = new Int32Array([42, 43]);\");\n+        // int expected = EnhancedForLoopIntArray.method();\n+        // assertEquals(expected, executeAndReturnNumber(EnhancedForLoopIntArray.class), 0.01);\n+    }\n+\n+    @Test\n+    public void testFloatArray() throws Exception {\n+        assertCodeContains(Float32ArrayInit.class, \"new Float32Array(1)\");\n+    }\n+\n+    @Test\n+    public void testMF32AInit() throws Exception {\n+        assertCodeContains(MultiF32AInit.class,\n+            \"Array.apply(null, Array(1))\" //\n+                + \".map(function(){return Array.apply(null, Array(2))\" //\n+                + \".map(function(){return new Float32Array(3);});});\");\n+    }\n+\n+    @Test\n+    public void testFloatArrayInit0() throws Exception {\n+        assertCodeContains(Float32ArrayInit0.class, \"new Float32Array()\");\n+    }\n+\n+    @Test\n+    public void testFloatArrayInit00() throws Exception {\n+        assertCodeContains(Float32ArrayInit0Empty.class, \"var arr = new Float32Array()\");\n+    }\n+\n+    @Test\n+    public void testMultiF32AInit0Empty() throws Exception {\n+        assertCodeContains(MultiF32AInit0Empty.class, \"var arr = [];\");\n+    }\n+\n+    @Test\n+    public void testMultiF32AInit0Empty2() throws Exception {\n+        assertCodeContains(MultiF32AInit0Empty2.class, \"var arr2 = [[]];\");\n+    }\n+\n+    @Test\n+    public void testMultiF32AInit0Empty3() throws Exception {\n+        assertCodeContains(MultiF32AInit0Empty3.class, \"var arr3 = [[new Float32Array()]];\");\n+    }\n+\n+    @Test\n+    public void testFloatArrayInit1() throws Exception {\n+        assertCodeContains(Float32ArrayInit1.class, \"new Float32Array([1.2, 2.0, 3, 0.4, this.a()])\");\n+    }\n+\n+    @Test\n+    public void testMultiFloatArrayInit1() throws Exception {\n+        /* @formatter:off */\n+        assertCodeContains(MultiF32AInit1.class,\n+            \"[\"\n+                + \"[\"\n+                + \"new Float32Array([1.2, 2.0, 3, 0.4, this.a()]),\"\n+                + \"new Float32Array(),\"\n+                + \"new Float32Array(1),\"\n+                + \"this.myarray()\"\n+                + \"],\"\n+                + \"[]\"\n+                + \"]\");\n+        /* @formatter:on */\n+    }\n+\n+    @Test\n+    public void testFloatArrayInit2() throws Exception {\n+        assertCodeContains(Float32ArrayInit2.class, \"new Float32Array([1.2, 2.0, 3, 0.4, this.a()])\");\n+    }\n+\n+    @Test\n+    public void testTypes() throws Exception {\n+        String generated = generate(Types.class);\n+        assertCodeContains(generated, \"var bool = new Int8Array()\");\n+        assertCodeContains(generated, \"var b = new Int8Array()\");\n+        assertCodeContains(generated, \"var s = new Int16Array()\");\n+        assertCodeContains(generated, \"var c = new Uint16Array()\");\n+        assertCodeContains(generated, \"var i = new Int32Array()\");\n+        assertCodeContains(generated, \"var f = new Float32Array()\");\n+        assertCodeContains(generated, \"var d = new Float64Array()\");\n+    }\n+\n+    @Test\n+    public void testPrimitiveArrayFields() throws Exception {\n+        String generated = generate(PrimitiveArrayFields.class);\n+        assertCodeContains(\n+            generated,\n+            \"bool: \\\"Int8Array\\\", b: \\\"Int8Array\\\", s: \\\"Int16Array\\\", c: \\\"Uint16Array\\\", i: \\\"Int32Array\\\", f: \\\"Float32Array\\\", d: \\\"Float64Array\\\", bool2d: \\\"Array\\\"\");\n+    }\n+\n+    @Test\n+    public void testMultiInit() throws Exception {\n+        String expected = \"Array.apply(null, Array(3)).map(function(){return Array(2);});\"; //\n+        assertCodeContains(MultiInit.class, expected);\n+    }\n+\n+    @Test\n+    public void testMultiInit2() throws Exception {\n+        /* @formatter:off */\n+        String expected =\n+            \"var ac = [Array.apply(null, Array(2)).map(function() {\" + //\n+                \"    return new Int32Array(3);\" + //\n+                \"}), Array.apply(null, Array(4)).map(function() {\" + //\n+                \"    return new Int32Array(5);\" + //\n+                \"}), Array.apply(null, Array(6)).map(function() {\" + //\n+                \"    return new Int32Array(7);\" + //\n+                \"})]\";\n+        /* @formatter:on */\n+        assertCodeContains(MultiInit2.class, expected);\n+    }\n+\n+    @Test\n+    public void testArrayMath() throws Exception {\n+        assertCodeContains(ArrayMath.class, \"c[i]++;\");\n+        // int expected = ArrayMath.method();\n+        // assertEquals(expected, executeAndReturnNumber(ArrayMath.class), 0);\n+    }\n+\n+    @Test\n+    public void testBooleanArray() throws Exception {\n+        // int expected = BooleanArray.method();\n+        // assertEquals(expected, executeAndReturnNumber(BooleanArray.class), 0);\n+\n+        assertCodeContains(BooleanArray.class, \"var a = new Int8Array(3);\");\n+    }\n+\n+    @Test\n+    public void testInstanceOf() {\n+        String generated = generate(ArrayInstanceOf.class);\n+        assertCodeContains(generated, \"isInstanceOf(o.constructor, Int8Array)\");\n+        // assertEquals(44., executeAndReturnNumber(ArrayInstanceOf.class), 0.01);\n+    }\n }\n",
            "diff_size": 133
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "91",
                    "severity": "error",
                    "message": "Line is longer than 145 characters (found 192).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/errored/1/8/TypedArrayTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/naturalize/8/TypedArrayTest.java\nindex e4c654ecb8b..5512e25643d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/errored/1/8/TypedArrayTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/naturalize/8/TypedArrayTest.java\n@@ -19,8 +19,7 @@ public class TypedArrayTest extends AbstractStjsTest {\n \n \t@Test\n \tpublic void testMF32AInit() throws Exception {\n-\t\tassertCodeContains(MultiF32AInit.class,\n-\t\t\t\"Array.apply(null, Array(1))\" //\n+\t\tassertCodeContains(MultiF32AInit.class, \"Array.apply(null, Array(1))\" //\n \t\t\t\t+ \".map(function(){return Array.apply(null, Array(2))\" //\n \t\t\t\t+ \".map(function(){return new Float32Array(3);});});\");\n \t}\n@@ -58,17 +57,15 @@ public class TypedArrayTest extends AbstractStjsTest {\n \t@Test\n \tpublic void testMultiFloatArrayInit1() throws Exception {\n \t\t/* @formatter:off */\n-\t\tassertCodeContains(MultiF32AInit1.class,\n-\t\t\t\"[\"\n-\t\t\t\t+ \"[\"\n+\t\tassertCodeContains(MultiF32AInit1.class, \"[\"\n+\t\t+ \"[\"\n \t\t\t\t+ \"new Float32Array([1.2, 2.0, 3, 0.4, this.a()]),\"\n \t\t\t\t+ \"new Float32Array(),\"\n \t\t\t\t+ \"new Float32Array(1),\"\n \t\t\t\t+ \"this.myarray()\"\n \t\t\t\t+ \"],\"\n \t\t\t\t+ \"[]\"\n-\t\t\t\t+ \"]\");\n-\t\t/* @formatter:on */\n+\t\t\t\t+ \"]\"); /* @formatter:on */\n \t}\n \n \t@Test\n@@ -91,9 +88,7 @@ public class TypedArrayTest extends AbstractStjsTest {\n \t@Test\n \tpublic void testPrimitiveArrayFields() throws Exception {\n \t\tString generated = generate(PrimitiveArrayFields.class);\n-\t\tassertCodeContains(\n-\t\t\tgenerated,\n-\t\t\t\"bool: \\\"Int8Array\\\", b: \\\"Int8Array\\\", s: \\\"Int16Array\\\", c: \\\"Uint16Array\\\", i: \\\"Int32Array\\\", f: \\\"Float32Array\\\", d: \\\"Float64Array\\\", bool2d: \\\"Array\\\"\");\n+\t\tassertCodeContains(generated, \"bool: \\\"Int8Array\\\", b: \\\"Int8Array\\\", s: \\\"Int16Array\\\", c: \\\"Uint16Array\\\", i: \\\"Int32Array\\\", f: \\\"Float32Array\\\", d: \\\"Float64Array\\\", bool2d: \\\"Array\\\"\");\n \t}\n \n \t@Test\n@@ -104,16 +99,13 @@ public class TypedArrayTest extends AbstractStjsTest {\n \n \t@Test\n \tpublic void testMultiInit2() throws Exception {\n-\t\t/* @formatter:off */\n-\t\tString expected =\n-\t\t\t\"var ac = [Array.apply(null, Array(2)).map(function() {\" + //\n+\t\t/* @formatter:off */String expected = \"var ac = [Array.apply(null, Array(2)).map(function() {\" + //\n \t\t\t\t\"    return new Int32Array(3);\" + //\n \t\t\t\t\"}), Array.apply(null, Array(4)).map(function() {\" + //\n \t\t\t\t\"    return new Int32Array(5);\" + //\n \t\t\t\t\"}), Array.apply(null, Array(6)).map(function() {\" + //\n \t\t\t\t\"    return new Int32Array(7);\" + //\n-\t\t\t\t\"})]\";\n-\t\t/* @formatter:on */\n+\t\t\t\t\"})]\"; /* @formatter:on */\n \t\tassertCodeContains(MultiInit2.class, expected);\n \t}\n \n@@ -138,4 +130,4 @@ public class TypedArrayTest extends AbstractStjsTest {\n \t\tassertCodeContains(generated, \"isInstanceOf(o.constructor, Int8Array)\");\n \t\t// assertEquals(44., executeAndReturnNumber(ArrayInstanceOf.class), 0.01);\n \t}\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 16
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "96",
                    "severity": "error",
                    "message": "Line is longer than 145 characters (found 163).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/errored/1/8/TypedArrayTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/styler_random/8/TypedArrayTest.java\nindex e4c654ecb8b..46ff170e61e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/errored/1/8/TypedArrayTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/styler_random/8/TypedArrayTest.java\n@@ -94,7 +94,7 @@ public class TypedArrayTest extends AbstractStjsTest {\n \t\tassertCodeContains(\n \t\t\tgenerated,\n \t\t\t\"bool: \\\"Int8Array\\\", b: \\\"Int8Array\\\", s: \\\"Int16Array\\\", c: \\\"Uint16Array\\\", i: \\\"Int32Array\\\", f: \\\"Float32Array\\\", d: \\\"Float64Array\\\", bool2d: \\\"Array\\\"\");\n-\t}\n+\t\t}\n \n \t@Test\n \tpublic void testMultiInit() throws Exception {\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "96",
                    "severity": "error",
                    "message": "Line is longer than 145 characters (found 163).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/errored/1/8/TypedArrayTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/styler_three_grams/8/TypedArrayTest.java\nindex e4c654ecb8b..46ff170e61e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/errored/1/8/TypedArrayTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/styler_three_grams/8/TypedArrayTest.java\n@@ -94,7 +94,7 @@ public class TypedArrayTest extends AbstractStjsTest {\n \t\tassertCodeContains(\n \t\t\tgenerated,\n \t\t\t\"bool: \\\"Int8Array\\\", b: \\\"Int8Array\\\", s: \\\"Int16Array\\\", c: \\\"Uint16Array\\\", i: \\\"Int32Array\\\", f: \\\"Float32Array\\\", d: \\\"Float64Array\\\", bool2d: \\\"Array\\\"\");\n-\t}\n+\t\t}\n \n \t@Test\n \tpublic void testMultiInit() throws Exception {\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
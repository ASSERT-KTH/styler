{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1177",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "40",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "11",
                    "severity": "error",
                    "message": "'}' at column 11 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "65",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "71",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1177/NativeAllEntriesReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1177/NativeAllEntriesReader.java\nindex 62039b1763a..2c404076a6e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1177/NativeAllEntriesReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1177/NativeAllEntriesReader.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.index.schema;\n \n import java.io.IOException;\n@@ -30,69 +31,67 @@ import org.neo4j.index.internal.gbptree.GBPTree;\n import org.neo4j.index.internal.gbptree.Hit;\n import org.neo4j.index.internal.gbptree.Layout;\n \n-public class NativeAllEntriesReader<KEY extends NativeSchemaKey<KEY>,VALUE extends NativeSchemaValue> implements BoundedIterable<Long>\n+public class NativeAllEntriesReader<KEY extends NativeSchemaKey<KEY>, VALUE extends NativeSchemaValue> implements BoundedIterable<Long>\n {\n-    private final GBPTree<KEY,VALUE> tree;\n-    private final Layout<KEY,VALUE> layout;\n-    private RawCursor<Hit<KEY,VALUE>,IOException> seeker;\n+  private final GBPTree<KEY, VALUE> tree;\n+  private final Layout<KEY, VALUE> layout;\n+  private RawCursor<Hit<KEY, VALUE>, IOException> seeker;\n \n-    NativeAllEntriesReader( GBPTree<KEY,VALUE> tree, Layout<KEY,VALUE> layout )\n-    {\n-        this.tree = tree;\n-        this.layout = layout;\n-    }\n+  NativeAllEntriesReader(GBPTree<KEY, VALUE> tree, Layout<KEY, VALUE> layout)\n+  {\n+    this.tree = tree;\n+    this.layout = layout;\n+  }\n \n-    @Override\n-    public Iterator<Long> iterator()\n+  @Override\n+  public Iterator<Long> iterator()\n+  {\n+    KEY from = layout.newKey();\n+    from.initAsLowest();\n+    KEY to = layout.newKey();\n+    to.initAsHighest();\n+    try\n     {\n-        KEY from = layout.newKey();\n-        from.initAsLowest();\n-        KEY to = layout.newKey();\n-        to.initAsHighest();\n-        try\n+      closeSeeker();\n+      seeker = tree.seek(from, to);\n+      return new PrefetchingIterator<Long>()\n+      {\n+        @Override\n+        protected Long fetchNextOrNull()\n         {\n-            closeSeeker();\n-            seeker = tree.seek( from, to );\n-            return new PrefetchingIterator<Long>()\n-            {\n-                @Override\n-                protected Long fetchNextOrNull()\n-                {\n-                    try\n-                    {\n-                        return seeker.next() ? seeker.get().key().getEntityId() : null;\n-                    }\n-                    catch ( IOException e )\n-                    {\n-                        throw new UncheckedIOException( e );\n-                    }\n-                }\n-            };\n+          try\n+          {\n+            return seeker.next() ? seeker.get().key().getEntityId() : null;\n+          } catch (IOException e)\n+          {\n+            throw new UncheckedIOException(e);\n+          }\n         }\n-        catch ( IOException e )\n-        {\n-            throw new UncheckedIOException( e );\n-        }\n-    }\n-\n-    private void closeSeeker() throws IOException\n+      };\n+    } catch (IOException e)\n     {\n-        if ( seeker != null )\n-        {\n-            seeker.close();\n-            seeker = null;\n-        }\n+      throw new UncheckedIOException(e);\n     }\n+  }\n \n-    @Override\n-    public void close() throws Exception\n+  private void closeSeeker() throws IOException\n+  {\n+    if (seeker != null)\n     {\n-        closeSeeker();\n+      seeker.close();\n+      seeker = null;\n     }\n+  }\n \n-    @Override\n-    public long maxCount()\n-    {\n-        return UNKNOWN_MAX_COUNT;\n-    }\n+  @Override\n+  public void close() throws Exception\n+  {\n+    closeSeeker();\n+  }\n+\n+  @Override\n+  public long maxCount()\n+  {\n+    return UNKNOWN_MAX_COUNT;\n+  }\n }\n",
            "diff_size": 71
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1177/NativeAllEntriesReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1177/NativeAllEntriesReader.java\nindex 62039b1763a..3d40d01b602 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1177/NativeAllEntriesReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1177/NativeAllEntriesReader.java\n@@ -30,7 +30,7 @@ import org.neo4j.index.internal.gbptree.GBPTree;\n import org.neo4j.index.internal.gbptree.Hit;\n import org.neo4j.index.internal.gbptree.Layout;\n \n-public class NativeAllEntriesReader<KEY extends NativeSchemaKey<KEY>,VALUE extends NativeSchemaValue> implements BoundedIterable<Long>\n+public class NativeAllEntriesReader<KEY extends NativeSchemaKey<KEY>, VALUE extends NativeSchemaValue> implements BoundedIterable<Long>\n {\n     private final GBPTree<KEY,VALUE> tree;\n     private final Layout<KEY,VALUE> layout;\n@@ -95,4 +95,4 @@ public class NativeAllEntriesReader<KEY extends NativeSchemaKey<KEY>,VALUE exten\n     {\n         return UNKNOWN_MAX_COUNT;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
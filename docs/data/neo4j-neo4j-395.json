{
    "project_name": "neo4j-neo4j",
    "error_id": "395",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "57",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/395/LatchMap.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/395/LatchMap.java\nindex 82e12a46fd2..269e92da800 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/395/LatchMap.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/395/LatchMap.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.io.pagecache.impl.muninn;\n \n import org.neo4j.internal.unsafe.UnsafeUtil;\n@@ -40,80 +41,80 @@ final class LatchMap\n         @Override\n         public void release()\n         {\n-            latchMap.setLatch( index, null );\n+            latchMap.setLatch(index, null);\n             super.release();\n         }\n     }\n \n     static final int DEFAULT_FAULT_LOCK_STRIPING = 128;\n-    static final int faultLockStriping = FeatureToggles.getInteger( LatchMap.class, \"faultLockStriping\", DEFAULT_FAULT_LOCK_STRIPING );\n-    private static final int latchesArrayBase = UnsafeUtil.arrayBaseOffset( Latch[].class );\n-    private static final int latchesArrayScale = UnsafeUtil.arrayIndexScale( Latch[].class );\n+    static final int faultLockStriping = FeatureToggles.getInteger(LatchMap.class, \"faultLockStriping\", DEFAULT_FAULT_LOCK_STRIPING);\n+    private static final int latchesArrayBase = UnsafeUtil.arrayBaseOffset(Latch[].class);\n+    private static final int latchesArrayScale = UnsafeUtil.arrayIndexScale(Latch[].class);\n \n     private final Latch[] latches;\n     private final long faultLockMask;\n \n-    LatchMap( int size )\n+    LatchMap(int size)\n     {\n-        Preconditions.checkArgument( Integer.bitCount( size ) == 1, \"Fault lock stripe count must be a power of 2, was %d\", size );\n+        Preconditions.checkArgument(Integer.bitCount(size) == 1, \"Fault lock stripe count must be a power of 2, was %d\", size);\n         latches = new Latch[size];\n         faultLockMask = size - 1;\n     }\n \n-    private long offset( int index )\n+    private long offset(int index)\n     {\n-        return UnsafeUtil.arrayOffset( index, latchesArrayBase, latchesArrayScale );\n+        return UnsafeUtil.arrayOffset(index, latchesArrayBase, latchesArrayScale);\n     }\n \n-    private void setLatch( int index, BinaryLatch newValue )\n+    private void setLatch(int index, BinaryLatch newValue)\n     {\n-        UnsafeUtil.putObjectVolatile( latches, offset( index ), newValue );\n+        UnsafeUtil.putObjectVolatile(latches, offset(index), newValue);\n     }\n \n-    private boolean compareAndSetLatch( int index, Latch expected, Latch update )\n+    private boolean compareAndSetLatch(int index, Latch expected, Latch update)\n     {\n-        return UnsafeUtil.compareAndSwapObject( latches, offset( index ), expected, update );\n+        return UnsafeUtil.compareAndSwapObject(latches, offset(index), expected, update);\n     }\n \n-    private Latch getLatch( int index )\n+    private Latch getLatch(int index)\n     {\n-        return (Latch) UnsafeUtil.getObjectVolatile( latches, offset( index ) );\n+        return (Latch) UnsafeUtil.getObjectVolatile(latches, offset(index));\n     }\n \n     /**\n      * If a latch is currently installed for the given (or any colliding) identifier, then it will be waited upon and\n      * {@code null} will be returned.\n-     *\n+     * <p>\n      * Otherwise, if there is currently no latch installed for the given identifier, then one will be created and\n      * installed, and that latch will be returned. Once the page fault has been completed, the returned latch must be\n      * released. Releasing the latch will unblock all threads that are waiting upon it, and the latch will be\n      * atomically uninstalled.\n      */\n-    Latch takeOrAwaitLatch( long identifier )\n+    Latch takeOrAwaitLatch(long identifier)\n     {\n-        int index = index( identifier );\n-        Latch latch = getLatch( index );\n-        while ( latch == null )\n+        int index = index(identifier);\n+        Latch latch = getLatch(index);\n+        while (latch == null)\n         {\n             latch = new Latch();\n-            if ( compareAndSetLatch( index, null, latch ) )\n+            if (compareAndSetLatch(index, null, latch))\n             {\n                 latch.latchMap = this;\n                 latch.index = index;\n                 return latch;\n             }\n-            latch = getLatch( index );\n+            latch = getLatch(index);\n         }\n         latch.await();\n         return null;\n     }\n \n-    private int index( long identifier )\n+    private int index(long identifier)\n     {\n-        return (int) (mix( identifier ) & faultLockMask);\n+        return (int) (mix(identifier) & faultLockMask);\n     }\n \n-    private long mix( long identifier )\n+    private long mix(long identifier)\n     {\n         identifier ^= identifier << 21;\n         identifier ^= identifier >>> 35;\n",
            "diff_size": 25
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
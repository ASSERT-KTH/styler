{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3655",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "38",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "145",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "65",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "104",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3655/DiffApplyingRelationshipIterator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3655/DiffApplyingRelationshipIterator.java\nindex da556e4b280..864ae4b75b8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3655/DiffApplyingRelationshipIterator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3655/DiffApplyingRelationshipIterator.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.util.diffsets;\n \n import java.util.Set;\n@@ -31,26 +32,29 @@ import org.neo4j.kernel.impl.api.store.RelationshipIterator;\n  */\n class DiffApplyingRelationshipIterator extends DiffApplyingLongIterator implements RelationshipIterator\n {\n-    private final RelationshipVisitor.Home sourceHome;\n-    private final RelationshipVisitor.Home addedHome;\n+  private final RelationshipVisitor.Home sourceHome;\n+  private final RelationshipVisitor.Home addedHome;\n \n-    DiffApplyingRelationshipIterator( RelationshipIterator source, Set<?> addedElements, Set<?> removedElements, RelationshipVisitor.Home addedHome )\n-    {\n-        super( source, addedElements, removedElements, null );\n-        this.sourceHome = source;\n-        this.addedHome = addedHome;\n-    }\n+  DiffApplyingRelationshipIterator(RelationshipIterator source, Set<?> addedElements, Set<?> removedElements, RelationshipVisitor.Home addedHome)\n+  {\n+    super(source, addedElements, removedElements, null);\n+    this.sourceHome = source;\n+    this.addedHome = addedHome;\n+  }\n \n-    @Override\n-    public <EXCEPTION extends Exception> boolean relationshipVisit( long relId,\n-            RelationshipVisitor<EXCEPTION> visitor ) throws EXCEPTION\n+  @Override\n+  public <EXCEPTION extends Exception> boolean relationshipVisit(long relId,\n+                                                                 RelationshipVisitor<EXCEPTION> visitor) throws EXCEPTION\n+  {\n+    assert relId == next;\n+    switch (phase)\n     {\n-        assert relId == next;\n-        switch ( phase )\n-        {\n-        case FILTERED_SOURCE: return sourceHome.relationshipVisit( next, visitor );\n-        case ADDED_ELEMENTS: return addedHome.relationshipVisit( next, visitor );\n-        default: throw new IllegalStateException( \"Shouldn't have come here in phase \" + phase );\n-        }\n+      case FILTERED_SOURCE:\n+        return sourceHome.relationshipVisit(next, visitor);\n+      case ADDED_ELEMENTS:\n+        return addedHome.relationshipVisit(next, visitor);\n+      default:\n+        throw new IllegalStateException(\"Shouldn't have come here in phase \" + phase);\n     }\n+  }\n }\n",
            "diff_size": 23
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3655/DiffApplyingRelationshipIterator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3655/DiffApplyingRelationshipIterator.java\nindex da556e4b280..628a7630ec4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3655/DiffApplyingRelationshipIterator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3655/DiffApplyingRelationshipIterator.java\n@@ -42,15 +42,17 @@ class DiffApplyingRelationshipIterator extends DiffApplyingLongIterator implemen\n     }\n \n     @Override\n-    public <EXCEPTION extends Exception> boolean relationshipVisit( long relId,\n-            RelationshipVisitor<EXCEPTION> visitor ) throws EXCEPTION\n-    {\n+    public <EXCEPTION extends Exception> boolean relationshipVisit( long relId, RelationshipVisitor<EXCEPTION> visitor ) throws EXCEPTION\n+{\n         assert relId == next;\n         switch ( phase )\n         {\n-        case FILTERED_SOURCE: return sourceHome.relationshipVisit( next, visitor );\n-        case ADDED_ELEMENTS: return addedHome.relationshipVisit( next, visitor );\n-        default: throw new IllegalStateException( \"Shouldn't have come here in phase \" + phase );\n-        }\n+        case FILTERED_SOURCE:\n+    return sourceHome.relationshipVisit( next, visitor );\n+    case ADDED_ELEMENTS:\n+    return addedHome.relationshipVisit( next, visitor );\n+    default:\n+    throw new IllegalStateException( \"Shouldn't have come here in phase \" + phase );\n+    }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 11
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
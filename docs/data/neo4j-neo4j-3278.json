{
    "project_name": "neo4j-neo4j",
    "error_id": "3278",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "48",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "120",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "117",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "135",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "153",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "125",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "193",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "193",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "214",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "214",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "219",
                    "column": "70",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "219",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "220",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "220",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "221",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "221",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/3278/DirectRecordAccess.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/3278/DirectRecordAccess.java\nindex 6b19ef5dd1a..fad2aa93e36 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/3278/DirectRecordAccess.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/3278/DirectRecordAccess.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.internal.recordstorage;\n \n import org.apache.commons.lang3.mutable.MutableInt;\n@@ -35,55 +36,55 @@ import org.neo4j.kernel.impl.store.record.AbstractBaseRecord;\n /**\n  * Provides direct access to records in a store. Changes are batched up and written whenever transaction is committed.\n  */\n-public class DirectRecordAccess<RECORD extends AbstractBaseRecord,ADDITIONAL>\n-        implements RecordAccess<RECORD,ADDITIONAL>\n+public class DirectRecordAccess<RECORD extends AbstractBaseRecord, ADDITIONAL>\n+  implements RecordAccess<RECORD, ADDITIONAL>\n {\n     private final RecordStore<RECORD> store;\n     private final Loader<RECORD, ADDITIONAL> loader;\n-    private final Map<Long,DirectRecordProxy> batch = new HashMap<>();\n+    private final Map<Long, DirectRecordProxy> batch = new HashMap<>();\n \n     private final MutableInt changeCounter = new MutableInt();\n \n-    public DirectRecordAccess( RecordStore<RECORD> store, Loader<RECORD, ADDITIONAL> loader )\n+    public DirectRecordAccess(RecordStore<RECORD> store, Loader<RECORD, ADDITIONAL> loader)\n     {\n         this.store = store;\n         this.loader = loader;\n     }\n \n     @Override\n-    public RecordProxy<RECORD, ADDITIONAL> getOrLoad( long key, ADDITIONAL additionalData, PageCursorTracer cursorTracer )\n+    public RecordProxy<RECORD, ADDITIONAL> getOrLoad(long key, ADDITIONAL additionalData, PageCursorTracer cursorTracer)\n     {\n-        DirectRecordProxy loaded = batch.get( key );\n-        if ( loaded != null )\n+        DirectRecordProxy loaded = batch.get(key);\n+        if (loaded != null)\n         {\n             return loaded;\n         }\n-        return proxy( key, loader.load( key, additionalData, cursorTracer ), additionalData, false, cursorTracer );\n+        return proxy(key, loader.load(key, additionalData, cursorTracer), additionalData, false, cursorTracer);\n     }\n \n-    private RecordProxy<RECORD, ADDITIONAL> putInBatch( long key, DirectRecordProxy proxy )\n+    private RecordProxy<RECORD, ADDITIONAL> putInBatch(long key, DirectRecordProxy proxy)\n     {\n-        DirectRecordProxy previous = batch.put( key, proxy );\n+        DirectRecordProxy previous = batch.put(key, proxy);\n         assert previous == null;\n         return proxy;\n     }\n \n     @Override\n-    public RecordProxy<RECORD, ADDITIONAL> create( long key, ADDITIONAL additionalData, PageCursorTracer cursorTracer )\n+    public RecordProxy<RECORD, ADDITIONAL> create(long key, ADDITIONAL additionalData, PageCursorTracer cursorTracer)\n     {\n-        return proxy( key, loader.newUnused( key, additionalData ), additionalData, true, cursorTracer );\n+        return proxy(key, loader.newUnused(key, additionalData), additionalData, true, cursorTracer);\n     }\n \n     @Override\n-    public RecordProxy<RECORD,ADDITIONAL> getIfLoaded( long key )\n+    public RecordProxy<RECORD, ADDITIONAL> getIfLoaded(long key)\n     {\n-        return batch.get( key );\n+        return batch.get(key);\n     }\n \n     @Override\n-    public RecordProxy<RECORD,ADDITIONAL> setRecord( long key, RECORD record, ADDITIONAL additionalData, PageCursorTracer cursorTracer )\n+    public RecordProxy<RECORD, ADDITIONAL> setRecord(long key, RECORD record, ADDITIONAL additionalData, PageCursorTracer cursorTracer)\n     {\n-        throw new UnsupportedOperationException( \"Not supported\" );\n+        throw new UnsupportedOperationException(\"Not supported\");\n     }\n \n     @Override\n@@ -98,12 +99,12 @@ public class DirectRecordAccess<RECORD extends AbstractBaseRecord,ADDITIONAL>\n         return batch.values();\n     }\n \n-    private DirectRecordProxy proxy( final long key, final RECORD record, final ADDITIONAL additionalData, boolean created, PageCursorTracer cursorTracer )\n+    private DirectRecordProxy proxy(final long key, final RECORD record, final ADDITIONAL additionalData, boolean created, PageCursorTracer cursorTracer)\n     {\n-        return new DirectRecordProxy( key, record, additionalData, created, cursorTracer );\n+        return new DirectRecordProxy(key, record, additionalData, created, cursorTracer);\n     }\n \n-    private class DirectRecordProxy implements RecordProxy<RECORD,ADDITIONAL>\n+    private class DirectRecordProxy implements RecordProxy<RECORD, ADDITIONAL>\n     {\n         private final long key;\n         private final RECORD record;\n@@ -112,13 +113,13 @@ public class DirectRecordAccess<RECORD extends AbstractBaseRecord,ADDITIONAL>\n         private boolean changed;\n         private final boolean created;\n \n-        DirectRecordProxy( long key, RECORD record, ADDITIONAL additionalData, boolean created, PageCursorTracer cursorTracer )\n+        DirectRecordProxy(long key, RECORD record, ADDITIONAL additionalData, boolean created, PageCursorTracer cursorTracer)\n         {\n             this.key = key;\n             this.record = record;\n             this.additionalData = additionalData;\n             this.cursorTracer = cursorTracer;\n-            if ( created )\n+            if (created)\n             {\n                 prepareChange();\n             }\n@@ -140,10 +141,10 @@ public class DirectRecordAccess<RECORD extends AbstractBaseRecord,ADDITIONAL>\n \n         private void prepareChange()\n         {\n-            if ( !changed )\n+            if (!changed)\n             {\n                 changed = true;\n-                putInBatch( key, this );\n+                putInBatch(key, this);\n                 changeCounter.increment();\n             }\n         }\n@@ -151,7 +152,7 @@ public class DirectRecordAccess<RECORD extends AbstractBaseRecord,ADDITIONAL>\n         @Override\n         public RECORD forChangingData()\n         {\n-            loader.ensureHeavy( record, cursorTracer );\n+            loader.ensureHeavy(record, cursorTracer);\n             prepareChange();\n             return record;\n         }\n@@ -165,7 +166,7 @@ public class DirectRecordAccess<RECORD extends AbstractBaseRecord,ADDITIONAL>\n         @Override\n         public RECORD forReadingData()\n         {\n-            loader.ensureHeavy( record, cursorTracer );\n+            loader.ensureHeavy(record, cursorTracer);\n             return record;\n         }\n \n@@ -178,7 +179,7 @@ public class DirectRecordAccess<RECORD extends AbstractBaseRecord,ADDITIONAL>\n         @Override\n         public RECORD getBefore()\n         {\n-            return loader.load( key, additionalData, cursorTracer );\n+            return loader.load(key, additionalData, cursorTracer);\n         }\n \n         @Override\n@@ -189,9 +190,9 @@ public class DirectRecordAccess<RECORD extends AbstractBaseRecord,ADDITIONAL>\n \n         public void store()\n         {\n-            if ( changed )\n+            if (changed)\n             {\n-                store.updateRecord( record, IdUpdateListener.IGNORE, cursorTracer );\n+                store.updateRecord(record, IdUpdateListener.IGNORE, cursorTracer);\n             }\n         }\n \n@@ -210,18 +211,18 @@ public class DirectRecordAccess<RECORD extends AbstractBaseRecord,ADDITIONAL>\n \n     public void commit()\n     {\n-        if ( changeCounter.intValue() == 0 )\n+        if (changeCounter.intValue() == 0)\n         {\n             return;\n         }\n \n-        List<DirectRecordProxy> directRecordProxies = new ArrayList<>( batch.values() );\n-        directRecordProxies.sort( ( o1, o2 ) -> Long.compare( -o1.getKey(), o2.getKey() ) );\n-        for ( DirectRecordProxy proxy : directRecordProxies )\n+        List<DirectRecordProxy> directRecordProxies = new ArrayList<>(batch.values());\n+        directRecordProxies.sort((o1, o2) -> Long.compare(-o1.getKey(), o2.getKey()));\n+        for (DirectRecordProxy proxy : directRecordProxies)\n         {\n             proxy.store();\n         }\n-        changeCounter.setValue( 0 );\n+        changeCounter.setValue(0);\n         batch.clear();\n     }\n }\n",
            "diff_size": 34
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4467",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "66",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "108",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "172",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "172",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "180",
                    "column": "95",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "185",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "185",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "193",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "193",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "200",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "200",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "205",
                    "column": "8",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "209",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "209",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4467/StoreLogService.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4467/StoreLogService.java\nindex fe173664053..aa31d1b875a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4467/StoreLogService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4467/StoreLogService.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.logging;\n \n import java.io.Closeable;\n@@ -43,202 +44,201 @@ import static org.neo4j.io.file.Files.createOrOpenAsOutputStream;\n \n public class StoreLogService extends AbstractLogService implements Lifecycle\n {\n-    public static class Builder\n+  public static class Builder\n+  {\n+    private LogProvider userLogProvider = NullLogProvider.getInstance();\n+    private Executor rotationExecutor;\n+    private long internalLogRotationThreshold;\n+    private long internalLogRotationDelay;\n+    private int maxInternalLogArchives;\n+    private Consumer<LogProvider> rotationListener = logProvider ->\n     {\n-        private LogProvider userLogProvider = NullLogProvider.getInstance();\n-        private Executor rotationExecutor;\n-        private long internalLogRotationThreshold;\n-        private long internalLogRotationDelay;\n-        private int maxInternalLogArchives;\n-        private Consumer<LogProvider> rotationListener = logProvider ->\n-        {\n-        };\n-        private Map<String, Level> logLevels = new HashMap<>();\n-        private Level defaultLevel = Level.INFO;\n-        private ZoneId timeZoneId = ZoneOffset.UTC;\n-        private File debugLog;\n-\n-        private Builder()\n-        {\n-        }\n-\n-        public Builder withUserLogProvider( LogProvider userLogProvider )\n-        {\n-            this.userLogProvider = userLogProvider;\n-            return this;\n-        }\n-\n-        public Builder withRotation( long internalLogRotationThreshold, long internalLogRotationDelay,\n-                int maxInternalLogArchives, JobScheduler jobScheduler )\n-        {\n-            return withRotation( internalLogRotationThreshold, internalLogRotationDelay, maxInternalLogArchives,\n-                    jobScheduler.executor( JobScheduler.Groups.internalLogRotation ) );\n-        }\n-\n-        public Builder withRotation( long internalLogRotationThreshold, long internalLogRotationDelay,\n-                int maxInternalLogArchives, Executor rotationExecutor )\n-        {\n-            this.internalLogRotationThreshold = internalLogRotationThreshold;\n-            this.internalLogRotationDelay = internalLogRotationDelay;\n-            this.maxInternalLogArchives = maxInternalLogArchives;\n-            this.rotationExecutor = rotationExecutor;\n-            return this;\n-        }\n-\n-        public Builder withRotationListener( Consumer<LogProvider> rotationListener )\n-        {\n-            this.rotationListener = rotationListener;\n-            return this;\n-        }\n-\n-        public Builder withLevel( String context, Level level )\n-        {\n-            this.logLevels.put( context, level );\n-            return this;\n-        }\n-\n-        public Builder withTimeZone( ZoneId timeZoneId )\n-        {\n-            this.timeZoneId = timeZoneId;\n-            return this;\n-        }\n-\n-        public Builder withDefaultLevel( Level defaultLevel )\n-        {\n-            this.defaultLevel = defaultLevel;\n-            return this;\n-        }\n+    };\n+    private Map<String, Level> logLevels = new HashMap<>();\n+    private Level defaultLevel = Level.INFO;\n+    private ZoneId timeZoneId = ZoneOffset.UTC;\n+    private File debugLog;\n \n-        public Builder withInternalLog( File logFile )\n-        {\n-            this.debugLog = logFile;\n-            return this;\n-        }\n-\n-        public StoreLogService build( FileSystemAbstraction fileSystem ) throws IOException\n-        {\n-            if ( debugLog == null )\n-            {\n-                throw new IllegalArgumentException( \"Debug log can't be null; set its value using `withInternalLog`\" );\n-            }\n-            return new StoreLogService( userLogProvider, fileSystem, debugLog, logLevels, defaultLevel, timeZoneId,\n-                    internalLogRotationThreshold, internalLogRotationDelay, maxInternalLogArchives, rotationExecutor,\n-                    rotationListener );\n-        }\n+    private Builder()\n+    {\n     }\n \n-    public static Builder withUserLogProvider( LogProvider userLogProvider )\n+    public Builder withUserLogProvider(LogProvider userLogProvider)\n     {\n-        return new Builder().withUserLogProvider( userLogProvider );\n+      this.userLogProvider = userLogProvider;\n+      return this;\n     }\n \n-    public static Builder withRotation( long internalLogRotationThreshold, long internalLogRotationDelay,\n-            int maxInternalLogArchives, JobScheduler jobScheduler )\n+    public Builder withRotation(long internalLogRotationThreshold, long internalLogRotationDelay,\n+                                int maxInternalLogArchives, JobScheduler jobScheduler)\n     {\n-        return new Builder().withRotation( internalLogRotationThreshold, internalLogRotationDelay, maxInternalLogArchives,\n-                        jobScheduler );\n+      return withRotation(internalLogRotationThreshold, internalLogRotationDelay, maxInternalLogArchives,\n+          jobScheduler.executor(JobScheduler.Groups.internalLogRotation));\n     }\n \n-    public static Builder withInternalLog( File logFile )\n+    public Builder withRotation(long internalLogRotationThreshold, long internalLogRotationDelay,\n+                                int maxInternalLogArchives, Executor rotationExecutor)\n     {\n-        return new Builder().withInternalLog( logFile );\n+      this.internalLogRotationThreshold = internalLogRotationThreshold;\n+      this.internalLogRotationDelay = internalLogRotationDelay;\n+      this.maxInternalLogArchives = maxInternalLogArchives;\n+      this.rotationExecutor = rotationExecutor;\n+      return this;\n     }\n \n-    private final Closeable closeable;\n-    private final SimpleLogService logService;\n-\n-    private StoreLogService( LogProvider userLogProvider,\n-            FileSystemAbstraction fileSystem,\n-            File internalLog,\n-            Map<String, Level> logLevels,\n-            Level defaultLevel,\n-            ZoneId logTimeZone,\n-            long internalLogRotationThreshold,\n-            long internalLogRotationDelay,\n-            int maxInternalLogArchives,\n-            Executor rotationExecutor,\n-            final Consumer<LogProvider> rotationListener ) throws IOException\n+    public Builder withRotationListener(Consumer<LogProvider> rotationListener)\n     {\n-        if ( !internalLog.getParentFile().exists() )\n-        {\n-            fileSystem.mkdirs( internalLog.getParentFile() );\n-        }\n-\n-        final FormattedLogProvider.Builder internalLogBuilder = FormattedLogProvider.withZoneId( logTimeZone )\n-                .withDefaultLogLevel( defaultLevel ).withLogLevels( logLevels );\n-\n-        FormattedLogProvider internalLogProvider;\n-        if ( internalLogRotationThreshold == 0 )\n-        {\n-            OutputStream outputStream = createOrOpenAsOutputStream( fileSystem, internalLog, true );\n-            internalLogProvider = internalLogBuilder.toOutputStream( outputStream );\n-            rotationListener.accept( internalLogProvider );\n-            this.closeable = outputStream;\n-        }\n-        else\n-        {\n-            RotatingFileOutputStreamSupplier rotatingSupplier = new RotatingFileOutputStreamSupplier( fileSystem, internalLog,\n-                    internalLogRotationThreshold, internalLogRotationDelay, maxInternalLogArchives,\n-                    rotationExecutor, new RotatingFileOutputStreamSupplier.RotationListener()\n-            {\n-                @Override\n-                public void outputFileCreated( OutputStream newStream )\n-                {\n-                    FormattedLogProvider logProvider = internalLogBuilder.toOutputStream( newStream );\n-                    logProvider.getLog( StoreLogService.class ).info( \"Opened new internal log file\" );\n-                    rotationListener.accept( logProvider );\n-                }\n-\n-                @Override\n-                public void rotationCompleted( OutputStream newStream )\n-                {\n-                    FormattedLogProvider logProvider = internalLogBuilder.toOutputStream( newStream );\n-                    logProvider.getLog( StoreLogService.class ).info( \"Rotated internal log file\" );\n-                }\n-\n-                @Override\n-                public void rotationError( Exception e, OutputStream outStream )\n-                {\n-                    FormattedLogProvider logProvider = internalLogBuilder.toOutputStream( outStream );\n-                    logProvider.getLog( StoreLogService.class ).info( \"Rotation of internal log file failed:\", e );\n-                }\n-            } );\n-            internalLogProvider = internalLogBuilder.toOutputStream( rotatingSupplier );\n-            this.closeable = rotatingSupplier;\n-        }\n-        this.logService = new SimpleLogService( userLogProvider, internalLogProvider );\n+      this.rotationListener = rotationListener;\n+      return this;\n     }\n \n-    @Override\n-    public void init()\n+    public Builder withLevel(String context, Level level)\n     {\n+      this.logLevels.put(context, level);\n+      return this;\n     }\n \n-    @Override\n-    public void start()\n+    public Builder withTimeZone(ZoneId timeZoneId)\n     {\n+      this.timeZoneId = timeZoneId;\n+      return this;\n     }\n \n-    @Override\n-    public void stop()\n+    public Builder withDefaultLevel(Level defaultLevel)\n     {\n+      this.defaultLevel = defaultLevel;\n+      return this;\n     }\n \n-    @Override\n-    public void shutdown() throws Throwable\n+    public Builder withInternalLog(File logFile)\n     {\n-        closeable.close();\n+      this.debugLog = logFile;\n+      return this;\n     }\n \n-    @Override\n-    public LogProvider getUserLogProvider()\n+    public StoreLogService build(FileSystemAbstraction fileSystem) throws IOException\n+    {\n+      if (debugLog == null)\n+      {\n+        throw new IllegalArgumentException(\"Debug log can't be null; set its value using `withInternalLog`\");\n+      }\n+      return new StoreLogService(userLogProvider, fileSystem, debugLog, logLevels, defaultLevel, timeZoneId,\n+          internalLogRotationThreshold, internalLogRotationDelay, maxInternalLogArchives, rotationExecutor,\n+          rotationListener);\n+    }\n+  }\n+\n+  public static Builder withUserLogProvider(LogProvider userLogProvider)\n+  {\n+    return new Builder().withUserLogProvider(userLogProvider);\n+  }\n+\n+  public static Builder withRotation(long internalLogRotationThreshold, long internalLogRotationDelay,\n+                                     int maxInternalLogArchives, JobScheduler jobScheduler)\n+  {\n+    return new Builder().withRotation(internalLogRotationThreshold, internalLogRotationDelay, maxInternalLogArchives,\n+        jobScheduler);\n+  }\n+\n+  public static Builder withInternalLog(File logFile)\n+  {\n+    return new Builder().withInternalLog(logFile);\n+  }\n+\n+  private final Closeable closeable;\n+  private final SimpleLogService logService;\n+\n+  private StoreLogService(LogProvider userLogProvider,\n+                          FileSystemAbstraction fileSystem,\n+                          File internalLog,\n+                          Map<String, Level> logLevels,\n+                          Level defaultLevel,\n+                          ZoneId logTimeZone,\n+                          long internalLogRotationThreshold,\n+                          long internalLogRotationDelay,\n+                          int maxInternalLogArchives,\n+                          Executor rotationExecutor,\n+                          final Consumer<LogProvider> rotationListener) throws IOException\n+  {\n+    if (!internalLog.getParentFile().exists())\n     {\n-        return logService.getUserLogProvider();\n+      fileSystem.mkdirs(internalLog.getParentFile());\n     }\n \n-    @Override\n-    public LogProvider getInternalLogProvider()\n+    final FormattedLogProvider.Builder internalLogBuilder = FormattedLogProvider.withZoneId(logTimeZone)\n+        .withDefaultLogLevel(defaultLevel).withLogLevels(logLevels);\n+\n+    FormattedLogProvider internalLogProvider;\n+    if (internalLogRotationThreshold == 0)\n     {\n-        return logService.getInternalLogProvider();\n+      OutputStream outputStream = createOrOpenAsOutputStream(fileSystem, internalLog, true);\n+      internalLogProvider = internalLogBuilder.toOutputStream(outputStream);\n+      rotationListener.accept(internalLogProvider);\n+      this.closeable = outputStream;\n+    } else\n+    {\n+      RotatingFileOutputStreamSupplier rotatingSupplier = new RotatingFileOutputStreamSupplier(fileSystem, internalLog,\n+          internalLogRotationThreshold, internalLogRotationDelay, maxInternalLogArchives,\n+          rotationExecutor, new RotatingFileOutputStreamSupplier.RotationListener()\n+      {\n+        @Override\n+        public void outputFileCreated(OutputStream newStream)\n+        {\n+          FormattedLogProvider logProvider = internalLogBuilder.toOutputStream(newStream);\n+          logProvider.getLog(StoreLogService.class).info(\"Opened new internal log file\");\n+          rotationListener.accept(logProvider);\n+        }\n+\n+        @Override\n+        public void rotationCompleted(OutputStream newStream)\n+        {\n+          FormattedLogProvider logProvider = internalLogBuilder.toOutputStream(newStream);\n+          logProvider.getLog(StoreLogService.class).info(\"Rotated internal log file\");\n+        }\n+\n+        @Override\n+        public void rotationError(Exception e, OutputStream outStream)\n+        {\n+          FormattedLogProvider logProvider = internalLogBuilder.toOutputStream(outStream);\n+          logProvider.getLog(StoreLogService.class).info(\"Rotation of internal log file failed:\", e);\n+        }\n+      });\n+      internalLogProvider = internalLogBuilder.toOutputStream(rotatingSupplier);\n+      this.closeable = rotatingSupplier;\n     }\n+    this.logService = new SimpleLogService(userLogProvider, internalLogProvider);\n+  }\n+\n+  @Override\n+  public void init()\n+  {\n+  }\n+\n+  @Override\n+  public void start()\n+  {\n+  }\n+\n+  @Override\n+  public void stop()\n+  {\n+  }\n+\n+  @Override\n+  public void shutdown() throws Throwable\n+  {\n+    closeable.close();\n+  }\n+\n+  @Override\n+  public LogProvider getUserLogProvider()\n+  {\n+    return logService.getUserLogProvider();\n+  }\n+\n+  @Override\n+  public LogProvider getInternalLogProvider()\n+  {\n+    return logService.getInternalLogProvider();\n+  }\n }\n",
            "diff_size": 300
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "133",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 161).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "160",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 174).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "172",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 173).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4467/StoreLogService.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4467/StoreLogService.java\nindex fe173664053..9d419af01d5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4467/StoreLogService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4467/StoreLogService.java\n@@ -53,7 +53,8 @@ public class StoreLogService extends AbstractLogService implements Lifecycle\n         private Consumer<LogProvider> rotationListener = logProvider ->\n         {\n         };\n-        private Map<String, Level> logLevels = new HashMap<>();\n+\n+private Map<String,Level> logLevels = new HashMap<>();\n         private Level defaultLevel = Level.INFO;\n         private ZoneId timeZoneId = ZoneOffset.UTC;\n         private File debugLog;\n@@ -68,15 +69,13 @@ public class StoreLogService extends AbstractLogService implements Lifecycle\n             return this;\n         }\n \n-        public Builder withRotation( long internalLogRotationThreshold, long internalLogRotationDelay,\n-                int maxInternalLogArchives, JobScheduler jobScheduler )\n+        public Builder withRotation( long internalLogRotationThreshold, long internalLogRotationDelay, int maxInternalLogArchives, JobScheduler jobScheduler )\n         {\n             return withRotation( internalLogRotationThreshold, internalLogRotationDelay, maxInternalLogArchives,\n                     jobScheduler.executor( JobScheduler.Groups.internalLogRotation ) );\n         }\n \n-        public Builder withRotation( long internalLogRotationThreshold, long internalLogRotationDelay,\n-                int maxInternalLogArchives, Executor rotationExecutor )\n+        public Builder withRotation( long internalLogRotationThreshold, long internalLogRotationDelay, int maxInternalLogArchives, Executor rotationExecutor )\n         {\n             this.internalLogRotationThreshold = internalLogRotationThreshold;\n             this.internalLogRotationDelay = internalLogRotationDelay;\n@@ -122,9 +121,8 @@ public class StoreLogService extends AbstractLogService implements Lifecycle\n                 throw new IllegalArgumentException( \"Debug log can't be null; set its value using `withInternalLog`\" );\n             }\n             return new StoreLogService( userLogProvider, fileSystem, debugLog, logLevels, defaultLevel, timeZoneId,\n-                    internalLogRotationThreshold, internalLogRotationDelay, maxInternalLogArchives, rotationExecutor,\n-                    rotationListener );\n-        }\n+                    internalLogRotationThreshold, internalLogRotationDelay, maxInternalLogArchives, rotationExecutor, rotationListener );\n+    }\n     }\n \n     public static Builder withUserLogProvider( LogProvider userLogProvider )\n@@ -132,11 +130,9 @@ public class StoreLogService extends AbstractLogService implements Lifecycle\n         return new Builder().withUserLogProvider( userLogProvider );\n     }\n \n-    public static Builder withRotation( long internalLogRotationThreshold, long internalLogRotationDelay,\n-            int maxInternalLogArchives, JobScheduler jobScheduler )\n+    public static Builder withRotation( long internalLogRotationThreshold, long internalLogRotationDelay, int maxInternalLogArchives, JobScheduler jobScheduler )\n     {\n-        return new Builder().withRotation( internalLogRotationThreshold, internalLogRotationDelay, maxInternalLogArchives,\n-                        jobScheduler );\n+        return new Builder().withRotation( internalLogRotationThreshold, internalLogRotationDelay, maxInternalLogArchives, jobScheduler );\n     }\n \n     public static Builder withInternalLog( File logFile )\n@@ -149,25 +145,20 @@ public class StoreLogService extends AbstractLogService implements Lifecycle\n \n     private StoreLogService( LogProvider userLogProvider,\n             FileSystemAbstraction fileSystem,\n-            File internalLog,\n-            Map<String, Level> logLevels,\n+            File internalLog, Map<String,Level> logLevels,\n             Level defaultLevel,\n             ZoneId logTimeZone,\n             long internalLogRotationThreshold,\n-            long internalLogRotationDelay,\n-            int maxInternalLogArchives,\n-            Executor rotationExecutor,\n-            final Consumer<LogProvider> rotationListener ) throws IOException\n-    {\n+            long internalLogRotationDelay, int maxInternalLogArchives,\n+            Executor rotationExecutor, final Consumer<LogProvider> rotationListener ) throws IOException\n+{\n         if ( !internalLog.getParentFile().exists() )\n         {\n             fileSystem.mkdirs( internalLog.getParentFile() );\n         }\n \n-        final FormattedLogProvider.Builder internalLogBuilder = FormattedLogProvider.withZoneId( logTimeZone )\n-                .withDefaultLogLevel( defaultLevel ).withLogLevels( logLevels );\n-\n-        FormattedLogProvider internalLogProvider;\n+        final FormattedLogProvider.Builder internalLogBuilder = FormattedLogProvider.withZoneId( logTimeZone ).withDefaultLogLevel( defaultLevel ).withLogLevels( logLevels );\n+FormattedLogProvider internalLogProvider;\n         if ( internalLogRotationThreshold == 0 )\n         {\n             OutputStream outputStream = createOrOpenAsOutputStream( fileSystem, internalLog, true );\n@@ -178,9 +169,8 @@ public class StoreLogService extends AbstractLogService implements Lifecycle\n         else\n         {\n             RotatingFileOutputStreamSupplier rotatingSupplier = new RotatingFileOutputStreamSupplier( fileSystem, internalLog,\n-                    internalLogRotationThreshold, internalLogRotationDelay, maxInternalLogArchives,\n-                    rotationExecutor, new RotatingFileOutputStreamSupplier.RotationListener()\n-            {\n+                    internalLogRotationThreshold, internalLogRotationDelay, maxInternalLogArchives, rotationExecutor, new RotatingFileOutputStreamSupplier.RotationListener()\n+{\n                 @Override\n                 public void outputFileCreated( OutputStream newStream )\n                 {\n@@ -241,4 +231,4 @@ public class StoreLogService extends AbstractLogService implements Lifecycle\n     {\n         return logService.getInternalLogProvider();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 28
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
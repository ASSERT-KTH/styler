{
    "project_name": "neo4j-neo4j",
    "error_id": "3073",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": null,
            "diff": null
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "82",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "139",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "150",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "121",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "174",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "174",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "179",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "179",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "185",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "185",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "196",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "196",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "197",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "197",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "198",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "198",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "198",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "198",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "201",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "201",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "203",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "203",
                    "column": "107",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "209",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "210",
                    "column": "127",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "211",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "211",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "214",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "214",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "215",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "215",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "215",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "217",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "217",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "225",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "225",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "227",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "228",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "238",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "238",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "240",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "240",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "245",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "245",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "259",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "259",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "263",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "263",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "268",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "268",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "276",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "277",
                    "column": "127",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "278",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "278",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "280",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "280",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "281",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "281",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "282",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "282",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "282",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "284",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "284",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "292",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "292",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "294",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "295",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "305",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "305",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "307",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "307",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "313",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "313",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "326",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "326",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "326",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "326",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "329",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "329",
                    "column": "110",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "331",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "331",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "336",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "336",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "342",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "342",
                    "column": "118",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "352",
                    "column": "62",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "352",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "355",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "355",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "358",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "358",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "364",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "364",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "366",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "366",
                    "column": "117",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "405",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "405",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "411",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "411",
                    "column": "107",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "415",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "415",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "416",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "416",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "416",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "424",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "424",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "441",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "441",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "447",
                    "column": "65",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "447",
                    "column": "123",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "451",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "451",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "452",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "452",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "452",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "460",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "460",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "478",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "478",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/3073/FulltextProcedures.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/3073/FulltextProcedures.java\nindex ee3d536dc17..20a567bbddf 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/3073/FulltextProcedures.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/3073/FulltextProcedures.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.procedure.builtin;\n \n import org.eclipse.collections.impl.factory.Maps;\n@@ -78,11 +79,11 @@ import static org.neo4j.procedure.Mode.SCHEMA;\n /**\n  * Procedures for querying the Fulltext indexes.\n  */\n-@SuppressWarnings( \"WeakerAccess\" )\n+@SuppressWarnings(\"WeakerAccess\")\n public class FulltextProcedures\n {\n     private static final long INDEX_ONLINE_QUERY_TIMEOUT_SECONDS = FeatureToggles.getInteger(\n-            FulltextProcedures.class, \"INDEX_ONLINE_QUERY_TIMEOUT_SECONDS\", 30 );\n+      FulltextProcedures.class, \"INDEX_ONLINE_QUERY_TIMEOUT_SECONDS\", 30);\n \n     @Context\n     public KernelTransaction tx;\n@@ -103,19 +104,19 @@ public class FulltextProcedures\n     public ProcedureCallContext callContext;\n \n     @SystemProcedure\n-    @Description( \"List the available analyzers that the full-text indexes can be configured with.\" )\n-    @Procedure( name = \"db.index.fulltext.listAvailableAnalyzers\", mode = READ )\n+    @Description(\"List the available analyzers that the full-text indexes can be configured with.\")\n+    @Procedure(name = \"db.index.fulltext.listAvailableAnalyzers\", mode = READ)\n     public Stream<AvailableAnalyzer> listAvailableAnalyzers()\n     {\n-        return accessor.listAvailableAnalyzers().map( AvailableAnalyzer::new );\n+        return accessor.listAvailableAnalyzers().map(AvailableAnalyzer::new);\n     }\n \n     @SystemProcedure\n-    @Description( \"Wait for the updates from recently committed transactions to be applied to any eventually-consistent full-text indexes.\" )\n-    @Procedure( name = \"db.index.fulltext.awaitEventuallyConsistentIndexRefresh\", mode = READ )\n+    @Description(\"Wait for the updates from recently committed transactions to be applied to any eventually-consistent full-text indexes.\")\n+    @Procedure(name = \"db.index.fulltext.awaitEventuallyConsistentIndexRefresh\", mode = READ)\n     public void awaitRefresh()\n     {\n-        if ( callContext.isSystemDatabase() )\n+        if (callContext.isSystemDatabase())\n         {\n             return;\n         }\n@@ -123,127 +124,127 @@ public class FulltextProcedures\n         accessor.awaitRefresh();\n     }\n \n-    @Description( \"Create a node full-text index for the given labels and properties. \" +\n-                  \"The optional 'config' map parameter can be used to supply settings to the index. \" +\n-                  \"Supported settings are '\" + PROCEDURE_ANALYZER + \"', for specifying what analyzer to use \" +\n-                  \"when indexing and querying. Use the `db.index.fulltext.listAvailableAnalyzers` procedure to see what options are available. \" +\n-                  \"And '\" + PROCEDURE_EVENTUALLY_CONSISTENT + \"' which can be set to 'true' to make this index eventually consistent, \" +\n-                  \"such that updates from committing transactions are applied in a background thread.\" )\n-    @Procedure( name = \"db.index.fulltext.createNodeIndex\", mode = SCHEMA )\n+    @Description(\"Create a node full-text index for the given labels and properties. \" +\n+      \"The optional 'config' map parameter can be used to supply settings to the index. \" +\n+      \"Supported settings are '\" + PROCEDURE_ANALYZER + \"', for specifying what analyzer to use \" +\n+      \"when indexing and querying. Use the `db.index.fulltext.listAvailableAnalyzers` procedure to see what options are available. \" +\n+      \"And '\" + PROCEDURE_EVENTUALLY_CONSISTENT + \"' which can be set to 'true' to make this index eventually consistent, \" +\n+      \"such that updates from committing transactions are applied in a background thread.\")\n+    @Procedure(name = \"db.index.fulltext.createNodeIndex\", mode = SCHEMA)\n     public void createNodeFulltextIndex(\n-            @Name( \"indexName\" ) String name,\n-            @Name( \"labels\" ) List<String> labelNames,\n-            @Name( \"properties\" ) List<String> properties,\n-            @Name( value = \"config\", defaultValue = \"{}\" ) Map<String,String> config )\n+      @Name(\"indexName\") String name,\n+      @Name(\"labels\") List<String> labelNames,\n+      @Name(\"properties\") List<String> properties,\n+      @Name(value = \"config\", defaultValue = \"{}\") Map<String, String> config)\n     {\n-        Label[] labels = labelNames.stream().map( Label::label ).toArray( Label[]::new );\n-        IndexCreator indexCreator = transaction.schema().indexFor( labels );\n-        createIndex( indexCreator, name, properties, config );\n+        Label[] labels = labelNames.stream().map(Label::label).toArray(Label[]::new);\n+        IndexCreator indexCreator = transaction.schema().indexFor(labels);\n+        createIndex(indexCreator, name, properties, config);\n     }\n \n-    @Description( \"Create a relationship full-text index for the given relationship types and properties. \" +\n-                  \"The optional 'config' map parameter can be used to supply settings to the index. \" +\n-                  \"Supported settings are '\" + PROCEDURE_ANALYZER + \"', for specifying what analyzer to use \" +\n-                  \"when indexing and querying. Use the `db.index.fulltext.listAvailableAnalyzers` procedure to see what options are available. \" +\n-                  \"And '\" + PROCEDURE_EVENTUALLY_CONSISTENT + \"' which can be set to 'true' to make this index eventually consistent, \" +\n-                  \"such that updates from committing transactions are applied in a background thread.\" )\n-    @Procedure( name = \"db.index.fulltext.createRelationshipIndex\", mode = SCHEMA )\n+    @Description(\"Create a relationship full-text index for the given relationship types and properties. \" +\n+      \"The optional 'config' map parameter can be used to supply settings to the index. \" +\n+      \"Supported settings are '\" + PROCEDURE_ANALYZER + \"', for specifying what analyzer to use \" +\n+      \"when indexing and querying. Use the `db.index.fulltext.listAvailableAnalyzers` procedure to see what options are available. \" +\n+      \"And '\" + PROCEDURE_EVENTUALLY_CONSISTENT + \"' which can be set to 'true' to make this index eventually consistent, \" +\n+      \"such that updates from committing transactions are applied in a background thread.\")\n+    @Procedure(name = \"db.index.fulltext.createRelationshipIndex\", mode = SCHEMA)\n     public void createRelationshipFulltextIndex(\n-            @Name( \"indexName\" ) String name,\n-            @Name( \"relationshipTypes\" ) List<String> relTypes,\n-            @Name( \"properties\" ) List<String> properties,\n-            @Name( value = \"config\", defaultValue = \"{}\" ) Map<String,String> config )\n+      @Name(\"indexName\") String name,\n+      @Name(\"relationshipTypes\") List<String> relTypes,\n+      @Name(\"properties\") List<String> properties,\n+      @Name(value = \"config\", defaultValue = \"{}\") Map<String, String> config)\n     {\n-        RelationshipType[] types = relTypes.stream().map( RelationshipType::withName ).toArray( RelationshipType[]::new );\n-        IndexCreator indexCreator = transaction.schema().indexFor( types );\n-        createIndex( indexCreator, name, properties, config );\n+        RelationshipType[] types = relTypes.stream().map(RelationshipType::withName).toArray(RelationshipType[]::new);\n+        IndexCreator indexCreator = transaction.schema().indexFor(types);\n+        createIndex(indexCreator, name, properties, config);\n     }\n \n-    private void createIndex( IndexCreator indexCreator, String name, List<String> properties, Map<String,String> config )\n+    private void createIndex(IndexCreator indexCreator, String name, List<String> properties, Map<String, String> config)\n     {\n-        indexCreator = indexCreator.withName( name );\n-        indexCreator = indexCreator.withIndexType( FULLTEXT );\n+        indexCreator = indexCreator.withName(name);\n+        indexCreator = indexCreator.withIndexType(FULLTEXT);\n \n-        for ( String property : properties )\n+        for (String property : properties)\n         {\n-            indexCreator = indexCreator.on( property );\n+            indexCreator = indexCreator.on(property);\n         }\n \n-        config = sanitizeFulltextConfig( config );\n-        if ( !config.isEmpty() )\n+        config = sanitizeFulltextConfig(config);\n+        if (!config.isEmpty())\n         {\n-            Map<IndexSetting,Object> parsedConfig = Maps.mutable.of();\n+            Map<IndexSetting, Object> parsedConfig = Maps.mutable.of();\n \n-            String analyzer = config.remove( PROCEDURE_ANALYZER );\n-            if ( analyzer != null )\n+            String analyzer = config.remove(PROCEDURE_ANALYZER);\n+            if (analyzer != null)\n             {\n-                parsedConfig.put( IndexSettingImpl.FULLTEXT_ANALYZER, analyzer );\n+                parsedConfig.put(IndexSettingImpl.FULLTEXT_ANALYZER, analyzer);\n             }\n \n-            String eventuallyConsistent = config.remove( PROCEDURE_EVENTUALLY_CONSISTENT );\n-            if ( eventuallyConsistent != null )\n+            String eventuallyConsistent = config.remove(PROCEDURE_EVENTUALLY_CONSISTENT);\n+            if (eventuallyConsistent != null)\n             {\n-                parsedConfig.put( IndexSettingImpl.FULLTEXT_EVENTUALLY_CONSISTENT, Boolean.parseBoolean( eventuallyConsistent ) );\n+                parsedConfig.put(IndexSettingImpl.FULLTEXT_EVENTUALLY_CONSISTENT, Boolean.parseBoolean(eventuallyConsistent));\n             }\n \n-            indexCreator = indexCreator.withIndexConfiguration( parsedConfig );\n+            indexCreator = indexCreator.withIndexConfiguration(parsedConfig);\n         }\n \n         indexCreator.create();\n     }\n \n-    @Description( \"Drop the specified index.\" )\n-    @Procedure( name = \"db.index.fulltext.drop\", mode = SCHEMA )\n-    public void drop( @Name( \"indexName\" ) String name )\n+    @Description(\"Drop the specified index.\")\n+    @Procedure(name = \"db.index.fulltext.drop\", mode = SCHEMA)\n+    public void drop(@Name(\"indexName\") String name)\n     {\n-        IndexDefinition index = transaction.schema().getIndexByName( name );\n-        if ( index.getIndexType() != FULLTEXT )\n+        IndexDefinition index = transaction.schema().getIndexByName(name);\n+        if (index.getIndexType() != FULLTEXT)\n         {\n-            throw new IllegalArgumentException( \"The index called '\" + name + \"' is not a full-text index.\" );\n+            throw new IllegalArgumentException(\"The index called '\" + name + \"' is not a full-text index.\");\n         }\n         index.drop();\n     }\n \n     @SystemProcedure\n-    @Description( \"Query the given full-text index. Returns the matching nodes, and their Lucene query score, ordered by score. \" +\n-            \"Valid keys for the options map are: 'skip' to skip the top N results; 'limit' to limit the number of results returned.\" )\n-    @Procedure( name = \"db.index.fulltext.queryNodes\", mode = READ )\n+    @Description(\"Query the given full-text index. Returns the matching nodes, and their Lucene query score, ordered by score. \" +\n+      \"Valid keys for the options map are: 'skip' to skip the top N results; 'limit' to limit the number of results returned.\")\n+    @Procedure(name = \"db.index.fulltext.queryNodes\", mode = READ)\n     public Stream<NodeOutput> queryFulltextForNodes(\n-            @Name( \"indexName\" ) String name,\n-            @Name( \"queryString\" ) String query,\n-            @Name( value = \"options\", defaultValue = \"{}\" ) Map<String, Object> options ) throws Exception\n+      @Name(\"indexName\") String name,\n+      @Name(\"queryString\") String query,\n+      @Name(value = \"options\", defaultValue = \"{}\") Map<String, Object> options) throws Exception\n     {\n-        if ( callContext.isSystemDatabase() )\n+        if (callContext.isSystemDatabase())\n         {\n             return Stream.empty();\n         }\n \n-        IndexDescriptor indexReference = getValidIndex( name );\n-        awaitOnline( indexReference );\n+        IndexDescriptor indexReference = getValidIndex(name);\n+        awaitOnline(indexReference);\n         EntityType entityType = indexReference.schema().entityType();\n-        if ( entityType != NODE )\n+        if (entityType != NODE)\n         {\n-            throw new IllegalArgumentException( \"The '\" + name + \"' index (\" + indexReference + \") is an index on \" + entityType +\n-                    \", so it cannot be queried for nodes.\" );\n+            throw new IllegalArgumentException(\"The '\" + name + \"' index (\" + indexReference + \") is an index on \" + entityType +\n+              \", so it cannot be queried for nodes.\");\n         }\n-        NodeValueIndexCursor cursor = tx.cursors().allocateNodeValueIndexCursor( tx.pageCursorTracer(), tx.memoryTracker() );\n-        IndexReadSession indexSession = tx.dataRead().indexReadSession( indexReference );\n-        IndexQueryConstraints constraints = queryConstraints( options );\n-        tx.dataRead().nodeIndexSeek( indexSession, cursor, constraints, IndexQuery.fulltextSearch( query ) );\n+        NodeValueIndexCursor cursor = tx.cursors().allocateNodeValueIndexCursor(tx.pageCursorTracer(), tx.memoryTracker());\n+        IndexReadSession indexSession = tx.dataRead().indexReadSession(indexReference);\n+        IndexQueryConstraints constraints = queryConstraints(options);\n+        tx.dataRead().nodeIndexSeek(indexSession, cursor, constraints, IndexQuery.fulltextSearch(query));\n \n         Spliterator<NodeOutput> spliterator = new SpliteratorAdaptor<>()\n         {\n             @Override\n-            public boolean tryAdvance( Consumer<? super NodeOutput> action )\n+            public boolean tryAdvance(Consumer<? super NodeOutput> action)\n             {\n-                while ( cursor.next() )\n+                while (cursor.next())\n                 {\n                     long nodeReference = cursor.nodeReference();\n                     float score = cursor.score();\n-                    NodeOutput nodeOutput = NodeOutput.forExistingEntityOrNull( transaction, nodeReference, score );\n-                    if ( nodeOutput != null )\n+                    NodeOutput nodeOutput = NodeOutput.forExistingEntityOrNull(transaction, nodeReference, score);\n+                    if (nodeOutput != null)\n                     {\n-                        action.accept( nodeOutput );\n+                        action.accept(nodeOutput);\n                         return true;\n                     }\n                 }\n@@ -251,67 +252,67 @@ public class FulltextProcedures\n                 return false;\n             }\n         };\n-        Stream<NodeOutput> stream = StreamSupport.stream( spliterator, false );\n-        return stream.onClose( cursor::close );\n+        Stream<NodeOutput> stream = StreamSupport.stream(spliterator, false);\n+        return stream.onClose(cursor::close);\n     }\n \n-    protected IndexQueryConstraints queryConstraints( Map<String,Object> options )\n+    protected IndexQueryConstraints queryConstraints(Map<String, Object> options)\n     {\n         IndexQueryConstraints constraints = unconstrained();\n         Object skip;\n-        if ( ( skip = options.get( \"skip\" ) ) != null && skip instanceof Number )\n+        if ((skip = options.get(\"skip\")) != null && skip instanceof Number)\n         {\n-            constraints = constraints.skip( ((Number) skip).longValue() );\n+            constraints = constraints.skip(((Number) skip).longValue());\n         }\n         Object limit;\n-        if ( ( limit = options.get( \"limit\" ) ) != null && limit instanceof Number )\n+        if ((limit = options.get(\"limit\")) != null && limit instanceof Number)\n         {\n-            constraints = constraints.limit( ((Number) limit).longValue() );\n+            constraints = constraints.limit(((Number) limit).longValue());\n         }\n         return constraints;\n     }\n \n     @SystemProcedure\n-    @Description( \"Query the given full-text index. Returns the matching relationships, and their Lucene query score, ordered by score. \" +\n-            \"Valid keys for the options map are: 'skip' to skip the top N results; 'limit' to limit the number of results returned.\" )\n-    @Procedure( name = \"db.index.fulltext.queryRelationships\", mode = READ )\n+    @Description(\"Query the given full-text index. Returns the matching relationships, and their Lucene query score, ordered by score. \" +\n+      \"Valid keys for the options map are: 'skip' to skip the top N results; 'limit' to limit the number of results returned.\")\n+    @Procedure(name = \"db.index.fulltext.queryRelationships\", mode = READ)\n     public Stream<RelationshipOutput> queryFulltextForRelationships(\n-            @Name( \"indexName\" ) String name,\n-            @Name( \"queryString\" ) String query,\n-            @Name( value = \"options\", defaultValue = \"{}\" ) Map<String, Object> options ) throws Exception\n+      @Name(\"indexName\") String name,\n+      @Name(\"queryString\") String query,\n+      @Name(value = \"options\", defaultValue = \"{}\") Map<String, Object> options) throws Exception\n     {\n-        if ( callContext.isSystemDatabase() )\n+        if (callContext.isSystemDatabase())\n         {\n             return Stream.empty();\n         }\n \n-        IndexDescriptor indexReference = getValidIndex( name );\n-        awaitOnline( indexReference );\n+        IndexDescriptor indexReference = getValidIndex(name);\n+        awaitOnline(indexReference);\n         EntityType entityType = indexReference.schema().entityType();\n-        if ( entityType != RELATIONSHIP )\n+        if (entityType != RELATIONSHIP)\n         {\n-            throw new IllegalArgumentException( \"The '\" + name + \"' index (\" + indexReference + \") is an index on \" + entityType +\n-                    \", so it cannot be queried for relationships.\" );\n+            throw new IllegalArgumentException(\"The '\" + name + \"' index (\" + indexReference + \") is an index on \" + entityType +\n+              \", so it cannot be queried for relationships.\");\n         }\n-        RelationshipValueIndexCursor cursor = tx.cursors().allocateRelationshipValueIndexCursor( tx.pageCursorTracer(), tx.memoryTracker() );\n-        IndexReadSession indexReadSession = tx.dataRead().indexReadSession( indexReference );\n-        IndexQueryConstraints constraints = queryConstraints( options );\n-        tx.dataRead().relationshipIndexSeek( indexReadSession, cursor, constraints, IndexQuery.fulltextSearch( query ) );\n+        RelationshipValueIndexCursor cursor = tx.cursors().allocateRelationshipValueIndexCursor(tx.pageCursorTracer(), tx.memoryTracker());\n+        IndexReadSession indexReadSession = tx.dataRead().indexReadSession(indexReference);\n+        IndexQueryConstraints constraints = queryConstraints(options);\n+        tx.dataRead().relationshipIndexSeek(indexReadSession, cursor, constraints, IndexQuery.fulltextSearch(query));\n \n         Spliterator<RelationshipOutput> spliterator = new SpliteratorAdaptor<>()\n         {\n             @Override\n-            public boolean tryAdvance( Consumer<? super RelationshipOutput> action )\n+            public boolean tryAdvance(Consumer<? super RelationshipOutput> action)\n             {\n-                while ( cursor.next() )\n+                while (cursor.next())\n                 {\n                     long relationshipReference = cursor.relationshipReference();\n                     float score = cursor.score();\n                     RelationshipOutput relationshipOutput =\n-                            RelationshipOutput.forExistingEntityOrNull( transaction, relationshipReference, score );\n-                    if ( relationshipOutput != null )\n+                      RelationshipOutput.forExistingEntityOrNull(transaction, relationshipReference, score);\n+                    if (relationshipOutput != null)\n                     {\n-                        action.accept( relationshipOutput );\n+                        action.accept(relationshipOutput);\n                         return true;\n                     }\n                 }\n@@ -319,50 +320,50 @@ public class FulltextProcedures\n                 return false;\n             }\n         };\n-        return StreamSupport.stream( spliterator, false ).onClose( cursor::close );\n+        return StreamSupport.stream(spliterator, false).onClose(cursor::close);\n     }\n \n-    private IndexDescriptor getValidIndex( @Name( \"indexName\" ) String name )\n+    private IndexDescriptor getValidIndex(@Name(\"indexName\") String name)\n     {\n-        IndexDescriptor indexReference = tx.schemaRead().indexGetForName( name );\n-        if ( indexReference == IndexDescriptor.NO_INDEX || indexReference.getIndexType() != IndexType.FULLTEXT )\n+        IndexDescriptor indexReference = tx.schemaRead().indexGetForName(name);\n+        if (indexReference == IndexDescriptor.NO_INDEX || indexReference.getIndexType() != IndexType.FULLTEXT)\n         {\n-            throw new IllegalArgumentException( \"There is no such fulltext schema index: \" + name );\n+            throw new IllegalArgumentException(\"There is no such fulltext schema index: \" + name);\n         }\n         return indexReference;\n     }\n \n-    private void awaitOnline( IndexDescriptor index )\n+    private void awaitOnline(IndexDescriptor index)\n     {\n         // We do the isAdded check on the transaction state first, because indexGetState will grab a schema read-lock, which can deadlock on the write-lock\n         // held by the index populator. Also, if the index was created in this transaction, then we will never see it come online in this transaction anyway.\n         // Indexes don't come online until the transaction that creates them has committed.\n         KernelTransactionImplementation txImpl = (KernelTransactionImplementation) this.tx;\n-        if ( !txImpl.hasTxStateWithChanges() || !txImpl.txState().indexDiffSetsBySchema( index.schema() ).isAdded( index ) )\n+        if (!txImpl.hasTxStateWithChanges() || !txImpl.txState().indexDiffSetsBySchema(index.schema()).isAdded(index))\n         {\n             // If the index was not created in this transaction, then wait for it to come online before querying.\n             Schema schema = transaction.schema();\n-            schema.awaitIndexOnline( index.getName(), INDEX_ONLINE_QUERY_TIMEOUT_SECONDS, TimeUnit.SECONDS );\n+            schema.awaitIndexOnline(index.getName(), INDEX_ONLINE_QUERY_TIMEOUT_SECONDS, TimeUnit.SECONDS);\n         }\n         // If the index was created in this transaction, then we skip this check entirely.\n         // We will get an exception later, when we try to get an IndexReader, so this is fine.\n     }\n \n-    private static Map<String,String> sanitizeFulltextConfig( Map<String,String> config )\n+    private static Map<String, String> sanitizeFulltextConfig(Map<String, String> config)\n     {\n-        Map<String,String> cleanMap = new HashMap<>();\n-        for ( Map.Entry<String,String> entry : config.entrySet() )\n+        Map<String, String> cleanMap = new HashMap<>();\n+        for (Map.Entry<String, String> entry : config.entrySet())\n         {\n             String key = entry.getKey();\n-            if ( key.startsWith( FULLTEXT_PREFIX ) )\n+            if (key.startsWith(FULLTEXT_PREFIX))\n             {\n-                key = key.substring( FULLTEXT_PREFIX.length() );\n+                key = key.substring(FULLTEXT_PREFIX.length());\n             }\n             String value = entry.getValue();\n-            String duplicate = cleanMap.put( key, value );\n-            if ( duplicate != null )\n+            String duplicate = cleanMap.put(key, value);\n+            if (duplicate != null)\n             {\n-                throw new IllegalArgumentException( format( \"Config setting was specified more than once, '%s'.\", key ) );\n+                throw new IllegalArgumentException(format(\"Config setting was specified more than once, '%s'.\", key));\n             }\n         }\n         return cleanMap;\n@@ -401,19 +402,18 @@ public class FulltextProcedures\n         public final Node node;\n         public final double score;\n \n-        public NodeOutput( Node node, float score )\n+        public NodeOutput(Node node, float score)\n         {\n             this.node = node;\n             this.score = score;\n         }\n \n-        public static NodeOutput forExistingEntityOrNull( Transaction transaction, long nodeId, float score )\n+        public static NodeOutput forExistingEntityOrNull(Transaction transaction, long nodeId, float score)\n         {\n             try\n             {\n-                return new NodeOutput( transaction.getNodeById( nodeId ), score );\n-            }\n-            catch ( NotFoundException ignore )\n+                return new NodeOutput(transaction.getNodeById(nodeId), score);\n+            } catch (NotFoundException ignore)\n             {\n                 // This node was most likely deleted by a concurrent transaction, so we just ignore it.\n                 return null;\n@@ -421,9 +421,9 @@ public class FulltextProcedures\n         }\n \n         @Override\n-        public int compareTo( NodeOutput that )\n+        public int compareTo(NodeOutput that)\n         {\n-            return Double.compare( that.score, this.score );\n+            return Double.compare(that.score, this.score);\n         }\n \n         @Override\n@@ -438,19 +438,18 @@ public class FulltextProcedures\n         public final Relationship relationship;\n         public final double score;\n \n-        public RelationshipOutput( Relationship relationship, float score )\n+        public RelationshipOutput(Relationship relationship, float score)\n         {\n             this.relationship = relationship;\n             this.score = score;\n         }\n \n-        public static RelationshipOutput forExistingEntityOrNull( Transaction transaction, long relationshipId, float score )\n+        public static RelationshipOutput forExistingEntityOrNull(Transaction transaction, long relationshipId, float score)\n         {\n             try\n             {\n-                return new RelationshipOutput( transaction.getRelationshipById( relationshipId ), score );\n-            }\n-            catch ( NotFoundException ignore )\n+                return new RelationshipOutput(transaction.getRelationshipById(relationshipId), score);\n+            } catch (NotFoundException ignore)\n             {\n                 // This relationship was most likely deleted by a concurrent transaction, so we just ignore it.\n                 return null;\n@@ -458,9 +457,9 @@ public class FulltextProcedures\n         }\n \n         @Override\n-        public int compareTo( RelationshipOutput that )\n+        public int compareTo(RelationshipOutput that)\n         {\n-            return Double.compare( that.score, this.score );\n+            return Double.compare(that.score, this.score);\n         }\n \n         @Override\n@@ -476,7 +475,7 @@ public class FulltextProcedures\n         public final String description;\n         public final List<String> stopwords;\n \n-        AvailableAnalyzer( AnalyzerProvider provider )\n+        AvailableAnalyzer(AnalyzerProvider provider)\n         {\n             this.analyzer = provider.getName();\n             this.description = provider.description();\n",
            "diff_size": 138
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_three_grams",
            "errors": null,
            "diff": null
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
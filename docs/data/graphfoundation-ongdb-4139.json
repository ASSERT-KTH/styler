{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4139",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "34",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "34",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "36",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "36",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "59",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4139/RaftLogMetadataCache.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4139/RaftLogMetadataCache.java\nindex 66b3d7c7114..930417ed87f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4139/RaftLogMetadataCache.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4139/RaftLogMetadataCache.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering.core.consensus.log;\n \n \n@@ -28,107 +29,107 @@ import org.neo4j.kernel.impl.transaction.log.LogPosition;\n \n public class RaftLogMetadataCache\n {\n-    private final LruCache<Long /*tx id*/, RaftLogEntryMetadata> raftLogEntryCache;\n-\n-    public RaftLogMetadataCache( int logEntryCacheSize )\n+  private final LruCache<Long /*tx id*/, RaftLogEntryMetadata> raftLogEntryCache;\n+\n+  public RaftLogMetadataCache(int logEntryCacheSize)\n+  {\n+    this.raftLogEntryCache = new LruCache<>(\"Raft log entry cache\", logEntryCacheSize);\n+  }\n+\n+  public void clear()\n+  {\n+    raftLogEntryCache.clear();\n+  }\n+\n+  /**\n+   * Returns the metadata for the entry at position {@param logIndex}, null if the metadata is not present in the cache\n+   */\n+  public RaftLogEntryMetadata getMetadata(long logIndex)\n+  {\n+    return raftLogEntryCache.get(logIndex);\n+  }\n+\n+  public RaftLogEntryMetadata cacheMetadata(long logIndex, long entryTerm, LogPosition position)\n+  {\n+    RaftLogEntryMetadata result = new RaftLogEntryMetadata(entryTerm, position);\n+    raftLogEntryCache.put(logIndex, result);\n+    return result;\n+  }\n+\n+  public void removeUpTo(long upTo)\n+  {\n+    remove(key -> key <= upTo);\n+  }\n+\n+  public void removeUpwardsFrom(long startingFrom)\n+  {\n+    remove(key -> key >= startingFrom);\n+  }\n+\n+  private void remove(LongPredicate predicate)\n+  {\n+    raftLogEntryCache.keySet().removeIf(predicate::test);\n+  }\n+\n+  public static class RaftLogEntryMetadata\n+  {\n+    private final long entryTerm;\n+    private final LogPosition startPosition;\n+\n+    public RaftLogEntryMetadata(long entryTerm, LogPosition startPosition)\n     {\n-        this.raftLogEntryCache = new LruCache<>( \"Raft log entry cache\", logEntryCacheSize );\n+      Objects.requireNonNull(startPosition);\n+      this.entryTerm = entryTerm;\n+      this.startPosition = startPosition;\n     }\n \n-    public void clear()\n+    public long getEntryTerm()\n     {\n-        raftLogEntryCache.clear();\n+      return entryTerm;\n     }\n \n-    /**\n-     * Returns the metadata for the entry at position {@param logIndex}, null if the metadata is not present in the cache\n-     */\n-    public RaftLogEntryMetadata getMetadata( long logIndex )\n+    public LogPosition getStartPosition()\n     {\n-        return raftLogEntryCache.get( logIndex );\n+      return startPosition;\n     }\n \n-    public RaftLogEntryMetadata cacheMetadata( long logIndex, long entryTerm, LogPosition position )\n+    @Override\n+    public boolean equals(Object o)\n     {\n-        RaftLogEntryMetadata result = new RaftLogEntryMetadata( entryTerm, position );\n-        raftLogEntryCache.put( logIndex, result );\n-        return result;\n-    }\n+      if (this == o)\n+      {\n+        return true;\n+      }\n+      if (o == null || getClass() != o.getClass())\n+      {\n+        return false;\n+      }\n+\n+      RaftLogEntryMetadata that = (RaftLogEntryMetadata) o;\n+\n+      if (entryTerm != that.entryTerm)\n+      {\n+        return false;\n+      }\n+      return startPosition.equals(that.startPosition);\n \n-    public void removeUpTo( long upTo )\n-    {\n-        remove( key -> key <= upTo );\n-    }\n-\n-    public void removeUpwardsFrom( long startingFrom )\n-    {\n-        remove( key -> key >= startingFrom );\n     }\n \n-    private void remove( LongPredicate predicate )\n+    @Override\n+    public int hashCode()\n     {\n-        raftLogEntryCache.keySet().removeIf( predicate::test );\n+      int result = (int) (entryTerm ^ (entryTerm >>> 32));\n+      result = 31 * result + startPosition.hashCode();\n+      return result;\n     }\n \n-    public static class RaftLogEntryMetadata\n+    @Override\n+    public String toString()\n     {\n-        private final long entryTerm;\n-        private final LogPosition startPosition;\n-\n-        public RaftLogEntryMetadata( long entryTerm, LogPosition startPosition )\n-        {\n-            Objects.requireNonNull( startPosition );\n-            this.entryTerm = entryTerm;\n-            this.startPosition = startPosition;\n-        }\n-\n-        public long getEntryTerm()\n-        {\n-            return entryTerm;\n-        }\n-\n-        public LogPosition getStartPosition()\n-        {\n-            return startPosition;\n-        }\n-\n-        @Override\n-        public boolean equals( Object o )\n-        {\n-            if ( this == o )\n-            {\n-                return true;\n-            }\n-            if ( o == null || getClass() != o.getClass() )\n-            {\n-                return false;\n-            }\n-\n-            RaftLogEntryMetadata that = (RaftLogEntryMetadata) o;\n-\n-            if ( entryTerm != that.entryTerm )\n-            {\n-                return false;\n-            }\n-            return startPosition.equals( that.startPosition );\n-\n-        }\n-\n-        @Override\n-        public int hashCode()\n-        {\n-            int result = (int) (entryTerm ^ (entryTerm >>> 32));\n-            result = 31 * result + startPosition.hashCode();\n-            return result;\n-        }\n-\n-        @Override\n-        public String toString()\n-        {\n-            return \"RaftLogEntryMetadata{\" +\n-                    \"entryTerm=\" + entryTerm +\n-                    \", startPosition=\" + startPosition +\n-                    '}';\n-        }\n+      return \"RaftLogEntryMetadata{\" +\n+          \"entryTerm=\" + entryTerm +\n+          \", startPosition=\" + startPosition +\n+          '}';\n     }\n+  }\n }\n",
            "diff_size": 151
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "119",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4139/RaftLogMetadataCache.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4139/RaftLogMetadataCache.java\nindex 66b3d7c7114..0010fb678aa 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4139/RaftLogMetadataCache.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4139/RaftLogMetadataCache.java\n@@ -18,8 +18,6 @@\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n package org.neo4j.causalclustering.core.consensus.log;\n-\n-\n import java.util.Objects;\n import java.util.function.LongPredicate;\n \n@@ -28,7 +26,7 @@ import org.neo4j.kernel.impl.transaction.log.LogPosition;\n \n public class RaftLogMetadataCache\n {\n-    private final LruCache<Long /*tx id*/, RaftLogEntryMetadata> raftLogEntryCache;\n+    private final LruCache<Long/*tx id*/, RaftLogEntryMetadata> raftLogEntryCache;\n \n     public RaftLogMetadataCache( int logEntryCacheSize )\n     {\n@@ -99,7 +97,8 @@ public class RaftLogMetadataCache\n             {\n                 return true;\n             }\n-            if ( o == null || getClass() != o.getClass() )\n+\n+if ( o == null || getClass() != o.getClass() )\n             {\n                 return false;\n             }\n@@ -110,14 +109,14 @@ public class RaftLogMetadataCache\n             {\n                 return false;\n             }\n-            return startPosition.equals( that.startPosition );\n \n-        }\n+return startPosition.equals( that.startPosition );\n+    }\n \n         @Override\n         public int hashCode()\n         {\n-            int result = (int) (entryTerm ^ (entryTerm >>> 32));\n+            int result = ( int) ( entryTerm ^ ( entryTerm >>> 32 ));\n             result = 31 * result + startPosition.hashCode();\n             return result;\n         }\n@@ -125,10 +124,7 @@ public class RaftLogMetadataCache\n         @Override\n         public String toString()\n         {\n-            return \"RaftLogEntryMetadata{\" +\n-                    \"entryTerm=\" + entryTerm +\n-                    \", startPosition=\" + startPosition +\n-                    '}';\n-        }\n+            return \"RaftLogEntryMetadata{\" + \"entryTerm=\" + entryTerm + \", startPosition=\" + startPosition + '}';\n+    }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 15
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
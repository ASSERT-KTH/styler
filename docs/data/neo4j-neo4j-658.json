{
    "project_name": "neo4j-neo4j",
    "error_id": "658",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "46",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/658/TransactionReadyState.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/658/TransactionReadyState.java\nindex 8fa6a2a6bd4..206f49e3e4c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/658/TransactionReadyState.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/658/TransactionReadyState.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.bolt.v3.runtime;\n \n import org.neo4j.bolt.messaging.RequestMessage;\n@@ -42,19 +43,19 @@ public class TransactionReadyState extends FailSafeBoltStateMachineState\n     private BoltStateMachineState readyState;\n \n     @Override\n-    public BoltStateMachineState processUnsafe( RequestMessage message, StateMachineContext context ) throws Exception\n+    public BoltStateMachineState processUnsafe(RequestMessage message, StateMachineContext context) throws Exception\n     {\n-        if ( message instanceof RunMessage )\n+        if (message instanceof RunMessage)\n         {\n-            return processRunMessage( (RunMessage) message, context );\n+            return processRunMessage((RunMessage) message, context);\n         }\n-        if ( message instanceof CommitMessage )\n+        if (message instanceof CommitMessage)\n         {\n-            return processCommitMessage( context );\n+            return processCommitMessage(context);\n         }\n-        if ( message instanceof RollbackMessage )\n+        if (message instanceof RollbackMessage)\n         {\n-            return processRollbackMessage( context );\n+            return processRollbackMessage(context);\n         }\n         return null;\n     }\n@@ -65,37 +66,37 @@ public class TransactionReadyState extends FailSafeBoltStateMachineState\n         return \"TX_READY\";\n     }\n \n-    public void setTransactionStreamingState( BoltStateMachineState streamingState )\n+    public void setTransactionStreamingState(BoltStateMachineState streamingState)\n     {\n         this.streamingState = streamingState;\n     }\n \n-    public void setReadyState( BoltStateMachineState readyState )\n+    public void setReadyState(BoltStateMachineState readyState)\n     {\n         this.readyState = readyState;\n     }\n \n-    private BoltStateMachineState processRunMessage( RunMessage message, StateMachineContext context ) throws KernelException\n+    private BoltStateMachineState processRunMessage(RunMessage message, StateMachineContext context) throws KernelException\n     {\n         long start = context.clock().millis();\n         StatementProcessor statementProcessor = context.connectionState().getStatementProcessor();\n-        StatementMetadata statementMetadata = statementProcessor.run( message.statement(), message.params() );\n+        StatementMetadata statementMetadata = statementProcessor.run(message.statement(), message.params());\n         long end = context.clock().millis();\n \n-        context.connectionState().onMetadata( FIELDS_KEY, stringArray( statementMetadata.fieldNames() ) );\n-        context.connectionState().onMetadata( FIRST_RECORD_AVAILABLE_KEY, Values.longValue( end - start ) );\n+        context.connectionState().onMetadata(FIELDS_KEY, stringArray(statementMetadata.fieldNames()));\n+        context.connectionState().onMetadata(FIRST_RECORD_AVAILABLE_KEY, Values.longValue(end - start));\n         return streamingState;\n     }\n \n-    private BoltStateMachineState processCommitMessage( StateMachineContext context ) throws KernelException\n+    private BoltStateMachineState processCommitMessage(StateMachineContext context) throws KernelException\n     {\n         StatementProcessor statementProcessor = context.connectionState().getStatementProcessor();\n         Bookmark bookmark = statementProcessor.commitTransaction();\n-        bookmark.attachTo( context.connectionState() );\n+        bookmark.attachTo(context.connectionState());\n         return readyState;\n     }\n \n-    private BoltStateMachineState processRollbackMessage( StateMachineContext context ) throws KernelException\n+    private BoltStateMachineState processRollbackMessage(StateMachineContext context) throws KernelException\n     {\n         StatementProcessor statementProcessor = context.connectionState().getStatementProcessor();\n         statementProcessor.rollbackTransaction();\n@@ -105,8 +106,8 @@ public class TransactionReadyState extends FailSafeBoltStateMachineState\n     @Override\n     protected void assertInitialized()\n     {\n-        checkState( streamingState != null, \"Streaming state not set\" );\n-        checkState( readyState != null, \"Ready state not set\" );\n+        checkState(streamingState != null, \"Streaming state not set\");\n+        checkState(readyState != null, \"Ready state not set\");\n         super.assertInitialized();\n     }\n }\n",
            "diff_size": 19
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/658/TransactionReadyState.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/658/TransactionReadyState.java\nindex 8fa6a2a6bd4..c7a192536d6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/658/TransactionReadyState.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/658/TransactionReadyState.java\n@@ -109,4 +109,4 @@ public class TransactionReadyState extends FailSafeBoltStateMachineState\n         checkState( readyState != null, \"Ready state not set\" );\n         super.assertInitialized();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
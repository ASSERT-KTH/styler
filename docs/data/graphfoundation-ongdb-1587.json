{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1587",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "44",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1587/FullLabelStream.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1587/FullLabelStream.java\nindex 039bdaf97fb..4fb99685f0e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1587/FullLabelStream.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1587/FullLabelStream.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.api.scan;\n \n import org.apache.commons.lang3.ArrayUtils;\n@@ -34,32 +35,32 @@ import static org.neo4j.function.Predicates.ALWAYS_TRUE_INT;\n /**\n  * {@link FullStoreChangeStream} using a {@link IndexStoreView} to get its data.\n  */\n-public class FullLabelStream implements FullStoreChangeStream, Visitor<NodeLabelUpdate,IOException>\n+public class FullLabelStream implements FullStoreChangeStream, Visitor<NodeLabelUpdate, IOException>\n {\n-    private final IndexStoreView indexStoreView;\n-    private LabelScanWriter writer;\n-    private long count;\n+  private final IndexStoreView indexStoreView;\n+  private LabelScanWriter writer;\n+  private long count;\n \n-    public FullLabelStream( IndexStoreView indexStoreView )\n-    {\n-        this.indexStoreView = indexStoreView;\n-    }\n+  public FullLabelStream(IndexStoreView indexStoreView)\n+  {\n+    this.indexStoreView = indexStoreView;\n+  }\n \n-    @Override\n-    public long applyTo( LabelScanWriter writer ) throws IOException\n-    {\n-        // Keep the write for using it in visit\n-        this.writer = writer;\n-        StoreScan<IOException> scan = indexStoreView.visitNodes( ArrayUtils.EMPTY_INT_ARRAY, ALWAYS_TRUE_INT, null, this, true );\n-        scan.run();\n-        return count;\n-    }\n+  @Override\n+  public long applyTo(LabelScanWriter writer) throws IOException\n+  {\n+    // Keep the write for using it in visit\n+    this.writer = writer;\n+    StoreScan<IOException> scan = indexStoreView.visitNodes(ArrayUtils.EMPTY_INT_ARRAY, ALWAYS_TRUE_INT, null, this, true);\n+    scan.run();\n+    return count;\n+  }\n \n-    @Override\n-    public boolean visit( NodeLabelUpdate update ) throws IOException\n-    {\n-        writer.write( update );\n-        count++;\n-        return false;\n-    }\n+  @Override\n+  public boolean visit(NodeLabelUpdate update) throws IOException\n+  {\n+    writer.write(update);\n+    count++;\n+    return false;\n+  }\n }\n",
            "diff_size": 25
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1587/FullLabelStream.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1587/FullLabelStream.java\nindex 039bdaf97fb..5436f06f750 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1587/FullLabelStream.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1587/FullLabelStream.java\n@@ -62,4 +62,4 @@ public class FullLabelStream implements FullStoreChangeStream, Visitor<NodeLabel\n         count++;\n         return false;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3070",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "40",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "66",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3070/SrvHostnameResolver.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3070/SrvHostnameResolver.java\nindex 1723eea42dc..fe0cc8d1f91 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3070/SrvHostnameResolver.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3070/SrvHostnameResolver.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering.discovery;\n \n import java.util.Collection;\n@@ -32,41 +33,40 @@ import org.neo4j.logging.LogProvider;\n \n public class SrvHostnameResolver implements HostnameResolver\n {\n-    private final Log userLog;\n-    private final Log log;\n-    private final SrvRecordResolver srvRecordResolver;\n+  private final Log userLog;\n+  private final Log log;\n+  private final SrvRecordResolver srvRecordResolver;\n \n-    public SrvHostnameResolver( LogProvider logProvider, LogProvider userLogProvider,\n-            SrvRecordResolver srvRecordResolver )\n-    {\n-        log = logProvider.getLog( getClass() );\n-        userLog = userLogProvider.getLog( getClass() );\n-        this.srvRecordResolver = srvRecordResolver;\n-    }\n+  public SrvHostnameResolver(LogProvider logProvider, LogProvider userLogProvider,\n+                             SrvRecordResolver srvRecordResolver)\n+  {\n+    log = logProvider.getLog(getClass());\n+    userLog = userLogProvider.getLog(getClass());\n+    this.srvRecordResolver = srvRecordResolver;\n+  }\n \n-    @Override\n-    public Collection<AdvertisedSocketAddress> resolve( AdvertisedSocketAddress initialAddress )\n+  @Override\n+  public Collection<AdvertisedSocketAddress> resolve(AdvertisedSocketAddress initialAddress)\n+  {\n+    try\n     {\n-        try\n-        {\n-            Set<AdvertisedSocketAddress> addresses = srvRecordResolver\n-                    .resolveSrvRecord( initialAddress.getHostname() )\n-                    .map( srvRecord -> new AdvertisedSocketAddress( srvRecord.host, srvRecord.port ) )\n-                    .collect( Collectors.toSet() );\n+      Set<AdvertisedSocketAddress> addresses = srvRecordResolver\n+          .resolveSrvRecord(initialAddress.getHostname())\n+          .map(srvRecord -> new AdvertisedSocketAddress(srvRecord.host, srvRecord.port))\n+          .collect(Collectors.toSet());\n \n-            userLog.info( \"Resolved initial host '%s' to %s\", initialAddress, addresses );\n+      userLog.info(\"Resolved initial host '%s' to %s\", initialAddress, addresses);\n \n-            if ( addresses.isEmpty() )\n-            {\n-                log.error( \"Failed to resolve srv records for '%s'\", initialAddress.getHostname() );\n-            }\n+      if (addresses.isEmpty())\n+      {\n+        log.error(\"Failed to resolve srv records for '%s'\", initialAddress.getHostname());\n+      }\n \n-            return addresses;\n-        }\n-        catch ( NamingException e )\n-        {\n-            log.error( \"Failed to resolve srv records for '%s'\", initialAddress.getHostname(), e );\n-            return Collections.emptySet();\n-        }\n+      return addresses;\n+    } catch (NamingException e)\n+    {\n+      log.error(\"Failed to resolve srv records for '%s'\", initialAddress.getHostname(), e);\n+      return Collections.emptySet();\n     }\n+  }\n }\n",
            "diff_size": 34
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "52",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 232).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3070/SrvHostnameResolver.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3070/SrvHostnameResolver.java\nindex 1723eea42dc..05fcd144fab 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3070/SrvHostnameResolver.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3070/SrvHostnameResolver.java\n@@ -49,14 +49,9 @@ public class SrvHostnameResolver implements HostnameResolver\n     {\n         try\n         {\n-            Set<AdvertisedSocketAddress> addresses = srvRecordResolver\n-                    .resolveSrvRecord( initialAddress.getHostname() )\n-                    .map( srvRecord -> new AdvertisedSocketAddress( srvRecord.host, srvRecord.port ) )\n-                    .collect( Collectors.toSet() );\n-\n-            userLog.info( \"Resolved initial host '%s' to %s\", initialAddress, addresses );\n-\n-            if ( addresses.isEmpty() )\n+            Set<AdvertisedSocketAddress> addresses = srvRecordResolver.resolveSrvRecord( initialAddress.getHostname() ).map( srvRecord -> new AdvertisedSocketAddress( srvRecord.host, srvRecord.port ) ).collect( Collectors.toSet() );\n+userLog.info( \"Resolved initial host '%s' to %s\", initialAddress, addresses );\n+if ( addresses.isEmpty() )\n             {\n                 log.error( \"Failed to resolve srv records for '%s'\", initialAddress.getHostname() );\n             }\n@@ -69,4 +64,4 @@ public class SrvHostnameResolver implements HostnameResolver\n             return Collections.emptySet();\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
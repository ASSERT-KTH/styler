{
    "project_name": "graphfoundation-ongdb",
    "error_id": "442",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "31",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "31",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "33",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "33",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "77",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "80",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/442/FusionIndexUpdater.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/442/FusionIndexUpdater.java\nindex a3c668bda2b..986f724572f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/442/FusionIndexUpdater.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/442/FusionIndexUpdater.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.index.schema.fusion;\n \n import java.io.IOException;\n@@ -27,61 +28,59 @@ import org.neo4j.kernel.api.index.IndexUpdater;\n \n class FusionIndexUpdater extends FusionIndexBase<IndexUpdater> implements IndexUpdater\n {\n-    FusionIndexUpdater( SlotSelector slotSelector, LazyInstanceSelector<IndexUpdater> instanceSelector )\n-    {\n-        super( slotSelector, instanceSelector );\n-    }\n+  FusionIndexUpdater(SlotSelector slotSelector, LazyInstanceSelector<IndexUpdater> instanceSelector)\n+  {\n+    super(slotSelector, instanceSelector);\n+  }\n \n-    @Override\n-    public void process( IndexEntryUpdate<?> update ) throws IOException, IndexEntryConflictException\n+  @Override\n+  public void process(IndexEntryUpdate<?> update) throws IOException, IndexEntryConflictException\n+  {\n+    switch (update.updateMode())\n     {\n-        switch ( update.updateMode() )\n+      case ADDED:\n+        instanceSelector.select(slotSelector.selectSlot(update.values(), GROUP_OF)).process(update);\n+        break;\n+      case CHANGED:\n+        // Hmm, here's a little conundrum. What if we change from a value that goes into native\n+        // to a value that goes into fallback, or vice versa? We also don't want to blindly pass\n+        // all CHANGED updates to both updaters since not all values will work in them.\n+        IndexUpdater from = instanceSelector.select(slotSelector.selectSlot(update.beforeValues(), GROUP_OF));\n+        IndexUpdater to = instanceSelector.select(slotSelector.selectSlot(update.values(), GROUP_OF));\n+        // There are two cases:\n+        // - both before/after go into the same updater --> pass update into that updater\n+        if (from == to)\n         {\n-        case ADDED:\n-            instanceSelector.select( slotSelector.selectSlot( update.values(), GROUP_OF ) ).process( update );\n-            break;\n-        case CHANGED:\n-            // Hmm, here's a little conundrum. What if we change from a value that goes into native\n-            // to a value that goes into fallback, or vice versa? We also don't want to blindly pass\n-            // all CHANGED updates to both updaters since not all values will work in them.\n-            IndexUpdater from = instanceSelector.select( slotSelector.selectSlot( update.beforeValues(), GROUP_OF ) );\n-            IndexUpdater to = instanceSelector.select( slotSelector.selectSlot( update.values(), GROUP_OF ) );\n-            // There are two cases:\n-            // - both before/after go into the same updater --> pass update into that updater\n-            if ( from == to )\n-            {\n-                from.process( update );\n-            }\n-            // - before go into one and after into the other --> REMOVED from one and ADDED into the other\n-            else\n-            {\n-                from.process( IndexEntryUpdate.remove( update.getEntityId(), update.indexKey(), update.beforeValues() ) );\n-                to.process( IndexEntryUpdate.add( update.getEntityId(), update.indexKey(), update.values() ) );\n-            }\n-            break;\n-        case REMOVED:\n-            instanceSelector.select( slotSelector.selectSlot( update.values(), GROUP_OF ) ).process( update );\n-            break;\n-        default:\n-            throw new IllegalArgumentException( \"Unknown update mode\" );\n+          from.process(update);\n         }\n+        // - before go into one and after into the other --> REMOVED from one and ADDED into the other\n+        else\n+        {\n+          from.process(IndexEntryUpdate.remove(update.getEntityId(), update.indexKey(), update.beforeValues()));\n+          to.process(IndexEntryUpdate.add(update.getEntityId(), update.indexKey(), update.values()));\n+        }\n+        break;\n+      case REMOVED:\n+        instanceSelector.select(slotSelector.selectSlot(update.values(), GROUP_OF)).process(update);\n+        break;\n+      default:\n+        throw new IllegalArgumentException(\"Unknown update mode\");\n     }\n+  }\n \n-    @Override\n-    public void close() throws IOException, IndexEntryConflictException\n+  @Override\n+  public void close() throws IOException, IndexEntryConflictException\n+  {\n+    try\n     {\n-        try\n-        {\n-            instanceSelector.close( IndexUpdater::close );\n-        }\n-        catch ( IOException | IndexEntryConflictException | RuntimeException e )\n-        {\n-            throw e;\n-        }\n-        catch ( Exception e )\n-        {\n-            // This catch-clause is basically only here to satisfy the compiler\n-            throw new RuntimeException( e );\n-        }\n+      instanceSelector.close(IndexUpdater::close);\n+    } catch (IOException | IndexEntryConflictException | RuntimeException e)\n+    {\n+      throw e;\n+    } catch (Exception e)\n+    {\n+      // This catch-clause is basically only here to satisfy the compiler\n+      throw new RuntimeException(e);\n     }\n+  }\n }\n",
            "diff_size": 79
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "CONNECT-Solution-CONNECT",
    "error_id": "1216",
    "information": {
        "errors": [
            {
                "line": "27",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\npackage gov.hhs.fha.nhinc.adapterauthentication;\n\nimport gov.hhs.fha.nhinc.common.nhinccommonadapter.AuthenticateUserRequestType;\nimport gov.hhs.fha.nhinc.common.nhinccommonadapter.AuthenticateUserResponseType;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1216/AdapterAuthenticationService.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler/1216/AdapterAuthenticationService.java\nindex 3c316edcc8b..5473a93ff92 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1216/AdapterAuthenticationService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler/1216/AdapterAuthenticationService.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.adapterauthentication;\n \n import gov.hhs.fha.nhinc.common.nhinccommonadapter.AuthenticateUserRequestType;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1216/AdapterAuthenticationService.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/intellij/1216/AdapterAuthenticationService.java\nindex 3c316edcc8b..1f07f773840 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1216/AdapterAuthenticationService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/intellij/1216/AdapterAuthenticationService.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.adapterauthentication;\n \n import gov.hhs.fha.nhinc.common.nhinccommonadapter.AuthenticateUserRequestType;\n@@ -34,37 +35,36 @@ import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n /**\n- *\n  * @author Sai Valluripalli\n  */\n @BindingType(value = SOAPBinding.SOAP12HTTP_BINDING)\n public class AdapterAuthenticationService\n-        implements gov.hhs.fha.nhinc.adapterauthentication.AdapterAuthenticationPortType {\n+    implements gov.hhs.fha.nhinc.adapterauthentication.AdapterAuthenticationPortType {\n \n-    private static final Logger LOG = LoggerFactory.getLogger(AdapterAuthenticationService.class);\n+  private static final Logger LOG = LoggerFactory.getLogger(AdapterAuthenticationService.class);\n \n-    /**\n-     * Given a request to authenticate a user, this service will determine if an authentication service is configured\n-     * for use (such as OpenSSO) and if so will provide an identifying token.\n-     *\n-     * @param authenticateUserRequest The request to authenticate the user\n-     * @return The response which indicates if an authentication service is implemented and if so the resulting token\n-     *         identifier\n-     */\n-    @Override\n-    public AuthenticateUserResponseType authenticateUser(AuthenticateUserRequestType authenticateUserRequest) {\n-        AuthenticateUserResponseType authResp = new AuthenticateUserResponseType();\n+  /**\n+   * Given a request to authenticate a user, this service will determine if an authentication service is configured\n+   * for use (such as OpenSSO) and if so will provide an identifying token.\n+   *\n+   * @param authenticateUserRequest The request to authenticate the user\n+   * @return The response which indicates if an authentication service is implemented and if so the resulting token\n+   * identifier\n+   */\n+  @Override\n+  public AuthenticateUserResponseType authenticateUser(AuthenticateUserRequestType authenticateUserRequest) {\n+    AuthenticateUserResponseType authResp = new AuthenticateUserResponseType();\n \n-        AdapterAuthenticationImpl adapterAuthImpl = new AdapterAuthenticationImpl();\n+    AdapterAuthenticationImpl adapterAuthImpl = new AdapterAuthenticationImpl();\n \n-        try {\n-            authResp = adapterAuthImpl.authenticateUser(authenticateUserRequest);\n-        } catch (Exception ex) {\n-            String message = \"Error occurred calling AdapterAuthenticationImpl.authenticateUser.  Error: \"\n-                    + ex.getMessage();\n-            LOG.error(message, ex);\n-            throw new RuntimeException(message, ex);\n-        }\n-        return authResp;\n+    try {\n+      authResp = adapterAuthImpl.authenticateUser(authenticateUserRequest);\n+    } catch (Exception ex) {\n+      String message = \"Error occurred calling AdapterAuthenticationImpl.authenticateUser.  Error: \"\n+          + ex.getMessage();\n+      LOG.error(message, ex);\n+      throw new RuntimeException(message, ex);\n     }\n+    return authResp;\n+  }\n }\n",
            "diff_size": 27
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "42",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 124).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "62",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 125).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1216/AdapterAuthenticationService.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/naturalize/1216/AdapterAuthenticationService.java\nindex 3c316edcc8b..aa55084bbd6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1216/AdapterAuthenticationService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/naturalize/1216/AdapterAuthenticationService.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.adapterauthentication;\n \n import gov.hhs.fha.nhinc.common.nhinccommonadapter.AuthenticateUserRequestType;\n@@ -38,8 +39,7 @@ import org.slf4j.LoggerFactory;\n  * @author Sai Valluripalli\n  */\n @BindingType(value = SOAPBinding.SOAP12HTTP_BINDING)\n-public class AdapterAuthenticationService\n-        implements gov.hhs.fha.nhinc.adapterauthentication.AdapterAuthenticationPortType {\n+public class AdapterAuthenticationService implements gov.hhs.fha.nhinc.adapterauthentication.AdapterAuthenticationPortType {\n \n     private static final Logger LOG = LoggerFactory.getLogger(AdapterAuthenticationService.class);\n \n@@ -56,15 +56,15 @@ public class AdapterAuthenticationService\n         AuthenticateUserResponseType authResp = new AuthenticateUserResponseType();\n \n         AdapterAuthenticationImpl adapterAuthImpl = new AdapterAuthenticationImpl();\n-\n-        try {\n+try {\n             authResp = adapterAuthImpl.authenticateUser(authenticateUserRequest);\n         } catch (Exception ex) {\n-            String message = \"Error occurred calling AdapterAuthenticationImpl.authenticateUser.  Error: \"\n-                    + ex.getMessage();\n-            LOG.error(message, ex);\n-            throw new RuntimeException(message, ex);\n-        }\n+            String message = \"Error occurred calling AdapterAuthenticationImpl.authenticateUser.  Error: \" + ex.getMessage();\n+LOG.error(message, ex);\n+\n+throw new RuntimeException(message, ex);\n+\n+    }\n         return authResp;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 12
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "43",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 124).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "64",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 125).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1216/AdapterAuthenticationService.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/codebuff/1216/AdapterAuthenticationService.java\nindex 3c316edcc8b..510c1c3c10a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1216/AdapterAuthenticationService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/codebuff/1216/AdapterAuthenticationService.java\n@@ -37,9 +37,10 @@ import org.slf4j.LoggerFactory;\n  *\n  * @author Sai Valluripalli\n  */\n+\n+\n @BindingType(value = SOAPBinding.SOAP12HTTP_BINDING)\n-public class AdapterAuthenticationService\n-        implements gov.hhs.fha.nhinc.adapterauthentication.AdapterAuthenticationPortType {\n+public class AdapterAuthenticationService implements gov.hhs.fha.nhinc.adapterauthentication.AdapterAuthenticationPortType {\n \n     private static final Logger LOG = LoggerFactory.getLogger(AdapterAuthenticationService.class);\n \n@@ -51,20 +52,20 @@ public class AdapterAuthenticationService\n      * @return The response which indicates if an authentication service is implemented and if so the resulting token\n      *         identifier\n      */\n+\n+\n     @Override\n     public AuthenticateUserResponseType authenticateUser(AuthenticateUserRequestType authenticateUserRequest) {\n         AuthenticateUserResponseType authResp = new AuthenticateUserResponseType();\n-\n         AdapterAuthenticationImpl adapterAuthImpl = new AdapterAuthenticationImpl();\n-\n         try {\n             authResp = adapterAuthImpl.authenticateUser(authenticateUserRequest);\n         } catch (Exception ex) {\n-            String message = \"Error occurred calling AdapterAuthenticationImpl.authenticateUser.  Error: \"\n-                    + ex.getMessage();\n+            String message = \"Error occurred calling AdapterAuthenticationImpl.authenticateUser.  Error: \" + ex.getMessage();\n             LOG.error(message, ex);\n             throw new RuntimeException(message, ex);\n         }\n         return authResp;\n     }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 12
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1216/AdapterAuthenticationService.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_three_grams/1216/AdapterAuthenticationService.java\nindex 3c316edcc8b..5473a93ff92 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1216/AdapterAuthenticationService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_three_grams/1216/AdapterAuthenticationService.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.adapterauthentication;\n \n import gov.hhs.fha.nhinc.common.nhinccommonadapter.AuthenticateUserRequestType;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff",
        "styler_random"
    ]
}
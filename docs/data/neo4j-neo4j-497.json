{
    "project_name": "neo4j-neo4j",
    "error_id": "497",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "41",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 162).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "55",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "86",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "58",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/497/PublicApiDoclet.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/497/PublicApiDoclet.java\nindex 3b918293490..aaaee8f4c72 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/497/PublicApiDoclet.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/497/PublicApiDoclet.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.annotations.api;\n \n import jdk.javadoc.doclet.DocletEnvironment;\n@@ -37,8 +38,7 @@ import javax.lang.model.element.QualifiedNameable;\n  * In cases when an entity that marked with {@code PublicApi} references element that is not marked as part of public API - referenced class will only\n  * be mentioned but not included. Meaning there will be no javadoc page for that element.\n  *\n- * @implNote\n- * Because of limitation of {@code StandardDoclet} we need to have access to the internal part of javadoc tool. The only valid {@code DocletEnvironment}\n+ * @implNote Because of limitation of {@code StandardDoclet} we need to have access to the internal part of javadoc tool. The only valid {@code DocletEnvironment}\n  * that we can pass into {@link StandardDoclet#run(DocletEnvironment)} is {@link DocEnvImpl} because of internal cast inside of HtmlDoclet inside a\n  * WorkArounds constructor.\n  * In case if that will be fixed in future version we can implement {@link DocletEnvironment} instead of extending {@link DocEnvImpl}.\n@@ -52,74 +52,74 @@ public class PublicApiDoclet extends StandardDoclet\n     }\n \n     @Override\n-    public boolean run( DocletEnvironment docEnv )\n+    public boolean run(DocletEnvironment docEnv)\n     {\n-        FilteringDocletEnvironment docletEnvironment = new FilteringDocletEnvironment( docEnv );\n-        return super.run( docletEnvironment );\n+        FilteringDocletEnvironment docletEnvironment = new FilteringDocletEnvironment(docEnv);\n+        return super.run(docletEnvironment);\n     }\n \n     private static class FilteringDocletEnvironment extends DocEnvImpl\n     {\n         private final DocletEnvironment docEnv;\n \n-        FilteringDocletEnvironment( DocletEnvironment docEnv )\n+        FilteringDocletEnvironment(DocletEnvironment docEnv)\n         {\n-            super( ((DocEnvImpl) docEnv).toolEnv, ((DocEnvImpl) docEnv).etable );\n+            super(((DocEnvImpl) docEnv).toolEnv, ((DocEnvImpl) docEnv).etable);\n             this.docEnv = docEnv;\n         }\n \n         @Override\n         public Set<? extends Element> getIncludedElements()\n         {\n-            Set<Element> includedElements = new HashSet<>( docEnv.getIncludedElements() );\n-            includedElements.removeIf( element -> !includeElement( element ) );\n+            Set<Element> includedElements = new HashSet<>(docEnv.getIncludedElements());\n+            includedElements.removeIf(element -> !includeElement(element));\n             return includedElements;\n         }\n \n         @Override\n-        public boolean isIncluded( Element e )\n+        public boolean isIncluded(Element e)\n         {\n-            if ( e instanceof QualifiedNameable )\n+            if (e instanceof QualifiedNameable)\n             {\n-                return includeElement( e );\n+                return includeElement(e);\n             }\n-            return super.isIncluded( e );\n+            return super.isIncluded(e);\n         }\n \n         @Override\n-        public boolean isSelected( Element e )\n+        public boolean isSelected(Element e)\n         {\n-            if ( e instanceof QualifiedNameable )\n+            if (e instanceof QualifiedNameable)\n             {\n-                return includeElement( e );\n+                return includeElement(e);\n             }\n-            return super.isIncluded( e );\n+            return super.isIncluded(e);\n         }\n \n-        private boolean includeElement( Element element )\n+        private boolean includeElement(Element element)\n         {\n-            if ( element.getAnnotation( PublicApi.class ) != null )\n+            if (element.getAnnotation(PublicApi.class) != null)\n             {\n                 return true;\n             }\n             Element enclosingElement = element.getEnclosingElement();\n-            if ( enclosingElement != null && enclosingElement.getAnnotation( PublicApi.class ) != null )\n+            if (enclosingElement != null && enclosingElement.getAnnotation(PublicApi.class) != null)\n             {\n                 return true;\n             }\n-            if ( element instanceof PackageElement )\n+            if (element instanceof PackageElement)\n             {\n-                return includePackage( (PackageElement) element );\n+                return includePackage((PackageElement) element);\n             }\n             return false;\n         }\n \n-        private boolean includePackage( PackageElement packageElement )\n+        private boolean includePackage(PackageElement packageElement)\n         {\n             List<? extends Element> enclosedElements = packageElement.getEnclosedElements();\n-            for ( Element enclosedElement : enclosedElements )\n+            for (Element enclosedElement : enclosedElements)\n             {\n-                if ( includeElement( enclosedElement ) )\n+                if (includeElement(enclosedElement))\n                 {\n                     return true;\n                 }\n",
            "diff_size": 26
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
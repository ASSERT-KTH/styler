{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2141",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "41",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "12",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "13",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "167",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "167",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "177",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "177",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "187",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "187",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "221",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "221",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "227",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "227",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "229",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "229",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "233",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "233",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "237",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "237",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2141/RelationshipRecord.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2141/RelationshipRecord.java\nindex a0528cb7f7b..0bf3833268c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2141/RelationshipRecord.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2141/RelationshipRecord.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.store.record;\n \n import java.util.Objects;\n@@ -26,228 +27,228 @@ import static org.neo4j.kernel.impl.store.record.Record.NO_NEXT_RELATIONSHIP;\n \n public class RelationshipRecord extends PrimitiveRecord\n {\n-    private long firstNode;\n-    private long secondNode;\n-    private int type;\n-    private long firstPrevRel;\n-    private long firstNextRel;\n-    private long secondPrevRel;\n-    private long secondNextRel;\n-    private boolean firstInFirstChain;\n-    private boolean firstInSecondChain;\n-\n-    @Deprecated\n-    public RelationshipRecord( long id, long firstNode, long secondNode, int type )\n-    {\n-        this( id );\n-        this.firstNode = firstNode;\n-        this.secondNode = secondNode;\n-        this.type = type;\n-    }\n-\n-    @Deprecated\n-    public RelationshipRecord( long id, boolean inUse, long firstNode, long secondNode, int type,\n-                               long firstPrevRel, long firstNextRel, long secondPrevRel, long secondNextRel,\n-                               boolean firstInFirstChain, boolean firstInSecondChain )\n-    {\n-        this( id, firstNode, secondNode, type );\n-        setInUse( inUse );\n-        this.firstPrevRel = firstPrevRel;\n-        this.firstNextRel = firstNextRel;\n-        this.secondPrevRel = secondPrevRel;\n-        this.secondNextRel = secondNextRel;\n-        this.firstInFirstChain = firstInFirstChain;\n-        this.firstInSecondChain = firstInSecondChain;\n-\n-    }\n-\n-    public RelationshipRecord( long id )\n-    {\n-        super( id );\n-    }\n-\n-    public RelationshipRecord initialize( boolean inUse, long nextProp, long firstNode, long secondNode,\n-            int type, long firstPrevRel, long firstNextRel, long secondPrevRel, long secondNextRel,\n-            boolean firstInFirstChain, boolean firstInSecondChain )\n-    {\n-        super.initialize( inUse, nextProp );\n-        this.firstNode = firstNode;\n-        this.secondNode = secondNode;\n-        this.type = type;\n-        this.firstPrevRel = firstPrevRel;\n-        this.firstNextRel = firstNextRel;\n-        this.secondPrevRel = secondPrevRel;\n-        this.secondNextRel = secondNextRel;\n-        this.firstInFirstChain = firstInFirstChain;\n-        this.firstInSecondChain = firstInSecondChain;\n-        return this;\n-    }\n-\n-    @Override\n-    public void clear()\n-    {\n-        initialize( false, NO_NEXT_PROPERTY.intValue(), -1, -1, -1,\n-                1, NO_NEXT_RELATIONSHIP.intValue(),\n-                1, NO_NEXT_RELATIONSHIP.intValue(), true, true );\n-    }\n-\n-    public void setLinks( long firstNode, long secondNode, int type )\n-    {\n-        this.firstNode = firstNode;\n-        this.secondNode = secondNode;\n-        this.type = type;\n-    }\n-\n-    public long getFirstNode()\n-    {\n-        return firstNode;\n-    }\n-\n-    public void setFirstNode( long firstNode )\n-    {\n-        this.firstNode = firstNode;\n-    }\n-\n-    public long getSecondNode()\n-    {\n-        return secondNode;\n-    }\n-\n-    public void setSecondNode( long secondNode )\n-    {\n-        this.secondNode = secondNode;\n-    }\n-\n-    public int getType()\n-    {\n-        return type;\n-    }\n-\n-    public void setType( int type )\n-    {\n-        this.type = type;\n-    }\n-\n-    public long getFirstPrevRel()\n-    {\n-        return firstPrevRel;\n-    }\n-\n-    public void setFirstPrevRel( long firstPrevRel )\n-    {\n-        this.firstPrevRel = firstPrevRel;\n-    }\n-\n-    public long getFirstNextRel()\n-    {\n-        return firstNextRel;\n-    }\n-\n-    public void setFirstNextRel( long firstNextRel )\n-    {\n-        this.firstNextRel = firstNextRel;\n-    }\n-\n-    public long getSecondPrevRel()\n-    {\n-        return secondPrevRel;\n-    }\n-\n-    public void setSecondPrevRel( long secondPrevRel )\n-    {\n-        this.secondPrevRel = secondPrevRel;\n-    }\n-\n-    public long getSecondNextRel()\n-    {\n-        return secondNextRel;\n-    }\n-\n-    public void setSecondNextRel( long secondNextRel )\n-    {\n-        this.secondNextRel = secondNextRel;\n-    }\n-\n-    public boolean isFirstInFirstChain()\n-    {\n-        return firstInFirstChain;\n-    }\n-\n-    public void setFirstInFirstChain( boolean firstInFirstChain )\n-    {\n-        this.firstInFirstChain = firstInFirstChain;\n-    }\n-\n-    public boolean isFirstInSecondChain()\n-    {\n-        return firstInSecondChain;\n-    }\n-\n-    public void setFirstInSecondChain( boolean firstInSecondChain )\n-    {\n-        this.firstInSecondChain = firstInSecondChain;\n-    }\n-\n-    @Override\n-    public String toString()\n-    {\n-        return \"Relationship[\" + getId() +\n-               \",used=\" + inUse() +\n-               \",source=\" + firstNode +\n-               \",target=\" + secondNode +\n-               \",type=\" + type +\n-               (firstInFirstChain ? \",sCount=\" : \",sPrev=\") + firstPrevRel +\n-               \",sNext=\" + firstNextRel +\n-               (firstInSecondChain ? \",tCount=\" : \",tPrev=\") + secondPrevRel +\n-               \",tNext=\" + secondNextRel +\n-               \",prop=\" + getNextProp() +\n-               \",secondaryUnitId=\" + getSecondaryUnitId() +\n-               (firstInFirstChain ? \", sFirst\" : \",!sFirst\") +\n-               (firstInSecondChain ? \", tFirst\" : \",!tFirst\") + \"]\";\n-    }\n-\n-    @Override\n-    public RelationshipRecord clone()\n-    {\n-        RelationshipRecord record = new RelationshipRecord( getId() ).initialize( inUse(), nextProp, firstNode,\n-                secondNode, type, firstPrevRel, firstNextRel, secondPrevRel, secondNextRel, firstInFirstChain,\n-                firstInSecondChain );\n-        record.setSecondaryUnitId( getSecondaryUnitId() );\n-        return record;\n-    }\n-\n-    @Override\n-    public void setIdTo( PropertyRecord property )\n-    {\n-        property.setRelId( getId() );\n-    }\n-\n-    @Override\n-    public boolean equals( Object o )\n-    {\n-        if ( this == o )\n-        {\n-            return true;\n-        }\n-        if ( o == null || getClass() != o.getClass() )\n-        {\n-            return false;\n-        }\n-        if ( !super.equals( o ) )\n-        {\n-            return false;\n-        }\n-        RelationshipRecord that = (RelationshipRecord) o;\n-        return firstNode == that.firstNode && secondNode == that.secondNode && type == that.type &&\n-                firstPrevRel == that.firstPrevRel && firstNextRel == that.firstNextRel &&\n-                secondPrevRel == that.secondPrevRel && secondNextRel == that.secondNextRel &&\n-                firstInFirstChain == that.firstInFirstChain && firstInSecondChain == that.firstInSecondChain;\n-    }\n-\n-    @Override\n-    public int hashCode()\n-    {\n-        return Objects.hash( super.hashCode(), firstNode, secondNode, type, firstPrevRel, firstNextRel, secondPrevRel,\n-                secondNextRel, firstInFirstChain, firstInSecondChain );\n-    }\n+  private long firstNode;\n+  private long secondNode;\n+  private int type;\n+  private long firstPrevRel;\n+  private long firstNextRel;\n+  private long secondPrevRel;\n+  private long secondNextRel;\n+  private boolean firstInFirstChain;\n+  private boolean firstInSecondChain;\n+\n+  @Deprecated\n+  public RelationshipRecord(long id, long firstNode, long secondNode, int type)\n+  {\n+    this(id);\n+    this.firstNode = firstNode;\n+    this.secondNode = secondNode;\n+    this.type = type;\n+  }\n+\n+  @Deprecated\n+  public RelationshipRecord(long id, boolean inUse, long firstNode, long secondNode, int type,\n+                            long firstPrevRel, long firstNextRel, long secondPrevRel, long secondNextRel,\n+                            boolean firstInFirstChain, boolean firstInSecondChain)\n+  {\n+    this(id, firstNode, secondNode, type);\n+    setInUse(inUse);\n+    this.firstPrevRel = firstPrevRel;\n+    this.firstNextRel = firstNextRel;\n+    this.secondPrevRel = secondPrevRel;\n+    this.secondNextRel = secondNextRel;\n+    this.firstInFirstChain = firstInFirstChain;\n+    this.firstInSecondChain = firstInSecondChain;\n+\n+  }\n+\n+  public RelationshipRecord(long id)\n+  {\n+    super(id);\n+  }\n+\n+  public RelationshipRecord initialize(boolean inUse, long nextProp, long firstNode, long secondNode,\n+                                       int type, long firstPrevRel, long firstNextRel, long secondPrevRel, long secondNextRel,\n+                                       boolean firstInFirstChain, boolean firstInSecondChain)\n+  {\n+    super.initialize(inUse, nextProp);\n+    this.firstNode = firstNode;\n+    this.secondNode = secondNode;\n+    this.type = type;\n+    this.firstPrevRel = firstPrevRel;\n+    this.firstNextRel = firstNextRel;\n+    this.secondPrevRel = secondPrevRel;\n+    this.secondNextRel = secondNextRel;\n+    this.firstInFirstChain = firstInFirstChain;\n+    this.firstInSecondChain = firstInSecondChain;\n+    return this;\n+  }\n+\n+  @Override\n+  public void clear()\n+  {\n+    initialize(false, NO_NEXT_PROPERTY.intValue(), -1, -1, -1,\n+        1, NO_NEXT_RELATIONSHIP.intValue(),\n+        1, NO_NEXT_RELATIONSHIP.intValue(), true, true);\n+  }\n+\n+  public void setLinks(long firstNode, long secondNode, int type)\n+  {\n+    this.firstNode = firstNode;\n+    this.secondNode = secondNode;\n+    this.type = type;\n+  }\n+\n+  public long getFirstNode()\n+  {\n+    return firstNode;\n+  }\n+\n+  public void setFirstNode(long firstNode)\n+  {\n+    this.firstNode = firstNode;\n+  }\n+\n+  public long getSecondNode()\n+  {\n+    return secondNode;\n+  }\n+\n+  public void setSecondNode(long secondNode)\n+  {\n+    this.secondNode = secondNode;\n+  }\n+\n+  public int getType()\n+  {\n+    return type;\n+  }\n+\n+  public void setType(int type)\n+  {\n+    this.type = type;\n+  }\n+\n+  public long getFirstPrevRel()\n+  {\n+    return firstPrevRel;\n+  }\n+\n+  public void setFirstPrevRel(long firstPrevRel)\n+  {\n+    this.firstPrevRel = firstPrevRel;\n+  }\n+\n+  public long getFirstNextRel()\n+  {\n+    return firstNextRel;\n+  }\n+\n+  public void setFirstNextRel(long firstNextRel)\n+  {\n+    this.firstNextRel = firstNextRel;\n+  }\n+\n+  public long getSecondPrevRel()\n+  {\n+    return secondPrevRel;\n+  }\n+\n+  public void setSecondPrevRel(long secondPrevRel)\n+  {\n+    this.secondPrevRel = secondPrevRel;\n+  }\n+\n+  public long getSecondNextRel()\n+  {\n+    return secondNextRel;\n+  }\n+\n+  public void setSecondNextRel(long secondNextRel)\n+  {\n+    this.secondNextRel = secondNextRel;\n+  }\n+\n+  public boolean isFirstInFirstChain()\n+  {\n+    return firstInFirstChain;\n+  }\n+\n+  public void setFirstInFirstChain(boolean firstInFirstChain)\n+  {\n+    this.firstInFirstChain = firstInFirstChain;\n+  }\n+\n+  public boolean isFirstInSecondChain()\n+  {\n+    return firstInSecondChain;\n+  }\n+\n+  public void setFirstInSecondChain(boolean firstInSecondChain)\n+  {\n+    this.firstInSecondChain = firstInSecondChain;\n+  }\n+\n+  @Override\n+  public String toString()\n+  {\n+    return \"Relationship[\" + getId() +\n+        \",used=\" + inUse() +\n+        \",source=\" + firstNode +\n+        \",target=\" + secondNode +\n+        \",type=\" + type +\n+        (firstInFirstChain ? \",sCount=\" : \",sPrev=\") + firstPrevRel +\n+        \",sNext=\" + firstNextRel +\n+        (firstInSecondChain ? \",tCount=\" : \",tPrev=\") + secondPrevRel +\n+        \",tNext=\" + secondNextRel +\n+        \",prop=\" + getNextProp() +\n+        \",secondaryUnitId=\" + getSecondaryUnitId() +\n+        (firstInFirstChain ? \", sFirst\" : \",!sFirst\") +\n+        (firstInSecondChain ? \", tFirst\" : \",!tFirst\") + \"]\";\n+  }\n+\n+  @Override\n+  public RelationshipRecord clone()\n+  {\n+    RelationshipRecord record = new RelationshipRecord(getId()).initialize(inUse(), nextProp, firstNode,\n+        secondNode, type, firstPrevRel, firstNextRel, secondPrevRel, secondNextRel, firstInFirstChain,\n+        firstInSecondChain);\n+    record.setSecondaryUnitId(getSecondaryUnitId());\n+    return record;\n+  }\n+\n+  @Override\n+  public void setIdTo(PropertyRecord property)\n+  {\n+    property.setRelId(getId());\n+  }\n+\n+  @Override\n+  public boolean equals(Object o)\n+  {\n+    if (this == o)\n+    {\n+      return true;\n+    }\n+    if (o == null || getClass() != o.getClass())\n+    {\n+      return false;\n+    }\n+    if (!super.equals(o))\n+    {\n+      return false;\n+    }\n+    RelationshipRecord that = (RelationshipRecord) o;\n+    return firstNode == that.firstNode && secondNode == that.secondNode && type == that.type &&\n+        firstPrevRel == that.firstPrevRel && firstNextRel == that.firstNextRel &&\n+        secondPrevRel == that.secondPrevRel && secondNextRel == that.secondNextRel &&\n+        firstInFirstChain == that.firstInFirstChain && firstInSecondChain == that.firstInSecondChain;\n+  }\n+\n+  @Override\n+  public int hashCode()\n+  {\n+    return Objects.hash(super.hashCode(), firstNode, secondNode, type, firstPrevRel, firstNextRel, secondPrevRel,\n+        secondNextRel, firstInFirstChain, firstInSecondChain);\n+  }\n }\n",
            "diff_size": 225
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "49",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 175).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "67",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 192).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "189",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 491).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2141/RelationshipRecord.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2141/RelationshipRecord.java\nindex a0528cb7f7b..a3e10eb0151 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2141/RelationshipRecord.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2141/RelationshipRecord.java\n@@ -46,10 +46,9 @@ public class RelationshipRecord extends PrimitiveRecord\n     }\n \n     @Deprecated\n-    public RelationshipRecord( long id, boolean inUse, long firstNode, long secondNode, int type,\n-                               long firstPrevRel, long firstNextRel, long secondPrevRel, long secondNextRel,\n+    public RelationshipRecord( long id, boolean inUse, long firstNode, long secondNode, int type, long firstPrevRel, long firstNextRel, long secondPrevRel, long secondNextRel,\n                                boolean firstInFirstChain, boolean firstInSecondChain )\n-    {\n+{\n         this( id, firstNode, secondNode, type );\n         setInUse( inUse );\n         this.firstPrevRel = firstPrevRel;\n@@ -58,7 +57,6 @@ public class RelationshipRecord extends PrimitiveRecord\n         this.secondNextRel = secondNextRel;\n         this.firstInFirstChain = firstInFirstChain;\n         this.firstInSecondChain = firstInSecondChain;\n-\n     }\n \n     public RelationshipRecord( long id )\n@@ -66,8 +64,7 @@ public class RelationshipRecord extends PrimitiveRecord\n         super( id );\n     }\n \n-    public RelationshipRecord initialize( boolean inUse, long nextProp, long firstNode, long secondNode,\n-            int type, long firstPrevRel, long firstNextRel, long secondPrevRel, long secondNextRel,\n+    public RelationshipRecord initialize( boolean inUse, long nextProp, long firstNode, long secondNode, int type, long firstPrevRel, long firstNextRel, long secondPrevRel, long secondNextRel,\n             boolean firstInFirstChain, boolean firstInSecondChain )\n     {\n         super.initialize( inUse, nextProp );\n@@ -86,9 +83,7 @@ public class RelationshipRecord extends PrimitiveRecord\n     @Override\n     public void clear()\n     {\n-        initialize( false, NO_NEXT_PROPERTY.intValue(), -1, -1, -1,\n-                1, NO_NEXT_RELATIONSHIP.intValue(),\n-                1, NO_NEXT_RELATIONSHIP.intValue(), true, true );\n+        initialize( false, NO_NEXT_PROPERTY.intValue(), -1, -1, -1, 1, NO_NEXT_RELATIONSHIP.intValue(), 1, NO_NEXT_RELATIONSHIP.intValue(), true, true );\n     }\n \n     public void setLinks( long firstNode, long secondNode, int type )\n@@ -191,28 +186,15 @@ public class RelationshipRecord extends PrimitiveRecord\n     @Override\n     public String toString()\n     {\n-        return \"Relationship[\" + getId() +\n-               \",used=\" + inUse() +\n-               \",source=\" + firstNode +\n-               \",target=\" + secondNode +\n-               \",type=\" + type +\n-               (firstInFirstChain ? \",sCount=\" : \",sPrev=\") + firstPrevRel +\n-               \",sNext=\" + firstNextRel +\n-               (firstInSecondChain ? \",tCount=\" : \",tPrev=\") + secondPrevRel +\n-               \",tNext=\" + secondNextRel +\n-               \",prop=\" + getNextProp() +\n-               \",secondaryUnitId=\" + getSecondaryUnitId() +\n-               (firstInFirstChain ? \", sFirst\" : \",!sFirst\") +\n-               (firstInSecondChain ? \", tFirst\" : \",!tFirst\") + \"]\";\n+        return \"Relationship[\" + getId() + \",used=\" + inUse() + \",source=\" + firstNode + \",target=\" + secondNode + \",type=\" + type + ( firstInFirstChain ? \",sCount=\" : \",sPrev=\") + firstPrevRel + \",sNext=\" + firstNextRel + ( firstInSecondChain ? \",tCount=\" : \",tPrev=\") + secondPrevRel + \",tNext=\" + secondNextRel + \",prop=\" + getNextProp() + \",secondaryUnitId=\" + getSecondaryUnitId() + ( firstInFirstChain ? \", sFirst\" : \",!sFirst\") + ( firstInSecondChain ? \", tFirst\" : \",!tFirst\") + \"]\";\n     }\n \n     @Override\n     public RelationshipRecord clone()\n     {\n         RelationshipRecord record = new RelationshipRecord( getId() ).initialize( inUse(), nextProp, firstNode,\n-                secondNode, type, firstPrevRel, firstNextRel, secondPrevRel, secondNextRel, firstInFirstChain,\n-                firstInSecondChain );\n-        record.setSecondaryUnitId( getSecondaryUnitId() );\n+                secondNode, type, firstPrevRel, firstNextRel, secondPrevRel, secondNextRel, firstInFirstChain, firstInSecondChain );\n+record.setSecondaryUnitId( getSecondaryUnitId() );\n         return record;\n     }\n \n@@ -229,15 +211,18 @@ public class RelationshipRecord extends PrimitiveRecord\n         {\n             return true;\n         }\n-        if ( o == null || getClass() != o.getClass() )\n+\n+if ( o == null || getClass() != o.getClass() )\n         {\n             return false;\n         }\n-        if ( !super.equals( o ) )\n+\n+if ( !super.equals( o ) )\n         {\n             return false;\n         }\n-        RelationshipRecord that = (RelationshipRecord) o;\n+\n+RelationshipRecord that = (RelationshipRecord) o;\n         return firstNode == that.firstNode && secondNode == that.secondNode && type == that.type &&\n                 firstPrevRel == that.firstPrevRel && firstNextRel == that.firstNextRel &&\n                 secondPrevRel == that.secondPrevRel && secondNextRel == that.secondNextRel &&\n@@ -250,4 +235,4 @@ public class RelationshipRecord extends PrimitiveRecord\n         return Objects.hash( super.hashCode(), firstNode, secondNode, type, firstPrevRel, firstNextRel, secondPrevRel,\n                 secondNextRel, firstInFirstChain, firstInSecondChain );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 32
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
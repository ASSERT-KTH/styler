{
    "project_name": "cloudera-director-sdk",
    "error_id": "313",
    "information": {
        "errors": [
            {
                "line": "0",
                "severity": "error",
                "message": "Required pattern 'Cloudera copyright header' missing in file.",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
            }
        ]
    },
    "source_code": "// Licensed to Cloudera, Inc. under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/errored/1/313/HealthCheck.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/intellij/313/HealthCheck.java\nindex e412688983a..72dfe302088 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/errored/1/313/HealthCheck.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/intellij/313/HealthCheck.java\n@@ -28,6 +28,7 @@ public class HealthCheck {\n   private String healthStatus;\n   /* Check suppression flag */\n   private Boolean suppressed;\n+\n   public interface HealthStatus {\n     String DISABLED = \"DISABLED\";\n     String NOT_AVAILABLE = \"NOT_AVAILABLE\";\n@@ -38,7 +39,9 @@ public class HealthCheck {\n     String CONCERNING = \"CONCERNING\";\n     String BAD = \"BAD\";\n   }\n-  public HealthCheck() { }\n+\n+  public HealthCheck() {\n+  }\n \n   private HealthCheck(String checkName, String explanation, String healthStatus, Boolean suppressed) {\n     this.checkName = checkName;\n@@ -91,15 +94,17 @@ public class HealthCheck {\n \n   public HealthCheckBuilder toBuilder() {\n     return builder()\n-      .checkName(checkName)\n-      .explanation(explanation)\n-      .healthStatus(healthStatus)\n-      .suppressed(suppressed)\n-      ;\n+        .checkName(checkName)\n+        .explanation(explanation)\n+        .healthStatus(healthStatus)\n+        .suppressed(suppressed)\n+        ;\n   }\n+\n   public String getCheckName() {\n     return checkName;\n   }\n+\n   public void setCheckName(String checkName) {\n     this.checkName = checkName;\n   }\n@@ -107,6 +112,7 @@ public class HealthCheck {\n   public String getExplanation() {\n     return explanation;\n   }\n+\n   public void setExplanation(String explanation) {\n     this.explanation = explanation;\n   }\n@@ -114,6 +120,7 @@ public class HealthCheck {\n   public String getHealthStatus() {\n     return healthStatus;\n   }\n+\n   public void setHealthStatus(String healthStatus) {\n     this.healthStatus = healthStatus;\n   }\n@@ -121,29 +128,42 @@ public class HealthCheck {\n   public Boolean getSuppressed() {\n     return suppressed;\n   }\n+\n   public void setSuppressed(Boolean suppressed) {\n     this.suppressed = suppressed;\n   }\n \n   @Override\n   public boolean equals(Object o) {\n-    if (this == o) return true;\n-    if (o == null || getClass() != o.getClass()) return false;\n+    if (this == o) {\n+      return true;\n+    }\n+    if (o == null || getClass() != o.getClass()) {\n+      return false;\n+    }\n \n     HealthCheck other = (HealthCheck) o; // NOPMD\n \n     if (checkName != null ?\n         !checkName.equals(other.checkName) :\n-        other.checkName != null) return false;\n+        other.checkName != null) {\n+      return false;\n+    }\n     if (explanation != null ?\n         !explanation.equals(other.explanation) :\n-        other.explanation != null) return false;\n+        other.explanation != null) {\n+      return false;\n+    }\n     if (healthStatus != null ?\n         !healthStatus.equals(other.healthStatus) :\n-        other.healthStatus != null) return false;\n+        other.healthStatus != null) {\n+      return false;\n+    }\n     if (suppressed != null ?\n         !suppressed.equals(other.suppressed) :\n-        other.suppressed != null) return false;\n+        other.suppressed != null) {\n+      return false;\n+    }\n     return true;\n   }\n \n@@ -158,7 +178,7 @@ public class HealthCheck {\n   }\n \n   @Override\n-  public String toString()  {\n+  public String toString() {\n     StringBuilder sb = new StringBuilder();\n     String newLine = System.getProperty(\"line.separator\");\n     sb.append(\"class HealthCheck {\" + newLine);\n",
            "diff_size": 33
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                },
                {
                    "line": "124",
                    "column": "27",
                    "severity": "warning",
                    "message": "'?' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "126",
                    "column": "25",
                    "severity": "warning",
                    "message": "'?' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "128",
                    "column": "26",
                    "severity": "warning",
                    "message": "'?' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "130",
                    "column": "24",
                    "severity": "warning",
                    "message": "'?' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/errored/1/313/HealthCheck.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/naturalize/313/HealthCheck.java\nindex e412688983a..e1250640b3b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/errored/1/313/HealthCheck.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/naturalize/313/HealthCheck.java\n@@ -1,24 +1,8 @@\n-// Licensed to Cloudera, Inc. under one\n-// or more contributor license agreements.  See the NOTICE file\n-// distributed with this work for additional information\n-// regarding copyright ownership.  Cloudera, Inc. licenses this file\n-// to you under the Apache License, Version 2.0 (the\n-// \"License\"); you may not use this file except in compliance\n-// with the License.  You may obtain a copy of the License at\n-//\n-//     http://www.apache.org/licenses/LICENSE-2.0\n-//\n-// Unless required by applicable law or agreed to in writing, software\n-// distributed under the License is distributed on an \"AS IS\" BASIS,\n-// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n-// See the License for the specific language governing permissions and\n-// limitations under the License.\n-\n+// Licensed to Cloudera, Inc.\n // Note: This file is auto generated. Do not edit manually.\n \n package com.cloudera.director.client.v8.model;\n \n-\n public class HealthCheck {\n   /* Health check name */\n   private String checkName;\n@@ -28,7 +12,8 @@ public class HealthCheck {\n   private String healthStatus;\n   /* Check suppression flag */\n   private Boolean suppressed;\n-  public interface HealthStatus {\n+\n+public interface HealthStatus {\n     String DISABLED = \"DISABLED\";\n     String NOT_AVAILABLE = \"NOT_AVAILABLE\";\n     String STARTING = \"STARTING\";\n@@ -38,7 +23,8 @@ public class HealthCheck {\n     String CONCERNING = \"CONCERNING\";\n     String BAD = \"BAD\";\n   }\n-  public HealthCheck() { }\n+\n+public HealthCheck() { }\n \n   private HealthCheck(String checkName, String explanation, String healthStatus, Boolean suppressed) {\n     this.checkName = checkName;\n@@ -59,7 +45,8 @@ public class HealthCheck {\n   }\n \n   public static class HealthCheckBuilder {\n-    private String checkName = null;\n+\n+  private String checkName = null;\n     private String explanation = null;\n     private String healthStatus = null;\n     private Boolean suppressed = null;\n@@ -90,14 +77,13 @@ public class HealthCheck {\n   }\n \n   public HealthCheckBuilder toBuilder() {\n-    return builder()\n-      .checkName(checkName)\n+    return builder().checkName(checkName)\n       .explanation(explanation)\n       .healthStatus(healthStatus)\n-      .suppressed(suppressed)\n-      ;\n+      .suppressed(suppressed);\n   }\n-  public String getCheckName() {\n+\n+public String getCheckName() {\n     return checkName;\n   }\n   public void setCheckName(String checkName) {\n@@ -128,22 +114,20 @@ public class HealthCheck {\n   @Override\n   public boolean equals(Object o) {\n     if (this == o) return true;\n-    if (o == null || getClass() != o.getClass()) return false;\n-\n-    HealthCheck other = (HealthCheck) o; // NOPMD\n-\n-    if (checkName != null ?\n-        !checkName.equals(other.checkName) :\n-        other.checkName != null) return false;\n-    if (explanation != null ?\n-        !explanation.equals(other.explanation) :\n-        other.explanation != null) return false;\n-    if (healthStatus != null ?\n-        !healthStatus.equals(other.healthStatus) :\n-        other.healthStatus != null) return false;\n-    if (suppressed != null ?\n-        !suppressed.equals(other.suppressed) :\n-        other.suppressed != null) return false;\n+    if (o == null ||\n+getClass() != o.getClass()) return false;\n+\n+    HealthCheck other = (HealthCheck) o;\n+\n+// NOPMD\n+\n+    if (checkName != null ?!checkName.equals(other.checkName) : other.checkName != null) return false;\n+\n+if (explanation != null ?!explanation.equals(other.explanation) : other.explanation != null) return false;\n+\n+if (healthStatus != null ?!healthStatus.equals(other.healthStatus) : other.healthStatus != null) return false;\n+\n+if (suppressed != null ?!suppressed.equals(other.suppressed) : other.suppressed != null) return false;\n     return true;\n   }\n \n@@ -158,7 +142,7 @@ public class HealthCheck {\n   }\n \n   @Override\n-  public String toString()  {\n+  public String toString() {\n     StringBuilder sb = new StringBuilder();\n     String newLine = System.getProperty(\"line.separator\");\n     sb.append(\"class HealthCheck {\" + newLine);\n@@ -169,5 +153,4 @@ public class HealthCheck {\n     sb.append(\"}\" + newLine);\n     return sb.toString();\n   }\n-}\n-\n+}\n\\ No newline at end of file\n",
            "diff_size": 48
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                },
                {
                    "line": "60",
                    "column": "24",
                    "severity": "warning",
                    "message": "'{' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "60",
                    "column": "25",
                    "severity": "warning",
                    "message": "'}' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "64",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 128).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "65",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 132).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "66",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 134).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "67",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 130).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "160",
                    "column": "18",
                    "severity": "warning",
                    "message": "'||' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "163",
                    "column": "37",
                    "severity": "warning",
                    "message": "'typecast' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "165",
                    "column": "26",
                    "severity": "warning",
                    "message": "'?' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "165",
                    "column": "26",
                    "severity": "warning",
                    "message": "'?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "165",
                    "column": "61",
                    "severity": "warning",
                    "message": "':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "166",
                    "column": "28",
                    "severity": "warning",
                    "message": "'?' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "166",
                    "column": "28",
                    "severity": "warning",
                    "message": "'?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "166",
                    "column": "67",
                    "severity": "warning",
                    "message": "':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "167",
                    "column": "29",
                    "severity": "warning",
                    "message": "'?' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "167",
                    "column": "29",
                    "severity": "warning",
                    "message": "'?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "167",
                    "column": "70",
                    "severity": "warning",
                    "message": "':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "168",
                    "column": "27",
                    "severity": "warning",
                    "message": "'?' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "168",
                    "column": "27",
                    "severity": "warning",
                    "message": "'?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "168",
                    "column": "64",
                    "severity": "warning",
                    "message": "':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "176",
                    "column": "16",
                    "severity": "warning",
                    "message": "'*' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "176",
                    "column": "16",
                    "severity": "warning",
                    "message": "'*' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "176",
                    "column": "44",
                    "severity": "warning",
                    "message": "'?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "176",
                    "column": "66",
                    "severity": "warning",
                    "message": "':' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "176",
                    "column": "66",
                    "severity": "warning",
                    "message": "':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "177",
                    "column": "16",
                    "severity": "warning",
                    "message": "'*' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "177",
                    "column": "16",
                    "severity": "warning",
                    "message": "'*' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "177",
                    "column": "46",
                    "severity": "warning",
                    "message": "'?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "177",
                    "column": "70",
                    "severity": "warning",
                    "message": "':' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "177",
                    "column": "70",
                    "severity": "warning",
                    "message": "':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "178",
                    "column": "16",
                    "severity": "warning",
                    "message": "'*' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "178",
                    "column": "16",
                    "severity": "warning",
                    "message": "'*' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "178",
                    "column": "47",
                    "severity": "warning",
                    "message": "'?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "178",
                    "column": "72",
                    "severity": "warning",
                    "message": "':' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "178",
                    "column": "72",
                    "severity": "warning",
                    "message": "':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "179",
                    "column": "16",
                    "severity": "warning",
                    "message": "'*' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "179",
                    "column": "16",
                    "severity": "warning",
                    "message": "'*' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "179",
                    "column": "45",
                    "severity": "warning",
                    "message": "'?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "179",
                    "column": "68",
                    "severity": "warning",
                    "message": "':' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "179",
                    "column": "68",
                    "severity": "warning",
                    "message": "':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/errored/1/313/HealthCheck.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/codebuff/313/HealthCheck.java\nindex e412688983a..5bed2f34e1c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/errored/1/313/HealthCheck.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/codebuff/313/HealthCheck.java\n@@ -18,50 +18,74 @@\n \n package com.cloudera.director.client.v8.model;\n \n-\n public class HealthCheck {\n   /* Health check name */\n+\n   private String checkName;\n   /* Explanation for health status */\n+\n   private String explanation;\n   /* Health status */\n+\n   private String healthStatus;\n   /* Check suppression flag */\n+\n   private Boolean suppressed;\n+\n   public interface HealthStatus {\n-    String DISABLED = \"DISABLED\";\n-    String NOT_AVAILABLE = \"NOT_AVAILABLE\";\n-    String STARTING = \"STARTING\";\n-    String STOPPING = \"STOPPING\";\n-    String STOPPED = \"STOPPED\";\n-    String GOOD = \"GOOD\";\n-    String CONCERNING = \"CONCERNING\";\n-    String BAD = \"BAD\";\n+String DISABLED = \"DISABLED\";\n+\n+\n+String NOT_AVAILABLE = \"NOT_AVAILABLE\";\n+\n+\n+String STARTING = \"STARTING\";\n+\n+\n+String STOPPING = \"STOPPING\";\n+\n+\n+String STOPPED = \"STOPPED\";\n+\n+\n+String GOOD = \"GOOD\";\n+\n+\n+String CONCERNING = \"CONCERNING\";\n+\n+\n+String BAD = \"BAD\";\n   }\n-  public HealthCheck() { }\n+\n+  public HealthCheck() {}\n+\n \n   private HealthCheck(String checkName, String explanation, String healthStatus, Boolean suppressed) {\n-    this.checkName = checkName;\n-    this.explanation = explanation;\n-    this.healthStatus = healthStatus;\n-    this.suppressed = suppressed;\n-  }\n+                                                                                                     this.checkName = checkName;\n+                                                                                                     this.explanation = explanation;\n+                                                                                                     this.healthStatus = healthStatus;\n+                                                                                                     this.suppressed = suppressed;\n+                         }\n \n   private HealthCheck(HealthCheckBuilder builder) {\n-    this.checkName = builder.checkName;\n-    this.explanation = builder.explanation;\n-    this.healthStatus = builder.healthStatus;\n-    this.suppressed = builder.suppressed;\n-  }\n+                                                  this.checkName = builder.checkName;\n+                                                  this.explanation = builder.explanation;\n+                                                  this.healthStatus = builder.healthStatus;\n+                                                  this.suppressed = builder.suppressed;\n+                         }\n \n   public static HealthCheckBuilder builder() {\n     return new HealthCheckBuilder();\n   }\n \n   public static class HealthCheckBuilder {\n+\n     private String checkName = null;\n+\n     private String explanation = null;\n+\n     private String healthStatus = null;\n+\n     private Boolean suppressed = null;\n \n     public HealthCheckBuilder checkName(String checkName) {\n@@ -94,12 +118,13 @@ public class HealthCheck {\n       .checkName(checkName)\n       .explanation(explanation)\n       .healthStatus(healthStatus)\n-      .suppressed(suppressed)\n-      ;\n+      .suppressed(suppressed);\n   }\n+\n   public String getCheckName() {\n     return checkName;\n   }\n+\n   public void setCheckName(String checkName) {\n     this.checkName = checkName;\n   }\n@@ -107,6 +132,7 @@ public class HealthCheck {\n   public String getExplanation() {\n     return explanation;\n   }\n+\n   public void setExplanation(String explanation) {\n     this.explanation = explanation;\n   }\n@@ -114,6 +140,7 @@ public class HealthCheck {\n   public String getHealthStatus() {\n     return healthStatus;\n   }\n+\n   public void setHealthStatus(String healthStatus) {\n     this.healthStatus = healthStatus;\n   }\n@@ -121,53 +148,54 @@ public class HealthCheck {\n   public Boolean getSuppressed() {\n     return suppressed;\n   }\n+\n   public void setSuppressed(Boolean suppressed) {\n     this.suppressed = suppressed;\n   }\n \n+\n   @Override\n   public boolean equals(Object o) {\n     if (this == o) return true;\n-    if (o == null || getClass() != o.getClass()) return false;\n-\n-    HealthCheck other = (HealthCheck) o; // NOPMD\n-\n-    if (checkName != null ?\n-        !checkName.equals(other.checkName) :\n-        other.checkName != null) return false;\n-    if (explanation != null ?\n-        !explanation.equals(other.explanation) :\n-        other.explanation != null) return false;\n-    if (healthStatus != null ?\n-        !healthStatus.equals(other.healthStatus) :\n-        other.healthStatus != null) return false;\n-    if (suppressed != null ?\n-        !suppressed.equals(other.suppressed) :\n-        other.suppressed != null) return false;\n+    if (o == null||\n+        getClass() != o.getClass()) return false;\n+\n+    HealthCheck other = (HealthCheck)o; // NOPMD\n+\n+    if (checkName != null?!checkName.equals(other.checkName): other.checkName != null) return false;\n+    if (explanation != null?!explanation.equals(other.explanation): other.explanation != null) return false;\n+    if (healthStatus != null?!healthStatus.equals(other.healthStatus): other.healthStatus != null) return false;\n+    if (suppressed != null?!suppressed.equals(other.suppressed): other.suppressed != null) return false;\n     return true;\n   }\n \n+\n   @Override\n   public int hashCode() {\n     int result = 0;\n-    result = 31 * result + (checkName != null ? checkName.hashCode() : 0);\n-    result = 31 * result + (explanation != null ? explanation.hashCode() : 0);\n-    result = 31 * result + (healthStatus != null ? healthStatus.hashCode() : 0);\n-    result = 31 * result + (suppressed != null ? suppressed.hashCode() : 0);\n+    result = 31*result + (checkName != null? checkName.hashCode():0);\n+    result = 31*result + (explanation != null? explanation.hashCode():0);\n+    result = 31*result + (healthStatus != null? healthStatus.hashCode():0);\n+    result = 31*result + (suppressed != null? suppressed.hashCode():0);\n     return result;\n   }\n \n+\n   @Override\n-  public String toString()  {\n+  public String toString() {\n     StringBuilder sb = new StringBuilder();\n+\n     String newLine = System.getProperty(\"line.separator\");\n     sb.append(\"class HealthCheck {\" + newLine);\n-    sb.append(\"  checkName: \").append(checkName).append(newLine);\n-    sb.append(\"  explanation: \").append(explanation).append(newLine);\n-    sb.append(\"  healthStatus: \").append(healthStatus).append(newLine);\n-    sb.append(\"  suppressed: \").append(suppressed).append(newLine);\n+    sb.append(\"  checkName: \")\n+      .append(checkName).append(newLine);\n+    sb.append(\"  explanation: \")\n+      .append(explanation).append(newLine);\n+    sb.append(\"  healthStatus: \")\n+      .append(healthStatus).append(newLine);\n+    sb.append(\"  suppressed: \")\n+      .append(suppressed).append(newLine);\n     sb.append(\"}\" + newLine);\n     return sb.toString();\n   }\n-}\n-\n+}\n\\ No newline at end of file\n",
            "diff_size": 87
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
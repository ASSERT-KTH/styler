{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4368",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4368/AdditionalInitialIds.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4368/AdditionalInitialIds.java\nindex 7c95941dd30..bc4db774145 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4368/AdditionalInitialIds.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4368/AdditionalInitialIds.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.unsafe.impl.batchimport;\n \n import org.neo4j.kernel.impl.storemigration.participant.StoreMigrator;\n@@ -30,48 +31,48 @@ import org.neo4j.kernel.impl.transaction.log.TransactionIdStore;\n  * the migration there are no token stores, although nodes and relationships gets importer with existing\n  * token ids in them, so this is a way for the {@link StoreMigrator} to communicate those ids to the\n  * {@link ParallelBatchImporter}.\n- *\n+ * <p>\n  * When actually writing out the counts store on disk the last committed transaction id at that point is also\n  * stored, and that's why the {@link StoreMigrator} needs to communicate that using\n  * {@link #lastCommittedTransactionId()} as well.\n  */\n public interface AdditionalInitialIds\n {\n-    long lastCommittedTransactionId();\n+  long lastCommittedTransactionId();\n \n-    long lastCommittedTransactionChecksum();\n+  long lastCommittedTransactionChecksum();\n \n-    long lastCommittedTransactionLogVersion();\n+  long lastCommittedTransactionLogVersion();\n \n-    long lastCommittedTransactionLogByteOffset();\n+  long lastCommittedTransactionLogByteOffset();\n \n-    /**\n-     * High ids of zero, useful when creating a completely new store with {@link ParallelBatchImporter}.\n-     */\n-    AdditionalInitialIds EMPTY = new AdditionalInitialIds()\n+  /**\n+   * High ids of zero, useful when creating a completely new store with {@link ParallelBatchImporter}.\n+   */\n+  AdditionalInitialIds EMPTY = new AdditionalInitialIds()\n+  {\n+    @Override\n+    public long lastCommittedTransactionId()\n     {\n-        @Override\n-        public long lastCommittedTransactionId()\n-        {\n-            return TransactionIdStore.BASE_TX_ID;\n-        }\n+      return TransactionIdStore.BASE_TX_ID;\n+    }\n \n-        @Override\n-        public long lastCommittedTransactionChecksum()\n-        {\n-            return TransactionIdStore.BASE_TX_CHECKSUM;\n-        }\n+    @Override\n+    public long lastCommittedTransactionChecksum()\n+    {\n+      return TransactionIdStore.BASE_TX_CHECKSUM;\n+    }\n \n-        @Override\n-        public long lastCommittedTransactionLogVersion()\n-        {\n-            return TransactionIdStore.BASE_TX_LOG_VERSION;\n-        }\n+    @Override\n+    public long lastCommittedTransactionLogVersion()\n+    {\n+      return TransactionIdStore.BASE_TX_LOG_VERSION;\n+    }\n \n-        @Override\n-        public long lastCommittedTransactionLogByteOffset()\n-        {\n-            return TransactionIdStore.BASE_TX_LOG_BYTE_OFFSET;\n-        }\n-    };\n+    @Override\n+    public long lastCommittedTransactionLogByteOffset()\n+    {\n+      return TransactionIdStore.BASE_TX_LOG_BYTE_OFFSET;\n+    }\n+  };\n }\n",
            "diff_size": 34
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4368/AdditionalInitialIds.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4368/AdditionalInitialIds.java\nindex 7c95941dd30..168cd4f5b1b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4368/AdditionalInitialIds.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4368/AdditionalInitialIds.java\n@@ -74,4 +74,4 @@ public interface AdditionalInitialIds\n             return TransactionIdStore.BASE_TX_LOG_BYTE_OFFSET;\n         }\n     };\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
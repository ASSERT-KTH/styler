{
    "project_name": "neo4j-neo4j",
    "error_id": "1263",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "45",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1263/PopulationProgress.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1263/PopulationProgress.java\nindex b2959487a3a..3a34ce36559 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1263/PopulationProgress.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1263/PopulationProgress.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.internal.kernel.api;\n \n import java.util.ArrayList;\n@@ -30,8 +31,8 @@ import static java.lang.String.format;\n \n public interface PopulationProgress\n {\n-    PopulationProgress NONE = single( 0, 0 );\n-    PopulationProgress DONE = single( 1, 1 );\n+    PopulationProgress NONE = single(0, 0);\n+    PopulationProgress DONE = single(1, 1);\n \n     long getCompleted();\n \n@@ -41,7 +42,7 @@ public interface PopulationProgress\n \n     IndexPopulationProgress toIndexPopulationProgress();\n \n-    static PopulationProgress single( long completed, long total )\n+    static PopulationProgress single(long completed, long total)\n     {\n         return new PopulationProgress()\n         {\n@@ -66,13 +67,13 @@ public interface PopulationProgress\n             @Override\n             public IndexPopulationProgress toIndexPopulationProgress()\n             {\n-                return new IndexPopulationProgress( completed, total );\n+                return new IndexPopulationProgress(completed, total);\n             }\n \n             @Override\n             public String toString()\n             {\n-                return format( Locale.ROOT, \"[%d/%d:%f]\", completed, total, getProgress() );\n+                return format(Locale.ROOT, \"[%d/%d:%f]\", completed, total, getProgress());\n             }\n         };\n     }\n@@ -84,12 +85,12 @@ public interface PopulationProgress\n \n     class MultiBuilder\n     {\n-        private final List<Pair<PopulationProgress,Float>> parts = new ArrayList<>();\n+        private final List<Pair<PopulationProgress, Float>> parts = new ArrayList<>();\n         private float totalWeight;\n \n-        public MultiBuilder add( PopulationProgress part, float weight )\n+        public MultiBuilder add(PopulationProgress part, float weight)\n         {\n-            parts.add( Pair.of( part, weight ) );\n+            parts.add(Pair.of(part, weight));\n             totalWeight += weight;\n             return this;\n         }\n@@ -102,22 +103,22 @@ public interface PopulationProgress\n                 @Override\n                 public long getCompleted()\n                 {\n-                    return parts.stream().mapToLong( part -> part.first().getCompleted() ).sum();\n+                    return parts.stream().mapToLong(part -> part.first().getCompleted()).sum();\n                 }\n \n                 @Override\n                 public long getTotal()\n                 {\n-                    return parts.stream().mapToLong( part -> part.first().getTotal() ).sum();\n+                    return parts.stream().mapToLong(part -> part.first().getTotal()).sum();\n                 }\n \n                 @Override\n                 public float getProgress()\n                 {\n                     float combined = 0;\n-                    for ( int i = 0; i < parts.size(); i++ )\n+                    for (int i = 0; i < parts.size(); i++)\n                     {\n-                        combined += parts.get( i ).first().getProgress() * weightFactors[i];\n+                        combined += parts.get(i).first().getProgress() * weightFactors[i];\n                     }\n                     return combined;\n                 }\n@@ -132,7 +133,7 @@ public interface PopulationProgress\n                     float progress = getProgress();\n                     long fakeTotal = 1_000; // because we have 4 value digits in the report there\n                     long fakeCompleted = (long) ((float) fakeTotal * progress);\n-                    return new IndexPopulationProgress( fakeCompleted, fakeTotal );\n+                    return new IndexPopulationProgress(fakeCompleted, fakeTotal);\n                 }\n             };\n         }\n@@ -141,9 +142,9 @@ public interface PopulationProgress\n         {\n             float[] weightFactors = new float[parts.size()];\n             float weightSum = 0;\n-            for ( int i = 0; i < parts.size(); i++ )\n+            for (int i = 0; i < parts.size(); i++)\n             {\n-                Pair<PopulationProgress,Float> part = parts.get( i );\n+                Pair<PopulationProgress, Float> part = parts.get(i);\n                 weightFactors[i] = i == parts.size() - 1 ? 1 - weightSum : part.other() / totalWeight;\n                 weightSum += weightFactors[i];\n             }\n",
            "diff_size": 16
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
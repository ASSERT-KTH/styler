{
    "project_name": "Gurux-gurux.dlms.java",
    "error_id": "30",
    "information": {
        "errors": [
            {
                "line": "48",
                "severity": "warning",
                "message": "Line is longer than 80 characters (found 89).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "/**\n * Online help:<br>\n * https://www.gurux.fi/Gurux.DLMS.Objects.GXDLMSPrimeNbOfdmPlcApplicationsIdentification\n */\npublic class GXDLMSPrimeNbOfdmPlcApplicationsIdentification extends GXDLMSObject\n        implements IGXDLMSBase {",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "48",
                    "severity": "warning",
                    "message": "Line is longer than 80 characters (found 89).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "48",
                    "severity": "warning",
                    "message": "Line is longer than 80 characters (found 89).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Gurux-gurux.dlms.java/errored/1/30/GXDLMSPrimeNbOfdmPlcApplicationsIdentification.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Gurux-gurux.dlms.java/intellij/30/GXDLMSPrimeNbOfdmPlcApplicationsIdentification.java\nindex 391e3bc91d9..1b1e8eba45e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Gurux-gurux.dlms.java/errored/1/30/GXDLMSPrimeNbOfdmPlcApplicationsIdentification.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Gurux-gurux.dlms.java/intellij/30/GXDLMSPrimeNbOfdmPlcApplicationsIdentification.java\n@@ -72,9 +72,8 @@ public class GXDLMSPrimeNbOfdmPlcApplicationsIdentification extends GXDLMSObject\n \n     /**\n      * Constructor.\n-     * \n-     * @param ln\n-     *            Logical Name of the object.\n+     *\n+     * @param ln Logical Name of the object.\n      */\n     public GXDLMSPrimeNbOfdmPlcApplicationsIdentification(final String ln) {\n         this(ln, 0);\n@@ -82,29 +81,26 @@ public class GXDLMSPrimeNbOfdmPlcApplicationsIdentification extends GXDLMSObject\n \n     /**\n      * Constructor.\n-     * \n-     * @param ln\n-     *            Logical Name of the object.\n-     * @param sn\n-     *            Short Name of the object.\n+     *\n+     * @param ln Logical Name of the object.\n+     * @param sn Short Name of the object.\n      */\n     public GXDLMSPrimeNbOfdmPlcApplicationsIdentification(final String ln,\n-            final int sn) {\n+                                                          final int sn) {\n         super(ObjectType.PRIME_NB_OFDM_PLC_APPLICATIONS_IDENTIFICATION, ln, sn);\n     }\n \n     /**\n      * @return Textual description of the firmware version running on the\n-     *         device.\n+     * device.\n      */\n     public final String getFirmwareVersion() {\n         return firmwareVersion;\n     }\n \n     /**\n-     * @param value\n-     *            Textual description of the firmware version running on the\n-     *            device.\n+     * @param value Textual description of the firmware version running on the\n+     *              device.\n      */\n     public final void setFirmwareVersion(final String value) {\n         firmwareVersion = value;\n@@ -118,8 +114,7 @@ public class GXDLMSPrimeNbOfdmPlcApplicationsIdentification extends GXDLMSObject\n     }\n \n     /**\n-     * @param value\n-     *            Unique vendor identifier assigned by PRIME Alliance.\n+     * @param value Unique vendor identifier assigned by PRIME Alliance.\n      */\n     public final void setVendorId(final int value) {\n         vendorId = value;\n@@ -133,8 +128,7 @@ public class GXDLMSPrimeNbOfdmPlcApplicationsIdentification extends GXDLMSObject\n     }\n \n     /**\n-     * @param value\n-     *            Vendor assigned unique identifier for specific product.\n+     * @param value Vendor assigned unique identifier for specific product.\n      */\n     public final void setProductId(final int value) {\n         productId = value;\n@@ -142,8 +136,8 @@ public class GXDLMSPrimeNbOfdmPlcApplicationsIdentification extends GXDLMSObject\n \n     @Override\n     public final Object[] getValues() {\n-        return new Object[] { getLogicalName(), firmwareVersion, vendorId,\n-                productId };\n+        return new Object[] {getLogicalName(), firmwareVersion, vendorId,\n+                productId};\n     }\n \n     /*\n@@ -193,15 +187,15 @@ public class GXDLMSPrimeNbOfdmPlcApplicationsIdentification extends GXDLMSObject\n     @Override\n     public final DataType getDataType(final int index) {\n         switch (index) {\n-        case 1:\n-        case 2:\n-            return DataType.OCTET_STRING;\n-        case 3:\n-        case 4:\n-            return DataType.UINT16;\n-        default:\n-            throw new IllegalArgumentException(\n-                    \"getDataType failed. Invalid attribute index.\");\n+            case 1:\n+            case 2:\n+                return DataType.OCTET_STRING;\n+            case 3:\n+            case 4:\n+                return DataType.UINT16;\n+            default:\n+                throw new IllegalArgumentException(\n+                        \"getDataType failed. Invalid attribute index.\");\n         }\n     }\n \n@@ -210,22 +204,22 @@ public class GXDLMSPrimeNbOfdmPlcApplicationsIdentification extends GXDLMSObject\n      */\n     @Override\n     public final Object getValue(final GXDLMSSettings settings,\n-            final ValueEventArgs e) {\n+                                 final ValueEventArgs e) {\n         switch (e.getIndex()) {\n-        case 1:\n-            return GXCommon.logicalNameToBytes(getLogicalName());\n-        case 2:\n-            if (firmwareVersion != null) {\n-                return firmwareVersion.getBytes();\n-            }\n-            break;\n-        case 3:\n-            return vendorId;\n-        case 4:\n-            return productId;\n-        default:\n-            e.setError(ErrorCode.READ_WRITE_DENIED);\n-            break;\n+            case 1:\n+                return GXCommon.logicalNameToBytes(getLogicalName());\n+            case 2:\n+                if (firmwareVersion != null) {\n+                    return firmwareVersion.getBytes();\n+                }\n+                break;\n+            case 3:\n+                return vendorId;\n+            case 4:\n+                return productId;\n+            default:\n+                e.setError(ErrorCode.READ_WRITE_DENIED);\n+                break;\n         }\n         return null;\n     }\n@@ -235,23 +229,23 @@ public class GXDLMSPrimeNbOfdmPlcApplicationsIdentification extends GXDLMSObject\n      */\n     @Override\n     public final void setValue(final GXDLMSSettings settings,\n-            final ValueEventArgs e) {\n+                               final ValueEventArgs e) {\n         switch (e.getIndex()) {\n-        case 1:\n-            setLogicalName(GXCommon.toLogicalName(e.getValue()));\n-            break;\n-        case 2:\n-            firmwareVersion = new String((byte[]) e.getValue());\n-            break;\n-        case 3:\n-            vendorId = ((Number) e.getValue()).intValue();\n-            break;\n-        case 4:\n-            productId = ((Number) e.getValue()).intValue();\n-            break;\n-        default:\n-            e.setError(ErrorCode.READ_WRITE_DENIED);\n-            break;\n+            case 1:\n+                setLogicalName(GXCommon.toLogicalName(e.getValue()));\n+                break;\n+            case 2:\n+                firmwareVersion = new String((byte[]) e.getValue());\n+                break;\n+            case 3:\n+                vendorId = ((Number) e.getValue()).intValue();\n+                break;\n+            case 4:\n+                productId = ((Number) e.getValue()).intValue();\n+                break;\n+            default:\n+                e.setError(ErrorCode.READ_WRITE_DENIED);\n+                break;\n         }\n     }\n \n",
            "diff_size": 59
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "47",
                    "severity": "warning",
                    "message": "Line is longer than 80 characters (found 89).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "50",
                    "severity": "warning",
                    "message": "Line is longer than 80 characters (found 105).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "96",
                    "severity": "warning",
                    "message": "Line is longer than 80 characters (found 90).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "162",
                    "severity": "warning",
                    "message": "Line is longer than 80 characters (found 87).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "173",
                    "severity": "warning",
                    "message": "Line is longer than 80 characters (found 85).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "175",
                    "severity": "warning",
                    "message": "Line is longer than 80 characters (found 85).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "235",
                    "severity": "warning",
                    "message": "Line is longer than 80 characters (found 89).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "261",
                    "severity": "warning",
                    "message": "Line is longer than 80 characters (found 87).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "284",
                    "severity": "warning",
                    "message": "Line is longer than 80 characters (found 112).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "293",
                    "severity": "warning",
                    "message": "Line is longer than 80 characters (found 112).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Gurux-gurux.dlms.java/errored/1/30/GXDLMSPrimeNbOfdmPlcApplicationsIdentification.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Gurux-gurux.dlms.java/codebuff/30/GXDLMSPrimeNbOfdmPlcApplicationsIdentification.java\nindex 391e3bc91d9..f699d074e2d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Gurux-gurux.dlms.java/errored/1/30/GXDLMSPrimeNbOfdmPlcApplicationsIdentification.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Gurux-gurux.dlms.java/codebuff/30/GXDLMSPrimeNbOfdmPlcApplicationsIdentification.java\n@@ -35,7 +35,6 @@\n package gurux.dlms.objects;\n \n import javax.xml.stream.XMLStreamException;\n-\n import gurux.dlms.GXDLMSSettings;\n import gurux.dlms.ValueEventArgs;\n import gurux.dlms.enums.DataType;\n@@ -47,8 +46,8 @@ import gurux.dlms.internal.GXCommon;\n  * Online help:<br>\n  * https://www.gurux.fi/Gurux.DLMS.Objects.GXDLMSPrimeNbOfdmPlcApplicationsIdentification\n  */\n-public class GXDLMSPrimeNbOfdmPlcApplicationsIdentification extends GXDLMSObject\n-        implements IGXDLMSBase {\n+\n+public class GXDLMSPrimeNbOfdmPlcApplicationsIdentification extends GXDLMSObject implements IGXDLMSBase {\n     /**\n      * Textual description of the firmware version running on the device.\n      */\n@@ -66,6 +65,8 @@ public class GXDLMSPrimeNbOfdmPlcApplicationsIdentification extends GXDLMSObject\n     /**\n      * Constructor.\n      */\n+\n+\n     public GXDLMSPrimeNbOfdmPlcApplicationsIdentification() {\n         this(\"0.0.28.7.0.255\", 0);\n     }\n@@ -76,6 +77,8 @@ public class GXDLMSPrimeNbOfdmPlcApplicationsIdentification extends GXDLMSObject\n      * @param ln\n      *            Logical Name of the object.\n      */\n+\n+\n     public GXDLMSPrimeNbOfdmPlcApplicationsIdentification(final String ln) {\n         this(ln, 0);\n     }\n@@ -88,8 +91,9 @@ public class GXDLMSPrimeNbOfdmPlcApplicationsIdentification extends GXDLMSObject\n      * @param sn\n      *            Short Name of the object.\n      */\n-    public GXDLMSPrimeNbOfdmPlcApplicationsIdentification(final String ln,\n-            final int sn) {\n+\n+\n+    public GXDLMSPrimeNbOfdmPlcApplicationsIdentification(final String ln, final int sn) {\n         super(ObjectType.PRIME_NB_OFDM_PLC_APPLICATIONS_IDENTIFICATION, ln, sn);\n     }\n \n@@ -97,6 +101,8 @@ public class GXDLMSPrimeNbOfdmPlcApplicationsIdentification extends GXDLMSObject\n      * @return Textual description of the firmware version running on the\n      *         device.\n      */\n+\n+\n     public final String getFirmwareVersion() {\n         return firmwareVersion;\n     }\n@@ -106,6 +112,8 @@ public class GXDLMSPrimeNbOfdmPlcApplicationsIdentification extends GXDLMSObject\n      *            Textual description of the firmware version running on the\n      *            device.\n      */\n+\n+\n     public final void setFirmwareVersion(final String value) {\n         firmwareVersion = value;\n     }\n@@ -113,6 +121,8 @@ public class GXDLMSPrimeNbOfdmPlcApplicationsIdentification extends GXDLMSObject\n     /**\n      * @return Unique vendor identifier assigned by PRIME Alliance.\n      */\n+\n+\n     public final int getVendorId() {\n         return vendorId;\n     }\n@@ -121,6 +131,8 @@ public class GXDLMSPrimeNbOfdmPlcApplicationsIdentification extends GXDLMSObject\n      * @param value\n      *            Unique vendor identifier assigned by PRIME Alliance.\n      */\n+\n+\n     public final void setVendorId(final int value) {\n         vendorId = value;\n     }\n@@ -128,6 +140,8 @@ public class GXDLMSPrimeNbOfdmPlcApplicationsIdentification extends GXDLMSObject\n     /**\n      * @return Vendor assigned unique identifier for specific product.\n      */\n+\n+\n     public final int getProductId() {\n         return productId;\n     }\n@@ -136,27 +150,29 @@ public class GXDLMSPrimeNbOfdmPlcApplicationsIdentification extends GXDLMSObject\n      * @param value\n      *            Vendor assigned unique identifier for specific product.\n      */\n+\n+\n     public final void setProductId(final int value) {\n         productId = value;\n     }\n \n+\n     @Override\n     public final Object[] getValues() {\n-        return new Object[] { getLogicalName(), firmwareVersion, vendorId,\n-                productId };\n+        return new Object[] { getLogicalName(), firmwareVersion, vendorId, productId };\n     }\n \n     /*\n      * Returns collection of attributes to read. If attribute is static and\n      * already read or device is returned HW error it is not returned.\n      */\n+\n+\n     @Override\n     public final int[] getAttributeIndexToRead(final boolean all) {\n-        java.util.ArrayList<Integer> attributes =\n-                new java.util.ArrayList<Integer>();\n+        java.util.ArrayList<Integer> attributes = new java.util.ArrayList<Integer>();\n         // LN is static and read only once.\n-        if (all || getLogicalName() == null\n-                || getLogicalName().compareTo(\"\") == 0) {\n+        if (all || getLogicalName() == null || getLogicalName().compareTo(\"\") == 0) {\n             attributes.add(1);\n         }\n         // FirmwareVersion\n@@ -177,6 +193,8 @@ public class GXDLMSPrimeNbOfdmPlcApplicationsIdentification extends GXDLMSObject\n     /*\n      * Returns amount of attributes.\n      */\n+\n+\n     @Override\n     public final int getAttributeCount() {\n         return 4;\n@@ -185,11 +203,14 @@ public class GXDLMSPrimeNbOfdmPlcApplicationsIdentification extends GXDLMSObject\n     /*\n      * Returns amount of methods.\n      */\n+\n+\n     @Override\n     public final int getMethodCount() {\n         return 0;\n     }\n \n+\n     @Override\n     public final DataType getDataType(final int index) {\n         switch (index) {\n@@ -201,16 +222,17 @@ public class GXDLMSPrimeNbOfdmPlcApplicationsIdentification extends GXDLMSObject\n             return DataType.UINT16;\n         default:\n             throw new IllegalArgumentException(\n-                    \"getDataType failed. Invalid attribute index.\");\n+                \"getDataType failed. Invalid attribute index.\");\n         }\n     }\n \n     /*\n      * Returns value of given attribute.\n      */\n+\n+\n     @Override\n-    public final Object getValue(final GXDLMSSettings settings,\n-            final ValueEventArgs e) {\n+    public final Object getValue(final GXDLMSSettings settings, final ValueEventArgs e) {\n         switch (e.getIndex()) {\n         case 1:\n             return GXCommon.logicalNameToBytes(getLogicalName());\n@@ -233,9 +255,10 @@ public class GXDLMSPrimeNbOfdmPlcApplicationsIdentification extends GXDLMSObject\n     /*\n      * Set value of given attribute.\n      */\n+\n+\n     @Override\n-    public final void setValue(final GXDLMSSettings settings,\n-            final ValueEventArgs e) {\n+    public final void setValue(final GXDLMSSettings settings, final ValueEventArgs e) {\n         switch (e.getIndex()) {\n         case 1:\n             setLogicalName(GXCommon.toLogicalName(e.getValue()));\n@@ -255,21 +278,27 @@ public class GXDLMSPrimeNbOfdmPlcApplicationsIdentification extends GXDLMSObject\n         }\n     }\n \n+\n     @Override\n-    public final void load(final GXXmlReader reader) throws XMLStreamException {\n+    public final void load(final GXXmlReader reader)\n+                                                                                     throws XMLStreamException {\n         firmwareVersion = reader.readElementContentAsString(\"FirmwareVersion\");\n         vendorId = reader.readElementContentAsInt(\"VendorId\");\n         productId = reader.readElementContentAsInt(\"ProductId\");\n     }\n \n+\n     @Override\n-    public final void save(final GXXmlWriter writer) throws XMLStreamException {\n+    public final void save(final GXXmlWriter writer)\n+                                                                                     throws XMLStreamException {\n         writer.writeElementString(\"FirmwareVersion\", firmwareVersion);\n         writer.writeElementString(\"VendorId\", vendorId);\n         writer.writeElementString(\"ProductId\", productId);\n     }\n \n+\n     @Override\n     public final void postLoad(final GXXmlReader reader) {\n+\n     }\n }\n\\ No newline at end of file\n",
            "diff_size": 53
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "48",
                    "severity": "warning",
                    "message": "Line is longer than 80 characters (found 89).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "48",
                    "severity": "warning",
                    "message": "Line is longer than 80 characters (found 89).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3930",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "76",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "107",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "64",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "148",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "150",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "150",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "162",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "106",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "174",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "174",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "179",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "179",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "186",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "186",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "189",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "189",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "191",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "191",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "195",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "195",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "199",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "199",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "200",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "200",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "200",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "202",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "202",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "206",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "206",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "208",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "208",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "212",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "212",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "214",
                    "column": "82",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "214",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "218",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "218",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "223",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "223",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "226",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "226",
                    "column": "17",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "234",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "234",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "236",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "236",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "240",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "240",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "246",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "246",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "252",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "252",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "258",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "258",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "264",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "264",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "273",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "273",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "279",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "279",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "285",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "285",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "290",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "290",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "297",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "297",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "308",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "308",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "314",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "314",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "320",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "320",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "322",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "322",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "324",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "324",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "331",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "331",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "333",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "333",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "336",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3930/CountsTracker.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3930/CountsTracker.java\nindex 68a0a021633..2c46e50c579 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3930/CountsTracker.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3930/CountsTracker.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.store.counts;\n \n import java.io.File;\n@@ -58,285 +59,284 @@ import static org.neo4j.kernel.impl.store.counts.keys.CountsKeyFactory.relations\n \n /**\n  * This is the main class for the counts store.\n- *\n+ * <p>\n  * The counts store is a key/value store, where key/value entries are stored sorted by the key in ascending unsigned\n  * (big endian) order. These store files are immutable, and on store-flush the implementation swaps the read and write\n  * file in a {@linkplain Rotation.Strategy#LEFT_RIGHT left/right pattern}.\n- *\n+ * <p>\n  * This class defines {@linkplain KeyFormat the key serialisation format},\n  * {@linkplain CountsUpdater the value serialisation format}, and\n  * {@linkplain #HEADER_FIELDS the header fields}.\n- *\n+ * <p>\n  * The {@linkplain AbstractKeyValueStore parent class} defines the life cycle of the store.\n- *\n+ * <p>\n  * The pattern of immutable store files, and rotation strategy, et.c. is defined in the\n  * {@code kvstore}-package, see {@link org.neo4j.kernel.impl.store.kvstore.KeyValueStoreFile} for a good entry point.\n  */\n-@Rotation( value = Rotation.Strategy.LEFT_RIGHT, parameters = {CountsTracker.LEFT, CountsTracker.RIGHT} )\n+@Rotation(value = Rotation.Strategy.LEFT_RIGHT, parameters = {CountsTracker.LEFT, CountsTracker.RIGHT})\n public class CountsTracker extends AbstractKeyValueStore<CountsKey>\n-        implements CountsVisitor.Visitable, CountsAccessor\n+    implements CountsVisitor.Visitable, CountsAccessor\n {\n-    /** The format specifier for the current version of the store file format. */\n-    private static final byte[] FORMAT = {'N', 'e', 'o', 'C', 'o', 'u', 'n', 't',\n-                                          'S', 't', 'o', 'r', 'e', /**/0, 2, 'V'};\n-    @SuppressWarnings( \"unchecked\" )\n-    private static final HeaderField<?>[] HEADER_FIELDS = new HeaderField[]{FileVersion.FILE_VERSION};\n-    public static final String LEFT = \".a\";\n-    public static final String RIGHT = \".b\";\n-    public static final String TYPE_DESCRIPTOR = \"CountsStore\";\n-\n-    public CountsTracker( final LogProvider logProvider, FileSystemAbstraction fs, PageCache pages, Config config,\n-            File baseFile, VersionContextSupplier versionContextSupplier )\n+  /**\n+   * The format specifier for the current version of the store file format.\n+   */\n+  private static final byte[] FORMAT = {'N', 'e', 'o', 'C', 'o', 'u', 'n', 't',\n+      'S', 't', 'o', 'r', 'e', /**/0, 2, 'V'};\n+  @SuppressWarnings(\"unchecked\")\n+  private static final HeaderField<?>[] HEADER_FIELDS = new HeaderField[] {FileVersion.FILE_VERSION};\n+  public static final String LEFT = \".a\";\n+  public static final String RIGHT = \".b\";\n+  public static final String TYPE_DESCRIPTOR = \"CountsStore\";\n+\n+  public CountsTracker(final LogProvider logProvider, FileSystemAbstraction fs, PageCache pages, Config config,\n+                       File baseFile, VersionContextSupplier versionContextSupplier)\n+  {\n+    this(logProvider, fs, pages, config, baseFile, Clocks.nanoClock(), versionContextSupplier);\n+  }\n+\n+  public CountsTracker(final LogProvider logProvider, FileSystemAbstraction fs, PageCache pages, Config config,\n+                       File baseFile, SystemNanoClock clock, VersionContextSupplier versionContextSupplier)\n+  {\n+    super(fs, pages, baseFile, new CountsTrackerRotationMonitor(logProvider), logProvider.getLog(CountsTracker.class).infoLogger(),\n+        new RotationTimerFactory(clock, config.get(counts_store_rotation_timeout).toMillis()),\n+        versionContextSupplier, 16, 16, HEADER_FIELDS);\n+  }\n+\n+  public CountsTracker setInitializer(final DataInitializer<Updater> initializer)\n+  {\n+    setEntryUpdaterInitializer(new DataInitializer<EntryUpdater<CountsKey>>()\n     {\n-        this( logProvider, fs, pages, config, baseFile, Clocks.nanoClock(), versionContextSupplier );\n-    }\n-\n-    public CountsTracker( final LogProvider logProvider, FileSystemAbstraction fs, PageCache pages, Config config,\n-                          File baseFile, SystemNanoClock clock, VersionContextSupplier versionContextSupplier )\n+      @Override\n+      public void initialize(EntryUpdater<CountsKey> updater)\n+      {\n+        initializer.initialize(new CountsUpdater(updater));\n+      }\n+\n+      @Override\n+      public long initialVersion()\n+      {\n+        return initializer.initialVersion();\n+      }\n+    });\n+    return this;\n+  }\n+\n+  /**\n+   * @param txId the lowest transaction id that must be included in the snapshot created by the rotation.\n+   * @return the highest transaction id that was included in the snapshot created by the rotation.\n+   */\n+  public long rotate(long txId) throws IOException\n+  {\n+    return prepareRotation(txId).rotate();\n+  }\n+\n+  public long txId()\n+  {\n+    return headers().get(FileVersion.FILE_VERSION).txId;\n+  }\n+\n+  public long minorVersion()\n+  {\n+    return headers().get(FileVersion.FILE_VERSION).minorVersion;\n+  }\n+\n+  public Register.DoubleLongRegister get(CountsKey key, Register.DoubleLongRegister target)\n+  {\n+    try\n     {\n-        super( fs, pages, baseFile, new CountsTrackerRotationMonitor( logProvider ), logProvider.getLog( CountsTracker.class ).infoLogger(),\n-                new RotationTimerFactory( clock, config.get( counts_store_rotation_timeout ).toMillis() ),\n-                versionContextSupplier, 16, 16, HEADER_FIELDS );\n-    }\n-\n-    public CountsTracker setInitializer( final DataInitializer<Updater> initializer )\n+      return lookup(key, new ValueRegister(target));\n+    } catch (IOException e)\n     {\n-        setEntryUpdaterInitializer( new DataInitializer<EntryUpdater<CountsKey>>()\n-        {\n-            @Override\n-            public void initialize( EntryUpdater<CountsKey> updater )\n-            {\n-                initializer.initialize( new CountsUpdater( updater ) );\n-            }\n-\n-            @Override\n-            public long initialVersion()\n-            {\n-                return initializer.initialVersion();\n-            }\n-        } );\n-        return this;\n+      throw new UnderlyingStorageException(e);\n     }\n-\n-    /**\n-     * @param txId the lowest transaction id that must be included in the snapshot created by the rotation.\n-     * @return the highest transaction id that was included in the snapshot created by the rotation.\n-     */\n-    public long rotate( long txId ) throws IOException\n+  }\n+\n+  @Override\n+  public Register.DoubleLongRegister nodeCount(int labelId, final Register.DoubleLongRegister target)\n+  {\n+    return get(nodeKey(labelId), target);\n+  }\n+\n+  @Override\n+  public Register.DoubleLongRegister relationshipCount(int startLabelId, int typeId, int endLabelId,\n+                                                       Register.DoubleLongRegister target)\n+  {\n+    return get(relationshipKey(startLabelId, typeId, endLabelId), target);\n+  }\n+\n+  @Override\n+  public Register.DoubleLongRegister indexUpdatesAndSize(long indexId, Register.DoubleLongRegister target)\n+  {\n+    return get(indexStatisticsKey(indexId), target);\n+  }\n+\n+  @Override\n+  public Register.DoubleLongRegister indexSample(long indexId, Register.DoubleLongRegister target)\n+  {\n+    return get(indexSampleKey(indexId), target);\n+  }\n+\n+  public Optional<CountsAccessor.Updater> apply(long txId)\n+  {\n+    return updater(txId).map(CountsUpdater::new);\n+  }\n+\n+  public CountsAccessor.IndexStatsUpdater updateIndexCounts()\n+  {\n+    return new CountsUpdater(updater());\n+  }\n+\n+  public CountsAccessor.Updater reset(long txId)\n+  {\n+    return new CountsUpdater(resetter(txId));\n+  }\n+\n+  @Override\n+  public void accept(final CountsVisitor visitor)\n+  {\n+    try\n     {\n-        return prepareRotation( txId ).rotate();\n-    }\n-\n-    public long txId()\n+      visitAll(new DelegatingVisitor(visitor));\n+    } catch (IOException e)\n     {\n-        return headers().get( FileVersion.FILE_VERSION ).txId;\n+      throw new UnderlyingStorageException(e);\n     }\n-\n-    public long minorVersion()\n+  }\n+\n+  protected void visitFile(File path, CountsVisitor visitor) throws IOException\n+  {\n+    super.visitFile(path, new DelegatingVisitor(visitor));\n+  }\n+\n+  @Override\n+  protected Headers initialHeaders(long txId)\n+  {\n+    return Headers.headersBuilder().put(FileVersion.FILE_VERSION, new FileVersion(txId)).headers();\n+  }\n+\n+  @Override\n+  protected int compareHeaders(Headers lhs, Headers rhs)\n+  {\n+    return compare(lhs.get(FileVersion.FILE_VERSION), rhs.get(FileVersion.FILE_VERSION));\n+  }\n+\n+  static int compare(FileVersion lhs, FileVersion rhs)\n+  {\n+    int cmp = Long.compare(lhs.txId, rhs.txId);\n+    if (cmp == 0)\n     {\n-        return headers().get( FileVersion.FILE_VERSION ).minorVersion;\n+      cmp = Long.compare(lhs.minorVersion, rhs.minorVersion);\n     }\n-\n-    public Register.DoubleLongRegister get( CountsKey key, Register.DoubleLongRegister target )\n+    return cmp;\n+  }\n+\n+  @Override\n+  protected void writeKey(CountsKey key, final WritableBuffer buffer)\n+  {\n+    key.accept(new KeyFormat(buffer), 0, 0);\n+  }\n+\n+  @Override\n+  protected CountsKey readKey(ReadableBuffer key) throws UnknownKey\n+  {\n+    return KeyFormat.readKey(key);\n+  }\n+\n+  @Override\n+  protected boolean include(CountsKey countsKey, ReadableBuffer value)\n+  {\n+    return !value.allZeroes();\n+  }\n+\n+  @Override\n+  protected void updateHeaders(Headers.Builder headers, long version)\n+  {\n+    headers.put(FileVersion.FILE_VERSION, headers.get(FileVersion.FILE_VERSION).update(version));\n+  }\n+\n+  @Override\n+  protected long version(Headers headers)\n+  {\n+    return headers == null ? FileVersion.INITIAL_TX_ID : headers.get(FileVersion.FILE_VERSION).txId;\n+  }\n+\n+  @Override\n+  protected void writeFormatSpecifier(WritableBuffer formatSpecifier)\n+  {\n+    formatSpecifier.put(0, FORMAT);\n+  }\n+\n+  private static class CountsTrackerRotationMonitor implements RotationMonitor\n+  {\n+    final Log log;\n+\n+    CountsTrackerRotationMonitor(LogProvider logProvider)\n     {\n-        try\n-        {\n-            return lookup( key, new ValueRegister( target ) );\n-        }\n-        catch ( IOException e )\n-        {\n-            throw new UnderlyingStorageException( e );\n-        }\n+      log = logProvider.getLog(CountsTracker.class);\n     }\n \n     @Override\n-    public Register.DoubleLongRegister nodeCount( int labelId, final Register.DoubleLongRegister target )\n+    public void failedToOpenStoreFile(File path, Exception error)\n     {\n-        return get( nodeKey( labelId ), target );\n+      log.error(\"Failed to open counts store file: \" + path, error);\n     }\n \n     @Override\n-    public Register.DoubleLongRegister relationshipCount( int startLabelId, int typeId, int endLabelId,\n-                                                          Register.DoubleLongRegister target )\n+    public void beforeRotation(File source, File target, Headers headers)\n     {\n-        return get( relationshipKey( startLabelId, typeId, endLabelId ), target );\n     }\n \n     @Override\n-    public Register.DoubleLongRegister indexUpdatesAndSize( long indexId, Register.DoubleLongRegister target )\n+    public void rotationSucceeded(File source, File target, Headers headers)\n     {\n-        return get( indexStatisticsKey( indexId ), target );\n+      log.info(format(\"Rotated counts store at transaction %d to [%s], from [%s].\",\n+          headers.get(FileVersion.FILE_VERSION).txId, target, source));\n     }\n \n     @Override\n-    public Register.DoubleLongRegister indexSample( long indexId, Register.DoubleLongRegister target )\n+    public void rotationFailed(File source, File target, Headers headers, Exception e)\n     {\n-        return get( indexSampleKey( indexId ), target );\n+      log.error(format(\"Failed to rotate counts store at transaction %d to [%s], from [%s].\",\n+          headers.get(FileVersion.FILE_VERSION).txId, target, source), e);\n     }\n+  }\n \n-    public Optional<CountsAccessor.Updater> apply( long txId )\n-    {\n-        return updater( txId ).map( CountsUpdater::new );\n-    }\n+  private class DelegatingVisitor extends Visitor implements MetadataVisitor\n+  {\n+    private final CountsVisitor visitor;\n \n-    public CountsAccessor.IndexStatsUpdater updateIndexCounts()\n+    DelegatingVisitor(CountsVisitor visitor)\n     {\n-        return new CountsUpdater( updater() );\n-    }\n-\n-    public CountsAccessor.Updater reset( long txId )\n-    {\n-        return new CountsUpdater( resetter( txId ) );\n+      this.visitor = visitor;\n     }\n \n     @Override\n-    public void accept( final CountsVisitor visitor )\n-    {\n-        try\n-        {\n-            visitAll( new DelegatingVisitor( visitor ) );\n-        }\n-        catch ( IOException e )\n-        {\n-            throw new UnderlyingStorageException( e );\n-        }\n-    }\n-\n-    protected void visitFile( File path, CountsVisitor visitor ) throws IOException\n+    protected boolean visitKeyValuePair(CountsKey key, ReadableBuffer value)\n     {\n-        super.visitFile( path, new DelegatingVisitor( visitor ) );\n+      key.accept(visitor, value.getLong(0), value.getLong(8));\n+      return true;\n     }\n \n+    @SuppressWarnings(\"unchecked\")\n     @Override\n-    protected Headers initialHeaders( long txId )\n+    public void visitMetadata(File path, Headers headers, int entryCount)\n     {\n-        return Headers.headersBuilder().put( FileVersion.FILE_VERSION, new FileVersion( txId ) ).headers();\n+      if (visitor instanceof MetadataVisitor)\n+      {\n+        ((MetadataVisitor) visitor).visitMetadata(path, headers, entryCount);\n+      }\n     }\n \n     @Override\n-    protected int compareHeaders( Headers lhs, Headers rhs )\n-    {\n-        return compare( lhs.get( FileVersion.FILE_VERSION ), rhs.get( FileVersion.FILE_VERSION ) );\n-    }\n-\n-    static int compare( FileVersion lhs, FileVersion rhs )\n-    {\n-        int cmp = Long.compare( lhs.txId, rhs.txId );\n-        if ( cmp == 0 )\n-        {\n-            cmp = Long.compare( lhs.minorVersion, rhs.minorVersion );\n-        }\n-        return cmp;\n-    }\n-\n-    @Override\n-    protected void writeKey( CountsKey key, final WritableBuffer buffer )\n-    {\n-        key.accept( new KeyFormat( buffer ), 0, 0 );\n-    }\n-\n-    @Override\n-    protected CountsKey readKey( ReadableBuffer key ) throws UnknownKey\n-    {\n-        return KeyFormat.readKey( key );\n-    }\n-\n-    @Override\n-    protected boolean include( CountsKey countsKey, ReadableBuffer value )\n-    {\n-        return !value.allZeroes();\n-    }\n-\n-    @Override\n-    protected void updateHeaders( Headers.Builder headers, long version )\n-    {\n-        headers.put( FileVersion.FILE_VERSION, headers.get( FileVersion.FILE_VERSION ).update( version ) );\n-    }\n-\n-    @Override\n-    protected long version( Headers headers )\n-    {\n-        return headers == null ? FileVersion.INITIAL_TX_ID : headers.get( FileVersion.FILE_VERSION ).txId;\n-    }\n-\n-    @Override\n-    protected void writeFormatSpecifier( WritableBuffer formatSpecifier )\n-    {\n-        formatSpecifier.put( 0, FORMAT );\n-    }\n-\n-    private static class CountsTrackerRotationMonitor implements RotationMonitor\n-    {\n-        final Log log;\n-\n-        CountsTrackerRotationMonitor( LogProvider logProvider )\n-        {\n-            log = logProvider.getLog( CountsTracker.class );\n-        }\n-\n-        @Override\n-        public void failedToOpenStoreFile( File path, Exception error )\n-        {\n-            log.error( \"Failed to open counts store file: \" + path, error );\n-        }\n-\n-        @Override\n-        public void beforeRotation( File source, File target, Headers headers )\n-        {\n-        }\n-\n-        @Override\n-        public void rotationSucceeded( File source, File target, Headers headers )\n-        {\n-            log.info( format( \"Rotated counts store at transaction %d to [%s], from [%s].\",\n-                    headers.get( FileVersion.FILE_VERSION ).txId, target, source ) );\n-        }\n-\n-        @Override\n-        public void rotationFailed( File source, File target, Headers headers, Exception e )\n-        {\n-            log.error( format( \"Failed to rotate counts store at transaction %d to [%s], from [%s].\",\n-                    headers.get( FileVersion.FILE_VERSION ).txId, target, source ), e );\n-        }\n-    }\n-\n-    private class DelegatingVisitor extends Visitor implements MetadataVisitor\n+    protected boolean visitUnknownKey(UnknownKey exception, ReadableBuffer key, ReadableBuffer value)\n     {\n-        private final CountsVisitor visitor;\n-\n-        DelegatingVisitor( CountsVisitor visitor )\n-        {\n-            this.visitor = visitor;\n-        }\n-\n-        @Override\n-        protected boolean visitKeyValuePair( CountsKey key, ReadableBuffer value )\n-        {\n-            key.accept( visitor, value.getLong( 0 ), value.getLong( 8 ) );\n-            return true;\n-        }\n-\n-        @SuppressWarnings( \"unchecked\" )\n-        @Override\n-        public void visitMetadata( File path, Headers headers, int entryCount )\n-        {\n-            if ( visitor instanceof MetadataVisitor )\n-            {\n-                ((MetadataVisitor) visitor).visitMetadata( path, headers, entryCount );\n-            }\n-        }\n-\n-        @Override\n-        protected boolean visitUnknownKey( UnknownKey exception, ReadableBuffer key, ReadableBuffer value )\n-        {\n-            if ( visitor instanceof UnknownKey.Visitor )\n-            {\n-                return ((UnknownKey.Visitor) visitor).visitUnknownKey( key, value );\n-            }\n-            else\n-            {\n-                return super.visitUnknownKey( exception, key, value );\n-            }\n-        }\n+      if (visitor instanceof UnknownKey.Visitor)\n+      {\n+        return ((UnknownKey.Visitor) visitor).visitUnknownKey(key, value);\n+      } else\n+      {\n+        return super.visitUnknownKey(exception, key, value);\n+      }\n     }\n+  }\n }\n",
            "diff_size": 388
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "96",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 200).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "98",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 280).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3930/CountsTracker.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3930/CountsTracker.java\nindex 68a0a021633..1406e1c86dd 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3930/CountsTracker.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3930/CountsTracker.java\n@@ -73,17 +73,19 @@ import static org.neo4j.kernel.impl.store.counts.keys.CountsKeyFactory.relations\n  * {@code kvstore}-package, see {@link org.neo4j.kernel.impl.store.kvstore.KeyValueStoreFile} for a good entry point.\n  */\n @Rotation( value = Rotation.Strategy.LEFT_RIGHT, parameters = {CountsTracker.LEFT, CountsTracker.RIGHT} )\n-public class CountsTracker extends AbstractKeyValueStore<CountsKey>\n-        implements CountsVisitor.Visitable, CountsAccessor\n+public class CountsTracker extends AbstractKeyValueStore<CountsKey> implements CountsVisitor.Visitable, CountsAccessor\n {\n     /** The format specifier for the current version of the store file format. */\n-    private static final byte[] FORMAT = {'N', 'e', 'o', 'C', 'o', 'u', 'n', 't',\n-                                          'S', 't', 'o', 'r', 'e', /**/0, 2, 'V'};\n-    @SuppressWarnings( \"unchecked\" )\n+    private static final byte[] FORMAT = {'N', 'e', 'o', 'C', 'o', 'u', 'n', 't', 'S', 't', 'o', 'r', 'e', /**/0, 2, 'V'};\n+\n+@SuppressWarnings( \"unchecked\" )\n     private static final HeaderField<?>[] HEADER_FIELDS = new HeaderField[]{FileVersion.FILE_VERSION};\n-    public static final String LEFT = \".a\";\n-    public static final String RIGHT = \".b\";\n-    public static final String TYPE_DESCRIPTOR = \"CountsStore\";\n+\n+public static final String LEFT = \".a\";\n+\n+public static final String RIGHT = \".b\";\n+\n+public static final String TYPE_DESCRIPTOR = \"CountsStore\";\n \n     public CountsTracker( final LogProvider logProvider, FileSystemAbstraction fs, PageCache pages, Config config,\n             File baseFile, VersionContextSupplier versionContextSupplier )\n@@ -91,12 +93,9 @@ public class CountsTracker extends AbstractKeyValueStore<CountsKey>\n         this( logProvider, fs, pages, config, baseFile, Clocks.nanoClock(), versionContextSupplier );\n     }\n \n-    public CountsTracker( final LogProvider logProvider, FileSystemAbstraction fs, PageCache pages, Config config,\n-                          File baseFile, SystemNanoClock clock, VersionContextSupplier versionContextSupplier )\n-    {\n-        super( fs, pages, baseFile, new CountsTrackerRotationMonitor( logProvider ), logProvider.getLog( CountsTracker.class ).infoLogger(),\n-                new RotationTimerFactory( clock, config.get( counts_store_rotation_timeout ).toMillis() ),\n-                versionContextSupplier, 16, 16, HEADER_FIELDS );\n+    public CountsTracker( final LogProvider logProvider, FileSystemAbstraction fs, PageCache pages, Config config, File baseFile, SystemNanoClock clock, VersionContextSupplier versionContextSupplier )\n+{\n+        super( fs, pages, baseFile, new CountsTrackerRotationMonitor( logProvider ), logProvider.getLog( CountsTracker.class ).infoLogger(), new RotationTimerFactory( clock, config.get( counts_store_rotation_timeout ).toMillis() ), versionContextSupplier, 16, 16, HEADER_FIELDS );\n     }\n \n     public CountsTracker setInitializer( final DataInitializer<Updater> initializer )\n@@ -156,9 +155,8 @@ public class CountsTracker extends AbstractKeyValueStore<CountsKey>\n     }\n \n     @Override\n-    public Register.DoubleLongRegister relationshipCount( int startLabelId, int typeId, int endLabelId,\n-                                                          Register.DoubleLongRegister target )\n-    {\n+    public Register.DoubleLongRegister relationshipCount( int startLabelId, int typeId, int endLabelId, Register.DoubleLongRegister target )\n+{\n         return get( relationshipKey( startLabelId, typeId, endLabelId ), target );\n     }\n \n@@ -226,7 +224,8 @@ public class CountsTracker extends AbstractKeyValueStore<CountsKey>\n         {\n             cmp = Long.compare( lhs.minorVersion, rhs.minorVersion );\n         }\n-        return cmp;\n+\n+return cmp;\n     }\n \n     @Override\n@@ -297,7 +296,7 @@ public class CountsTracker extends AbstractKeyValueStore<CountsKey>\n         {\n             log.error( format( \"Failed to rotate counts store at transaction %d to [%s], from [%s].\",\n                     headers.get( FileVersion.FILE_VERSION ).txId, target, source ), e );\n-        }\n+    }\n     }\n \n     private class DelegatingVisitor extends Visitor implements MetadataVisitor\n@@ -339,4 +338,4 @@ public class CountsTracker extends AbstractKeyValueStore<CountsKey>\n             }\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 24
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
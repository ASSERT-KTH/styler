{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3913",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "73",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "176",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "176",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "180",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "180",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "186",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "186",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "188",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "188",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "189",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "191",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "191",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "201",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "201",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "201",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "218",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "218",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "220",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "220",
                    "column": "16",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "222",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "222",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "226",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "226",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "230",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "230",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "230",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "240",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "240",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "246",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "246",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "249",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "249",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "249",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "252",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "254",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "254",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "258",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "258",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "266",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "266",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "271",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "271",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "278",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "278",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "281",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "281",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "289",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "289",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "302",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "303",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "313",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "313",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "321",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "321",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "323",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "323",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "336",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "336",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "349",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "349",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "355",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "355",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "362",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "362",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "364",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "364",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "371",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "371",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3913/NetworkReceiver.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3913/NetworkReceiver.java\nindex 6584ec27f75..ca0b1819c3a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3913/NetworkReceiver.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3913/NetworkReceiver.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.cluster.com;\n \n import org.jboss.netty.bootstrap.ServerBootstrap;\n@@ -64,316 +65,311 @@ import static org.neo4j.helpers.NamedThreadFactory.daemon;\n  * sending outgoing messages\n  */\n public class NetworkReceiver\n-        implements MessageSource, Lifecycle\n+    implements MessageSource, Lifecycle\n {\n-    public interface Monitor\n-        extends NamedThreadFactory.Monitor\n-    {\n-        void receivedMessage( Message message );\n+  public interface Monitor\n+      extends NamedThreadFactory.Monitor\n+  {\n+    void receivedMessage(Message message);\n \n-        void processedMessage( Message message );\n-    }\n+    void processedMessage(Message message);\n+  }\n \n-    public interface Configuration\n-    {\n-        HostnamePort clusterServer();\n+  public interface Configuration\n+  {\n+    HostnamePort clusterServer();\n \n-        int defaultPort();\n+    int defaultPort();\n \n-        String name(); // Name of this cluster instance. Null in most cases, but tools may use e.g. \"Backup\"\n-    }\n+    String name(); // Name of this cluster instance. Null in most cases, but tools may use e.g. \"Backup\"\n+  }\n \n-    public interface NetworkChannelsListener\n-    {\n-        void listeningAt( URI me );\n+  public interface NetworkChannelsListener\n+  {\n+    void listeningAt(URI me);\n \n-        void channelOpened( URI to );\n+    void channelOpened(URI to);\n \n-        void channelClosed( URI to );\n-    }\n+    void channelClosed(URI to);\n+  }\n \n-    public static final String CLUSTER_SCHEME = \"cluster\";\n-    public static final String INADDR_ANY = \"0.0.0.0\";\n+  public static final String CLUSTER_SCHEME = \"cluster\";\n+  public static final String INADDR_ANY = \"0.0.0.0\";\n \n-    private ChannelGroup channels;\n+  private ChannelGroup channels;\n \n-    // Receiving\n-    private NioServerSocketChannelFactory nioChannelFactory;\n-    private ServerBootstrap serverBootstrap;\n-    private final Listeners<MessageProcessor> processors = new Listeners<>();\n+  // Receiving\n+  private NioServerSocketChannelFactory nioChannelFactory;\n+  private ServerBootstrap serverBootstrap;\n+  private final Listeners<MessageProcessor> processors = new Listeners<>();\n \n-    private final Monitor monitor;\n-    private final Configuration config;\n-    private final Log msgLog;\n+  private final Monitor monitor;\n+  private final Configuration config;\n+  private final Log msgLog;\n \n-    private final Map<URI, Channel> connections = new ConcurrentHashMap<>();\n-    private final Listeners<NetworkChannelsListener> listeners = new Listeners<>();\n+  private final Map<URI, Channel> connections = new ConcurrentHashMap<>();\n+  private final Listeners<NetworkChannelsListener> listeners = new Listeners<>();\n \n-    volatile boolean bindingDetected;\n+  volatile boolean bindingDetected;\n \n-    private volatile boolean paused;\n-    private int port;\n+  private volatile boolean paused;\n+  private int port;\n \n-    public NetworkReceiver( Monitor monitor, Configuration config, LogProvider logProvider )\n-    {\n-        this.monitor = monitor;\n-        this.config = config;\n-        this.msgLog = logProvider.getLog( getClass() );\n-    }\n+  public NetworkReceiver(Monitor monitor, Configuration config, LogProvider logProvider)\n+  {\n+    this.monitor = monitor;\n+    this.config = config;\n+    this.msgLog = logProvider.getLog(getClass());\n+  }\n \n-    @Override\n-    public void init()\n-    {\n-        ThreadRenamingRunnable.setThreadNameDeterminer( ThreadNameDeterminer.CURRENT );\n-    }\n+  @Override\n+  public void init()\n+  {\n+    ThreadRenamingRunnable.setThreadNameDeterminer(ThreadNameDeterminer.CURRENT);\n+  }\n \n-    @Override\n-    public void start()\n-    {\n-        channels = new DefaultChannelGroup();\n+  @Override\n+  public void start()\n+  {\n+    channels = new DefaultChannelGroup();\n \n-        // Listen for incoming connections\n-        nioChannelFactory = new NioServerSocketChannelFactory(\n-                Executors.newCachedThreadPool( daemon( \"Cluster boss\", monitor ) ),\n-                Executors.newFixedThreadPool( 2, daemon( \"Cluster worker\", monitor ) ), 2 );\n-        serverBootstrap = new ServerBootstrap( nioChannelFactory );\n-        serverBootstrap.setOption( \"child.tcpNoDelay\", Boolean.TRUE );\n-        serverBootstrap.setPipelineFactory( new NetworkNodePipelineFactory() );\n+    // Listen for incoming connections\n+    nioChannelFactory = new NioServerSocketChannelFactory(\n+        Executors.newCachedThreadPool(daemon(\"Cluster boss\", monitor)),\n+        Executors.newFixedThreadPool(2, daemon(\"Cluster worker\", monitor)), 2);\n+    serverBootstrap = new ServerBootstrap(nioChannelFactory);\n+    serverBootstrap.setOption(\"child.tcpNoDelay\", Boolean.TRUE);\n+    serverBootstrap.setPipelineFactory(new NetworkNodePipelineFactory());\n \n-        int[] ports = config.clusterServer().getPorts();\n+    int[] ports = config.clusterServer().getPorts();\n \n-        int minPort = ports[0];\n-        int maxPort = ports.length == 2 ? ports[1] : minPort;\n+    int minPort = ports[0];\n+    int maxPort = ports.length == 2 ? ports[1] : minPort;\n \n-        // Try all ports in the given range\n-        port = listen( minPort, maxPort );\n+    // Try all ports in the given range\n+    port = listen(minPort, maxPort);\n \n-        msgLog.debug( \"Started NetworkReceiver at \" + config.clusterServer().getHost() + \":\" + port );\n-    }\n+    msgLog.debug(\"Started NetworkReceiver at \" + config.clusterServer().getHost() + \":\" + port);\n+  }\n \n-    @Override\n-    public void stop()\n-            throws Throwable\n-    {\n-        msgLog.debug( \"Shutting down NetworkReceiver at \" + config.clusterServer().getHost() + \":\" + port );\n+  @Override\n+  public void stop()\n+      throws Throwable\n+  {\n+    msgLog.debug(\"Shutting down NetworkReceiver at \" + config.clusterServer().getHost() + \":\" + port);\n \n-        channels.close().awaitUninterruptibly();\n-        serverBootstrap.releaseExternalResources();\n-        msgLog.debug( \"Shutting down NetworkReceiver complete\" );\n-    }\n+    channels.close().awaitUninterruptibly();\n+    serverBootstrap.releaseExternalResources();\n+    msgLog.debug(\"Shutting down NetworkReceiver complete\");\n+  }\n \n-    @Override\n-    public void shutdown()\n-    {\n-    }\n+  @Override\n+  public void shutdown()\n+  {\n+  }\n \n-    public void setPaused( boolean paused )\n-    {\n-        this.paused = paused;\n-    }\n+  public void setPaused(boolean paused)\n+  {\n+    this.paused = paused;\n+  }\n \n-    private int listen( int minPort, int maxPort )\n-            throws ChannelException\n+  private int listen(int minPort, int maxPort)\n+      throws ChannelException\n+  {\n+    ChannelException ex = null;\n+    for (int checkPort = minPort; checkPort <= maxPort; checkPort++)\n     {\n-        ChannelException ex = null;\n-        for ( int checkPort = minPort; checkPort <= maxPort; checkPort++ )\n+      try\n+      {\n+        String address = config.clusterServer().getHost();\n+        InetSocketAddress localAddress;\n+        if (address == null || address.equals(INADDR_ANY))\n         {\n-            try\n-            {\n-                String address = config.clusterServer().getHost();\n-                InetSocketAddress localAddress;\n-                if ( address == null || address.equals( INADDR_ANY ) )\n-                {\n-                    localAddress = new InetSocketAddress( checkPort );\n-                }\n-                else\n-                {\n-                    localAddress = new InetSocketAddress( address, checkPort );\n-                    bindingDetected = true;\n-                }\n-\n-                Channel listenChannel = serverBootstrap.bind( localAddress );\n-\n-                listeningAt( getURI( localAddress ) );\n-\n-                channels.add( listenChannel );\n-                return checkPort;\n-            }\n-            catch ( ChannelException e )\n-            {\n-                ex = e;\n-            }\n+          localAddress = new InetSocketAddress(checkPort);\n+        } else\n+        {\n+          localAddress = new InetSocketAddress(address, checkPort);\n+          bindingDetected = true;\n         }\n \n-        nioChannelFactory.releaseExternalResources();\n-        throw ex;\n-    }\n+        Channel listenChannel = serverBootstrap.bind(localAddress);\n \n-    // MessageSource implementation\n-    @Override\n-    public void addMessageProcessor( MessageProcessor processor )\n-    {\n-        processors.add( processor );\n-    }\n+        listeningAt(getURI(localAddress));\n \n-    public void receive( Message message )\n-    {\n-        if ( !paused )\n-        {\n-            for ( MessageProcessor processor : processors )\n-            {\n-                try\n-                {\n-                    if ( !processor.process( message ) )\n-                    {\n-                        break;\n-                    }\n-                }\n-                catch ( Exception e )\n-                {\n-                    // Ignore\n-                }\n-            }\n-\n-            monitor.processedMessage( message );\n-        }\n+        channels.add(listenChannel);\n+        return checkPort;\n+      } catch (ChannelException e)\n+      {\n+        ex = e;\n+      }\n     }\n \n-    URI getURI( InetSocketAddress socketAddress )\n-    {\n-        String uri;\n+    nioChannelFactory.releaseExternalResources();\n+    throw ex;\n+  }\n \n-        InetAddress address = socketAddress.getAddress();\n+  // MessageSource implementation\n+  @Override\n+  public void addMessageProcessor(MessageProcessor processor)\n+  {\n+    processors.add(processor);\n+  }\n \n-        if ( address instanceof Inet6Address )\n-        {\n-            uri = CLUSTER_SCHEME + \"://\" + wrapAddressForIPv6Uri( address.getHostAddress() ) + \":\" + socketAddress.getPort();\n-        }\n-        else if ( address instanceof Inet4Address )\n-        {\n-            uri = CLUSTER_SCHEME + \"://\" + address.getHostAddress() + \":\" + socketAddress.getPort();\n-        }\n-        else\n+  public void receive(Message message)\n+  {\n+    if (!paused)\n+    {\n+      for (MessageProcessor processor : processors)\n+      {\n+        try\n         {\n-            throw new IllegalArgumentException( \"Address type unknown\" );\n-        }\n-\n-        // Add name if given\n-        if ( config.name() != null )\n+          if (!processor.process(message))\n+          {\n+            break;\n+          }\n+        } catch (Exception e)\n         {\n-            uri += \"/?name=\" + config.name();\n+          // Ignore\n         }\n+      }\n \n-        return URI.create( uri );\n+      monitor.processedMessage(message);\n     }\n+  }\n \n-    public void listeningAt( URI me )\n+  URI getURI(InetSocketAddress socketAddress)\n+  {\n+    String uri;\n+\n+    InetAddress address = socketAddress.getAddress();\n+\n+    if (address instanceof Inet6Address)\n+    {\n+      uri = CLUSTER_SCHEME + \"://\" + wrapAddressForIPv6Uri(address.getHostAddress()) + \":\" + socketAddress.getPort();\n+    } else if (address instanceof Inet4Address)\n     {\n-        listeners.notify( listener -> listener.listeningAt( me ) );\n+      uri = CLUSTER_SCHEME + \"://\" + address.getHostAddress() + \":\" + socketAddress.getPort();\n+    } else\n+    {\n+      throw new IllegalArgumentException(\"Address type unknown\");\n     }\n \n-    protected void openedChannel( URI uri, Channel ctxChannel )\n+    // Add name if given\n+    if (config.name() != null)\n     {\n-        connections.put( uri, ctxChannel );\n-\n-        listeners.notify( listener -> listener.channelOpened( uri ) );\n+      uri += \"/?name=\" + config.name();\n     }\n \n-    protected void closedChannel( URI uri )\n-    {\n-        Channel channel = connections.remove( uri );\n-        if ( channel != null )\n-        {\n-            channel.close();\n-        }\n+    return URI.create(uri);\n+  }\n \n-        listeners.notify( listener -> listener.channelClosed( uri ) );\n-    }\n+  public void listeningAt(URI me)\n+  {\n+    listeners.notify(listener -> listener.listeningAt(me));\n+  }\n+\n+  protected void openedChannel(URI uri, Channel ctxChannel)\n+  {\n+    connections.put(uri, ctxChannel);\n \n-    public void addNetworkChannelsListener( NetworkChannelsListener listener )\n+    listeners.notify(listener -> listener.channelOpened(uri));\n+  }\n+\n+  protected void closedChannel(URI uri)\n+  {\n+    Channel channel = connections.remove(uri);\n+    if (channel != null)\n     {\n-        listeners.add( listener );\n+      channel.close();\n     }\n \n-    private class NetworkNodePipelineFactory\n-            implements ChannelPipelineFactory\n+    listeners.notify(listener -> listener.channelClosed(uri));\n+  }\n+\n+  public void addNetworkChannelsListener(NetworkChannelsListener listener)\n+  {\n+    listeners.add(listener);\n+  }\n+\n+  private class NetworkNodePipelineFactory\n+      implements ChannelPipelineFactory\n+  {\n+    @Override\n+    public ChannelPipeline getPipeline()\n     {\n-        @Override\n-        public ChannelPipeline getPipeline()\n-        {\n-            ChannelPipeline pipeline = Channels.pipeline();\n-            pipeline.addLast( \"frameDecoder\",\n-                    new ObjectDecoder( 1024 * 1000,\n-                            NetworkNodePipelineFactory.this.getClass().getClassLoader() ) );\n-            pipeline.addLast( \"serverHandler\", new MessageReceiver() );\n-            return pipeline;\n-        }\n+      ChannelPipeline pipeline = Channels.pipeline();\n+      pipeline.addLast(\"frameDecoder\",\n+          new ObjectDecoder(1024 * 1000,\n+              NetworkNodePipelineFactory.this.getClass().getClassLoader()));\n+      pipeline.addLast(\"serverHandler\", new MessageReceiver());\n+      return pipeline;\n     }\n+  }\n \n-    class MessageReceiver\n-            extends SimpleChannelHandler\n+  class MessageReceiver\n+      extends SimpleChannelHandler\n+  {\n+    @Override\n+    public void channelOpen(ChannelHandlerContext ctx, ChannelStateEvent e)\n     {\n-        @Override\n-        public void channelOpen( ChannelHandlerContext ctx, ChannelStateEvent e )\n-        {\n-            Channel ctxChannel = ctx.getChannel();\n-            openedChannel( getURI( (InetSocketAddress) ctxChannel.getRemoteAddress() ), ctxChannel );\n-            channels.add( ctxChannel );\n-        }\n-\n-        @Override\n-        public void messageReceived( ChannelHandlerContext ctx, MessageEvent event )\n-        {\n-            if ( !bindingDetected )\n-            {\n-                InetSocketAddress local = (InetSocketAddress) event.getChannel().getLocalAddress();\n-                bindingDetected = true;\n-                listeningAt( getURI( local ) );\n-            }\n-\n-            final Message message = (Message) event.getMessage();\n-\n-            // Fix HEADER_FROM header since sender cannot know it's correct IP/hostname\n-            InetSocketAddress remote = (InetSocketAddress) ctx.getChannel().getRemoteAddress();\n-            String remoteAddress = remote.getAddress().getHostAddress();\n-            URI fromHeader = URI.create( message.getHeader( Message.HEADER_FROM ) );\n-            if ( remote.getAddress() instanceof Inet6Address )\n-            {\n-                remoteAddress = wrapAddressForIPv6Uri( remoteAddress );\n-            }\n-            fromHeader = URI.create( fromHeader.getScheme() + \"://\" + remoteAddress + \":\" + fromHeader.getPort() );\n-            message.setHeader( Message.HEADER_FROM, fromHeader.toASCIIString() );\n-\n-            msgLog.debug( \"Received:\" + message );\n-            monitor.receivedMessage( message );\n-            receive( message );\n-        }\n+      Channel ctxChannel = ctx.getChannel();\n+      openedChannel(getURI((InetSocketAddress) ctxChannel.getRemoteAddress()), ctxChannel);\n+      channels.add(ctxChannel);\n+    }\n \n-        @Override\n-        public void channelDisconnected( ChannelHandlerContext ctx, ChannelStateEvent e )\n-        {\n-            closedChannel( getURI( (InetSocketAddress) ctx.getChannel().getRemoteAddress() ) );\n-        }\n+    @Override\n+    public void messageReceived(ChannelHandlerContext ctx, MessageEvent event)\n+    {\n+      if (!bindingDetected)\n+      {\n+        InetSocketAddress local = (InetSocketAddress) event.getChannel().getLocalAddress();\n+        bindingDetected = true;\n+        listeningAt(getURI(local));\n+      }\n+\n+      final Message message = (Message) event.getMessage();\n+\n+      // Fix HEADER_FROM header since sender cannot know it's correct IP/hostname\n+      InetSocketAddress remote = (InetSocketAddress) ctx.getChannel().getRemoteAddress();\n+      String remoteAddress = remote.getAddress().getHostAddress();\n+      URI fromHeader = URI.create(message.getHeader(Message.HEADER_FROM));\n+      if (remote.getAddress() instanceof Inet6Address)\n+      {\n+        remoteAddress = wrapAddressForIPv6Uri(remoteAddress);\n+      }\n+      fromHeader = URI.create(fromHeader.getScheme() + \"://\" + remoteAddress + \":\" + fromHeader.getPort());\n+      message.setHeader(Message.HEADER_FROM, fromHeader.toASCIIString());\n+\n+      msgLog.debug(\"Received:\" + message);\n+      monitor.receivedMessage(message);\n+      receive(message);\n+    }\n \n-        @Override\n-        public void channelClosed( ChannelHandlerContext ctx, ChannelStateEvent e )\n-        {\n-            closedChannel( getURI( (InetSocketAddress) ctx.getChannel().getRemoteAddress() ) );\n-            channels.remove( ctx.getChannel() );\n-        }\n+    @Override\n+    public void channelDisconnected(ChannelHandlerContext ctx, ChannelStateEvent e)\n+    {\n+      closedChannel(getURI((InetSocketAddress) ctx.getChannel().getRemoteAddress()));\n+    }\n \n-        @Override\n-        public void exceptionCaught( ChannelHandlerContext ctx, ExceptionEvent e )\n-        {\n-            if ( !(e.getCause() instanceof ConnectException) )\n-            {\n-                msgLog.error( \"Receive exception:\", e.getCause() );\n-            }\n-        }\n+    @Override\n+    public void channelClosed(ChannelHandlerContext ctx, ChannelStateEvent e)\n+    {\n+      closedChannel(getURI((InetSocketAddress) ctx.getChannel().getRemoteAddress()));\n+      channels.remove(ctx.getChannel());\n     }\n \n-    private static String wrapAddressForIPv6Uri( String address )\n+    @Override\n+    public void exceptionCaught(ChannelHandlerContext ctx, ExceptionEvent e)\n     {\n-        return \"[\" + address + \"]\";\n+      if (!(e.getCause() instanceof ConnectException))\n+      {\n+        msgLog.error(\"Receive exception:\", e.getCause());\n+      }\n     }\n+  }\n+\n+  private static String wrapAddressForIPv6Uri(String address)\n+  {\n+    return \"[\" + address + \"]\";\n+  }\n }\n",
            "diff_size": 332
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
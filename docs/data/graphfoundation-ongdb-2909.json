{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2909",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "81",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "141",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "145",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "170",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "186",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "186",
                    "column": "105",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "188",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "189",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "198",
                    "column": "11",
                    "severity": "error",
                    "message": "'}' at column 11 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "198",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "198",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "200",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "200",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "209",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "210",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "218",
                    "column": "11",
                    "severity": "error",
                    "message": "'}' at column 11 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "218",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "218",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "220",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "220",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2909/OnlineBackupKernelExtension.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2909/OnlineBackupKernelExtension.java\nindex bc91f4b47fa..acc687550af 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2909/OnlineBackupKernelExtension.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2909/OnlineBackupKernelExtension.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.backup;\n \n import java.net.URI;\n@@ -56,188 +57,183 @@ import static org.neo4j.kernel.impl.enterprise.configuration.OnlineBackupSetting\n \n public class OnlineBackupKernelExtension implements Lifecycle\n {\n-    private Object startBindingListener;\n-    private Object bindingListener;\n-\n-    public interface BackupProvider\n+  private Object startBindingListener;\n+  private Object bindingListener;\n+\n+  public interface BackupProvider\n+  {\n+    TheBackupInterface newBackup();\n+  }\n+\n+  // This is the role used to announce that a cluster member can handle backups\n+  public static final String BACKUP = \"backup\";\n+  // In this context, the IPv4 zero-address is understood as \"any address on this host.\"\n+  public static final String INADDR_ANY = \"0.0.0.0\";\n+\n+  private final Config config;\n+  private final GraphDatabaseAPI graphDatabaseAPI;\n+  private final LogProvider logProvider;\n+  private final Monitors monitors;\n+  private BackupServer server;\n+  private final BackupProvider backupProvider;\n+  private volatile URI me;\n+\n+  public OnlineBackupKernelExtension(Config config, final GraphDatabaseAPI graphDatabaseAPI, final LogProvider logProvider,\n+                                     final Monitors monitors, final NeoStoreDataSource neoStoreDataSource,\n+                                     final Supplier<CheckPointer> checkPointerSupplier,\n+                                     final Supplier<TransactionIdStore> transactionIdStoreSupplier,\n+                                     final Supplier<LogicalTransactionStore> logicalTransactionStoreSupplier,\n+                                     final Supplier<LogFileInformation> logFileInformationSupplier,\n+                                     final FileSystemAbstraction fileSystemAbstraction,\n+                                     final PageCache pageCache,\n+                                     final StoreCopyCheckPointMutex storeCopyCheckPointMutex)\n+  {\n+    this(config, graphDatabaseAPI, () ->\n     {\n-        TheBackupInterface newBackup();\n-    }\n-\n-    // This is the role used to announce that a cluster member can handle backups\n-    public static final String BACKUP = \"backup\";\n-    // In this context, the IPv4 zero-address is understood as \"any address on this host.\"\n-    public static final String INADDR_ANY = \"0.0.0.0\";\n-\n-    private final Config config;\n-    private final GraphDatabaseAPI graphDatabaseAPI;\n-    private final LogProvider logProvider;\n-    private final Monitors monitors;\n-    private BackupServer server;\n-    private final BackupProvider backupProvider;\n-    private volatile URI me;\n-\n-    public OnlineBackupKernelExtension( Config config, final GraphDatabaseAPI graphDatabaseAPI, final LogProvider logProvider,\n-                                        final Monitors monitors, final NeoStoreDataSource neoStoreDataSource,\n-                                        final Supplier<CheckPointer> checkPointerSupplier,\n-                                        final Supplier<TransactionIdStore> transactionIdStoreSupplier,\n-                                        final Supplier<LogicalTransactionStore> logicalTransactionStoreSupplier,\n-                                        final Supplier<LogFileInformation> logFileInformationSupplier,\n-                                        final FileSystemAbstraction fileSystemAbstraction,\n-                                        final PageCache pageCache,\n-                                        final StoreCopyCheckPointMutex storeCopyCheckPointMutex )\n+      TransactionIdStore transactionIdStore = transactionIdStoreSupplier.get();\n+      StoreCopyServer copier = new StoreCopyServer(neoStoreDataSource, checkPointerSupplier.get(),\n+          fileSystemAbstraction, graphDatabaseAPI.getStoreDir(),\n+          monitors.newMonitor(StoreCopyServer.Monitor.class), pageCache, storeCopyCheckPointMutex);\n+      LogicalTransactionStore logicalTransactionStore = logicalTransactionStoreSupplier.get();\n+      LogFileInformation logFileInformation = logFileInformationSupplier.get();\n+      return new BackupImpl(copier, logicalTransactionStore, transactionIdStore, logFileInformation,\n+          graphDatabaseAPI::storeId, logProvider);\n+    }, monitors, logProvider);\n+  }\n+\n+  public OnlineBackupKernelExtension(Config config, GraphDatabaseAPI graphDatabaseAPI, BackupProvider provider,\n+                                     Monitors monitors, LogProvider logProvider)\n+  {\n+    this.config = config;\n+    this.graphDatabaseAPI = graphDatabaseAPI;\n+    this.backupProvider = provider;\n+    this.monitors = monitors;\n+    this.logProvider = logProvider;\n+  }\n+\n+  @Override\n+  public void init()\n+  {\n+  }\n+\n+  @Override\n+  public void start()\n+  {\n+    if (config.<Boolean>get(OnlineBackupSettings.online_backup_enabled))\n     {\n-        this( config, graphDatabaseAPI, () ->\n+      try\n+      {\n+        server = new BackupServer(backupProvider.newBackup(), config.get(online_backup_server),\n+            logProvider, monitors.newMonitor(ByteCounterMonitor.class, BackupServer.class),\n+            monitors.newMonitor(RequestMonitor.class, BackupServer.class));\n+        server.init();\n+        server.start();\n+\n+        try\n         {\n-            TransactionIdStore transactionIdStore = transactionIdStoreSupplier.get();\n-            StoreCopyServer copier = new StoreCopyServer( neoStoreDataSource, checkPointerSupplier.get(),\n-                    fileSystemAbstraction, graphDatabaseAPI.getStoreDir(),\n-                    monitors.newMonitor( StoreCopyServer.Monitor.class ), pageCache, storeCopyCheckPointMutex );\n-            LogicalTransactionStore logicalTransactionStore = logicalTransactionStoreSupplier.get();\n-            LogFileInformation logFileInformation = logFileInformationSupplier.get();\n-            return new BackupImpl( copier, logicalTransactionStore, transactionIdStore, logFileInformation,\n-                    graphDatabaseAPI::storeId, logProvider );\n-        }, monitors, logProvider );\n+          startBindingListener = new StartBindingListener();\n+          graphDatabaseAPI.getDependencyResolver().resolveDependency(ClusterMemberEvents.class).addClusterMemberListener(\n+              (ClusterMemberListener) startBindingListener);\n+\n+          bindingListener = (BindingListener) myUri -> me = myUri;\n+          graphDatabaseAPI.getDependencyResolver().resolveDependency(BindingNotifier.class).addBindingListener(\n+              (BindingListener) bindingListener);\n+        } catch (NoClassDefFoundError | UnsatisfiedDependencyException e)\n+        {\n+          // Not running HA\n+        }\n+      } catch (Throwable t)\n+      {\n+        throw new RuntimeException(t);\n+      }\n     }\n+  }\n \n-    public OnlineBackupKernelExtension( Config config, GraphDatabaseAPI graphDatabaseAPI, BackupProvider provider,\n-                                        Monitors monitors, LogProvider logProvider )\n+  @Override\n+  public void stop() throws Throwable\n+  {\n+    if (server != null)\n     {\n-        this.config = config;\n-        this.graphDatabaseAPI = graphDatabaseAPI;\n-        this.backupProvider = provider;\n-        this.monitors = monitors;\n-        this.logProvider = logProvider;\n+      server.stop();\n+      server.shutdown();\n+      server = null;\n+\n+      try\n+      {\n+        graphDatabaseAPI.getDependencyResolver().resolveDependency(ClusterMemberEvents.class).removeClusterMemberListener(\n+            (ClusterMemberListener) startBindingListener);\n+        graphDatabaseAPI.getDependencyResolver().resolveDependency(BindingNotifier.class).removeBindingListener(\n+            (BindingListener) bindingListener);\n+\n+        ClusterMemberAvailability client = getClusterMemberAvailability();\n+        client.memberIsUnavailable(BACKUP);\n+      } catch (NoClassDefFoundError | UnsatisfiedDependencyException e)\n+      {\n+        // Not running HA\n+      }\n     }\n+  }\n \n-    @Override\n-    public void init()\n-    {\n-    }\n+  @Override\n+  public void shutdown()\n+  {\n+  }\n \n-    @Override\n-    public void start()\n-    {\n-        if ( config.<Boolean>get( OnlineBackupSettings.online_backup_enabled ) )\n-        {\n-            try\n-            {\n-                server = new BackupServer( backupProvider.newBackup(), config.get( online_backup_server ),\n-                        logProvider, monitors.newMonitor( ByteCounterMonitor.class, BackupServer.class ),\n-                        monitors.newMonitor( RequestMonitor.class, BackupServer.class ) );\n-                server.init();\n-                server.start();\n-\n-                try\n-                {\n-                    startBindingListener = new StartBindingListener();\n-                    graphDatabaseAPI.getDependencyResolver().resolveDependency( ClusterMemberEvents.class).addClusterMemberListener(\n-                            (ClusterMemberListener) startBindingListener );\n-\n-                    bindingListener = (BindingListener) myUri -> me = myUri;\n-                    graphDatabaseAPI.getDependencyResolver().resolveDependency( BindingNotifier.class ).addBindingListener(\n-                            (BindingListener) bindingListener );\n-                }\n-                catch ( NoClassDefFoundError | UnsatisfiedDependencyException e )\n-                {\n-                    // Not running HA\n-                }\n-            }\n-            catch ( Throwable t )\n-            {\n-                throw new RuntimeException( t );\n-            }\n-        }\n-    }\n+  private class StartBindingListener extends ClusterMemberListener.Adapter\n+  {\n \n     @Override\n-    public void stop() throws Throwable\n+    public void memberIsAvailable(String role, InstanceId available, URI availableAtUri, StoreId storeId)\n     {\n-        if ( server != null )\n+      if (graphDatabaseAPI.getDependencyResolver().resolveDependency(ClusterClient.class).\n+          getServerId().equals(available) && \"master\".equals(role))\n+      {\n+        // It was me and i am master - yey!\n         {\n-            server.stop();\n-            server.shutdown();\n-            server = null;\n-\n-            try\n-            {\n-                graphDatabaseAPI.getDependencyResolver().resolveDependency( ClusterMemberEvents.class).removeClusterMemberListener(\n-                        (ClusterMemberListener) startBindingListener );\n-                graphDatabaseAPI.getDependencyResolver().resolveDependency( BindingNotifier.class ).removeBindingListener(\n-                        (BindingListener) bindingListener );\n-\n-                ClusterMemberAvailability client = getClusterMemberAvailability();\n-                client.memberIsUnavailable( BACKUP );\n-            }\n-            catch ( NoClassDefFoundError | UnsatisfiedDependencyException e )\n-            {\n-                // Not running HA\n-            }\n+          try\n+          {\n+            URI backupUri = createBackupURI();\n+            ClusterMemberAvailability ha = getClusterMemberAvailability();\n+            ha.memberIsAvailable(BACKUP, backupUri, storeId);\n+          } catch (Throwable t)\n+          {\n+            throw new RuntimeException(t);\n+          }\n         }\n+      }\n     }\n \n     @Override\n-    public void shutdown()\n+    public void memberIsUnavailable(String role, InstanceId unavailableId)\n     {\n-    }\n-\n-    private class StartBindingListener extends ClusterMemberListener.Adapter\n-    {\n-\n-        @Override\n-        public void memberIsAvailable( String role, InstanceId available, URI availableAtUri, StoreId storeId )\n-        {\n-            if ( graphDatabaseAPI.getDependencyResolver().resolveDependency( ClusterClient.class ).\n-                    getServerId().equals( available ) && \"master\".equals( role ) )\n-            {\n-                // It was me and i am master - yey!\n-                {\n-                    try\n-                    {\n-                        URI backupUri = createBackupURI();\n-                        ClusterMemberAvailability ha = getClusterMemberAvailability();\n-                        ha.memberIsAvailable( BACKUP, backupUri, storeId );\n-                    }\n-                    catch ( Throwable t )\n-                    {\n-                        throw new RuntimeException( t );\n-                    }\n-                }\n-            }\n-        }\n-\n-        @Override\n-        public void memberIsUnavailable( String role, InstanceId unavailableId )\n+      if (graphDatabaseAPI.getDependencyResolver().resolveDependency(ClusterClient.class).\n+          getServerId().equals(unavailableId) && \"master\".equals(role))\n+      {\n+        // It was me and i am master - yey!\n         {\n-            if ( graphDatabaseAPI.getDependencyResolver().resolveDependency( ClusterClient.class ).\n-                    getServerId().equals( unavailableId ) && \"master\".equals( role ) )\n-            {\n-                // It was me and i am master - yey!\n-                {\n-                    try\n-                    {\n-                        ClusterMemberAvailability ha = getClusterMemberAvailability();\n-                        ha.memberIsUnavailable( BACKUP );\n-                    }\n-                    catch ( Throwable t )\n-                    {\n-                        throw new RuntimeException( t );\n-                    }\n-                }\n-            }\n+          try\n+          {\n+            ClusterMemberAvailability ha = getClusterMemberAvailability();\n+            ha.memberIsUnavailable(BACKUP);\n+          } catch (Throwable t)\n+          {\n+            throw new RuntimeException(t);\n+          }\n         }\n+      }\n     }\n-\n-    private ClusterMemberAvailability getClusterMemberAvailability()\n-    {\n-        return graphDatabaseAPI.getDependencyResolver().resolveDependency( ClusterMemberAvailability.class );\n-    }\n-\n-    private URI createBackupURI()\n-    {\n-        String hostString = ServerUtil.getHostString( server.getSocketAddress() );\n-        String host = hostString.contains( INADDR_ANY ) ? me.getHost() : hostString;\n-        int port = server.getSocketAddress().getPort();\n-        return URI.create(\"backup://\" + host + \":\" + port);\n-    }\n+  }\n+\n+  private ClusterMemberAvailability getClusterMemberAvailability()\n+  {\n+    return graphDatabaseAPI.getDependencyResolver().resolveDependency(ClusterMemberAvailability.class);\n+  }\n+\n+  private URI createBackupURI()\n+  {\n+    String hostString = ServerUtil.getHostString(server.getSocketAddress());\n+    String host = hostString.contains(INADDR_ANY) ? me.getHost() : hostString;\n+    int port = server.getSocketAddress().getPort();\n+    return URI.create(\"backup://\" + host + \":\" + port);\n+  }\n }\n",
            "diff_size": 233
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "79",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 582).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "85",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 167).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "110",
                    "column": "29",
                    "severity": "error",
                    "message": "'>' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "115",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 172).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "122",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 180).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "149",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 179).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "172",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 161).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "193",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 165).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2909/OnlineBackupKernelExtension.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2909/OnlineBackupKernelExtension.java\nindex bc91f4b47fa..e1c92c30c2b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2909/OnlineBackupKernelExtension.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2909/OnlineBackupKernelExtension.java\n@@ -68,8 +68,7 @@ public class OnlineBackupKernelExtension implements Lifecycle\n     public static final String BACKUP = \"backup\";\n     // In this context, the IPv4 zero-address is understood as \"any address on this host.\"\n     public static final String INADDR_ANY = \"0.0.0.0\";\n-\n-    private final Config config;\n+private final Config config;\n     private final GraphDatabaseAPI graphDatabaseAPI;\n     private final LogProvider logProvider;\n     private final Monitors monitors;\n@@ -77,32 +76,22 @@ public class OnlineBackupKernelExtension implements Lifecycle\n     private final BackupProvider backupProvider;\n     private volatile URI me;\n \n-    public OnlineBackupKernelExtension( Config config, final GraphDatabaseAPI graphDatabaseAPI, final LogProvider logProvider,\n-                                        final Monitors monitors, final NeoStoreDataSource neoStoreDataSource,\n-                                        final Supplier<CheckPointer> checkPointerSupplier,\n-                                        final Supplier<TransactionIdStore> transactionIdStoreSupplier,\n-                                        final Supplier<LogicalTransactionStore> logicalTransactionStoreSupplier,\n-                                        final Supplier<LogFileInformation> logFileInformationSupplier,\n-                                        final FileSystemAbstraction fileSystemAbstraction,\n-                                        final PageCache pageCache,\n-                                        final StoreCopyCheckPointMutex storeCopyCheckPointMutex )\n-    {\n+    public OnlineBackupKernelExtension( Config config, final GraphDatabaseAPI graphDatabaseAPI, final LogProvider logProvider, final Monitors monitors, final NeoStoreDataSource neoStoreDataSource, final Supplier<CheckPointer> checkPointerSupplier, final Supplier<TransactionIdStore> transactionIdStoreSupplier, final Supplier<LogicalTransactionStore> logicalTransactionStoreSupplier, final Supplier<LogFileInformation> logFileInformationSupplier, final FileSystemAbstraction fileSystemAbstraction, final PageCache pageCache, final StoreCopyCheckPointMutex storeCopyCheckPointMutex )\n+{\n         this( config, graphDatabaseAPI, () ->\n         {\n             TransactionIdStore transactionIdStore = transactionIdStoreSupplier.get();\n             StoreCopyServer copier = new StoreCopyServer( neoStoreDataSource, checkPointerSupplier.get(),\n-                    fileSystemAbstraction, graphDatabaseAPI.getStoreDir(),\n-                    monitors.newMonitor( StoreCopyServer.Monitor.class ), pageCache, storeCopyCheckPointMutex );\n-            LogicalTransactionStore logicalTransactionStore = logicalTransactionStoreSupplier.get();\n+                    fileSystemAbstraction, graphDatabaseAPI.getStoreDir(), monitors.newMonitor( StoreCopyServer.Monitor.class ), pageCache, storeCopyCheckPointMutex );\n+LogicalTransactionStore logicalTransactionStore = logicalTransactionStoreSupplier.get();\n             LogFileInformation logFileInformation = logFileInformationSupplier.get();\n             return new BackupImpl( copier, logicalTransactionStore, transactionIdStore, logFileInformation,\n                     graphDatabaseAPI::storeId, logProvider );\n         }, monitors, logProvider );\n     }\n \n-    public OnlineBackupKernelExtension( Config config, GraphDatabaseAPI graphDatabaseAPI, BackupProvider provider,\n-                                        Monitors monitors, LogProvider logProvider )\n-    {\n+    public OnlineBackupKernelExtension( Config config, GraphDatabaseAPI graphDatabaseAPI, BackupProvider provider, Monitors monitors, LogProvider logProvider )\n+{\n         this.config = config;\n         this.graphDatabaseAPI = graphDatabaseAPI;\n         this.backupProvider = provider;\n@@ -118,26 +107,22 @@ public class OnlineBackupKernelExtension implements Lifecycle\n     @Override\n     public void start()\n     {\n-        if ( config.<Boolean>get( OnlineBackupSettings.online_backup_enabled ) )\n+        if ( config.<Boolean> get( OnlineBackupSettings.online_backup_enabled ) )\n         {\n             try\n             {\n                 server = new BackupServer( backupProvider.newBackup(), config.get( online_backup_server ),\n-                        logProvider, monitors.newMonitor( ByteCounterMonitor.class, BackupServer.class ),\n-                        monitors.newMonitor( RequestMonitor.class, BackupServer.class ) );\n-                server.init();\n+                        logProvider, monitors.newMonitor( ByteCounterMonitor.class, BackupServer.class ), monitors.newMonitor( RequestMonitor.class, BackupServer.class ) );\n+server.init();\n                 server.start();\n \n                 try\n                 {\n                     startBindingListener = new StartBindingListener();\n-                    graphDatabaseAPI.getDependencyResolver().resolveDependency( ClusterMemberEvents.class).addClusterMemberListener(\n-                            (ClusterMemberListener) startBindingListener );\n-\n-                    bindingListener = (BindingListener) myUri -> me = myUri;\n-                    graphDatabaseAPI.getDependencyResolver().resolveDependency( BindingNotifier.class ).addBindingListener(\n-                            (BindingListener) bindingListener );\n-                }\n+                    graphDatabaseAPI.getDependencyResolver().resolveDependency( ClusterMemberEvents.class ).addClusterMemberListener((ClusterMemberListener) startBindingListener );\n+bindingListener = (BindingListener) myUri -> me = myUri;\n+                    graphDatabaseAPI.getDependencyResolver().resolveDependency( BindingNotifier.class ).addBindingListener((BindingListener) bindingListener );\n+    }\n                 catch ( NoClassDefFoundError | UnsatisfiedDependencyException e )\n                 {\n                     // Not running HA\n@@ -161,12 +146,9 @@ public class OnlineBackupKernelExtension implements Lifecycle\n \n             try\n             {\n-                graphDatabaseAPI.getDependencyResolver().resolveDependency( ClusterMemberEvents.class).removeClusterMemberListener(\n-                        (ClusterMemberListener) startBindingListener );\n-                graphDatabaseAPI.getDependencyResolver().resolveDependency( BindingNotifier.class ).removeBindingListener(\n-                        (BindingListener) bindingListener );\n-\n-                ClusterMemberAvailability client = getClusterMemberAvailability();\n+                graphDatabaseAPI.getDependencyResolver().resolveDependency( ClusterMemberEvents.class ).removeClusterMemberListener((ClusterMemberListener) startBindingListener );\n+graphDatabaseAPI.getDependencyResolver().resolveDependency( BindingNotifier.class ).removeBindingListener((BindingListener) bindingListener );\n+ClusterMemberAvailability client = getClusterMemberAvailability();\n                 client.memberIsUnavailable( BACKUP );\n             }\n             catch ( NoClassDefFoundError | UnsatisfiedDependencyException e )\n@@ -184,11 +166,10 @@ public class OnlineBackupKernelExtension implements Lifecycle\n     private class StartBindingListener extends ClusterMemberListener.Adapter\n     {\n \n-        @Override\n+@Override\n         public void memberIsAvailable( String role, InstanceId available, URI availableAtUri, StoreId storeId )\n         {\n-            if ( graphDatabaseAPI.getDependencyResolver().resolveDependency( ClusterClient.class ).\n-                    getServerId().equals( available ) && \"master\".equals( role ) )\n+            if ( graphDatabaseAPI.getDependencyResolver().resolveDependency( ClusterClient.class ).getServerId().equals( available ) && \"master\".equals( role ) )\n             {\n                 // It was me and i am master - yey!\n                 {\n@@ -209,8 +190,7 @@ public class OnlineBackupKernelExtension implements Lifecycle\n         @Override\n         public void memberIsUnavailable( String role, InstanceId unavailableId )\n         {\n-            if ( graphDatabaseAPI.getDependencyResolver().resolveDependency( ClusterClient.class ).\n-                    getServerId().equals( unavailableId ) && \"master\".equals( role ) )\n+            if ( graphDatabaseAPI.getDependencyResolver().resolveDependency( ClusterClient.class ).getServerId().equals( unavailableId ) && \"master\".equals( role ) )\n             {\n                 // It was me and i am master - yey!\n                 {\n@@ -238,6 +218,6 @@ public class OnlineBackupKernelExtension implements Lifecycle\n         String hostString = ServerUtil.getHostString( server.getSocketAddress() );\n         String host = hostString.contains( INADDR_ANY ) ? me.getHost() : hostString;\n         int port = server.getSocketAddress().getPort();\n-        return URI.create(\"backup://\" + host + \":\" + port);\n+        return URI.create( \"backup://\" + host + \":\" + port);\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 42
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
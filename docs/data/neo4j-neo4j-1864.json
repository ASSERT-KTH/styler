{
    "project_name": "neo4j-neo4j",
    "error_id": "1864",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "35",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "35",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "194",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "194",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "217",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "217",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "219",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "219",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "223",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "223",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1864/Location.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1864/Location.java\nindex 917fd0c1060..f05fe2809a5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1864/Location.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1864/Location.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.fabric.executor;\n \n import java.util.List;\n@@ -31,7 +32,7 @@ public class Location\n     private final UUID uuid;\n     private final String databaseName;\n \n-    private Location( long graphId, UUID uuid, String databaseName )\n+    private Location(long graphId, UUID uuid, String databaseName)\n     {\n         this.graphId = graphId;\n         this.uuid = uuid;\n@@ -55,32 +56,32 @@ public class Location\n \n     public static class Local extends Location\n     {\n-        public Local( long id, UUID uuid, String databaseName )\n+        public Local(long id, UUID uuid, String databaseName)\n         {\n-            super( id, uuid, databaseName );\n+            super(id, uuid, databaseName);\n         }\n \n         @Override\n-        public boolean equals( Object o )\n+        public boolean equals(Object o)\n         {\n-            if ( this == o )\n+            if (this == o)\n             {\n                 return true;\n             }\n-            if ( o == null || getClass() != o.getClass() )\n+            if (o == null || getClass() != o.getClass())\n             {\n                 return false;\n             }\n             Local local = (Local) o;\n-            return Objects.equals( getGraphId(), local.getGraphId() )\n-                    && Objects.equals( getUuid(), local.getUuid() )\n-                    && Objects.equals( getDatabaseName(), local.getDatabaseName() );\n+            return Objects.equals(getGraphId(), local.getGraphId())\n+              && Objects.equals(getUuid(), local.getUuid())\n+              && Objects.equals(getDatabaseName(), local.getDatabaseName());\n         }\n \n         @Override\n         public int hashCode()\n         {\n-            return Objects.hash( getGraphId(), getUuid(), getDatabaseName() );\n+            return Objects.hash(getGraphId(), getUuid(), getDatabaseName());\n         }\n \n         @Override\n@@ -94,9 +95,9 @@ public class Location\n     {\n         private final RemoteUri uri;\n \n-        protected Remote( long id, UUID uuid, RemoteUri uri, String databaseName )\n+        protected Remote(long id, UUID uuid, RemoteUri uri, String databaseName)\n         {\n-            super( id, uuid, databaseName );\n+            super(id, uuid, databaseName);\n             this.uri = uri;\n         }\n \n@@ -108,78 +109,78 @@ public class Location\n         public static class Internal extends Remote\n         {\n \n-            public Internal( long id, UUID uuid, RemoteUri uri, String databaseName )\n+            public Internal(long id, UUID uuid, RemoteUri uri, String databaseName)\n             {\n-                super( id, uuid, uri, databaseName );\n+                super(id, uuid, uri, databaseName);\n             }\n \n             @Override\n-            public boolean equals( Object o )\n+            public boolean equals(Object o)\n             {\n-                if ( this == o )\n+                if (this == o)\n                 {\n                     return true;\n                 }\n-                if ( o == null || getClass() != o.getClass() )\n+                if (o == null || getClass() != o.getClass())\n                 {\n                     return false;\n                 }\n                 Remote remote = (Remote) o;\n-                return getUri().equals( remote.getUri() ) || Objects.equals( getGraphId(), remote.getGraphId() )\n-                        && Objects.equals( getUuid(), remote.getUuid() )\n-                        && Objects.equals( getDatabaseName(), remote.getDatabaseName() );\n+                return getUri().equals(remote.getUri()) || Objects.equals(getGraphId(), remote.getGraphId())\n+                  && Objects.equals(getUuid(), remote.getUuid())\n+                  && Objects.equals(getDatabaseName(), remote.getDatabaseName());\n             }\n \n             @Override\n             public int hashCode()\n             {\n-                return Objects.hash( getUri(), getGraphId(), getUuid(), getDatabaseName() );\n+                return Objects.hash(getUri(), getGraphId(), getUuid(), getDatabaseName());\n             }\n \n             @Override\n             public String toString()\n             {\n                 return \"Internal{\" + \"graphId=\" + getGraphId() + \", uuid=\" + getUuid() + \", databaseName='\" + getDatabaseName() + '\\'' + \", uri=\" + getUri() +\n-                        '}';\n+                  '}';\n             }\n         }\n \n         public static class External extends Remote\n         {\n \n-            public External( long id, UUID uuid, RemoteUri uri, String databaseName )\n+            public External(long id, UUID uuid, RemoteUri uri, String databaseName)\n             {\n-                super( id, uuid, uri, databaseName );\n+                super(id, uuid, uri, databaseName);\n             }\n \n             @Override\n-            public boolean equals( Object o )\n+            public boolean equals(Object o)\n             {\n-                if ( this == o )\n+                if (this == o)\n                 {\n                     return true;\n                 }\n-                if ( o == null || getClass() != o.getClass() )\n+                if (o == null || getClass() != o.getClass())\n                 {\n                     return false;\n                 }\n                 Remote remote = (Remote) o;\n-                return getUri().equals( remote.getUri() ) || Objects.equals( getGraphId(), remote.getGraphId() )\n-                        && Objects.equals( getUuid(), remote.getUuid() )\n-                        && Objects.equals( getDatabaseName(), remote.getDatabaseName() );\n+                return getUri().equals(remote.getUri()) || Objects.equals(getGraphId(), remote.getGraphId())\n+                  && Objects.equals(getUuid(), remote.getUuid())\n+                  && Objects.equals(getDatabaseName(), remote.getDatabaseName());\n             }\n \n             @Override\n             public int hashCode()\n             {\n-                return Objects.hash( getUri(), getGraphId(), getUuid(), getDatabaseName() );\n+                return Objects.hash(getUri(), getGraphId(), getUuid(), getDatabaseName());\n             }\n \n             @Override\n             public String toString()\n             {\n                 return \"External{\" + \"graphId=\" + getGraphId() + \", uuid=\" + getUuid() + \", databaseName='\" + getDatabaseName() + '\\'' + \", uri=\" + getUri() +\n-                        '}';\n+                  '}';\n             }\n         }\n     }\n@@ -190,7 +191,7 @@ public class Location\n         private final List<SocketAddress> addresses;\n         private final String query;\n \n-        public RemoteUri( String scheme, List<SocketAddress> addresses, String query )\n+        public RemoteUri(String scheme, List<SocketAddress> addresses, String query)\n         {\n             this.scheme = scheme;\n             this.addresses = addresses;\n@@ -213,24 +214,24 @@ public class Location\n         }\n \n         @Override\n-        public boolean equals( Object o )\n+        public boolean equals(Object o)\n         {\n-            if ( this == o )\n+            if (this == o)\n             {\n                 return true;\n             }\n-            if ( o == null || getClass() != o.getClass() )\n+            if (o == null || getClass() != o.getClass())\n             {\n                 return false;\n             }\n             RemoteUri remoteUri = (RemoteUri) o;\n-            return Objects.equals( scheme, remoteUri.scheme ) && Objects.equals( addresses, remoteUri.addresses ) && Objects.equals( query, remoteUri.query );\n+            return Objects.equals(scheme, remoteUri.scheme) && Objects.equals(addresses, remoteUri.addresses) && Objects.equals(query, remoteUri.query);\n         }\n \n         @Override\n         public int hashCode()\n         {\n-            return Objects.hash( scheme, addresses, query );\n+            return Objects.hash(scheme, addresses, query);\n         }\n \n         @Override\n",
            "diff_size": 39
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4048",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "41",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4048/RelationshipTraversalCursor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4048/RelationshipTraversalCursor.java\nindex ccc8ab9404a..5f7fe142820 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4048/RelationshipTraversalCursor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4048/RelationshipTraversalCursor.java\n@@ -17,29 +17,30 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.internal.kernel.api;\n \n /**\n  * Cursor for traversing the relationships of a single node.\n  */\n public interface RelationshipTraversalCursor\n-        extends RelationshipDataAccessor, SuspendableCursor<RelationshipTraversalCursor.Position>\n+    extends RelationshipDataAccessor, SuspendableCursor<RelationshipTraversalCursor.Position>\n {\n-    abstract class Position extends CursorPosition<Position>\n-    {\n-    }\n+  abstract class Position extends CursorPosition<Position>\n+  {\n+  }\n \n-    /**\n-     * Get the other node, the one that this cursor was not initialized from.\n-     * <p>\n-     * Relationship cursors have context, and know which node they are traversing relationships for, making it\n-     * possible and convenient to access the other node.\n-     *\n-     * @param cursor the cursor to use for accessing the other node.\n-     */\n-    void neighbour( NodeCursor cursor );\n+  /**\n+   * Get the other node, the one that this cursor was not initialized from.\n+   * <p>\n+   * Relationship cursors have context, and know which node they are traversing relationships for, making it\n+   * possible and convenient to access the other node.\n+   *\n+   * @param cursor the cursor to use for accessing the other node.\n+   */\n+  void neighbour(NodeCursor cursor);\n \n-    long neighbourNodeReference();\n+  long neighbourNodeReference();\n \n-    long originNodeReference();\n+  long originNodeReference();\n }\n",
            "diff_size": 16
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4048/RelationshipTraversalCursor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4048/RelationshipTraversalCursor.java\nindex ccc8ab9404a..281c39024d6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4048/RelationshipTraversalCursor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4048/RelationshipTraversalCursor.java\n@@ -22,8 +22,7 @@ package org.neo4j.internal.kernel.api;\n /**\n  * Cursor for traversing the relationships of a single node.\n  */\n-public interface RelationshipTraversalCursor\n-        extends RelationshipDataAccessor, SuspendableCursor<RelationshipTraversalCursor.Position>\n+public interface RelationshipTraversalCursor extends RelationshipDataAccessor, SuspendableCursor<RelationshipTraversalCursor.Position>\n {\n     abstract class Position extends CursorPosition<Position>\n     {\n@@ -42,4 +41,4 @@ public interface RelationshipTraversalCursor\n     long neighbourNodeReference();\n \n     long originNodeReference();\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "43",
                    "column": "7",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "44",
                    "column": "9",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4048/RelationshipTraversalCursor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/4048/RelationshipTraversalCursor.java\nindex ccc8ab9404a..78854ce789d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4048/RelationshipTraversalCursor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/4048/RelationshipTraversalCursor.java\n@@ -22,8 +22,8 @@ package org.neo4j.internal.kernel.api;\n /**\n  * Cursor for traversing the relationships of a single node.\n  */\n-public interface RelationshipTraversalCursor\n-        extends RelationshipDataAccessor, SuspendableCursor<RelationshipTraversalCursor.Position>\n+\n+public interface RelationshipTraversalCursor extends RelationshipDataAccessor, SuspendableCursor<RelationshipTraversalCursor.Position>\n {\n     abstract class Position extends CursorPosition<Position>\n     {\n@@ -37,9 +37,9 @@ public interface RelationshipTraversalCursor\n      *\n      * @param cursor the cursor to use for accessing the other node.\n      */\n-    void neighbour( NodeCursor cursor );\n-\n-    long neighbourNodeReference();\n \n-    long originNodeReference();\n-}\n+    void neighbour( NodeCursor cursor )\n+    ; long neighbourNodeReference()\n+      ; long originNodeReference()\n+        ;\n+}\n\\ No newline at end of file\n",
            "diff_size": 10
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
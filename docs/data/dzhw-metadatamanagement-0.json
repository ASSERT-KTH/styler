{
    "project_name": "dzhw-metadatamanagement",
    "error_id": "0",
    "information": {
        "errors": [
            {
                "line": "41",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 101).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "  @Override\n  @Operation(\n      description = \"Get the instrument. Public users will get the latest version of the instrument.\"\n          + \" If the id is postfixed with the version number it will return exactly the \"\n          + \"requested version, if available.\")\n  @GetMapping(value = \"/instruments/{id:.+}\")",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/0/InstrumentResourceController.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/styler/0/InstrumentResourceController.java\nindex 6bce74055a0..34f44a6f976 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/0/InstrumentResourceController.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/styler/0/InstrumentResourceController.java\n@@ -38,8 +38,9 @@ public class InstrumentResourceController\n \n   @Override\n   @Operation(\n-      description = \"Get the instrument. Public users will get the latest version of the instrument.\"\n-          + \" If the id is postfixed with the version number it will return exactly the \"\n+      description =\n+          \"Get the instrument. Public users will get the latest version of the instrument.\"\n+           + \" If the id is postfixed with the version number it will return exactly the \"\n           + \"requested version, if available.\")\n   @GetMapping(value = \"/instruments/{id:.+}\")\n   public ResponseEntity<Instrument> getDomainObject(@PathVariable String id) {\n",
            "diff_size": 3
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/0/InstrumentResourceController.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/intellij/0/InstrumentResourceController.java\nindex 6bce74055a0..4aca2d89886 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/0/InstrumentResourceController.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/intellij/0/InstrumentResourceController.java\n@@ -22,7 +22,7 @@ import io.swagger.v3.oas.annotations.tags.Tag;\n \n /**\n  * Instrument REST Controller which overrides default spring data rest methods.\n- * \n+ *\n  * @author Ren\u00e9 Reitmann\n  */\n @RepositoryRestController\n@@ -32,15 +32,16 @@ public class InstrumentResourceController\n     extends GenericDomainObjectResourceController<Instrument, CrudService<Instrument>> {\n \n   public InstrumentResourceController(CrudService<Instrument> crudService,\n-      UserInformationProvider userInformationProvider) {\n+                                      UserInformationProvider userInformationProvider) {\n     super(crudService, userInformationProvider);\n   }\n \n   @Override\n   @Operation(\n-      description = \"Get the instrument. Public users will get the latest version of the instrument.\"\n-          + \" If the id is postfixed with the version number it will return exactly the \"\n-          + \"requested version, if available.\")\n+      description =\n+          \"Get the instrument. Public users will get the latest version of the instrument.\"\n+              + \" If the id is postfixed with the version number it will return exactly the \"\n+              + \"requested version, if available.\")\n   @GetMapping(value = \"/instruments/{id:.+}\")\n   public ResponseEntity<Instrument> getDomainObject(@PathVariable String id) {\n     return super.getDomainObject(id);\n",
            "diff_size": 6
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "41",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "49",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "50",
                    "severity": "error",
                    "message": "Annotation 'PostMapping' have incorrect indentation level 2, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationLocationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/0/InstrumentResourceController.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/naturalize/0/InstrumentResourceController.java\nindex 6bce74055a0..c78d80f5fbe 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/0/InstrumentResourceController.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/naturalize/0/InstrumentResourceController.java\n@@ -46,8 +46,7 @@ public class InstrumentResourceController\n     return super.getDomainObject(id);\n   }\n \n-\n-  @Override\n+@Override\n   @PostMapping(value = \"/instruments\")\n   public ResponseEntity<?> postDomainObject(@RequestBody Instrument instrument) {\n     return super.postDomainObject(instrument);\n@@ -70,4 +69,4 @@ public class InstrumentResourceController\n     return UriComponentsBuilder.fromPath(\"/api/instruments/\" + domainObject.getId()).build()\n         .toUri();\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "30",
                    "severity": "error",
                    "message": "'description' has incorrect indentation level 2, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "32",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 126).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "41",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 226).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/0/InstrumentResourceController.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/codebuff/0/InstrumentResourceController.java\nindex 6bce74055a0..f2d75b6ebc0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/0/InstrumentResourceController.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/codebuff/0/InstrumentResourceController.java\n@@ -1,7 +1,6 @@\n package eu.dzhw.fdz.metadatamanagement.instrumentmanagement.rest;\n \n import java.net.URI;\n-\n import org.springframework.data.rest.webmvc.RepositoryRestController;\n import org.springframework.http.ResponseEntity;\n import org.springframework.web.bind.annotation.DeleteMapping;\n@@ -12,7 +11,6 @@ import org.springframework.web.bind.annotation.PutMapping;\n import org.springframework.web.bind.annotation.RequestBody;\n import org.springframework.web.bind.annotation.RequestMapping;\n import org.springframework.web.util.UriComponentsBuilder;\n-\n import eu.dzhw.fdz.metadatamanagement.common.rest.GenericDomainObjectResourceController;\n import eu.dzhw.fdz.metadatamanagement.common.service.CrudService;\n import eu.dzhw.fdz.metadatamanagement.instrumentmanagement.domain.Instrument;\n@@ -25,22 +23,22 @@ import io.swagger.v3.oas.annotations.tags.Tag;\n  * \n  * @author Ren\u00e9 Reitmann\n  */\n+\n+\n @RepositoryRestController\n-@Tag(name = \"Instrument Resource\", description = \"Endpoints used by the MDM to manage instruments.\")\n+@Tag(name = \"Instrument Resource\",\n+  description = \"Endpoints used by the MDM to manage instruments.\")\n @RequestMapping(\"/api\")\n-public class InstrumentResourceController\n-    extends GenericDomainObjectResourceController<Instrument, CrudService<Instrument>> {\n+public class InstrumentResourceController extends GenericDomainObjectResourceController<Instrument, CrudService<Instrument>> {\n \n   public InstrumentResourceController(CrudService<Instrument> crudService,\n-      UserInformationProvider userInformationProvider) {\n+         UserInformationProvider userInformationProvider) {\n     super(crudService, userInformationProvider);\n   }\n \n+\n   @Override\n-  @Operation(\n-      description = \"Get the instrument. Public users will get the latest version of the instrument.\"\n-          + \" If the id is postfixed with the version number it will return exactly the \"\n-          + \"requested version, if available.\")\n+  @Operation(description = \"Get the instrument. Public users will get the latest version of the instrument.\" + \" If the id is postfixed with the version number it will return exactly the \" + \"requested version, if available.\")\n   @GetMapping(value = \"/instruments/{id:.+}\")\n   public ResponseEntity<Instrument> getDomainObject(@PathVariable String id) {\n     return super.getDomainObject(id);\n@@ -53,21 +51,25 @@ public class InstrumentResourceController\n     return super.postDomainObject(instrument);\n   }\n \n+\n   @Override\n   @PutMapping(value = \"/instruments/{id:.+}\")\n   public ResponseEntity<?> putDomainObject(@RequestBody Instrument instrument) {\n     return super.putDomainObject(instrument);\n   }\n \n+\n   @Override\n   @DeleteMapping(\"/instruments/{id:.+}\")\n   public ResponseEntity<?> deleteDomainObject(@PathVariable String id) {\n     return super.deleteDomainObject(id);\n   }\n \n+\n   @Override\n   protected URI buildLocationHeaderUri(Instrument domainObject) {\n-    return UriComponentsBuilder.fromPath(\"/api/instruments/\" + domainObject.getId()).build()\n-        .toUri();\n+    return UriComponentsBuilder.fromPath(\"/api/instruments/\"\n+      + domainObject.getId()).build()\n+                             .toUri();\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 21
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "41",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/0/InstrumentResourceController.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/styler_three_grams/0/InstrumentResourceController.java\nindex 6bce74055a0..34f44a6f976 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/0/InstrumentResourceController.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/styler_three_grams/0/InstrumentResourceController.java\n@@ -38,8 +38,9 @@ public class InstrumentResourceController\n \n   @Override\n   @Operation(\n-      description = \"Get the instrument. Public users will get the latest version of the instrument.\"\n-          + \" If the id is postfixed with the version number it will return exactly the \"\n+      description =\n+          \"Get the instrument. Public users will get the latest version of the instrument.\"\n+           + \" If the id is postfixed with the version number it will return exactly the \"\n           + \"requested version, if available.\")\n   @GetMapping(value = \"/instruments/{id:.+}\")\n   public ResponseEntity<Instrument> getDomainObject(@PathVariable String id) {\n",
            "diff_size": 3
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff",
        "styler_random"
    ]
}
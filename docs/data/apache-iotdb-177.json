{
    "project_name": "apache-iotdb",
    "error_id": "177",
    "information": {
        "errors": [
            {
                "line": "19",
                "severity": "warning",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * under the License.\n */\npackage org.apache.iotdb.db.writelog.node;\n\nimport org.apache.iotdb.db.qp.physical.PhysicalPlan;\nimport org.apache.iotdb.db.writelog.io.ILogReader;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/177/WriteLogNode.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler/177/WriteLogNode.java\nindex 21be3f74319..bc1ff2e3677 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/177/WriteLogNode.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler/177/WriteLogNode.java\n@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n package org.apache.iotdb.db.writelog.node;\n \n import org.apache.iotdb.db.qp.physical.PhysicalPlan;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/177/WriteLogNode.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/intellij/177/WriteLogNode.java\nindex 21be3f74319..af3c336b346 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/177/WriteLogNode.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/intellij/177/WriteLogNode.java\n@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n package org.apache.iotdb.db.writelog.node;\n \n import org.apache.iotdb.db.qp.physical.PhysicalPlan;\n@@ -24,7 +25,9 @@ import org.apache.iotdb.db.writelog.io.ILogReader;\n import java.io.IOException;\n import java.nio.ByteBuffer;\n \n-/** WriteLogNode is the minimum unit of managing WALs. */\n+/**\n+ * WriteLogNode is the minimum unit of managing WALs.\n+ */\n public interface WriteLogNode {\n \n   /**\n@@ -36,10 +39,14 @@ public interface WriteLogNode {\n    */\n   void write(PhysicalPlan plan) throws IOException;\n \n-  /** Sync and close streams. */\n+  /**\n+   * Sync and close streams.\n+   */\n   void close() throws IOException;\n \n-  /** Write what in cache to disk. */\n+  /**\n+   * Write what in cache to disk.\n+   */\n   void forceSync() throws IOException;\n \n   /**\n@@ -81,6 +88,8 @@ public interface WriteLogNode {\n    */\n   ILogReader getLogReader();\n \n-  /** init the buffers, this should be called after this node being created. */\n+  /**\n+   * init the buffers, this should be called after this node being created.\n+   */\n   void initBuffer(ByteBuffer[] byteBuffers);\n }\n",
            "diff_size": 13
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "19",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/177/WriteLogNode.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/codebuff/177/WriteLogNode.java\nindex 21be3f74319..0050f22e1da 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/177/WriteLogNode.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/codebuff/177/WriteLogNode.java\n@@ -20,11 +20,11 @@ package org.apache.iotdb.db.writelog.node;\n \n import org.apache.iotdb.db.qp.physical.PhysicalPlan;\n import org.apache.iotdb.db.writelog.io.ILogReader;\n-\n import java.io.IOException;\n import java.nio.ByteBuffer;\n \n /** WriteLogNode is the minimum unit of managing WALs. */\n+\n public interface WriteLogNode {\n \n   /**\n@@ -34,24 +34,34 @@ public interface WriteLogNode {\n    *\n    * @param plan - a PhysicalPlan\n    */\n+\n+\n   void write(PhysicalPlan plan) throws IOException;\n \n   /** Sync and close streams. */\n+\n+\n   void close() throws IOException;\n \n   /** Write what in cache to disk. */\n+\n+\n   void forceSync() throws IOException;\n \n   /**\n    * When data that have WALs in this node start to be flushed, this method must be called to change\n    * the working WAL file.\n    */\n+\n+\n   void notifyStartFlush() throws IOException;\n \n   /**\n    * When data that have WALs in this node end flushing, this method must be called to check and\n    * remove the out-dated logs file.\n    */\n+\n+\n   void notifyEndFlush();\n \n   /**\n@@ -59,6 +69,8 @@ public interface WriteLogNode {\n    *\n    * @return The identifier of this log node.\n    */\n+\n+\n   String getIdentifier();\n \n   /**\n@@ -66,12 +78,16 @@ public interface WriteLogNode {\n    *\n    * @return The directory where wal files of this node are placed.\n    */\n+\n+\n   String getLogDirectory();\n \n   /**\n    * Abandon all logs in this node and delete the log directory. Calling insert() after calling this\n    * method is undefined.\n    */\n+\n+\n   ByteBuffer[] delete() throws IOException;\n \n   /**\n@@ -79,8 +95,12 @@ public interface WriteLogNode {\n    *\n    * @return an ILogReader which can iterate each log in this log node.\n    */\n+\n+\n   ILogReader getLogReader();\n \n   /** init the buffers, this should be called after this node being created. */\n+\n+\n   void initBuffer(ByteBuffer[] byteBuffers);\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 23
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/177/WriteLogNode.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler_random/177/WriteLogNode.java\nindex 21be3f74319..bc1ff2e3677 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/177/WriteLogNode.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler_random/177/WriteLogNode.java\n@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n package org.apache.iotdb.db.writelog.node;\n \n import org.apache.iotdb.db.qp.physical.PhysicalPlan;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/177/WriteLogNode.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler_three_grams/177/WriteLogNode.java\nindex 21be3f74319..bc1ff2e3677 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/177/WriteLogNode.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler_three_grams/177/WriteLogNode.java\n@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n package org.apache.iotdb.db.writelog.node;\n \n import org.apache.iotdb.db.qp.physical.PhysicalPlan;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
{
    "project_name": "neo4j-neo4j",
    "error_id": "2290",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "44",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "93",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "114",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "135",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "171",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "183",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "188",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "188",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2290/WritableAbstractDatabaseIndex.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2290/WritableAbstractDatabaseIndex.java\nindex 231e6918c0b..1c5beb3570d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2290/WritableAbstractDatabaseIndex.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2290/WritableAbstractDatabaseIndex.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.api.impl.index;\n \n import java.io.IOException;\n@@ -32,6 +33,7 @@ import org.neo4j.kernel.api.index.IndexReader;\n /**\n  * Writable lucene index representation that wraps provided index implementation and\n  * allow read only operations only on top of it.\n+ *\n  * @param <INDEX> - particular index implementation\n  */\n public class WritableAbstractDatabaseIndex<INDEX extends AbstractLuceneIndex<READER>, READER extends IndexReader> extends AbstractDatabaseIndex<INDEX, READER>\n@@ -39,9 +41,9 @@ public class WritableAbstractDatabaseIndex<INDEX extends AbstractLuceneIndex<REA\n     // lock used to guard commits and close of lucene indexes from separate threads\n     protected final ReentrantLock commitCloseLock = new ReentrantLock();\n \n-    public WritableAbstractDatabaseIndex( INDEX luceneIndex )\n+    public WritableAbstractDatabaseIndex(INDEX luceneIndex)\n     {\n-        super( luceneIndex );\n+        super(luceneIndex);\n     }\n \n     /**\n@@ -72,8 +74,7 @@ public class WritableAbstractDatabaseIndex<INDEX extends AbstractLuceneIndex<REA\n         try\n         {\n             luceneIndex.drop();\n-        }\n-        finally\n+        } finally\n         {\n             commitCloseLock.unlock();\n         }\n@@ -89,8 +90,7 @@ public class WritableAbstractDatabaseIndex<INDEX extends AbstractLuceneIndex<REA\n         try\n         {\n             commitLockedFlush();\n-        }\n-        finally\n+        } finally\n         {\n             commitCloseLock.unlock();\n         }\n@@ -98,7 +98,7 @@ public class WritableAbstractDatabaseIndex<INDEX extends AbstractLuceneIndex<REA\n \n     protected void commitLockedFlush() throws IOException\n     {\n-        luceneIndex.flush( false );\n+        luceneIndex.flush(false);\n     }\n \n     /**\n@@ -111,8 +111,7 @@ public class WritableAbstractDatabaseIndex<INDEX extends AbstractLuceneIndex<REA\n         try\n         {\n             commitLockedClose();\n-        }\n-        finally\n+        } finally\n         {\n             commitCloseLock.unlock();\n         }\n@@ -133,8 +132,7 @@ public class WritableAbstractDatabaseIndex<INDEX extends AbstractLuceneIndex<REA\n         try\n         {\n             return luceneIndex.snapshot();\n-        }\n-        finally\n+        } finally\n         {\n             commitCloseLock.unlock();\n         }\n@@ -170,8 +168,7 @@ public class WritableAbstractDatabaseIndex<INDEX extends AbstractLuceneIndex<REA\n         try\n         {\n             luceneIndex.markAsOnline();\n-        }\n-        finally\n+        } finally\n         {\n             commitCloseLock.unlock();\n         }\n@@ -180,16 +177,16 @@ public class WritableAbstractDatabaseIndex<INDEX extends AbstractLuceneIndex<REA\n     @Override\n     public LuceneIndexWriter getIndexWriter()\n     {\n-        return luceneIndex.getIndexWriter( this );\n+        return luceneIndex.getIndexWriter(this);\n     }\n \n-    public boolean hasSinglePartition( List<AbstractIndexPartition> partitions )\n+    public boolean hasSinglePartition(List<AbstractIndexPartition> partitions)\n     {\n-        return luceneIndex.hasSinglePartition( partitions );\n+        return luceneIndex.hasSinglePartition(partitions);\n     }\n \n-    public AbstractIndexPartition getFirstPartition( List<AbstractIndexPartition> partitions )\n+    public AbstractIndexPartition getFirstPartition(List<AbstractIndexPartition> partitions)\n     {\n-        return luceneIndex.getFirstPartition( partitions );\n+        return luceneIndex.getFirstPartition(partitions);\n     }\n }\n",
            "diff_size": 20
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
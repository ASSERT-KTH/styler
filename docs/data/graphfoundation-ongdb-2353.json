{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2353",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "63",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2353/LuceneIndexStorageBuilder.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2353/LuceneIndexStorageBuilder.java\nindex a90eb6d4f28..6eac2366467 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2353/LuceneIndexStorageBuilder.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2353/LuceneIndexStorageBuilder.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.api.impl.index.builder;\n \n import java.io.File;\n@@ -33,87 +34,87 @@ import org.neo4j.kernel.api.impl.index.storage.PartitionedIndexStorage;\n  */\n public class LuceneIndexStorageBuilder\n {\n-    private DirectoryFactory directoryFactory = DirectoryFactory.PERSISTENT;\n-    private FileSystemAbstraction fileSystem;\n-    private File indexRootFolder;\n-    private PartitionedIndexStorage indexStorage;\n+  private DirectoryFactory directoryFactory = DirectoryFactory.PERSISTENT;\n+  private FileSystemAbstraction fileSystem;\n+  private File indexRootFolder;\n+  private PartitionedIndexStorage indexStorage;\n \n-    private LuceneIndexStorageBuilder()\n-    {\n-    }\n+  private LuceneIndexStorageBuilder()\n+  {\n+  }\n \n-    /**\n-     * Create new lucene index storage builder\n-     *\n-     * @return index builder\n-     */\n-    public static LuceneIndexStorageBuilder create()\n-    {\n-        return new LuceneIndexStorageBuilder();\n-    }\n+  /**\n+   * Create new lucene index storage builder\n+   *\n+   * @return index builder\n+   */\n+  public static LuceneIndexStorageBuilder create()\n+  {\n+    return new LuceneIndexStorageBuilder();\n+  }\n \n-    /**\n-     * Build lucene index storage with specified configuration\n-     *\n-     * @return lucene index storage\n-     */\n-    public PartitionedIndexStorage build()\n+  /**\n+   * Build lucene index storage with specified configuration\n+   *\n+   * @return lucene index storage\n+   */\n+  public PartitionedIndexStorage build()\n+  {\n+    if (indexStorage == null)\n     {\n-        if ( indexStorage == null )\n-        {\n-            Objects.requireNonNull( directoryFactory );\n-            Objects.requireNonNull( fileSystem );\n-            Objects.requireNonNull( indexRootFolder );\n-            indexStorage = new PartitionedIndexStorage( directoryFactory, fileSystem, indexRootFolder );\n-        }\n-        return indexStorage;\n+      Objects.requireNonNull(directoryFactory);\n+      Objects.requireNonNull(fileSystem);\n+      Objects.requireNonNull(indexRootFolder);\n+      indexStorage = new PartitionedIndexStorage(directoryFactory, fileSystem, indexRootFolder);\n     }\n+    return indexStorage;\n+  }\n \n-    /**\n-     * Specify directory factory\n-     *\n-     * @param directoryFactory directory factory\n-     * @return index storage builder\n-     */\n-    public LuceneIndexStorageBuilder withDirectoryFactory( DirectoryFactory directoryFactory )\n-    {\n-        this.directoryFactory = directoryFactory;\n-        return this;\n-    }\n+  /**\n+   * Specify directory factory\n+   *\n+   * @param directoryFactory directory factory\n+   * @return index storage builder\n+   */\n+  public LuceneIndexStorageBuilder withDirectoryFactory(DirectoryFactory directoryFactory)\n+  {\n+    this.directoryFactory = directoryFactory;\n+    return this;\n+  }\n \n-    /**\n-     * Specify file system abstraction\n-     *\n-     * @param fileSystem file system abstraction\n-     * @return index storage builder\n-     */\n-    public LuceneIndexStorageBuilder withFileSystem( FileSystemAbstraction fileSystem )\n-    {\n-        this.fileSystem = fileSystem;\n-        return this;\n-    }\n+  /**\n+   * Specify file system abstraction\n+   *\n+   * @param fileSystem file system abstraction\n+   * @return index storage builder\n+   */\n+  public LuceneIndexStorageBuilder withFileSystem(FileSystemAbstraction fileSystem)\n+  {\n+    this.fileSystem = fileSystem;\n+    return this;\n+  }\n \n-    /**\n-     * Specify index root folder\n-     *\n-     * @param indexRootFolder root folder\n-     * @return index storage builder\n-     */\n-    public LuceneIndexStorageBuilder withIndexFolder( File indexRootFolder )\n-    {\n-        this.indexRootFolder = indexRootFolder;\n-        return this;\n-    }\n+  /**\n+   * Specify index root folder\n+   *\n+   * @param indexRootFolder root folder\n+   * @return index storage builder\n+   */\n+  public LuceneIndexStorageBuilder withIndexFolder(File indexRootFolder)\n+  {\n+    this.indexRootFolder = indexRootFolder;\n+    return this;\n+  }\n \n-    /**\n-     * Specify partitioned index storage\n-     *\n-     * @param indexStorage index storage\n-     * @return index storage builder\n-     */\n-    public LuceneIndexStorageBuilder withIndexStorage( PartitionedIndexStorage indexStorage )\n-    {\n-        this.indexStorage = indexStorage;\n-        return this;\n-    }\n+  /**\n+   * Specify partitioned index storage\n+   *\n+   * @param indexStorage index storage\n+   * @return index storage builder\n+   */\n+  public LuceneIndexStorageBuilder withIndexStorage(PartitionedIndexStorage indexStorage)\n+  {\n+    this.indexStorage = indexStorage;\n+    return this;\n+  }\n }\n",
            "diff_size": 79
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2353/LuceneIndexStorageBuilder.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2353/LuceneIndexStorageBuilder.java\nindex a90eb6d4f28..842d282fdfc 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2353/LuceneIndexStorageBuilder.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2353/LuceneIndexStorageBuilder.java\n@@ -66,7 +66,8 @@ public class LuceneIndexStorageBuilder\n             Objects.requireNonNull( indexRootFolder );\n             indexStorage = new PartitionedIndexStorage( directoryFactory, fileSystem, indexRootFolder );\n         }\n-        return indexStorage;\n+\n+return indexStorage;\n     }\n \n     /**\n@@ -116,4 +117,4 @@ public class LuceneIndexStorageBuilder\n         this.indexStorage = indexStorage;\n         return this;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "spark-root-laurelin",
    "error_id": "5",
    "information": {
        "errors": [
            {
                "line": "23",
                "column": "1",
                "severity": "warning",
                "message": "Line contains a tab character.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
            }
        ]
    },
    "source_code": "    public HadoopFile(String pathStr) throws IOException {\n        Configuration conf = new Configuration();\n\tURI uri = URI.create(pathStr);\n        FileSystem fileSystem = FileSystem.get(uri, conf);\n        Path path = new Path(uri);\n        fd = fileSystem.open(path, 'r');",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/spark-root-laurelin/errored/1/5/HadoopFile.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/spark-root-laurelin/styler/5/HadoopFile.java\nindex 9ffa32ef17e..83ed99aa009 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/spark-root-laurelin/errored/1/5/HadoopFile.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/spark-root-laurelin/styler/5/HadoopFile.java\n@@ -20,7 +20,7 @@ public class HadoopFile implements FileInterface {\n \n     public HadoopFile(String pathStr) throws IOException {\n         Configuration conf = new Configuration();\n-\tURI uri = URI.create(pathStr);\n+        URI uri = URI.create(pathStr);\n         FileSystem fileSystem = FileSystem.get(uri, conf);\n         Path path = new Path(uri);\n         fd = fileSystem.open(path, 'r');\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/spark-root-laurelin/errored/1/5/HadoopFile.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/spark-root-laurelin/intellij/5/HadoopFile.java\nindex 9ffa32ef17e..55421fe76ea 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/spark-root-laurelin/errored/1/5/HadoopFile.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/spark-root-laurelin/intellij/5/HadoopFile.java\n@@ -20,7 +20,7 @@ public class HadoopFile implements FileInterface {\n \n     public HadoopFile(String pathStr) throws IOException {\n         Configuration conf = new Configuration();\n-\tURI uri = URI.create(pathStr);\n+        URI uri = URI.create(pathStr);\n         FileSystem fileSystem = FileSystem.get(uri, conf);\n         Path path = new Path(uri);\n         fd = fileSystem.open(path, 'r');\n@@ -35,8 +35,8 @@ public class HadoopFile implements FileInterface {\n         if (len != ((int) len)) {\n             throw new RuntimeException(\"Cannot perform a single read > 2GB\");\n         }\n-        ByteBuffer ret = ByteBuffer.allocate((int)len);\n-        fd.read(offset, ret.array(), 0, (int)len);\n+        ByteBuffer ret = ByteBuffer.allocate((int) len);\n+        fd.read(offset, ret.array(), 0, (int) len);\n         return ret;\n     }\n \n@@ -46,12 +46,14 @@ public class HadoopFile implements FileInterface {\n     }\n \n     @Override\n-    public Future<ByteBuffer> readAsync(int offset, int len) throws IOException {\n+    public Future<ByteBuffer> readAsync(int offset, int len)\n+        throws IOException {\n         throw new UnsupportedOperationException();\n     }\n \n     @Override\n-    public Future<ByteBuffer>[] readvAsync(int[] offsets, int[] lens) throws IOException {\n+    public Future<ByteBuffer>[] readvAsync(int[] offsets, int[] lens)\n+        throws IOException {\n         throw new UnsupportedOperationException();\n     }\n \n",
            "diff_size": 7
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/spark-root-laurelin/errored/1/5/HadoopFile.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/spark-root-laurelin/codebuff/5/HadoopFile.java\nindex 9ffa32ef17e..aeabe1082ac 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/spark-root-laurelin/errored/1/5/HadoopFile.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/spark-root-laurelin/codebuff/5/HadoopFile.java\n@@ -8,7 +8,6 @@ import java.io.IOException;\n import java.net.URI;\n import java.nio.ByteBuffer;\n import java.util.concurrent.Future;\n-\n import org.apache.hadoop.conf.Configuration;\n import org.apache.hadoop.fs.FSDataInputStream;\n import org.apache.hadoop.fs.FileSystem;\n@@ -20,7 +19,7 @@ public class HadoopFile implements FileInterface {\n \n     public HadoopFile(String pathStr) throws IOException {\n         Configuration conf = new Configuration();\n-\tURI uri = URI.create(pathStr);\n+        URI uri = URI.create(pathStr);\n         FileSystem fileSystem = FileSystem.get(uri, conf);\n         Path path = new Path(uri);\n         fd = fileSystem.open(path, 'r');\n@@ -30,9 +29,10 @@ public class HadoopFile implements FileInterface {\n     /*\n      * Stubs for now to satisfy the interface\n      */\n+\n     @Override\n     public ByteBuffer read(long offset, long len) throws IOException {\n-        if (len != ((int) len)) {\n+        if (len != ((int)len)) {\n             throw new RuntimeException(\"Cannot perform a single read > 2GB\");\n         }\n         ByteBuffer ret = ByteBuffer.allocate((int)len);\n",
            "diff_size": 4
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/spark-root-laurelin/errored/1/5/HadoopFile.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/spark-root-laurelin/styler_random/5/HadoopFile.java\nindex 9ffa32ef17e..83ed99aa009 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/spark-root-laurelin/errored/1/5/HadoopFile.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/spark-root-laurelin/styler_random/5/HadoopFile.java\n@@ -20,7 +20,7 @@ public class HadoopFile implements FileInterface {\n \n     public HadoopFile(String pathStr) throws IOException {\n         Configuration conf = new Configuration();\n-\tURI uri = URI.create(pathStr);\n+        URI uri = URI.create(pathStr);\n         FileSystem fileSystem = FileSystem.get(uri, conf);\n         Path path = new Path(uri);\n         fd = fileSystem.open(path, 'r');\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/spark-root-laurelin/errored/1/5/HadoopFile.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/spark-root-laurelin/styler_three_grams/5/HadoopFile.java\nindex 9ffa32ef17e..83ed99aa009 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/spark-root-laurelin/errored/1/5/HadoopFile.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/spark-root-laurelin/styler_three_grams/5/HadoopFile.java\n@@ -20,7 +20,7 @@ public class HadoopFile implements FileInterface {\n \n     public HadoopFile(String pathStr) throws IOException {\n         Configuration conf = new Configuration();\n-\tURI uri = URI.create(pathStr);\n+        URI uri = URI.create(pathStr);\n         FileSystem fileSystem = FileSystem.get(uri, conf);\n         Path path = new Path(uri);\n         fd = fileSystem.open(path, 'r');\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize"
    ]
}
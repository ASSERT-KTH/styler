{
    "project_name": "graphfoundation-ongdb",
    "error_id": "750",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "39",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "61",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/750/PrintingInconsistenciesHandler.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/750/PrintingInconsistenciesHandler.java\nindex 1bdba96ccfd..0c9e6f6f856 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/750/PrintingInconsistenciesHandler.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/750/PrintingInconsistenciesHandler.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.tools.txlog;\n \n import java.io.PrintStream;\n@@ -29,56 +30,55 @@ import org.neo4j.kernel.impl.transaction.log.LogPosition;\n  */\n class PrintingInconsistenciesHandler implements InconsistenciesHandler\n {\n-    private static final int DEFAULT_NUMBER_OF_INCONSISTENCIES_TO_PRINT = 1024;\n+  private static final int DEFAULT_NUMBER_OF_INCONSISTENCIES_TO_PRINT = 1024;\n \n-    private final PrintStream out;\n+  private final PrintStream out;\n \n-    private int seenInconsistencies;\n+  private int seenInconsistencies;\n \n-    PrintingInconsistenciesHandler( PrintStream out )\n-    {\n-        this.out = out;\n-    }\n+  PrintingInconsistenciesHandler(PrintStream out)\n+  {\n+    this.out = out;\n+  }\n \n-    @Override\n-    public void reportInconsistentCheckPoint( long logVersion, LogPosition logPosition, long size )\n+  @Override\n+  public void reportInconsistentCheckPoint(long logVersion, LogPosition logPosition, long size)\n+  {\n+    out.println(\"Inconsistent check point found in log with version \" + logVersion);\n+    long pointedLogVersion = logPosition.getLogVersion();\n+    out.println(\"\\tCheck point claims to recover from \" + logPosition.getByteOffset() + \" in log with version \" + pointedLogVersion);\n+    if (size >= 0)\n     {\n-        out.println( \"Inconsistent check point found in log with version \" + logVersion );\n-        long pointedLogVersion = logPosition.getLogVersion();\n-        out.println( \"\\tCheck point claims to recover from \" + logPosition.getByteOffset() + \" in log with version \" + pointedLogVersion );\n-        if ( size >= 0 )\n-        {\n-            out.println( \"\\tLog with version \" + pointedLogVersion + \" has size \" + size );\n-        }\n-        else\n-        {\n-            out.println( \"\\tLog with version \" + pointedLogVersion + \" does not exist\" );\n-        }\n-        incrementAndPerhapsThrow();\n-    }\n-\n-    @Override\n-    public void reportInconsistentCommand( RecordInfo<?> committed, RecordInfo<?> current )\n+      out.println(\"\\tLog with version \" + pointedLogVersion + \" has size \" + size);\n+    } else\n     {\n-        out.println( \"Inconsistent after and before states:\" );\n-        out.println( \"\\t+\" + committed );\n-        out.println( \"\\t-\" + current );\n-        incrementAndPerhapsThrow();\n+      out.println(\"\\tLog with version \" + pointedLogVersion + \" does not exist\");\n     }\n+    incrementAndPerhapsThrow();\n+  }\n \n-    @Override\n-    public void reportInconsistentTxIdSequence( long lastSeenTxId, long currentTxId )\n-    {\n-        out.printf( \"Inconsistent in tx id sequence between transactions %d and %d %n\", lastSeenTxId, currentTxId );\n-        incrementAndPerhapsThrow();\n-    }\n+  @Override\n+  public void reportInconsistentCommand(RecordInfo<?> committed, RecordInfo<?> current)\n+  {\n+    out.println(\"Inconsistent after and before states:\");\n+    out.println(\"\\t+\" + committed);\n+    out.println(\"\\t-\" + current);\n+    incrementAndPerhapsThrow();\n+  }\n+\n+  @Override\n+  public void reportInconsistentTxIdSequence(long lastSeenTxId, long currentTxId)\n+  {\n+    out.printf(\"Inconsistent in tx id sequence between transactions %d and %d %n\", lastSeenTxId, currentTxId);\n+    incrementAndPerhapsThrow();\n+  }\n \n-    private void incrementAndPerhapsThrow()\n+  private void incrementAndPerhapsThrow()\n+  {\n+    seenInconsistencies++;\n+    if (seenInconsistencies >= DEFAULT_NUMBER_OF_INCONSISTENCIES_TO_PRINT)\n     {\n-        seenInconsistencies++;\n-        if ( seenInconsistencies >= DEFAULT_NUMBER_OF_INCONSISTENCIES_TO_PRINT )\n-        {\n-            throw new RuntimeException( \"Too many inconsistencies found\" );\n-        }\n+      throw new RuntimeException(\"Too many inconsistencies found\");\n     }\n+  }\n }\n",
            "diff_size": 62
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/750/PrintingInconsistenciesHandler.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/750/PrintingInconsistenciesHandler.java\nindex 1bdba96ccfd..60145bcf796 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/750/PrintingInconsistenciesHandler.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/750/PrintingInconsistenciesHandler.java\n@@ -30,8 +30,7 @@ import org.neo4j.kernel.impl.transaction.log.LogPosition;\n class PrintingInconsistenciesHandler implements InconsistenciesHandler\n {\n     private static final int DEFAULT_NUMBER_OF_INCONSISTENCIES_TO_PRINT = 1024;\n-\n-    private final PrintStream out;\n+private final PrintStream out;\n \n     private int seenInconsistencies;\n \n@@ -54,7 +53,8 @@ class PrintingInconsistenciesHandler implements InconsistenciesHandler\n         {\n             out.println( \"\\tLog with version \" + pointedLogVersion + \" does not exist\" );\n         }\n-        incrementAndPerhapsThrow();\n+\n+incrementAndPerhapsThrow();\n     }\n \n     @Override\n@@ -81,4 +81,4 @@ class PrintingInconsistenciesHandler implements InconsistenciesHandler\n             throw new RuntimeException( \"Too many inconsistencies found\" );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
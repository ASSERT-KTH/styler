{
    "project_name": "eclipse-kura",
    "error_id": "30",
    "information": {
        "errors": [
            {
                "line": "36",
                "severity": "error",
                "message": "Line is longer than 150 characters (found 156).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * generation of a sequence of pulses and that more pulses (the width thereof) to generate may be specified.\n * <p />\n * This interface also indirectly extends the {@link jdk.dio.AsyncErrorHandler AsyncErrorHandler} interface for getting notified of asynchronous I/O errors.\n * <p />\n * A {@code GenerationRoundListener} can be registered using one of the\n * {@link PWMChannel#startGeneration PWMChannel.startGeneration} methods.",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "36",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 156).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "36",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 156).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/errored/1/30/GenerationRoundListener.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/intellij/30/GenerationRoundListener.java\nindex 711fa0f6b80..5d891e6a500 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/errored/1/30/GenerationRoundListener.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/intellij/30/GenerationRoundListener.java\n@@ -32,9 +32,9 @@ import java.nio.IntBuffer;\n /**\n  * The {@code GenerationRoundListener} interface defines methods for getting notified of the completion of the\n  * generation of a sequence of pulses and that more pulses (the width thereof) to generate may be specified.\n- * <p />\n+ * <p/>\n  * This interface also indirectly extends the {@link jdk.dio.AsyncErrorHandler AsyncErrorHandler} interface for getting notified of asynchronous I/O errors.\n- * <p />\n+ * <p/>\n  * A {@code GenerationRoundListener} can be registered using one of the\n  * {@link PWMChannel#startGeneration PWMChannel.startGeneration} methods.\n  *\n@@ -47,8 +47,7 @@ public interface GenerationRoundListener extends OutputRoundListener<PWMChannel,\n      * Invoked when a buffer of DAC output values has been converted and the buffer is available for copying more output\n      * values to convert, or when an output underrun error occurred.\n      *\n-     * @param event\n-     *            the event that occurred.\n+     * @param event the event that occurred.\n      */\n     @Override\n     void outputRoundCompleted(RoundCompletionEvent<PWMChannel, IntBuffer> event);\n@@ -57,7 +56,7 @@ public interface GenerationRoundListener extends OutputRoundListener<PWMChannel,\n      * Invoked when an I/O operation fails.\n      *\n      * @param exception The exception to indicate why the I/O operation failed\n-     * @param source The {@link PWMChannel} instance that generated the error.\n+     * @param source    The {@link PWMChannel} instance that generated the error.\n      */\n     @Override\n     void failed(Throwable exception, PWMChannel source);\n",
            "diff_size": 5
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "36",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 156).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/errored/1/30/GenerationRoundListener.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/naturalize/30/GenerationRoundListener.java\nindex 711fa0f6b80..32a23922e2f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/errored/1/30/GenerationRoundListener.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/naturalize/30/GenerationRoundListener.java\n@@ -61,4 +61,4 @@ public interface GenerationRoundListener extends OutputRoundListener<PWMChannel,\n      */\n     @Override\n     void failed(Throwable exception, PWMChannel source);\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "36",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 156).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/errored/1/30/GenerationRoundListener.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/codebuff/30/GenerationRoundListener.java\nindex 711fa0f6b80..bb62d2a9a35 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/errored/1/30/GenerationRoundListener.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/codebuff/30/GenerationRoundListener.java\n@@ -41,6 +41,7 @@ import java.nio.IntBuffer;\n  * @see PWMChannel#startGeneration PWMChannel.startGeneration\n  * @since 1.0\n  */\n+\n public interface GenerationRoundListener extends OutputRoundListener<PWMChannel, IntBuffer> {\n \n     /**\n@@ -50,6 +51,8 @@ public interface GenerationRoundListener extends OutputRoundListener<PWMChannel,\n      * @param event\n      *            the event that occurred.\n      */\n+\n+\n     @Override\n     void outputRoundCompleted(RoundCompletionEvent<PWMChannel, IntBuffer> event);\n \n@@ -59,6 +62,8 @@ public interface GenerationRoundListener extends OutputRoundListener<PWMChannel,\n      * @param exception The exception to indicate why the I/O operation failed\n      * @param source The {@link PWMChannel} instance that generated the error.\n      */\n+\n+\n     @Override\n     void failed(Throwable exception, PWMChannel source);\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "36",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 156).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "35",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 156).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/errored/1/30/GenerationRoundListener.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/styler_three_grams/30/GenerationRoundListener.java\nindex 711fa0f6b80..ccc9c1f08dd 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/errored/1/30/GenerationRoundListener.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/styler_three_grams/30/GenerationRoundListener.java\n@@ -28,7 +28,6 @@ package jdk.dio.pwm;\n import jdk.dio.OutputRoundListener;\n import jdk.dio.RoundCompletionEvent;\n import java.nio.IntBuffer;\n-\n /**\n  * The {@code GenerationRoundListener} interface defines methods for getting notified of the completion of the\n  * generation of a sequence of pulses and that more pulses (the width thereof) to generate may be specified.\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
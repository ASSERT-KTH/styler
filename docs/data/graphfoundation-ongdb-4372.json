{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4372",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": null,
            "diff": null
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "55",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "11",
                    "severity": "error",
                    "message": "'}' at column 11 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "119",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "54",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "126",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "129",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "150",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "150",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "168",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "175",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "175",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "177",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "177",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4372/LuceneExplicitIndexUpgrader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4372/LuceneExplicitIndexUpgrader.java\nindex 6ff395e6502..71e74129fe6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4372/LuceneExplicitIndexUpgrader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4372/LuceneExplicitIndexUpgrader.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.upgrade.lucene;\n \n import java.io.IOException;\n@@ -44,138 +45,139 @@ import org.neo4j.upgrade.loader.JarLoaderSupplier;\n  */\n public class LuceneExplicitIndexUpgrader\n {\n-    public interface Monitor\n-    {\n-        /**\n-         * Upgrade is starting.\n-         *\n-         * @param count number of indexes to migrate.\n-         */\n-        default void starting( int count ) {}\n-\n-        /**\n-         * Called after an index has been migrated, called for each migrated index.\n-         *\n-         * @param name name of the index.\n-         */\n-        default void migrated( String name ) {}\n-    }\n-\n-    public static final Monitor NO_MONITOR = new Monitor()\n-    {\n-    };\n-\n-    private static final String LIBRARY_DIRECTORY = \"lib\";\n-    private static final String RESOURCE_SEPARATOR = \"/\";\n-    private static final String LUCENE4_CORE_JAR_NAME = \"lucene-core-4.10.4.jar\";\n-    private static final String LUCENE5_CORE_JAR_NAME = \"lucene-core-5.5.0.jar\";\n-    private static final String LUCENE5_BACKWARD_CODECS_NAME = \"lucene-backward-codecs-5.5.0.jar\";\n-    private static final String SEGMENTS_FILE_NAME_PREFIX = \"segments\";\n-\n-    private final Path indexRootPath;\n-    private final Monitor monitor;\n-\n-    public LuceneExplicitIndexUpgrader( Path indexRootPath, Monitor monitor )\n-    {\n-        this.monitor = monitor;\n-        if ( Files.exists( indexRootPath ) && !Files.isDirectory( indexRootPath ) )\n-        {\n-            throw new IllegalArgumentException( \"Index path should be a directory\" );\n-        }\n-        this.indexRootPath = indexRootPath;\n-    }\n-\n+  public interface Monitor\n+  {\n     /**\n-     * Perform index migrations\n-     * @throws ExplicitIndexMigrationException in case of exception during index migration\n+     * Upgrade is starting.\n+     *\n+     * @param count number of indexes to migrate.\n      */\n-    public void upgradeIndexes() throws ExplicitIndexMigrationException\n+    default void starting(int count)\n     {\n-        try\n-        {\n-            if ( !Files.exists( indexRootPath ) )\n-            {\n-                return;\n-            }\n-            monitor.starting( (int) Files.walk( indexRootPath ).count() );\n-            try ( Stream<Path> pathStream = Files.walk( indexRootPath );\n-                  IndexUpgraderWrapper lucene4Upgrader = createIndexUpgrader( getLucene4JarPaths() );\n-                  IndexUpgraderWrapper lucene5Upgrader = createIndexUpgrader( getLucene5JarPaths() ) )\n-            {\n-                List<Path> indexPaths = pathStream.filter( getIndexPathFilter() ).collect( Collectors.toList() );\n-                for ( Path indexPath : indexPaths )\n-                {\n-                    try\n-                    {\n-                        lucene4Upgrader.upgradeIndex( indexPath );\n-                        lucene5Upgrader.upgradeIndex( indexPath );\n-                        monitor.migrated( indexPath.toFile().getName() );\n-                    }\n-                    catch ( Throwable e )\n-                    {\n-                        throw new ExplicitIndexMigrationException( indexPath.getFileName().toString(),\n-                                \"Migration of explicit index at path:\" + indexPath + \" failed.\", e );\n-                    }\n-                }\n-            }\n-        }\n-        catch ( ExplicitIndexMigrationException ime )\n-        {\n-            throw ime;\n-        }\n-        catch ( Exception e )\n-        {\n-            throw new RuntimeException( \"Lucene explicit indexes migration failed.\", e );\n-        }\n     }\n \n-    IndexUpgraderWrapper createIndexUpgrader( String[] jars )\n+    /**\n+     * Called after an index has been migrated, called for each migrated index.\n+     *\n+     * @param name name of the index.\n+     */\n+    default void migrated(String name)\n     {\n-        return new IndexUpgraderWrapper( JarLoaderSupplier.of( jars ) );\n     }\n-\n-    private static String[] getLucene5JarPaths()\n+  }\n+\n+  public static final Monitor NO_MONITOR = new Monitor()\n+  {\n+  };\n+\n+  private static final String LIBRARY_DIRECTORY = \"lib\";\n+  private static final String RESOURCE_SEPARATOR = \"/\";\n+  private static final String LUCENE4_CORE_JAR_NAME = \"lucene-core-4.10.4.jar\";\n+  private static final String LUCENE5_CORE_JAR_NAME = \"lucene-core-5.5.0.jar\";\n+  private static final String LUCENE5_BACKWARD_CODECS_NAME = \"lucene-backward-codecs-5.5.0.jar\";\n+  private static final String SEGMENTS_FILE_NAME_PREFIX = \"segments\";\n+\n+  private final Path indexRootPath;\n+  private final Monitor monitor;\n+\n+  public LuceneExplicitIndexUpgrader(Path indexRootPath, Monitor monitor)\n+  {\n+    this.monitor = monitor;\n+    if (Files.exists(indexRootPath) && !Files.isDirectory(indexRootPath))\n     {\n-        return getJarsFullPaths( LUCENE5_CORE_JAR_NAME, LUCENE5_BACKWARD_CODECS_NAME );\n+      throw new IllegalArgumentException(\"Index path should be a directory\");\n     }\n-\n-    private static String[] getLucene4JarPaths()\n+    this.indexRootPath = indexRootPath;\n+  }\n+\n+  /**\n+   * Perform index migrations\n+   *\n+   * @throws ExplicitIndexMigrationException in case of exception during index migration\n+   */\n+  public void upgradeIndexes() throws ExplicitIndexMigrationException\n+  {\n+    try\n     {\n-        return getJarsFullPaths( LUCENE4_CORE_JAR_NAME );\n-    }\n-\n-    private static String[] getJarsFullPaths( String... jars )\n+      if (!Files.exists(indexRootPath))\n+      {\n+        return;\n+      }\n+      monitor.starting((int) Files.walk(indexRootPath).count());\n+      try (Stream<Path> pathStream = Files.walk(indexRootPath);\n+           IndexUpgraderWrapper lucene4Upgrader = createIndexUpgrader(getLucene4JarPaths());\n+           IndexUpgraderWrapper lucene5Upgrader = createIndexUpgrader(getLucene5JarPaths()))\n+      {\n+        List<Path> indexPaths = pathStream.filter(getIndexPathFilter()).collect(Collectors.toList());\n+        for (Path indexPath : indexPaths)\n+        {\n+          try\n+          {\n+            lucene4Upgrader.upgradeIndex(indexPath);\n+            lucene5Upgrader.upgradeIndex(indexPath);\n+            monitor.migrated(indexPath.toFile().getName());\n+          } catch (Throwable e)\n+          {\n+            throw new ExplicitIndexMigrationException(indexPath.getFileName().toString(),\n+                \"Migration of explicit index at path:\" + indexPath + \" failed.\", e);\n+          }\n+        }\n+      }\n+    } catch (ExplicitIndexMigrationException ime)\n     {\n-        return Stream.of( jars )\n-                .map( LuceneExplicitIndexUpgrader::getJarPath ).toArray( String[]::new );\n-    }\n-\n-    private static String getJarPath( String library )\n+      throw ime;\n+    } catch (Exception e)\n     {\n-        return LIBRARY_DIRECTORY + RESOURCE_SEPARATOR + library;\n+      throw new RuntimeException(\"Lucene explicit indexes migration failed.\", e);\n     }\n-\n-    private static Predicate<Path> getIndexPathFilter()\n+  }\n+\n+  IndexUpgraderWrapper createIndexUpgrader(String[] jars)\n+  {\n+    return new IndexUpgraderWrapper(JarLoaderSupplier.of(jars));\n+  }\n+\n+  private static String[] getLucene5JarPaths()\n+  {\n+    return getJarsFullPaths(LUCENE5_CORE_JAR_NAME, LUCENE5_BACKWARD_CODECS_NAME);\n+  }\n+\n+  private static String[] getLucene4JarPaths()\n+  {\n+    return getJarsFullPaths(LUCENE4_CORE_JAR_NAME);\n+  }\n+\n+  private static String[] getJarsFullPaths(String... jars)\n+  {\n+    return Stream.of(jars)\n+        .map(LuceneExplicitIndexUpgrader::getJarPath).toArray(String[]::new);\n+  }\n+\n+  private static String getJarPath(String library)\n+  {\n+    return LIBRARY_DIRECTORY + RESOURCE_SEPARATOR + library;\n+  }\n+\n+  private static Predicate<Path> getIndexPathFilter()\n+  {\n+    return path ->\n     {\n-        return path ->\n-        {\n-            try\n-            {\n-                return Files.isDirectory( path ) && isIndexDirectory( path );\n-            }\n-            catch ( IOException e )\n-            {\n-                throw new RuntimeException( e );\n-            }\n-        };\n-    }\n+      try\n+      {\n+        return Files.isDirectory(path) && isIndexDirectory(path);\n+      } catch (IOException e)\n+      {\n+        throw new RuntimeException(e);\n+      }\n+    };\n+  }\n \n-    private static boolean isIndexDirectory( Path path ) throws IOException\n+  private static boolean isIndexDirectory(Path path) throws IOException\n+  {\n+    try (Stream<Path> pathStream = Files.list(path))\n     {\n-        try ( Stream<Path> pathStream = Files.list( path ) )\n-        {\n-            return pathStream.anyMatch( child -> child.getFileName().toString().startsWith( SEGMENTS_FILE_NAME_PREFIX ) );\n-        }\n+      return pathStream.anyMatch(child -> child.getFileName().toString().startsWith(SEGMENTS_FILE_NAME_PREFIX));\n     }\n+  }\n \n }\n",
            "diff_size": 203
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_three_grams",
            "errors": null,
            "diff": null
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
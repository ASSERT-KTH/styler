{
    "project_name": "CONNECT-Solution-CONNECT",
    "error_id": "5",
    "information": {
        "errors": [
            {
                "line": "27",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\npackage gov.hhs.fha.nhinc.mpilib;\n\nimport org.apache.commons.collections.CollectionUtils;\n",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/5/Patient.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler/5/Patient.java\nindex 49008b25b00..e8713aaaa55 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/5/Patient.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler/5/Patient.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.mpilib;\n \n import org.apache.commons.collections.CollectionUtils;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/5/Patient.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/intellij/5/Patient.java\nindex 49008b25b00..0ccbeefab81 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/5/Patient.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/intellij/5/Patient.java\n@@ -24,163 +24,163 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.mpilib;\n \n import org.apache.commons.collections.CollectionUtils;\n \n /**\n- *\n  * @author rayj\n  */\n public class Patient implements java.io.Serializable {\n-    static final long serialVersionUID = 449060013287108229L;\n-    private String dateOfBirth = null;\n-    private String gender = \"\";\n-    private String ssn = \"\";\n-    private PersonNames names = new PersonNames();\n-    private Identifiers patientIdentifiers = new Identifiers();\n-    private Addresses adds = new Addresses();\n-    private PhoneNumbers phoneNumbers = new PhoneNumbers();\n-    private boolean optedIn = true;\n-\n-    /**\n-     * Public constructor method for Patient.\n-     */\n-    public Patient() {\n-    }\n-\n-    /**\n-     * @return true if the Patient is opted in. False otherwise.\n-     */\n-    public boolean isOptedIn() {\n-        return optedIn;\n-    }\n-\n-    /**\n-     * Method sets the optedIn parameter for the Patient.\n-     *\n-     * @param optedIn true if the patient is opted in, false otherwise\n-     */\n-    public void setOptedIn(final boolean optedIn) {\n-        this.optedIn = optedIn;\n-    }\n-\n-    /**\n-     * @return the date of birth for this Person, as a String\n-     */\n-    public String getDateOfBirth() {\n-        return dateOfBirth;\n-    }\n-\n-    /**\n-     * @param newVal the Date of Birth to set for this Person.\n-     */\n-    public void setDateOfBirth(final String newVal) {\n-        dateOfBirth = newVal;\n-    }\n-\n-    /**\n-     * @param val the phone number values to set for this Person\n-     */\n-    public void setPhoneNumbers(final PhoneNumbers val) {\n-        phoneNumbers = val;\n-    }\n-\n-    /**\n-     * @return the phone number values associated with this Person\n-     */\n-    public PhoneNumbers getPhoneNumbers() {\n-        return phoneNumbers;\n-    }\n-\n-    /**\n-     * @return the Identifiers value associated with this Person\n-     */\n-    public Identifiers getIdentifiers() {\n-        return patientIdentifiers;\n-    }\n-\n-    /**\n-     * @param newVal the Identifiers value to set for this Person\n-     */\n-    public void setIdentifiers(final Identifiers newVal) {\n-        patientIdentifiers = newVal;\n-    }\n-\n-    /**\n-     * @return the gender value for this Person\n-     */\n-    public String getGender() {\n-        return gender;\n-    }\n-\n-    /**\n-     * @param newVal the gender value for this Person\n-     */\n-    public void setGender(final String newVal) {\n-        gender = newVal;\n-    }\n-\n-    /**\n-     * @return the Social Security Number value for this Person\n-     */\n-    public String getSSN() {\n-        return ssn;\n-    }\n-\n-    /**\n-     * @param val the Social Security Number value to set for this Person\n-     */\n-    public void setSSN(final String val) {\n-        ssn = val;\n-    }\n-\n-    /**\n-     * @return the Addresses value associated with this Person\n-     */\n-    public Addresses getAddresses() {\n-        return adds;\n-    }\n-\n-    /**\n-     * @param val the Addresses value to associate with this Person\n-     */\n-    public void setAddresses(final Addresses val) {\n-        adds = val;\n-    }\n-\n-    /**\n-     * @param newVal the names value to associate with this Person\n-     */\n-    public void setNames(final PersonNames newVal) {\n-        names = newVal;\n-    }\n-\n-    /**\n-     * @return the names associated with this Person\n-     */\n-    public PersonNames getNames() {\n-        return names;\n-    }\n-\n-    @Override\n-    public String toString() {\n-        final StringBuilder result = new StringBuilder();\n-\n-        if (CollectionUtils.isNotEmpty(names)) {\n-\n-            for (int i = 0; i < names.size(); i++) {\n-                final PersonName personName = names.get(i);\n-                // Do not append \"|\" to the first name in the list.\n-                if (i == 0) {\n-                    result.append(personName.toString());\n-                } else {\n-                    result.append(\"|\");\n-                    result.append(personName.toString());\n-                }\n-            }\n-\n+  static final long serialVersionUID = 449060013287108229L;\n+  private String dateOfBirth = null;\n+  private String gender = \"\";\n+  private String ssn = \"\";\n+  private PersonNames names = new PersonNames();\n+  private Identifiers patientIdentifiers = new Identifiers();\n+  private Addresses adds = new Addresses();\n+  private PhoneNumbers phoneNumbers = new PhoneNumbers();\n+  private boolean optedIn = true;\n+\n+  /**\n+   * Public constructor method for Patient.\n+   */\n+  public Patient() {\n+  }\n+\n+  /**\n+   * @return true if the Patient is opted in. False otherwise.\n+   */\n+  public boolean isOptedIn() {\n+    return optedIn;\n+  }\n+\n+  /**\n+   * Method sets the optedIn parameter for the Patient.\n+   *\n+   * @param optedIn true if the patient is opted in, false otherwise\n+   */\n+  public void setOptedIn(final boolean optedIn) {\n+    this.optedIn = optedIn;\n+  }\n+\n+  /**\n+   * @return the date of birth for this Person, as a String\n+   */\n+  public String getDateOfBirth() {\n+    return dateOfBirth;\n+  }\n+\n+  /**\n+   * @param newVal the Date of Birth to set for this Person.\n+   */\n+  public void setDateOfBirth(final String newVal) {\n+    dateOfBirth = newVal;\n+  }\n+\n+  /**\n+   * @param val the phone number values to set for this Person\n+   */\n+  public void setPhoneNumbers(final PhoneNumbers val) {\n+    phoneNumbers = val;\n+  }\n+\n+  /**\n+   * @return the phone number values associated with this Person\n+   */\n+  public PhoneNumbers getPhoneNumbers() {\n+    return phoneNumbers;\n+  }\n+\n+  /**\n+   * @return the Identifiers value associated with this Person\n+   */\n+  public Identifiers getIdentifiers() {\n+    return patientIdentifiers;\n+  }\n+\n+  /**\n+   * @param newVal the Identifiers value to set for this Person\n+   */\n+  public void setIdentifiers(final Identifiers newVal) {\n+    patientIdentifiers = newVal;\n+  }\n+\n+  /**\n+   * @return the gender value for this Person\n+   */\n+  public String getGender() {\n+    return gender;\n+  }\n+\n+  /**\n+   * @param newVal the gender value for this Person\n+   */\n+  public void setGender(final String newVal) {\n+    gender = newVal;\n+  }\n+\n+  /**\n+   * @return the Social Security Number value for this Person\n+   */\n+  public String getSSN() {\n+    return ssn;\n+  }\n+\n+  /**\n+   * @param val the Social Security Number value to set for this Person\n+   */\n+  public void setSSN(final String val) {\n+    ssn = val;\n+  }\n+\n+  /**\n+   * @return the Addresses value associated with this Person\n+   */\n+  public Addresses getAddresses() {\n+    return adds;\n+  }\n+\n+  /**\n+   * @param val the Addresses value to associate with this Person\n+   */\n+  public void setAddresses(final Addresses val) {\n+    adds = val;\n+  }\n+\n+  /**\n+   * @param newVal the names value to associate with this Person\n+   */\n+  public void setNames(final PersonNames newVal) {\n+    names = newVal;\n+  }\n+\n+  /**\n+   * @return the names associated with this Person\n+   */\n+  public PersonNames getNames() {\n+    return names;\n+  }\n+\n+  @Override\n+  public String toString() {\n+    final StringBuilder result = new StringBuilder();\n+\n+    if (CollectionUtils.isNotEmpty(names)) {\n+\n+      for (int i = 0; i < names.size(); i++) {\n+        final PersonName personName = names.get(i);\n+        // Do not append \"|\" to the first name in the list.\n+        if (i == 0) {\n+          result.append(personName.toString());\n+        } else {\n+          result.append(\"|\");\n+          result.append(personName.toString());\n         }\n-        return result.toString();\n+      }\n+\n     }\n+    return result.toString();\n+  }\n }\n",
            "diff_size": 153
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/5/Patient.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/naturalize/5/Patient.java\nindex 49008b25b00..c36f6b2fec9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/5/Patient.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/naturalize/5/Patient.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.mpilib;\n \n import org.apache.commons.collections.CollectionUtils;\n@@ -166,10 +167,10 @@ public class Patient implements java.io.Serializable {\n     @Override\n     public String toString() {\n         final StringBuilder result = new StringBuilder();\n-\n-        if (CollectionUtils.isNotEmpty(names)) {\n-\n-            for (int i = 0; i < names.size(); i++) {\n+if (CollectionUtils.isNotEmpty(names)) {\n+    for (int i = 0;\n+i < names.size();\n+i++) {\n                 final PersonName personName = names.get(i);\n                 // Do not append \"|\" to the first name in the list.\n                 if (i == 0) {\n@@ -183,4 +184,4 @@ public class Patient implements java.io.Serializable {\n         }\n         return result.toString();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "207",
                    "column": "16",
                    "severity": "error",
                    "message": "'for' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "207",
                    "column": "29",
                    "severity": "error",
                    "message": "'<' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "207",
                    "column": "30",
                    "severity": "error",
                    "message": "'<' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "211",
                    "column": "19",
                    "severity": "error",
                    "message": "'if' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "213",
                    "column": "17",
                    "severity": "error",
                    "message": "'}' at column 17 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/5/Patient.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/codebuff/5/Patient.java\nindex 49008b25b00..b4a95434829 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/5/Patient.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/codebuff/5/Patient.java\n@@ -32,7 +32,10 @@ import org.apache.commons.collections.CollectionUtils;\n  *\n  * @author rayj\n  */\n+\n+\n public class Patient implements java.io.Serializable {\n+\n     static final long serialVersionUID = 449060013287108229L;\n     private String dateOfBirth = null;\n     private String gender = \"\";\n@@ -46,12 +49,15 @@ public class Patient implements java.io.Serializable {\n     /**\n      * Public constructor method for Patient.\n      */\n+\n     public Patient() {\n-    }\n+}\n \n     /**\n      * @return true if the Patient is opted in. False otherwise.\n      */\n+\n+\n     public boolean isOptedIn() {\n         return optedIn;\n     }\n@@ -61,6 +67,8 @@ public class Patient implements java.io.Serializable {\n      *\n      * @param optedIn true if the patient is opted in, false otherwise\n      */\n+\n+\n     public void setOptedIn(final boolean optedIn) {\n         this.optedIn = optedIn;\n     }\n@@ -68,6 +76,8 @@ public class Patient implements java.io.Serializable {\n     /**\n      * @return the date of birth for this Person, as a String\n      */\n+\n+\n     public String getDateOfBirth() {\n         return dateOfBirth;\n     }\n@@ -75,6 +85,8 @@ public class Patient implements java.io.Serializable {\n     /**\n      * @param newVal the Date of Birth to set for this Person.\n      */\n+\n+\n     public void setDateOfBirth(final String newVal) {\n         dateOfBirth = newVal;\n     }\n@@ -82,6 +94,8 @@ public class Patient implements java.io.Serializable {\n     /**\n      * @param val the phone number values to set for this Person\n      */\n+\n+\n     public void setPhoneNumbers(final PhoneNumbers val) {\n         phoneNumbers = val;\n     }\n@@ -89,6 +103,8 @@ public class Patient implements java.io.Serializable {\n     /**\n      * @return the phone number values associated with this Person\n      */\n+\n+\n     public PhoneNumbers getPhoneNumbers() {\n         return phoneNumbers;\n     }\n@@ -96,6 +112,8 @@ public class Patient implements java.io.Serializable {\n     /**\n      * @return the Identifiers value associated with this Person\n      */\n+\n+\n     public Identifiers getIdentifiers() {\n         return patientIdentifiers;\n     }\n@@ -103,6 +121,8 @@ public class Patient implements java.io.Serializable {\n     /**\n      * @param newVal the Identifiers value to set for this Person\n      */\n+\n+\n     public void setIdentifiers(final Identifiers newVal) {\n         patientIdentifiers = newVal;\n     }\n@@ -110,6 +130,8 @@ public class Patient implements java.io.Serializable {\n     /**\n      * @return the gender value for this Person\n      */\n+\n+\n     public String getGender() {\n         return gender;\n     }\n@@ -117,6 +139,8 @@ public class Patient implements java.io.Serializable {\n     /**\n      * @param newVal the gender value for this Person\n      */\n+\n+\n     public void setGender(final String newVal) {\n         gender = newVal;\n     }\n@@ -124,6 +148,8 @@ public class Patient implements java.io.Serializable {\n     /**\n      * @return the Social Security Number value for this Person\n      */\n+\n+\n     public String getSSN() {\n         return ssn;\n     }\n@@ -131,6 +157,8 @@ public class Patient implements java.io.Serializable {\n     /**\n      * @param val the Social Security Number value to set for this Person\n      */\n+\n+\n     public void setSSN(final String val) {\n         ssn = val;\n     }\n@@ -138,6 +166,8 @@ public class Patient implements java.io.Serializable {\n     /**\n      * @return the Addresses value associated with this Person\n      */\n+\n+\n     public Addresses getAddresses() {\n         return adds;\n     }\n@@ -145,6 +175,8 @@ public class Patient implements java.io.Serializable {\n     /**\n      * @param val the Addresses value to associate with this Person\n      */\n+\n+\n     public void setAddresses(final Addresses val) {\n         adds = val;\n     }\n@@ -152,6 +184,8 @@ public class Patient implements java.io.Serializable {\n     /**\n      * @param newVal the names value to associate with this Person\n      */\n+\n+\n     public void setNames(final PersonNames newVal) {\n         names = newVal;\n     }\n@@ -159,28 +193,33 @@ public class Patient implements java.io.Serializable {\n     /**\n      * @return the names associated with this Person\n      */\n+\n+\n     public PersonNames getNames() {\n         return names;\n     }\n \n+\n     @Override\n     public String toString() {\n         final StringBuilder result = new StringBuilder();\n-\n         if (CollectionUtils.isNotEmpty(names)) {\n-\n-            for (int i = 0; i < names.size(); i++) {\n+            for(int i = 0; i<names.size();\n+i++) {\n                 final PersonName personName = names.get(i);\n                 // Do not append \"|\" to the first name in the list.\n-                if (i == 0) {\n+                if(i == 0) {\n                     result.append(personName.toString());\n-                } else {\n+                }\n+\n+\n+else {\n                     result.append(\"|\");\n                     result.append(personName.toString());\n                 }\n             }\n-\n         }\n         return result.toString();\n     }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 49
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'import' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "27",
                    "severity": "error",
                    "message": "import statement should not be line-wrapped.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoLineWrapCheck"
                },
                {
                    "line": "27",
                    "column": "34",
                    "severity": "error",
                    "message": "';' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/5/Patient.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_random/5/Patient.java\nindex 49008b25b00..77c306ab773 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/5/Patient.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_random/5/Patient.java\n@@ -24,9 +24,9 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n-package gov.hhs.fha.nhinc.mpilib;\n+package gov.hhs.fha.nhinc.mpilib;import\n \n-import org.apache.commons.collections.CollectionUtils;\n+org.apache.commons.collections.CollectionUtils;\n \n /**\n  *\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/5/Patient.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_three_grams/5/Patient.java\nindex 49008b25b00..e8713aaaa55 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/5/Patient.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_three_grams/5/Patient.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.mpilib;\n \n import org.apache.commons.collections.CollectionUtils;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "codebuff",
        "styler_random"
    ]
}
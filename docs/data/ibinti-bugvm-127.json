{
    "project_name": "ibinti-bugvm",
    "error_id": "127",
    "information": {
        "errors": [
            {
                "line": "50",
                "severity": "error",
                "message": "Line is longer than 80 characters (found 97).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "     *             if locale is not available or style is invalid\n     */\n    public abstract String getDisplayName(String id, boolean daylight, int style, Locale locale);\n}",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "50",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 97).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "47",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 84).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/errored/1/127/TimeZoneNameProvider.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/intellij/127/TimeZoneNameProvider.java\nindex 533d14edc83..19534af0e1e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/errored/1/127/TimeZoneNameProvider.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/intellij/127/TimeZoneNameProvider.java\n@@ -23,29 +23,29 @@ import java.util.Locale;\n  * This abstract class should be extended by service providers that provide\r\n  * localized time zone names.\r\n  * <p>Note that Android does not support user-supplied locale service providers.\r\n- * @since 1.6\r\n+ *\r\n  * @hide\r\n+ * @since 1.6\r\n  */\r\n public abstract class TimeZoneNameProvider extends LocaleServiceProvider {\r\n-    /**\r\n-     * Default constructor, for use by subclasses.\r\n-     */\r\n-    protected TimeZoneNameProvider() {\r\n-        // do nothing\r\n-    }\r\n+  /**\r\n+   * Default constructor, for use by subclasses.\r\n+   */\r\n+  protected TimeZoneNameProvider() {\r\n+    // do nothing\r\n+  }\r\n \r\n-    /**\r\n-     * Returns the localized name for the given time zone in the given locale.\r\n-     *\r\n-     * @param id the time zone id\r\n-     * @param daylight true to return the name for daylight saving time.\r\n-     * @param style TimeZone.LONG or TimeZone.SHORT\r\n-     * @param locale the locale\r\n-     * @return the readable time zone name, or null if it is unavailable\r\n-     * @throws NullPointerException\r\n-     *             if {@code id == null || locale == null}\r\n-     * @throws IllegalArgumentException\r\n-     *             if locale is not available or style is invalid\r\n-     */\r\n-    public abstract String getDisplayName(String id, boolean daylight, int style, Locale locale);\r\n+  /**\r\n+   * Returns the localized name for the given time zone in the given locale.\r\n+   *\r\n+   * @param id       the time zone id\r\n+   * @param daylight true to return the name for daylight saving time.\r\n+   * @param style    TimeZone.LONG or TimeZone.SHORT\r\n+   * @param locale   the locale\r\n+   * @return the readable time zone name, or null if it is unavailable\r\n+   * @throws NullPointerException     if {@code id == null || locale == null}\r\n+   * @throws IllegalArgumentException if locale is not available or style is invalid\r\n+   */\r\n+  public abstract String getDisplayName(String id, boolean daylight, int style,\r\n+                                        Locale locale);\r\n }\r\n",
            "diff_size": 22
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "50",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 97).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/errored/1/127/TimeZoneNameProvider.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/naturalize/127/TimeZoneNameProvider.java\nindex 533d14edc83..7510b4bce61 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/errored/1/127/TimeZoneNameProvider.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/naturalize/127/TimeZoneNameProvider.java\n@@ -48,4 +48,4 @@ public abstract class TimeZoneNameProvider extends LocaleServiceProvider {\n      *             if locale is not available or style is invalid\r\n      */\r\n     public abstract String getDisplayName(String id, boolean daylight, int style, Locale locale);\r\n-}\r\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "50",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 97).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "51",
                    "column": "57",
                    "severity": "error",
                    "message": "';' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/errored/1/127/TimeZoneNameProvider.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/styler_three_grams/127/TimeZoneNameProvider.java\nindex 533d14edc83..753d9f77bba 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/errored/1/127/TimeZoneNameProvider.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/styler_three_grams/127/TimeZoneNameProvider.java\n@@ -47,5 +47,5 @@ public abstract class TimeZoneNameProvider extends LocaleServiceProvider {\n      * @throws IllegalArgumentException\r\n      *             if locale is not available or style is invalid\r\n      */\r\n-    public abstract String getDisplayName(String id, boolean daylight, int style, Locale locale);\r\n-}\r\n+    public abstract String getDisplayName(String id,\r\n+            boolean daylight, int style, Locale locale) ; }\r\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "Qihoo360-Quicksql",
    "error_id": "10",
    "information": {
        "errors": [
            {
                "line": "17",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * limitations under the License.\n */\npackage com.qihoo.qsql.org.apache.calcite.sql;\n\n/**\n * SqlNullSemantics defines the possible comparison rules for values which might",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/errored/1/10/SqlNullSemantics.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/styler/10/SqlNullSemantics.java\nindex 9c2fbbe4ff2..706f8935d39 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/errored/1/10/SqlNullSemantics.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/styler/10/SqlNullSemantics.java\n@@ -14,6 +14,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package com.qihoo.qsql.org.apache.calcite.sql;\n \n /**\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/errored/1/10/SqlNullSemantics.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/intellij/10/SqlNullSemantics.java\nindex 9c2fbbe4ff2..1d0f49bfdc5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/errored/1/10/SqlNullSemantics.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/intellij/10/SqlNullSemantics.java\n@@ -14,6 +14,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package com.qihoo.qsql.org.apache.calcite.sql;\n \n /**\n@@ -22,26 +23,26 @@ package com.qihoo.qsql.org.apache.calcite.sql;\n  * used depending on the context.\n  */\n public enum SqlNullSemantics {\n-  /**\n-   * Predicate semantics: e.g. in the expression (WHERE X=5), if X is NULL,\n-   * the comparison result is unknown, and so a filter used to evaluate the\n-   * WHERE clause rejects the row.\n-   */\n-  NULL_MATCHES_NOTHING,\n+    /**\n+     * Predicate semantics: e.g. in the expression (WHERE X=5), if X is NULL,\n+     * the comparison result is unknown, and so a filter used to evaluate the\n+     * WHERE clause rejects the row.\n+     */\n+    NULL_MATCHES_NOTHING,\n \n-  /**\n-   * GROUP BY key semantics: e.g. in the expression (GROUP BY A,B), the key\n-   * (null,5) is treated as equal to another key (null,5).\n-   */\n-  NULL_MATCHES_NULL,\n+    /**\n+     * GROUP BY key semantics: e.g. in the expression (GROUP BY A,B), the key\n+     * (null,5) is treated as equal to another key (null,5).\n+     */\n+    NULL_MATCHES_NULL,\n \n-  /**\n-   * Wildcard semantics: logically, this is not present in any SQL construct.\n-   * However, it is required internally, for example to rewrite NOT IN to NOT\n-   * EXISTS; when we negate a predicate, we invert the null semantics, so\n-   * NULL_MATCHES_NOTHING must become NULL_MATCHES_ANYTHING.\n-   */\n-  NULL_MATCHES_ANYTHING\n+    /**\n+     * Wildcard semantics: logically, this is not present in any SQL construct.\n+     * However, it is required internally, for example to rewrite NOT IN to NOT\n+     * EXISTS; when we negate a predicate, we invert the null semantics, so\n+     * NULL_MATCHES_NOTHING must become NULL_MATCHES_ANYTHING.\n+     */\n+    NULL_MATCHES_ANYTHING\n }\n \n // End SqlNullSemantics.java\n",
            "diff_size": 19
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "17",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "27",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 32.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "34",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 6, indentation should be the same level as line 37.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "39",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 6, indentation should be the same level as line 44.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/errored/1/10/SqlNullSemantics.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/codebuff/10/SqlNullSemantics.java\nindex 9c2fbbe4ff2..f404d96dc10 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/errored/1/10/SqlNullSemantics.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/codebuff/10/SqlNullSemantics.java\n@@ -21,27 +21,25 @@ package com.qihoo.qsql.org.apache.calcite.sql;\n  * be null. In SQL (and internal plans used to process SQL) different rules are\n  * used depending on the context.\n  */\n+\n+\n public enum SqlNullSemantics {\n   /**\n    * Predicate semantics: e.g. in the expression (WHERE X=5), if X is NULL,\n    * the comparison result is unknown, and so a filter used to evaluate the\n    * WHERE clause rejects the row.\n    */\n-  NULL_MATCHES_NOTHING,\n+    NULL_MATCHES_NOTHING,\n \n   /**\n    * GROUP BY key semantics: e.g. in the expression (GROUP BY A,B), the key\n    * (null,5) is treated as equal to another key (null,5).\n-   */\n-  NULL_MATCHES_NULL,\n+   */ NULL_MATCHES_NULL,\n \n   /**\n    * Wildcard semantics: logically, this is not present in any SQL construct.\n    * However, it is required internally, for example to rewrite NOT IN to NOT\n    * EXISTS; when we negate a predicate, we invert the null semantics, so\n    * NULL_MATCHES_NOTHING must become NULL_MATCHES_ANYTHING.\n-   */\n-  NULL_MATCHES_ANYTHING\n-}\n-\n-// End SqlNullSemantics.java\n+   */ NULL_MATCHES_ANYTHING\n+}\n\\ No newline at end of file\n",
            "diff_size": 10
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "17",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/errored/1/10/SqlNullSemantics.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/styler_three_grams/10/SqlNullSemantics.java\nindex 9c2fbbe4ff2..706f8935d39 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/errored/1/10/SqlNullSemantics.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/styler_three_grams/10/SqlNullSemantics.java\n@@ -14,6 +14,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package com.qihoo.qsql.org.apache.calcite.sql;\n \n /**\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff",
        "styler_random"
    ]
}
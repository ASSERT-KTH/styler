{
    "project_name": "CONNECT-Solution-CONNECT",
    "error_id": "537",
    "information": {
        "errors": [
            {
                "line": "27",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\npackage gov.hhs.fha.nhinc.docquery.builder.impl;\n\nimport gov.hhs.fha.nhinc.docquery.builder.AdhocQueryRequestBuilder;\nimport gov.hhs.fha.nhinc.docquery.xdsb.helper.XDSbConstants.XDSbStoredQuery;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/537/AdhocQueryRequestBuilderFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler/537/AdhocQueryRequestBuilderFactory.java\nindex e2baeb71525..99226e3f394 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/537/AdhocQueryRequestBuilderFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler/537/AdhocQueryRequestBuilderFactory.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.docquery.builder.impl;\n \n import gov.hhs.fha.nhinc.docquery.builder.AdhocQueryRequestBuilder;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/537/AdhocQueryRequestBuilderFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/intellij/537/AdhocQueryRequestBuilderFactory.java\nindex e2baeb71525..e412c2957d5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/537/AdhocQueryRequestBuilderFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/intellij/537/AdhocQueryRequestBuilderFactory.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.docquery.builder.impl;\n \n import gov.hhs.fha.nhinc.docquery.builder.AdhocQueryRequestBuilder;\n@@ -36,67 +37,67 @@ import gov.hhs.fha.nhinc.docquery.xdsb.helper.XDSbConstants.XDSbStoredQuery;\n  */\n public class AdhocQueryRequestBuilderFactory {\n \n-    /**\n-     * The query type.\n-     */\n-    private XDSbStoredQuery queryType = null;\n+  /**\n+   * The query type.\n+   */\n+  private XDSbStoredQuery queryType = null;\n \n-    /**\n-     * Instantiates a new adhoc query request builder factory.\n-     */\n-    public AdhocQueryRequestBuilderFactory() {\n-        this.queryType = XDSbStoredQuery.FindDocuments;\n-    }\n+  /**\n+   * Instantiates a new adhoc query request builder factory.\n+   */\n+  public AdhocQueryRequestBuilderFactory() {\n+    this.queryType = XDSbStoredQuery.FindDocuments;\n+  }\n \n-    /**\n-     * Instantiates a new adhoc query request builder factory.\n-     *\n-     * @param queryType the query type\n-     */\n-    public AdhocQueryRequestBuilderFactory(XDSbStoredQuery queryType) {\n-        this.queryType = queryType;\n-    }\n+  /**\n+   * Instantiates a new adhoc query request builder factory.\n+   *\n+   * @param queryType the query type\n+   */\n+  public AdhocQueryRequestBuilderFactory(XDSbStoredQuery queryType) {\n+    this.queryType = queryType;\n+  }\n \n-    /**\n-     * Gets the builder.\n-     *\n-     * @return the builder\n-     */\n-    public AdhocQueryRequestBuilder getBuilder() {\n-        AdhocQueryRequestBuilder builder = null;\n-        switch (queryType) {\n-            case FindDocuments:\n-                builder = new FindDocumentsAdhocQueryRequestBuilder();\n-                break;\n-            case FindDocumentsByReferenceId:\n-                break;\n-            case FindFolders:\n-                break;\n-            case FindSubmissionSets:\n-                break;\n-            case GetAll:\n-                break;\n-            case GetAssociations:\n-                break;\n-            case GetDocuments:\n-                break;\n-            case GetDocumentsAndAssociations:\n-                break;\n-            case GetFolderAndContents:\n-                break;\n-            case GetFolders:\n-                break;\n-            case GetFoldersForDocument:\n-                break;\n-            case GetRelatedDocuments:\n-                break;\n-            case GetSubmissionSetAndContents:\n-                break;\n-            case GetSubmissionSets:\n-                break;\n-            default:\n-                break;\n-        }\n-        return builder;\n+  /**\n+   * Gets the builder.\n+   *\n+   * @return the builder\n+   */\n+  public AdhocQueryRequestBuilder getBuilder() {\n+    AdhocQueryRequestBuilder builder = null;\n+    switch (queryType) {\n+      case FindDocuments:\n+        builder = new FindDocumentsAdhocQueryRequestBuilder();\n+        break;\n+      case FindDocumentsByReferenceId:\n+        break;\n+      case FindFolders:\n+        break;\n+      case FindSubmissionSets:\n+        break;\n+      case GetAll:\n+        break;\n+      case GetAssociations:\n+        break;\n+      case GetDocuments:\n+        break;\n+      case GetDocumentsAndAssociations:\n+        break;\n+      case GetFolderAndContents:\n+        break;\n+      case GetFolders:\n+        break;\n+      case GetFoldersForDocument:\n+        break;\n+      case GetRelatedDocuments:\n+        break;\n+      case GetSubmissionSetAndContents:\n+        break;\n+      case GetSubmissionSets:\n+        break;\n+      default:\n+        break;\n     }\n+    return builder;\n+  }\n }\n",
            "diff_size": 62
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/537/AdhocQueryRequestBuilderFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/naturalize/537/AdhocQueryRequestBuilderFactory.java\nindex e2baeb71525..e173aa209e9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/537/AdhocQueryRequestBuilderFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/naturalize/537/AdhocQueryRequestBuilderFactory.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.docquery.builder.impl;\n \n import gov.hhs.fha.nhinc.docquery.builder.AdhocQueryRequestBuilder;\n@@ -65,8 +66,7 @@ public class AdhocQueryRequestBuilderFactory {\n     public AdhocQueryRequestBuilder getBuilder() {\n         AdhocQueryRequestBuilder builder = null;\n         switch (queryType) {\n-            case FindDocuments:\n-                builder = new FindDocumentsAdhocQueryRequestBuilder();\n+            case FindDocuments: builder = new FindDocumentsAdhocQueryRequestBuilder();\n                 break;\n             case FindDocumentsByReferenceId:\n                 break;\n@@ -96,7 +96,8 @@ public class AdhocQueryRequestBuilderFactory {\n                 break;\n             default:\n                 break;\n-        }\n+\n+    }\n         return builder;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "75",
                    "column": "15",
                    "severity": "error",
                    "message": "'switch' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/537/AdhocQueryRequestBuilderFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/codebuff/537/AdhocQueryRequestBuilderFactory.java\nindex e2baeb71525..9c53f26139a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/537/AdhocQueryRequestBuilderFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/codebuff/537/AdhocQueryRequestBuilderFactory.java\n@@ -34,16 +34,20 @@ import gov.hhs.fha.nhinc.docquery.xdsb.helper.XDSbConstants.XDSbStoredQuery;\n  *\n  * @author tjafri\n  */\n+\n+\n public class AdhocQueryRequestBuilderFactory {\n \n     /**\n      * The query type.\n      */\n+\n     private XDSbStoredQuery queryType = null;\n \n     /**\n      * Instantiates a new adhoc query request builder factory.\n      */\n+\n     public AdhocQueryRequestBuilderFactory() {\n         this.queryType = XDSbStoredQuery.FindDocuments;\n     }\n@@ -53,6 +57,8 @@ public class AdhocQueryRequestBuilderFactory {\n      *\n      * @param queryType the query type\n      */\n+\n+\n     public AdhocQueryRequestBuilderFactory(XDSbStoredQuery queryType) {\n         this.queryType = queryType;\n     }\n@@ -62,41 +68,43 @@ public class AdhocQueryRequestBuilderFactory {\n      *\n      * @return the builder\n      */\n+\n+\n     public AdhocQueryRequestBuilder getBuilder() {\n         AdhocQueryRequestBuilder builder = null;\n-        switch (queryType) {\n+        switch(queryType) {\n             case FindDocuments:\n-                builder = new FindDocumentsAdhocQueryRequestBuilder();\n-                break;\n+            builder = new FindDocumentsAdhocQueryRequestBuilder();\n+            break;\n             case FindDocumentsByReferenceId:\n-                break;\n+            break;\n             case FindFolders:\n-                break;\n+            break;\n             case FindSubmissionSets:\n-                break;\n+            break;\n             case GetAll:\n-                break;\n+            break;\n             case GetAssociations:\n-                break;\n+            break;\n             case GetDocuments:\n-                break;\n+            break;\n             case GetDocumentsAndAssociations:\n-                break;\n+            break;\n             case GetFolderAndContents:\n-                break;\n+            break;\n             case GetFolders:\n-                break;\n+            break;\n             case GetFoldersForDocument:\n-                break;\n+            break;\n             case GetRelatedDocuments:\n-                break;\n+            break;\n             case GetSubmissionSetAndContents:\n-                break;\n+            break;\n             case GetSubmissionSets:\n-                break;\n-            default:\n-                break;\n+            break;\n+            default :\n+            break;\n         }\n         return builder;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 27
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/537/AdhocQueryRequestBuilderFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_three_grams/537/AdhocQueryRequestBuilderFactory.java\nindex e2baeb71525..99226e3f394 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/537/AdhocQueryRequestBuilderFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_three_grams/537/AdhocQueryRequestBuilderFactory.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.docquery.builder.impl;\n \n import gov.hhs.fha.nhinc.docquery.builder.AdhocQueryRequestBuilder;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "codebuff",
        "styler_random"
    ]
}
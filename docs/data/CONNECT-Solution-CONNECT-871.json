{
    "project_name": "CONNECT-Solution-CONNECT",
    "error_id": "871",
    "information": {
        "errors": [
            {
                "line": "27",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\npackage gov.hhs.fha.nhinc.docsubmission.configuration.jmx;\n\nimport gov.hhs.fha.nhinc.configuration.IConfiguration.serviceEnum;\nimport gov.hhs.fha.nhinc.docsubmission._11.entity.deferred.request.EntityDocSubmissionDeferredRequestSecured;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/871/DocumentSubmissionDefRequest11WebServices.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler/871/DocumentSubmissionDefRequest11WebServices.java\nindex 4506f296ca7..e270eee917f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/871/DocumentSubmissionDefRequest11WebServices.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler/871/DocumentSubmissionDefRequest11WebServices.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.docsubmission.configuration.jmx;\n \n import gov.hhs.fha.nhinc.configuration.IConfiguration.serviceEnum;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/871/DocumentSubmissionDefRequest11WebServices.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/intellij/871/DocumentSubmissionDefRequest11WebServices.java\nindex 4506f296ca7..ca65a87b93d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/871/DocumentSubmissionDefRequest11WebServices.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/intellij/871/DocumentSubmissionDefRequest11WebServices.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.docsubmission.configuration.jmx;\n \n import gov.hhs.fha.nhinc.configuration.IConfiguration.serviceEnum;\n@@ -42,183 +43,189 @@ import org.springframework.stereotype.Service;\n @Service\n public class DocumentSubmissionDefRequest11WebServices extends AbstractDSDeferredReqWebServicesMXBean {\n \n-    /** The Constant NHIN_DS_BEAN_NAME. */\n-    private static final String NHIN_DS_BEAN_NAME = \"nhinXDRDeferredRequest\";\n-\n-    /** The Constant ENTITY_UNSECURED_DS_BEAN_NAME. */\n-    private static final String ENTITY_UNSECURED_DS_BEAN_NAME = \"entityXDRDeferredRequestUnsecured\";\n-\n-    /** The Constant ENTITY_SECURED_DS_BEAN_NAME. */\n-    private static final String ENTITY_SECURED_DS_BEAN_NAME = \"entityXDRDeferredRequestSecured\";\n-\n-    private final serviceEnum serviceName = serviceEnum.DocumentSubmissionDeferredRequest;\n-\n-    /*\n-     * (non-Javadoc)\n-     *\n-     * @see gov.hhs.fha.nhinc.configuration.jmx.WebServicesMXBean#isInboundPassthru()\n-     */\n-    @Override\n-    public boolean isInboundPassthru() {\n-        boolean isPassthru = false;\n-        NhinXDRRequest nhinDS = retrieveBean(NhinXDRRequest.class, getNhinBeanName());\n-        InboundDocSubmissionDeferredRequest outboundDS = nhinDS.getInboundDocSubmission();\n-        if (compareClassName(outboundDS, DEFAULT_INBOUND_PASSTHRU_IMPL_CLASS_NAME)) {\n-            isPassthru = true;\n-        }\n-        return isPassthru;\n-    }\n-\n-    /*\n-     * (non-Javadoc)\n-     *\n-     * @see gov.hhs.fha.nhinc.configuration.jmx.WebServicesMXBean#isOutboundPassthru()\n-     */\n-    @Override\n-    public boolean isOutboundPassthru() {\n-        boolean isPassthru = false;\n-        EntityDocSubmissionDeferredRequestUnsecured entityDS = retrieveBean(\n-                EntityDocSubmissionDeferredRequestUnsecured.class, getEntityUnsecuredBeanName());\n-        OutboundDocSubmissionDeferredRequest outboundDS = entityDS.getOutboundDocSubmission();\n-        if (compareClassName(outboundDS, DEFAULT_OUTBOUND_PASSTHRU_IMPL_CLASS_NAME)) {\n-            isPassthru = true;\n-        }\n-        return isPassthru;\n-    }\n-\n-    /*\n-     * (non-Javadoc)\n-     *\n-     * @see gov.hhs.fha.nhinc.configuration.jmx.AbstractWebServicesMXBean#getNhinBeanName()\n-     */\n-    @Override\n-    protected String getNhinBeanName() {\n-        return NHIN_DS_BEAN_NAME;\n-    }\n-\n-    /*\n-     * (non-Javadoc)\n-     *\n-     * @see gov.hhs.fha.nhinc.configuration.jmx.AbstractWebServicesMXBean#getEntityUnsecuredBeanName()\n-     */\n-    @Override\n-    protected String getEntityUnsecuredBeanName() {\n-        return ENTITY_UNSECURED_DS_BEAN_NAME;\n-    }\n-\n-    /*\n-     * (non-Javadoc)\n-     *\n-     * @see gov.hhs.fha.nhinc.configuration.jmx.AbstractWebServicesMXBean#getEntitySecuredBeanName()\n-     */\n-    @Override\n-    protected String getEntitySecuredBeanName() {\n-        return ENTITY_SECURED_DS_BEAN_NAME;\n-    }\n-\n-    /*\n-     * (non-Javadoc)\n-     *\n-     * @see gov.hhs.fha.nhinc.configuration.jmx.AbstractWebServicesMXBean#configureInboundImpl(java.lang.String)\n-     */\n-    @Override\n-    public void configureInboundStdImpl() throws InstantiationException, IllegalAccessException,\n-            ClassNotFoundException {\n-        NhinXDRRequest nhinDS = retrieveBean(NhinXDRRequest.class, getNhinBeanName());\n-        InboundDocSubmissionDeferredRequest inboundDS = retrieveBean(InboundDocSubmissionDeferredRequest.class,\n-                getStandardInboundBeanName());\n-\n-        nhinDS.setInboundDocSubmissionRequest(inboundDS);\n-    }\n-\n-    /*\n-     * (non-Javadoc)\n-     *\n-     * @see gov.hhs.fha.nhinc.configuration.jmx.AbstractWebServicesMXBean#configureInboundImpl(java.lang.String)\n-     */\n-    @Override\n-    public void configureInboundPtImpl() throws InstantiationException, IllegalAccessException,\n-            ClassNotFoundException {\n-        NhinXDRRequest nhinDS = retrieveBean(NhinXDRRequest.class, getNhinBeanName());\n-        InboundDocSubmissionDeferredRequest inboundDS = retrieveBean(InboundDocSubmissionDeferredRequest.class,\n-                getPassthroughInboundBeanName());\n-\n-        nhinDS.setInboundDocSubmissionRequest(inboundDS);\n-    }\n-\n-    /*\n-     * (non-Javadoc)\n-     *\n-     * @see gov.hhs.fha.nhinc.configuration.jmx.AbstractWebServicesMXBean#configureOutboundImpl(java.lang.String)\n-     */\n-    @Override\n-    public void configureOutboundStdImpl() throws InstantiationException, IllegalAccessException,\n-            ClassNotFoundException {\n-        OutboundDocSubmissionDeferredRequest outboundDS = retrieveBean(\n-                OutboundDocSubmissionDeferredRequest.class, getStandardOutboundBeanName());\n-        EntityDocSubmissionDeferredRequestUnsecured entityDSUnsecured = retrieveBean(\n-                EntityDocSubmissionDeferredRequestUnsecured.class, getEntityUnsecuredBeanName());\n-        EntityDocSubmissionDeferredRequestSecured entityDSSecured = retrieveBean(\n-                EntityDocSubmissionDeferredRequestSecured.class, getEntitySecuredBeanName());\n-\n-        entityDSSecured.setOutboundDocSubmissionRequest(outboundDS);\n-        entityDSUnsecured.setOutboundDocSubmissionRequest(outboundDS);\n+  /**\n+   * The Constant NHIN_DS_BEAN_NAME.\n+   */\n+  private static final String NHIN_DS_BEAN_NAME = \"nhinXDRDeferredRequest\";\n+\n+  /**\n+   * The Constant ENTITY_UNSECURED_DS_BEAN_NAME.\n+   */\n+  private static final String ENTITY_UNSECURED_DS_BEAN_NAME = \"entityXDRDeferredRequestUnsecured\";\n+\n+  /**\n+   * The Constant ENTITY_SECURED_DS_BEAN_NAME.\n+   */\n+  private static final String ENTITY_SECURED_DS_BEAN_NAME = \"entityXDRDeferredRequestSecured\";\n+\n+  private final serviceEnum serviceName = serviceEnum.DocumentSubmissionDeferredRequest;\n+\n+  /*\n+   * (non-Javadoc)\n+   *\n+   * @see gov.hhs.fha.nhinc.configuration.jmx.WebServicesMXBean#isInboundPassthru()\n+   */\n+  @Override\n+  public boolean isInboundPassthru() {\n+    boolean isPassthru = false;\n+    NhinXDRRequest nhinDS = retrieveBean(NhinXDRRequest.class, getNhinBeanName());\n+    InboundDocSubmissionDeferredRequest outboundDS = nhinDS.getInboundDocSubmission();\n+    if (compareClassName(outboundDS, DEFAULT_INBOUND_PASSTHRU_IMPL_CLASS_NAME)) {\n+      isPassthru = true;\n     }\n-\n-    /*\n-     * (non-Javadoc)\n-     *\n-     * @see gov.hhs.fha.nhinc.configuration.jmx.AbstractWebServicesMXBean#configureOutboundImpl(java.lang.String)\n-     */\n-    @Override\n-    public void configureOutboundPtImpl() throws InstantiationException, IllegalAccessException,\n-            ClassNotFoundException {\n-        OutboundDocSubmissionDeferredRequest outboundDS = retrieveBean(\n-                OutboundDocSubmissionDeferredRequest.class, getPassthroughOutboundBeanName());\n-        EntityDocSubmissionDeferredRequestUnsecured entityDSUnsecured = retrieveBean(\n-                EntityDocSubmissionDeferredRequestUnsecured.class, getEntityUnsecuredBeanName());\n-        EntityDocSubmissionDeferredRequestSecured entityDSSecured = retrieveBean(\n-                EntityDocSubmissionDeferredRequestSecured.class, getEntitySecuredBeanName());\n-\n-        entityDSSecured.setOutboundDocSubmissionRequest(outboundDS);\n-        entityDSUnsecured.setOutboundDocSubmissionRequest(outboundDS);\n+    return isPassthru;\n+  }\n+\n+  /*\n+   * (non-Javadoc)\n+   *\n+   * @see gov.hhs.fha.nhinc.configuration.jmx.WebServicesMXBean#isOutboundPassthru()\n+   */\n+  @Override\n+  public boolean isOutboundPassthru() {\n+    boolean isPassthru = false;\n+    EntityDocSubmissionDeferredRequestUnsecured entityDS = retrieveBean(\n+        EntityDocSubmissionDeferredRequestUnsecured.class, getEntityUnsecuredBeanName());\n+    OutboundDocSubmissionDeferredRequest outboundDS = entityDS.getOutboundDocSubmission();\n+    if (compareClassName(outboundDS, DEFAULT_OUTBOUND_PASSTHRU_IMPL_CLASS_NAME)) {\n+      isPassthru = true;\n     }\n-\n-    @Override\n-    public serviceEnum getServiceName() {\n-        return serviceName;\n+    return isPassthru;\n+  }\n+\n+  /*\n+   * (non-Javadoc)\n+   *\n+   * @see gov.hhs.fha.nhinc.configuration.jmx.AbstractWebServicesMXBean#getNhinBeanName()\n+   */\n+  @Override\n+  protected String getNhinBeanName() {\n+    return NHIN_DS_BEAN_NAME;\n+  }\n+\n+  /*\n+   * (non-Javadoc)\n+   *\n+   * @see gov.hhs.fha.nhinc.configuration.jmx.AbstractWebServicesMXBean#getEntityUnsecuredBeanName()\n+   */\n+  @Override\n+  protected String getEntityUnsecuredBeanName() {\n+    return ENTITY_UNSECURED_DS_BEAN_NAME;\n+  }\n+\n+  /*\n+   * (non-Javadoc)\n+   *\n+   * @see gov.hhs.fha.nhinc.configuration.jmx.AbstractWebServicesMXBean#getEntitySecuredBeanName()\n+   */\n+  @Override\n+  protected String getEntitySecuredBeanName() {\n+    return ENTITY_SECURED_DS_BEAN_NAME;\n+  }\n+\n+  /*\n+   * (non-Javadoc)\n+   *\n+   * @see gov.hhs.fha.nhinc.configuration.jmx.AbstractWebServicesMXBean#configureInboundImpl(java.lang.String)\n+   */\n+  @Override\n+  public void configureInboundStdImpl() throws InstantiationException, IllegalAccessException,\n+      ClassNotFoundException {\n+    NhinXDRRequest nhinDS = retrieveBean(NhinXDRRequest.class, getNhinBeanName());\n+    InboundDocSubmissionDeferredRequest inboundDS = retrieveBean(InboundDocSubmissionDeferredRequest.class,\n+        getStandardInboundBeanName());\n+\n+    nhinDS.setInboundDocSubmissionRequest(inboundDS);\n+  }\n+\n+  /*\n+   * (non-Javadoc)\n+   *\n+   * @see gov.hhs.fha.nhinc.configuration.jmx.AbstractWebServicesMXBean#configureInboundImpl(java.lang.String)\n+   */\n+  @Override\n+  public void configureInboundPtImpl() throws InstantiationException, IllegalAccessException,\n+      ClassNotFoundException {\n+    NhinXDRRequest nhinDS = retrieveBean(NhinXDRRequest.class, getNhinBeanName());\n+    InboundDocSubmissionDeferredRequest inboundDS = retrieveBean(InboundDocSubmissionDeferredRequest.class,\n+        getPassthroughInboundBeanName());\n+\n+    nhinDS.setInboundDocSubmissionRequest(inboundDS);\n+  }\n+\n+  /*\n+   * (non-Javadoc)\n+   *\n+   * @see gov.hhs.fha.nhinc.configuration.jmx.AbstractWebServicesMXBean#configureOutboundImpl(java.lang.String)\n+   */\n+  @Override\n+  public void configureOutboundStdImpl() throws InstantiationException, IllegalAccessException,\n+      ClassNotFoundException {\n+    OutboundDocSubmissionDeferredRequest outboundDS = retrieveBean(\n+        OutboundDocSubmissionDeferredRequest.class, getStandardOutboundBeanName());\n+    EntityDocSubmissionDeferredRequestUnsecured entityDSUnsecured = retrieveBean(\n+        EntityDocSubmissionDeferredRequestUnsecured.class, getEntityUnsecuredBeanName());\n+    EntityDocSubmissionDeferredRequestSecured entityDSSecured = retrieveBean(\n+        EntityDocSubmissionDeferredRequestSecured.class, getEntitySecuredBeanName());\n+\n+    entityDSSecured.setOutboundDocSubmissionRequest(outboundDS);\n+    entityDSUnsecured.setOutboundDocSubmissionRequest(outboundDS);\n+  }\n+\n+  /*\n+   * (non-Javadoc)\n+   *\n+   * @see gov.hhs.fha.nhinc.configuration.jmx.AbstractWebServicesMXBean#configureOutboundImpl(java.lang.String)\n+   */\n+  @Override\n+  public void configureOutboundPtImpl() throws InstantiationException, IllegalAccessException,\n+      ClassNotFoundException {\n+    OutboundDocSubmissionDeferredRequest outboundDS = retrieveBean(\n+        OutboundDocSubmissionDeferredRequest.class, getPassthroughOutboundBeanName());\n+    EntityDocSubmissionDeferredRequestUnsecured entityDSUnsecured = retrieveBean(\n+        EntityDocSubmissionDeferredRequestUnsecured.class, getEntityUnsecuredBeanName());\n+    EntityDocSubmissionDeferredRequestSecured entityDSSecured = retrieveBean(\n+        EntityDocSubmissionDeferredRequestSecured.class, getEntitySecuredBeanName());\n+\n+    entityDSSecured.setOutboundDocSubmissionRequest(outboundDS);\n+    entityDSUnsecured.setOutboundDocSubmissionRequest(outboundDS);\n+  }\n+\n+  @Override\n+  public serviceEnum getServiceName() {\n+    return serviceName;\n+  }\n+\n+  /*\n+   * (non-Javadoc)\n+   *\n+   * @see gov.hhs.fha.nhinc.configuration.jmx.WebServicesMXBean#isInboundStandard()\n+   */\n+  @Override\n+  public boolean isInboundStandard() {\n+    boolean isStandard = false;\n+    NhinXDRRequest nhinDS = retrieveBean(NhinXDRRequest.class, getNhinBeanName());\n+    InboundDocSubmissionDeferredRequest outboundDS = nhinDS.getInboundDocSubmission();\n+    if (compareClassName(outboundDS, DEFAULT_INBOUND_STANDARD_IMPL_CLASS_NAME)) {\n+      isStandard = true;\n     }\n-\n-    /*\n-     * (non-Javadoc)\n-     *\n-     * @see gov.hhs.fha.nhinc.configuration.jmx.WebServicesMXBean#isInboundStandard()\n-     */\n-    @Override\n-    public boolean isInboundStandard() {\n-        boolean isStandard = false;\n-        NhinXDRRequest nhinDS = retrieveBean(NhinXDRRequest.class, getNhinBeanName());\n-        InboundDocSubmissionDeferredRequest outboundDS = nhinDS.getInboundDocSubmission();\n-        if (compareClassName(outboundDS, DEFAULT_INBOUND_STANDARD_IMPL_CLASS_NAME)) {\n-            isStandard = true;\n-        }\n-        return isStandard;\n-    }\n-\n-    /*\n-     * (non-Javadoc)\n-     *\n-     * @see gov.hhs.fha.nhinc.configuration.jmx.WebServicesMXBean#isOutboundStandard()\n-     */\n-    @Override\n-    public boolean isOutboundStandard() {\n-        boolean isStandard = false;\n-        EntityDocSubmissionDeferredRequestUnsecured entityDS = retrieveBean(\n-                EntityDocSubmissionDeferredRequestUnsecured.class, getEntityUnsecuredBeanName());\n-        OutboundDocSubmissionDeferredRequest outboundDS = entityDS.getOutboundDocSubmission();\n-        if (compareClassName(outboundDS, DEFAULT_OUTBOUND_STANDARD_IMPL_CLASS_NAME)) {\n-            isStandard = true;\n-        }\n-        return isStandard;\n+    return isStandard;\n+  }\n+\n+  /*\n+   * (non-Javadoc)\n+   *\n+   * @see gov.hhs.fha.nhinc.configuration.jmx.WebServicesMXBean#isOutboundStandard()\n+   */\n+  @Override\n+  public boolean isOutboundStandard() {\n+    boolean isStandard = false;\n+    EntityDocSubmissionDeferredRequestUnsecured entityDS = retrieveBean(\n+        EntityDocSubmissionDeferredRequestUnsecured.class, getEntityUnsecuredBeanName());\n+    OutboundDocSubmissionDeferredRequest outboundDS = entityDS.getOutboundDocSubmission();\n+    if (compareClassName(outboundDS, DEFAULT_OUTBOUND_STANDARD_IMPL_CLASS_NAME)) {\n+      isStandard = true;\n     }\n+    return isStandard;\n+  }\n }\n",
            "diff_size": 292
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "81",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 157).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "126",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "128",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 142).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "140",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 145).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "150",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 122).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "151",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 146).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "153",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 158).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "155",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 150).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "166",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "167",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 149).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "169",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 158).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "171",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 150).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "205",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 157).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/871/DocumentSubmissionDefRequest11WebServices.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/naturalize/871/DocumentSubmissionDefRequest11WebServices.java\nindex 4506f296ca7..db53d850453 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/871/DocumentSubmissionDefRequest11WebServices.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/naturalize/871/DocumentSubmissionDefRequest11WebServices.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.docsubmission.configuration.jmx;\n \n import gov.hhs.fha.nhinc.configuration.IConfiguration.serviceEnum;\n@@ -77,9 +78,9 @@ public class DocumentSubmissionDefRequest11WebServices extends AbstractDSDeferre\n     @Override\n     public boolean isOutboundPassthru() {\n         boolean isPassthru = false;\n-        EntityDocSubmissionDeferredRequestUnsecured entityDS = retrieveBean(\n-                EntityDocSubmissionDeferredRequestUnsecured.class, getEntityUnsecuredBeanName());\n-        OutboundDocSubmissionDeferredRequest outboundDS = entityDS.getOutboundDocSubmission();\n+        EntityDocSubmissionDeferredRequestUnsecured entityDS = retrieveBean(EntityDocSubmissionDeferredRequestUnsecured.class, getEntityUnsecuredBeanName());\n+\n+OutboundDocSubmissionDeferredRequest outboundDS = entityDS.getOutboundDocSubmission();\n         if (compareClassName(outboundDS, DEFAULT_OUTBOUND_PASSTHRU_IMPL_CLASS_NAME)) {\n             isPassthru = true;\n         }\n@@ -122,13 +123,10 @@ public class DocumentSubmissionDefRequest11WebServices extends AbstractDSDeferre\n      * @see gov.hhs.fha.nhinc.configuration.jmx.AbstractWebServicesMXBean#configureInboundImpl(java.lang.String)\n      */\n     @Override\n-    public void configureInboundStdImpl() throws InstantiationException, IllegalAccessException,\n-            ClassNotFoundException {\n+    public void configureInboundStdImpl() throws InstantiationException, IllegalAccessException, ClassNotFoundException {\n         NhinXDRRequest nhinDS = retrieveBean(NhinXDRRequest.class, getNhinBeanName());\n-        InboundDocSubmissionDeferredRequest inboundDS = retrieveBean(InboundDocSubmissionDeferredRequest.class,\n-                getStandardInboundBeanName());\n-\n-        nhinDS.setInboundDocSubmissionRequest(inboundDS);\n+        InboundDocSubmissionDeferredRequest inboundDS = retrieveBean(InboundDocSubmissionDeferredRequest.class, getStandardInboundBeanName());\n+nhinDS.setInboundDocSubmissionRequest(inboundDS);\n     }\n \n     /*\n@@ -137,13 +135,10 @@ public class DocumentSubmissionDefRequest11WebServices extends AbstractDSDeferre\n      * @see gov.hhs.fha.nhinc.configuration.jmx.AbstractWebServicesMXBean#configureInboundImpl(java.lang.String)\n      */\n     @Override\n-    public void configureInboundPtImpl() throws InstantiationException, IllegalAccessException,\n-            ClassNotFoundException {\n+    public void configureInboundPtImpl() throws InstantiationException, IllegalAccessException, ClassNotFoundException {\n         NhinXDRRequest nhinDS = retrieveBean(NhinXDRRequest.class, getNhinBeanName());\n-        InboundDocSubmissionDeferredRequest inboundDS = retrieveBean(InboundDocSubmissionDeferredRequest.class,\n-                getPassthroughInboundBeanName());\n-\n-        nhinDS.setInboundDocSubmissionRequest(inboundDS);\n+        InboundDocSubmissionDeferredRequest inboundDS = retrieveBean(InboundDocSubmissionDeferredRequest.class, getPassthroughInboundBeanName());\n+nhinDS.setInboundDocSubmissionRequest(inboundDS);\n     }\n \n     /*\n@@ -152,16 +147,13 @@ public class DocumentSubmissionDefRequest11WebServices extends AbstractDSDeferre\n      * @see gov.hhs.fha.nhinc.configuration.jmx.AbstractWebServicesMXBean#configureOutboundImpl(java.lang.String)\n      */\n     @Override\n-    public void configureOutboundStdImpl() throws InstantiationException, IllegalAccessException,\n-            ClassNotFoundException {\n-        OutboundDocSubmissionDeferredRequest outboundDS = retrieveBean(\n-                OutboundDocSubmissionDeferredRequest.class, getStandardOutboundBeanName());\n-        EntityDocSubmissionDeferredRequestUnsecured entityDSUnsecured = retrieveBean(\n-                EntityDocSubmissionDeferredRequestUnsecured.class, getEntityUnsecuredBeanName());\n-        EntityDocSubmissionDeferredRequestSecured entityDSSecured = retrieveBean(\n-                EntityDocSubmissionDeferredRequestSecured.class, getEntitySecuredBeanName());\n-\n-        entityDSSecured.setOutboundDocSubmissionRequest(outboundDS);\n+    public void configureOutboundStdImpl() throws InstantiationException, IllegalAccessException, ClassNotFoundException {\n+        OutboundDocSubmissionDeferredRequest outboundDS = retrieveBean(OutboundDocSubmissionDeferredRequest.class, getStandardOutboundBeanName());\n+\n+EntityDocSubmissionDeferredRequestUnsecured entityDSUnsecured = retrieveBean(EntityDocSubmissionDeferredRequestUnsecured.class, getEntityUnsecuredBeanName());\n+\n+EntityDocSubmissionDeferredRequestSecured entityDSSecured = retrieveBean(EntityDocSubmissionDeferredRequestSecured.class, getEntitySecuredBeanName());\n+entityDSSecured.setOutboundDocSubmissionRequest(outboundDS);\n         entityDSUnsecured.setOutboundDocSubmissionRequest(outboundDS);\n     }\n \n@@ -171,16 +163,13 @@ public class DocumentSubmissionDefRequest11WebServices extends AbstractDSDeferre\n      * @see gov.hhs.fha.nhinc.configuration.jmx.AbstractWebServicesMXBean#configureOutboundImpl(java.lang.String)\n      */\n     @Override\n-    public void configureOutboundPtImpl() throws InstantiationException, IllegalAccessException,\n-            ClassNotFoundException {\n-        OutboundDocSubmissionDeferredRequest outboundDS = retrieveBean(\n-                OutboundDocSubmissionDeferredRequest.class, getPassthroughOutboundBeanName());\n-        EntityDocSubmissionDeferredRequestUnsecured entityDSUnsecured = retrieveBean(\n-                EntityDocSubmissionDeferredRequestUnsecured.class, getEntityUnsecuredBeanName());\n-        EntityDocSubmissionDeferredRequestSecured entityDSSecured = retrieveBean(\n-                EntityDocSubmissionDeferredRequestSecured.class, getEntitySecuredBeanName());\n-\n-        entityDSSecured.setOutboundDocSubmissionRequest(outboundDS);\n+    public void configureOutboundPtImpl() throws InstantiationException, IllegalAccessException, ClassNotFoundException {\n+        OutboundDocSubmissionDeferredRequest outboundDS = retrieveBean(OutboundDocSubmissionDeferredRequest.class, getPassthroughOutboundBeanName());\n+\n+EntityDocSubmissionDeferredRequestUnsecured entityDSUnsecured = retrieveBean(EntityDocSubmissionDeferredRequestUnsecured.class, getEntityUnsecuredBeanName());\n+\n+EntityDocSubmissionDeferredRequestSecured entityDSSecured = retrieveBean(EntityDocSubmissionDeferredRequestSecured.class, getEntitySecuredBeanName());\n+entityDSSecured.setOutboundDocSubmissionRequest(outboundDS);\n         entityDSUnsecured.setOutboundDocSubmissionRequest(outboundDS);\n     }\n \n@@ -213,12 +202,12 @@ public class DocumentSubmissionDefRequest11WebServices extends AbstractDSDeferre\n     @Override\n     public boolean isOutboundStandard() {\n         boolean isStandard = false;\n-        EntityDocSubmissionDeferredRequestUnsecured entityDS = retrieveBean(\n-                EntityDocSubmissionDeferredRequestUnsecured.class, getEntityUnsecuredBeanName());\n-        OutboundDocSubmissionDeferredRequest outboundDS = entityDS.getOutboundDocSubmission();\n+        EntityDocSubmissionDeferredRequestUnsecured entityDS = retrieveBean(EntityDocSubmissionDeferredRequestUnsecured.class, getEntityUnsecuredBeanName());\n+\n+OutboundDocSubmissionDeferredRequest outboundDS = entityDS.getOutboundDocSubmission();\n         if (compareClassName(outboundDS, DEFAULT_OUTBOUND_STANDARD_IMPL_CLASS_NAME)) {\n             isStandard = true;\n         }\n         return isStandard;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 40
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "87",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 157).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "139",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "141",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 142).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "155",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 145).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "167",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 122).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "168",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 146).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "169",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 166).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "170",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 158).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "183",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "184",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 149).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "185",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 166).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "186",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 158).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "225",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 157).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/871/DocumentSubmissionDefRequest11WebServices.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/codebuff/871/DocumentSubmissionDefRequest11WebServices.java\nindex 4506f296ca7..68bad2aeb42 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/871/DocumentSubmissionDefRequest11WebServices.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/codebuff/871/DocumentSubmissionDefRequest11WebServices.java\n@@ -39,10 +39,14 @@ import org.springframework.stereotype.Service;\n  *\n  * @author msw\n  */\n+\n+\n @Service\n-public class DocumentSubmissionDefRequest11WebServices extends AbstractDSDeferredReqWebServicesMXBean {\n+public class DocumentSubmissionDefRequest11WebServices extends\n+    AbstractDSDeferredReqWebServicesMXBean {\n \n     /** The Constant NHIN_DS_BEAN_NAME. */\n+\n     private static final String NHIN_DS_BEAN_NAME = \"nhinXDRDeferredRequest\";\n \n     /** The Constant ENTITY_UNSECURED_DS_BEAN_NAME. */\n@@ -50,7 +54,6 @@ public class DocumentSubmissionDefRequest11WebServices extends AbstractDSDeferre\n \n     /** The Constant ENTITY_SECURED_DS_BEAN_NAME. */\n     private static final String ENTITY_SECURED_DS_BEAN_NAME = \"entityXDRDeferredRequestSecured\";\n-\n     private final serviceEnum serviceName = serviceEnum.DocumentSubmissionDeferredRequest;\n \n     /*\n@@ -58,6 +61,8 @@ public class DocumentSubmissionDefRequest11WebServices extends AbstractDSDeferre\n      *\n      * @see gov.hhs.fha.nhinc.configuration.jmx.WebServicesMXBean#isInboundPassthru()\n      */\n+\n+\n     @Override\n     public boolean isInboundPassthru() {\n         boolean isPassthru = false;\n@@ -74,11 +79,12 @@ public class DocumentSubmissionDefRequest11WebServices extends AbstractDSDeferre\n      *\n      * @see gov.hhs.fha.nhinc.configuration.jmx.WebServicesMXBean#isOutboundPassthru()\n      */\n+\n+\n     @Override\n     public boolean isOutboundPassthru() {\n         boolean isPassthru = false;\n-        EntityDocSubmissionDeferredRequestUnsecured entityDS = retrieveBean(\n-                EntityDocSubmissionDeferredRequestUnsecured.class, getEntityUnsecuredBeanName());\n+        EntityDocSubmissionDeferredRequestUnsecured entityDS = retrieveBean(EntityDocSubmissionDeferredRequestUnsecured.class, getEntityUnsecuredBeanName());\n         OutboundDocSubmissionDeferredRequest outboundDS = entityDS.getOutboundDocSubmission();\n         if (compareClassName(outboundDS, DEFAULT_OUTBOUND_PASSTHRU_IMPL_CLASS_NAME)) {\n             isPassthru = true;\n@@ -91,6 +97,8 @@ public class DocumentSubmissionDefRequest11WebServices extends AbstractDSDeferre\n      *\n      * @see gov.hhs.fha.nhinc.configuration.jmx.AbstractWebServicesMXBean#getNhinBeanName()\n      */\n+\n+\n     @Override\n     protected String getNhinBeanName() {\n         return NHIN_DS_BEAN_NAME;\n@@ -101,6 +109,8 @@ public class DocumentSubmissionDefRequest11WebServices extends AbstractDSDeferre\n      *\n      * @see gov.hhs.fha.nhinc.configuration.jmx.AbstractWebServicesMXBean#getEntityUnsecuredBeanName()\n      */\n+\n+\n     @Override\n     protected String getEntityUnsecuredBeanName() {\n         return ENTITY_UNSECURED_DS_BEAN_NAME;\n@@ -111,6 +121,8 @@ public class DocumentSubmissionDefRequest11WebServices extends AbstractDSDeferre\n      *\n      * @see gov.hhs.fha.nhinc.configuration.jmx.AbstractWebServicesMXBean#getEntitySecuredBeanName()\n      */\n+\n+\n     @Override\n     protected String getEntitySecuredBeanName() {\n         return ENTITY_SECURED_DS_BEAN_NAME;\n@@ -121,13 +133,12 @@ public class DocumentSubmissionDefRequest11WebServices extends AbstractDSDeferre\n      *\n      * @see gov.hhs.fha.nhinc.configuration.jmx.AbstractWebServicesMXBean#configureInboundImpl(java.lang.String)\n      */\n+\n+\n     @Override\n-    public void configureInboundStdImpl() throws InstantiationException, IllegalAccessException,\n-            ClassNotFoundException {\n+    public void configureInboundStdImpl() throws InstantiationException, IllegalAccessException, ClassNotFoundException {\n         NhinXDRRequest nhinDS = retrieveBean(NhinXDRRequest.class, getNhinBeanName());\n-        InboundDocSubmissionDeferredRequest inboundDS = retrieveBean(InboundDocSubmissionDeferredRequest.class,\n-                getStandardInboundBeanName());\n-\n+        InboundDocSubmissionDeferredRequest inboundDS = retrieveBean(InboundDocSubmissionDeferredRequest.class, getStandardInboundBeanName());\n         nhinDS.setInboundDocSubmissionRequest(inboundDS);\n     }\n \n@@ -136,13 +147,12 @@ public class DocumentSubmissionDefRequest11WebServices extends AbstractDSDeferre\n      *\n      * @see gov.hhs.fha.nhinc.configuration.jmx.AbstractWebServicesMXBean#configureInboundImpl(java.lang.String)\n      */\n+\n+\n     @Override\n-    public void configureInboundPtImpl() throws InstantiationException, IllegalAccessException,\n-            ClassNotFoundException {\n+    public void configureInboundPtImpl() throws InstantiationException, IllegalAccessException, ClassNotFoundException {\n         NhinXDRRequest nhinDS = retrieveBean(NhinXDRRequest.class, getNhinBeanName());\n-        InboundDocSubmissionDeferredRequest inboundDS = retrieveBean(InboundDocSubmissionDeferredRequest.class,\n-                getPassthroughInboundBeanName());\n-\n+        InboundDocSubmissionDeferredRequest inboundDS = retrieveBean(InboundDocSubmissionDeferredRequest.class, getPassthroughInboundBeanName());\n         nhinDS.setInboundDocSubmissionRequest(inboundDS);\n     }\n \n@@ -151,16 +161,13 @@ public class DocumentSubmissionDefRequest11WebServices extends AbstractDSDeferre\n      *\n      * @see gov.hhs.fha.nhinc.configuration.jmx.AbstractWebServicesMXBean#configureOutboundImpl(java.lang.String)\n      */\n-    @Override\n-    public void configureOutboundStdImpl() throws InstantiationException, IllegalAccessException,\n-            ClassNotFoundException {\n-        OutboundDocSubmissionDeferredRequest outboundDS = retrieveBean(\n-                OutboundDocSubmissionDeferredRequest.class, getStandardOutboundBeanName());\n-        EntityDocSubmissionDeferredRequestUnsecured entityDSUnsecured = retrieveBean(\n-                EntityDocSubmissionDeferredRequestUnsecured.class, getEntityUnsecuredBeanName());\n-        EntityDocSubmissionDeferredRequestSecured entityDSSecured = retrieveBean(\n-                EntityDocSubmissionDeferredRequestSecured.class, getEntitySecuredBeanName());\n \n+\n+    @Override\n+    public void configureOutboundStdImpl() throws InstantiationException, IllegalAccessException, ClassNotFoundException {\n+        OutboundDocSubmissionDeferredRequest outboundDS = retrieveBean(OutboundDocSubmissionDeferredRequest.class, getStandardOutboundBeanName());\n+        EntityDocSubmissionDeferredRequestUnsecured entityDSUnsecured = retrieveBean(EntityDocSubmissionDeferredRequestUnsecured.class, getEntityUnsecuredBeanName());\n+        EntityDocSubmissionDeferredRequestSecured entityDSSecured = retrieveBean(EntityDocSubmissionDeferredRequestSecured.class, getEntitySecuredBeanName());\n         entityDSSecured.setOutboundDocSubmissionRequest(outboundDS);\n         entityDSUnsecured.setOutboundDocSubmissionRequest(outboundDS);\n     }\n@@ -170,20 +177,18 @@ public class DocumentSubmissionDefRequest11WebServices extends AbstractDSDeferre\n      *\n      * @see gov.hhs.fha.nhinc.configuration.jmx.AbstractWebServicesMXBean#configureOutboundImpl(java.lang.String)\n      */\n-    @Override\n-    public void configureOutboundPtImpl() throws InstantiationException, IllegalAccessException,\n-            ClassNotFoundException {\n-        OutboundDocSubmissionDeferredRequest outboundDS = retrieveBean(\n-                OutboundDocSubmissionDeferredRequest.class, getPassthroughOutboundBeanName());\n-        EntityDocSubmissionDeferredRequestUnsecured entityDSUnsecured = retrieveBean(\n-                EntityDocSubmissionDeferredRequestUnsecured.class, getEntityUnsecuredBeanName());\n-        EntityDocSubmissionDeferredRequestSecured entityDSSecured = retrieveBean(\n-                EntityDocSubmissionDeferredRequestSecured.class, getEntitySecuredBeanName());\n \n+\n+    @Override\n+    public void configureOutboundPtImpl() throws InstantiationException, IllegalAccessException, ClassNotFoundException {\n+        OutboundDocSubmissionDeferredRequest outboundDS = retrieveBean(OutboundDocSubmissionDeferredRequest.class, getPassthroughOutboundBeanName());\n+        EntityDocSubmissionDeferredRequestUnsecured entityDSUnsecured = retrieveBean(EntityDocSubmissionDeferredRequestUnsecured.class, getEntityUnsecuredBeanName());\n+        EntityDocSubmissionDeferredRequestSecured entityDSSecured = retrieveBean(EntityDocSubmissionDeferredRequestSecured.class, getEntitySecuredBeanName());\n         entityDSSecured.setOutboundDocSubmissionRequest(outboundDS);\n         entityDSUnsecured.setOutboundDocSubmissionRequest(outboundDS);\n     }\n \n+\n     @Override\n     public serviceEnum getServiceName() {\n         return serviceName;\n@@ -194,6 +199,8 @@ public class DocumentSubmissionDefRequest11WebServices extends AbstractDSDeferre\n      *\n      * @see gov.hhs.fha.nhinc.configuration.jmx.WebServicesMXBean#isInboundStandard()\n      */\n+\n+\n     @Override\n     public boolean isInboundStandard() {\n         boolean isStandard = false;\n@@ -210,15 +217,17 @@ public class DocumentSubmissionDefRequest11WebServices extends AbstractDSDeferre\n      *\n      * @see gov.hhs.fha.nhinc.configuration.jmx.WebServicesMXBean#isOutboundStandard()\n      */\n+\n+\n     @Override\n     public boolean isOutboundStandard() {\n         boolean isStandard = false;\n-        EntityDocSubmissionDeferredRequestUnsecured entityDS = retrieveBean(\n-                EntityDocSubmissionDeferredRequestUnsecured.class, getEntityUnsecuredBeanName());\n+        EntityDocSubmissionDeferredRequestUnsecured entityDS = retrieveBean(EntityDocSubmissionDeferredRequestUnsecured.class, getEntityUnsecuredBeanName());\n         OutboundDocSubmissionDeferredRequest outboundDS = entityDS.getOutboundDocSubmission();\n         if (compareClassName(outboundDS, DEFAULT_OUTBOUND_STANDARD_IMPL_CLASS_NAME)) {\n             isStandard = true;\n         }\n         return isStandard;\n     }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 71
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "28",
                    "severity": "error",
                    "message": "'import' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/871/DocumentSubmissionDefRequest11WebServices.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_random/871/DocumentSubmissionDefRequest11WebServices.java\nindex 4506f296ca7..6a1dbf689f4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/871/DocumentSubmissionDefRequest11WebServices.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_random/871/DocumentSubmissionDefRequest11WebServices.java\n@@ -25,7 +25,6 @@\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n package gov.hhs.fha.nhinc.docsubmission.configuration.jmx;\n-\n import gov.hhs.fha.nhinc.configuration.IConfiguration.serviceEnum;\n import gov.hhs.fha.nhinc.docsubmission._11.entity.deferred.request.EntityDocSubmissionDeferredRequestSecured;\n import gov.hhs.fha.nhinc.docsubmission._11.entity.deferred.request.EntityDocSubmissionDeferredRequestUnsecured;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/871/DocumentSubmissionDefRequest11WebServices.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_three_grams/871/DocumentSubmissionDefRequest11WebServices.java\nindex 4506f296ca7..e270eee917f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/871/DocumentSubmissionDefRequest11WebServices.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_three_grams/871/DocumentSubmissionDefRequest11WebServices.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.docsubmission.configuration.jmx;\n \n import gov.hhs.fha.nhinc.configuration.IConfiguration.serviceEnum;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff",
        "styler_random"
    ]
}
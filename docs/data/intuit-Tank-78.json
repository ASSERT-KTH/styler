{
    "project_name": "intuit-Tank",
    "error_id": "78",
    "information": {
        "errors": [
            {
                "line": "55",
                "column": "58",
                "severity": "warning",
                "message": "'+' should be on a new line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
            }
        ]
    },
    "source_code": "        String prefix = \"x\";\n        NamedParameter parameter = new NamedParameter(VMInstance.PROPERTY_INSTANCE_ID, \"iId\", instanceId);\n        String sb = buildQlSelect(prefix) + startWhere() +\n                buildWhereClause(Operation.EQUALS, prefix, parameter);\n        return super.findOneWithJQL(sb, parameter);\n    }",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/78/VMImageDao.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/styler/78/VMImageDao.java\nindex 65f046ef400..498c49840e9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/78/VMImageDao.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/styler/78/VMImageDao.java\n@@ -52,8 +52,7 @@ public class VMImageDao extends BaseDao<VMInstance> {\n     public VMInstance getImageByInstanceId(@Nonnull String instanceId) {\n         String prefix = \"x\";\n         NamedParameter parameter = new NamedParameter(VMInstance.PROPERTY_INSTANCE_ID, \"iId\", instanceId);\n-        String sb = buildQlSelect(prefix) + startWhere() +\n-                buildWhereClause(Operation.EQUALS, prefix, parameter);\n+        String sb = buildQlSelect(prefix) + startWhere() + buildWhereClause(Operation.EQUALS, prefix, parameter);\n         return super.findOneWithJQL(sb, parameter);\n     }\n \n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "54",
                    "column": "54",
                    "severity": "warning",
                    "message": "'+' should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/78/VMImageDao.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/intellij/78/VMImageDao.java\nindex 65f046ef400..cdcc3174f1b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/78/VMImageDao.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/intellij/78/VMImageDao.java\n@@ -1,6 +1,7 @@\n /**\n  * Copyright 2011 Intuit Inc. All Rights Reserved\n  */\n+\n package com.intuit.tank.dao;\n \n /*\n@@ -27,55 +28,52 @@ import com.intuit.tank.vm.vmManager.VMInformation;\n \n /**\n  * ProductDao\n- * \n+ *\n  * @author dangleton\n- * \n  */\n public class VMImageDao extends BaseDao<VMInstance> {\n \n-    /**\n-     * @param entityClass\n-     */\n-    public VMImageDao() {\n-        super();\n+  /**\n+   * @param entityClass\n+   */\n+  public VMImageDao() {\n+    super();\n \n-    }\n+  }\n \n-    /**\n-     * Gets the VMImage associated with the instanceID.\n-     * \n-     * @param instanceId\n-     *            the instance id to find for\n-     * @return the VMImage or null if not found\n-     */\n-    @Nullable\n-    public VMInstance getImageByInstanceId(@Nonnull String instanceId) {\n-        String prefix = \"x\";\n-        NamedParameter parameter = new NamedParameter(VMInstance.PROPERTY_INSTANCE_ID, \"iId\", instanceId);\n-        String sb = buildQlSelect(prefix) + startWhere() +\n-                buildWhereClause(Operation.EQUALS, prefix, parameter);\n-        return super.findOneWithJQL(sb, parameter);\n-    }\n+  /**\n+   * Gets the VMImage associated with the instanceID.\n+   *\n+   * @param instanceId the instance id to find for\n+   * @return the VMImage or null if not found\n+   */\n+  @Nullable\n+  public VMInstance getImageByInstanceId(@Nonnull String instanceId) {\n+    String prefix = \"x\";\n+    NamedParameter parameter = new NamedParameter(VMInstance.PROPERTY_INSTANCE_ID, \"iId\", instanceId);\n+    String sb = buildQlSelect(prefix) + startWhere() +\n+      buildWhereClause(Operation.EQUALS, prefix, parameter);\n+    return super.findOneWithJQL(sb, parameter);\n+  }\n \n-    /**\n-     * \n-     * @param info\n-     * @param region\n-     * @return\n-     */\n-    @Nonnull\n-    public VMInstance addImageFromInfo(String jobId, @Nonnull VMInformation info, @Nonnull VMRegion region) {\n-        // persist the VMImages to database:\n-        VMInstance image = VMInstance.builder()\n-                .amiId(info.getImageId())\n-                .instanceId(info.getInstanceId())\n-                .startTime(info.getLaunchTime() != null ? info.getLaunchTime().getTime() : new Date())\n-                .status(info.getState())\n-                .size(info.getSize())\n-                .region(region)\n-                .jobId(jobId)\n-                .build();\n-        return saveOrUpdate(image);\n-    }\n+  /**\n+   * @param info\n+   * @param region\n+   * @return\n+   */\n+  @Nonnull\n+  public VMInstance addImageFromInfo(String jobId, @Nonnull VMInformation info, @Nonnull VMRegion region) {\n+    // persist the VMImages to database:\n+    VMInstance image = VMInstance.builder()\n+      .amiId(info.getImageId())\n+      .instanceId(info.getInstanceId())\n+      .startTime(info.getLaunchTime() != null ? info.getLaunchTime().getTime() : new Date())\n+      .status(info.getState())\n+      .size(info.getSize())\n+      .region(region)\n+      .jobId(jobId)\n+      .build();\n+    return saveOrUpdate(image);\n+  }\n \n }\n",
            "diff_size": 44
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/78/VMImageDao.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/naturalize/78/VMImageDao.java\nindex 65f046ef400..d9a60ea9b16 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/78/VMImageDao.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/naturalize/78/VMImageDao.java\n@@ -52,8 +52,7 @@ public class VMImageDao extends BaseDao<VMInstance> {\n     public VMInstance getImageByInstanceId(@Nonnull String instanceId) {\n         String prefix = \"x\";\n         NamedParameter parameter = new NamedParameter(VMInstance.PROPERTY_INSTANCE_ID, \"iId\", instanceId);\n-        String sb = buildQlSelect(prefix) + startWhere() +\n-                buildWhereClause(Operation.EQUALS, prefix, parameter);\n+        String sb = buildQlSelect(prefix) + startWhere() + buildWhereClause(Operation.EQUALS, prefix, parameter);\n         return super.findOneWithJQL(sb, parameter);\n     }\n \n@@ -78,4 +77,4 @@ public class VMImageDao extends BaseDao<VMInstance> {\n         return saveOrUpdate(image);\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "72",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 273).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/78/VMImageDao.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/codebuff/78/VMImageDao.java\nindex 65f046ef400..709feec1e7d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/78/VMImageDao.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/codebuff/78/VMImageDao.java\n@@ -16,11 +16,11 @@ package com.intuit.tank.dao;\n  * #L%\n  */\n \n-import java.util.Date;\n \n+\n+import java.util.Date;\n import javax.annotation.Nonnull;\n import javax.annotation.Nullable;\n-\n import com.intuit.tank.project.VMInstance;\n import com.intuit.tank.vm.api.enumerated.VMRegion;\n import com.intuit.tank.vm.vmManager.VMInformation;\n@@ -31,14 +31,16 @@ import com.intuit.tank.vm.vmManager.VMInformation;\n  * @author dangleton\n  * \n  */\n+\n+\n public class VMImageDao extends BaseDao<VMInstance> {\n \n     /**\n      * @param entityClass\n      */\n+\n     public VMImageDao() {\n         super();\n-\n     }\n \n     /**\n@@ -48,12 +50,12 @@ public class VMImageDao extends BaseDao<VMInstance> {\n      *            the instance id to find for\n      * @return the VMImage or null if not found\n      */\n+\n     @Nullable\n     public VMInstance getImageByInstanceId(@Nonnull String instanceId) {\n         String prefix = \"x\";\n         NamedParameter parameter = new NamedParameter(VMInstance.PROPERTY_INSTANCE_ID, \"iId\", instanceId);\n-        String sb = buildQlSelect(prefix) + startWhere() +\n-                buildWhereClause(Operation.EQUALS, prefix, parameter);\n+        String sb = buildQlSelect(prefix) + startWhere() + buildWhereClause(Operation.EQUALS, prefix, parameter);\n         return super.findOneWithJQL(sb, parameter);\n     }\n \n@@ -63,19 +65,11 @@ public class VMImageDao extends BaseDao<VMInstance> {\n      * @param region\n      * @return\n      */\n+\n     @Nonnull\n     public VMInstance addImageFromInfo(String jobId, @Nonnull VMInformation info, @Nonnull VMRegion region) {\n         // persist the VMImages to database:\n-        VMInstance image = VMInstance.builder()\n-                .amiId(info.getImageId())\n-                .instanceId(info.getInstanceId())\n-                .startTime(info.getLaunchTime() != null ? info.getLaunchTime().getTime() : new Date())\n-                .status(info.getState())\n-                .size(info.getSize())\n-                .region(region)\n-                .jobId(jobId)\n-                .build();\n+        VMInstance image = VMInstance.builder().amiId(info.getImageId()).instanceId(info.getInstanceId()).startTime(info.getLaunchTime() != null ? info.getLaunchTime().getTime() : new Date()).status(info.getState()).size(info.getSize()).region(region).jobId(jobId).build();\n         return saveOrUpdate(image);\n     }\n-\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 23
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/78/VMImageDao.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/styler_random/78/VMImageDao.java\nindex 65f046ef400..498c49840e9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/78/VMImageDao.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/styler_random/78/VMImageDao.java\n@@ -52,8 +52,7 @@ public class VMImageDao extends BaseDao<VMInstance> {\n     public VMInstance getImageByInstanceId(@Nonnull String instanceId) {\n         String prefix = \"x\";\n         NamedParameter parameter = new NamedParameter(VMInstance.PROPERTY_INSTANCE_ID, \"iId\", instanceId);\n-        String sb = buildQlSelect(prefix) + startWhere() +\n-                buildWhereClause(Operation.EQUALS, prefix, parameter);\n+        String sb = buildQlSelect(prefix) + startWhere() + buildWhereClause(Operation.EQUALS, prefix, parameter);\n         return super.findOneWithJQL(sb, parameter);\n     }\n \n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/78/VMImageDao.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/styler_three_grams/78/VMImageDao.java\nindex 65f046ef400..498c49840e9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/78/VMImageDao.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/styler_three_grams/78/VMImageDao.java\n@@ -52,8 +52,7 @@ public class VMImageDao extends BaseDao<VMInstance> {\n     public VMInstance getImageByInstanceId(@Nonnull String instanceId) {\n         String prefix = \"x\";\n         NamedParameter parameter = new NamedParameter(VMInstance.PROPERTY_INSTANCE_ID, \"iId\", instanceId);\n-        String sb = buildQlSelect(prefix) + startWhere() +\n-                buildWhereClause(Operation.EQUALS, prefix, parameter);\n+        String sb = buildQlSelect(prefix) + startWhere() + buildWhereClause(Operation.EQUALS, prefix, parameter);\n         return super.findOneWithJQL(sb, parameter);\n     }\n \n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "intellij",
        "codebuff"
    ]
}
{
    "project_name": "TIBCOSoftware-genxdm",
    "error_id": "198",
    "information": {
        "errors": [
            {
                "line": "38",
                "column": "1",
                "severity": "warning",
                "message": "File contains tab characters (this is the first instance).",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
            }
        ]
    },
    "source_code": "final public class AxiomSupport\n{\n\tpublic static OMAttribute dynamicDowncastAttribute(final Object node)\n\t{\n\t\tif (node instanceof OMAttribute)\n\t\t{",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "39",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/198/AxiomSupport.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler/198/AxiomSupport.java\nindex 7265f857346..ac4d7a32227 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/198/AxiomSupport.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler/198/AxiomSupport.java\n@@ -35,7 +35,7 @@ import org.genxdm.NodeKind;\n  */\n final public class AxiomSupport\n {\n-\tpublic static OMAttribute dynamicDowncastAttribute(final Object node)\n+public static OMAttribute dynamicDowncastAttribute(final Object node)\n \t{\n \t\tif (node instanceof OMAttribute)\n \t\t{\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/198/AxiomSupport.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/intellij/198/AxiomSupport.java\nindex 7265f857346..cc7d40a5f01 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/198/AxiomSupport.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/intellij/198/AxiomSupport.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.genxdm.bridge.axiom;\n \n import java.util.HashMap;\n@@ -33,277 +34,205 @@ import org.genxdm.NodeKind;\n /**\n  * A bunch of helper functions for supporting Axiom integration.\n  */\n-final public class AxiomSupport\n-{\n-\tpublic static OMAttribute dynamicDowncastAttribute(final Object node)\n-\t{\n-\t\tif (node instanceof OMAttribute)\n-\t\t{\n-\t\t\treturn staticDowncastAttribute(node);\n-\t\t}\n-\t\telse\n-\t\t{\n-\t\t\treturn null;\n-\t\t}\n-\t}\n-\n-\tpublic static OMComment dynamicDowncastComment(final Object node)\n-\t{\n-\t\tif (node instanceof OMComment)\n-\t\t{\n-\t\t\treturn staticDowncastComment(node);\n-\t\t}\n-\t\telse\n-\t\t{\n-\t\t\treturn null;\n-\t\t}\n-\t}\n-\n-\tpublic static OMContainer dynamicDowncastContainer(final Object node)\n-\t{\n-\t\tif (node instanceof OMContainer)\n-\t\t{\n-\t\t\treturn staticDowncastContainer(node);\n-\t\t}\n-\t\telse\n-\t\t{\n-\t\t\treturn null;\n-\t\t}\n-\t}\n-\n-\tpublic static OMDocument dynamicDowncastDocument(final Object node)\n-\t{\n-\t\tif (node instanceof OMDocument)\n-\t\t{\n-\t\t\treturn staticDowncastDocument(node);\n-\t\t}\n-\t\telse\n-\t\t{\n-\t\t\treturn null;\n-\t\t}\n-\t}\n-\n-\tpublic static OMElement dynamicDowncastElement(final Object node)\n-\t{\n-\t\tif (node instanceof OMElement)\n-\t\t{\n-\t\t\treturn staticDowncastElement(node);\n-\t\t}\n-\t\telse\n-\t\t{\n-\t\t\treturn null;\n-\t\t}\n-\t}\n-\n-\tpublic static FauxNamespace dynamicDowncastFauxNamespace(final Object node)\n-\t{\n-\t\tif (node instanceof FauxNamespace)\n-\t\t{\n-\t\t\treturn staticDowncastFauxNamespace(node);\n-\t\t}\n-\t\telse\n-\t\t{\n-\t\t\treturn null;\n-\t\t}\n-\t}\n-\n-\tpublic static OMNamespace dynamicDowncastNamespace(final Object node)\n-\t{\n-\t\tif (node instanceof OMNamespace)\n-\t\t{\n-\t\t\treturn staticDowncastNamespace(node);\n-\t\t}\n-\t\telse\n-\t\t{\n-\t\t\treturn null;\n-\t\t}\n-\t}\n-\n-\tpublic static OMNode dynamicDowncastNode(final Object node)\n-\t{\n-\t\tif (node instanceof OMNode)\n-\t\t{\n-\t\t\treturn staticDowncastNode(node);\n-\t\t}\n-\t\telse\n-\t\t{\n-\t\t\treturn null;\n-\t\t}\n-\t}\n-\n-\tpublic static OMProcessingInstruction dynamicDowncastProcessingInstruction(final Object node)\n-\t{\n-\t\tif (node instanceof OMProcessingInstruction)\n-\t\t{\n-\t\t\treturn staticDowncastProcessingInstruction(node);\n-\t\t}\n-\t\telse\n-\t\t{\n-\t\t\treturn null;\n-\t\t}\n-\t}\n-\n-\tpublic static OMText dynamicDowncastText(final Object node)\n-\t{\n-\t\tif (node instanceof OMText)\n-\t\t{\n-\t\t\treturn staticDowncastText(node);\n-\t\t}\n-\t\telse\n-\t\t{\n-\t\t\treturn null;\n-\t\t}\n-\t}\n-\n-\tpublic static NodeKind getNodeKind(final Object origin)\n-\t{\n-\t\tif (null != dynamicDowncastElement(origin))\n-\t\t{\n-\t\t\treturn NodeKind.ELEMENT;\n-\t\t}\n-\t\tif (null != dynamicDowncastText(origin))\n-\t\t{\n-\t\t\treturn NodeKind.TEXT;\n-\t\t}\n-\t\tif (null != dynamicDowncastAttribute(origin))\n-\t\t{\n-\t\t\treturn NodeKind.ATTRIBUTE;\n-\t\t}\n-\t\tif (null != dynamicDowncastNamespace(origin))\n-\t\t{\n-\t\t\treturn NodeKind.NAMESPACE;\n-\t\t}\n-\t\tif (null != dynamicDowncastDocument(origin))\n-\t\t{\n-\t\t\treturn NodeKind.DOCUMENT;\n-\t\t}\n-\t\tif (null != dynamicDowncastProcessingInstruction(origin))\n-\t\t{\n-\t\t\treturn NodeKind.PROCESSING_INSTRUCTION;\n-\t\t}\n-\t\tif (null != dynamicDowncastComment(origin))\n-\t\t{\n-\t\t\treturn NodeKind.COMMENT;\n-\t\t}\n-\t\treturn null;\n-\t}\n-\n-\tpublic static OMContainer getParent(final Object origin)\n-\t{\n-\t\t// Some work required here...\n-\t\t{\n-\t\t\tfinal OMElement element = dynamicDowncastElement(origin);\n-\t\t\tif (null != element)\n-\t\t\t{\n-\t\t\t\treturn element.getParent();\n-\t\t\t}\n-\t\t}\n-\t\t{\n-\t\t\tfinal OMText text = dynamicDowncastText(origin);\n-\t\t\tif (null != text)\n-\t\t\t{\n-\t\t\t\treturn text.getParent();\n-\t\t\t}\n-\t\t}\n-\t\t{\n-\t\t\tfinal FauxNamespace namespace = dynamicDowncastFauxNamespace(origin);\n-\t\t\tif (null != namespace)\n-\t\t\t{\n-\t\t\t\treturn namespace.getParent();\n-\t\t\t}\n-\t\t}\n-\t\t// We have to check for document first because some implementations\n-\t\t// implement OMNode but don't support getParent.\n-\t\tfinal OMDocument document = dynamicDowncastDocument(origin);\n-\t\tif (null != document)\n-\t\t{\n-\t\t\treturn null;\n-\t\t}\n-\n-\t\tfinal OMNode node = dynamicDowncastNode(origin);\n-\t\tif (null != node)\n-\t\t{\n-\t\t\treturn node.getParent();\n-\t\t}\n-\t\telse\n-\t\t{\n-\t\t\tfinal OMAttribute attribute = dynamicDowncastAttribute(origin);\n-\t\t\tif (null != attribute)\n-\t\t\t{\n-\t\t\t\treturn attribute.getOwner();\n-\t\t\t}\n-\t\t\telse\n-\t\t\t{\n-\t\t\t\treturn null;\n-\t\t\t}\n-\t\t}\n-\t}\n-\n-\tpublic static OMAttribute staticDowncastAttribute(final Object node)\n-\t{\n-\t\treturn (OMAttribute)node;\n-\t}\n-\n-\tpublic static OMComment staticDowncastComment(final Object node)\n-\t{\n-\t\treturn (OMComment)node;\n-\t}\n-\n-\tpublic static OMContainer staticDowncastContainer(final Object node)\n-\t{\n-\t\treturn (OMContainer)node;\n-\t}\n-\n-\tpublic static OMDocument staticDowncastDocument(final Object node)\n-\t{\n-\t\treturn (OMDocument)node;\n-\t}\n-\n-\tpublic static OMElement staticDowncastElement(final Object node)\n-\t{\n-\t\treturn (OMElement)node;\n-\t}\n-\n-\tpublic static FauxNamespace staticDowncastFauxNamespace(final Object node)\n-\t{\n-\t\treturn (FauxNamespace)node;\n-\t}\n-\n-\tpublic static OMNamespace staticDowncastNamespace(final Object node)\n-\t{\n-\t\treturn (OMNamespace)node;\n-\t}\n-\n-\tpublic static OMNode staticDowncastNode(final Object node)\n-\t{\n-\t\treturn (OMNode)node;\n-\t}\n-\n-\tpublic static OMProcessingInstruction staticDowncastProcessingInstruction(final Object node)\n-\t{\n-\t\treturn (OMProcessingInstruction)node;\n-\t}\n-\n-\tpublic static OMText staticDowncastText(final Object node)\n-\t{\n-\t\treturn (OMText)node;\n-\t}\n-\t\n-\tpublic static Map<String, OMElement> getIdMap(OMDocument document)\n-\t{\n-\t    HashMap<String, OMElement> map = idMaps.get(document);\n-\t    if (map == null)\n-\t    {\n-\t        map = new HashMap<String, OMElement>();\n-\t        addIdMap(document, map);\n-\t    }\n-\t    return map;\n-\t}\n-\t\n-\tpublic static void addIdMap(OMDocument document, HashMap<String, OMElement> map)\n-\t{\n-\t    idMaps.put(document, map);\n-\t}\n-\t\n-\tstatic final Map<OMDocument, HashMap<String, OMElement>> idMaps = new WeakHashMap<OMDocument, HashMap<String, OMElement>>();\n+final public class AxiomSupport {\n+    public static OMAttribute dynamicDowncastAttribute(final Object node) {\n+        if (node instanceof OMAttribute) {\n+            return staticDowncastAttribute(node);\n+        } else {\n+            return null;\n+        }\n+    }\n+\n+    public static OMComment dynamicDowncastComment(final Object node) {\n+        if (node instanceof OMComment) {\n+            return staticDowncastComment(node);\n+        } else {\n+            return null;\n+        }\n+    }\n+\n+    public static OMContainer dynamicDowncastContainer(final Object node) {\n+        if (node instanceof OMContainer) {\n+            return staticDowncastContainer(node);\n+        } else {\n+            return null;\n+        }\n+    }\n+\n+    public static OMDocument dynamicDowncastDocument(final Object node) {\n+        if (node instanceof OMDocument) {\n+            return staticDowncastDocument(node);\n+        } else {\n+            return null;\n+        }\n+    }\n+\n+    public static OMElement dynamicDowncastElement(final Object node) {\n+        if (node instanceof OMElement) {\n+            return staticDowncastElement(node);\n+        } else {\n+            return null;\n+        }\n+    }\n+\n+    public static FauxNamespace dynamicDowncastFauxNamespace(final Object node) {\n+        if (node instanceof FauxNamespace) {\n+            return staticDowncastFauxNamespace(node);\n+        } else {\n+            return null;\n+        }\n+    }\n+\n+    public static OMNamespace dynamicDowncastNamespace(final Object node) {\n+        if (node instanceof OMNamespace) {\n+            return staticDowncastNamespace(node);\n+        } else {\n+            return null;\n+        }\n+    }\n+\n+    public static OMNode dynamicDowncastNode(final Object node) {\n+        if (node instanceof OMNode) {\n+            return staticDowncastNode(node);\n+        } else {\n+            return null;\n+        }\n+    }\n+\n+    public static OMProcessingInstruction dynamicDowncastProcessingInstruction(final Object node) {\n+        if (node instanceof OMProcessingInstruction) {\n+            return staticDowncastProcessingInstruction(node);\n+        } else {\n+            return null;\n+        }\n+    }\n+\n+    public static OMText dynamicDowncastText(final Object node) {\n+        if (node instanceof OMText) {\n+            return staticDowncastText(node);\n+        } else {\n+            return null;\n+        }\n+    }\n+\n+    public static NodeKind getNodeKind(final Object origin) {\n+        if (null != dynamicDowncastElement(origin)) {\n+            return NodeKind.ELEMENT;\n+        }\n+        if (null != dynamicDowncastText(origin)) {\n+            return NodeKind.TEXT;\n+        }\n+        if (null != dynamicDowncastAttribute(origin)) {\n+            return NodeKind.ATTRIBUTE;\n+        }\n+        if (null != dynamicDowncastNamespace(origin)) {\n+            return NodeKind.NAMESPACE;\n+        }\n+        if (null != dynamicDowncastDocument(origin)) {\n+            return NodeKind.DOCUMENT;\n+        }\n+        if (null != dynamicDowncastProcessingInstruction(origin)) {\n+            return NodeKind.PROCESSING_INSTRUCTION;\n+        }\n+        if (null != dynamicDowncastComment(origin)) {\n+            return NodeKind.COMMENT;\n+        }\n+        return null;\n+    }\n+\n+    public static OMContainer getParent(final Object origin) {\n+        // Some work required here...\n+        {\n+            final OMElement element = dynamicDowncastElement(origin);\n+            if (null != element) {\n+                return element.getParent();\n+            }\n+        }\n+        {\n+            final OMText text = dynamicDowncastText(origin);\n+            if (null != text) {\n+                return text.getParent();\n+            }\n+        }\n+        {\n+            final FauxNamespace namespace = dynamicDowncastFauxNamespace(origin);\n+            if (null != namespace) {\n+                return namespace.getParent();\n+            }\n+        }\n+        // We have to check for document first because some implementations\n+        // implement OMNode but don't support getParent.\n+        final OMDocument document = dynamicDowncastDocument(origin);\n+        if (null != document) {\n+            return null;\n+        }\n+\n+        final OMNode node = dynamicDowncastNode(origin);\n+        if (null != node) {\n+            return node.getParent();\n+        } else {\n+            final OMAttribute attribute = dynamicDowncastAttribute(origin);\n+            if (null != attribute) {\n+                return attribute.getOwner();\n+            } else {\n+                return null;\n+            }\n+        }\n+    }\n+\n+    public static OMAttribute staticDowncastAttribute(final Object node) {\n+        return (OMAttribute) node;\n+    }\n+\n+    public static OMComment staticDowncastComment(final Object node) {\n+        return (OMComment) node;\n+    }\n+\n+    public static OMContainer staticDowncastContainer(final Object node) {\n+        return (OMContainer) node;\n+    }\n+\n+    public static OMDocument staticDowncastDocument(final Object node) {\n+        return (OMDocument) node;\n+    }\n+\n+    public static OMElement staticDowncastElement(final Object node) {\n+        return (OMElement) node;\n+    }\n+\n+    public static FauxNamespace staticDowncastFauxNamespace(final Object node) {\n+        return (FauxNamespace) node;\n+    }\n+\n+    public static OMNamespace staticDowncastNamespace(final Object node) {\n+        return (OMNamespace) node;\n+    }\n+\n+    public static OMNode staticDowncastNode(final Object node) {\n+        return (OMNode) node;\n+    }\n+\n+    public static OMProcessingInstruction staticDowncastProcessingInstruction(final Object node) {\n+        return (OMProcessingInstruction) node;\n+    }\n+\n+    public static OMText staticDowncastText(final Object node) {\n+        return (OMText) node;\n+    }\n+\n+    public static Map<String, OMElement> getIdMap(OMDocument document) {\n+        HashMap<String, OMElement> map = idMaps.get(document);\n+        if (map == null) {\n+            map = new HashMap<String, OMElement>();\n+            addIdMap(document, map);\n+        }\n+        return map;\n+    }\n+\n+    public static void addIdMap(OMDocument document, HashMap<String, OMElement> map) {\n+        idMaps.put(document, map);\n+    }\n+\n+    static final Map<OMDocument, HashMap<String, OMElement>> idMaps =\n+        new WeakHashMap<OMDocument, HashMap<String, OMElement>>();\n }\n",
            "diff_size": 274
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "39",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/198/AxiomSupport.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/naturalize/198/AxiomSupport.java\nindex 7265f857346..8b139ce47b3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/198/AxiomSupport.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/naturalize/198/AxiomSupport.java\n@@ -35,262 +35,262 @@ import org.genxdm.NodeKind;\n  */\n final public class AxiomSupport\n {\n-\tpublic static OMAttribute dynamicDowncastAttribute(final Object node)\n+    public static OMAttribute dynamicDowncastAttribute(final Object node)\n \t{\n-\t\tif (node instanceof OMAttribute)\n+    if (node instanceof OMAttribute)\n \t\t{\n-\t\t\treturn staticDowncastAttribute(node);\n-\t\t}\n+    return staticDowncastAttribute(node);\n+    }\n \t\telse\n \t\t{\n-\t\t\treturn null;\n-\t\t}\n-\t}\n+    return null;\n+    }\n+    }\n \n \tpublic static OMComment dynamicDowncastComment(final Object node)\n \t{\n-\t\tif (node instanceof OMComment)\n+    if (node instanceof OMComment)\n \t\t{\n-\t\t\treturn staticDowncastComment(node);\n-\t\t}\n+    return staticDowncastComment(node);\n+    }\n \t\telse\n \t\t{\n-\t\t\treturn null;\n-\t\t}\n-\t}\n+    return null;\n+    }\n+    }\n \n \tpublic static OMContainer dynamicDowncastContainer(final Object node)\n \t{\n-\t\tif (node instanceof OMContainer)\n+    if (node instanceof OMContainer)\n \t\t{\n-\t\t\treturn staticDowncastContainer(node);\n-\t\t}\n+    return staticDowncastContainer(node);\n+    }\n \t\telse\n \t\t{\n-\t\t\treturn null;\n-\t\t}\n-\t}\n+    return null;\n+    }\n+    }\n \n \tpublic static OMDocument dynamicDowncastDocument(final Object node)\n \t{\n-\t\tif (node instanceof OMDocument)\n+    if (node instanceof OMDocument)\n \t\t{\n-\t\t\treturn staticDowncastDocument(node);\n-\t\t}\n+    return staticDowncastDocument(node);\n+    }\n \t\telse\n \t\t{\n-\t\t\treturn null;\n-\t\t}\n-\t}\n+    return null;\n+    }\n+    }\n \n \tpublic static OMElement dynamicDowncastElement(final Object node)\n \t{\n-\t\tif (node instanceof OMElement)\n+    if (node instanceof OMElement)\n \t\t{\n-\t\t\treturn staticDowncastElement(node);\n-\t\t}\n+    return staticDowncastElement(node);\n+    }\n \t\telse\n \t\t{\n-\t\t\treturn null;\n-\t\t}\n-\t}\n+    return null;\n+    }\n+    }\n \n \tpublic static FauxNamespace dynamicDowncastFauxNamespace(final Object node)\n \t{\n-\t\tif (node instanceof FauxNamespace)\n+    if (node instanceof FauxNamespace)\n \t\t{\n-\t\t\treturn staticDowncastFauxNamespace(node);\n-\t\t}\n+    return staticDowncastFauxNamespace(node);\n+    }\n \t\telse\n \t\t{\n-\t\t\treturn null;\n-\t\t}\n-\t}\n+    return null;\n+    }\n+    }\n \n \tpublic static OMNamespace dynamicDowncastNamespace(final Object node)\n \t{\n-\t\tif (node instanceof OMNamespace)\n+    if (node instanceof OMNamespace)\n \t\t{\n-\t\t\treturn staticDowncastNamespace(node);\n-\t\t}\n+    return staticDowncastNamespace(node);\n+    }\n \t\telse\n \t\t{\n-\t\t\treturn null;\n-\t\t}\n-\t}\n+    return null;\n+    }\n+    }\n \n \tpublic static OMNode dynamicDowncastNode(final Object node)\n \t{\n-\t\tif (node instanceof OMNode)\n+    if (node instanceof OMNode)\n \t\t{\n-\t\t\treturn staticDowncastNode(node);\n-\t\t}\n+    return staticDowncastNode(node);\n+    }\n \t\telse\n \t\t{\n-\t\t\treturn null;\n-\t\t}\n-\t}\n+    return null;\n+    }\n+    }\n \n \tpublic static OMProcessingInstruction dynamicDowncastProcessingInstruction(final Object node)\n \t{\n-\t\tif (node instanceof OMProcessingInstruction)\n+    if (node instanceof OMProcessingInstruction)\n \t\t{\n-\t\t\treturn staticDowncastProcessingInstruction(node);\n-\t\t}\n+    return staticDowncastProcessingInstruction(node);\n+    }\n \t\telse\n \t\t{\n-\t\t\treturn null;\n-\t\t}\n-\t}\n+    return null;\n+    }\n+    }\n \n \tpublic static OMText dynamicDowncastText(final Object node)\n \t{\n-\t\tif (node instanceof OMText)\n+    if (node instanceof OMText)\n \t\t{\n-\t\t\treturn staticDowncastText(node);\n-\t\t}\n+    return staticDowncastText(node);\n+    }\n \t\telse\n \t\t{\n-\t\t\treturn null;\n-\t\t}\n-\t}\n+    return null;\n+    }\n+    }\n \n \tpublic static NodeKind getNodeKind(final Object origin)\n \t{\n-\t\tif (null != dynamicDowncastElement(origin))\n+    if (null != dynamicDowncastElement(origin))\n \t\t{\n-\t\t\treturn NodeKind.ELEMENT;\n-\t\t}\n+    return NodeKind.ELEMENT;\n+    }\n \t\tif (null != dynamicDowncastText(origin))\n \t\t{\n-\t\t\treturn NodeKind.TEXT;\n-\t\t}\n+    return NodeKind.TEXT;\n+    }\n \t\tif (null != dynamicDowncastAttribute(origin))\n \t\t{\n-\t\t\treturn NodeKind.ATTRIBUTE;\n-\t\t}\n+    return NodeKind.ATTRIBUTE;\n+    }\n \t\tif (null != dynamicDowncastNamespace(origin))\n \t\t{\n-\t\t\treturn NodeKind.NAMESPACE;\n-\t\t}\n+    return NodeKind.NAMESPACE;\n+    }\n \t\tif (null != dynamicDowncastDocument(origin))\n \t\t{\n-\t\t\treturn NodeKind.DOCUMENT;\n-\t\t}\n+    return NodeKind.DOCUMENT;\n+    }\n \t\tif (null != dynamicDowncastProcessingInstruction(origin))\n \t\t{\n-\t\t\treturn NodeKind.PROCESSING_INSTRUCTION;\n-\t\t}\n+    return NodeKind.PROCESSING_INSTRUCTION;\n+    }\n \t\tif (null != dynamicDowncastComment(origin))\n \t\t{\n-\t\t\treturn NodeKind.COMMENT;\n-\t\t}\n+    return NodeKind.COMMENT;\n+    }\n \t\treturn null;\n-\t}\n+    }\n \n \tpublic static OMContainer getParent(final Object origin)\n \t{\n-\t\t// Some work required here...\n+    // Some work required here...\n \t\t{\n-\t\t\tfinal OMElement element = dynamicDowncastElement(origin);\n+    final OMElement element = dynamicDowncastElement(origin);\n \t\t\tif (null != element)\n \t\t\t{\n-\t\t\t\treturn element.getParent();\n-\t\t\t}\n-\t\t}\n+    return element.getParent();\n+    }\n+    }\n \t\t{\n-\t\t\tfinal OMText text = dynamicDowncastText(origin);\n+    final OMText text = dynamicDowncastText(origin);\n \t\t\tif (null != text)\n \t\t\t{\n-\t\t\t\treturn text.getParent();\n-\t\t\t}\n-\t\t}\n+    return text.getParent();\n+    }\n+    }\n \t\t{\n-\t\t\tfinal FauxNamespace namespace = dynamicDowncastFauxNamespace(origin);\n+    final FauxNamespace namespace = dynamicDowncastFauxNamespace(origin);\n \t\t\tif (null != namespace)\n \t\t\t{\n-\t\t\t\treturn namespace.getParent();\n-\t\t\t}\n-\t\t}\n+    return namespace.getParent();\n+    }\n+    }\n \t\t// We have to check for document first because some implementations\n \t\t// implement OMNode but don't support getParent.\n \t\tfinal OMDocument document = dynamicDowncastDocument(origin);\n \t\tif (null != document)\n \t\t{\n-\t\t\treturn null;\n-\t\t}\n+    return null;\n+    }\n \n \t\tfinal OMNode node = dynamicDowncastNode(origin);\n \t\tif (null != node)\n \t\t{\n-\t\t\treturn node.getParent();\n-\t\t}\n+    return node.getParent();\n+    }\n \t\telse\n \t\t{\n-\t\t\tfinal OMAttribute attribute = dynamicDowncastAttribute(origin);\n+    final OMAttribute attribute = dynamicDowncastAttribute(origin);\n \t\t\tif (null != attribute)\n \t\t\t{\n-\t\t\t\treturn attribute.getOwner();\n-\t\t\t}\n+    return attribute.getOwner();\n+    }\n \t\t\telse\n \t\t\t{\n-\t\t\t\treturn null;\n-\t\t\t}\n-\t\t}\n-\t}\n+    return null;\n+    }\n+    }\n+    }\n \n \tpublic static OMAttribute staticDowncastAttribute(final Object node)\n \t{\n-\t\treturn (OMAttribute)node;\n-\t}\n+    return (OMAttribute)node;\n+    }\n \n \tpublic static OMComment staticDowncastComment(final Object node)\n \t{\n-\t\treturn (OMComment)node;\n-\t}\n+    return (OMComment)node;\n+    }\n \n \tpublic static OMContainer staticDowncastContainer(final Object node)\n \t{\n-\t\treturn (OMContainer)node;\n-\t}\n+    return (OMContainer)node;\n+    }\n \n \tpublic static OMDocument staticDowncastDocument(final Object node)\n \t{\n-\t\treturn (OMDocument)node;\n-\t}\n+    return (OMDocument)node;\n+    }\n \n \tpublic static OMElement staticDowncastElement(final Object node)\n \t{\n-\t\treturn (OMElement)node;\n-\t}\n+    return (OMElement)node;\n+    }\n \n \tpublic static FauxNamespace staticDowncastFauxNamespace(final Object node)\n \t{\n-\t\treturn (FauxNamespace)node;\n-\t}\n+    return (FauxNamespace)node;\n+    }\n \n \tpublic static OMNamespace staticDowncastNamespace(final Object node)\n \t{\n-\t\treturn (OMNamespace)node;\n-\t}\n+    return (OMNamespace)node;\n+    }\n \n \tpublic static OMNode staticDowncastNode(final Object node)\n \t{\n-\t\treturn (OMNode)node;\n-\t}\n+    return (OMNode)node;\n+    }\n \n \tpublic static OMProcessingInstruction staticDowncastProcessingInstruction(final Object node)\n \t{\n-\t\treturn (OMProcessingInstruction)node;\n-\t}\n+    return (OMProcessingInstruction)node;\n+    }\n \n \tpublic static OMText staticDowncastText(final Object node)\n \t{\n-\t\treturn (OMText)node;\n-\t}\n-\t\n-\tpublic static Map<String, OMElement> getIdMap(OMDocument document)\n-\t{\n+    return (OMText)node;\n+    }\n+\n+public static Map<String, OMElement> getIdMap(OMDocument document)\n+{\n \t    HashMap<String, OMElement> map = idMaps.get(document);\n \t    if (map == null)\n \t    {\n@@ -299,11 +299,11 @@ final public class AxiomSupport\n \t    }\n \t    return map;\n \t}\n-\t\n-\tpublic static void addIdMap(OMDocument document, HashMap<String, OMElement> map)\n-\t{\n+\n+public static void addIdMap(OMDocument document, HashMap<String, OMElement> map)\n+{\n \t    idMaps.put(document, map);\n \t}\n-\t\n-\tstatic final Map<OMDocument, HashMap<String, OMElement>> idMaps = new WeakHashMap<OMDocument, HashMap<String, OMElement>>();\n-}\n+\n+static final Map<OMDocument, HashMap<String, OMElement>> idMaps = new WeakHashMap<OMDocument, HashMap<String, OMElement>>();\n+    }\n\\ No newline at end of file\n",
            "diff_size": 130
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/198/AxiomSupport.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/codebuff/198/AxiomSupport.java\nindex 7265f857346..8c13899f545 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/198/AxiomSupport.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/codebuff/198/AxiomSupport.java\n@@ -18,7 +18,6 @@ package org.genxdm.bridge.axiom;\n import java.util.HashMap;\n import java.util.Map;\n import java.util.WeakHashMap;\n-\n import org.apache.axiom.om.OMAttribute;\n import org.apache.axiom.om.OMComment;\n import org.apache.axiom.om.OMContainer;\n@@ -33,277 +32,279 @@ import org.genxdm.NodeKind;\n /**\n  * A bunch of helper functions for supporting Axiom integration.\n  */\n+\n final public class AxiomSupport\n {\n-\tpublic static OMAttribute dynamicDowncastAttribute(final Object node)\n-\t{\n-\t\tif (node instanceof OMAttribute)\n-\t\t{\n-\t\t\treturn staticDowncastAttribute(node);\n-\t\t}\n-\t\telse\n-\t\t{\n-\t\t\treturn null;\n-\t\t}\n-\t}\n+    public static OMAttribute dynamicDowncastAttribute(final Object node)\n+    {\n+        if (node instanceof OMAttribute)\n+        {\n+            return staticDowncastAttribute(node);\n+        }\n+        else\n+        {\n+            return null;\n+        }\n+    }\n+\n+    public static OMComment dynamicDowncastComment(final Object node)\n+    {\n+        if (node instanceof OMComment)\n+        {\n+            return staticDowncastComment(node);\n+        }\n+        else\n+        {\n+            return null;\n+        }\n+    }\n+\n+    public static OMContainer dynamicDowncastContainer(final Object node)\n+    {\n+        if (node instanceof OMContainer)\n+        {\n+            return staticDowncastContainer(node);\n+        }\n+        else\n+        {\n+            return null;\n+        }\n+    }\n+\n+    public static OMDocument dynamicDowncastDocument(final Object node)\n+    {\n+        if (node instanceof OMDocument)\n+        {\n+            return staticDowncastDocument(node);\n+        }\n+        else\n+        {\n+            return null;\n+        }\n+    }\n+\n+    public static OMElement dynamicDowncastElement(final Object node)\n+    {\n+        if (node instanceof OMElement)\n+        {\n+            return staticDowncastElement(node);\n+        }\n+        else\n+        {\n+            return null;\n+        }\n+    }\n \n-\tpublic static OMComment dynamicDowncastComment(final Object node)\n-\t{\n-\t\tif (node instanceof OMComment)\n-\t\t{\n-\t\t\treturn staticDowncastComment(node);\n-\t\t}\n-\t\telse\n-\t\t{\n-\t\t\treturn null;\n-\t\t}\n-\t}\n+    public static FauxNamespace dynamicDowncastFauxNamespace(final Object node)\n+    {\n+        if (node instanceof FauxNamespace)\n+        {\n+            return staticDowncastFauxNamespace(node);\n+        }\n+        else\n+        {\n+            return null;\n+        }\n+    }\n \n-\tpublic static OMContainer dynamicDowncastContainer(final Object node)\n-\t{\n-\t\tif (node instanceof OMContainer)\n-\t\t{\n-\t\t\treturn staticDowncastContainer(node);\n-\t\t}\n-\t\telse\n-\t\t{\n-\t\t\treturn null;\n-\t\t}\n-\t}\n+    public static OMNamespace dynamicDowncastNamespace(final Object node)\n+    {\n+        if (node instanceof OMNamespace)\n+        {\n+            return staticDowncastNamespace(node);\n+        }\n+        else\n+        {\n+            return null;\n+        }\n+    }\n \n-\tpublic static OMDocument dynamicDowncastDocument(final Object node)\n-\t{\n-\t\tif (node instanceof OMDocument)\n-\t\t{\n-\t\t\treturn staticDowncastDocument(node);\n-\t\t}\n-\t\telse\n-\t\t{\n-\t\t\treturn null;\n-\t\t}\n-\t}\n+    public static OMNode dynamicDowncastNode(final Object node)\n+    {\n+        if (node instanceof OMNode)\n+        {\n+            return staticDowncastNode(node);\n+        }\n+        else\n+        {\n+            return null;\n+        }\n+    }\n \n-\tpublic static OMElement dynamicDowncastElement(final Object node)\n-\t{\n-\t\tif (node instanceof OMElement)\n-\t\t{\n-\t\t\treturn staticDowncastElement(node);\n-\t\t}\n-\t\telse\n-\t\t{\n-\t\t\treturn null;\n-\t\t}\n-\t}\n+    public static OMProcessingInstruction dynamicDowncastProcessingInstruction(final Object node)\n+    {\n+        if (node instanceof OMProcessingInstruction)\n+        {\n+            return staticDowncastProcessingInstruction(node);\n+        }\n+        else\n+        {\n+            return null;\n+        }\n+    }\n \n-\tpublic static FauxNamespace dynamicDowncastFauxNamespace(final Object node)\n-\t{\n-\t\tif (node instanceof FauxNamespace)\n-\t\t{\n-\t\t\treturn staticDowncastFauxNamespace(node);\n-\t\t}\n-\t\telse\n-\t\t{\n-\t\t\treturn null;\n-\t\t}\n-\t}\n+    public static OMText dynamicDowncastText(final Object node)\n+    {\n+        if (node instanceof OMText)\n+        {\n+            return staticDowncastText(node);\n+        }\n+        else\n+        {\n+            return null;\n+        }\n+    }\n \n-\tpublic static OMNamespace dynamicDowncastNamespace(final Object node)\n-\t{\n-\t\tif (node instanceof OMNamespace)\n-\t\t{\n-\t\t\treturn staticDowncastNamespace(node);\n-\t\t}\n-\t\telse\n-\t\t{\n-\t\t\treturn null;\n-\t\t}\n-\t}\n+    public static NodeKind getNodeKind(final Object origin)\n+    {\n+        if (null != dynamicDowncastElement(origin))\n+        {\n+            return NodeKind.ELEMENT;\n+        }\n+        if (null != dynamicDowncastText(origin))\n+        {\n+            return NodeKind.TEXT;\n+        }\n+        if (null != dynamicDowncastAttribute(origin))\n+        {\n+            return NodeKind.ATTRIBUTE;\n+        }\n+        if (null != dynamicDowncastNamespace(origin))\n+        {\n+            return NodeKind.NAMESPACE;\n+        }\n+        if (null != dynamicDowncastDocument(origin))\n+        {\n+            return NodeKind.DOCUMENT;\n+        }\n+        if (null != dynamicDowncastProcessingInstruction(origin))\n+        {\n+            return NodeKind.PROCESSING_INSTRUCTION;\n+        }\n+        if (null != dynamicDowncastComment(origin))\n+        {\n+            return NodeKind.COMMENT;\n+        }\n+        return null;\n+    }\n \n-\tpublic static OMNode dynamicDowncastNode(final Object node)\n-\t{\n-\t\tif (node instanceof OMNode)\n-\t\t{\n-\t\t\treturn staticDowncastNode(node);\n-\t\t}\n-\t\telse\n-\t\t{\n-\t\t\treturn null;\n-\t\t}\n-\t}\n+    public static OMContainer getParent(final Object origin)\n+    {\n+        // Some work required here...\n+        {\n+            final OMElement element = dynamicDowncastElement(origin);\n+            if (null != element)\n+            {\n+                return element.getParent();\n+            }\n+        }\n+        {\n+            final OMText text = dynamicDowncastText(origin);\n+            if (null != text)\n+            {\n+                return text.getParent();\n+            }\n+        }\n+        {\n+            final FauxNamespace namespace = dynamicDowncastFauxNamespace(origin);\n+            if (null != namespace)\n+            {\n+                return namespace.getParent();\n+            }\n+        }\n+        // We have to check for document first because some implementations\n+        // implement OMNode but don't support getParent.\n \n-\tpublic static OMProcessingInstruction dynamicDowncastProcessingInstruction(final Object node)\n-\t{\n-\t\tif (node instanceof OMProcessingInstruction)\n-\t\t{\n-\t\t\treturn staticDowncastProcessingInstruction(node);\n-\t\t}\n-\t\telse\n-\t\t{\n-\t\t\treturn null;\n-\t\t}\n-\t}\n+        final OMDocument document = dynamicDowncastDocument(origin);\n+        if (null != document)\n+        {\n+            return null;\n+        }\n \n-\tpublic static OMText dynamicDowncastText(final Object node)\n-\t{\n-\t\tif (node instanceof OMText)\n-\t\t{\n-\t\t\treturn staticDowncastText(node);\n-\t\t}\n-\t\telse\n-\t\t{\n-\t\t\treturn null;\n-\t\t}\n-\t}\n+        final OMNode node = dynamicDowncastNode(origin);\n+        if (null != node)\n+        {\n+            return node.getParent();\n+        }\n+        else\n+        {\n+            final OMAttribute attribute = dynamicDowncastAttribute(origin);\n+            if (null != attribute)\n+            {\n+                return attribute.getOwner();\n+            }\n+            else\n+            {\n+                return null;\n+            }\n+        }\n+    }\n \n-\tpublic static NodeKind getNodeKind(final Object origin)\n-\t{\n-\t\tif (null != dynamicDowncastElement(origin))\n-\t\t{\n-\t\t\treturn NodeKind.ELEMENT;\n-\t\t}\n-\t\tif (null != dynamicDowncastText(origin))\n-\t\t{\n-\t\t\treturn NodeKind.TEXT;\n-\t\t}\n-\t\tif (null != dynamicDowncastAttribute(origin))\n-\t\t{\n-\t\t\treturn NodeKind.ATTRIBUTE;\n-\t\t}\n-\t\tif (null != dynamicDowncastNamespace(origin))\n-\t\t{\n-\t\t\treturn NodeKind.NAMESPACE;\n-\t\t}\n-\t\tif (null != dynamicDowncastDocument(origin))\n-\t\t{\n-\t\t\treturn NodeKind.DOCUMENT;\n-\t\t}\n-\t\tif (null != dynamicDowncastProcessingInstruction(origin))\n-\t\t{\n-\t\t\treturn NodeKind.PROCESSING_INSTRUCTION;\n-\t\t}\n-\t\tif (null != dynamicDowncastComment(origin))\n-\t\t{\n-\t\t\treturn NodeKind.COMMENT;\n-\t\t}\n-\t\treturn null;\n-\t}\n+    public static OMAttribute staticDowncastAttribute(final Object node)\n+    {\n+        return (OMAttribute)node;\n+    }\n \n-\tpublic static OMContainer getParent(final Object origin)\n-\t{\n-\t\t// Some work required here...\n-\t\t{\n-\t\t\tfinal OMElement element = dynamicDowncastElement(origin);\n-\t\t\tif (null != element)\n-\t\t\t{\n-\t\t\t\treturn element.getParent();\n-\t\t\t}\n-\t\t}\n-\t\t{\n-\t\t\tfinal OMText text = dynamicDowncastText(origin);\n-\t\t\tif (null != text)\n-\t\t\t{\n-\t\t\t\treturn text.getParent();\n-\t\t\t}\n-\t\t}\n-\t\t{\n-\t\t\tfinal FauxNamespace namespace = dynamicDowncastFauxNamespace(origin);\n-\t\t\tif (null != namespace)\n-\t\t\t{\n-\t\t\t\treturn namespace.getParent();\n-\t\t\t}\n-\t\t}\n-\t\t// We have to check for document first because some implementations\n-\t\t// implement OMNode but don't support getParent.\n-\t\tfinal OMDocument document = dynamicDowncastDocument(origin);\n-\t\tif (null != document)\n-\t\t{\n-\t\t\treturn null;\n-\t\t}\n+    public static OMComment staticDowncastComment(final Object node)\n+    {\n+        return (OMComment)node;\n+    }\n \n-\t\tfinal OMNode node = dynamicDowncastNode(origin);\n-\t\tif (null != node)\n-\t\t{\n-\t\t\treturn node.getParent();\n-\t\t}\n-\t\telse\n-\t\t{\n-\t\t\tfinal OMAttribute attribute = dynamicDowncastAttribute(origin);\n-\t\t\tif (null != attribute)\n-\t\t\t{\n-\t\t\t\treturn attribute.getOwner();\n-\t\t\t}\n-\t\t\telse\n-\t\t\t{\n-\t\t\t\treturn null;\n-\t\t\t}\n-\t\t}\n-\t}\n+    public static OMContainer staticDowncastContainer(final Object node)\n+    {\n+        return (OMContainer)node;\n+    }\n \n-\tpublic static OMAttribute staticDowncastAttribute(final Object node)\n-\t{\n-\t\treturn (OMAttribute)node;\n-\t}\n+    public static OMDocument staticDowncastDocument(final Object node)\n+    {\n+        return (OMDocument)node;\n+    }\n \n-\tpublic static OMComment staticDowncastComment(final Object node)\n-\t{\n-\t\treturn (OMComment)node;\n-\t}\n+    public static OMElement staticDowncastElement(final Object node)\n+    {\n+        return (OMElement)node;\n+    }\n \n-\tpublic static OMContainer staticDowncastContainer(final Object node)\n-\t{\n-\t\treturn (OMContainer)node;\n-\t}\n+    public static FauxNamespace staticDowncastFauxNamespace(final Object node)\n+    {\n+        return (FauxNamespace)node;\n+    }\n \n-\tpublic static OMDocument staticDowncastDocument(final Object node)\n-\t{\n-\t\treturn (OMDocument)node;\n-\t}\n+    public static OMNamespace staticDowncastNamespace(final Object node)\n+    {\n+        return (OMNamespace)node;\n+    }\n \n-\tpublic static OMElement staticDowncastElement(final Object node)\n-\t{\n-\t\treturn (OMElement)node;\n-\t}\n+    public static OMNode staticDowncastNode(final Object node)\n+    {\n+        return (OMNode)node;\n+    }\n \n-\tpublic static FauxNamespace staticDowncastFauxNamespace(final Object node)\n-\t{\n-\t\treturn (FauxNamespace)node;\n-\t}\n+    public static OMProcessingInstruction staticDowncastProcessingInstruction(final Object node)\n+    {\n+        return (OMProcessingInstruction)node;\n+    }\n \n-\tpublic static OMNamespace staticDowncastNamespace(final Object node)\n-\t{\n-\t\treturn (OMNamespace)node;\n-\t}\n+    public static OMText staticDowncastText(final Object node)\n+    {\n+        return (OMText)node;\n+    }\n \n-\tpublic static OMNode staticDowncastNode(final Object node)\n-\t{\n-\t\treturn (OMNode)node;\n-\t}\n+    public static Map<String, OMElement> getIdMap(OMDocument document)\n+    {\n+        HashMap<String, OMElement> map = idMaps.get(document);\n+        if (map == null)\n+        {\n+            map = new HashMap<String, OMElement>();\n+            addIdMap(document, map);\n+        }\n+        return map;\n+    }\n \n-\tpublic static OMProcessingInstruction staticDowncastProcessingInstruction(final Object node)\n-\t{\n-\t\treturn (OMProcessingInstruction)node;\n-\t}\n+    public static void addIdMap(OMDocument document, HashMap<String, OMElement> map)\n+    {\n+        idMaps.put(document, map);\n+    }\n \n-\tpublic static OMText staticDowncastText(final Object node)\n-\t{\n-\t\treturn (OMText)node;\n-\t}\n-\t\n-\tpublic static Map<String, OMElement> getIdMap(OMDocument document)\n-\t{\n-\t    HashMap<String, OMElement> map = idMaps.get(document);\n-\t    if (map == null)\n-\t    {\n-\t        map = new HashMap<String, OMElement>();\n-\t        addIdMap(document, map);\n-\t    }\n-\t    return map;\n-\t}\n-\t\n-\tpublic static void addIdMap(OMDocument document, HashMap<String, OMElement> map)\n-\t{\n-\t    idMaps.put(document, map);\n-\t}\n-\t\n-\tstatic final Map<OMDocument, HashMap<String, OMElement>> idMaps = new WeakHashMap<OMDocument, HashMap<String, OMElement>>();\n-}\n+    static final Map<OMDocument, HashMap<String, OMElement>> idMaps = new WeakHashMap<OMDocument, HashMap<String, OMElement>>();\n+}\n\\ No newline at end of file\n",
            "diff_size": 349
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "39",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/198/AxiomSupport.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler_random/198/AxiomSupport.java\nindex 7265f857346..ac4d7a32227 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/198/AxiomSupport.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler_random/198/AxiomSupport.java\n@@ -35,7 +35,7 @@ import org.genxdm.NodeKind;\n  */\n final public class AxiomSupport\n {\n-\tpublic static OMAttribute dynamicDowncastAttribute(final Object node)\n+public static OMAttribute dynamicDowncastAttribute(final Object node)\n \t{\n \t\tif (node instanceof OMAttribute)\n \t\t{\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "39",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/198/AxiomSupport.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler_three_grams/198/AxiomSupport.java\nindex 7265f857346..12ba8a5b976 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/198/AxiomSupport.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler_three_grams/198/AxiomSupport.java\n@@ -35,7 +35,7 @@ import org.genxdm.NodeKind;\n  */\n final public class AxiomSupport\n {\n-\tpublic static OMAttribute dynamicDowncastAttribute(final Object node)\n+    public static OMAttribute dynamicDowncastAttribute(final Object node)\n \t{\n \t\tif (node instanceof OMAttribute)\n \t\t{\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "intellij",
        "codebuff"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ]
}
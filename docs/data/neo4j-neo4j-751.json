{
    "project_name": "neo4j-neo4j",
    "error_id": "751",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "27",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "27",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "33",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "33",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "81",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "166",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "166",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "176",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "176",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "186",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "186",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "194",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "194",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "202",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "202",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "208",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "208",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "215",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "215",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "225",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "225",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "235",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "235",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "245",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "245",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "255",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "255",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "265",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "265",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "275",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "275",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "285",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "285",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "294",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "294",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "304",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "304",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "314",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "314",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "324",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "324",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "330",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "330",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "340",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "340",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "348",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "348",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "355",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "355",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "363",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "363",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "371",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "371",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/751/ExpressionToString.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/751/ExpressionToString.java\nindex a41d225060c..9b20e6e79f5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/751/ExpressionToString.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/751/ExpressionToString.java\n@@ -17,361 +17,361 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.codegen;\n \n class ExpressionToString implements ExpressionVisitor\n {\n     private final StringBuilder result;\n \n-    ExpressionToString( StringBuilder result )\n+    ExpressionToString(StringBuilder result)\n     {\n         this.result = result;\n     }\n \n     @Override\n-    public void invoke( Expression target, MethodReference method, Expression[] arguments )\n+    public void invoke(Expression target, MethodReference method, Expression[] arguments)\n     {\n-        result.append( \"invoke{target=\" );\n-        target.accept( this );\n-        result.append( \", method=\" );\n-        method.writeTo( result );\n-        result.append( \"}(\" );\n+        result.append(\"invoke{target=\");\n+        target.accept(this);\n+        result.append(\", method=\");\n+        method.writeTo(result);\n+        result.append(\"}(\");\n         String sep = \"\";\n-        for ( Expression argument : arguments )\n+        for (Expression argument : arguments)\n         {\n-            result.append( sep );\n-            argument.accept( this );\n+            result.append(sep);\n+            argument.accept(this);\n             sep = \", \";\n         }\n-        result.append( ')' );\n+        result.append(')');\n     }\n \n     @Override\n-    public void invoke( MethodReference method, Expression[] arguments )\n+    public void invoke(MethodReference method, Expression[] arguments)\n     {\n-        result.append( \"invoke{method=\" );\n-        method.writeTo( result );\n-        result.append( \"}(\" );\n+        result.append(\"invoke{method=\");\n+        method.writeTo(result);\n+        result.append(\"}(\");\n         String sep = \"\";\n-        for ( Expression argument : arguments )\n+        for (Expression argument : arguments)\n         {\n-            result.append( sep );\n-            argument.accept( this );\n+            result.append(sep);\n+            argument.accept(this);\n             sep = \", \";\n         }\n-        result.append( ')' );\n+        result.append(')');\n     }\n \n     @Override\n-    public void load( LocalVariable variable )\n+    public void load(LocalVariable variable)\n     {\n-        result.append( \"load{type=\" );\n-        if ( variable.type() == null )\n+        result.append(\"load{type=\");\n+        if (variable.type() == null)\n         {\n-            result.append( \"null\" );\n-        }\n-        else\n+            result.append(\"null\");\n+        } else\n         {\n-            variable.type().writeTo( result );\n+            variable.type().writeTo(result);\n         }\n-        result.append( \", name=\" ).append( variable.name() ).append( '}' );\n+        result.append(\", name=\").append(variable.name()).append('}');\n     }\n \n     @Override\n-    public void arrayLoad( Expression array, Expression index )\n+    public void arrayLoad(Expression array, Expression index)\n     {\n-        result.append( \"loadArray{array=\" );\n-        array.accept( this );\n-        result.append( \", index=\" );\n-        index.accept( this );\n-        result.append( '}' );\n+        result.append(\"loadArray{array=\");\n+        array.accept(this);\n+        result.append(\", index=\");\n+        index.accept(this);\n+        result.append('}');\n     }\n \n     @Override\n-    public void arraySet( Expression array, Expression index, Expression value )\n+    public void arraySet(Expression array, Expression index, Expression value)\n     {\n-        result.append( \"setArray{array=\" );\n-        array.accept( this );\n-        result.append( \", index=\" );\n-        index.accept( this );\n-        result.append( \", value=\" );\n-        value.accept( this );\n-        result.append( '}' );\n+        result.append(\"setArray{array=\");\n+        array.accept(this);\n+        result.append(\", index=\");\n+        index.accept(this);\n+        result.append(\", value=\");\n+        value.accept(this);\n+        result.append('}');\n     }\n \n     @Override\n-    public void arrayLength( Expression array )\n+    public void arrayLength(Expression array)\n     {\n-        result.append( \"length{array=\" );\n-        array.accept( this );\n-        result.append( '}' );\n+        result.append(\"length{array=\");\n+        array.accept(this);\n+        result.append('}');\n     }\n \n     @Override\n-    public void getField( Expression target, FieldReference field )\n+    public void getField(Expression target, FieldReference field)\n     {\n-        result.append( \"get{target=\" );\n-        target.accept( this );\n-        result.append( \", field=\" ).append( field.name() ).append( '}' );\n+        result.append(\"get{target=\");\n+        target.accept(this);\n+        result.append(\", field=\").append(field.name()).append('}');\n     }\n \n     @Override\n-    public void constant( Object value )\n+    public void constant(Object value)\n     {\n-        result.append( \"constant(\" ).append( value ).append( ')' );\n+        result.append(\"constant(\").append(value).append(')');\n     }\n \n     @Override\n-    public void getStatic( FieldReference field )\n+    public void getStatic(FieldReference field)\n     {\n-        result.append( \"get{class=\" ).append( field.owner() );\n-        result.append( \", field=\" ).append( field.name() ).append( '}' );\n+        result.append(\"get{class=\").append(field.owner());\n+        result.append(\", field=\").append(field.name()).append('}');\n     }\n \n     @Override\n-    public void loadThis( String sourceName )\n+    public void loadThis(String sourceName)\n     {\n-        result.append( \"load{\" ).append( sourceName ).append( '}' );\n+        result.append(\"load{\").append(sourceName).append('}');\n     }\n \n     @Override\n-    public void newInstance( TypeReference type )\n+    public void newInstance(TypeReference type)\n     {\n-        result.append( \"new{type=\" );\n-        type.writeTo( result );\n-        result.append( '}' );\n+        result.append(\"new{type=\");\n+        type.writeTo(result);\n+        result.append('}');\n     }\n \n     @Override\n-    public void not( Expression expression )\n+    public void not(Expression expression)\n     {\n-        result.append( \"not(\" );\n-        expression.accept( this );\n-        result.append( ')' );\n+        result.append(\"not(\");\n+        expression.accept(this);\n+        result.append(')');\n     }\n \n     @Override\n-    public void ternary( Expression test, Expression onTrue, Expression onFalse )\n+    public void ternary(Expression test, Expression onTrue, Expression onFalse)\n     {\n-        result.append( \"ternary{test=\" );\n-        test.accept( this );\n-        result.append( \", onTrue=\" );\n-        onTrue.accept( this );\n-        result.append( \", onFalse=\" );\n-        onFalse.accept( this );\n-        result.append( '}' );\n+        result.append(\"ternary{test=\");\n+        test.accept(this);\n+        result.append(\", onTrue=\");\n+        onTrue.accept(this);\n+        result.append(\", onFalse=\");\n+        onFalse.accept(this);\n+        result.append('}');\n     }\n \n     @Override\n-    public void equal( Expression lhs, Expression rhs )\n+    public void equal(Expression lhs, Expression rhs)\n     {\n-        result.append( \"equal(\" );\n-        lhs.accept( this );\n-        result.append( \", \" );\n-        rhs.accept( this );\n-        result.append( ')' );\n+        result.append(\"equal(\");\n+        lhs.accept(this);\n+        result.append(\", \");\n+        rhs.accept(this);\n+        result.append(')');\n     }\n \n     @Override\n-    public void notEqual( Expression lhs, Expression rhs )\n+    public void notEqual(Expression lhs, Expression rhs)\n     {\n-        result.append( \"notEqual(\" );\n-        lhs.accept( this );\n-        result.append( \", \" );\n-        rhs.accept( this );\n-        result.append( ')' );\n+        result.append(\"notEqual(\");\n+        lhs.accept(this);\n+        result.append(\", \");\n+        rhs.accept(this);\n+        result.append(')');\n     }\n \n     @Override\n-    public void isNull( Expression expression )\n+    public void isNull(Expression expression)\n     {\n-        result.append( \"isNull(\" );\n-        expression.accept( this );\n-        result.append( ')' );\n+        result.append(\"isNull(\");\n+        expression.accept(this);\n+        result.append(')');\n     }\n \n     @Override\n-    public void notNull( Expression expression )\n+    public void notNull(Expression expression)\n     {\n-        result.append( \"notNull(\" );\n-        expression.accept( this );\n-        result.append( ')' );\n+        result.append(\"notNull(\");\n+        expression.accept(this);\n+        result.append(')');\n     }\n \n     @Override\n-    public void or( Expression... expressions )\n+    public void or(Expression... expressions)\n     {\n-        boolOp( \"or(\", expressions );\n+        boolOp(\"or(\", expressions);\n     }\n \n     @Override\n-    public void and( Expression... expressions )\n+    public void and(Expression... expressions)\n     {\n-        boolOp( \"and(\", expressions );\n+        boolOp(\"and(\", expressions);\n     }\n \n-    private void boolOp( String sep, Expression[] expressions )\n+    private void boolOp(String sep, Expression[] expressions)\n     {\n-        for ( Expression expression : expressions )\n+        for (Expression expression : expressions)\n         {\n-            result.append( sep );\n-            expression.accept( this );\n+            result.append(sep);\n+            expression.accept(this);\n             sep = \", \";\n         }\n-        result.append( ')' );\n+        result.append(')');\n     }\n \n     @Override\n-    public void add( Expression lhs, Expression rhs )\n+    public void add(Expression lhs, Expression rhs)\n     {\n-        result.append( \"add(\" );\n-        lhs.accept( this );\n-        result.append( \" + \" );\n-        rhs.accept( this );\n-        result.append( ')' );\n+        result.append(\"add(\");\n+        lhs.accept(this);\n+        result.append(\" + \");\n+        rhs.accept(this);\n+        result.append(')');\n     }\n \n     @Override\n-    public void gt( Expression lhs, Expression rhs )\n+    public void gt(Expression lhs, Expression rhs)\n     {\n-        result.append( \"gt(\" );\n-        lhs.accept( this );\n-        result.append( \" > \" );\n-        rhs.accept( this );\n-        result.append( ')' );\n+        result.append(\"gt(\");\n+        lhs.accept(this);\n+        result.append(\" > \");\n+        rhs.accept(this);\n+        result.append(')');\n     }\n \n     @Override\n-    public void gte( Expression lhs, Expression rhs )\n+    public void gte(Expression lhs, Expression rhs)\n     {\n-        result.append( \"gt(\" );\n-        lhs.accept( this );\n-        result.append( \" >= \" );\n-        rhs.accept( this );\n-        result.append( ')' );\n+        result.append(\"gt(\");\n+        lhs.accept(this);\n+        result.append(\" >= \");\n+        rhs.accept(this);\n+        result.append(')');\n     }\n \n     @Override\n-    public void lt( Expression lhs, Expression rhs )\n+    public void lt(Expression lhs, Expression rhs)\n     {\n-        result.append( \"lt(\" );\n-        lhs.accept( this );\n-        result.append( \" < \" );\n-        rhs.accept( this );\n-        result.append( ')' );\n+        result.append(\"lt(\");\n+        lhs.accept(this);\n+        result.append(\" < \");\n+        rhs.accept(this);\n+        result.append(')');\n     }\n \n     @Override\n-    public void lte( Expression lhs, Expression rhs )\n+    public void lte(Expression lhs, Expression rhs)\n     {\n-        result.append( \"gt(\" );\n-        lhs.accept( this );\n-        result.append( \" <= \" );\n-        rhs.accept( this );\n-        result.append( ')' );\n+        result.append(\"gt(\");\n+        lhs.accept(this);\n+        result.append(\" <= \");\n+        rhs.accept(this);\n+        result.append(')');\n     }\n \n     @Override\n-    public void subtract( Expression lhs, Expression rhs )\n+    public void subtract(Expression lhs, Expression rhs)\n     {\n-        result.append( \"sub(\" );\n-        lhs.accept( this );\n-        result.append( \" - \" );\n-        rhs.accept( this );\n-        result.append( ')' );\n+        result.append(\"sub(\");\n+        lhs.accept(this);\n+        result.append(\" - \");\n+        rhs.accept(this);\n+        result.append(')');\n     }\n \n     @Override\n-    public void multiply( Expression lhs, Expression rhs )\n+    public void multiply(Expression lhs, Expression rhs)\n     {\n-        result.append( \"mul(\" );\n-        lhs.accept( this );\n-        result.append( \" * \" );\n-        rhs.accept( this );\n-        result.append( ')' );\n+        result.append(\"mul(\");\n+        lhs.accept(this);\n+        result.append(\" * \");\n+        rhs.accept(this);\n+        result.append(')');\n     }\n \n-    private void div( Expression lhs, Expression rhs )\n+    private void div(Expression lhs, Expression rhs)\n     {\n-        result.append( \"div(\" );\n-        lhs.accept( this );\n-        result.append( \" / \" );\n-        rhs.accept( this );\n-        result.append( ')' );\n+        result.append(\"div(\");\n+        lhs.accept(this);\n+        result.append(\" / \");\n+        rhs.accept(this);\n+        result.append(')');\n     }\n \n     @Override\n-    public void cast( TypeReference type, Expression expression )\n+    public void cast(TypeReference type, Expression expression)\n     {\n-        result.append( \"cast{type=\" );\n-        type.writeTo( result );\n-        result.append( \", expression=\" );\n-        expression.accept( this );\n-        result.append( '}' );\n+        result.append(\"cast{type=\");\n+        type.writeTo(result);\n+        result.append(\", expression=\");\n+        expression.accept(this);\n+        result.append('}');\n     }\n \n     @Override\n-    public void instanceOf( TypeReference type, Expression expression )\n+    public void instanceOf(TypeReference type, Expression expression)\n     {\n-        result.append( \"instanceOf{type=\" );\n-        type.writeTo( result );\n-        result.append( \", expression=\" );\n-        expression.accept( this );\n-        result.append( '}' );\n+        result.append(\"instanceOf{type=\");\n+        type.writeTo(result);\n+        result.append(\", expression=\");\n+        expression.accept(this);\n+        result.append('}');\n     }\n \n     @Override\n-    public void newInitializedArray( TypeReference type, Expression... constants )\n+    public void newInitializedArray(TypeReference type, Expression... constants)\n     {\n-        result.append( \"newArray{type=\" );\n-        type.writeTo( result );\n-        result.append( \", constants=\" );\n+        result.append(\"newArray{type=\");\n+        type.writeTo(result);\n+        result.append(\", constants=\");\n         String sep = \"\";\n-        for ( Expression constant : constants )\n+        for (Expression constant : constants)\n         {\n-            result.append( sep );\n-            constant.accept( this );\n+            result.append(sep);\n+            constant.accept(this);\n             sep = \", \";\n         }\n-        result.append( '}' );\n+        result.append('}');\n     }\n \n     @Override\n-    public void newArray( TypeReference type, int size )\n+    public void newArray(TypeReference type, int size)\n     {\n-        result.append( \"newArray{type=\" );\n-        type.writeTo( result );\n-        result.append( \", size=\" ).append( size ).append( '}' );\n+        result.append(\"newArray{type=\");\n+        type.writeTo(result);\n+        result.append(\", size=\").append(size).append('}');\n     }\n \n     @Override\n-    public void longToDouble( Expression expression )\n+    public void longToDouble(Expression expression)\n     {\n-        result.append( \"(double)\" );\n-        expression.accept( this );\n+        result.append(\"(double)\");\n+        expression.accept(this);\n     }\n \n     @Override\n-    public void pop( Expression expression )\n+    public void pop(Expression expression)\n     {\n-        result.append( \"pop(\" );\n-        expression.accept( this );\n-        result.append( ')' );\n+        result.append(\"pop(\");\n+        expression.accept(this);\n+        result.append(')');\n     }\n \n     @Override\n-    public void box( Expression expression )\n+    public void box(Expression expression)\n     {\n-        result.append( \"box(\" );\n-        expression.accept( this );\n-        result.append( ')' );\n+        result.append(\"box(\");\n+        expression.accept(this);\n+        result.append(')');\n     }\n \n     @Override\n-    public void unbox( Expression expression )\n+    public void unbox(Expression expression)\n     {\n-        result.append( \"unbox(\" );\n-        expression.accept( this );\n-        result.append( ')' );\n+        result.append(\"unbox(\");\n+        expression.accept(this);\n+        result.append(')');\n     }\n }\n",
            "diff_size": 189
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/751/ExpressionToString.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/751/ExpressionToString.java\nindex a41d225060c..b012816fa0b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/751/ExpressionToString.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/751/ExpressionToString.java\n@@ -374,4 +374,4 @@ class ExpressionToString implements ExpressionVisitor\n         expression.accept( this );\n         result.append( ')' );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
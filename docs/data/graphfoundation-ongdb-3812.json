{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3812",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "46",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3812/Deserialization.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3812/Deserialization.java\nindex 2d45fdacf65..492b397fbc3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3812/Deserialization.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3812/Deserialization.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.unsafe.impl.batchimport.input.csv;\n \n /**\n@@ -31,27 +32,27 @@ package org.neo4j.unsafe.impl.batchimport.input.csv;\n  */\n public interface Deserialization<ENTITY>\n {\n-    /**\n-     * Called before any other call. Introduced to reduce complexity in error handling where too\n-     * much happened in constructors and so resources weren't even assigned when error struck and\n-     * cleanup would be tricky and involve duplication.\n-     */\n-    void initialize();\n+  /**\n+   * Called before any other call. Introduced to reduce complexity in error handling where too\n+   * much happened in constructors and so resources weren't even assigned when error struck and\n+   * cleanup would be tricky and involve duplication.\n+   */\n+  void initialize();\n \n-    /**\n-     * Handles one value of a type described by the {@code entry}. One or more values will be able to\n-     * {@link #materialize()} into an entity later on.\n-     */\n-    void handle( Header.Entry entry, Object value );\n+  /**\n+   * Handles one value of a type described by the {@code entry}. One or more values will be able to\n+   * {@link #materialize()} into an entity later on.\n+   */\n+  void handle(Header.Entry entry, Object value);\n \n-    /**\n-     * Takes values received in {@link #handle(org.neo4j.unsafe.impl.batchimport.input.csv.Header.Entry, Object)}\n-     * and materializes an entity from them.\n-     */\n-    ENTITY materialize();\n+  /**\n+   * Takes values received in {@link #handle(org.neo4j.unsafe.impl.batchimport.input.csv.Header.Entry, Object)}\n+   * and materializes an entity from them.\n+   */\n+  ENTITY materialize();\n \n-    /**\n-     * Clears the mutable state, preparing for the next entity.\n-     */\n-    void clear();\n+  /**\n+   * Clears the mutable state, preparing for the next entity.\n+   */\n+  void clear();\n }\n",
            "diff_size": 21
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3812/Deserialization.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3812/Deserialization.java\nindex 2d45fdacf65..d65f9ed2a39 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3812/Deserialization.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3812/Deserialization.java\n@@ -54,4 +54,4 @@ public interface Deserialization<ENTITY>\n      * Clears the mutable state, preparing for the next entity.\n      */\n     void clear();\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "47",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 181).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 359).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "58",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 442).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3812/Deserialization.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/3812/Deserialization.java\nindex 2d45fdacf65..31023e8e074 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3812/Deserialization.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/3812/Deserialization.java\n@@ -29,6 +29,7 @@ package org.neo4j.unsafe.impl.batchimport.input.csv;\n  * <li>{@link #clear()} to prepare for the next entity</li>\n  * </ol>\n  */\n+\n public interface Deserialization<ENTITY>\n {\n     /**\n@@ -36,22 +37,23 @@ public interface Deserialization<ENTITY>\n      * much happened in constructors and so resources weren't even assigned when error struck and\n      * cleanup would be tricky and involve duplication.\n      */\n-    void initialize();\n+    void initialize()\n+    ;\n \n     /**\n      * Handles one value of a type described by the {@code entry}. One or more values will be able to\n      * {@link #materialize()} into an entity later on.\n-     */\n-    void handle( Header.Entry entry, Object value );\n+     */ void handle( Header.Entry entry, Object value )\n+                                                                                                                                                                                    ;\n \n     /**\n      * Takes values received in {@link #handle(org.neo4j.unsafe.impl.batchimport.input.csv.Header.Entry, Object)}\n      * and materializes an entity from them.\n-     */\n-    ENTITY materialize();\n+     */ ENTITY materialize()\n+                                                                                                                                                                                                                                                                                                                                                                      ;\n \n     /**\n      * Clears the mutable state, preparing for the next entity.\n-     */\n-    void clear();\n-}\n+     */ void clear()\n+                                                                                                                                                                                                                                                                                                                                                                                                                                                         ;\n+}\n\\ No newline at end of file\n",
            "diff_size": 10
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "googleapis-google-cloud-java",
    "error_id": "37",
    "information": {
        "errors": [
            {
                "line": "38",
                "severity": "warning",
                "message": "'member def modifier' has incorrect indentation level 0, expected level should be 2.",
                "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
            }
        ]
    },
    "source_code": "public class SerializationTest {\n\nprivate static final ResourceManager RESOURCE_MANAGER =\n      ResourceManagerOptions.defaultInstance().service();\n  private static final ProjectInfo PARTIAL_PROJECT_INFO = ProjectInfo.builder(\"id1\").build();\n  private static final ProjectInfo FULL_PROJECT_INFO = ProjectInfo.builder(\"id\")",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/37/SerializationTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/styler/37/SerializationTest.java\nindex 497de880254..889561c4653 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/37/SerializationTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/styler/37/SerializationTest.java\n@@ -33,10 +33,8 @@ import java.io.ObjectOutputStream;\n import java.io.Serializable;\n import java.util.Collections;\n \n-public class SerializationTest {\n-\n-private static final ResourceManager RESOURCE_MANAGER =\n-      ResourceManagerOptions.defaultInstance().service();\n+public class SerializationTest { private static final ResourceManager RESOURCE_MANAGER =\n+    ResourceManagerOptions.defaultInstance().service();\n   private static final ProjectInfo PARTIAL_PROJECT_INFO = ProjectInfo.builder(\"id1\").build();\n   private static final ProjectInfo FULL_PROJECT_INFO = ProjectInfo.builder(\"id\")\n       .name(\"name\")\n",
            "diff_size": 4
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/37/SerializationTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/intellij/37/SerializationTest.java\nindex 497de880254..ad283cc744c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/37/SerializationTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/intellij/37/SerializationTest.java\n@@ -35,7 +35,7 @@ import java.util.Collections;\n \n public class SerializationTest {\n \n-private static final ResourceManager RESOURCE_MANAGER =\n+  private static final ResourceManager RESOURCE_MANAGER =\n       ResourceManagerOptions.defaultInstance().service();\n   private static final ProjectInfo PARTIAL_PROJECT_INFO = ProjectInfo.builder(\"id1\").build();\n   private static final ProjectInfo FULL_PROJECT_INFO = ProjectInfo.builder(\"id\")\n@@ -87,7 +87,7 @@ private static final ResourceManager RESOURCE_MANAGER =\n       output.writeObject(obj);\n     }\n     try (ObjectInputStream input =\n-        new ObjectInputStream(new ByteArrayInputStream(bytes.toByteArray()))) {\n+             new ObjectInputStream(new ByteArrayInputStream(bytes.toByteArray()))) {\n       return (T) input.readObject();\n     }\n   }\n",
            "diff_size": 2
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "38",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 109).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "56",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/37/SerializationTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/naturalize/37/SerializationTest.java\nindex 497de880254..857c0803a53 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/37/SerializationTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/naturalize/37/SerializationTest.java\n@@ -35,8 +35,7 @@ import java.util.Collections;\n \n public class SerializationTest {\n \n-private static final ResourceManager RESOURCE_MANAGER =\n-      ResourceManagerOptions.defaultInstance().service();\n+  private static final ResourceManager RESOURCE_MANAGER = ResourceManagerOptions.defaultInstance().service();\n   private static final ProjectInfo PARTIAL_PROJECT_INFO = ProjectInfo.builder(\"id1\").build();\n   private static final ProjectInfo FULL_PROJECT_INFO = ProjectInfo.builder(\"id\")\n       .name(\"name\")\n@@ -54,7 +53,7 @@ private static final ResourceManager RESOURCE_MANAGER =\n   private static final ResourceManager.ProjectListOption PROJECT_LIST_OPTION =\n       ResourceManager.ProjectListOption.filter(\"name:*\");\n \n-  @Test\n+@Test\n   public void testServiceOptions() throws Exception {\n     ResourceManagerOptions options = ResourceManagerOptions.builder().build();\n     ResourceManagerOptions serializedCopy = serializeAndDeserialize(options);\n@@ -91,4 +90,4 @@ private static final ResourceManager RESOURCE_MANAGER =\n       return (T) input.readObject();\n     }\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "37",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 109).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "39",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 218).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "40",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 119).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "41",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 117).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "42",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 152).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "43",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 130).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "50",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 126).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "57",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 134).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/37/SerializationTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/codebuff/37/SerializationTest.java\nindex 497de880254..1c7675c0786 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/37/SerializationTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/codebuff/37/SerializationTest.java\n@@ -22,9 +22,7 @@ import static org.junit.Assert.assertNotSame;\n import com.google.common.collect.ImmutableMap;\n import com.google.gcloud.PageImpl;\n import com.google.gcloud.RetryParams;\n-\n import org.junit.Test;\n-\n import java.io.ByteArrayInputStream;\n import java.io.ByteArrayOutputStream;\n import java.io.IOException;\n@@ -33,44 +31,30 @@ import java.io.ObjectOutputStream;\n import java.io.Serializable;\n import java.util.Collections;\n \n+\n public class SerializationTest {\n \n-private static final ResourceManager RESOURCE_MANAGER =\n-      ResourceManagerOptions.defaultInstance().service();\n+  private static final ResourceManager RESOURCE_MANAGER = ResourceManagerOptions.defaultInstance().service();\n   private static final ProjectInfo PARTIAL_PROJECT_INFO = ProjectInfo.builder(\"id1\").build();\n-  private static final ProjectInfo FULL_PROJECT_INFO = ProjectInfo.builder(\"id\")\n-      .name(\"name\")\n-      .labels(ImmutableMap.of(\"key\", \"value\"))\n-      .projectNumber(123L)\n-      .state(ProjectInfo.State.ACTIVE)\n-      .createTimeMillis(1234L)\n-      .build();\n-  private static final Project PROJECT =\n-      new Project(RESOURCE_MANAGER, new ProjectInfo.BuilderImpl(FULL_PROJECT_INFO));\n-  private static final PageImpl<Project> PAGE_RESULT =\n-      new PageImpl<>(null, \"c\", Collections.singletonList(PROJECT));\n-  private static final ResourceManager.ProjectGetOption PROJECT_GET_OPTION =\n-      ResourceManager.ProjectGetOption.fields(ResourceManager.ProjectField.NAME);\n-  private static final ResourceManager.ProjectListOption PROJECT_LIST_OPTION =\n-      ResourceManager.ProjectListOption.filter(\"name:*\");\n+  private static final ProjectInfo FULL_PROJECT_INFO = ProjectInfo.builder(\"id\").name(\"name\").labels(ImmutableMap.of(\"key\", \"value\")).projectNumber(123L).state(ProjectInfo.State.ACTIVE).createTimeMillis(1234L).build();\n+  private static final Project PROJECT = new Project(RESOURCE_MANAGER, new ProjectInfo.BuilderImpl(FULL_PROJECT_INFO));\n+  private static final PageImpl<Project> PAGE_RESULT = new PageImpl<>(null, \"c\", Collections.singletonList(PROJECT));\n+  private static final ResourceManager.ProjectGetOption PROJECT_GET_OPTION = ResourceManager.ProjectGetOption.fields(ResourceManager.ProjectField.NAME);\n+  private static final ResourceManager.ProjectListOption PROJECT_LIST_OPTION = ResourceManager.ProjectListOption.filter(\"name:*\");\n \n   @Test\n   public void testServiceOptions() throws Exception {\n     ResourceManagerOptions options = ResourceManagerOptions.builder().build();\n     ResourceManagerOptions serializedCopy = serializeAndDeserialize(options);\n     assertEquals(options, serializedCopy);\n-    options = options.toBuilder()\n-        .projectId(\"some-unnecessary-project-ID\")\n-        .retryParams(RetryParams.defaultInstance())\n-        .build();\n+    options = options.toBuilder().projectId(\"some-unnecessary-project-ID\").retryParams(RetryParams.defaultInstance()).build();\n     serializedCopy = serializeAndDeserialize(options);\n     assertEquals(options, serializedCopy);\n   }\n \n   @Test\n   public void testModelAndRequests() throws Exception {\n-    Serializable[] objects = {PARTIAL_PROJECT_INFO, FULL_PROJECT_INFO, PROJECT, PAGE_RESULT,\n-        PROJECT_GET_OPTION, PROJECT_LIST_OPTION};\n+    Serializable[] objects = {PARTIAL_PROJECT_INFO, FULL_PROJECT_INFO, PROJECT, PAGE_RESULT, PROJECT_GET_OPTION, PROJECT_LIST_OPTION};\n     for (Serializable obj : objects) {\n       Object copy = serializeAndDeserialize(obj);\n       assertEquals(obj, obj);\n@@ -83,12 +67,13 @@ private static final ResourceManager RESOURCE_MANAGER =\n   @SuppressWarnings(\"unchecked\")\n   private <T> T serializeAndDeserialize(T obj) throws IOException, ClassNotFoundException {\n     ByteArrayOutputStream bytes = new ByteArrayOutputStream();\n-    try (ObjectOutputStream output = new ObjectOutputStream(bytes)) {\n+    try (ObjectOutputStream output =\n+      new ObjectOutputStream(bytes)) {\n       output.writeObject(obj);\n     }\n     try (ObjectInputStream input =\n-        new ObjectInputStream(new ByteArrayInputStream(bytes.toByteArray()))) {\n+      new ObjectInputStream(new ByteArrayInputStream(bytes.toByteArray()))) {\n       return (T) input.readObject();\n     }\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 30
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/37/SerializationTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/styler_random/37/SerializationTest.java\nindex 497de880254..889561c4653 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/37/SerializationTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/styler_random/37/SerializationTest.java\n@@ -33,10 +33,8 @@ import java.io.ObjectOutputStream;\n import java.io.Serializable;\n import java.util.Collections;\n \n-public class SerializationTest {\n-\n-private static final ResourceManager RESOURCE_MANAGER =\n-      ResourceManagerOptions.defaultInstance().service();\n+public class SerializationTest { private static final ResourceManager RESOURCE_MANAGER =\n+    ResourceManagerOptions.defaultInstance().service();\n   private static final ProjectInfo PARTIAL_PROJECT_INFO = ProjectInfo.builder(\"id1\").build();\n   private static final ProjectInfo FULL_PROJECT_INFO = ProjectInfo.builder(\"id\")\n       .name(\"name\")\n",
            "diff_size": 4
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "39",
                    "severity": "warning",
                    "message": "'ResourceManagerOptions' has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/37/SerializationTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/styler_three_grams/37/SerializationTest.java\nindex 497de880254..86fe037aeca 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/37/SerializationTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/styler_three_grams/37/SerializationTest.java\n@@ -35,8 +35,8 @@ import java.util.Collections;\n \n public class SerializationTest {\n \n-private static final ResourceManager RESOURCE_MANAGER =\n-      ResourceManagerOptions.defaultInstance().service();\n+  private static final ResourceManager RESOURCE_MANAGER =\n+    ResourceManagerOptions.defaultInstance().service();\n   private static final ProjectInfo PARTIAL_PROJECT_INFO = ProjectInfo.builder(\"id1\").build();\n   private static final ProjectInfo FULL_PROJECT_INFO = ProjectInfo.builder(\"id\")\n       .name(\"name\")\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff",
        "styler_three_grams"
    ]
}
{
    "project_name": "CESNET-perun",
    "error_id": "168",
    "information": {
        "errors": [
            {
                "line": "16",
                "severity": "error",
                "message": "Line has trailing spaces.",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "\n\tprotected AttributeValueTransformer valueTransformer;\n\t\n\tAttributeValueExtractor() {\n\t}\n",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CESNET-perun/errored/1/168/AttributeValueExtractor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CESNET-perun/styler/168/AttributeValueExtractor.java\nindex cfd0b898a07..26161658b97 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CESNET-perun/errored/1/168/AttributeValueExtractor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CESNET-perun/styler/168/AttributeValueExtractor.java\n@@ -13,7 +13,7 @@ public abstract class AttributeValueExtractor {\n \tprivate String nameRegexp;\n \n \tprotected AttributeValueTransformer valueTransformer;\n-\t\n+\n \tAttributeValueExtractor() {\n \t}\n \n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CESNET-perun/errored/1/168/AttributeValueExtractor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CESNET-perun/intellij/168/AttributeValueExtractor.java\nindex cfd0b898a07..68397c341f1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CESNET-perun/errored/1/168/AttributeValueExtractor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CESNET-perun/intellij/168/AttributeValueExtractor.java\n@@ -8,58 +8,58 @@ import cz.metacentrum.perun.ldapc.model.AttributeValueTransformer;\n \n public abstract class AttributeValueExtractor {\n \n-\tprivate String namespace;\n-\tprivate String name;\n-\tprivate String nameRegexp;\n+    private String namespace;\n+    private String name;\n+    private String nameRegexp;\n \n-\tprotected AttributeValueTransformer valueTransformer;\n-\t\n-\tAttributeValueExtractor() {\n-\t}\n+    protected AttributeValueTransformer valueTransformer;\n \n-\tpublic String getNamespace() {\n-\t\treturn namespace;\n-\t}\n+    AttributeValueExtractor() {\n+    }\n \n-\tpublic void setNamespace(String namespace) {\n-\t\tthis.namespace = namespace;\n-\t}\n+    public String getNamespace() {\n+        return namespace;\n+    }\n \n-\tpublic String getName() {\n-\t\treturn name;\n-\t}\n+    public void setNamespace(String namespace) {\n+        this.namespace = namespace;\n+    }\n \n-\tpublic void setName(String name) {\n-\t\tthis.name = name;\n-\t}\n+    public String getName() {\n+        return name;\n+    }\n \n-\tpublic String getNameRegexp() {\n-\t\treturn nameRegexp;\n-\t}\n+    public void setName(String name) {\n+        this.name = name;\n+    }\n \n-\tpublic void setNameRegexp(String nameRegexp) {\n-\t\tthis.nameRegexp = nameRegexp;\n-\t}\n+    public String getNameRegexp() {\n+        return nameRegexp;\n+    }\n \n-\tpublic AttributeValueTransformer getValueTransformer() {\n-\t\treturn valueTransformer;\n-\t}\n+    public void setNameRegexp(String nameRegexp) {\n+        this.nameRegexp = nameRegexp;\n+    }\n \n-\tpublic void setValueTransformer(AttributeValueTransformer valueTransformer) {\n-\t\tthis.valueTransformer = valueTransformer;\n-\t}\n+    public AttributeValueTransformer getValueTransformer() {\n+        return valueTransformer;\n+    }\n \n-\tpublic boolean appliesToAttribute(AttributeDefinition attr) {\n-\t\tif(nameRegexp != null && !nameRegexp.isEmpty()) {\n-\t\t\tMatcher matcher = Pattern.compile(nameRegexp).matcher(attr.getName());\n-\t\t\treturn matcher.find();\n-\t\t}\n-\t\tif(!attr.getNamespace().equals(this.namespace)) {\n-\t\t\treturn false;\n-\t\t}\n-\t\tif(name != null && !name.isEmpty()) {\n-\t\t\treturn attr.getBaseFriendlyName().equals(name);\n-\t\t}\n-\t\treturn false;\n-\t}\n+    public void setValueTransformer(AttributeValueTransformer valueTransformer) {\n+        this.valueTransformer = valueTransformer;\n+    }\n+\n+    public boolean appliesToAttribute(AttributeDefinition attr) {\n+        if (nameRegexp != null && !nameRegexp.isEmpty()) {\n+            Matcher matcher = Pattern.compile(nameRegexp).matcher(attr.getName());\n+            return matcher.find();\n+        }\n+        if (!attr.getNamespace().equals(this.namespace)) {\n+            return false;\n+        }\n+        if (name != null && !name.isEmpty()) {\n+            return attr.getBaseFriendlyName().equals(name);\n+        }\n+        return false;\n+    }\n }\n",
            "diff_size": 48
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CESNET-perun/errored/1/168/AttributeValueExtractor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CESNET-perun/naturalize/168/AttributeValueExtractor.java\nindex cfd0b898a07..dc38f85dc82 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CESNET-perun/errored/1/168/AttributeValueExtractor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CESNET-perun/naturalize/168/AttributeValueExtractor.java\n@@ -13,8 +13,7 @@ public abstract class AttributeValueExtractor {\n \tprivate String nameRegexp;\n \n \tprotected AttributeValueTransformer valueTransformer;\n-\t\n-\tAttributeValueExtractor() {\n+AttributeValueExtractor() {\n \t}\n \n \tpublic String getNamespace() {\n@@ -62,4 +61,4 @@ public abstract class AttributeValueExtractor {\n \t\t}\n \t\treturn false;\n \t}\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CESNET-perun/errored/1/168/AttributeValueExtractor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CESNET-perun/codebuff/168/AttributeValueExtractor.java\nindex cfd0b898a07..7e07890bac8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CESNET-perun/errored/1/168/AttributeValueExtractor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CESNET-perun/codebuff/168/AttributeValueExtractor.java\n@@ -2,64 +2,68 @@ package cz.metacentrum.perun.ldapc.model.impl;\n \n import java.util.regex.Matcher;\n import java.util.regex.Pattern;\n-\n import cz.metacentrum.perun.core.api.AttributeDefinition;\n import cz.metacentrum.perun.ldapc.model.AttributeValueTransformer;\n \n+\n public abstract class AttributeValueExtractor {\n \n-\tprivate String namespace;\n-\tprivate String name;\n-\tprivate String nameRegexp;\n-\n-\tprotected AttributeValueTransformer valueTransformer;\n-\t\n-\tAttributeValueExtractor() {\n-\t}\n-\n-\tpublic String getNamespace() {\n-\t\treturn namespace;\n-\t}\n-\n-\tpublic void setNamespace(String namespace) {\n-\t\tthis.namespace = namespace;\n-\t}\n-\n-\tpublic String getName() {\n-\t\treturn name;\n-\t}\n-\n-\tpublic void setName(String name) {\n-\t\tthis.name = name;\n-\t}\n-\n-\tpublic String getNameRegexp() {\n-\t\treturn nameRegexp;\n-\t}\n-\n-\tpublic void setNameRegexp(String nameRegexp) {\n-\t\tthis.nameRegexp = nameRegexp;\n-\t}\n-\n-\tpublic AttributeValueTransformer getValueTransformer() {\n-\t\treturn valueTransformer;\n-\t}\n-\n-\tpublic void setValueTransformer(AttributeValueTransformer valueTransformer) {\n-\t\tthis.valueTransformer = valueTransformer;\n-\t}\n-\n-\tpublic boolean appliesToAttribute(AttributeDefinition attr) {\n-\t\tif(nameRegexp != null && !nameRegexp.isEmpty()) {\n-\t\t\tMatcher matcher = Pattern.compile(nameRegexp).matcher(attr.getName());\n-\t\t\treturn matcher.find();\n-\t\t}\n-\t\tif(!attr.getNamespace().equals(this.namespace)) {\n-\t\t\treturn false;\n-\t\t}\n-\t\tif(name != null && !name.isEmpty()) {\n-\t\t\treturn attr.getBaseFriendlyName().equals(name);\n-\t\t}\n-\t\treturn false;\n-\t}\n-}\n+\n+ private String namespace;\n+ private String name;\n+ private String nameRegexp;\n+\n+\n+ protected AttributeValueTransformer valueTransformer;\n+\n+ AttributeValueExtractor() {}\n+\n+\n+ public String getNamespace() {\n+  return namespace;\n+ }\n+\n+ public void setNamespace(String namespace) {\n+  this.namespace = namespace;\n+ }\n+\n+ public String getName() {\n+  return name;\n+ }\n+\n+ public void setName(String name) {\n+  this.name = name;\n+ }\n+\n+ public String getNameRegexp() {\n+  return nameRegexp;\n+ }\n+\n+ public void setNameRegexp(String nameRegexp) {\n+  this.nameRegexp = nameRegexp;\n+ }\n+\n+ public AttributeValueTransformer getValueTransformer() {\n+  return valueTransformer;\n+ }\n+\n+ public void setValueTransformer(AttributeValueTransformer valueTransformer) {\n+  this.valueTransformer = valueTransformer;\n+ }\n+\n+ public boolean appliesToAttribute(AttributeDefinition attr) {\n+  if (nameRegexp != null && !nameRegexp.isEmpty()) {\n+   Matcher matcher = Pattern.compile(nameRegexp).matcher(attr.getName());\n+   return matcher.find();\n+  }\n+  if (!attr.getNamespace().equals(this.namespace)) {\n+   return false;\n+  }\n+  if (name != null && !name.isEmpty()) {\n+   return attr.getBaseFriendlyName().equals(name);\n+  }\n+\n+  return false;\n+ }\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 61
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CESNET-perun/errored/1/168/AttributeValueExtractor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CESNET-perun/styler_random/168/AttributeValueExtractor.java\nindex cfd0b898a07..26161658b97 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CESNET-perun/errored/1/168/AttributeValueExtractor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CESNET-perun/styler_random/168/AttributeValueExtractor.java\n@@ -13,7 +13,7 @@ public abstract class AttributeValueExtractor {\n \tprivate String nameRegexp;\n \n \tprotected AttributeValueTransformer valueTransformer;\n-\t\n+\n \tAttributeValueExtractor() {\n \t}\n \n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CESNET-perun/errored/1/168/AttributeValueExtractor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CESNET-perun/styler_three_grams/168/AttributeValueExtractor.java\nindex cfd0b898a07..49c96619c13 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CESNET-perun/errored/1/168/AttributeValueExtractor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CESNET-perun/styler_three_grams/168/AttributeValueExtractor.java\n@@ -12,9 +12,8 @@ public abstract class AttributeValueExtractor {\n \tprivate String name;\n \tprivate String nameRegexp;\n \n-\tprotected AttributeValueTransformer valueTransformer;\n-\t\n-\tAttributeValueExtractor() {\n+\tprotected AttributeValueTransformer valueTransformer\n+\t\t; AttributeValueExtractor() {\n \t}\n \n \tpublic String getNamespace() {\n",
            "diff_size": 3
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": []
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2581",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "50",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "136",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "19",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2581/ProcedureGDSFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2581/ProcedureGDSFactory.java\nindex cffb72801f6..161e4de7a22 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2581/ProcedureGDSFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2581/ProcedureGDSFactory.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.proc;\n \n import java.net.URL;\n@@ -36,57 +37,56 @@ import org.neo4j.kernel.impl.factory.EditionModule;\n import org.neo4j.kernel.impl.factory.GraphDatabaseFacade;\n import org.neo4j.kernel.impl.factory.PlatformModule;\n \n-public class ProcedureGDSFactory implements ThrowingFunction<Context,GraphDatabaseService,ProcedureException>\n+public class ProcedureGDSFactory implements ThrowingFunction<Context, GraphDatabaseService, ProcedureException>\n {\n-    private final PlatformModule platform;\n-    private final EditionModule editionModule;\n-    private final DataSourceModule dataSource;\n-    private final DependencyResolver resolver;\n-    private final CoreAPIAvailabilityGuard availability;\n-    private final ThrowingFunction<URL, URL, URLAccessValidationError> urlValidator;\n-    private final RelationshipTypeTokenHolder relationshipTypeTokenHolder;\n+  private final PlatformModule platform;\n+  private final EditionModule editionModule;\n+  private final DataSourceModule dataSource;\n+  private final DependencyResolver resolver;\n+  private final CoreAPIAvailabilityGuard availability;\n+  private final ThrowingFunction<URL, URL, URLAccessValidationError> urlValidator;\n+  private final RelationshipTypeTokenHolder relationshipTypeTokenHolder;\n \n-    public ProcedureGDSFactory( PlatformModule platform, EditionModule editionModule, DataSourceModule dataSource, DependencyResolver resolver,\n-            CoreAPIAvailabilityGuard coreAPIAvailabilityGuard, RelationshipTypeTokenHolder relationshipTypeTokenHolder )\n-    {\n-        this.platform = platform;\n-        this.editionModule = editionModule;\n-        this.dataSource = dataSource;\n-        this.resolver = resolver;\n-        this.availability = coreAPIAvailabilityGuard;\n-        this.relationshipTypeTokenHolder = relationshipTypeTokenHolder;\n-        this.urlValidator = url -> platform.urlAccessRule.validate( platform.config, url );\n-    }\n+  public ProcedureGDSFactory(PlatformModule platform, EditionModule editionModule, DataSourceModule dataSource, DependencyResolver resolver,\n+                             CoreAPIAvailabilityGuard coreAPIAvailabilityGuard, RelationshipTypeTokenHolder relationshipTypeTokenHolder)\n+  {\n+    this.platform = platform;\n+    this.editionModule = editionModule;\n+    this.dataSource = dataSource;\n+    this.resolver = resolver;\n+    this.availability = coreAPIAvailabilityGuard;\n+    this.relationshipTypeTokenHolder = relationshipTypeTokenHolder;\n+    this.urlValidator = url -> platform.urlAccessRule.validate(platform.config, url);\n+  }\n \n-    @Override\n-    public GraphDatabaseService apply( Context context ) throws ProcedureException\n+  @Override\n+  public GraphDatabaseService apply(Context context) throws ProcedureException\n+  {\n+    KernelTransaction tx = context.getOrElse(Context.KERNEL_TRANSACTION, null);\n+    SecurityContext securityContext;\n+    if (tx != null)\n+    {\n+      securityContext = tx.securityContext();\n+    } else\n     {\n-        KernelTransaction tx = context.getOrElse( Context.KERNEL_TRANSACTION, null );\n-        SecurityContext securityContext;\n-        if ( tx != null )\n-        {\n-            securityContext = tx.securityContext();\n-        }\n-        else\n-        {\n-            securityContext = context.get( Context.SECURITY_CONTEXT );\n-        }\n-        GraphDatabaseFacade facade = new GraphDatabaseFacade();\n-        facade.init(\n-            editionModule,\n-            new ProcedureGDBFacadeSPI(\n-                platform,\n-                dataSource,\n-                resolver,\n-                availability,\n-                urlValidator,\n-                securityContext\n-            ),\n-            dataSource.guard,\n-            dataSource.threadToTransactionBridge,\n-            platform.config,\n-            relationshipTypeTokenHolder\n-        );\n-        return facade;\n+      securityContext = context.get(Context.SECURITY_CONTEXT);\n     }\n+    GraphDatabaseFacade facade = new GraphDatabaseFacade();\n+    facade.init(\n+        editionModule,\n+        new ProcedureGDBFacadeSPI(\n+            platform,\n+            dataSource,\n+            resolver,\n+            availability,\n+            urlValidator,\n+            securityContext\n+        ),\n+        dataSource.guard,\n+        dataSource.threadToTransactionBridge,\n+        platform.config,\n+        relationshipTypeTokenHolder\n+    );\n+    return facade;\n+  }\n }\n",
            "diff_size": 74
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2581/ProcedureGDSFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2581/ProcedureGDSFactory.java\nindex cffb72801f6..acfa52a4103 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2581/ProcedureGDSFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2581/ProcedureGDSFactory.java\n@@ -71,22 +71,14 @@ public class ProcedureGDSFactory implements ThrowingFunction<Context,GraphDataba\n         {\n             securityContext = context.get( Context.SECURITY_CONTEXT );\n         }\n-        GraphDatabaseFacade facade = new GraphDatabaseFacade();\n-        facade.init(\n-            editionModule,\n-            new ProcedureGDBFacadeSPI(\n-                platform,\n-                dataSource,\n-                resolver,\n-                availability,\n-                urlValidator,\n-                securityContext\n-            ),\n+\n+GraphDatabaseFacade facade = new GraphDatabaseFacade();\n+        facade.init( editionModule, new ProcedureGDBFacadeSPI( platform, dataSource, resolver, availability, urlValidator,\n+                securityContext ),\n             dataSource.guard,\n             dataSource.threadToTransactionBridge,\n             platform.config,\n-            relationshipTypeTokenHolder\n-        );\n+            relationshipTypeTokenHolder );\n         return facade;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 14
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2864",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "37",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "16",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "52",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "56",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "106",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "91",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "110",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2864/PrimitiveRelationshipStream.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2864/PrimitiveRelationshipStream.java\nindex 7b529d70192..5e1f8816dca 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2864/PrimitiveRelationshipStream.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2864/PrimitiveRelationshipStream.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.cypher.internal.codegen;\n \n import java.util.Arrays;\n@@ -33,41 +34,39 @@ import static java.lang.String.format;\n \n public class PrimitiveRelationshipStream extends PrimitiveEntityStream<VirtualRelationshipValue>\n {\n-    public PrimitiveRelationshipStream( LongStream inner )\n-    {\n-        super( inner );\n-    }\n+  public PrimitiveRelationshipStream(LongStream inner)\n+  {\n+    super(inner);\n+  }\n \n-    public static PrimitiveRelationshipStream of( long[] array )\n-    {\n-        return new PrimitiveRelationshipStream( LongStream.of( array ) );\n-    }\n+  public static PrimitiveRelationshipStream of(long[] array)\n+  {\n+    return new PrimitiveRelationshipStream(LongStream.of(array));\n+  }\n \n-    public static PrimitiveRelationshipStream of( Object list )\n+  public static PrimitiveRelationshipStream of(Object list)\n+  {\n+    if (null == list)\n     {\n-        if ( null == list )\n-        {\n-            return empty;\n-        }\n-        else if ( list instanceof List )\n-        {\n-            return new PrimitiveRelationshipStream(\n-                    ((List<Relationship>) list).stream().mapToLong( Relationship::getId ) );\n-        }\n-        else if ( list instanceof Relationship[] )\n-        {\n-            return new PrimitiveRelationshipStream(\n-                    Arrays.stream( (Relationship[]) list ).mapToLong( Relationship::getId ) );\n-        }\n-        throw new IllegalArgumentException( format( \"Can not convert to stream: %s\", list.getClass().getName() ) );\n-    }\n-\n-    @Override\n-    // This method is only used when we do not know the element type at compile time, so it has to box the elements\n-    public Iterator<VirtualRelationshipValue> iterator()\n+      return empty;\n+    } else if (list instanceof List)\n     {\n-        return inner.mapToObj( (LongFunction<VirtualRelationshipValue>) VirtualValues::relationship ).iterator();\n+      return new PrimitiveRelationshipStream(\n+          ((List<Relationship>) list).stream().mapToLong(Relationship::getId));\n+    } else if (list instanceof Relationship[])\n+    {\n+      return new PrimitiveRelationshipStream(\n+          Arrays.stream((Relationship[]) list).mapToLong(Relationship::getId));\n     }\n+    throw new IllegalArgumentException(format(\"Can not convert to stream: %s\", list.getClass().getName()));\n+  }\n+\n+  @Override\n+  // This method is only used when we do not know the element type at compile time, so it has to box the elements\n+  public Iterator<VirtualRelationshipValue> iterator()\n+  {\n+    return inner.mapToObj((LongFunction<VirtualRelationshipValue>) VirtualValues::relationship).iterator();\n+  }\n \n-    private static final PrimitiveRelationshipStream empty = new PrimitiveRelationshipStream( LongStream.empty() );\n+  private static final PrimitiveRelationshipStream empty = new PrimitiveRelationshipStream(LongStream.empty());\n }\n",
            "diff_size": 48
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "54",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2864/PrimitiveRelationshipStream.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2864/PrimitiveRelationshipStream.java\nindex 7b529d70192..a714dbe4d0e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2864/PrimitiveRelationshipStream.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2864/PrimitiveRelationshipStream.java\n@@ -51,13 +51,11 @@ public class PrimitiveRelationshipStream extends PrimitiveEntityStream<VirtualRe\n         }\n         else if ( list instanceof List )\n         {\n-            return new PrimitiveRelationshipStream(\n-                    ((List<Relationship>) list).stream().mapToLong( Relationship::getId ) );\n+            return new PrimitiveRelationshipStream(((List<Relationship>) list).stream().mapToLong( Relationship::getId ) );\n         }\n         else if ( list instanceof Relationship[] )\n         {\n-            return new PrimitiveRelationshipStream(\n-                    Arrays.stream( (Relationship[]) list ).mapToLong( Relationship::getId ) );\n+            return new PrimitiveRelationshipStream( Arrays.stream( (Relationship[]) list).mapToLong( Relationship::getId ) );\n         }\n         throw new IllegalArgumentException( format( \"Can not convert to stream: %s\", list.getClass().getName() ) );\n     }\n@@ -70,4 +68,4 @@ public class PrimitiveRelationshipStream extends PrimitiveEntityStream<VirtualRe\n     }\n \n     private static final PrimitiveRelationshipStream empty = new PrimitiveRelationshipStream( LongStream.empty() );\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
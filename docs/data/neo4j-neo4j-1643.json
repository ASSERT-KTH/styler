{
    "project_name": "neo4j-neo4j",
    "error_id": "1643",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "58",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "150",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "150",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "167",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "167",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "60",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "186",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "186",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "201",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "201",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "208",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "208",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "217",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "217",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "240",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "240",
                    "column": "111",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "257",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "258",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "272",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "272",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "274",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "274",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1643/MapUtil.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1643/MapUtil.java\nindex 1bb0786d29d..30139b83f2b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1643/MapUtil.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1643/MapUtil.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.internal.helpers.collection;\n \n import java.io.BufferedOutputStream;\n@@ -45,35 +46,36 @@ public final class MapUtil\n     {\n         // Utility class\n     }\n+\n     /**\n      * A short-hand method for creating a {@link Map} of key/value pairs.\n      *\n      * @param objects alternating key and value.\n-     * @param <K> type of keys\n-     * @param <V> type of values\n+     * @param <K>     type of keys\n+     * @param <V>     type of values\n      * @return a Map with the entries supplied by {@code objects}.\n      */\n-    public static <K, V> Map<K, V> genericMap( Object... objects )\n+    public static <K, V> Map<K, V> genericMap(Object... objects)\n     {\n-        return genericMap( new HashMap<>(), objects );\n+        return genericMap(new HashMap<>(), objects);\n     }\n \n     /**\n      * A short-hand method for adding key/value pairs into a {@link Map}.\n      *\n      * @param targetMap the {@link Map} to put the objects into.\n-     * @param objects alternating key and value.\n-     * @param <K> type of keys\n-     * @param <V> type of values\n+     * @param objects   alternating key and value.\n+     * @param <K>       type of keys\n+     * @param <V>       type of values\n      * @return a Map with the entries supplied by {@code objects}.\n      */\n-    @SuppressWarnings( \"unchecked\" )\n-    public static <K, V> Map<K,V> genericMap( Map<K,V> targetMap, Object... objects )\n+    @SuppressWarnings(\"unchecked\")\n+    public static <K, V> Map<K, V> genericMap(Map<K, V> targetMap, Object... objects)\n     {\n         int i = 0;\n-        while ( i < objects.length )\n+        while (i < objects.length)\n         {\n-            targetMap.put( (K) objects[i++], (V) objects[i++] );\n+            targetMap.put((K) objects[i++], (V) objects[i++]);\n         }\n         return targetMap;\n     }\n@@ -85,9 +87,9 @@ public final class MapUtil\n      * @param strings alternating key and value.\n      * @return a Map with the entries supplied by {@code strings}.\n      */\n-    public static Map<String, String> stringMap( String... strings )\n+    public static Map<String, String> stringMap(String... strings)\n     {\n-        return genericMap( (Object[]) strings );\n+        return genericMap((Object[]) strings);\n     }\n \n     /**\n@@ -95,13 +97,13 @@ public final class MapUtil\n      * both keys and values are {@link String}s.\n      *\n      * @param targetMap the {@link Map} to put the objects into.\n-     * @param strings alternating key and value.\n+     * @param strings   alternating key and value.\n      * @return a Map with the entries supplied by {@code strings}.\n      */\n-    public static Map<String, String> stringMap( Map<String, String> targetMap,\n-            String... strings )\n+    public static Map<String, String> stringMap(Map<String, String> targetMap,\n+                                                String... strings)\n     {\n-        return genericMap( targetMap, (Object[]) strings );\n+        return genericMap(targetMap, (Object[]) strings);\n     }\n \n     /**\n@@ -111,9 +113,9 @@ public final class MapUtil\n      * @param objects alternating key and value.\n      * @return a Map with the entries supplied by {@code objects}.\n      */\n-    public static Map<String, Object> map( Object... objects )\n+    public static Map<String, Object> map(Object... objects)\n     {\n-        return genericMap( objects );\n+        return genericMap(objects);\n     }\n \n     /**\n@@ -121,13 +123,13 @@ public final class MapUtil\n      * keys are {@link String}s and values are {@link Object}s.\n      *\n      * @param targetMap the {@link Map} to put the objects into.\n-     * @param objects alternating key and value.\n+     * @param objects   alternating key and value.\n      * @return a Map with the entries supplied by {@code objects}.\n      */\n-    public static Map<String, Object> map( Map<String, Object> targetMap,\n-            Object... objects )\n+    public static Map<String, Object> map(Map<String, Object> targetMap,\n+                                          Object... objects)\n     {\n-        return genericMap( targetMap, objects );\n+        return genericMap(targetMap, objects);\n     }\n \n     /**\n@@ -135,20 +137,20 @@ public final class MapUtil\n      * and values.\n      *\n      * @param stream the {@link InputStream} containing a\n-     * {@link Properties}-like layout of keys and values.\n+     *               {@link Properties}-like layout of keys and values.\n      * @return the read data as a {@link Map}.\n      * @throws IOException if the {@code stream} throws {@link IOException}.\n      */\n-    public static Map<String,String> load( InputStream stream ) throws IOException\n+    public static Map<String, String> load(InputStream stream) throws IOException\n     {\n         Properties props = new Properties();\n-        props.load( stream );\n+        props.load(stream);\n \n-        Map<String,String> result = new HashMap<>();\n-        for ( Map.Entry<Object,Object> entry : props.entrySet() )\n+        Map<String, String> result = new HashMap<>();\n+        for (Map.Entry<Object, Object> entry : props.entrySet())\n         {\n             // Properties does not trim whitespace from the right side of values\n-            result.put( (String) entry.getKey(), ( (String) entry.getValue() ).trim() );\n+            result.put((String) entry.getKey(), ((String) entry.getValue()).trim());\n         }\n \n         return result;\n@@ -157,33 +159,35 @@ public final class MapUtil\n     /**\n      * Stores the data in {@code config} into {@code file} in a standard java\n      * {@link Properties} format.\n+     *\n      * @param config the data to store in the properties file.\n-     * @param file the file to store the properties in.\n+     * @param file   the file to store the properties in.\n      * @throws IOException IO error.\n      */\n-    public static void store( Map<String, String> config, Path file ) throws IOException\n+    public static void store(Map<String, String> config, Path file) throws IOException\n     {\n-        try ( OutputStream stream = new BufferedOutputStream( Files.newOutputStream( file ) ) )\n+        try (OutputStream stream = new BufferedOutputStream(Files.newOutputStream(file)))\n         {\n-            store( config, stream );\n+            store(config, stream);\n         }\n     }\n \n     /**\n      * Stores the data in {@code config} into {@code stream} in a standard java\n      * {@link Properties} format.\n+     *\n      * @param config the data to store in the properties file.\n      * @param stream the {@link OutputStream} to store the properties in.\n      * @throws IOException IO error.\n      */\n-    public static void store( Map<String, String> config, OutputStream stream ) throws IOException\n+    public static void store(Map<String, String> config, OutputStream stream) throws IOException\n     {\n         Properties properties = new Properties();\n-        for ( Map.Entry<String, String> property : config.entrySet() )\n+        for (Map.Entry<String, String> property : config.entrySet())\n         {\n-            properties.setProperty( property.getKey(), property.getValue() );\n+            properties.setProperty(property.getKey(), property.getValue());\n         }\n-        properties.store( stream, null );\n+        properties.store(stream, null);\n     }\n \n     /**\n@@ -194,25 +198,25 @@ public final class MapUtil\n      * @param writer the {@link Writer} to store the properties in.\n      * @throws IOException IO error.\n      */\n-    public static void store( Map<String, String> config, Writer writer ) throws IOException\n+    public static void store(Map<String, String> config, Writer writer) throws IOException\n     {\n         Properties properties = new Properties();\n-        properties.putAll( config );\n-        properties.store( writer, null );\n+        properties.putAll(config);\n+        properties.store(writer, null);\n     }\n \n-    public static <K, V> MapBuilder<K, V> entry( K key, V value )\n+    public static <K, V> MapBuilder<K, V> entry(K key, V value)\n     {\n-        return new MapBuilder<K, V>().entry( key, value );\n+        return new MapBuilder<K, V>().entry(key, value);\n     }\n \n     public static class MapBuilder<K, V>\n     {\n         private final Map<K, V> map = new HashMap<>();\n \n-        public MapBuilder<K, V> entry( K key, V value )\n+        public MapBuilder<K, V> entry(K key, V value)\n         {\n-            map.put( key, value );\n+            map.put(key, value);\n             return this;\n         }\n \n@@ -225,47 +229,50 @@ public final class MapUtil\n     /**\n      * Mutates the input map by removing entries which do not have keys in the new backing data, as extracted with\n      * the keyExtractor.\n-     * @param map the map to mutate.\n+     *\n+     * @param map            the map to mutate.\n      * @param newBackingData the backing data to retain.\n-     * @param keyExtractor the function to extract keys from the backing data.\n-     * @param <K> type of the key in the input map.\n-     * @param <V> type of the values in the input map.\n-     * @param <T> type of the keys in the new baking data.\n+     * @param keyExtractor   the function to extract keys from the backing data.\n+     * @param <K>            type of the key in the input map.\n+     * @param <V>            type of the values in the input map.\n+     * @param <T>            type of the keys in the new baking data.\n      */\n-    public static <K, V, T> void trimToList( Map<K,V> map, List<T> newBackingData, Function<T,K> keyExtractor )\n+    public static <K, V, T> void trimToList(Map<K, V> map, List<T> newBackingData, Function<T, K> keyExtractor)\n     {\n-        Set<K> retainedKeys = newBackingData.stream().map( keyExtractor ).collect( Collectors.toSet() );\n-        trimToList( map, retainedKeys );\n+        Set<K> retainedKeys = newBackingData.stream().map(keyExtractor).collect(Collectors.toSet());\n+        trimToList(map, retainedKeys);\n     }\n \n     /**\n      * Mutates the input map by removing entries which do not have keys in the new backing data, as extracted with\n      * the keyExtractor.\n-     * @param map the map to mutate.\n+     *\n+     * @param map            the map to mutate.\n      * @param newBackingData the backing data to retain.\n-     * @param keyExtractor the function to extract keys from the backing data.\n-     * @param <K> type of the key in the input map.\n-     * @param <V> type of the values in the input map.\n-     * @param <T> type of the keys in the new backing data.\n+     * @param keyExtractor   the function to extract keys from the backing data.\n+     * @param <K>            type of the key in the input map.\n+     * @param <V>            type of the values in the input map.\n+     * @param <T>            type of the keys in the new backing data.\n      */\n-    public static <K, V, T> void trimToFlattenedList( Map<K,V> map, List<T> newBackingData,\n-            Function<T,Stream<K>> keyExtractor )\n+    public static <K, V, T> void trimToFlattenedList(Map<K, V> map, List<T> newBackingData,\n+                                                     Function<T, Stream<K>> keyExtractor)\n     {\n-        Set<K> retainedKeys = newBackingData.stream().flatMap( keyExtractor ).collect( Collectors.toSet() );\n-        trimToList( map, retainedKeys );\n+        Set<K> retainedKeys = newBackingData.stream().flatMap(keyExtractor).collect(Collectors.toSet());\n+        trimToList(map, retainedKeys);\n     }\n \n     /**\n      * Mutates the input map by removing entries which are not in the retained set of keys.\n-     * @param map the map to mutate.\n+     *\n+     * @param map          the map to mutate.\n      * @param retainedKeys the keys to retain.\n-     * @param <K> type of the key.\n-     * @param <V> type of the values.\n+     * @param <K>          type of the key.\n+     * @param <V>          type of the values.\n      */\n-    public static <K, V> void trimToList( Map<K,V> map, Set<K> retainedKeys )\n+    public static <K, V> void trimToList(Map<K, V> map, Set<K> retainedKeys)\n     {\n-        Set<K> keysToRemove = new HashSet<>( map.keySet() );\n-        keysToRemove.removeAll( retainedKeys );\n-        keysToRemove.forEach( map::remove );\n+        Set<K> keysToRemove = new HashSet<>(map.keySet());\n+        keysToRemove.removeAll(retainedKeys);\n+        keysToRemove.forEach(map::remove);\n     }\n }\n",
            "diff_size": 75
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1643/MapUtil.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/1643/MapUtil.java\nindex 1bb0786d29d..9aa743d6e7e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1643/MapUtil.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/1643/MapUtil.java\n@@ -268,4 +268,4 @@ public final class MapUtil\n         keysToRemove.removeAll( retainedKeys );\n         keysToRemove.forEach( map::remove );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
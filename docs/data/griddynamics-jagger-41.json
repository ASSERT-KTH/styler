{
    "project_name": "griddynamics-jagger",
    "error_id": "41",
    "information": {
        "errors": [
            {
                "line": "78",
                "column": "118",
                "severity": "warning",
                "message": "'.' should be on a new line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.SeparatorWrapCheck"
            }
        ]
    },
    "source_code": "    public void onApplicationEvent(ApplicationEvent event) {\n        if (autoDiscovery) {\n            for (Map.Entry<String, ExtensionExporter> entry : ((ContextRefreshedEvent) event).getApplicationContext().\n                    getBeansOfType(ExtensionExporter.class).entrySet()) {\n                Object extension = entry.getValue().getExtension();\n                if (extensionClass.isAssignableFrom(extension.getClass())) {",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/41/ExtensionRegistry.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/styler/41/ExtensionRegistry.java\nindex 26ad9111883..b09801831b0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/41/ExtensionRegistry.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/styler/41/ExtensionRegistry.java\n@@ -75,8 +75,8 @@ public class ExtensionRegistry<T> implements Ordered, ApplicationListener {\n     @Override\n     public void onApplicationEvent(ApplicationEvent event) {\n         if (autoDiscovery) {\n-            for (Map.Entry<String, ExtensionExporter> entry : ((ContextRefreshedEvent) event).getApplicationContext().\n-                    getBeansOfType(ExtensionExporter.class).entrySet()) {\n+            for (Map.Entry<String, ExtensionExporter> entry : ((ContextRefreshedEvent) event).getApplicationContext()\n+                                 .getBeansOfType(ExtensionExporter.class).entrySet()) {\n                 Object extension = entry.getValue().getExtension();\n                 if (extensionClass.isAssignableFrom(extension.getClass())) {\n                     extensions.put(entry.getKey(), extensionClass.cast(entry.getValue().getExtension()));\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "78",
                    "column": "118",
                    "severity": "warning",
                    "message": "'.' should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.SeparatorWrapCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "78",
                    "severity": "warning",
                    "message": "Line is longer than 150 characters (found 171).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/41/ExtensionRegistry.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/naturalize/41/ExtensionRegistry.java\nindex 26ad9111883..89e9a971f13 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/41/ExtensionRegistry.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/naturalize/41/ExtensionRegistry.java\n@@ -75,8 +75,7 @@ public class ExtensionRegistry<T> implements Ordered, ApplicationListener {\n     @Override\n     public void onApplicationEvent(ApplicationEvent event) {\n         if (autoDiscovery) {\n-            for (Map.Entry<String, ExtensionExporter> entry : ((ContextRefreshedEvent) event).getApplicationContext().\n-                    getBeansOfType(ExtensionExporter.class).entrySet()) {\n+            for (Map.Entry<String, ExtensionExporter> entry : ((ContextRefreshedEvent) event).getApplicationContext().getBeansOfType(ExtensionExporter.class).entrySet()) {\n                 Object extension = entry.getValue().getExtension();\n                 if (extensionClass.isAssignableFrom(extension.getClass())) {\n                     extensions.put(entry.getKey(), extensionClass.cast(entry.getValue().getExtension()));\n@@ -84,4 +83,4 @@ public class ExtensionRegistry<T> implements Ordered, ApplicationListener {\n             }\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "78",
                    "column": "118",
                    "severity": "warning",
                    "message": "'.' should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.SeparatorWrapCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/41/ExtensionRegistry.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/styler_three_grams/41/ExtensionRegistry.java\nindex 26ad9111883..b09801831b0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/41/ExtensionRegistry.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/styler_three_grams/41/ExtensionRegistry.java\n@@ -75,8 +75,8 @@ public class ExtensionRegistry<T> implements Ordered, ApplicationListener {\n     @Override\n     public void onApplicationEvent(ApplicationEvent event) {\n         if (autoDiscovery) {\n-            for (Map.Entry<String, ExtensionExporter> entry : ((ContextRefreshedEvent) event).getApplicationContext().\n-                    getBeansOfType(ExtensionExporter.class).entrySet()) {\n+            for (Map.Entry<String, ExtensionExporter> entry : ((ContextRefreshedEvent) event).getApplicationContext()\n+                                 .getBeansOfType(ExtensionExporter.class).entrySet()) {\n                 Object extension = entry.getValue().getExtension();\n                 if (extensionClass.isAssignableFrom(extension.getClass())) {\n                     extensions.put(entry.getKey(), extensionClass.cast(entry.getValue().getExtension()));\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random"
    ]
}
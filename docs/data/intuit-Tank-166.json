{
    "project_name": "intuit-Tank",
    "error_id": "166",
    "information": {
        "errors": [
            {
                "line": "33",
                "column": "1",
                "severity": "warning",
                "message": "File contains tab characters (this is the first instance).",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
            }
        ]
    },
    "source_code": "\n\n\t/**\n\t * Returns the listener for hyperlink events from\n\t * {@link org.fife.ui.rsyntaxtextarea.focusabletip.FocusableTip}s, or\n\t * <code>null</code> if none.",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "33",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/166/Parser.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/styler/166/Parser.java\nindex 0d29b8bfbb9..1c22122b88a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/166/Parser.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/styler/166/Parser.java\n@@ -29,15 +29,14 @@ import org.fife.ui.rsyntaxtextarea.RSyntaxDocument;\n  */\n public interface Parser {\n \n-\n-\t/**\n+    /**\n \t * Returns the listener for hyperlink events from\n \t * {@link org.fife.ui.rsyntaxtextarea.focusabletip.FocusableTip}s, or\n \t * <code>null</code> if none.\n \t *\n \t * @return The listener.\n \t */\n-\tExtendedHyperlinkListener getHyperlinkListener();\n+ ExtendedHyperlinkListener getHyperlinkListener();\n \n \n \t/**\n",
            "diff_size": 3
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/166/Parser.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/intellij/166/Parser.java\nindex 0d29b8bfbb9..9b168c4f99b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/166/Parser.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/intellij/166/Parser.java\n@@ -6,6 +6,7 @@\n  * This library is distributed under a modified BSD license.  See the included\n  * LICENSE file for details.\n  */\n+\n package org.fife.ui.rsyntaxtextarea.parser;\n \n import java.net.URL;\n@@ -19,7 +20,7 @@ import org.fife.ui.rsyntaxtextarea.RSyntaxDocument;\n  * A <code>Parser</code> returns a list of issues it finds in the text area's\n  * content, which the text area can flag (e.g. squiggle underline).  It can\n  * also return descriptions of the issues, to be used in tool tips.<p>\n- *\n+ * <p>\n  * To install a <code>Parser</code>, simply call\n  * {@link org.fife.ui.rsyntaxtextarea.RSyntaxTextArea#addParser(Parser)}.\n  *\n@@ -30,46 +31,46 @@ import org.fife.ui.rsyntaxtextarea.RSyntaxDocument;\n public interface Parser {\n \n \n-\t/**\n-\t * Returns the listener for hyperlink events from\n-\t * {@link org.fife.ui.rsyntaxtextarea.focusabletip.FocusableTip}s, or\n-\t * <code>null</code> if none.\n-\t *\n-\t * @return The listener.\n-\t */\n-\tExtendedHyperlinkListener getHyperlinkListener();\n+  /**\n+   * Returns the listener for hyperlink events from\n+   * {@link org.fife.ui.rsyntaxtextarea.focusabletip.FocusableTip}s, or\n+   * <code>null</code> if none.\n+   *\n+   * @return The listener.\n+   */\n+  ExtendedHyperlinkListener getHyperlinkListener();\n \n \n-\t/**\n-\t * Returns the base URL for any images displayed in returned\n-\t * {@link ParserNotice} HTML text.  Note that if a parser notice's text\n-\t * is not HTML, this URL is not used.\n-\t *\n-\t * @return The URL.  This may be <code>null</code>.\n-\t */\n-\tURL getImageBase();\n+  /**\n+   * Returns the base URL for any images displayed in returned\n+   * {@link ParserNotice} HTML text.  Note that if a parser notice's text\n+   * is not HTML, this URL is not used.\n+   *\n+   * @return The URL.  This may be <code>null</code>.\n+   */\n+  URL getImageBase();\n \n \n-\t/**\n-\t * Returns whether this parser is enabled.  If this returns\n-\t * <code>false</code>, it will not be run.\n-\t *\n-\t * @return Whether this parser is enabled.\n-\t */\n-\tboolean isEnabled();\n+  /**\n+   * Returns whether this parser is enabled.  If this returns\n+   * <code>false</code>, it will not be run.\n+   *\n+   * @return Whether this parser is enabled.\n+   */\n+  boolean isEnabled();\n \n \n-\t/**\n-\t * Parses input from the specified document.\n-\t *\n-\t * @param doc The document to parse.  This document is in a read lock,\n-\t *        so it cannot be modified while parsing is occurring.\n-\t * @param style The language being rendered, such as\n-\t *        {@link org.fife.ui.rsyntaxtextarea.SyntaxConstants#SYNTAX_STYLE_JAVA}.\n-\t * @return An object describing the section of the document parsed and the\n-\t *         results.  This is guaranteed to be non-<code>null</code>.\n-\t */\n-\tParseResult parse(RSyntaxDocument doc, String style);\n+  /**\n+   * Parses input from the specified document.\n+   *\n+   * @param doc   The document to parse.  This document is in a read lock,\n+   *              so it cannot be modified while parsing is occurring.\n+   * @param style The language being rendered, such as\n+   *              {@link org.fife.ui.rsyntaxtextarea.SyntaxConstants#SYNTAX_STYLE_JAVA}.\n+   * @return An object describing the section of the document parsed and the\n+   * results.  This is guaranteed to be non-<code>null</code>.\n+   */\n+  ParseResult parse(RSyntaxDocument doc, String style);\n \n \n }\n",
            "diff_size": 36
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "32",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/166/Parser.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/naturalize/166/Parser.java\nindex 0d29b8bfbb9..b439af7a915 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/166/Parser.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/naturalize/166/Parser.java\n@@ -12,7 +12,6 @@ import java.net.URL;\n \n import org.fife.ui.rsyntaxtextarea.RSyntaxDocument;\n \n-\n /**\n  * An interface for a parser for content in an\n  * {@link org.fife.ui.rsyntaxtextarea.RSyntaxTextArea}.\n@@ -29,8 +28,7 @@ import org.fife.ui.rsyntaxtextarea.RSyntaxDocument;\n  */\n public interface Parser {\n \n-\n-\t/**\n+    /**\n \t * Returns the listener for hyperlink events from\n \t * {@link org.fife.ui.rsyntaxtextarea.focusabletip.FocusableTip}s, or\n \t * <code>null</code> if none.\n@@ -39,8 +37,7 @@ public interface Parser {\n \t */\n \tExtendedHyperlinkListener getHyperlinkListener();\n \n-\n-\t/**\n+/**\n \t * Returns the base URL for any images displayed in returned\n \t * {@link ParserNotice} HTML text.  Note that if a parser notice's text\n \t * is not HTML, this URL is not used.\n@@ -49,8 +46,7 @@ public interface Parser {\n \t */\n \tURL getImageBase();\n \n-\n-\t/**\n+/**\n \t * Returns whether this parser is enabled.  If this returns\n \t * <code>false</code>, it will not be run.\n \t *\n@@ -58,8 +54,7 @@ public interface Parser {\n \t */\n \tboolean isEnabled();\n \n-\n-\t/**\n+/**\n \t * Parses input from the specified document.\n \t *\n \t * @param doc The document to parse.  This document is in a read lock,\n@@ -71,5 +66,4 @@ public interface Parser {\n \t */\n \tParseResult parse(RSyntaxDocument doc, String style);\n \n-\n-}\n+    }\n\\ No newline at end of file\n",
            "diff_size": 11
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/166/Parser.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/codebuff/166/Parser.java\nindex 0d29b8bfbb9..d6396c926b1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/166/Parser.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/codebuff/166/Parser.java\n@@ -8,8 +8,9 @@\n  */\n package org.fife.ui.rsyntaxtextarea.parser;\n \n-import java.net.URL;\n \n+\n+import java.net.URL;\n import org.fife.ui.rsyntaxtextarea.RSyntaxDocument;\n \n \n@@ -27,49 +28,54 @@ import org.fife.ui.rsyntaxtextarea.RSyntaxDocument;\n  * @version 0.5\n  * @see AbstractParser\n  */\n+\n+\n public interface Parser {\n \n \n-\t/**\n-\t * Returns the listener for hyperlink events from\n-\t * {@link org.fife.ui.rsyntaxtextarea.focusabletip.FocusableTip}s, or\n-\t * <code>null</code> if none.\n-\t *\n-\t * @return The listener.\n-\t */\n-\tExtendedHyperlinkListener getHyperlinkListener();\n-\n-\n-\t/**\n-\t * Returns the base URL for any images displayed in returned\n-\t * {@link ParserNotice} HTML text.  Note that if a parser notice's text\n-\t * is not HTML, this URL is not used.\n-\t *\n-\t * @return The URL.  This may be <code>null</code>.\n-\t */\n-\tURL getImageBase();\n-\n-\n-\t/**\n-\t * Returns whether this parser is enabled.  If this returns\n-\t * <code>false</code>, it will not be run.\n-\t *\n-\t * @return Whether this parser is enabled.\n-\t */\n-\tboolean isEnabled();\n-\n-\n-\t/**\n-\t * Parses input from the specified document.\n-\t *\n-\t * @param doc The document to parse.  This document is in a read lock,\n-\t *        so it cannot be modified while parsing is occurring.\n-\t * @param style The language being rendered, such as\n-\t *        {@link org.fife.ui.rsyntaxtextarea.SyntaxConstants#SYNTAX_STYLE_JAVA}.\n-\t * @return An object describing the section of the document parsed and the\n-\t *         results.  This is guaranteed to be non-<code>null</code>.\n-\t */\n-\tParseResult parse(RSyntaxDocument doc, String style);\n-\n-\n-}\n+    /**\n+     * Returns the listener for hyperlink events from\n+     * {@link org.fife.ui.rsyntaxtextarea.focusabletip.FocusableTip}s, or\n+     * <code>null</code> if none.\n+     *\n+     * @return The listener.\n+     */\n+\n+    ExtendedHyperlinkListener getHyperlinkListener();\n+\n+\n+    /**\n+     * Returns the base URL for any images displayed in returned\n+     * {@link ParserNotice} HTML text.  Note that if a parser notice's text\n+     * is not HTML, this URL is not used.\n+     *\n+     * @return The URL.  This may be <code>null</code>.\n+     */\n+\n+    URL getImageBase();\n+\n+\n+    /**\n+     * Returns whether this parser is enabled.  If this returns\n+     * <code>false</code>, it will not be run.\n+     *\n+     * @return Whether this parser is enabled.\n+     */\n+\n+    boolean isEnabled();\n+\n+\n+    /**\n+     * Parses input from the specified document.\n+     *\n+     * @param doc The document to parse.  This document is in a read lock,\n+     *        so it cannot be modified while parsing is occurring.\n+     * @param style The language being rendered, such as\n+     *        {@link org.fife.ui.rsyntaxtextarea.SyntaxConstants#SYNTAX_STYLE_JAVA}.\n+     * @return An object describing the section of the document parsed and the\n+     *         results.  This is guaranteed to be non-<code>null</code>.\n+     */\n+\n+    ParseResult parse(RSyntaxDocument doc, String style);\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 51
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "33",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/166/Parser.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/styler_random/166/Parser.java\nindex 0d29b8bfbb9..1c22122b88a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/166/Parser.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/styler_random/166/Parser.java\n@@ -29,15 +29,14 @@ import org.fife.ui.rsyntaxtextarea.RSyntaxDocument;\n  */\n public interface Parser {\n \n-\n-\t/**\n+    /**\n \t * Returns the listener for hyperlink events from\n \t * {@link org.fife.ui.rsyntaxtextarea.focusabletip.FocusableTip}s, or\n \t * <code>null</code> if none.\n \t *\n \t * @return The listener.\n \t */\n-\tExtendedHyperlinkListener getHyperlinkListener();\n+ ExtendedHyperlinkListener getHyperlinkListener();\n \n \n \t/**\n",
            "diff_size": 3
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "33",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/166/Parser.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/styler_three_grams/166/Parser.java\nindex 0d29b8bfbb9..d20cd93034c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/166/Parser.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/styler_three_grams/166/Parser.java\n@@ -29,15 +29,14 @@ import org.fife.ui.rsyntaxtextarea.RSyntaxDocument;\n  */\n public interface Parser {\n \n-\n-\t/**\n+    /**\n \t * Returns the listener for hyperlink events from\n \t * {@link org.fife.ui.rsyntaxtextarea.focusabletip.FocusableTip}s, or\n \t * <code>null</code> if none.\n \t *\n \t * @return The listener.\n \t */\n-\tExtendedHyperlinkListener getHyperlinkListener();\n+    ExtendedHyperlinkListener getHyperlinkListener();\n \n \n \t/**\n",
            "diff_size": 3
        }
    ],
    "repaired_by": [
        "intellij",
        "codebuff"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1650",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "37",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1650/WritableChannel.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1650/WritableChannel.java\nindex 7448bb80269..81e58df402f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1650/WritableChannel.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1650/WritableChannel.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.storageengine.api;\n \n import java.io.IOException;\n@@ -26,67 +27,67 @@ import java.io.IOException;\n  */\n public interface WritableChannel\n {\n-    /**\n-     * Writes a {@code byte} to this channel.\n-     *\n-     * @param value byte value.\n-     * @return this channel, for fluent usage.\n-     * @throws IOException if I/O error occurs.\n-     */\n-    WritableChannel put( byte value ) throws IOException;\n+  /**\n+   * Writes a {@code byte} to this channel.\n+   *\n+   * @param value byte value.\n+   * @return this channel, for fluent usage.\n+   * @throws IOException if I/O error occurs.\n+   */\n+  WritableChannel put(byte value) throws IOException;\n \n-    /**\n-     * Writes a {@code short} to this channel.\n-     *\n-     * @param value short value.\n-     * @return this channel, for fluent usage.\n-     * @throws IOException if I/O error occurs.\n-     */\n-    WritableChannel putShort( short value ) throws IOException;\n+  /**\n+   * Writes a {@code short} to this channel.\n+   *\n+   * @param value short value.\n+   * @return this channel, for fluent usage.\n+   * @throws IOException if I/O error occurs.\n+   */\n+  WritableChannel putShort(short value) throws IOException;\n \n-    /**\n-     * Writes a {@code int} to this channel.\n-     *\n-     * @param value int value.\n-     * @return this channel, for fluent usage.\n-     * @throws IOException if I/O error occurs.\n-     */\n-    WritableChannel putInt( int value ) throws IOException;\n+  /**\n+   * Writes a {@code int} to this channel.\n+   *\n+   * @param value int value.\n+   * @return this channel, for fluent usage.\n+   * @throws IOException if I/O error occurs.\n+   */\n+  WritableChannel putInt(int value) throws IOException;\n \n-    /**\n-     * Writes a {@code long} to this channel.\n-     *\n-     * @param value long value.\n-     * @return this channel, for fluent usage.\n-     * @throws IOException if I/O error occurs.\n-     */\n-    WritableChannel putLong( long value ) throws IOException;\n+  /**\n+   * Writes a {@code long} to this channel.\n+   *\n+   * @param value long value.\n+   * @return this channel, for fluent usage.\n+   * @throws IOException if I/O error occurs.\n+   */\n+  WritableChannel putLong(long value) throws IOException;\n \n-    /**\n-     * Writes a {@code float} to this channel.\n-     *\n-     * @param value float value.\n-     * @return this channel, for fluent usage.\n-     * @throws IOException if I/O error occurs.\n-     */\n-    WritableChannel putFloat( float value ) throws IOException;\n+  /**\n+   * Writes a {@code float} to this channel.\n+   *\n+   * @param value float value.\n+   * @return this channel, for fluent usage.\n+   * @throws IOException if I/O error occurs.\n+   */\n+  WritableChannel putFloat(float value) throws IOException;\n \n-    /**\n-     * Writes a {@code double} to this channel.\n-     *\n-     * @param value double value.\n-     * @return this channel, for fluent usage.\n-     * @throws IOException if I/O error occurs.\n-     */\n-    WritableChannel putDouble( double value ) throws IOException;\n+  /**\n+   * Writes a {@code double} to this channel.\n+   *\n+   * @param value double value.\n+   * @return this channel, for fluent usage.\n+   * @throws IOException if I/O error occurs.\n+   */\n+  WritableChannel putDouble(double value) throws IOException;\n \n-    /**\n-     * Writes a {@code byte[]} to this channel.\n-     *\n-     * @param value byte array.\n-     * @param length number of items of the array to write.\n-     * @return this channel, for fluent usage.\n-     * @throws IOException if I/O error occurs.\n-     */\n-    WritableChannel put( byte[] value, int length ) throws IOException;\n+  /**\n+   * Writes a {@code byte[]} to this channel.\n+   *\n+   * @param value  byte array.\n+   * @param length number of items of the array to write.\n+   * @return this channel, for fluent usage.\n+   * @throws IOException if I/O error occurs.\n+   */\n+  WritableChannel put(byte[] value, int length) throws IOException;\n }\n",
            "diff_size": 58
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1650/WritableChannel.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1650/WritableChannel.java\nindex 7448bb80269..a28f97e5687 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1650/WritableChannel.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1650/WritableChannel.java\n@@ -89,4 +89,4 @@ public interface WritableChannel\n      * @throws IOException if I/O error occurs.\n      */\n     WritableChannel put( byte[] value, int length ) throws IOException;\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3793",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "42",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "132",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "84",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3793/GBPTreeCleanupJob.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3793/GBPTreeCleanupJob.java\nindex bd86c48720c..52f79e80752 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3793/GBPTreeCleanupJob.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3793/GBPTreeCleanupJob.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.index.internal.gbptree;\n \n import java.io.File;\n@@ -25,76 +26,75 @@ import java.util.concurrent.ExecutorService;\n \n class GBPTreeCleanupJob implements CleanupJob\n {\n-    private final CrashGenerationCleaner crashGenerationCleaner;\n-    private final GBPTreeLock gbpTreeLock;\n-    private final GBPTree.Monitor monitor;\n-    private final File indexFile;\n-    private volatile boolean needed;\n-    private volatile Throwable failure;\n+  private final CrashGenerationCleaner crashGenerationCleaner;\n+  private final GBPTreeLock gbpTreeLock;\n+  private final GBPTree.Monitor monitor;\n+  private final File indexFile;\n+  private volatile boolean needed;\n+  private volatile Throwable failure;\n \n-    /**\n-     * @param crashGenerationCleaner {@link CrashGenerationCleaner} to use for cleaning.\n-     * @param gbpTreeLock {@link GBPTreeLock} to be released when job has either successfully finished or failed.\n-     * @param monitor {@link GBPTree.Monitor} to report to\n-     * @param indexFile Target file\n-     */\n-    GBPTreeCleanupJob( CrashGenerationCleaner crashGenerationCleaner, GBPTreeLock gbpTreeLock, GBPTree.Monitor monitor, File indexFile )\n-    {\n-        this.crashGenerationCleaner = crashGenerationCleaner;\n-        this.gbpTreeLock = gbpTreeLock;\n-        this.monitor = monitor;\n-        this.indexFile = indexFile;\n-        this.needed = true;\n+  /**\n+   * @param crashGenerationCleaner {@link CrashGenerationCleaner} to use for cleaning.\n+   * @param gbpTreeLock            {@link GBPTreeLock} to be released when job has either successfully finished or failed.\n+   * @param monitor                {@link GBPTree.Monitor} to report to\n+   * @param indexFile              Target file\n+   */\n+  GBPTreeCleanupJob(CrashGenerationCleaner crashGenerationCleaner, GBPTreeLock gbpTreeLock, GBPTree.Monitor monitor, File indexFile)\n+  {\n+    this.crashGenerationCleaner = crashGenerationCleaner;\n+    this.gbpTreeLock = gbpTreeLock;\n+    this.monitor = monitor;\n+    this.indexFile = indexFile;\n+    this.needed = true;\n \n-    }\n+  }\n \n-    @Override\n-    public boolean needed()\n-    {\n-        return needed;\n-    }\n+  @Override\n+  public boolean needed()\n+  {\n+    return needed;\n+  }\n \n-    @Override\n-    public boolean hasFailed()\n-    {\n-        return failure != null;\n-    }\n+  @Override\n+  public boolean hasFailed()\n+  {\n+    return failure != null;\n+  }\n \n-    @Override\n-    public Throwable getCause()\n-    {\n-        return failure;\n-    }\n+  @Override\n+  public Throwable getCause()\n+  {\n+    return failure;\n+  }\n \n-    @Override\n-    public void close()\n-    {\n-        gbpTreeLock.cleanerUnlock();\n-        monitor.cleanupClosed();\n-    }\n+  @Override\n+  public void close()\n+  {\n+    gbpTreeLock.cleanerUnlock();\n+    monitor.cleanupClosed();\n+  }\n \n-    @Override\n-    public void run( ExecutorService executor )\n+  @Override\n+  public void run(ExecutorService executor)\n+  {\n+    try\n     {\n-        try\n-        {\n-            crashGenerationCleaner.clean( executor );\n-            needed = false;\n-        }\n-        catch ( Throwable e )\n-        {\n-            monitor.cleanupFailed( e );\n-            failure = e;\n-        }\n-    }\n-\n-    @Override\n-    public String toString()\n+      crashGenerationCleaner.clean(executor);\n+      needed = false;\n+    } catch (Throwable e)\n     {\n-        StringJoiner joiner = new StringJoiner( \", \", \"CleanupJob(\", \")\" );\n-        joiner.add( \"file=\" + indexFile.getAbsolutePath() );\n-        joiner.add( \"needed=\" + needed );\n-        joiner.add( \"failure=\" + (failure == null ? null : failure.toString()) );\n-        return joiner.toString();\n+      monitor.cleanupFailed(e);\n+      failure = e;\n     }\n+  }\n+\n+  @Override\n+  public String toString()\n+  {\n+    StringJoiner joiner = new StringJoiner(\", \", \"CleanupJob(\", \")\");\n+    joiner.add(\"file=\" + indexFile.getAbsolutePath());\n+    joiner.add(\"needed=\" + needed);\n+    joiner.add(\"failure=\" + (failure == null ? null : failure.toString()));\n+    return joiner.toString();\n+  }\n }\n",
            "diff_size": 76
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3793/GBPTreeCleanupJob.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3793/GBPTreeCleanupJob.java\nindex bd86c48720c..0735163ace2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3793/GBPTreeCleanupJob.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3793/GBPTreeCleanupJob.java\n@@ -45,7 +45,6 @@ class GBPTreeCleanupJob implements CleanupJob\n         this.monitor = monitor;\n         this.indexFile = indexFile;\n         this.needed = true;\n-\n     }\n \n     @Override\n@@ -94,7 +93,7 @@ class GBPTreeCleanupJob implements CleanupJob\n         StringJoiner joiner = new StringJoiner( \", \", \"CleanupJob(\", \")\" );\n         joiner.add( \"file=\" + indexFile.getAbsolutePath() );\n         joiner.add( \"needed=\" + needed );\n-        joiner.add( \"failure=\" + (failure == null ? null : failure.toString()) );\n+        joiner.add( \"failure=\" + ( failure == null ? null : failure.toString()) );\n         return joiner.toString();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
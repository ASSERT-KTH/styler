{
    "project_name": "neo4j-neo4j",
    "error_id": "1465",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "108",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1465/ConstraintDescriptor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1465/ConstraintDescriptor.java\nindex 0429fc481ab..d399fb59f7e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1465/ConstraintDescriptor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1465/ConstraintDescriptor.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.internal.schema;\n \n import org.neo4j.internal.schema.constraints.IndexBackedConstraintDescriptor;\n@@ -40,6 +41,7 @@ public interface ConstraintDescriptor extends SchemaDescriptorSupplier, SchemaRu\n \n     /**\n      * Test if this constraint descriptor is a relationship property existence constraint.\n+     *\n      * @return {@code true} if calling {@link #asRelationshipPropertyExistenceConstraint()} would not throw.\n      */\n     boolean isRelationshipPropertyExistenceConstraint();\n@@ -51,6 +53,7 @@ public interface ConstraintDescriptor extends SchemaDescriptorSupplier, SchemaRu\n \n     /**\n      * Test if this constraint descriptor is a node property existence constraint.\n+     *\n      * @return {@code true} if calling {@link #asNodePropertyExistenceConstraint()} would not throw.\n      */\n     boolean isNodePropertyExistenceConstraint();\n@@ -62,6 +65,7 @@ public interface ConstraintDescriptor extends SchemaDescriptorSupplier, SchemaRu\n \n     /**\n      * Test if this constraint descriptor is a uniqueness constraint.\n+     *\n      * @return {@code true} if calling {@link #asUniquenessConstraint()} would not throw.\n      */\n     boolean isUniquenessConstraint();\n@@ -73,6 +77,7 @@ public interface ConstraintDescriptor extends SchemaDescriptorSupplier, SchemaRu\n \n     /**\n      * Test if this constraint descriptor is a node key constraint.\n+     *\n      * @return {@code true} if calling {@link #asNodeKeyConstraint()} would not throw.\n      */\n     boolean isNodeKeyConstraint();\n@@ -84,6 +89,7 @@ public interface ConstraintDescriptor extends SchemaDescriptorSupplier, SchemaRu\n \n     /**\n      * Test if this constraint descriptor is an index backed constraint descriptor.\n+     *\n      * @return {@code true} if calling {@link #asIndexBackedConstraint()} would not throw.\n      */\n     boolean isIndexBackedConstraint();\n@@ -95,29 +101,33 @@ public interface ConstraintDescriptor extends SchemaDescriptorSupplier, SchemaRu\n \n     /**\n      * Produce a copy of this constraint descriptor, that has the given id.\n+     *\n      * @param id The id of the new constraint descriptor.\n      * @return a modified copy of this constraint descriptor.\n      */\n-    ConstraintDescriptor withId( long id );\n+    ConstraintDescriptor withId(long id);\n \n     /**\n      * Produce a copy of this constraint descriptor, that has the given name.\n      * If the given name is {@code null}, then this descriptor is returned unchanged.\n+     *\n      * @param name The name of the new constraint descriptor.\n      * @return a modified copy of this constraint descriptor.\n      */\n     @Override\n-    ConstraintDescriptor withName( String name );\n+    ConstraintDescriptor withName(String name);\n \n     /**\n      * Produce a copy of this constraint descriptor, that has the given owned index id.\n+     *\n      * @param id the id of the index that this constraint descriptor owns.\n      * @return a modified copy of this constraint descriptor.\n      */\n-    IndexBackedConstraintDescriptor withOwnedIndexId( long id );\n+    IndexBackedConstraintDescriptor withOwnedIndexId(long id);\n \n     /**\n      * Return the id of this constraint descriptor, if it has any, or throw an {@link IllegalStateException}.\n+     *\n      * @return the id of this constraint descriptor.\n      * @see SchemaRule#getId()\n      */\n",
            "diff_size": 13
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1465/ConstraintDescriptor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/1465/ConstraintDescriptor.java\nindex 0429fc481ab..894514ba8e6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1465/ConstraintDescriptor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/1465/ConstraintDescriptor.java\n@@ -123,4 +123,4 @@ public interface ConstraintDescriptor extends SchemaDescriptorSupplier, SchemaRu\n      */\n     @Override\n     long getId();\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
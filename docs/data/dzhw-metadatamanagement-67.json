{
    "project_name": "dzhw-metadatamanagement",
    "error_id": "67",
    "information": {
        "errors": [
            {
                "line": "29",
                "column": "73",
                "severity": "error",
                "message": "'}' at column 73 should be alone on a line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
            }
        ]
    },
    "source_code": "   */\n  @Override\n  public void initialize(ValidUniqueSurveyNumber constraintAnnotation) {}\n\n  /*\n   * (non-Javadoc)",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "29",
                    "column": "73",
                    "severity": "error",
                    "message": "'}' at column 73 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/67/ValidUniqueSurveyNumberValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/intellij/67/ValidUniqueSurveyNumberValidator.java\nindex f0d92a5dea7..9b9e575aa6f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/67/ValidUniqueSurveyNumberValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/intellij/67/ValidUniqueSurveyNumberValidator.java\n@@ -26,7 +26,8 @@ public class ValidUniqueSurveyNumberValidator\n    * @see javax.validation.ConstraintValidator#initialize(java.lang.annotation.Annotation)\n    */\n   @Override\n-  public void initialize(ValidUniqueSurveyNumber constraintAnnotation) {}\n+  public void initialize(ValidUniqueSurveyNumber constraintAnnotation) {\n+  }\n \n   /*\n    * (non-Javadoc)\n",
            "diff_size": 2
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "29",
                    "column": "73",
                    "severity": "error",
                    "message": "'}' at column 73 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "'if' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/67/ValidUniqueSurveyNumberValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/naturalize/67/ValidUniqueSurveyNumberValidator.java\nindex f0d92a5dea7..54895a04967 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/67/ValidUniqueSurveyNumberValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/naturalize/67/ValidUniqueSurveyNumberValidator.java\n@@ -50,7 +50,7 @@ public class ValidUniqueSurveyNumberValidator\n     List<IdAndVersionProjection> surveys = surveyRepository\n         .findIdsByNumberAndDataAcquisitionProjectId(survey\n             .getNumber(), survey.getDataAcquisitionProjectId());\n-    if (surveys.size() > 1) {\n+if (surveys.size() > 1) {\n       return false;\n     }\n     if (surveys.size() == 1) {\n@@ -63,4 +63,4 @@ public class ValidUniqueSurveyNumberValidator\n     String numberWithVersionSuffix = \".*-sy\" + survey.getNumber() + \"\\\\$-[0-9]+\\\\.[0-9]+\\\\.[0-9]+$\";\n     return survey.getId().matches(numberWithVersionSuffix);\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "16",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 111).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "42",
                    "severity": "error",
                    "message": "'ConstraintValidatorContext' has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "55",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 161).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/67/ValidUniqueSurveyNumberValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/codebuff/67/ValidUniqueSurveyNumberValidator.java\nindex f0d92a5dea7..0f0a14388b6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/67/ValidUniqueSurveyNumberValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/codebuff/67/ValidUniqueSurveyNumberValidator.java\n@@ -1,12 +1,9 @@\n package eu.dzhw.fdz.metadatamanagement.surveymanagement.domain.validation;\n \n import java.util.List;\n-\n import javax.validation.ConstraintValidator;\n import javax.validation.ConstraintValidatorContext;\n-\n import org.springframework.beans.factory.annotation.Autowired;\n-\n import eu.dzhw.fdz.metadatamanagement.common.domain.projections.IdAndVersionProjection;\n import eu.dzhw.fdz.metadatamanagement.surveymanagement.domain.Survey;\n import eu.dzhw.fdz.metadatamanagement.surveymanagement.repository.SurveyRepository;\n@@ -14,8 +11,9 @@ import eu.dzhw.fdz.metadatamanagement.surveymanagement.repository.SurveyReposito\n /**\n  * Validates the uniqueness of number.\n  */\n-public class ValidUniqueSurveyNumberValidator\n-    implements ConstraintValidator<ValidUniqueSurveyNumber, Survey> {\n+\n+\n+public class ValidUniqueSurveyNumberValidator implements ConstraintValidator<ValidUniqueSurveyNumber, Survey> {\n \n   @Autowired\n   private SurveyRepository surveyRepository;\n@@ -25,8 +23,11 @@ public class ValidUniqueSurveyNumberValidator\n    *\n    * @see javax.validation.ConstraintValidator#initialize(java.lang.annotation.Annotation)\n    */\n+\n   @Override\n-  public void initialize(ValidUniqueSurveyNumber constraintAnnotation) {}\n+  public void initialize(ValidUniqueSurveyNumber constraintAnnotation) {\n+\n+  }\n \n   /*\n    * (non-Javadoc)\n@@ -34,8 +35,11 @@ public class ValidUniqueSurveyNumberValidator\n    * @see javax.validation.ConstraintValidator#isValid(java.lang.Object,\n    * javax.validation.ConstraintValidatorContext)\n    */\n+\n+\n   @Override\n-  public boolean isValid(Survey survey, ConstraintValidatorContext context) {\n+  public boolean isValid(Survey survey,\n+    ConstraintValidatorContext context) {\n     if (survey.getNumber() != null) {\n       if (survey.isShadow()) {\n         return containsValidShadowCopySurveyNumber(survey);\n@@ -43,19 +47,20 @@ public class ValidUniqueSurveyNumberValidator\n         return isValidMasterSurveyNumber(survey);\n       }\n     }\n+\n     return true;\n   }\n \n   private boolean isValidMasterSurveyNumber(Survey survey) {\n-    List<IdAndVersionProjection> surveys = surveyRepository\n-        .findIdsByNumberAndDataAcquisitionProjectId(survey\n-            .getNumber(), survey.getDataAcquisitionProjectId());\n+    List<IdAndVersionProjection> surveys = surveyRepository.findIdsByNumberAndDataAcquisitionProjectId(survey.getNumber(), survey.getDataAcquisitionProjectId());\n     if (surveys.size() > 1) {\n       return false;\n     }\n     if (surveys.size() == 1) {\n-      return surveys.get(0).getId().equals(survey.getId());\n+      return surveys.get(0).getId()\n+                           .equals(survey.getId());\n     }\n+\n     return true;\n   }\n \n@@ -63,4 +68,4 @@ public class ValidUniqueSurveyNumberValidator\n     String numberWithVersionSuffix = \".*-sy\" + survey.getNumber() + \"\\\\$-[0-9]+\\\\.[0-9]+\\\\.[0-9]+$\";\n     return survey.getId().matches(numberWithVersionSuffix);\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 22
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "29",
                    "column": "73",
                    "severity": "error",
                    "message": "'}' at column 73 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "29",
                    "column": "73",
                    "severity": "error",
                    "message": "'}' at column 73 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "36",
                    "severity": "error",
                    "message": "'METHOD_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/67/ValidUniqueSurveyNumberValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/styler_three_grams/67/ValidUniqueSurveyNumberValidator.java\nindex f0d92a5dea7..38f6970c59c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/67/ValidUniqueSurveyNumberValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/styler_three_grams/67/ValidUniqueSurveyNumberValidator.java\n@@ -27,7 +27,6 @@ public class ValidUniqueSurveyNumberValidator\n    */\n   @Override\n   public void initialize(ValidUniqueSurveyNumber constraintAnnotation) {}\n-\n   /*\n    * (non-Javadoc)\n    *\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
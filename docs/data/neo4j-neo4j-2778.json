{
    "project_name": "neo4j-neo4j",
    "error_id": "2778",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "84",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "144",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "60",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "133",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "60",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "54",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "78",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "119",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "93",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "93",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "182",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "182",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "188",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "188",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "188",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "191",
                    "column": "58",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "191",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "195",
                    "column": "60",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "195",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "216",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "216",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "219",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "220",
                    "column": "108",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "227",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "227",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "229",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "229",
                    "column": "105",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "237",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "237",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "239",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "239",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2778/RecordStorageConsistencyChecker.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2778/RecordStorageConsistencyChecker.java\nindex 0f5aa0b2568..13880d434f0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2778/RecordStorageConsistencyChecker.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2778/RecordStorageConsistencyChecker.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.consistency.checker;\n \n import org.eclipse.collections.api.map.primitive.MutableIntObjectMap;\n@@ -80,44 +81,45 @@ public class RecordStorageConsistencyChecker implements AutoCloseable\n     private final CheckerContext context;\n     private final ProgressMonitorFactory.MultiPartBuilder progress;\n \n-    public RecordStorageConsistencyChecker( PageCache pageCache, NeoStores neoStores, CountsStore counts, LabelScanStore labelScanStore,\n-            RelationshipTypeScanStore relationshipTypeScanStore, IndexAccessors indexAccessors, InconsistencyReport report,\n-            ProgressMonitorFactory progressFactory, Config config, int numberOfThreads, boolean debug, ConsistencyFlags consistencyFlags,\n-            NodeBasedMemoryLimiter.Factory memoryLimit, PageCacheTracer cacheTracer, MemoryTracker memoryTracker )\n+    public RecordStorageConsistencyChecker(PageCache pageCache, NeoStores neoStores, CountsStore counts, LabelScanStore labelScanStore,\n+                                           RelationshipTypeScanStore relationshipTypeScanStore, IndexAccessors indexAccessors, InconsistencyReport report,\n+                                           ProgressMonitorFactory progressFactory, Config config, int numberOfThreads, boolean debug,\n+                                           ConsistencyFlags consistencyFlags,\n+                                           NodeBasedMemoryLimiter.Factory memoryLimit, PageCacheTracer cacheTracer, MemoryTracker memoryTracker)\n     {\n         this.pageCache = pageCache;\n         this.neoStores = neoStores;\n         this.counts = counts;\n         this.cacheTracer = cacheTracer;\n-        int stopCountThreshold = config.get( consistency_checker_fail_fast_threshold );\n-        AtomicInteger stopCount = new AtomicInteger( 0 );\n+        int stopCountThreshold = config.get(consistency_checker_fail_fast_threshold);\n+        AtomicInteger stopCount = new AtomicInteger(0);\n         ConsistencyReporter.Monitor monitor = ConsistencyReporter.NO_MONITOR;\n-        if ( stopCountThreshold > 0 )\n+        if (stopCountThreshold > 0)\n         {\n-            monitor = ( ignoredArg1, ignoredArg2, ignoredArg3 ) ->\n+            monitor = (ignoredArg1, ignoredArg2, ignoredArg3) ->\n             {\n-                if ( !isCancelled() && stopCount.incrementAndGet() >= stopCountThreshold )\n+                if (!isCancelled() && stopCount.incrementAndGet() >= stopCountThreshold)\n                 {\n-                    cancel( \"Observed \" + stopCount.get() + \" inconsistencies.\" );\n+                    cancel(\"Observed \" + stopCount.get() + \" inconsistencies.\");\n                 }\n             };\n         }\n-        this.reporter = new ConsistencyReporter( report, monitor );\n+        this.reporter = new ConsistencyReporter(report, monitor);\n         this.tokenHolders = new TokenHolders(\n-                new DelegatingTokenHolder( new ReadOnlyTokenCreator(), TokenHolder.TYPE_PROPERTY_KEY ),\n-                new DelegatingTokenHolder( new ReadOnlyTokenCreator(), TokenHolder.TYPE_LABEL ),\n-                new DelegatingTokenHolder( new ReadOnlyTokenCreator(), TokenHolder.TYPE_RELATIONSHIP_TYPE ) );\n-        ParallelExecution execution = new ParallelExecution( numberOfThreads,\n-                exception -> cancel( \"Unexpected exception\" ), // Exceptions should interrupt all threads to exit faster\n-                DEFAULT_IDS_PER_CHUNK );\n-        RecordLoading recordLoading = new RecordLoading( neoStores );\n-        this.limiter = instantiateMemoryLimiter( memoryLimit );\n-        this.cacheAccess = new DefaultCacheAccess( defaultByteArray( limiter.rangeSize(), memoryTracker ), Counts.NONE, numberOfThreads );\n-        this.observedCounts = new CountsState( neoStores, cacheAccess, memoryTracker );\n-        this.progress = progressFactory.multipleParts( \"Consistency check\" );\n-        this.context = new CheckerContext( neoStores, indexAccessors, labelScanStore, relationshipTypeScanStore, execution,\n-                reporter, cacheAccess, tokenHolders, recordLoading, observedCounts, limiter, progress, pageCache, cacheTracer, memoryTracker,\n-                debug, consistencyFlags );\n+          new DelegatingTokenHolder(new ReadOnlyTokenCreator(), TokenHolder.TYPE_PROPERTY_KEY),\n+          new DelegatingTokenHolder(new ReadOnlyTokenCreator(), TokenHolder.TYPE_LABEL),\n+          new DelegatingTokenHolder(new ReadOnlyTokenCreator(), TokenHolder.TYPE_RELATIONSHIP_TYPE));\n+        ParallelExecution execution = new ParallelExecution(numberOfThreads,\n+          exception -> cancel(\"Unexpected exception\"), // Exceptions should interrupt all threads to exit faster\n+          DEFAULT_IDS_PER_CHUNK);\n+        RecordLoading recordLoading = new RecordLoading(neoStores);\n+        this.limiter = instantiateMemoryLimiter(memoryLimit);\n+        this.cacheAccess = new DefaultCacheAccess(defaultByteArray(limiter.rangeSize(), memoryTracker), Counts.NONE, numberOfThreads);\n+        this.observedCounts = new CountsState(neoStores, cacheAccess, memoryTracker);\n+        this.progress = progressFactory.multipleParts(\"Consistency check\");\n+        this.context = new CheckerContext(neoStores, indexAccessors, labelScanStore, relationshipTypeScanStore, execution,\n+          reporter, cacheAccess, tokenHolders, recordLoading, observedCounts, limiter, progress, pageCache, cacheTracer, memoryTracker,\n+          debug, consistencyFlags);\n     }\n \n     public void check() throws ConsistencyCheckIncompleteException\n@@ -127,71 +129,70 @@ public class RecordStorageConsistencyChecker implements AutoCloseable\n         {\n             context.initialize();\n             // Starting by loading all tokens from store into the TokenHolders, loaded in a safe way of course\n-            safeLoadTokens( neoStores );\n+            safeLoadTokens(neoStores);\n             // Check schema - constraints and indexes, that sort of thing\n             // This is done before instantiating the other checker instances because the schema checker will also\n             // populate maps regarding mandatory properties which the node/relationship checkers uses\n-            SchemaChecker schemaChecker = new SchemaChecker( context );\n+            SchemaChecker schemaChecker = new SchemaChecker(context);\n             MutableIntObjectMap<MutableIntSet> mandatoryNodeProperties = new IntObjectHashMap<>();\n             MutableIntObjectMap<MutableIntSet> mandatoryRelationshipProperties = new IntObjectHashMap<>();\n-            try ( var cursorTracer = cacheTracer.createPageCursorTracer( SCHEMA_CONSISTENCY_CHECKER_TAG ) )\n+            try (var cursorTracer = cacheTracer.createPageCursorTracer(SCHEMA_CONSISTENCY_CHECKER_TAG))\n             {\n-                schemaChecker.check( mandatoryNodeProperties, mandatoryRelationshipProperties, cursorTracer );\n+                schemaChecker.check(mandatoryNodeProperties, mandatoryRelationshipProperties, cursorTracer);\n             }\n \n             // Some pieces of check logic are extracted from this main class to reduce the size of this class. Instantiate those here first\n-            NodeChecker nodeChecker = new NodeChecker( context, mandatoryNodeProperties );\n-            IndexChecker indexChecker = new IndexChecker( context, EntityType.NODE );\n-            RelationshipChecker relationshipChecker = new RelationshipChecker( context, mandatoryRelationshipProperties );\n-            RelationshipGroupChecker relationshipGroupChecker = new RelationshipGroupChecker( context );\n-            RelationshipChainChecker relationshipChainChecker = new RelationshipChainChecker( context );\n+            NodeChecker nodeChecker = new NodeChecker(context, mandatoryNodeProperties);\n+            IndexChecker indexChecker = new IndexChecker(context, EntityType.NODE);\n+            RelationshipChecker relationshipChecker = new RelationshipChecker(context, mandatoryRelationshipProperties);\n+            RelationshipGroupChecker relationshipGroupChecker = new RelationshipGroupChecker(context);\n+            RelationshipChainChecker relationshipChainChecker = new RelationshipChainChecker(context);\n             ProgressMonitorFactory.Completer progressCompleter = progress.build();\n \n             int numberOfRanges = limiter.numberOfRanges();\n-            for ( int i = 1; limiter.hasNext(); i++ )\n+            for (int i = 1; limiter.hasNext(); i++)\n             {\n-                if ( isCancelled() )\n+                if (isCancelled())\n                 {\n                     break;\n                 }\n \n                 LongRange range = limiter.next();\n-                if ( numberOfRanges > 1 )\n+                if (numberOfRanges > 1)\n                 {\n-                    context.debug( \"=== Checking range %d/%d (%s) ===\", i, numberOfRanges, range );\n+                    context.debug(\"=== Checking range %d/%d (%s) ===\", i, numberOfRanges, range);\n                 }\n                 context.initializeRange();\n \n                 // Tell the cache that the pivot node id is the low end of this range. This will make all interactions with the cache\n                 // take that into consideration when working with offset arrays where the index is based on node ids.\n-                cacheAccess.setPivotId( range.from() );\n+                cacheAccess.setPivotId(range.from());\n \n                 // Go into a node-centric mode where the nodes themselves are checked and somewhat cached off-heap.\n                 // Then while we have the nodes loaded in cache do all other checking that has anything to do with nodes\n                 // so that the \"other\" store can be checked sequentially and the random node lookups will be cheap\n-                context.runIfAllowed( indexChecker, range );\n-                cacheAccess.setCacheSlotSizesAndClear( DEFAULT_SLOT_SIZES );\n-                context.runIfAllowed( nodeChecker, range );\n-                context.runIfAllowed( relationshipGroupChecker, range );\n-                context.runIfAllowed( relationshipChecker, range );\n-                context.runIfAllowed( relationshipChainChecker, range );\n+                context.runIfAllowed(indexChecker, range);\n+                cacheAccess.setCacheSlotSizesAndClear(DEFAULT_SLOT_SIZES);\n+                context.runIfAllowed(nodeChecker, range);\n+                context.runIfAllowed(relationshipGroupChecker, range);\n+                context.runIfAllowed(relationshipChecker, range);\n+                context.runIfAllowed(relationshipChainChecker, range);\n             }\n \n-            if ( !isCancelled() && context.consistencyFlags.isCheckGraph() )\n+            if (!isCancelled() && context.consistencyFlags.isCheckGraph())\n             {\n                 // All counts we've observed while doing other checking along the way we compare against the counts store here\n                 checkCounts();\n             }\n             progressCompleter.close();\n-        }\n-        catch ( Exception e )\n+        } catch (Exception e)\n         {\n-            cancel( \"ConsistencyChecker failed unexpectedly\" );\n-            throw new ConsistencyCheckIncompleteException( e );\n+            cancel(\"ConsistencyChecker failed unexpectedly\");\n+            throw new ConsistencyCheckIncompleteException(e);\n         }\n     }\n \n-    private NodeBasedMemoryLimiter instantiateMemoryLimiter( NodeBasedMemoryLimiter.Factory memoryLimit )\n+    private NodeBasedMemoryLimiter instantiateMemoryLimiter(NodeBasedMemoryLimiter.Factory memoryLimit)\n     {\n         // The checker makes use of a large memory array to hold data per node. For large stores there may not be enough memory\n         // to hold all node data and in that case the checking will happen iteratively where one part of the node store is selected\n@@ -200,7 +201,7 @@ public class RecordStorageConsistencyChecker implements AutoCloseable\n \n         long pageCacheMemory = pageCache.maxCachedPages() * pageCache.pageSize();\n         long nodeCount = neoStores.getNodeStore().getHighId();\n-        return memoryLimit.create( pageCacheMemory, nodeCount );\n+        return memoryLimit.create(pageCacheMemory, nodeCount);\n     }\n \n     @Override\n@@ -212,32 +213,32 @@ public class RecordStorageConsistencyChecker implements AutoCloseable\n \n     private void checkCounts()\n     {\n-        if ( counts != CountsStore.NULL_INSTANCE )\n+        if (counts != CountsStore.NULL_INSTANCE)\n         {\n             // Report unexpected counts from existing counts store --> counts collected in this consistency check\n-            try ( CountsState.CountsChecker checker = observedCounts.checker( reporter );\n-                  var cursorTracer = cacheTracer.createPageCursorTracer( COUNT_STORE_CONSISTENCY_CHECKER_TAG ) )\n+            try (CountsState.CountsChecker checker = observedCounts.checker(reporter);\n+                 var cursorTracer = cacheTracer.createPageCursorTracer(COUNT_STORE_CONSISTENCY_CHECKER_TAG))\n             {\n-                counts.accept( checker, cursorTracer );\n+                counts.accept(checker, cursorTracer);\n             } // Here when closing we report counts that we've seen, but the counts store doesn't have\n         }\n     }\n \n-    private void safeLoadTokens( NeoStores neoStores )\n+    private void safeLoadTokens(NeoStores neoStores)\n     {\n-        try ( var cursorTracer = cacheTracer.createPageCursorTracer( CONSISTENCY_CHECKER_TOKEN_LOADER_TAG ) )\n+        try (var cursorTracer = cacheTracer.createPageCursorTracer(CONSISTENCY_CHECKER_TOKEN_LOADER_TAG))\n         {\n-            tokenHolders.relationshipTypeTokens().setInitialTokens( RecordLoading.safeLoadTokens( neoStores.getRelationshipTypeTokenStore(), cursorTracer ) );\n-            tokenHolders.labelTokens().setInitialTokens( RecordLoading.safeLoadTokens( neoStores.getLabelTokenStore(), cursorTracer ) );\n-            tokenHolders.propertyKeyTokens().setInitialTokens( RecordLoading.safeLoadTokens( neoStores.getPropertyKeyTokenStore(), cursorTracer ) );\n+            tokenHolders.relationshipTypeTokens().setInitialTokens(RecordLoading.safeLoadTokens(neoStores.getRelationshipTypeTokenStore(), cursorTracer));\n+            tokenHolders.labelTokens().setInitialTokens(RecordLoading.safeLoadTokens(neoStores.getLabelTokenStore(), cursorTracer));\n+            tokenHolders.propertyKeyTokens().setInitialTokens(RecordLoading.safeLoadTokens(neoStores.getPropertyKeyTokenStore(), cursorTracer));\n         }\n     }\n \n-    private void cancel( String message )\n+    private void cancel(String message)\n     {\n-        if ( !isCancelled() )\n+        if (!isCancelled())\n         {\n-            context.debug( \"Stopping: %s\", message );\n+            context.debug(\"Stopping: %s\", message);\n             context.cancel();\n         }\n     }\n",
            "diff_size": 66
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2778/RecordStorageConsistencyChecker.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/2778/RecordStorageConsistencyChecker.java\nindex 0f5aa0b2568..c8337d2f674 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2778/RecordStorageConsistencyChecker.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/2778/RecordStorageConsistencyChecker.java\n@@ -246,4 +246,4 @@ public class RecordStorageConsistencyChecker implements AutoCloseable\n     {\n         return context.isCancelled();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
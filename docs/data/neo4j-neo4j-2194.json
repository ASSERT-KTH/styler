{
    "project_name": "neo4j-neo4j",
    "error_id": "2194",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "92",
                    "column": "66",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "133",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "113",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "63",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "121",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "134",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "60",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "142",
                    "column": "113",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "148",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "119",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "158",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "158",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "165",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "165",
                    "column": "130",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "67",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "82",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "126",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "133",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "134",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "186",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "186",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "117",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "124",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "216",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "216",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "218",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "218",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "242",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "251",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "251",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "254",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "254",
                    "column": "116",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "257",
                    "column": "76",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "257",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "258",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "258",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "259",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "259",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "262",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "262",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "270",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "270",
                    "column": "117",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "275",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "275",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "279",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "279",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "288",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "288",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "299",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "299",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "305",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "305",
                    "column": "110",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "311",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "311",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "314",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "314",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "317",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "317",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "324",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "324",
                    "column": "117",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "326",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "326",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "329",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "329",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "334",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "334",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "334",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "336",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "336",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "345",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "345",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "359",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "359",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "361",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "361",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "364",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "364",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "364",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "366",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "366",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "370",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "370",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "372",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "372",
                    "column": "109",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "374",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "374",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "381",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "381",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "385",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "385",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "388",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "388",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "395",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "395",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "400",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "400",
                    "column": "118",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "405",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "405",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "405",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "407",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "407",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "413",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "413",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "424",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "424",
                    "column": "107",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "427",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "427",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "431",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "431",
                    "column": "66",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "432",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "432",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "440",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "440",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "446",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "446",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2194/GBPTreeCountsStore.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2194/GBPTreeCountsStore.java\nindex 4d5cb587ec2..404b7138aa1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2194/GBPTreeCountsStore.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2194/GBPTreeCountsStore.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.internal.counts;\n \n import org.eclipse.collections.api.set.primitive.MutableLongSet;\n@@ -81,95 +82,93 @@ import static org.neo4j.storageengine.api.TransactionIdStore.BASE_TX_ID;\n  */\n public class GBPTreeCountsStore implements CountsStore\n {\n-    public static final Monitor NO_MONITOR = txId -> {};\n+    public static final Monitor NO_MONITOR = txId -> {\n+    };\n     private static final long NEEDS_REBUILDING_HIGH_ID = 0;\n     private static final String OPEN_COUNT_STORE_TAG = \"openCountStore\";\n \n-    private final GBPTree<CountsKey,CountsValue> tree;\n+    private final GBPTree<CountsKey, CountsValue> tree;\n     private final OutOfOrderSequence idSequence;\n-    private final ReadWriteLock lock = new ReentrantReadWriteLock( true );\n+    private final ReadWriteLock lock = new ReentrantReadWriteLock(true);\n     private final CountsLayout layout = new CountsLayout();\n     private final CountsBuilder initialCountsBuilder;\n     private final boolean readOnly;\n     private final Monitor monitor;\n-    private volatile ConcurrentHashMap<CountsKey,AtomicLong> changes = new ConcurrentHashMap<>();\n+    private volatile ConcurrentHashMap<CountsKey, AtomicLong> changes = new ConcurrentHashMap<>();\n     private final TxIdInformation txIdInformation;\n     private volatile boolean started;\n \n-    public GBPTreeCountsStore( PageCache pageCache, Path file, FileSystemAbstraction fileSystem, RecoveryCleanupWorkCollector recoveryCollector,\n-            CountsBuilder initialCountsBuilder, boolean readOnly, PageCacheTracer pageCacheTracer, Monitor monitor ) throws IOException\n+    public GBPTreeCountsStore(PageCache pageCache, Path file, FileSystemAbstraction fileSystem, RecoveryCleanupWorkCollector recoveryCollector,\n+                              CountsBuilder initialCountsBuilder, boolean readOnly, PageCacheTracer pageCacheTracer, Monitor monitor) throws IOException\n     {\n         this.readOnly = readOnly;\n         this.monitor = monitor;\n \n         // First just read the header so that we can avoid creating it if this store is read-only\n-        CountsHeader header = new CountsHeader( NEEDS_REBUILDING_HIGH_ID );\n-        GBPTree<CountsKey,CountsValue> instantiatedTree;\n+        CountsHeader header = new CountsHeader(NEEDS_REBUILDING_HIGH_ID);\n+        GBPTree<CountsKey, CountsValue> instantiatedTree;\n         try\n         {\n-            instantiatedTree = instantiateTree( pageCache, file, recoveryCollector, readOnly, header, pageCacheTracer );\n-        }\n-        catch ( MetadataMismatchException e )\n+            instantiatedTree = instantiateTree(pageCache, file, recoveryCollector, readOnly, header, pageCacheTracer);\n+        } catch (MetadataMismatchException e)\n         {\n             // Corrupt, delete and rebuild\n-            fileSystem.deleteFileOrThrow( file );\n-            header = new CountsHeader( NEEDS_REBUILDING_HIGH_ID );\n-            instantiatedTree = instantiateTree( pageCache, file, recoveryCollector, readOnly, header, pageCacheTracer );\n+            fileSystem.deleteFileOrThrow(file);\n+            header = new CountsHeader(NEEDS_REBUILDING_HIGH_ID);\n+            instantiatedTree = instantiateTree(pageCache, file, recoveryCollector, readOnly, header, pageCacheTracer);\n         }\n         this.tree = instantiatedTree;\n         boolean successful = false;\n-        try ( var cursorTracer = pageCacheTracer.createPageCursorTracer( OPEN_COUNT_STORE_TAG ) )\n+        try (var cursorTracer = pageCacheTracer.createPageCursorTracer(OPEN_COUNT_STORE_TAG))\n         {\n-            this.txIdInformation = readTxIdInformation( header.highestGapFreeTxId(), cursorTracer );\n+            this.txIdInformation = readTxIdInformation(header.highestGapFreeTxId(), cursorTracer);\n             // Recreate the tx id state as it was from last checkpoint (or base if empty)\n-            this.idSequence = new ArrayQueueOutOfOrderSequence( txIdInformation.highestGapFreeTxId, 200, EMPTY_LONG_ARRAY );\n-            this.txIdInformation.strayTxIds.forEach( txId -> idSequence.offer( txId, EMPTY_LONG_ARRAY ) );\n+            this.idSequence = new ArrayQueueOutOfOrderSequence(txIdInformation.highestGapFreeTxId, 200, EMPTY_LONG_ARRAY);\n+            this.txIdInformation.strayTxIds.forEach(txId -> idSequence.offer(txId, EMPTY_LONG_ARRAY));\n             // Only care about initial counts rebuilding if the tree was created right now when opening this tree\n             // The actual rebuilding will happen in start()\n             this.initialCountsBuilder = header.wasRead() && header.highestGapFreeTxId() != NEEDS_REBUILDING_HIGH_ID ? null : initialCountsBuilder;\n             successful = true;\n-        }\n-        finally\n+        } finally\n         {\n-            if ( !successful )\n+            if (!successful)\n             {\n-                closeAllUnchecked( tree );\n+                closeAllUnchecked(tree);\n             }\n         }\n     }\n \n-    private GBPTree<CountsKey,CountsValue> instantiateTree( PageCache pageCache, Path file, RecoveryCleanupWorkCollector recoveryCollector, boolean readOnly,\n-            CountsHeader header, PageCacheTracer pageCacheTracer )\n+    private GBPTree<CountsKey, CountsValue> instantiateTree(PageCache pageCache, Path file, RecoveryCleanupWorkCollector recoveryCollector, boolean readOnly,\n+                                                            CountsHeader header, PageCacheTracer pageCacheTracer)\n     {\n         try\n         {\n-            return new GBPTree<>( pageCache, file, layout, GBPTree.NO_MONITOR, header, header, recoveryCollector, readOnly, pageCacheTracer,\n-                    immutable.empty(), \"Counts store\" );\n-        }\n-        catch ( TreeFileNotFoundException e )\n+            return new GBPTree<>(pageCache, file, layout, GBPTree.NO_MONITOR, header, header, recoveryCollector, readOnly, pageCacheTracer,\n+              immutable.empty(), \"Counts store\");\n+        } catch (TreeFileNotFoundException e)\n         {\n             throw new IllegalStateException(\n-                    \"Counts store file could not be found, most likely this database needs to be recovered, file:\" + file, e );\n+              \"Counts store file could not be found, most likely this database needs to be recovered, file:\" + file, e);\n         }\n     }\n \n     // === Life cycle ===\n \n     @Override\n-    public void start( PageCursorTracer cursorTracer, MemoryTracker memoryTracker ) throws IOException\n+    public void start(PageCursorTracer cursorTracer, MemoryTracker memoryTracker) throws IOException\n     {\n         // Execute the initial counts building if we need to, i.e. if instantiation of this counts store had to create it\n-        if ( initialCountsBuilder != null )\n+        if (initialCountsBuilder != null)\n         {\n-            if ( readOnly )\n+            if (readOnly)\n             {\n-                throw new IllegalStateException( \"Counts store needs rebuilding, most likely this database needs to be recovered.\" );\n+                throw new IllegalStateException(\"Counts store needs rebuilding, most likely this database needs to be recovered.\");\n             }\n-            Lock lock = lock( this.lock.writeLock() );\n+            Lock lock = lock(this.lock.writeLock());\n             long txId = initialCountsBuilder.lastCommittedTxId();\n-            try ( CountsAccessor.Updater updater = new CountUpdater( new TreeWriter( tree.writer( cursorTracer ), idSequence, txId ), lock ) )\n+            try (CountsAccessor.Updater updater = new CountUpdater(new TreeWriter(tree.writer(cursorTracer), idSequence, txId), lock))\n             {\n-                initialCountsBuilder.initialize( updater, cursorTracer, memoryTracker );\n+                initialCountsBuilder.initialize(updater, cursorTracer, memoryTracker);\n             }\n         }\n         started = true;\n@@ -178,18 +177,18 @@ public class GBPTreeCountsStore implements CountsStore\n     @Override\n     public void close()\n     {\n-        closeAllUnchecked( tree );\n+        closeAllUnchecked(tree);\n     }\n \n     // === Writes ===\n \n     @Override\n-    public CountsAccessor.Updater apply( long txId, PageCursorTracer cursorTracer )\n+    public CountsAccessor.Updater apply(long txId, PageCursorTracer cursorTracer)\n     {\n-        Preconditions.checkState( !readOnly, \"This counts store is read-only\" );\n-        Lock lock = lock( this.lock.readLock() );\n+        Preconditions.checkState(!readOnly, \"This counts store is read-only\");\n+        Lock lock = lock(this.lock.readLock());\n \n-        boolean alreadyApplied = txIdInformation.txIdIsAlreadyApplied( txId );\n+        boolean alreadyApplied = txIdInformation.txIdIsAlreadyApplied(txId);\n         // Why have this check below? Why should we not apply transactions before started when we have an initial counts builder?\n         // Consider the following scenario:\n         // - Create node N\n@@ -205,18 +204,18 @@ public class GBPTreeCountsStore implements CountsStore\n         // since there can never be a negative amount of, say nodes. The counts store will be rebuilt after recovery anyway,\n         // so ignore these transactions.\n         boolean inRecoveryOnEmptyCountsStore = initialCountsBuilder != null && !started;\n-        if ( alreadyApplied || inRecoveryOnEmptyCountsStore )\n+        if (alreadyApplied || inRecoveryOnEmptyCountsStore)\n         {\n             lock.unlock();\n-            monitor.ignoredTransaction( txId );\n+            monitor.ignoredTransaction(txId);\n             return NO_OP_UPDATER;\n         }\n-        return new CountUpdater( new MapWriter( key -> readCountFromTree( key, cursorTracer ), changes, idSequence, txId ), lock );\n+        return new CountUpdater(new MapWriter(key -> readCountFromTree(key, cursorTracer), changes, idSequence, txId), lock);\n     }\n \n-    public void checkpoint( IOLimiter ioLimiter, PageCursorTracer cursorTracer ) throws IOException\n+    public void checkpoint(IOLimiter ioLimiter, PageCursorTracer cursorTracer) throws IOException\n     {\n-        if ( readOnly )\n+        if (readOnly)\n         {\n             return;\n         }\n@@ -224,7 +223,7 @@ public class GBPTreeCountsStore implements CountsStore\n         // First acquire the write lock. This is a fair lock and will wait for currently applying transactions to finish.\n         // This could potentially block appliers around this point since they will respect the fairness too.\n         // The good thing is that the lock is held very very briefly.\n-        Lock writeLock = lock( this.lock.writeLock() );\n+        Lock writeLock = lock(this.lock.writeLock());\n \n         // When we have the lock we do two things (no updates will come in while we have it):\n         OutOfOrderSequence.Snapshot txIdSnapshot;\n@@ -237,60 +236,59 @@ public class GBPTreeCountsStore implements CountsStore\n             // We have to write them while we have the lock since we start from a new empty \"changes\" cache,\n             // otherwise an applying transaction after we've released the lock below but before writing the changes to the tree\n             // could load old counts into the new changes cache and therefore corrupt the counts store.\n-            ConcurrentHashMap<CountsKey,AtomicLong> changesToWrite = changes;\n-            writeCountsChanges( changesToWrite, cursorTracer );\n+            ConcurrentHashMap<CountsKey, AtomicLong> changesToWrite = changes;\n+            writeCountsChanges(changesToWrite, cursorTracer);\n             changes = new ConcurrentHashMap<>();\n-        }\n-        finally\n+        } finally\n         {\n             writeLock.unlock();\n         }\n \n         // Now update the transaction information in the tree\n-        updateTxIdInformationInTree( txIdSnapshot, cursorTracer );\n+        updateTxIdInformationInTree(txIdSnapshot, cursorTracer);\n \n         // Good, check-point all these changes\n-        tree.checkpoint( ioLimiter, new CountsHeader( txIdSnapshot.highestGapFree()[0] ), cursorTracer );\n+        tree.checkpoint(ioLimiter, new CountsHeader(txIdSnapshot.highestGapFree()[0]), cursorTracer);\n     }\n \n-    private void writeCountsChanges( ConcurrentHashMap<CountsKey,AtomicLong> changes, PageCursorTracer cursorTracer ) throws IOException\n+    private void writeCountsChanges(ConcurrentHashMap<CountsKey, AtomicLong> changes, PageCursorTracer cursorTracer) throws IOException\n     {\n         // Sort the entries in the natural tree order to get more performance in the writer\n-        List<Map.Entry<CountsKey,AtomicLong>> changeList = new ArrayList<>( changes.entrySet() );\n-        changeList.sort( ( e1, e2 ) -> layout.compare( e1.getKey(), e2.getKey() ) );\n-        try ( Writer<CountsKey,CountsValue> writer = tree.writer( cursorTracer ) )\n+        List<Map.Entry<CountsKey, AtomicLong>> changeList = new ArrayList<>(changes.entrySet());\n+        changeList.sort((e1, e2) -> layout.compare(e1.getKey(), e2.getKey()));\n+        try (Writer<CountsKey, CountsValue> writer = tree.writer(cursorTracer))\n         {\n             CountsValue value = new CountsValue();\n-            for ( Map.Entry<CountsKey,AtomicLong> entry : changeList )\n+            for (Map.Entry<CountsKey, AtomicLong> entry : changeList)\n             {\n                 long count = entry.getValue().get();\n-                merge( writer, entry.getKey(), value.initialize( count ) );\n+                merge(writer, entry.getKey(), value.initialize(count));\n             }\n         }\n     }\n \n-    private void updateTxIdInformationInTree( OutOfOrderSequence.Snapshot txIdSnapshot, PageCursorTracer cursorTracer ) throws IOException\n+    private void updateTxIdInformationInTree(OutOfOrderSequence.Snapshot txIdSnapshot, PageCursorTracer cursorTracer) throws IOException\n     {\n         PrimitiveLongArrayQueue strayIds = new PrimitiveLongArrayQueue();\n-        visitStrayTxIdsInTree( strayIds::enqueue, cursorTracer );\n+        visitStrayTxIdsInTree(strayIds::enqueue, cursorTracer);\n \n-        try ( Writer<CountsKey,CountsValue> writer = tree.writer( cursorTracer ) )\n+        try (Writer<CountsKey, CountsValue> writer = tree.writer(cursorTracer))\n         {\n             // First clear all the stray ids from the previous checkpoint\n             CountsValue value = new CountsValue();\n-            while ( !strayIds.isEmpty() )\n+            while (!strayIds.isEmpty())\n             {\n                 long strayTxId = strayIds.dequeue();\n-                writer.remove( strayTxId( strayTxId ) );\n+                writer.remove(strayTxId(strayTxId));\n             }\n \n             // And write all stray txIds into the tree\n-            value.initialize( 0 );\n+            value.initialize(0);\n             long[][] strayTxIds = txIdSnapshot.idsOutOfOrder();\n-            for ( long[] strayTxId : strayTxIds )\n+            for (long[] strayTxId : strayTxIds)\n             {\n                 long txId = strayTxId[0];\n-                writer.put( strayTxId( txId ), value );\n+                writer.put(strayTxId(txId), value);\n             }\n         }\n     }\n@@ -298,45 +296,44 @@ public class GBPTreeCountsStore implements CountsStore\n     // === Reads ===\n \n     @Override\n-    public long nodeCount( int labelId, PageCursorTracer cursorTracer )\n+    public long nodeCount(int labelId, PageCursorTracer cursorTracer)\n     {\n-        return read( nodeKey( labelId ), cursorTracer );\n+        return read(nodeKey(labelId), cursorTracer);\n     }\n \n     @Override\n-    public long relationshipCount( int startLabelId, int typeId, int endLabelId, PageCursorTracer cursorTracer )\n+    public long relationshipCount(int startLabelId, int typeId, int endLabelId, PageCursorTracer cursorTracer)\n     {\n-        return read( relationshipKey( startLabelId, typeId, endLabelId ), cursorTracer );\n+        return read(relationshipKey(startLabelId, typeId, endLabelId), cursorTracer);\n     }\n \n     @Override\n-    public void accept( CountsVisitor visitor, PageCursorTracer cursorTracer )\n+    public void accept(CountsVisitor visitor, PageCursorTracer cursorTracer)\n     {\n         // First visit the changes that we haven't check-pointed yet\n-        for ( Map.Entry<CountsKey,AtomicLong> changedEntry : changes.entrySet() )\n+        for (Map.Entry<CountsKey, AtomicLong> changedEntry : changes.entrySet())\n         {\n             // Our simplistic approach to the changes map makes it contain 0 counts at times, we don't remove entries from it\n-            if ( changedEntry.getValue().get() != 0 )\n+            if (changedEntry.getValue().get() != 0)\n             {\n-                changedEntry.getKey().accept( visitor, changedEntry.getValue().get() );\n+                changedEntry.getKey().accept(visitor, changedEntry.getValue().get());\n             }\n         }\n \n         // Then visit the remaining stored changes from the last check-point\n-        try ( Seeker<CountsKey,CountsValue> seek = tree.seek( CountsKey.MIN_COUNT, CountsKey.MAX_COUNT, cursorTracer ) )\n+        try (Seeker<CountsKey, CountsValue> seek = tree.seek(CountsKey.MIN_COUNT, CountsKey.MAX_COUNT, cursorTracer))\n         {\n-            while ( seek.next() )\n+            while (seek.next())\n             {\n                 CountsKey key = seek.key();\n-                if ( !changes.containsKey( key ) )\n+                if (!changes.containsKey(key))\n                 {\n-                    key.accept( visitor, seek.value().count );\n+                    key.accept(visitor, seek.value().count);\n                 }\n             }\n-        }\n-        catch ( IOException e )\n+        } catch (IOException e)\n         {\n-            throw new UnderlyingStorageException( e );\n+            throw new UnderlyingStorageException(e);\n         }\n     }\n \n@@ -345,113 +342,112 @@ public class GBPTreeCountsStore implements CountsStore\n         return idSequence.getHighestGapFreeNumber();\n     }\n \n-    private long read( CountsKey key, PageCursorTracer cursorTracer )\n+    private long read(CountsKey key, PageCursorTracer cursorTracer)\n     {\n-        AtomicLong changedCount = changes.get( key );\n-        return changedCount != null ? changedCount.get() : readCountFromTree( key, cursorTracer );\n+        AtomicLong changedCount = changes.get(key);\n+        return changedCount != null ? changedCount.get() : readCountFromTree(key, cursorTracer);\n     }\n \n     /**\n      * Read the count from the store. For writes this is done on an unchanging tree because we have the read lock where check-pointing\n      * (where changes are written to the tree) can only be done if the write-lock is acquired. For plain unmodified reads this is read from the tree\n      * without a lock, which is fine and follows general transaction isolation guarantees.\n+     *\n      * @param key count value to read from the tree.\n      * @return AtomicLong with the read count, or initialized to 0 if the count didn't exist in the tree.\n      */\n-    private long readCountFromTree( CountsKey key, PageCursorTracer cursorTracer )\n+    private long readCountFromTree(CountsKey key, PageCursorTracer cursorTracer)\n     {\n-        try ( Seeker<CountsKey,CountsValue> seek = tree.seek( key, key, cursorTracer ) )\n+        try (Seeker<CountsKey, CountsValue> seek = tree.seek(key, key, cursorTracer))\n         {\n             return seek.next() ? seek.value().count : 0;\n-        }\n-        catch ( IOException e )\n+        } catch (IOException e)\n         {\n-            throw new UncheckedIOException( e );\n+            throw new UncheckedIOException(e);\n         }\n     }\n \n-    private void visitStrayTxIdsInTree( LongConsumer visitor, PageCursorTracer cursorTracer ) throws IOException\n+    private void visitStrayTxIdsInTree(LongConsumer visitor, PageCursorTracer cursorTracer) throws IOException\n     {\n-        try ( Seeker<CountsKey,CountsValue> seek = tree.seek( MIN_STRAY_TX_ID, MAX_STRAY_TX_ID, cursorTracer ) )\n+        try (Seeker<CountsKey, CountsValue> seek = tree.seek(MIN_STRAY_TX_ID, MAX_STRAY_TX_ID, cursorTracer))\n         {\n-            while ( seek.next() )\n+            while (seek.next())\n             {\n-                visitor.accept( seek.key().first );\n+                visitor.accept(seek.key().first);\n             }\n         }\n     }\n \n-    private TxIdInformation readTxIdInformation( long highestGapFreeTxId, PageCursorTracer cursorTracer ) throws IOException\n+    private TxIdInformation readTxIdInformation(long highestGapFreeTxId, PageCursorTracer cursorTracer) throws IOException\n     {\n         MutableLongSet strayTxIds = new LongHashSet();\n-        visitStrayTxIdsInTree( strayTxIds::add, cursorTracer );\n-        return new TxIdInformation( highestGapFreeTxId, strayTxIds );\n+        visitStrayTxIdsInTree(strayTxIds::add, cursorTracer);\n+        return new TxIdInformation(highestGapFreeTxId, strayTxIds);\n     }\n \n-    private static Lock lock( Lock lock )\n+    private static Lock lock(Lock lock)\n     {\n         lock.lock();\n         return lock;\n     }\n \n     @Override\n-    public boolean consistencyCheck( ReporterFactory reporterFactory, PageCursorTracer cursorTracer )\n+    public boolean consistencyCheck(ReporterFactory reporterFactory, PageCursorTracer cursorTracer)\n     {\n-        return consistencyCheck( reporterFactory.getClass( GBPTreeConsistencyCheckVisitor.class ), cursorTracer );\n+        return consistencyCheck(reporterFactory.getClass(GBPTreeConsistencyCheckVisitor.class), cursorTracer);\n     }\n \n-    private boolean consistencyCheck( GBPTreeConsistencyCheckVisitor<CountsKey> visitor, PageCursorTracer cursorTracer )\n+    private boolean consistencyCheck(GBPTreeConsistencyCheckVisitor<CountsKey> visitor, PageCursorTracer cursorTracer)\n     {\n         try\n         {\n-            return tree.consistencyCheck( visitor, cursorTracer );\n-        }\n-        catch ( IOException e )\n+            return tree.consistencyCheck(visitor, cursorTracer);\n+        } catch (IOException e)\n         {\n-            throw new UncheckedIOException( e );\n+            throw new UncheckedIOException(e);\n         }\n     }\n \n     public interface Monitor\n     {\n-        void ignoredTransaction( long txId );\n+        void ignoredTransaction(long txId);\n     }\n \n     /**\n      * Dumps the contents of a counts store.\n      *\n      * @param pageCache {@link PageCache} to use to map the counts store file into.\n-     * @param file {@link Path} pointing out the counts store.\n-     * @param out to print to.\n+     * @param file      {@link Path} pointing out the counts store.\n+     * @param out       to print to.\n      * @throws IOException on missing file or I/O error.\n      */\n-    public static void dump( PageCache pageCache, Path file, PrintStream out, PageCursorTracer cursorTracer ) throws IOException\n+    public static void dump(PageCache pageCache, Path file, PrintStream out, PageCursorTracer cursorTracer) throws IOException\n     {\n         // First check if it even exists as we don't really want to create it as part of dumping it. readHeader will throw if not found\n-        CountsHeader header = new CountsHeader( BASE_TX_ID );\n-        GBPTree.readHeader( pageCache, file, header, cursorTracer );\n+        CountsHeader header = new CountsHeader(BASE_TX_ID);\n+        GBPTree.readHeader(pageCache, file, header, cursorTracer);\n \n         // Now open it and dump its contents\n-        try ( GBPTree<CountsKey,CountsValue> tree = new GBPTree<>( pageCache, file, new CountsLayout(), GBPTree.NO_MONITOR, header, GBPTree.NO_HEADER_WRITER,\n-                RecoveryCleanupWorkCollector.ignore(), true, NULL, immutable.empty(), \"Counts store\" ) )\n+        try (GBPTree<CountsKey, CountsValue> tree = new GBPTree<>(pageCache, file, new CountsLayout(), GBPTree.NO_MONITOR, header, GBPTree.NO_HEADER_WRITER,\n+          RecoveryCleanupWorkCollector.ignore(), true, NULL, immutable.empty(), \"Counts store\"))\n         {\n-            out.printf( \"Highest gap-free txId: %d%n\", header.highestGapFreeTxId() );\n-            tree.visit( new GBPTreeVisitor.Adaptor<>()\n+            out.printf(\"Highest gap-free txId: %d%n\", header.highestGapFreeTxId());\n+            tree.visit(new GBPTreeVisitor.Adaptor<>()\n             {\n                 private CountsKey key;\n \n                 @Override\n-                public void key( CountsKey key, boolean isLeaf, long offloadId )\n+                public void key(CountsKey key, boolean isLeaf, long offloadId)\n                 {\n                     this.key = key;\n                 }\n \n                 @Override\n-                public void value( CountsValue value )\n+                public void value(CountsValue value)\n                 {\n-                    out.printf( \"%s = %d%n\", key, value.count );\n+                    out.printf(\"%s = %d%n\", key, value.count);\n                 }\n-            }, cursorTracer );\n+            }, cursorTracer);\n         }\n     }\n }\n",
            "diff_size": 122
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "neo4j-neo4j",
    "error_id": "500",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "34",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "34",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "119",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/500/PrintingImportLogicMonitor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/500/PrintingImportLogicMonitor.java\nindex aba5db4560f..eed5fc6bd1c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/500/PrintingImportLogicMonitor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/500/PrintingImportLogicMonitor.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.importer;\n \n import java.io.PrintStream;\n@@ -30,7 +31,7 @@ class PrintingImportLogicMonitor implements ImportLogic.Monitor\n     private final PrintStream out;\n     private final PrintStream err;\n \n-    PrintingImportLogicMonitor( PrintStream out, PrintStream err )\n+    PrintingImportLogicMonitor(PrintStream out, PrintStream err)\n     {\n         this.out = out;\n         this.err = err;\n@@ -39,44 +40,44 @@ class PrintingImportLogicMonitor implements ImportLogic.Monitor\n     @Override\n     public void doubleRelationshipRecordUnitsEnabled()\n     {\n-        out.println( \"Will use double record units for all relationships\" );\n+        out.println(\"Will use double record units for all relationships\");\n     }\n \n     @Override\n-    public void mayExceedNodeIdCapacity( long capacity, long estimatedCount )\n+    public void mayExceedNodeIdCapacity(long capacity, long estimatedCount)\n     {\n-        err.printf( \"WARNING: estimated number of relationships %d may exceed capacity %d of selected record format%n\",\n-                estimatedCount, capacity );\n+        err.printf(\"WARNING: estimated number of relationships %d may exceed capacity %d of selected record format%n\",\n+          estimatedCount, capacity);\n     }\n \n     @Override\n-    public void mayExceedRelationshipIdCapacity( long capacity, long estimatedCount )\n+    public void mayExceedRelationshipIdCapacity(long capacity, long estimatedCount)\n     {\n-        err.printf( \"WARNING: estimated number of nodes %d may exceed capacity %d of selected record format%n\",\n-                estimatedCount, capacity );\n+        err.printf(\"WARNING: estimated number of nodes %d may exceed capacity %d of selected record format%n\",\n+          estimatedCount, capacity);\n     }\n \n     @Override\n-    public void insufficientHeapSize( long optimalMinimalHeapSize, long heapSize )\n+    public void insufficientHeapSize(long optimalMinimalHeapSize, long heapSize)\n     {\n-        err.printf( \"WARNING: heap size %s may be too small to complete this import. Suggested heap size is %s\",\n-                bytesToString( heapSize ), bytesToString( optimalMinimalHeapSize ) );\n+        err.printf(\"WARNING: heap size %s may be too small to complete this import. Suggested heap size is %s\",\n+          bytesToString(heapSize), bytesToString(optimalMinimalHeapSize));\n     }\n \n     @Override\n-    public void abundantHeapSize( long optimalMinimalHeapSize, long heapSize )\n+    public void abundantHeapSize(long optimalMinimalHeapSize, long heapSize)\n     {\n-        err.printf( \"WARNING: heap size %s is unnecessarily large for completing this import.%n\" +\n-                \"The abundant heap memory will leave less memory for off-heap importer caches. Suggested heap size is %s\",\n-                bytesToString( heapSize ), bytesToString( optimalMinimalHeapSize ) );\n+        err.printf(\"WARNING: heap size %s is unnecessarily large for completing this import.%n\" +\n+            \"The abundant heap memory will leave less memory for off-heap importer caches. Suggested heap size is %s\",\n+          bytesToString(heapSize), bytesToString(optimalMinimalHeapSize));\n     }\n \n     @Override\n-    public void insufficientAvailableMemory( long estimatedCacheSize, long optimalMinimalHeapSize, long availableMemory )\n+    public void insufficientAvailableMemory(long estimatedCacheSize, long optimalMinimalHeapSize, long availableMemory)\n     {\n-        err.printf( \"WARNING: %s memory may not be sufficient to complete this import. Suggested memory distribution is:%n\" +\n-                \"heap size: %s%n\" +\n-                \"minimum free and available memory excluding heap size: %s\",\n-                bytesToString( availableMemory ), bytesToString( optimalMinimalHeapSize ), bytesToString( estimatedCacheSize ) );\n+        err.printf(\"WARNING: %s memory may not be sufficient to complete this import. Suggested memory distribution is:%n\" +\n+            \"heap size: %s%n\" +\n+            \"minimum free and available memory excluding heap size: %s\",\n+          bytesToString(availableMemory), bytesToString(optimalMinimalHeapSize), bytesToString(estimatedCacheSize));\n     }\n }\n",
            "diff_size": 21
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
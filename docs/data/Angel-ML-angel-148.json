{
    "project_name": "Angel-ML-angel",
    "error_id": "148",
    "information": {
        "errors": [
            {
                "line": "6",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 102).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * Copyright (C) 2017-2018 THL A29 Limited, a Tencent company. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in\n * compliance with the License. You may obtain a copy of the License at\n *\n * https://opensource.org/licenses/Apache-2.0",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/148/ObjectiveFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/148/ObjectiveFactory.java\nindex 4ccd44db482..8478d6f4b92 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/148/ObjectiveFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/148/ObjectiveFactory.java\n@@ -142,7 +142,7 @@ public class ObjectiveFactory {\n \n   public static EvalMetric[] getEvalMetricsOrDefault(String[] metrics, Loss loss) {\n     if (metrics == null || metrics.length == 0) {\n-      return new EvalMetric[]{getEvalMetric(loss.defaultEvalMetric())};\n+      return new EvalMetric[] {getEvalMetric(loss.defaultEvalMetric())};\n     } else {\n       return getEvalMetrics(metrics);\n     }\n",
            "diff_size": 1
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/148/ObjectiveFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/148/ObjectiveFactory.java\nindex 4ccd44db482..9e08ae79e12 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/148/ObjectiveFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/148/ObjectiveFactory.java\n@@ -46,7 +46,7 @@ public class ObjectiveFactory {\n       case MultiLogistic:\n         throw new GBDTException(\"Loss function \" + lossFunc\n             + \" is not a binary loss function\");\n-      default:\n+  default:\n         throw new GBDTException(\"Unrecognizable loss function: \" + lossFunc);\n     }\n   }\n@@ -60,7 +60,7 @@ public class ObjectiveFactory {\n       case BinaryLogistic:\n         throw new GBDTException(\"Loss function \" + lossFunc\n             + \" is not a multi-class loss function\");\n-      default:\n+  default:\n         throw new GBDTException(\"Unrecognizable loss function: \" + lossFunc);\n     }\n   }\n@@ -148,4 +148,4 @@ public class ObjectiveFactory {\n     }\n   }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "60",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/148/ObjectiveFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/148/ObjectiveFactory.java\nindex 4ccd44db482..0aa8bccc4e8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/148/ObjectiveFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/148/ObjectiveFactory.java\n@@ -44,8 +44,7 @@ public class ObjectiveFactory {\n       case BinaryLogistic:\n         return BinaryLogisticLoss.getInstance();\n       case MultiLogistic:\n-        throw new GBDTException(\"Loss function \" + lossFunc\n-            + \" is not a binary loss function\");\n+        throw new GBDTException(\"Loss function \" + lossFunc + \" is not a binary loss function\");\n       default:\n         throw new GBDTException(\"Unrecognizable loss function: \" + lossFunc);\n     }\n@@ -58,8 +57,7 @@ public class ObjectiveFactory {\n       case MultiLogistic:\n         return MultinomialLogisticLoss.getInstance();\n       case BinaryLogistic:\n-        throw new GBDTException(\"Loss function \" + lossFunc\n-            + \" is not a multi-class loss function\");\n+        throw new GBDTException(\"Loss function \" + lossFunc + \" is not a multi-class loss function\");\n       default:\n         throw new GBDTException(\"Unrecognizable loss function: \" + lossFunc);\n     }\n@@ -142,10 +140,10 @@ public class ObjectiveFactory {\n \n   public static EvalMetric[] getEvalMetricsOrDefault(String[] metrics, Loss loss) {\n     if (metrics == null || metrics.length == 0) {\n-      return new EvalMetric[]{getEvalMetric(loss.defaultEvalMetric())};\n+      return new EvalMetric[] {getEvalMetric(loss.defaultEvalMetric())};\n     } else {\n       return getEvalMetrics(metrics);\n     }\n   }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
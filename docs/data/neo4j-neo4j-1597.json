{
    "project_name": "neo4j-neo4j",
    "error_id": "1597",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "66",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "196",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "196",
                    "column": "113",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "210",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "211",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "220",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "220",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "231",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "231",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "233",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "233",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "239",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "239",
                    "column": "114",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "241",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "241",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "277",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "277",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "302",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "302",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "312",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "312",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "324",
                    "column": "54",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "324",
                    "column": "120",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "331",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "331",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "343",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "343",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "349",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "349",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "355",
                    "column": "66",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "355",
                    "column": "105",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "361",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "361",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "367",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "367",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "373",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "373",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "379",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "379",
                    "column": "119",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "385",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "385",
                    "column": "151",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "391",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "391",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "396",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "396",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "402",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "402",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "420",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "420",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "426",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "426",
                    "column": "127",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "468",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "468",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "474",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "474",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "480",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "480",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "486",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "486",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "492",
                    "column": "65",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "492",
                    "column": "126",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1597/RecordStore.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1597/RecordStore.java\nindex adcaa0a1343..4004c181105 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1597/RecordStore.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1597/RecordStore.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.store;\n \n import java.nio.file.Path;\n@@ -34,7 +35,7 @@ import org.neo4j.kernel.impl.store.record.RecordLoad;\n /**\n  * A store for {@link #updateRecord(AbstractBaseRecord, PageCursorTracer) updating} and\n  * {@link #getRecord(long, AbstractBaseRecord, RecordLoad, PageCursorTracer)}  getting} records.\n- *\n+ * <p>\n  * There are two ways of getting records, either one-by-one using\n  * {@link #getRecord(long, AbstractBaseRecord, RecordLoad, PageCursorTracer)}, passing in record retrieved from {@link #newRecord()}.\n  * This to make a conscious decision about who will create the record instance and in that process figure out\n@@ -62,7 +63,7 @@ public interface RecordStore<RECORD extends AbstractBaseRecord> extends IdSequen\n      * @param cursorTracer underlying page cursor tracer.\n      * @return highest id in use in this store.\n      */\n-    long getHighestPossibleIdInUse( PageCursorTracer cursorTracer );\n+    long getHighestPossibleIdInUse(PageCursorTracer cursorTracer);\n \n     /**\n      * Sets highest id in use for this store. This is for when records are applied to this store where\n@@ -72,7 +73,7 @@ public interface RecordStore<RECORD extends AbstractBaseRecord> extends IdSequen\n      *\n      * @param highestIdInUse highest id that is now in use in this store.\n      */\n-    void setHighestPossibleIdInUse( long highestIdInUse );\n+    void setHighestPossibleIdInUse(long highestIdInUse);\n \n     /**\n      * @return a new record instance for receiving data by {@link #getRecord(long, AbstractBaseRecord, RecordLoad, PageCursorTracer)}.\n@@ -95,26 +96,26 @@ public interface RecordStore<RECORD extends AbstractBaseRecord> extends IdSequen\n      * <li>{@link RecordLoad#ALWAYS}: Similar to {@link RecordLoad#FORCE}, except the sanity checks on\n      *     the record data is always enabled.</li>\n      *\n-     * @param id the id of the record to load.\n-     * @param target record where data will be loaded into. This record will have its id set to the specified\n-     * {@code id} as part of this method call.\n-     * @param mode loading behaviour, read more in method description.\n+     * @param id           the id of the record to load.\n+     * @param target       record where data will be loaded into. This record will have its id set to the specified\n+     *                     {@code id} as part of this method call.\n+     * @param mode         loading behaviour, read more in method description.\n      * @param cursorTracer underlying page cursor tracer.\n      * @return the record that was passed in, for convenience.\n      * @throws InvalidRecordException if record not in use and the {@code mode} allows for throwing.\n      */\n-    RECORD getRecord( long id, RECORD target, RecordLoad mode, PageCursorTracer cursorTracer ) throws InvalidRecordException;\n+    RECORD getRecord(long id, RECORD target, RecordLoad mode, PageCursorTracer cursorTracer) throws InvalidRecordException;\n \n     /**\n      * Opens a {@link PageCursor} on this store, capable of reading records using\n      * {@link #getRecordByCursor(long, AbstractBaseRecord, RecordLoad, PageCursor)}.\n      * The caller is responsible for closing it when done with it.\n      *\n-     * @param id cursor will initially be placed at the page containing this record id.\n+     * @param id           cursor will initially be placed at the page containing this record id.\n      * @param cursorTracer underlying page cursor tracer.\n      * @return PageCursor for reading records.\n      */\n-    PageCursor openPageCursorForReading( long id, PageCursorTracer cursorTracer );\n+    PageCursor openPageCursorForReading(long id, PageCursorTracer cursorTracer);\n \n     /**\n      * Opens a {@link PageCursor} on this store, capable of reading records using\n@@ -122,22 +123,22 @@ public interface RecordStore<RECORD extends AbstractBaseRecord> extends IdSequen\n      * The caller is responsible for closing it when done with it.\n      * The opened cursor will make use of pre-fetching for optimal scanning performance.\n      *\n-     * @param id cursor will initially be placed at the page containing this record id.\n+     * @param id           cursor will initially be placed at the page containing this record id.\n      * @param cursorTracer underlying page cursor tracer.\n      * @return PageCursor for reading records.\n      */\n-    PageCursor openPageCursorForReadingWithPrefetching( long id, PageCursorTracer cursorTracer );\n+    PageCursor openPageCursorForReadingWithPrefetching(long id, PageCursorTracer cursorTracer);\n \n     /**\n      * Opens a {@link PageCursor} on this store, capable of writing records using\n      * {@link #updateRecord(AbstractBaseRecord, IdUpdateListener, PageCursor, PageCursorTracer)}.\n      * The caller is responsible for closing it when done with it.\n      *\n-     * @param id cursor will initially be placed at the page containing this record id.\n+     * @param id           cursor will initially be placed at the page containing this record id.\n      * @param cursorTracer underlying page cursor tracer.\n      * @return PageCursor for writing records.\n      */\n-    PageCursor openPageCursorForWriting( long id, PageCursorTracer cursorTracer );\n+    PageCursor openPageCursorForWriting(long id, PageCursorTracer cursorTracer);\n \n     /**\n      * Reads a record from the store into {@code target}, see\n@@ -146,13 +147,13 @@ public interface RecordStore<RECORD extends AbstractBaseRecord> extends IdSequen\n      * The provided page cursor will be used to get the record, and in doing this it will be redirected to the\n      * correct page if needed.\n      *\n-     * @param id the record id, understood to be the absolute reference to the store.\n+     * @param id     the record id, understood to be the absolute reference to the store.\n      * @param target the record to fill.\n-     * @param mode loading behaviour, read more in {@link RecordStore#getRecord(long, AbstractBaseRecord, RecordLoad, PageCursorTracer)}.\n+     * @param mode   loading behaviour, read more in {@link RecordStore#getRecord(long, AbstractBaseRecord, RecordLoad, PageCursorTracer)}.\n      * @param cursor the PageCursor to use for record loading.\n      * @throws InvalidRecordException if record not in use and the {@code mode} allows for throwing.\n      */\n-    void getRecordByCursor( long id, RECORD target, RecordLoad mode, PageCursor cursor ) throws InvalidRecordException;\n+    void getRecordByCursor(long id, RECORD target, RecordLoad mode, PageCursor cursor) throws InvalidRecordException;\n \n     /**\n      * Reads a record from the store into {@code target}, see\n@@ -163,51 +164,51 @@ public interface RecordStore<RECORD extends AbstractBaseRecord> extends IdSequen\n      * next page if the input record was the last on it's page.\n      *\n      * @param target the record to fill.\n-     * @param mode loading behaviour, read more in {@link RecordStore#getRecord(long, AbstractBaseRecord, RecordLoad, PageCursorTracer)}.\n+     * @param mode   loading behaviour, read more in {@link RecordStore#getRecord(long, AbstractBaseRecord, RecordLoad, PageCursorTracer)}.\n      * @param cursor the PageCursor to use for record loading.\n      * @throws InvalidRecordException if record not in use and the {@code mode} allows for throwing.\n      */\n-    void nextRecordByCursor( RECORD target, RecordLoad mode, PageCursor cursor ) throws InvalidRecordException;\n+    void nextRecordByCursor(RECORD target, RecordLoad mode, PageCursor cursor) throws InvalidRecordException;\n \n     /**\n      * For stores that have other stores coupled underneath, the \"top level\" record will have a flag\n      * saying whether or not it's light. Light means that no records from the coupled store have been loaded yet.\n      * This method can load those records and enrich the target record with those, marking it as heavy.\n      *\n-     * @param record record to make heavy, if not already.\n+     * @param record       record to make heavy, if not already.\n      * @param cursorTracer underlying page cursor tracer.\n      */\n-    void ensureHeavy( RECORD record, PageCursorTracer cursorTracer );\n+    void ensureHeavy(RECORD record, PageCursorTracer cursorTracer);\n \n     /**\n      * Reads records that belong together, a chain of records that as a whole forms the entirety of a data item.\n      *\n-     * @param firstId record id of the first record to start loading from.\n-     * @param mode {@link RecordLoad} mode.\n+     * @param firstId        record id of the first record to start loading from.\n+     * @param mode           {@link RecordLoad} mode.\n      * @param guardForCycles Set to {@code true} if we need to take extra care in guarding for cycles in the chain.\n-     * When a cycle is found, a {@link RecordChainCycleDetectedException} will be thrown.\n-     * If {@code false}, then chain cycles will likely end up causing an {@link OutOfMemoryError}.\n-     * A cycle would only occur if the store is inconsistent, though.\n-     * @param cursorTracer underlying page cursor tracer\n+     *                       When a cycle is found, a {@link RecordChainCycleDetectedException} will be thrown.\n+     *                       If {@code false}, then chain cycles will likely end up causing an {@link OutOfMemoryError}.\n+     *                       A cycle would only occur if the store is inconsistent, though.\n+     * @param cursorTracer   underlying page cursor tracer\n      * @return {@link Collection} of records in the loaded chain.\n      * @throws InvalidRecordException if some record not in use and the {@code mode} is allows for throwing.\n      */\n-    List<RECORD> getRecords( long firstId, RecordLoad mode, boolean guardForCycles, PageCursorTracer cursorTracer ) throws InvalidRecordException;\n+    List<RECORD> getRecords(long firstId, RecordLoad mode, boolean guardForCycles, PageCursorTracer cursorTracer) throws InvalidRecordException;\n \n     /**\n      * Streams records that belong together, a chain of records that as a whole forms the entirety of a data item.\n      *\n-     * @param firstId record id of the first record to start loading from.\n-     * @param mode {@link RecordLoad} mode.\n+     * @param firstId        record id of the first record to start loading from.\n+     * @param mode           {@link RecordLoad} mode.\n      * @param guardForCycles Set to {@code true} if we need to take extra care in guarding for cycles in the chain.\n-     * When a cycle is found, a {@link RecordChainCycleDetectedException} will be thrown.\n-     * If {@code false}, then chain cycles will likely end up causing an {@link OutOfMemoryError}.\n-     * A cycle would only occur if the store is inconsistent, though.\n-     * @param cursorTracer underlying page cursor tracer\n-     * @param subscriber The subscriber of the data, will receive records until the subscriber returns <code>false</code>\n+     *                       When a cycle is found, a {@link RecordChainCycleDetectedException} will be thrown.\n+     *                       If {@code false}, then chain cycles will likely end up causing an {@link OutOfMemoryError}.\n+     *                       A cycle would only occur if the store is inconsistent, though.\n+     * @param cursorTracer   underlying page cursor tracer\n+     * @param subscriber     The subscriber of the data, will receive records until the subscriber returns <code>false</code>\n      */\n-    void streamRecords( long firstId, RecordLoad mode, boolean guardForCycles, PageCursorTracer cursorTracer,\n-                        RecordSubscriber<RECORD> subscriber );\n+    void streamRecords(long firstId, RecordLoad mode, boolean guardForCycles, PageCursorTracer cursorTracer,\n+                       RecordSubscriber<RECORD> subscriber);\n \n     /**\n      * Returns another record id which the given {@code record} references, if it exists in a chain of records.\n@@ -216,30 +217,30 @@ public interface RecordStore<RECORD extends AbstractBaseRecord> extends IdSequen\n      * @return record id of \"next\" record that the given {@code record} references, or {@link Record#NULL_REFERENCE}\n      * if the record doesn't reference a next record.\n      */\n-    long getNextRecordReference( RECORD record );\n+    long getNextRecordReference(RECORD record);\n \n     /**\n      * Updates this store with the contents of {@code record} at the record id\n      * {@link AbstractBaseRecord#getId() specified} by the record. The whole record will be written if\n      * the given record is {@link AbstractBaseRecord#inUse() in use}, not necessarily so if it's not in use.\n      *\n-     * @param record containing data to write to this store at the {@link AbstractBaseRecord#getId() id}\n-     * specified by the record.\n+     * @param record       containing data to write to this store at the {@link AbstractBaseRecord#getId() id}\n+     *                     specified by the record.\n      * @param cursorTracer underlying page cursor tracer.\n      */\n-    default void updateRecord( RECORD record, IdUpdateListener idUpdates, PageCursorTracer cursorTracer )\n+    default void updateRecord(RECORD record, IdUpdateListener idUpdates, PageCursorTracer cursorTracer)\n     {\n-        try ( PageCursor cursor = openPageCursorForWriting( 0, cursorTracer ) )\n+        try (PageCursor cursor = openPageCursorForWriting(0, cursorTracer))\n         {\n-            updateRecord( record, idUpdates, cursor, cursorTracer );\n+            updateRecord(record, idUpdates, cursor, cursorTracer);\n         }\n     }\n \n-    void updateRecord( RECORD record, IdUpdateListener idUpdates, PageCursor cursor, PageCursorTracer cursorTracer );\n+    void updateRecord(RECORD record, IdUpdateListener idUpdates, PageCursor cursor, PageCursorTracer cursorTracer);\n \n-    default void updateRecord( RECORD record , PageCursorTracer cursorTracer )\n+    default void updateRecord(RECORD record, PageCursorTracer cursorTracer)\n     {\n-        updateRecord( record, IdUpdateListener.DIRECT, cursorTracer );\n+        updateRecord(record, IdUpdateListener.DIRECT, cursorTracer);\n     }\n \n     /**\n@@ -248,11 +249,11 @@ public interface RecordStore<RECORD extends AbstractBaseRecord> extends IdSequen\n     int getRecordSize();\n \n     /**\n-     * @deprecated since it's exposed through the generic {@link RecordStore} interface although only\n-     * applicable to one particular type of of implementation of it.\n      * @return record \"data\" size, only applicable to dynamic record stores where record size may be specified\n      * at creation time and later used every time the store is opened. Data size refers to number of bytes\n      * of a record without header information, such as \"inUse\" and \"next\".\n+     * @deprecated since it's exposed through the generic {@link RecordStore} interface although only\n+     * applicable to one particular type of of implementation of it.\n      */\n     @Deprecated\n     int getRecordDataSize();\n@@ -273,7 +274,7 @@ public interface RecordStore<RECORD extends AbstractBaseRecord> extends IdSequen\n      * This call is blocking and will ensure all updates since last call to this method are durable\n      * once the call returns.\n      */\n-    void flush( PageCursorTracer cursorTracer );\n+    void flush(PageCursorTracer cursorTracer);\n \n     /**\n      * Some stores may have meta data stored in the header of the store file. Since all records in a store\n@@ -295,40 +296,41 @@ public interface RecordStore<RECORD extends AbstractBaseRecord> extends IdSequen\n     /**\n      * Called once all changes to a record is ready to be converted into a command.\n      *\n-     * @param record record to prepare, potentially updating it with more information before converting into a command.\n+     * @param record       record to prepare, potentially updating it with more information before converting into a command.\n      * @param cursorTracer underlying page cursor tracer\n      */\n-    void prepareForCommit( RECORD record, PageCursorTracer cursorTracer );\n+    void prepareForCommit(RECORD record, PageCursorTracer cursorTracer);\n \n     /**\n      * Called once all changes to a record is ready to be converted into a command.\n      * WARNING this is for advanced use, please consider using {@link #prepareForCommit(AbstractBaseRecord, PageCursorTracer)} instead.\n      *\n-     * @param record record to prepare, potentially updating it with more information before converting into a command.\n-     * @param idSequence {@link IdSequence} to use for potentially generating additional ids required by this record.\n+     * @param record       record to prepare, potentially updating it with more information before converting into a command.\n+     * @param idSequence   {@link IdSequence} to use for potentially generating additional ids required by this record.\n      * @param cursorTracer underlying page cursor tracer\n      */\n-    void prepareForCommit( RECORD record, IdSequence idSequence, PageCursorTracer cursorTracer );\n+    void prepareForCommit(RECORD record, IdSequence idSequence, PageCursorTracer cursorTracer);\n \n     /**\n      * Scan the given range of records both inclusive, and pass all the in-use ones to the given processor, one by one.\n-     *\n+     * <p>\n      * The record passed to the NodeRecordScanner is reused instead of reallocated for every record, so it must be\n      * cloned if you want to save it for later.\n-     * @param visitor {@link Visitor} notified about all records.\n+     *\n+     * @param visitor      {@link Visitor} notified about all records.\n      * @param cursorTracer underlying page cursor tracer.\n      * @throws EXCEPTION on error reading from store.\n      */\n-    <EXCEPTION extends Exception> void scanAllRecords( Visitor<RECORD,EXCEPTION> visitor, PageCursorTracer cursorTracer ) throws EXCEPTION;\n+    <EXCEPTION extends Exception> void scanAllRecords(Visitor<RECORD, EXCEPTION> visitor, PageCursorTracer cursorTracer) throws EXCEPTION;\n \n     class Delegator<R extends AbstractBaseRecord> implements RecordStore<R>\n     {\n         private final RecordStore<R> actual;\n \n         @Override\n-        public void setHighestPossibleIdInUse( long highestIdInUse )\n+        public void setHighestPossibleIdInUse(long highestIdInUse)\n         {\n-            actual.setHighestPossibleIdInUse( highestIdInUse );\n+            actual.setHighestPossibleIdInUse(highestIdInUse);\n         }\n \n         @Override\n@@ -338,68 +340,68 @@ public interface RecordStore<RECORD extends AbstractBaseRecord> extends IdSequen\n         }\n \n         @Override\n-        public R getRecord( long id, R target, RecordLoad mode, PageCursorTracer cursorTracer ) throws InvalidRecordException\n+        public R getRecord(long id, R target, RecordLoad mode, PageCursorTracer cursorTracer) throws InvalidRecordException\n         {\n-            return actual.getRecord( id, target, mode, cursorTracer );\n+            return actual.getRecord(id, target, mode, cursorTracer);\n         }\n \n         @Override\n-        public PageCursor openPageCursorForReading( long id, PageCursorTracer cursorTracer )\n+        public PageCursor openPageCursorForReading(long id, PageCursorTracer cursorTracer)\n         {\n-            return actual.openPageCursorForReading( id, cursorTracer );\n+            return actual.openPageCursorForReading(id, cursorTracer);\n         }\n \n         @Override\n-        public PageCursor openPageCursorForReadingWithPrefetching( long id, PageCursorTracer cursorTracer )\n+        public PageCursor openPageCursorForReadingWithPrefetching(long id, PageCursorTracer cursorTracer)\n         {\n-            return actual.openPageCursorForReadingWithPrefetching( id, cursorTracer );\n+            return actual.openPageCursorForReadingWithPrefetching(id, cursorTracer);\n         }\n \n         @Override\n-        public PageCursor openPageCursorForWriting( long id, PageCursorTracer cursorTracer )\n+        public PageCursor openPageCursorForWriting(long id, PageCursorTracer cursorTracer)\n         {\n-            return actual.openPageCursorForWriting( id, cursorTracer );\n+            return actual.openPageCursorForWriting(id, cursorTracer);\n         }\n \n         @Override\n-        public void getRecordByCursor( long id, R target, RecordLoad mode, PageCursor cursor ) throws InvalidRecordException\n+        public void getRecordByCursor(long id, R target, RecordLoad mode, PageCursor cursor) throws InvalidRecordException\n         {\n-            actual.getRecordByCursor( id, target, mode, cursor );\n+            actual.getRecordByCursor(id, target, mode, cursor);\n         }\n \n         @Override\n-        public void nextRecordByCursor( R target, RecordLoad mode, PageCursor cursor ) throws InvalidRecordException\n+        public void nextRecordByCursor(R target, RecordLoad mode, PageCursor cursor) throws InvalidRecordException\n         {\n-            actual.nextRecordByCursor( target, mode, cursor );\n+            actual.nextRecordByCursor(target, mode, cursor);\n         }\n \n         @Override\n-        public List<R> getRecords( long firstId, RecordLoad mode, boolean guardForCycles, PageCursorTracer cursorTracer ) throws InvalidRecordException\n+        public List<R> getRecords(long firstId, RecordLoad mode, boolean guardForCycles, PageCursorTracer cursorTracer) throws InvalidRecordException\n         {\n-            return actual.getRecords( firstId, mode, guardForCycles, cursorTracer );\n+            return actual.getRecords(firstId, mode, guardForCycles, cursorTracer);\n         }\n \n         @Override\n-        public void streamRecords( long firstId, RecordLoad mode, boolean guardForCycles, PageCursorTracer cursorTracer, RecordSubscriber<R> subscriber )\n+        public void streamRecords(long firstId, RecordLoad mode, boolean guardForCycles, PageCursorTracer cursorTracer, RecordSubscriber<R> subscriber)\n         {\n-            actual.streamRecords( firstId, mode, guardForCycles, cursorTracer, subscriber );\n+            actual.streamRecords(firstId, mode, guardForCycles, cursorTracer, subscriber);\n         }\n \n         @Override\n-        public long getNextRecordReference( R record )\n+        public long getNextRecordReference(R record)\n         {\n-            return actual.getNextRecordReference( record );\n+            return actual.getNextRecordReference(record);\n         }\n \n-        public Delegator( RecordStore<R> actual )\n+        public Delegator(RecordStore<R> actual)\n         {\n             this.actual = actual;\n         }\n \n         @Override\n-        public long nextId( PageCursorTracer cursorTracer )\n+        public long nextId(PageCursorTracer cursorTracer)\n         {\n-            return actual.nextId( cursorTracer );\n+            return actual.nextId(cursorTracer);\n         }\n \n         @Override\n@@ -415,15 +417,15 @@ public interface RecordStore<RECORD extends AbstractBaseRecord> extends IdSequen\n         }\n \n         @Override\n-        public long getHighestPossibleIdInUse( PageCursorTracer cursorTracer )\n+        public long getHighestPossibleIdInUse(PageCursorTracer cursorTracer)\n         {\n-            return actual.getHighestPossibleIdInUse( cursorTracer );\n+            return actual.getHighestPossibleIdInUse(cursorTracer);\n         }\n \n         @Override\n-        public void updateRecord( R record, IdUpdateListener idUpdateListener, PageCursor cursor, PageCursorTracer cursorTracer )\n+        public void updateRecord(R record, IdUpdateListener idUpdateListener, PageCursor cursor, PageCursorTracer cursorTracer)\n         {\n-            actual.updateRecord( record, idUpdateListener, cursor, cursorTracer );\n+            actual.updateRecord(record, idUpdateListener, cursor, cursorTracer);\n         }\n \n         @Override\n@@ -463,33 +465,33 @@ public interface RecordStore<RECORD extends AbstractBaseRecord> extends IdSequen\n         }\n \n         @Override\n-        public void flush( PageCursorTracer cursorTracer )\n+        public void flush(PageCursorTracer cursorTracer)\n         {\n-            actual.flush( cursorTracer );\n+            actual.flush(cursorTracer);\n         }\n \n         @Override\n-        public void ensureHeavy( R record, PageCursorTracer cursorTracer )\n+        public void ensureHeavy(R record, PageCursorTracer cursorTracer)\n         {\n-            actual.ensureHeavy( record, cursorTracer );\n+            actual.ensureHeavy(record, cursorTracer);\n         }\n \n         @Override\n-        public void prepareForCommit( R record, PageCursorTracer cursorTracer )\n+        public void prepareForCommit(R record, PageCursorTracer cursorTracer)\n         {\n-            actual.prepareForCommit( record, cursorTracer );\n+            actual.prepareForCommit(record, cursorTracer);\n         }\n \n         @Override\n-        public void prepareForCommit( R record, IdSequence idSequence, PageCursorTracer cursorTracer )\n+        public void prepareForCommit(R record, IdSequence idSequence, PageCursorTracer cursorTracer)\n         {\n-            actual.prepareForCommit( record, idSequence, cursorTracer );\n+            actual.prepareForCommit(record, idSequence, cursorTracer);\n         }\n \n         @Override\n-        public <EXCEPTION extends Exception> void scanAllRecords( Visitor<R,EXCEPTION> visitor, PageCursorTracer cursorTracer ) throws EXCEPTION\n+        public <EXCEPTION extends Exception> void scanAllRecords(Visitor<R, EXCEPTION> visitor, PageCursorTracer cursorTracer) throws EXCEPTION\n         {\n-            actual.scanAllRecords( visitor, cursorTracer );\n+            actual.scanAllRecords(visitor, cursorTracer);\n         }\n     }\n }\n",
            "diff_size": 98
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1597/RecordStore.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/1597/RecordStore.java\nindex adcaa0a1343..0e151174230 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1597/RecordStore.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/1597/RecordStore.java\n@@ -206,8 +206,7 @@ public interface RecordStore<RECORD extends AbstractBaseRecord> extends IdSequen\n      * @param cursorTracer underlying page cursor tracer\n      * @param subscriber The subscriber of the data, will receive records until the subscriber returns <code>false</code>\n      */\n-    void streamRecords( long firstId, RecordLoad mode, boolean guardForCycles, PageCursorTracer cursorTracer,\n-                        RecordSubscriber<RECORD> subscriber );\n+    void streamRecords( long firstId, RecordLoad mode, boolean guardForCycles, PageCursorTracer cursorTracer, RecordSubscriber<RECORD> subscriber );\n \n     /**\n      * Returns another record id which the given {@code record} references, if it exists in a chain of records.\n@@ -237,7 +236,7 @@ public interface RecordStore<RECORD extends AbstractBaseRecord> extends IdSequen\n \n     void updateRecord( RECORD record, IdUpdateListener idUpdates, PageCursor cursor, PageCursorTracer cursorTracer );\n \n-    default void updateRecord( RECORD record , PageCursorTracer cursorTracer )\n+    default void updateRecord( RECORD record, PageCursorTracer cursorTracer )\n     {\n         updateRecord( record, IdUpdateListener.DIRECT, cursorTracer );\n     }\n@@ -492,4 +491,4 @@ public interface RecordStore<RECORD extends AbstractBaseRecord> extends IdSequen\n             actual.scanAllRecords( visitor, cursorTracer );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
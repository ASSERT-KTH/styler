{
    "project_name": "StevenLooman-sonar-magik",
    "error_id": "8",
    "information": {
        "errors": [
            {
                "line": "31",
                "column": "20",
                "severity": "warning",
                "message": "'+' should be on a new line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
            }
        ]
    },
    "source_code": "    MagikParser parser = new MagikParser(Charset.forName(\"UTF-8\"));\n    String code =\n        \"_block\\n\" +\n        \"_endbloc\";\n    AstNode node = parser.parse(code);\n    assertThat(node.getChildren()).hasSize(1);",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/errored/1/8/MagikParserTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/styler/8/MagikParserTest.java\nindex 6672ef9d510..2177a3c0d97 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/errored/1/8/MagikParserTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/styler/8/MagikParserTest.java\n@@ -28,8 +28,7 @@ public class MagikParserTest {\n   public void testInvalidMagik() {\n     MagikParser parser = new MagikParser(Charset.forName(\"UTF-8\"));\n     String code =\n-        \"_block\\n\" +\n-        \"_endbloc\";\n+        \"_block\\n\" + \"_endbloc\";\n     AstNode node = parser.parse(code);\n     assertThat(node.getChildren()).hasSize(1);\n     AstNode syntaxErrorNode = node.getChildren().get(0);\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "31",
                    "column": "20",
                    "severity": "warning",
                    "message": "'+' should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/errored/1/8/MagikParserTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/intellij/8/MagikParserTest.java\nindex 6672ef9d510..894c64d0ab4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/errored/1/8/MagikParserTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/intellij/8/MagikParserTest.java\n@@ -29,7 +29,7 @@ public class MagikParserTest {\n     MagikParser parser = new MagikParser(Charset.forName(\"UTF-8\"));\n     String code =\n         \"_block\\n\" +\n-        \"_endbloc\";\n+            \"_endbloc\";\n     AstNode node = parser.parse(code);\n     assertThat(node.getChildren()).hasSize(1);\n     AstNode syntaxErrorNode = node.getChildren().get(0);\n",
            "diff_size": 1
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/errored/1/8/MagikParserTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/naturalize/8/MagikParserTest.java\nindex 6672ef9d510..dbf9561d80b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/errored/1/8/MagikParserTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/naturalize/8/MagikParserTest.java\n@@ -28,8 +28,7 @@ public class MagikParserTest {\n   public void testInvalidMagik() {\n     MagikParser parser = new MagikParser(Charset.forName(\"UTF-8\"));\n     String code =\n-        \"_block\\n\" +\n-        \"_endbloc\";\n+        \"_block\\n\" + \"_endbloc\";\n     AstNode node = parser.parse(code);\n     assertThat(node.getChildren()).hasSize(1);\n     AstNode syntaxErrorNode = node.getChildren().get(0);\n@@ -38,4 +37,4 @@ public class MagikParserTest {\n     assertThat(syntaxErrorNode.getToken().getColumn()).isEqualTo(1);\n   }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/errored/1/8/MagikParserTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/codebuff/8/MagikParserTest.java\nindex 6672ef9d510..2ff1876ee0d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/errored/1/8/MagikParserTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/codebuff/8/MagikParserTest.java\n@@ -1,15 +1,12 @@\n package org.stevenlooman.sw.magik.parser;\n \n import static org.fest.assertions.Assertions.assertThat;\n-\n import com.sonar.sslr.api.AstNode;\n import org.junit.Test;\n import org.stevenlooman.sw.magik.api.MagikGrammar;\n-\n import java.nio.charset.Charset;\n \n public class MagikParserTest {\n-\n   @Test\n   public void testParseIdentifier() {\n     assertThat(MagikParser.parseIdentifier(\"abc\")).isEqualTo(\"abc\");\n@@ -27,15 +24,13 @@ public class MagikParserTest {\n   @Test\n   public void testInvalidMagik() {\n     MagikParser parser = new MagikParser(Charset.forName(\"UTF-8\"));\n-    String code =\n-        \"_block\\n\" +\n-        \"_endbloc\";\n+    String code = \"_block\\n\" + \"_endbloc\";\n     AstNode node = parser.parse(code);\n     assertThat(node.getChildren()).hasSize(1);\n+\n     AstNode syntaxErrorNode = node.getChildren().get(0);\n     assertThat(syntaxErrorNode.getType()).isEqualTo(MagikGrammar.SYNTAX_ERROR);\n     assertThat(syntaxErrorNode.getToken().getLine()).isEqualTo(2);\n     assertThat(syntaxErrorNode.getToken().getColumn()).isEqualTo(1);\n   }\n-\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/errored/1/8/MagikParserTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/styler_random/8/MagikParserTest.java\nindex 6672ef9d510..2177a3c0d97 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/errored/1/8/MagikParserTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/styler_random/8/MagikParserTest.java\n@@ -28,8 +28,7 @@ public class MagikParserTest {\n   public void testInvalidMagik() {\n     MagikParser parser = new MagikParser(Charset.forName(\"UTF-8\"));\n     String code =\n-        \"_block\\n\" +\n-        \"_endbloc\";\n+        \"_block\\n\" + \"_endbloc\";\n     AstNode node = parser.parse(code);\n     assertThat(node.getChildren()).hasSize(1);\n     AstNode syntaxErrorNode = node.getChildren().get(0);\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/errored/1/8/MagikParserTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/styler_three_grams/8/MagikParserTest.java\nindex 6672ef9d510..2177a3c0d97 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/errored/1/8/MagikParserTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/styler_three_grams/8/MagikParserTest.java\n@@ -28,8 +28,7 @@ public class MagikParserTest {\n   public void testInvalidMagik() {\n     MagikParser parser = new MagikParser(Charset.forName(\"UTF-8\"));\n     String code =\n-        \"_block\\n\" +\n-        \"_endbloc\";\n+        \"_block\\n\" + \"_endbloc\";\n     AstNode node = parser.parse(code);\n     assertThat(node.getChildren()).hasSize(1);\n     AstNode syntaxErrorNode = node.getChildren().get(0);\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "intellij"
    ]
}
{
    "project_name": "LoboEvolution-LoboEvolution",
    "error_id": "278",
    "information": {
        "errors": [
            {
                "line": "37",
                "column": "1",
                "severity": "error",
                "message": "File contains tab characters (this is the first instance).",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
            }
        ]
    },
    "source_code": "public class PreferencesTree extends LoboTree {\n\n\t/** The Constant serialVersionUID. */\n\tprivate static final long serialVersionUID = 1L;\n\n\t/**",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "40",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/LoboEvolution-LoboEvolution/errored/1/278/PreferencesTree.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/LoboEvolution-LoboEvolution/styler/278/PreferencesTree.java\nindex 6990d501733..c88ebebd49e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/LoboEvolution-LoboEvolution/errored/1/278/PreferencesTree.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/LoboEvolution-LoboEvolution/styler/278/PreferencesTree.java\n@@ -34,8 +34,8 @@ import com.jtattoo.plaf.lobo.LoboTree;\n  */\n public class PreferencesTree extends LoboTree {\n \n-\t/** The Constant serialVersionUID. */\n-\tprivate static final long serialVersionUID = 1L;\n+    /** The Constant serialVersionUID. */\n+ private static final long serialVersionUID = 1L;\n \n \t/**\n \t * Instantiates a new preferences tree.\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/LoboEvolution-LoboEvolution/errored/1/278/PreferencesTree.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/LoboEvolution-LoboEvolution/intellij/278/PreferencesTree.java\nindex 6990d501733..e399f19766d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/LoboEvolution-LoboEvolution/errored/1/278/PreferencesTree.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/LoboEvolution-LoboEvolution/intellij/278/PreferencesTree.java\n@@ -28,162 +28,161 @@ import com.jtattoo.plaf.lobo.LoboTree;\n \n /**\n  * <p>PreferencesTree class.</p>\n- *\n- *\n- *\n  */\n public class PreferencesTree extends LoboTree {\n \n-\t/** The Constant serialVersionUID. */\n-\tprivate static final long serialVersionUID = 1L;\n-\n-\t/**\n-\t * Instantiates a new preferences tree.\n-\t */\n-\tpublic PreferencesTree() {\n-\t\tcreateAndShowGUI();\n-\t}\n-\n-\tprivate void createAndShowGUI() {\n-\t\tfinal TreeNode rootNode = createRootNode();\n-\t\tsetModel(new DefaultTreeModel(rootNode));\n-\t\tsetRootVisible(false);\n-\t}\n-\n-\t/**\n-\t * Creates the root node.\n-\t *\n-\t * @return the tree node\n-\t */\n-\tprivate TreeNode createRootNode() {\n-\t\tfinal DefaultMutableTreeNode root = new DefaultMutableTreeNode();\n-\t\troot.add(new DefaultMutableTreeNode(getConnectionSettingsInfo()));\n-\t\troot.add(new DefaultMutableTreeNode(getGeneralSettingsInfo()));\n-\t\troot.add(new DefaultMutableTreeNode(getLookAndFeelsSettingsInfo()));\n-\t\troot.add(new DefaultMutableTreeNode(getToolsSettingsInfo()));\n-\t\treturn root;\n-\t}\n-\n-\t/**\n-\t * Gets the connection settings info.\n-\t *\n-\t * @return the connection settings info\n-\t */\n-\tprivate SettingsInfo getConnectionSettingsInfo() {\n-\t\treturn new SettingsInfo() {\n-\t\t\t@Override\n-\t\t\tpublic AbstractSettingsUI createSettingsUI() {\n-\t\t\t\treturn new ConnectionSettingsUI();\n-\t\t\t}\n-\n-\t\t\t@Override\n-\t\t\tpublic String getDescription() {\n-\t\t\t\treturn \"Network connection settings.\";\n-\t\t\t}\n-\n-\t\t\t@Override\n-\t\t\tpublic String getName() {\n-\t\t\t\treturn \"Connection\";\n-\t\t\t}\n-\n-\t\t\t@Override\n-\t\t\tpublic String toString() {\n-\t\t\t\treturn getName();\n-\t\t\t}\n-\t\t};\n-\t}\n-\n-\t/**\n-\t * Gets the general settings info.\n-\t *\n-\t * @return the general settings info\n-\t */\n-\tprivate SettingsInfo getGeneralSettingsInfo() {\n-\t\treturn new SettingsInfo() {\n-\t\t\t@Override\n-\t\t\tpublic AbstractSettingsUI createSettingsUI() {\n-\t\t\t\treturn new GeneralSettingsUI();\n-\t\t\t}\n-\n-\t\t\t@Override\n-\t\t\tpublic String getDescription() {\n-\t\t\t\treturn \"General browser settings.\";\n-\t\t\t}\n-\n-\t\t\t@Override\n-\t\t\tpublic String getName() {\n-\t\t\t\treturn \"General\";\n-\t\t\t}\n-\n-\t\t\t@Override\n-\t\t\tpublic String toString() {\n-\t\t\t\treturn getName();\n-\t\t\t}\n-\t\t};\n-\t}\n-\n-\t/**\n-\t * Gets the look and feels settings info.\n-\t *\n-\t * @return the look and feels settings info\n-\t */\n-\tprivate SettingsInfo getLookAndFeelsSettingsInfo() {\n-\t\treturn new SettingsInfo() {\n-\t\t\t@Override\n-\t\t\tpublic AbstractSettingsUI createSettingsUI() {\n-\t\t\t\treturn new LookAndFeelsSettingsUI();\n-\t\t\t}\n-\n-\t\t\t@Override\n-\t\t\tpublic String getDescription() {\n-\t\t\t\treturn \"Choice Look and Feels.\";\n-\t\t\t}\n-\n-\t\t\t@Override\n-\t\t\tpublic String getName() {\n-\t\t\t\treturn \"Look and Feels\";\n-\t\t\t}\n-\n-\t\t\t@Override\n-\t\t\tpublic String toString() {\n-\t\t\t\treturn getName();\n-\t\t\t}\n-\t\t};\n-\t}\n-\n-\t/**\n-\t * Gets the tools settings info.\n-\t *\n-\t * @return the tools settings info\n-\t */\n-\tprivate SettingsInfo getToolsSettingsInfo() {\n-\t\treturn new SettingsInfo() {\n-\t\t\t@Override\n-\t\t\tpublic AbstractSettingsUI createSettingsUI() {\n-\t\t\t\treturn new ToolsSettingsUI();\n-\t\t\t}\n-\n-\t\t\t@Override\n-\t\t\tpublic String getDescription() {\n-\t\t\t\treturn \"Tools settings.\";\n-\t\t\t}\n-\n-\t\t\t@Override\n-\t\t\tpublic String getName() {\n-\t\t\t\treturn \"Tools\";\n-\t\t\t}\n-\n-\t\t\t@Override\n-\t\t\tpublic String toString() {\n-\t\t\t\treturn getName();\n-\t\t\t}\n-\t\t};\n-\t}\n-\n-\t/**\n-\t * Inits the selection.\n-\t */\n-\tpublic void initSelection() {\n-\t\taddSelectionRow(0);\n-\t}\n+    /**\n+     * The Constant serialVersionUID.\n+     */\n+    private static final long serialVersionUID = 1L;\n+\n+    /**\n+     * Instantiates a new preferences tree.\n+     */\n+    public PreferencesTree() {\n+        createAndShowGUI();\n+    }\n+\n+    private void createAndShowGUI() {\n+        final TreeNode rootNode = createRootNode();\n+        setModel(new DefaultTreeModel(rootNode));\n+        setRootVisible(false);\n+    }\n+\n+    /**\n+     * Creates the root node.\n+     *\n+     * @return the tree node\n+     */\n+    private TreeNode createRootNode() {\n+        final DefaultMutableTreeNode root = new DefaultMutableTreeNode();\n+        root.add(new DefaultMutableTreeNode(getConnectionSettingsInfo()));\n+        root.add(new DefaultMutableTreeNode(getGeneralSettingsInfo()));\n+        root.add(new DefaultMutableTreeNode(getLookAndFeelsSettingsInfo()));\n+        root.add(new DefaultMutableTreeNode(getToolsSettingsInfo()));\n+        return root;\n+    }\n+\n+    /**\n+     * Gets the connection settings info.\n+     *\n+     * @return the connection settings info\n+     */\n+    private SettingsInfo getConnectionSettingsInfo() {\n+        return new SettingsInfo() {\n+            @Override\n+            public AbstractSettingsUI createSettingsUI() {\n+                return new ConnectionSettingsUI();\n+            }\n+\n+            @Override\n+            public String getDescription() {\n+                return \"Network connection settings.\";\n+            }\n+\n+            @Override\n+            public String getName() {\n+                return \"Connection\";\n+            }\n+\n+            @Override\n+            public String toString() {\n+                return getName();\n+            }\n+        };\n+    }\n+\n+    /**\n+     * Gets the general settings info.\n+     *\n+     * @return the general settings info\n+     */\n+    private SettingsInfo getGeneralSettingsInfo() {\n+        return new SettingsInfo() {\n+            @Override\n+            public AbstractSettingsUI createSettingsUI() {\n+                return new GeneralSettingsUI();\n+            }\n+\n+            @Override\n+            public String getDescription() {\n+                return \"General browser settings.\";\n+            }\n+\n+            @Override\n+            public String getName() {\n+                return \"General\";\n+            }\n+\n+            @Override\n+            public String toString() {\n+                return getName();\n+            }\n+        };\n+    }\n+\n+    /**\n+     * Gets the look and feels settings info.\n+     *\n+     * @return the look and feels settings info\n+     */\n+    private SettingsInfo getLookAndFeelsSettingsInfo() {\n+        return new SettingsInfo() {\n+            @Override\n+            public AbstractSettingsUI createSettingsUI() {\n+                return new LookAndFeelsSettingsUI();\n+            }\n+\n+            @Override\n+            public String getDescription() {\n+                return \"Choice Look and Feels.\";\n+            }\n+\n+            @Override\n+            public String getName() {\n+                return \"Look and Feels\";\n+            }\n+\n+            @Override\n+            public String toString() {\n+                return getName();\n+            }\n+        };\n+    }\n+\n+    /**\n+     * Gets the tools settings info.\n+     *\n+     * @return the tools settings info\n+     */\n+    private SettingsInfo getToolsSettingsInfo() {\n+        return new SettingsInfo() {\n+            @Override\n+            public AbstractSettingsUI createSettingsUI() {\n+                return new ToolsSettingsUI();\n+            }\n+\n+            @Override\n+            public String getDescription() {\n+                return \"Tools settings.\";\n+            }\n+\n+            @Override\n+            public String getName() {\n+                return \"Tools\";\n+            }\n+\n+            @Override\n+            public String toString() {\n+                return getName();\n+            }\n+        };\n+    }\n+\n+    /**\n+     * Inits the selection.\n+     */\n+    public void initSelection() {\n+        addSelectionRow(0);\n+    }\n }\n",
            "diff_size": 157
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/LoboEvolution-LoboEvolution/errored/1/278/PreferencesTree.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/LoboEvolution-LoboEvolution/codebuff/278/PreferencesTree.java\nindex 6990d501733..1dc1e30facd 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/LoboEvolution-LoboEvolution/errored/1/278/PreferencesTree.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/LoboEvolution-LoboEvolution/codebuff/278/PreferencesTree.java\n@@ -23,7 +23,6 @@ package org.loboevolution.menu.tools.pref;\n import javax.swing.tree.DefaultMutableTreeNode;\n import javax.swing.tree.DefaultTreeModel;\n import javax.swing.tree.TreeNode;\n-\n import com.jtattoo.plaf.lobo.LoboTree;\n \n /**\n@@ -32,158 +31,187 @@ import com.jtattoo.plaf.lobo.LoboTree;\n  *\n  *\n  */\n+\n+\n public class PreferencesTree extends LoboTree {\n \n-\t/** The Constant serialVersionUID. */\n-\tprivate static final long serialVersionUID = 1L;\n-\n-\t/**\n-\t * Instantiates a new preferences tree.\n-\t */\n-\tpublic PreferencesTree() {\n-\t\tcreateAndShowGUI();\n-\t}\n-\n-\tprivate void createAndShowGUI() {\n-\t\tfinal TreeNode rootNode = createRootNode();\n-\t\tsetModel(new DefaultTreeModel(rootNode));\n-\t\tsetRootVisible(false);\n-\t}\n-\n-\t/**\n-\t * Creates the root node.\n-\t *\n-\t * @return the tree node\n-\t */\n-\tprivate TreeNode createRootNode() {\n-\t\tfinal DefaultMutableTreeNode root = new DefaultMutableTreeNode();\n-\t\troot.add(new DefaultMutableTreeNode(getConnectionSettingsInfo()));\n-\t\troot.add(new DefaultMutableTreeNode(getGeneralSettingsInfo()));\n-\t\troot.add(new DefaultMutableTreeNode(getLookAndFeelsSettingsInfo()));\n-\t\troot.add(new DefaultMutableTreeNode(getToolsSettingsInfo()));\n-\t\treturn root;\n-\t}\n-\n-\t/**\n-\t * Gets the connection settings info.\n-\t *\n-\t * @return the connection settings info\n-\t */\n-\tprivate SettingsInfo getConnectionSettingsInfo() {\n-\t\treturn new SettingsInfo() {\n-\t\t\t@Override\n-\t\t\tpublic AbstractSettingsUI createSettingsUI() {\n-\t\t\t\treturn new ConnectionSettingsUI();\n-\t\t\t}\n-\n-\t\t\t@Override\n-\t\t\tpublic String getDescription() {\n-\t\t\t\treturn \"Network connection settings.\";\n-\t\t\t}\n-\n-\t\t\t@Override\n-\t\t\tpublic String getName() {\n-\t\t\t\treturn \"Connection\";\n-\t\t\t}\n-\n-\t\t\t@Override\n-\t\t\tpublic String toString() {\n-\t\t\t\treturn getName();\n-\t\t\t}\n-\t\t};\n-\t}\n-\n-\t/**\n-\t * Gets the general settings info.\n-\t *\n-\t * @return the general settings info\n-\t */\n-\tprivate SettingsInfo getGeneralSettingsInfo() {\n-\t\treturn new SettingsInfo() {\n-\t\t\t@Override\n-\t\t\tpublic AbstractSettingsUI createSettingsUI() {\n-\t\t\t\treturn new GeneralSettingsUI();\n-\t\t\t}\n-\n-\t\t\t@Override\n-\t\t\tpublic String getDescription() {\n-\t\t\t\treturn \"General browser settings.\";\n-\t\t\t}\n-\n-\t\t\t@Override\n-\t\t\tpublic String getName() {\n-\t\t\t\treturn \"General\";\n-\t\t\t}\n-\n-\t\t\t@Override\n-\t\t\tpublic String toString() {\n-\t\t\t\treturn getName();\n-\t\t\t}\n-\t\t};\n-\t}\n-\n-\t/**\n-\t * Gets the look and feels settings info.\n-\t *\n-\t * @return the look and feels settings info\n-\t */\n-\tprivate SettingsInfo getLookAndFeelsSettingsInfo() {\n-\t\treturn new SettingsInfo() {\n-\t\t\t@Override\n-\t\t\tpublic AbstractSettingsUI createSettingsUI() {\n-\t\t\t\treturn new LookAndFeelsSettingsUI();\n-\t\t\t}\n-\n-\t\t\t@Override\n-\t\t\tpublic String getDescription() {\n-\t\t\t\treturn \"Choice Look and Feels.\";\n-\t\t\t}\n-\n-\t\t\t@Override\n-\t\t\tpublic String getName() {\n-\t\t\t\treturn \"Look and Feels\";\n-\t\t\t}\n-\n-\t\t\t@Override\n-\t\t\tpublic String toString() {\n-\t\t\t\treturn getName();\n-\t\t\t}\n-\t\t};\n-\t}\n-\n-\t/**\n-\t * Gets the tools settings info.\n-\t *\n-\t * @return the tools settings info\n-\t */\n-\tprivate SettingsInfo getToolsSettingsInfo() {\n-\t\treturn new SettingsInfo() {\n-\t\t\t@Override\n-\t\t\tpublic AbstractSettingsUI createSettingsUI() {\n-\t\t\t\treturn new ToolsSettingsUI();\n-\t\t\t}\n-\n-\t\t\t@Override\n-\t\t\tpublic String getDescription() {\n-\t\t\t\treturn \"Tools settings.\";\n-\t\t\t}\n-\n-\t\t\t@Override\n-\t\t\tpublic String getName() {\n-\t\t\t\treturn \"Tools\";\n-\t\t\t}\n-\n-\t\t\t@Override\n-\t\t\tpublic String toString() {\n-\t\t\t\treturn getName();\n-\t\t\t}\n-\t\t};\n-\t}\n-\n-\t/**\n-\t * Inits the selection.\n-\t */\n-\tpublic void initSelection() {\n-\t\taddSelectionRow(0);\n-\t}\n-}\n+    /** The Constant serialVersionUID. */\n+\n+    private static final long serialVersionUID = 1L;\n+\n+    /**\n+     * Instantiates a new preferences tree.\n+     */\n+\n+\n+    public PreferencesTree() {\n+        createAndShowGUI();\n+    }\n+\n+\n+    private void createAndShowGUI() {\n+        final TreeNode rootNode = createRootNode();\n+        setModel(new DefaultTreeModel(rootNode));\n+        setRootVisible(false);\n+    }\n+\n+    /**\n+     * Creates the root node.\n+     *\n+     * @return the tree node\n+     */\n+\n+    private TreeNode createRootNode() {\n+        final DefaultMutableTreeNode root = new DefaultMutableTreeNode();\n+        root.add(new DefaultMutableTreeNode(getConnectionSettingsInfo()));\n+        root.add(new DefaultMutableTreeNode(getGeneralSettingsInfo()));\n+        root.add(new DefaultMutableTreeNode(getLookAndFeelsSettingsInfo()));\n+        root.add(new DefaultMutableTreeNode(getToolsSettingsInfo()));\n+        return root;\n+    }\n+\n+    /**\n+     * Gets the connection settings info.\n+     *\n+     * @return the connection settings info\n+     */\n+\n+    private SettingsInfo getConnectionSettingsInfo() {\n+        return new SettingsInfo() {\n+\n+                   @Override\n+                   public AbstractSettingsUI createSettingsUI() {\n+                       return new ConnectionSettingsUI();\n+                   }\n+\n+\n+                   @Override\n+                   public String getDescription() {\n+                       return \"Network connection settings.\";\n+                   }\n+\n+\n+                   @Override\n+                   public String getName() {\n+                       return \"Connection\";\n+                   }\n+\n+\n+                   @Override\n+                   public String toString() {\n+                       return getName();\n+                   }\n+               };\n+    }\n+\n+    /**\n+     * Gets the general settings info.\n+     *\n+     * @return the general settings info\n+     */\n+\n+    private SettingsInfo getGeneralSettingsInfo() {\n+        return new SettingsInfo() {\n+\n+                   @Override\n+                   public AbstractSettingsUI createSettingsUI() {\n+                       return new GeneralSettingsUI();\n+                   }\n+\n+\n+                   @Override\n+                   public String getDescription() {\n+                       return \"General browser settings.\";\n+                   }\n+\n+\n+                   @Override\n+                   public String getName() {\n+                       return \"General\";\n+                   }\n+\n+\n+                   @Override\n+                   public String toString() {\n+                       return getName();\n+                   }\n+               };\n+    }\n+\n+    /**\n+     * Gets the look and feels settings info.\n+     *\n+     * @return the look and feels settings info\n+     */\n+\n+    private SettingsInfo getLookAndFeelsSettingsInfo() {\n+        return new SettingsInfo() {\n+\n+                   @Override\n+                   public AbstractSettingsUI createSettingsUI() {\n+                       return new LookAndFeelsSettingsUI();\n+                   }\n+\n+\n+                   @Override\n+                   public String getDescription() {\n+                       return \"Choice Look and Feels.\";\n+                   }\n+\n+\n+                   @Override\n+                   public String getName() {\n+                       return \"Look and Feels\";\n+                   }\n+\n+\n+                   @Override\n+                   public String toString() {\n+                       return getName();\n+                   }\n+               };\n+    }\n+\n+    /**\n+     * Gets the tools settings info.\n+     *\n+     * @return the tools settings info\n+     */\n+\n+    private SettingsInfo getToolsSettingsInfo() {\n+        return new SettingsInfo() {\n+\n+                   @Override\n+                   public AbstractSettingsUI createSettingsUI() {\n+                       return new ToolsSettingsUI();\n+                   }\n+\n+\n+                   @Override\n+                   public String getDescription() {\n+                       return \"Tools settings.\";\n+                   }\n+\n+\n+                   @Override\n+                   public String getName() {\n+                       return \"Tools\";\n+                   }\n+\n+\n+                   @Override\n+                   public String toString() {\n+                       return getName();\n+                   }\n+               };\n+    }\n+\n+    /**\n+     * Inits the selection.\n+     */\n+\n+\n+    public void initSelection() {\n+        addSelectionRow(0);\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 183
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "40",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/LoboEvolution-LoboEvolution/errored/1/278/PreferencesTree.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/LoboEvolution-LoboEvolution/styler_random/278/PreferencesTree.java\nindex 6990d501733..c88ebebd49e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/LoboEvolution-LoboEvolution/errored/1/278/PreferencesTree.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/LoboEvolution-LoboEvolution/styler_random/278/PreferencesTree.java\n@@ -34,8 +34,8 @@ import com.jtattoo.plaf.lobo.LoboTree;\n  */\n public class PreferencesTree extends LoboTree {\n \n-\t/** The Constant serialVersionUID. */\n-\tprivate static final long serialVersionUID = 1L;\n+    /** The Constant serialVersionUID. */\n+ private static final long serialVersionUID = 1L;\n \n \t/**\n \t * Instantiates a new preferences tree.\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "39",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/LoboEvolution-LoboEvolution/errored/1/278/PreferencesTree.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/LoboEvolution-LoboEvolution/styler_three_grams/278/PreferencesTree.java\nindex 6990d501733..2c4406e1502 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/LoboEvolution-LoboEvolution/errored/1/278/PreferencesTree.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/LoboEvolution-LoboEvolution/styler_three_grams/278/PreferencesTree.java\n@@ -33,9 +33,8 @@ import com.jtattoo.plaf.lobo.LoboTree;\n  *\n  */\n public class PreferencesTree extends LoboTree {\n-\n-\t/** The Constant serialVersionUID. */\n-\tprivate static final long serialVersionUID = 1L;\n+/** The Constant serialVersionUID. */\n+ private static final long serialVersionUID = 1L;\n \n \t/**\n \t * Instantiates a new preferences tree.\n",
            "diff_size": 3
        }
    ],
    "repaired_by": [
        "intellij",
        "codebuff"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ]
}
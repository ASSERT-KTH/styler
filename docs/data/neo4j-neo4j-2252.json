{
    "project_name": "neo4j-neo4j",
    "error_id": "2252",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "41",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "110",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2252/CacheInvalidationTransactionApplier.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2252/CacheInvalidationTransactionApplier.java\nindex c576fb4bb41..75c7351ec74 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2252/CacheInvalidationTransactionApplier.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2252/CacheInvalidationTransactionApplier.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.internal.recordstorage;\n \n import org.neo4j.internal.recordstorage.Command.LabelTokenCommand;\n@@ -37,8 +38,8 @@ public class CacheInvalidationTransactionApplier extends TransactionApplier.Adap\n     private final PropertyKeyTokenStore propertyKeyTokenStore;\n     private final PageCursorTracer cursorTracer;\n \n-    public CacheInvalidationTransactionApplier( NeoStores neoStores,\n-                                                CacheAccessBackDoor cacheAccess, PageCursorTracer cursorTracer )\n+    public CacheInvalidationTransactionApplier(NeoStores neoStores,\n+                                               CacheAccessBackDoor cacheAccess, PageCursorTracer cursorTracer)\n     {\n         this.cacheAccess = cacheAccess;\n         this.relationshipTypeTokenStore = neoStores.getRelationshipTypeTokenStore();\n@@ -48,28 +49,28 @@ public class CacheInvalidationTransactionApplier extends TransactionApplier.Adap\n     }\n \n     @Override\n-    public boolean visitRelationshipTypeTokenCommand( RelationshipTypeTokenCommand command )\n+    public boolean visitRelationshipTypeTokenCommand(RelationshipTypeTokenCommand command)\n     {\n-        NamedToken type = relationshipTypeTokenStore.getToken( command.tokenId(), cursorTracer );\n-        cacheAccess.addRelationshipTypeToken( type );\n+        NamedToken type = relationshipTypeTokenStore.getToken(command.tokenId(), cursorTracer);\n+        cacheAccess.addRelationshipTypeToken(type);\n \n         return false;\n     }\n \n     @Override\n-    public boolean visitLabelTokenCommand( LabelTokenCommand command )\n+    public boolean visitLabelTokenCommand(LabelTokenCommand command)\n     {\n-        NamedToken labelId = labelTokenStore.getToken( command.tokenId(), cursorTracer );\n-        cacheAccess.addLabelToken( labelId );\n+        NamedToken labelId = labelTokenStore.getToken(command.tokenId(), cursorTracer);\n+        cacheAccess.addLabelToken(labelId);\n \n         return false;\n     }\n \n     @Override\n-    public boolean visitPropertyKeyTokenCommand( PropertyKeyTokenCommand command )\n+    public boolean visitPropertyKeyTokenCommand(PropertyKeyTokenCommand command)\n     {\n-        NamedToken index = propertyKeyTokenStore.getToken( command.tokenId(), cursorTracer );\n-        cacheAccess.addPropertyKeyToken( index );\n+        NamedToken index = propertyKeyTokenStore.getToken(command.tokenId(), cursorTracer);\n+        cacheAccess.addPropertyKeyToken(index);\n \n         return false;\n     }\n",
            "diff_size": 12
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "twilio-twilio-java",
    "error_id": "53",
    "information": {
        "errors": [
            {
                "line": "149",
                "severity": "error",
                "message": "'if' child has incorrect indentation level 11, expected level should be 12.",
                "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
            }
        ]
    },
    "source_code": "                throw new ApiException(\"Server Error, no content\");\n            }\n           throw new ApiException(restException);\n        }\n\n        return Page.fromJson(",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/53/IpAccessControlListMappingReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler/53/IpAccessControlListMappingReader.java\nindex c67f5846074..d8f61b88330 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/53/IpAccessControlListMappingReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler/53/IpAccessControlListMappingReader.java\n@@ -146,7 +146,7 @@ public class IpAccessControlListMappingReader extends Reader<IpAccessControlList\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/53/IpAccessControlListMappingReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/intellij/53/IpAccessControlListMappingReader.java\nindex c67f5846074..5da80a90897 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/53/IpAccessControlListMappingReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/intellij/53/IpAccessControlListMappingReader.java\n@@ -1,8 +1,8 @@\n /**\n  * This code was generated by\n  * \\ / _    _  _|   _  _\n- *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n- *       /       /\n+ * | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n+ * /       /\n  */\n \n package com.twilio.rest.api.v2010.account.sip.domain;\n@@ -69,7 +69,8 @@ public class IpAccessControlListMappingReader extends Reader<IpAccessControlList\n         Request request = new Request(\n             HttpMethod.GET,\n             Domains.API.toString(),\n-            \"/2010-04-01/Accounts/\" + this.pathAccountSid + \"/SIP/Domains/\" + this.pathDomainSid + \"/IpAccessControlListMappings.json\"\n+            \"/2010-04-01/Accounts/\" + this.pathAccountSid + \"/SIP/Domains/\" + this.pathDomainSid +\n+                \"/IpAccessControlListMappings.json\"\n         );\n \n         addQueryParams(request);\n@@ -146,7 +147,7 @@ public class IpAccessControlListMappingReader extends Reader<IpAccessControlList\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 5
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/53/IpAccessControlListMappingReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/codebuff/53/IpAccessControlListMappingReader.java\nindex c67f5846074..af0f9f48ec7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/53/IpAccessControlListMappingReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/codebuff/53/IpAccessControlListMappingReader.java\n@@ -28,6 +28,8 @@ public class IpAccessControlListMappingReader extends Reader<IpAccessControlList\n      *\n      * @param pathDomainSid A string that uniquely identifies the SIP Domain\n      */\n+\n+\n     public IpAccessControlListMappingReader(final String pathDomainSid) {\n         this.pathDomainSid = pathDomainSid;\n     }\n@@ -39,6 +41,8 @@ public class IpAccessControlListMappingReader extends Reader<IpAccessControlList\n      *                       this resource.\n      * @param pathDomainSid A string that uniquely identifies the SIP Domain\n      */\n+\n+\n     public IpAccessControlListMappingReader(final String pathAccountSid,\n                                             final String pathDomainSid) {\n         this.pathAccountSid = pathAccountSid;\n@@ -51,6 +55,8 @@ public class IpAccessControlListMappingReader extends Reader<IpAccessControlList\n      * @param client TwilioRestClient with which to make the request\n      * @return IpAccessControlListMapping ResourceSet\n      */\n+\n+\n     @Override\n     public ResourceSet<IpAccessControlListMapping> read(final TwilioRestClient client) {\n         return new ResourceSet<>(this, client, firstPage(client));\n@@ -62,14 +68,15 @@ public class IpAccessControlListMappingReader extends Reader<IpAccessControlList\n      * @param client TwilioRestClient with which to make the request\n      * @return IpAccessControlListMapping ResourceSet\n      */\n+\n     @Override\n     @SuppressWarnings(\"checkstyle:linelength\")\n     public Page<IpAccessControlListMapping> firstPage(final TwilioRestClient client) {\n         this.pathAccountSid = this.pathAccountSid == null ? client.getAccountSid() : this.pathAccountSid;\n         Request request = new Request(\n-            HttpMethod.GET,\n-            Domains.API.toString(),\n-            \"/2010-04-01/Accounts/\" + this.pathAccountSid + \"/SIP/Domains/\" + this.pathDomainSid + \"/IpAccessControlListMappings.json\"\n+                              HttpMethod.GET,\n+                              Domains.API.toString(),\n+                              \"/2010-04-01/Accounts/\" + this.pathAccountSid + \"/SIP/Domains/\" + this.pathDomainSid + \"/IpAccessControlListMappings.json\"\n         );\n \n         addQueryParams(request);\n@@ -83,15 +90,13 @@ public class IpAccessControlListMappingReader extends Reader<IpAccessControlList\n      * @param client TwilioRestClient with which to make the request\n      * @return IpAccessControlListMapping ResourceSet\n      */\n+\n     @Override\n     @SuppressWarnings(\"checkstyle:linelength\")\n-    public Page<IpAccessControlListMapping> getPage(final String targetUrl, final TwilioRestClient client) {\n+    public Page<IpAccessControlListMapping> getPage(final String targetUrl,\n+                                                    final TwilioRestClient client) {\n         this.pathAccountSid = this.pathAccountSid == null ? client.getAccountSid() : this.pathAccountSid;\n-        Request request = new Request(\n-            HttpMethod.GET,\n-            targetUrl\n-        );\n-\n+        Request request = new Request(HttpMethod.GET, targetUrl);\n         return pageForRequest(client, request);\n     }\n \n@@ -102,13 +107,11 @@ public class IpAccessControlListMappingReader extends Reader<IpAccessControlList\n      * @param client TwilioRestClient with which to make the request\n      * @return Next Page\n      */\n+\n     @Override\n     public Page<IpAccessControlListMapping> nextPage(final Page<IpAccessControlListMapping> page,\n                                                      final TwilioRestClient client) {\n-        Request request = new Request(\n-            HttpMethod.GET,\n-            page.getNextPageUrl(Domains.API.toString())\n-        );\n+        Request request = new Request(HttpMethod.GET, page.getNextPageUrl(Domains.API.toString()));\n         return pageForRequest(client, request);\n     }\n \n@@ -119,13 +122,11 @@ public class IpAccessControlListMappingReader extends Reader<IpAccessControlList\n      * @param client TwilioRestClient with which to make the request\n      * @return Previous Page\n      */\n+\n     @Override\n     public Page<IpAccessControlListMapping> previousPage(final Page<IpAccessControlListMapping> page,\n                                                          final TwilioRestClient client) {\n-        Request request = new Request(\n-            HttpMethod.GET,\n-            page.getPreviousPageUrl(Domains.API.toString())\n-        );\n+        Request request = new Request(HttpMethod.GET, page.getPreviousPageUrl(Domains.API.toString()));\n         return pageForRequest(client, request);\n     }\n \n@@ -136,9 +137,11 @@ public class IpAccessControlListMappingReader extends Reader<IpAccessControlList\n      * @param request Request to generate a page for\n      * @return Page for the Request\n      */\n-    private Page<IpAccessControlListMapping> pageForRequest(final TwilioRestClient client, final Request request) {\n-        Response response = client.request(request);\n \n+\n+    private Page<IpAccessControlListMapping> pageForRequest(final TwilioRestClient client,\n+                                                            final Request request) {\n+        Response response = client.request(request);\n         if (response == null) {\n             throw new ApiConnectionException(\"IpAccessControlListMapping read failed: Unable to connect to server\");\n         } else if (!TwilioRestClient.SUCCESS.test(response.getStatusCode())) {\n@@ -146,7 +149,8 @@ public class IpAccessControlListMappingReader extends Reader<IpAccessControlList\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n@@ -154,7 +158,7 @@ public class IpAccessControlListMappingReader extends Reader<IpAccessControlList\n             response.getContent(),\n             IpAccessControlListMapping.class,\n             client.getObjectMapper()\n-        );\n+               );\n     }\n \n     /**\n@@ -162,6 +166,8 @@ public class IpAccessControlListMappingReader extends Reader<IpAccessControlList\n      *\n      * @param request Request to add query string arguments to\n      */\n+\n+\n     private void addQueryParams(final Request request) {\n         if (getPageSize() != null) {\n             request.addQueryParam(\"PageSize\", Integer.toString(getPageSize()));\n",
            "diff_size": 39
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/53/IpAccessControlListMappingReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler_random/53/IpAccessControlListMappingReader.java\nindex c67f5846074..d8f61b88330 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/53/IpAccessControlListMappingReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler_random/53/IpAccessControlListMappingReader.java\n@@ -146,7 +146,7 @@ public class IpAccessControlListMappingReader extends Reader<IpAccessControlList\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/53/IpAccessControlListMappingReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler_three_grams/53/IpAccessControlListMappingReader.java\nindex c67f5846074..37336467fdb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/53/IpAccessControlListMappingReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler_three_grams/53/IpAccessControlListMappingReader.java\n@@ -146,7 +146,8 @@ public class IpAccessControlListMappingReader extends Reader<IpAccessControlList\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize"
    ]
}
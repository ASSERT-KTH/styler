{
    "project_name": "neo4j-neo4j",
    "error_id": "366",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "55",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "80",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "105",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "96",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "71",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "121",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "131",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "127",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/366/SetInitialPasswordCommand.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/366/SetInitialPasswordCommand.java\nindex ab3b8537a4a..99be240d36e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/366/SetInitialPasswordCommand.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/366/SetInitialPasswordCommand.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.commandline.admin.security;\n \n import java.io.IOException;\n@@ -45,22 +46,22 @@ import static picocli.CommandLine.Option;\n import static picocli.CommandLine.Parameters;\n \n @Command(\n-        name = \"set-initial-password\",\n-        description = \"Sets the initial password of the initial admin user ('\" + INITIAL_USER_NAME + \"'). \" +\n-                      \"And removes the requirement to change password on first login.\"\n+  name = \"set-initial-password\",\n+  description = \"Sets the initial password of the initial admin user ('\" + INITIAL_USER_NAME + \"'). \" +\n+    \"And removes the requirement to change password on first login.\"\n )\n public class SetInitialPasswordCommand extends AbstractCommand implements PasswordCommand\n {\n-    @Option( names = \"--require-password-change\", defaultValue = \"false\",\n-            description = \"Require the user to change their password on first login.\" )\n+    @Option(names = \"--require-password-change\", defaultValue = \"false\",\n+      description = \"Require the user to change their password on first login.\")\n     private boolean changeRequired;\n \n     @Parameters\n     private String password;\n \n-    public SetInitialPasswordCommand( ExecutionContext ctx )\n+    public SetInitialPasswordCommand(ExecutionContext ctx)\n     {\n-        super( ctx );\n+        super(ctx);\n     }\n \n     @Override\n@@ -69,64 +70,61 @@ public class SetInitialPasswordCommand extends AbstractCommand implements Passwo\n         Config config = loadNeo4jConfig();\n         FileSystemAbstraction fileSystem = ctx.fs();\n \n-        if ( realUsersExist( config ) )\n+        if (realUsersExist(config))\n         {\n-            Path authFile = CommunitySecurityModule.getUserRepositoryFile( config );\n-            throw new CommandFailedException( realUsersExistErrorMsg( fileSystem, authFile ) );\n-        }\n-        else\n+            Path authFile = CommunitySecurityModule.getUserRepositoryFile(config);\n+            throw new CommandFailedException(realUsersExistErrorMsg(fileSystem, authFile));\n+        } else\n         {\n-            Path file = CommunitySecurityModule.getInitialUserRepositoryFile( config );\n-            if ( fileSystem.fileExists( file ) )\n+            Path file = CommunitySecurityModule.getInitialUserRepositoryFile(config);\n+            if (fileSystem.fileExists(file))\n             {\n-                fileSystem.deleteFile( file );\n+                fileSystem.deleteFile(file);\n             }\n \n             FileUserRepository userRepository =\n-                    new FileUserRepository( fileSystem, file, NullLogProvider.getInstance() );\n+              new FileUserRepository(fileSystem, file, NullLogProvider.getInstance());\n             try\n             {\n                 userRepository.start();\n                 userRepository.create(\n-                        new User.Builder( INITIAL_USER_NAME, createCredentialForPassword( UTF8.encode( password ) ) )\n-                                .withRequiredPasswordChange( changeRequired )\n-                                .build()\n-                    );\n+                  new User.Builder(INITIAL_USER_NAME, createCredentialForPassword(UTF8.encode(password)))\n+                    .withRequiredPasswordChange(changeRequired)\n+                    .build()\n+                );\n                 userRepository.shutdown();\n-            }\n-            catch ( Exception e )\n+            } catch (Exception e)\n             {\n-                throw new RuntimeException( e );\n+                throw new RuntimeException(e);\n             }\n-            ctx.out().println( \"Changed password for user '\" + INITIAL_USER_NAME + \"'.\" );\n+            ctx.out().println(\"Changed password for user '\" + INITIAL_USER_NAME + \"'.\");\n         }\n     }\n \n-    private boolean realUsersExist( Config config )\n+    private boolean realUsersExist(Config config)\n     {\n         boolean result = false;\n-        Path authFile = CommunitySecurityModule.getUserRepositoryFile( config );\n+        Path authFile = CommunitySecurityModule.getUserRepositoryFile(config);\n \n-        if ( ctx.fs().fileExists( authFile ) )\n+        if (ctx.fs().fileExists(authFile))\n         {\n             result = true;\n \n             // Check if it only contains the default neo4j user\n-            FileUserRepository userRepository = new FileUserRepository( ctx.fs(), authFile, NullLogProvider.getInstance() );\n-            try ( Lifespan life = new Lifespan( userRepository ) )\n+            FileUserRepository userRepository = new FileUserRepository(ctx.fs(), authFile, NullLogProvider.getInstance());\n+            try (Lifespan life = new Lifespan(userRepository))\n             {\n                 ListSnapshot<User> users = userRepository.getSnapshot();\n-                if ( users.values().size() == 1 )\n+                if (users.values().size() == 1)\n                 {\n-                    User user = users.values().get( 0 );\n-                    if ( INITIAL_USER_NAME.equals( user.name() ) && user.credentials().matchesPassword( UTF8.encode( INITIAL_PASSWORD ) ) )\n+                    User user = users.values().get(0);\n+                    if (INITIAL_USER_NAME.equals(user.name()) && user.credentials().matchesPassword(UTF8.encode(INITIAL_PASSWORD)))\n                     {\n                         // We allow overwriting an unmodified default neo4j user\n                         result = false;\n                     }\n                 }\n-            }\n-            catch ( IOException e )\n+            } catch (IOException e)\n             {\n                 // Do not allow overwriting if we had a problem reading the file\n             }\n@@ -134,34 +132,33 @@ public class SetInitialPasswordCommand extends AbstractCommand implements Passwo\n         return result;\n     }\n \n-    private static String realUsersExistErrorMsg( FileSystemAbstraction fileSystem, Path authFile )\n+    private static String realUsersExistErrorMsg(FileSystemAbstraction fileSystem, Path authFile)\n     {\n         String files;\n         Path parentFile = authFile.getParent();\n-        Path roles = parentFile.resolve( \"roles\" );\n+        Path roles = parentFile.resolve(\"roles\");\n \n-        if ( fileSystem.fileExists( roles ) )\n+        if (fileSystem.fileExists(roles))\n         {\n             files = \"`auth` and `roles` files\";\n-        }\n-        else\n+        } else\n         {\n             files = \"`auth` file\";\n         }\n \n-        return  \"the provided initial password was not set because existing Neo4j users were detected at `\" +\n-               authFile.toAbsolutePath() + \"`. Please remove the existing \" + files + \" if you want to reset your database \" +\n-                \"to only have a default user with the provided password.\";\n+        return \"the provided initial password was not set because existing Neo4j users were detected at `\" +\n+          authFile.toAbsolutePath() + \"`. Please remove the existing \" + files + \" if you want to reset your database \" +\n+          \"to only have a default user with the provided password.\";\n     }\n \n     @VisibleForTesting\n     Config loadNeo4jConfig()\n     {\n         Config cfg = Config.newBuilder()\n-                .set( GraphDatabaseSettings.neo4j_home, ctx.homeDir().toAbsolutePath() )\n-                .fromFileNoThrow( ctx.confDir().resolve( Config.DEFAULT_CONFIG_FILE_NAME ) )\n-                .build();\n-        ConfigUtils.disableAllConnectors( cfg );\n+          .set(GraphDatabaseSettings.neo4j_home, ctx.homeDir().toAbsolutePath())\n+          .fromFileNoThrow(ctx.confDir().resolve(Config.DEFAULT_CONFIG_FILE_NAME))\n+          .build();\n+        ConfigUtils.disableAllConnectors(cfg);\n         return cfg;\n     }\n }\n",
            "diff_size": 47
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/366/SetInitialPasswordCommand.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/366/SetInitialPasswordCommand.java\nindex ab3b8537a4a..62fc7e1130e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/366/SetInitialPasswordCommand.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/366/SetInitialPasswordCommand.java\n@@ -90,8 +90,7 @@ public class SetInitialPasswordCommand extends AbstractCommand implements Passwo\n                 userRepository.create(\n                         new User.Builder( INITIAL_USER_NAME, createCredentialForPassword( UTF8.encode( password ) ) )\n                                 .withRequiredPasswordChange( changeRequired )\n-                                .build()\n-                    );\n+                                .build() );\n                 userRepository.shutdown();\n             }\n             catch ( Exception e )\n@@ -164,4 +163,4 @@ public class SetInitialPasswordCommand extends AbstractCommand implements Passwo\n         ConfigUtils.disableAllConnectors( cfg );\n         return cfg;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
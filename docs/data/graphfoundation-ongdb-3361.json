{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3361",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "33",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "34",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3361/DuplicatedProcedureError.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3361/DuplicatedProcedureError.java\nindex 2dd0132c24a..03f000d9766 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3361/DuplicatedProcedureError.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3361/DuplicatedProcedureError.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\r\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n  */\r\n+\r\n package org.neo4j.tooling.procedure.messages;\r\n \r\n import javax.lang.model.element.AnnotationMirror;\r\n@@ -25,33 +26,33 @@ import javax.lang.model.element.Element;\n public class DuplicatedProcedureError implements CompilationMessage\r\n {\r\n \r\n-    private final Element element;\r\n-    private final AnnotationMirror annotationMirror;\r\n-    private final String errorMessage;\r\n-\r\n-    public DuplicatedProcedureError( Element element, AnnotationMirror annotationMirror, String errorMessage,\r\n-            Object... args )\r\n-    {\r\n-        this.element = element;\r\n-        this.annotationMirror = annotationMirror;\r\n-        this.errorMessage = String.format( errorMessage, args );\r\n-    }\r\n-\r\n-    @Override\r\n-    public Element getElement()\r\n-    {\r\n-        return element;\r\n-    }\r\n-\r\n-    @Override\r\n-    public AnnotationMirror getMirror()\r\n-    {\r\n-        return annotationMirror;\r\n-    }\r\n-\r\n-    @Override\r\n-    public String getContents()\r\n-    {\r\n-        return errorMessage;\r\n-    }\r\n+  private final Element element;\r\n+  private final AnnotationMirror annotationMirror;\r\n+  private final String errorMessage;\r\n+\r\n+  public DuplicatedProcedureError(Element element, AnnotationMirror annotationMirror, String errorMessage,\r\n+                                  Object... args)\r\n+  {\r\n+    this.element = element;\r\n+    this.annotationMirror = annotationMirror;\r\n+    this.errorMessage = String.format(errorMessage, args);\r\n+  }\r\n+\r\n+  @Override\r\n+  public Element getElement()\r\n+  {\r\n+    return element;\r\n+  }\r\n+\r\n+  @Override\r\n+  public AnnotationMirror getMirror()\r\n+  {\r\n+    return annotationMirror;\r\n+  }\r\n+\r\n+  @Override\r\n+  public String getContents()\r\n+  {\r\n+    return errorMessage;\r\n+  }\r\n }\r\n",
            "diff_size": 30
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3361/DuplicatedProcedureError.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3361/DuplicatedProcedureError.java\nindex 2dd0132c24a..25f51338a40 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3361/DuplicatedProcedureError.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3361/DuplicatedProcedureError.java\n@@ -23,8 +23,7 @@ import javax.lang.model.element.AnnotationMirror;\n import javax.lang.model.element.Element;\r\n \r\n public class DuplicatedProcedureError implements CompilationMessage\r\n-{\r\n-\r\n+{\n     private final Element element;\r\n     private final AnnotationMirror annotationMirror;\r\n     private final String errorMessage;\r\n@@ -54,4 +53,4 @@ public class DuplicatedProcedureError implements CompilationMessage\n     {\r\n         return errorMessage;\r\n     }\r\n-}\r\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3361/DuplicatedProcedureError.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/3361/DuplicatedProcedureError.java\nindex 2dd0132c24a..0029f875bf3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3361/DuplicatedProcedureError.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/3361/DuplicatedProcedureError.java\n@@ -17,41 +17,39 @@\n  * You should have received a copy of the GNU General Public License\r\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n  */\r\n-package org.neo4j.tooling.procedure.messages;\r\n-\r\n-import javax.lang.model.element.AnnotationMirror;\r\n-import javax.lang.model.element.Element;\r\n-\r\n-public class DuplicatedProcedureError implements CompilationMessage\r\n-{\r\n-\r\n-    private final Element element;\r\n-    private final AnnotationMirror annotationMirror;\r\n-    private final String errorMessage;\r\n-\r\n-    public DuplicatedProcedureError( Element element, AnnotationMirror annotationMirror, String errorMessage,\r\n-            Object... args )\r\n-    {\r\n-        this.element = element;\r\n-        this.annotationMirror = annotationMirror;\r\n-        this.errorMessage = String.format( errorMessage, args );\r\n-    }\r\n-\r\n-    @Override\r\n-    public Element getElement()\r\n-    {\r\n-        return element;\r\n-    }\r\n-\r\n-    @Override\r\n-    public AnnotationMirror getMirror()\r\n-    {\r\n-        return annotationMirror;\r\n-    }\r\n-\r\n-    @Override\r\n-    public String getContents()\r\n-    {\r\n-        return errorMessage;\r\n-    }\r\n-}\r\n+package org.neo4j.tooling.procedure.messages;\n+\n+import javax.lang.model.element.AnnotationMirror;\n+import javax.lang.model.element.Element;\n+\n+public class DuplicatedProcedureError implements CompilationMessage\n+{\n+    private final Element element;\n+    private final AnnotationMirror annotationMirror;\n+    private final String errorMessage;\n+\n+    public DuplicatedProcedureError( Element element, AnnotationMirror annotationMirror, String errorMessage, Object... args )\n+    {\n+        this.element = element;\n+        this.annotationMirror = annotationMirror;\n+        this.errorMessage = String.format( errorMessage, args );\n+    }\n+\n+    @Override\n+    public Element getElement()\n+    {\n+        return element;\n+    }\n+\n+    @Override\n+    public AnnotationMirror getMirror()\n+    {\n+        return annotationMirror;\n+    }\n+\n+    @Override\n+    public String getContents()\n+    {\n+        return errorMessage;\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 38
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
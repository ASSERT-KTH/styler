{
    "project_name": "apache-iotdb",
    "error_id": "417",
    "information": {
        "errors": [
            {
                "line": "19",
                "severity": "warning",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * under the License.\n */\npackage org.apache.iotdb.db.query.reader.chunk.metadata;\n\nimport org.apache.iotdb.db.engine.querycontext.ReadOnlyMemChunk;\nimport org.apache.iotdb.db.engine.storagegroup.TsFileResource;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/417/MemChunkMetadataLoader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler/417/MemChunkMetadataLoader.java\nindex cf022e37bae..c2bf3327c0e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/417/MemChunkMetadataLoader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler/417/MemChunkMetadataLoader.java\n@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n package org.apache.iotdb.db.query.reader.chunk.metadata;\n \n import org.apache.iotdb.db.engine.querycontext.ReadOnlyMemChunk;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/417/MemChunkMetadataLoader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/intellij/417/MemChunkMetadataLoader.java\nindex cf022e37bae..dffe8960741 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/417/MemChunkMetadataLoader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/intellij/417/MemChunkMetadataLoader.java\n@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n package org.apache.iotdb.db.query.reader.chunk.metadata;\n \n import org.apache.iotdb.db.engine.querycontext.ReadOnlyMemChunk;\n@@ -64,8 +65,8 @@ public class MemChunkMetadataLoader implements IChunkMetadataLoader {\n     chunkMetadataList.removeIf(\n         chunkMetaData ->\n             (timeFilter != null\n-                    && !timeFilter.satisfyStartEndTime(\n-                        chunkMetaData.getStartTime(), chunkMetaData.getEndTime()))\n+                && !timeFilter.satisfyStartEndTime(\n+                chunkMetaData.getStartTime(), chunkMetaData.getEndTime()))\n                 || chunkMetaData.getStartTime() > chunkMetaData.getEndTime());\n \n     for (IChunkMetadata metadata : chunkMetadataList) {\n",
            "diff_size": 3
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "19",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "38",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 123).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "60",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 224).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/417/MemChunkMetadataLoader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/codebuff/417/MemChunkMetadataLoader.java\nindex cf022e37bae..45240aa6dca 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/417/MemChunkMetadataLoader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/codebuff/417/MemChunkMetadataLoader.java\n@@ -26,7 +26,6 @@ import org.apache.iotdb.tsfile.file.metadata.IChunkMetadata;\n import org.apache.iotdb.tsfile.file.metadata.ITimeSeriesMetadata;\n import org.apache.iotdb.tsfile.read.controller.IChunkMetadataLoader;\n import org.apache.iotdb.tsfile.read.filter.basic.Filter;\n-\n import java.util.List;\n \n public class MemChunkMetadataLoader implements IChunkMetadataLoader {\n@@ -36,8 +35,7 @@ public class MemChunkMetadataLoader implements IChunkMetadataLoader {\n   private QueryContext context;\n   private Filter timeFilter;\n \n-  public MemChunkMetadataLoader(\n-      TsFileResource resource, PartialPath seriesPath, QueryContext context, Filter timeFilter) {\n+  public MemChunkMetadataLoader(TsFileResource resource, PartialPath seriesPath, QueryContext context, Filter timeFilter) {\n     this.resource = resource;\n     this.seriesPath = seriesPath;\n     this.context = context;\n@@ -47,9 +45,7 @@ public class MemChunkMetadataLoader implements IChunkMetadataLoader {\n   @Override\n   public List<IChunkMetadata> loadChunkMetadataList(ITimeSeriesMetadata timeseriesMetadata) {\n     List<IChunkMetadata> chunkMetadataList = resource.getChunkMetadataList();\n-\n     DiskChunkMetadataLoader.setDiskChunkLoader(chunkMetadataList, resource, seriesPath, context);\n-\n     List<ReadOnlyMemChunk> memChunks = resource.getReadOnlyMemChunk();\n     if (memChunks != null) {\n       for (ReadOnlyMemChunk readOnlyMemChunk : memChunks) {\n@@ -61,13 +57,7 @@ public class MemChunkMetadataLoader implements IChunkMetadataLoader {\n     /*\n      * remove not satisfied ChunkMetaData\n      */\n-    chunkMetadataList.removeIf(\n-        chunkMetaData ->\n-            (timeFilter != null\n-                    && !timeFilter.satisfyStartEndTime(\n-                        chunkMetaData.getStartTime(), chunkMetaData.getEndTime()))\n-                || chunkMetaData.getStartTime() > chunkMetaData.getEndTime());\n-\n+    chunkMetadataList.removeIf(chunkMetaData -> (timeFilter != null && !timeFilter.satisfyStartEndTime(chunkMetaData.getStartTime(), chunkMetaData.getEndTime())) || chunkMetaData.getStartTime() > chunkMetaData.getEndTime());\n     for (IChunkMetadata metadata : chunkMetadataList) {\n       metadata.setVersion(resource.getVersion());\n     }\n@@ -78,4 +68,4 @@ public class MemChunkMetadataLoader implements IChunkMetadataLoader {\n   public boolean isMemChunkMetadataLoader() {\n     return true;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 13
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/417/MemChunkMetadataLoader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler_random/417/MemChunkMetadataLoader.java\nindex cf022e37bae..c2bf3327c0e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/417/MemChunkMetadataLoader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler_random/417/MemChunkMetadataLoader.java\n@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n package org.apache.iotdb.db.query.reader.chunk.metadata;\n \n import org.apache.iotdb.db.engine.querycontext.ReadOnlyMemChunk;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/417/MemChunkMetadataLoader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler_three_grams/417/MemChunkMetadataLoader.java\nindex cf022e37bae..c2bf3327c0e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/417/MemChunkMetadataLoader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler_three_grams/417/MemChunkMetadataLoader.java\n@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n package org.apache.iotdb.db.query.reader.chunk.metadata;\n \n import org.apache.iotdb.db.engine.querycontext.ReadOnlyMemChunk;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
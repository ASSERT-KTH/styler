{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2030",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "38",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "106",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2030/FollowerStates.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2030/FollowerStates.java\nindex 0f46856bca6..27c581d1cc1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2030/FollowerStates.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2030/FollowerStates.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering.core.consensus.roles.follower;\n \n import java.util.HashMap;\n@@ -27,69 +28,70 @@ import static java.lang.String.format;\n /**\n  * This presents a read only view over the map of members to their states. Instances that are not present\n  * in the map will have the default FollowerState returned.\n+ *\n  * @param <MEMBER> The type of member id\n  */\n public class FollowerStates<MEMBER>\n {\n-    private final Map<MEMBER, FollowerState> states;\n+  private final Map<MEMBER, FollowerState> states;\n \n-    public FollowerStates( FollowerStates<MEMBER> original, MEMBER updatedMember, FollowerState updatedState )\n-    {\n-        this.states = new HashMap<>( original.states );\n-        states.put( updatedMember, updatedState );\n-    }\n+  public FollowerStates(FollowerStates<MEMBER> original, MEMBER updatedMember, FollowerState updatedState)\n+  {\n+    this.states = new HashMap<>(original.states);\n+    states.put(updatedMember, updatedState);\n+  }\n \n-    public FollowerStates()\n-    {\n-        states = new HashMap<>();\n-    }\n+  public FollowerStates()\n+  {\n+    states = new HashMap<>();\n+  }\n \n-    public FollowerState get( MEMBER member )\n+  public FollowerState get(MEMBER member)\n+  {\n+    FollowerState result = states.get(member);\n+    if (result == null)\n     {\n-        FollowerState result = states.get( member );\n-        if ( result == null )\n-        {\n-            result = new FollowerState();\n-        }\n-        return result;\n+      result = new FollowerState();\n     }\n+    return result;\n+  }\n \n-    @Override\n-    public String toString()\n-    {\n-        return format( \"FollowerStates%s\", states );\n-    }\n+  @Override\n+  public String toString()\n+  {\n+    return format(\"FollowerStates%s\", states);\n+  }\n \n-    public int size()\n+  public int size()\n+  {\n+    return states.size();\n+  }\n+\n+  @Override\n+  public boolean equals(Object o)\n+  {\n+    if (this == o)\n     {\n-        return states.size();\n+      return true;\n     }\n-\n-    @Override\n-    public boolean equals( Object o )\n+    if (o == null || getClass() != o.getClass())\n     {\n-        if ( this == o )\n-        {\n-            return true;\n-        }\n-        if ( o == null || getClass() != o.getClass() )\n-        {\n-            return false;\n-        }\n+      return false;\n+    }\n \n-        FollowerStates that = (FollowerStates) o;\n+    FollowerStates that = (FollowerStates) o;\n \n-        return !(states != null ? !states.equals( that.states ) : that.states != null);\n-    }\n+    return !(states != null ? !states.equals(that.states) : that.states != null);\n+  }\n \n-    @Override\n-    public int hashCode()\n-    {\n-        return states != null ? states.hashCode() : 0;\n-    }\n+  @Override\n+  public int hashCode()\n+  {\n+    return states != null ? states.hashCode() : 0;\n+  }\n \n-    public FollowerStates<MEMBER> onSuccessResponse( MEMBER member, long newMatchIndex )\n-    {\n-        return new FollowerStates<>( this, member, get( member ).onSuccessResponse( newMatchIndex ) );\n-    }\n+  public FollowerStates<MEMBER> onSuccessResponse(MEMBER member, long newMatchIndex)\n+  {\n+    return new FollowerStates<>(this, member, get(member).onSuccessResponse(newMatchIndex));\n+  }\n }\n",
            "diff_size": 62
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2030/FollowerStates.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2030/FollowerStates.java\nindex 0f46856bca6..ad3c7ef19d2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2030/FollowerStates.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2030/FollowerStates.java\n@@ -31,7 +31,7 @@ import static java.lang.String.format;\n  */\n public class FollowerStates<MEMBER>\n {\n-    private final Map<MEMBER, FollowerState> states;\n+    private final Map<MEMBER,FollowerState> states;\n \n     public FollowerStates( FollowerStates<MEMBER> original, MEMBER updatedMember, FollowerState updatedState )\n     {\n@@ -51,7 +51,8 @@ public class FollowerStates<MEMBER>\n         {\n             result = new FollowerState();\n         }\n-        return result;\n+\n+return result;\n     }\n \n     @Override\n@@ -72,14 +73,15 @@ public class FollowerStates<MEMBER>\n         {\n             return true;\n         }\n-        if ( o == null || getClass() != o.getClass() )\n+\n+if ( o == null || getClass() != o.getClass() )\n         {\n             return false;\n         }\n \n         FollowerStates that = (FollowerStates) o;\n \n-        return !(states != null ? !states.equals( that.states ) : that.states != null);\n+        return !( states != null ? !states.equals( that.states ) : that.states != null );\n     }\n \n     @Override\n@@ -92,4 +94,4 @@ public class FollowerStates<MEMBER>\n     {\n         return new FollowerStates<>( this, member, get( member ).onSuccessResponse( newMatchIndex ) );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "wayshall-onetwo",
    "error_id": "128",
    "information": {
        "errors": [
            {
                "line": "32",
                "column": "42",
                "severity": "error",
                "message": "'typecast' is not followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
            }
        ]
    },
    "source_code": "\t@SuppressWarnings(\"unchecked\")\n\tdefault Class<T> getResponseType() {\n\t\tClass<T> type = (Class<T>)TypeResolver.resolveRawArgument(CustomResponseHandler.class, getClass());\n\t\treturn type;\n\t}\n\t",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "32",
                    "column": "42",
                    "severity": "error",
                    "message": "'typecast' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "27",
                    "column": "3",
                    "severity": "error",
                    "message": "';' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wayshall-onetwo/errored/1/128/CustomResponseHandler.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wayshall-onetwo/intellij/128/CustomResponseHandler.java\nindex a8e40696bac..e9eb0f9a5df 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wayshall-onetwo/errored/1/128/CustomResponseHandler.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wayshall-onetwo/intellij/128/CustomResponseHandler.java\n@@ -7,40 +7,44 @@ import net.jodah.typetools.TypeResolver;\n \n /**\n  * \u81ea\u5b9a\u4e49\u54cd\u5e94\u5904\u7406\u5668\n+ *\n  * @author wayshall\n  * <br/>\n  */\n public interface CustomResponseHandler<T> /*extends ApiErrorHandler*/ {\n-\t\n-\tfinal public static class NullHandler implements CustomResponseHandler<Object> {\n-\t\tpublic Class<Object> getResponseType() {\n-\t\t\tthrow new ApiClientException(\"you should not use this handler\", \"error\");\n-\t\t}\n-\t\t@Override\n-\t\tpublic Object handleResponse(ApiClientMethod apiMethod, ResponseEntity<Object> responseEntity) {\n-\t\t\tthrow new ApiClientException(\"you should not use this handler\", \"error\");\n-\t\t}\n-\t};\n-\t\n-\t/***\n-\t * \u6307\u5b9arestRemplate \u62bd\u53d6\u6570\u636e\u65f6\u7684\u7c7b\u578b\n-\t * @author wayshall\n-\t * @return\n-\t */\n-\t@SuppressWarnings(\"unchecked\")\n-\tdefault Class<T> getResponseType() {\n-\t\tClass<T> type = (Class<T>)TypeResolver.resolveRawArgument(CustomResponseHandler.class, getClass());\n-\t\treturn type;\n-\t}\n-\t\n-\t/***\n-\t * \u4e8c\u6b21\u5904\u7406\u903b\u8f91\n-\t * @author wayshall\n-\t * @param apiMethod\n-\t * @param responseEntity\n-\t * @return\n-\t */\n-\tObject handleResponse(ApiClientMethod apiMethod, ResponseEntity<T> responseEntity);\n-\t\n+\n+  final public static class NullHandler implements CustomResponseHandler<Object> {\n+    public Class<Object> getResponseType() {\n+      throw new ApiClientException(\"you should not use this handler\", \"error\");\n+    }\n+\n+    @Override\n+    public Object handleResponse(ApiClientMethod apiMethod, ResponseEntity<Object> responseEntity) {\n+      throw new ApiClientException(\"you should not use this handler\", \"error\");\n+    }\n+  }\n+\n+  ;\n+\n+  /***\n+   * \u6307\u5b9arestRemplate \u62bd\u53d6\u6570\u636e\u65f6\u7684\u7c7b\u578b\n+   * @author wayshall\n+   * @return\n+   */\n+  @SuppressWarnings(\"unchecked\")\n+  default Class<T> getResponseType() {\n+    Class<T> type = (Class<T>) TypeResolver.resolveRawArgument(CustomResponseHandler.class, getClass());\n+    return type;\n+  }\n+\n+  /***\n+   * \u4e8c\u6b21\u5904\u7406\u903b\u8f91\n+   * @author wayshall\n+   * @param apiMethod\n+   * @param responseEntity\n+   * @return\n+   */\n+  Object handleResponse(ApiClientMethod apiMethod, ResponseEntity<T> responseEntity);\n+\n \n }\n",
            "diff_size": 35
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "32",
                    "column": "42",
                    "severity": "error",
                    "message": "'typecast' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "32",
                    "column": "42",
                    "severity": "error",
                    "message": "'typecast' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
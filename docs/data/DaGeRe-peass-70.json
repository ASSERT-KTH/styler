{
    "project_name": "DaGeRe-peass",
    "error_id": "70",
    "information": {
        "errors": [
            {
                "line": "30",
                "column": "57",
                "severity": "error",
                "message": "'{' is not preceded with whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
            }
        ]
    },
    "source_code": "   }\n   \n   public List<File> getTestcaseMap(final TestCase test){\n      return mapping.get(test.toString());\n   }",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/errored/1/70/TraceFileMapping.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/styler/70/TraceFileMapping.java\nindex 023d3743afd..6ce22a4f85f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/errored/1/70/TraceFileMapping.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/styler/70/TraceFileMapping.java\n@@ -27,7 +27,7 @@ public class TraceFileMapping {\n       return mapping.size();\n    }\n    \n-   public List<File> getTestcaseMap(final TestCase test){\n-      return mapping.get(test.toString());\n+   public List<File> getTestcaseMap(final TestCase test) {\n+\t\t\t\treturn mapping.get(test.toString());\n    }\n }\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/errored/1/70/TraceFileMapping.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/intellij/70/TraceFileMapping.java\nindex 023d3743afd..b19ee0de31e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/errored/1/70/TraceFileMapping.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/intellij/70/TraceFileMapping.java\n@@ -9,25 +9,25 @@ import java.util.Map;\n import de.dagere.peass.dependency.analysis.data.TestCase;\n \n public class TraceFileMapping {\n-   private final Map<String, List<File>> mapping = new HashMap<>();\n+  private final Map<String, List<File>> mapping = new HashMap<>();\n \n-   public void addTraceFile(final TestCase test, final File traceFile) {\n-      List<File> testTraceFiles = mapping.get(test.toString());\n-      if (testTraceFiles == null) {\n-         testTraceFiles = new LinkedList<>();\n-         mapping.put(test.toString(), testTraceFiles);\n-      }\n-      if (testTraceFiles.size() > 1) {\n-         testTraceFiles.remove(0);\n-      }\n-      testTraceFiles.add(traceFile);\n-   }\n-   \n-   public int size() {\n-      return mapping.size();\n-   }\n-   \n-   public List<File> getTestcaseMap(final TestCase test){\n-      return mapping.get(test.toString());\n-   }\n+  public void addTraceFile(final TestCase test, final File traceFile) {\n+    List<File> testTraceFiles = mapping.get(test.toString());\n+    if (testTraceFiles == null) {\n+      testTraceFiles = new LinkedList<>();\n+      mapping.put(test.toString(), testTraceFiles);\n+    }\n+    if (testTraceFiles.size() > 1) {\n+      testTraceFiles.remove(0);\n+    }\n+    testTraceFiles.add(traceFile);\n+  }\n+\n+  public int size() {\n+    return mapping.size();\n+  }\n+\n+  public List<File> getTestcaseMap(final TestCase test) {\n+    return mapping.get(test.toString());\n+  }\n }\n\\ No newline at end of file\n",
            "diff_size": 20
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/errored/1/70/TraceFileMapping.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/codebuff/70/TraceFileMapping.java\nindex 023d3743afd..36543b958fd 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/errored/1/70/TraceFileMapping.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/codebuff/70/TraceFileMapping.java\n@@ -5,29 +5,30 @@ import java.util.HashMap;\n import java.util.LinkedList;\n import java.util.List;\n import java.util.Map;\n-\n import de.dagere.peass.dependency.analysis.data.TestCase;\n \n+\n public class TraceFileMapping {\n-   private final Map<String, List<File>> mapping = new HashMap<>();\n+ private final Map<String, List<File>> mapping = new HashMap<>();\n+\n+ public void addTraceFile(final TestCase test, final File traceFile) {\n+  List<File> testTraceFiles = mapping.get(test.toString());\n+  if (testTraceFiles == null) {\n+   testTraceFiles = new LinkedList<>();\n+   mapping.put(test.toString(), testTraceFiles);\n+  }\n+  if (testTraceFiles.size() > 1) {\n+   testTraceFiles.remove(0);\n+  }\n+  testTraceFiles.add(traceFile);\n+ }\n+\n+ public int size() {\n+  return mapping.size();\n+ }\n+\n+ public List<File> getTestcaseMap(final TestCase test) {\n+  return mapping.get(test.toString());\n+ }\n \n-   public void addTraceFile(final TestCase test, final File traceFile) {\n-      List<File> testTraceFiles = mapping.get(test.toString());\n-      if (testTraceFiles == null) {\n-         testTraceFiles = new LinkedList<>();\n-         mapping.put(test.toString(), testTraceFiles);\n-      }\n-      if (testTraceFiles.size() > 1) {\n-         testTraceFiles.remove(0);\n-      }\n-      testTraceFiles.add(traceFile);\n-   }\n-   \n-   public int size() {\n-      return mapping.size();\n-   }\n-   \n-   public List<File> getTestcaseMap(final TestCase test){\n-      return mapping.get(test.toString());\n-   }\n }\n\\ No newline at end of file\n",
            "diff_size": 42
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/errored/1/70/TraceFileMapping.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/styler_random/70/TraceFileMapping.java\nindex 023d3743afd..6ce22a4f85f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/errored/1/70/TraceFileMapping.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/styler_random/70/TraceFileMapping.java\n@@ -27,7 +27,7 @@ public class TraceFileMapping {\n       return mapping.size();\n    }\n    \n-   public List<File> getTestcaseMap(final TestCase test){\n-      return mapping.get(test.toString());\n+   public List<File> getTestcaseMap(final TestCase test) {\n+\t\t\t\treturn mapping.get(test.toString());\n    }\n }\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/errored/1/70/TraceFileMapping.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/styler_three_grams/70/TraceFileMapping.java\nindex 023d3743afd..6ce22a4f85f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/errored/1/70/TraceFileMapping.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/styler_three_grams/70/TraceFileMapping.java\n@@ -27,7 +27,7 @@ public class TraceFileMapping {\n       return mapping.size();\n    }\n    \n-   public List<File> getTestcaseMap(final TestCase test){\n-      return mapping.get(test.toString());\n+   public List<File> getTestcaseMap(final TestCase test) {\n+\t\t\t\treturn mapping.get(test.toString());\n    }\n }\n\\ No newline at end of file\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize"
    ]
}
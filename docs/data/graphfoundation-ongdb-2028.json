{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2028",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "61",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2028/GetServersProcedureForMultiDC.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2028/GetServersProcedureForMultiDC.java\nindex 0477671f6f7..47e141ac696 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2028/GetServersProcedureForMultiDC.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2028/GetServersProcedureForMultiDC.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering.routing.load_balancing.procedure;\n \n import java.util.Map;\n@@ -38,45 +39,45 @@ import static org.neo4j.internal.kernel.api.procs.ProcedureSignature.procedureSi\n \n /**\n  * Returns endpoints and their capabilities.\n- *\n+ * <p>\n  * GetServersV2 extends upon V1 by allowing a client context consisting of\n  * key-value pairs to be supplied to and used by the concrete load\n  * balancing strategies.\n  */\n public class GetServersProcedureForMultiDC implements CallableProcedure\n {\n-    private final String DESCRIPTION = \"Returns cluster endpoints and their capabilities.\";\n+  private final String DESCRIPTION = \"Returns cluster endpoints and their capabilities.\";\n \n-    private final ProcedureSignature procedureSignature =\n-            procedureSignature( GET_SERVERS_V2.fullyQualifiedProcedureName() )\n-                    .in( CONTEXT.parameterName(), Neo4jTypes.NTMap )\n-                    .out( TTL.parameterName(), Neo4jTypes.NTInteger )\n-                    .out( SERVERS.parameterName(), Neo4jTypes.NTList( Neo4jTypes.NTMap ) )\n-                    .description( DESCRIPTION )\n-                    .build();\n+  private final ProcedureSignature procedureSignature =\n+      procedureSignature(GET_SERVERS_V2.fullyQualifiedProcedureName())\n+          .in(CONTEXT.parameterName(), Neo4jTypes.NTMap)\n+          .out(TTL.parameterName(), Neo4jTypes.NTInteger)\n+          .out(SERVERS.parameterName(), Neo4jTypes.NTList(Neo4jTypes.NTMap))\n+          .description(DESCRIPTION)\n+          .build();\n \n-    private final LoadBalancingProcessor loadBalancingProcessor;\n+  private final LoadBalancingProcessor loadBalancingProcessor;\n \n-    public GetServersProcedureForMultiDC( LoadBalancingProcessor loadBalancingProcessor )\n-    {\n-        this.loadBalancingProcessor = loadBalancingProcessor;\n-    }\n+  public GetServersProcedureForMultiDC(LoadBalancingProcessor loadBalancingProcessor)\n+  {\n+    this.loadBalancingProcessor = loadBalancingProcessor;\n+  }\n \n-    @Override\n-    public ProcedureSignature signature()\n-    {\n-        return procedureSignature;\n-    }\n+  @Override\n+  public ProcedureSignature signature()\n+  {\n+    return procedureSignature;\n+  }\n \n-    @Override\n-    public RawIterator<Object[],ProcedureException> apply(\n-            Context ctx, Object[] input, ResourceTracker resourceTracker ) throws ProcedureException\n-    {\n-        @SuppressWarnings( \"unchecked\" )\n-        Map<String,String> clientContext = (Map<String,String>) input[0];\n+  @Override\n+  public RawIterator<Object[], ProcedureException> apply(\n+      Context ctx, Object[] input, ResourceTracker resourceTracker) throws ProcedureException\n+  {\n+    @SuppressWarnings(\"unchecked\")\n+    Map<String, String> clientContext = (Map<String, String>) input[0];\n \n-        LoadBalancingProcessor.Result result = loadBalancingProcessor.run( clientContext );\n+    LoadBalancingProcessor.Result result = loadBalancingProcessor.run(clientContext);\n \n-        return RawIterator.<Object[],ProcedureException>of( ResultFormatV1.build( result ) );\n-    }\n+    return RawIterator.<Object[], ProcedureException>of(ResultFormatV1.build(result));\n+  }\n }\n",
            "diff_size": 29
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "49",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 314).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "71",
                    "column": "48",
                    "severity": "error",
                    "message": "'>' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2028/GetServersProcedureForMultiDC.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2028/GetServersProcedureForMultiDC.java\nindex 0477671f6f7..11550b17404 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2028/GetServersProcedureForMultiDC.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2028/GetServersProcedureForMultiDC.java\n@@ -46,16 +46,9 @@ import static org.neo4j.internal.kernel.api.procs.ProcedureSignature.procedureSi\n public class GetServersProcedureForMultiDC implements CallableProcedure\n {\n     private final String DESCRIPTION = \"Returns cluster endpoints and their capabilities.\";\n-\n-    private final ProcedureSignature procedureSignature =\n-            procedureSignature( GET_SERVERS_V2.fullyQualifiedProcedureName() )\n-                    .in( CONTEXT.parameterName(), Neo4jTypes.NTMap )\n-                    .out( TTL.parameterName(), Neo4jTypes.NTInteger )\n-                    .out( SERVERS.parameterName(), Neo4jTypes.NTList( Neo4jTypes.NTMap ) )\n-                    .description( DESCRIPTION )\n+private final ProcedureSignature procedureSignature = procedureSignature( GET_SERVERS_V2.fullyQualifiedProcedureName() ).in( CONTEXT.parameterName(), Neo4jTypes.NTMap ).out( TTL.parameterName(), Neo4jTypes.NTInteger ).out( SERVERS.parameterName(), Neo4jTypes.NTList( Neo4jTypes.NTMap ) ).description( DESCRIPTION )\n                     .build();\n-\n-    private final LoadBalancingProcessor loadBalancingProcessor;\n+private final LoadBalancingProcessor loadBalancingProcessor;\n \n     public GetServersProcedureForMultiDC( LoadBalancingProcessor loadBalancingProcessor )\n     {\n@@ -69,14 +62,12 @@ public class GetServersProcedureForMultiDC implements CallableProcedure\n     }\n \n     @Override\n-    public RawIterator<Object[],ProcedureException> apply(\n-            Context ctx, Object[] input, ResourceTracker resourceTracker ) throws ProcedureException\n-    {\n+    public RawIterator<Object[],ProcedureException> apply( Context ctx, Object[] input, ResourceTracker resourceTracker ) throws ProcedureException\n+{\n         @SuppressWarnings( \"unchecked\" )\n         Map<String,String> clientContext = (Map<String,String>) input[0];\n \n         LoadBalancingProcessor.Result result = loadBalancingProcessor.run( clientContext );\n-\n-        return RawIterator.<Object[],ProcedureException>of( ResultFormatV1.build( result ) );\n+return RawIterator.<Object[],ProcedureException> of( ResultFormatV1.build( result ) );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 15
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
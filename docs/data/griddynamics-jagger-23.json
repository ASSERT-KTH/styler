{
    "project_name": "griddynamics-jagger",
    "error_id": "23",
    "information": {
        "errors": [
            {
                "line": "38",
                "severity": "warning",
                "message": "Line is longer than 150 characters (found 183).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "    private final Service service;\n\n    public ListenableService(Service delegate, ExecutorService executor, String sessionId, String taskId, T task, DistributionListener listener, Map<NodeId, RemoteExecutor> remotes) {\n        this.executor = executor;\n        this.sessionId = sessionId;\n        this.taskId = taskId;",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "39",
                    "severity": "warning",
                    "message": "'<' has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/23/ListenableService.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/styler/23/ListenableService.java\nindex fa023724a6a..f297a73e740 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/23/ListenableService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/styler/23/ListenableService.java\n@@ -35,7 +35,8 @@ public class ListenableService<T extends Task> implements Service {\n     private final Map<NodeId, RemoteExecutor> remotes;\n     private final Service service;\n \n-    public ListenableService(Service delegate, ExecutorService executor, String sessionId, String taskId, T task, DistributionListener listener, Map<NodeId, RemoteExecutor> remotes) {\n+    public ListenableService(Service delegate, ExecutorService executor, String sessionId, String taskId, T task, DistributionListener listener, Map\n+        <NodeId, RemoteExecutor> remotes) {\n         this.executor = executor;\n         this.sessionId = sessionId;\n         this.taskId = taskId;\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/23/ListenableService.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/intellij/23/ListenableService.java\nindex fa023724a6a..42111ab19a8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/23/ListenableService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/intellij/23/ListenableService.java\n@@ -35,7 +35,8 @@ public class ListenableService<T extends Task> implements Service {\n     private final Map<NodeId, RemoteExecutor> remotes;\n     private final Service service;\n \n-    public ListenableService(Service delegate, ExecutorService executor, String sessionId, String taskId, T task, DistributionListener listener, Map<NodeId, RemoteExecutor> remotes) {\n+    public ListenableService(Service delegate, ExecutorService executor, String sessionId, String taskId, T task, DistributionListener listener,\n+                             Map<NodeId, RemoteExecutor> remotes) {\n         this.executor = executor;\n         this.sessionId = sessionId;\n         this.taskId = taskId;\n",
            "diff_size": 2
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "38",
                    "severity": "warning",
                    "message": "Line is longer than 150 characters (found 183).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "57",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/23/ListenableService.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/naturalize/23/ListenableService.java\nindex fa023724a6a..6bf37731abc 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/23/ListenableService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/naturalize/23/ListenableService.java\n@@ -54,9 +54,7 @@ public class ListenableService<T extends Task> implements Service {\n                 return Nothing.INSTANCE;\n             }\n         }));\n-\n-\n-        return Futures.transform(runListener, new AsyncFunction<Nothing, State>() {\n+return Futures.transform(runListener, new AsyncFunction<Nothing, State>() {\n             @Override\n             public ListenableFuture<State> apply(Nothing input) {\n                 return doStart();\n@@ -151,4 +149,4 @@ public class ListenableService<T extends Task> implements Service {\n     public void addListener(Listener listener, Executor executor) {\n         service.addListener(listener, executor);\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "38",
                    "severity": "warning",
                    "message": "'ctor def' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "38",
                    "severity": "warning",
                    "message": "Line is longer than 150 characters (found 212).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "38",
                    "column": "149",
                    "severity": "warning",
                    "message": "GenericWhitespace '<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "38",
                    "column": "185",
                    "severity": "warning",
                    "message": "'{' at column 185 should have line break after.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
                },
                {
                    "line": "38",
                    "column": "185",
                    "severity": "warning",
                    "message": "WhitespaceAround: '{' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/23/ListenableService.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/styler_random/23/ListenableService.java\nindex fa023724a6a..b7e9fae9127 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/23/ListenableService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/styler_random/23/ListenableService.java\n@@ -35,8 +35,7 @@ public class ListenableService<T extends Task> implements Service {\n     private final Map<NodeId, RemoteExecutor> remotes;\n     private final Service service;\n \n-    public ListenableService(Service delegate, ExecutorService executor, String sessionId, String taskId, T task, DistributionListener listener, Map<NodeId, RemoteExecutor> remotes) {\n-        this.executor = executor;\n+    public ListenableService(Service delegate, ExecutorService executor, String sessionId, String taskId, T task, DistributionListener listener, Map <NodeId , RemoteExecutor> remotes ){ this .executor = executor;\n         this.sessionId = sessionId;\n         this.taskId = taskId;\n         this.task = task;\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "39",
                    "severity": "warning",
                    "message": "'<' has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/23/ListenableService.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/styler_three_grams/23/ListenableService.java\nindex fa023724a6a..f297a73e740 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/23/ListenableService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/styler_three_grams/23/ListenableService.java\n@@ -35,7 +35,8 @@ public class ListenableService<T extends Task> implements Service {\n     private final Map<NodeId, RemoteExecutor> remotes;\n     private final Service service;\n \n-    public ListenableService(Service delegate, ExecutorService executor, String sessionId, String taskId, T task, DistributionListener listener, Map<NodeId, RemoteExecutor> remotes) {\n+    public ListenableService(Service delegate, ExecutorService executor, String sessionId, String taskId, T task, DistributionListener listener, Map\n+        <NodeId, RemoteExecutor> remotes) {\n         this.executor = executor;\n         this.sessionId = sessionId;\n         this.taskId = taskId;\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
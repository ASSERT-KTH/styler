{
    "project_name": "neo4j-neo4j",
    "error_id": "2802",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "39",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2802/RoutingResult.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2802/RoutingResult.java\nindex 945e2446223..dc21b35d8fa 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2802/RoutingResult.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2802/RoutingResult.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.procedure.builtin.routing;\n \n import java.util.List;\n@@ -35,8 +36,8 @@ public class RoutingResult\n     private final List<SocketAddress> readEndpoints;\n     private final long timeToLiveMillis;\n \n-    public RoutingResult( List<SocketAddress> routeEndpoints, List<SocketAddress> writeEndpoints,\n-            List<SocketAddress> readEndpoints, long timeToLiveMillis )\n+    public RoutingResult(List<SocketAddress> routeEndpoints, List<SocketAddress> writeEndpoints,\n+                         List<SocketAddress> readEndpoints, long timeToLiveMillis)\n     {\n         this.routeEndpoints = routeEndpoints;\n         this.writeEndpoints = writeEndpoints;\n@@ -70,37 +71,37 @@ public class RoutingResult\n     }\n \n     @Override\n-    public boolean equals( Object o )\n+    public boolean equals(Object o)\n     {\n-        if ( this == o )\n+        if (this == o)\n         {\n             return true;\n         }\n-        if ( o == null || getClass() != o.getClass() )\n+        if (o == null || getClass() != o.getClass())\n         {\n             return false;\n         }\n         var that = (RoutingResult) o;\n         return timeToLiveMillis == that.timeToLiveMillis &&\n-               Objects.equals( routeEndpoints, that.routeEndpoints ) &&\n-               Objects.equals( writeEndpoints, that.writeEndpoints ) &&\n-               Objects.equals( readEndpoints, that.readEndpoints );\n+          Objects.equals(routeEndpoints, that.routeEndpoints) &&\n+          Objects.equals(writeEndpoints, that.writeEndpoints) &&\n+          Objects.equals(readEndpoints, that.readEndpoints);\n     }\n \n     @Override\n     public int hashCode()\n     {\n-        return Objects.hash( routeEndpoints, writeEndpoints, readEndpoints, timeToLiveMillis );\n+        return Objects.hash(routeEndpoints, writeEndpoints, readEndpoints, timeToLiveMillis);\n     }\n \n     @Override\n     public String toString()\n     {\n         return \"RoutingResult{\" +\n-               \"routeEndpoints=\" + routeEndpoints +\n-               \", writeEndpoints=\" + writeEndpoints +\n-               \", readEndpoints=\" + readEndpoints +\n-               \", timeToLiveMillis=\" + timeToLiveMillis +\n-               '}';\n+          \"routeEndpoints=\" + routeEndpoints +\n+          \", writeEndpoints=\" + writeEndpoints +\n+          \", readEndpoints=\" + readEndpoints +\n+          \", timeToLiveMillis=\" + timeToLiveMillis +\n+          '}';\n     }\n }\n",
            "diff_size": 15
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2802/RoutingResult.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/2802/RoutingResult.java\nindex 945e2446223..1fd41f228c9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2802/RoutingResult.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/2802/RoutingResult.java\n@@ -103,4 +103,4 @@ public class RoutingResult\n                \", timeToLiveMillis=\" + timeToLiveMillis +\n                '}';\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
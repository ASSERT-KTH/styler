{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4404",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "42",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4404/ValueMerger.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4404/ValueMerger.java\nindex e0d2ce9b329..a8893ab53ca 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4404/ValueMerger.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4404/ValueMerger.java\n@@ -17,26 +17,27 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.index.internal.gbptree;\n \n /**\n  * Decides what to do when inserting key which already exists in index. Different implementations of\n  * {@link ValueMerger} can result in unique/non-unique indexes for example.\n  *\n- * @param <KEY> type of keys to merge.\n+ * @param <KEY>   type of keys to merge.\n  * @param <VALUE> type of values to merge.\n  */\n-public interface ValueMerger<KEY,VALUE>\n+public interface ValueMerger<KEY, VALUE>\n {\n-    /**\n-     * Merge an existing value with a new value, returning potentially a combination of the two, or {@code null}\n-     * if no merge was done effectively meaning that nothing should be written.\n-     *\n-     * @param existingKey existing key\n-     * @param newKey new key\n-     * @param existingValue existing value\n-     * @param newValue new value\n-     * @return {@code newValue}, now merged with {@code existingValue}, or {@code null} if no merge was done.\n-     */\n-    VALUE merge( KEY existingKey, KEY newKey, VALUE existingValue, VALUE newValue );\n+  /**\n+   * Merge an existing value with a new value, returning potentially a combination of the two, or {@code null}\n+   * if no merge was done effectively meaning that nothing should be written.\n+   *\n+   * @param existingKey   existing key\n+   * @param newKey        new key\n+   * @param existingValue existing value\n+   * @param newValue      new value\n+   * @return {@code newValue}, now merged with {@code existingValue}, or {@code null} if no merge was done.\n+   */\n+  VALUE merge(KEY existingKey, KEY newKey, VALUE existingValue, VALUE newValue);\n }\n",
            "diff_size": 14
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4404/ValueMerger.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4404/ValueMerger.java\nindex e0d2ce9b329..25e9d2bd297 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4404/ValueMerger.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4404/ValueMerger.java\n@@ -39,4 +39,4 @@ public interface ValueMerger<KEY,VALUE>\n      * @return {@code newValue}, now merged with {@code existingValue}, or {@code null} if no merge was done.\n      */\n     VALUE merge( KEY existingKey, KEY newKey, VALUE existingValue, VALUE newValue );\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
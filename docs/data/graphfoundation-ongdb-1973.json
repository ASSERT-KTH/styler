{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1973",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "40",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1973/HexString.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1973/HexString.java\nindex e6499f25833..ae35ebcf44e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1973/HexString.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1973/HexString.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.string;\n \n /**\n@@ -24,50 +25,50 @@ package org.neo4j.string;\n  */\n public class HexString\n {\n-    private static final char[] hexArray = \"0123456789ABCDEF\".toCharArray();\n+  private static final char[] hexArray = \"0123456789ABCDEF\".toCharArray();\n \n-    private HexString()\n-    {\n-    }\n+  private HexString()\n+  {\n+  }\n \n-    /**\n-     * Converts a byte array to a hexadecimal string.\n-     *\n-     * @param bytes Bytes to be encoded\n-     * @return A string of hex characters [0-9A-F]\n-     */\n-    public static String encodeHexString( byte[] bytes )\n+  /**\n+   * Converts a byte array to a hexadecimal string.\n+   *\n+   * @param bytes Bytes to be encoded\n+   * @return A string of hex characters [0-9A-F]\n+   */\n+  public static String encodeHexString(byte[] bytes)\n+  {\n+    char[] hexChars = new char[bytes.length * 2];\n+    for (int j = 0; j < bytes.length; j++)\n     {\n-        char[] hexChars = new char[bytes.length * 2];\n-        for ( int j = 0; j < bytes.length; j++ )\n-        {\n-            int v = bytes[j] & 0xFF;\n-            hexChars[j * 2] = hexArray[v >>> 4];\n-            hexChars[j * 2 + 1] = hexArray[v & 0x0F];\n-        }\n-        return new String( hexChars );\n+      int v = bytes[j] & 0xFF;\n+      hexChars[j * 2] = hexArray[v >>> 4];\n+      hexChars[j * 2 + 1] = hexArray[v & 0x0F];\n     }\n+    return new String(hexChars);\n+  }\n \n-    /**\n-     * Converts a hexadecimal string to a byte array\n-     *\n-     * @param hexString A string of hexadecimal characters [0-9A-Fa-f] to decode\n-     * @return Decoded bytes, or null if the {@param hexString} is not valid\n-     */\n-    public static byte[] decodeHexString( String hexString )\n+  /**\n+   * Converts a hexadecimal string to a byte array\n+   *\n+   * @param hexString A string of hexadecimal characters [0-9A-Fa-f] to decode\n+   * @return Decoded bytes, or null if the {@param hexString} is not valid\n+   */\n+  public static byte[] decodeHexString(String hexString)\n+  {\n+    int len = hexString.length();\n+    byte[] data = new byte[len / 2];\n+    for (int i = 0, j = 0; i < len; i += 2, j++)\n     {\n-        int len = hexString.length();\n-        byte[] data = new byte[len / 2];\n-        for ( int i = 0, j = 0; i < len; i += 2, j++ )\n-        {\n-            int highByte = Character.digit( hexString.charAt( i ), 16 ) << 4;\n-            int lowByte = Character.digit( hexString.charAt( i + 1 ), 16 );\n-            if ( highByte < 0 || lowByte < 0 )\n-            {\n-                return null;\n-            }\n-            data[j] = (byte) ( highByte + lowByte );\n-        }\n-        return data;\n+      int highByte = Character.digit(hexString.charAt(i), 16) << 4;\n+      int lowByte = Character.digit(hexString.charAt(i + 1), 16);\n+      if (highByte < 0 || lowByte < 0)\n+      {\n+        return null;\n+      }\n+      data[j] = (byte) (highByte + lowByte);\n     }\n+    return data;\n+  }\n }\n",
            "diff_size": 51
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1973/HexString.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1973/HexString.java\nindex e6499f25833..83576ec342b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1973/HexString.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1973/HexString.java\n@@ -66,8 +66,10 @@ public class HexString\n             {\n                 return null;\n             }\n-            data[j] = (byte) ( highByte + lowByte );\n+\n+data[j] = (byte) ( highByte + lowByte );\n         }\n-        return data;\n+\n+return data;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4247",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "44",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "106",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "77",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "103",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "119",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4247/RemoteClient.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4247/RemoteClient.java\nindex c8a8fbffeb1..7af1b1efdd8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4247/RemoteClient.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4247/RemoteClient.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.shell.impl;\n \n import java.io.Serializable;\n@@ -36,107 +37,104 @@ import org.neo4j.shell.ShellServer;\n  */\n public class RemoteClient extends AbstractClient\n {\n-    private ShellServer server;\n-    private final RmiLocation serverLocation;\n-    private final Output out;\n+  private ShellServer server;\n+  private final RmiLocation serverLocation;\n+  private final Output out;\n \n-    public RemoteClient( Map<String,Serializable> initialSession, RmiLocation serverLocation,\n-            CtrlCHandler ctrlcHandler ) throws ShellException\n-    {\n-        this( initialSession, serverLocation, RemoteOutput.newOutput(), ctrlcHandler );\n-    }\n+  public RemoteClient(Map<String, Serializable> initialSession, RmiLocation serverLocation,\n+                      CtrlCHandler ctrlcHandler) throws ShellException\n+  {\n+    this(initialSession, serverLocation, RemoteOutput.newOutput(), ctrlcHandler);\n+  }\n \n-    public RemoteClient( Map<String,Serializable> initialSession, RmiLocation serverLocation, Output output )\n-            throws ShellException\n-    {\n-        this( initialSession, serverLocation, output, InterruptSignalHandler.getHandler() );\n-    }\n+  public RemoteClient(Map<String, Serializable> initialSession, RmiLocation serverLocation, Output output)\n+      throws ShellException\n+  {\n+    this(initialSession, serverLocation, output, InterruptSignalHandler.getHandler());\n+  }\n \n-    /**\n-     * @param serverLocation the RMI location of the server to connect to.\n-     * @throws ShellException if no server was found at the RMI location.\n-     */\n-    public RemoteClient( Map<String,Serializable> initialSession, RmiLocation serverLocation, Output out,\n-            CtrlCHandler ctrlcHandler ) throws ShellException\n-    {\n-        super( initialSession, ctrlcHandler );\n-        this.serverLocation = serverLocation;\n-        this.out = out;\n-        this.server = findRemoteServer();\n-    }\n+  /**\n+   * @param serverLocation the RMI location of the server to connect to.\n+   * @throws ShellException if no server was found at the RMI location.\n+   */\n+  public RemoteClient(Map<String, Serializable> initialSession, RmiLocation serverLocation, Output out,\n+                      CtrlCHandler ctrlcHandler) throws ShellException\n+  {\n+    super(initialSession, ctrlcHandler);\n+    this.serverLocation = serverLocation;\n+    this.out = out;\n+    this.server = findRemoteServer();\n+  }\n \n-    private ShellServer findRemoteServer() throws ShellException\n+  private ShellServer findRemoteServer() throws ShellException\n+  {\n+    try\n     {\n-        try\n-        {\n-            ShellServer result = (ShellServer) this.serverLocation.getBoundObject();\n-            sayHi( result );\n-            updateTimeForMostRecentConnection();\n-            return result;\n-        }\n-        catch ( RemoteException e )\n-        {\n-            throw ShellException.wrapCause( e );\n-        }\n+      ShellServer result = (ShellServer) this.serverLocation.getBoundObject();\n+      sayHi(result);\n+      updateTimeForMostRecentConnection();\n+      return result;\n+    } catch (RemoteException e)\n+    {\n+      throw ShellException.wrapCause(e);\n     }\n+  }\n \n-    @Override\n-    public Output getOutput()\n+  @Override\n+  public Output getOutput()\n+  {\n+    return this.out;\n+  }\n+\n+  @Override\n+  public ShellServer getServer()\n+  {\n+    // Poke the server by calling a method, f.ex. the welcome() method.\n+    // If the connection is lost then try to reconnect, using the last\n+    // server lookup address.\n+    boolean hadServer = this.server != null;\n+    boolean shouldTryToReconnect = this.server == null;\n+    try\n+    {\n+      if (!shouldTryToReconnect)\n+      {\n+        server.welcome(initialSession);\n+      }\n+    } catch (RemoteException | ShellException ignored)\n     {\n-        return this.out;\n+      shouldTryToReconnect = true;\n     }\n \n-    @Override\n-    public ShellServer getServer()\n+    Exception originException = null;\n+    if (shouldTryToReconnect)\n     {\n-        // Poke the server by calling a method, f.ex. the welcome() method.\n-        // If the connection is lost then try to reconnect, using the last\n-        // server lookup address.\n-        boolean hadServer = this.server != null;\n-        boolean shouldTryToReconnect = this.server == null;\n-        try\n-        {\n-            if ( !shouldTryToReconnect )\n-            {\n-                server.welcome( initialSession );\n-            }\n-        }\n-        catch ( RemoteException | ShellException ignored )\n-        {\n-            shouldTryToReconnect = true;\n-        }\n-\n-        Exception originException = null;\n-        if ( shouldTryToReconnect )\n-        {\n-            this.server = null;\n-            try\n-            {\n-                this.server = findRemoteServer();\n-                if ( hadServer )\n-                {\n-                    getOutput().println( \"[Reconnected to server]\" );\n-                }\n-            }\n-            catch ( ShellException | RemoteException ee )\n-            {\n-                // Ok\n-                originException = ee;\n-            }\n-        }\n-\n-        if ( this.server == null )\n+      this.server = null;\n+      try\n+      {\n+        this.server = findRemoteServer();\n+        if (hadServer)\n         {\n-            throw new RuntimeException( \"Server closed or cannot be reached anymore: \" +\n-                    (originException != null ? originException.getMessage() : \"\"), originException );\n+          getOutput().println(\"[Reconnected to server]\");\n         }\n-        return this.server;\n+      } catch (ShellException | RemoteException ee)\n+      {\n+        // Ok\n+        originException = ee;\n+      }\n     }\n \n-    @Override\n-    public void shutdown()\n+    if (this.server == null)\n     {\n-        super.shutdown();\n-        tryUnexport( this.out );\n+      throw new RuntimeException(\"Server closed or cannot be reached anymore: \" +\n+          (originException != null ? originException.getMessage() : \"\"), originException);\n     }\n+    return this.server;\n+  }\n+\n+  @Override\n+  public void shutdown()\n+  {\n+    super.shutdown();\n+    tryUnexport(this.out);\n+  }\n }\n",
            "diff_size": 122
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "129",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 171).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4247/RemoteClient.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4247/RemoteClient.java\nindex c8a8fbffeb1..9e35a75cfad 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4247/RemoteClient.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4247/RemoteClient.java\n@@ -42,13 +42,12 @@ public class RemoteClient extends AbstractClient\n \n     public RemoteClient( Map<String,Serializable> initialSession, RmiLocation serverLocation,\n             CtrlCHandler ctrlcHandler ) throws ShellException\n-    {\n+{\n         this( initialSession, serverLocation, RemoteOutput.newOutput(), ctrlcHandler );\n     }\n \n-    public RemoteClient( Map<String,Serializable> initialSession, RmiLocation serverLocation, Output output )\n-            throws ShellException\n-    {\n+    public RemoteClient( Map<String,Serializable> initialSession, RmiLocation serverLocation, Output output ) throws ShellException\n+{\n         this( initialSession, serverLocation, output, InterruptSignalHandler.getHandler() );\n     }\n \n@@ -58,7 +57,7 @@ public class RemoteClient extends AbstractClient\n      */\n     public RemoteClient( Map<String,Serializable> initialSession, RmiLocation serverLocation, Output out,\n             CtrlCHandler ctrlcHandler ) throws ShellException\n-    {\n+{\n         super( initialSession, ctrlcHandler );\n         this.serverLocation = serverLocation;\n         this.out = out;\n@@ -127,8 +126,7 @@ public class RemoteClient extends AbstractClient\n \n         if ( this.server == null )\n         {\n-            throw new RuntimeException( \"Server closed or cannot be reached anymore: \" +\n-                    (originException != null ? originException.getMessage() : \"\"), originException );\n+            throw new RuntimeException( \"Server closed or cannot be reached anymore: \" + ( originException != null ? originException.getMessage() : \"\"), originException );\n         }\n         return this.server;\n     }\n@@ -139,4 +137,4 @@ public class RemoteClient extends AbstractClient\n         super.shutdown();\n         tryUnexport( this.out );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
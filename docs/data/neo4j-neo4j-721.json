{
    "project_name": "neo4j-neo4j",
    "error_id": "721",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "53",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "60",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "106",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "102",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/721/SocketTransport.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/721/SocketTransport.java\nindex 8f99c768df3..6b4d97b6367 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/721/SocketTransport.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/721/SocketTransport.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.bolt.transport;\n \n import io.netty.buffer.ByteBufAllocator;\n@@ -49,10 +50,10 @@ public class SocketTransport implements NettyServer.ProtocolInitializer\n     private final long maxMessageSize;\n     private final ByteBufAllocator allocator;\n \n-    public SocketTransport( String connector, SocketAddress address, SslContext sslCtx, boolean encryptionRequired,\n-            LogProvider logging, TransportThrottleGroup throttleGroup,\n-            BoltProtocolFactory boltProtocolFactory, NetworkConnectionTracker connectionTracker,\n-            Duration channelTimeout, long maxMessageSize, ByteBufAllocator allocator )\n+    public SocketTransport(String connector, SocketAddress address, SslContext sslCtx, boolean encryptionRequired,\n+                           LogProvider logging, TransportThrottleGroup throttleGroup,\n+                           BoltProtocolFactory boltProtocolFactory, NetworkConnectionTracker connectionTracker,\n+                           Duration channelTimeout, long maxMessageSize, ByteBufAllocator allocator)\n     {\n         this.connector = connector;\n         this.address = address;\n@@ -73,24 +74,24 @@ public class SocketTransport implements NettyServer.ProtocolInitializer\n         return new ChannelInitializer<>()\n         {\n             @Override\n-            public void initChannel( Channel ch )\n+            public void initChannel(Channel ch)\n             {\n-                ch.config().setAllocator( allocator );\n+                ch.config().setAllocator(allocator);\n \n-                BoltChannel boltChannel = newBoltChannel( ch );\n-                connectionTracker.add( boltChannel );\n-                ch.closeFuture().addListener( future -> connectionTracker.remove( boltChannel ) );\n+                BoltChannel boltChannel = newBoltChannel(ch);\n+                connectionTracker.add(boltChannel);\n+                ch.closeFuture().addListener(future -> connectionTracker.remove(boltChannel));\n \n                 // install throttles\n-                throttleGroup.install( ch );\n+                throttleGroup.install(ch);\n \n                 // add a close listener that will uninstall throttles\n-                ch.closeFuture().addListener( future -> throttleGroup.uninstall( ch ) );\n+                ch.closeFuture().addListener(future -> throttleGroup.uninstall(ch));\n \n                 TransportSelectionHandler transportSelectionHandler =\n-                        new TransportSelectionHandler( boltChannel, sslCtx,\n-                                encryptionRequired, false, logging, boltProtocolFactory );\n-                ch.pipeline().addLast( transportSelectionHandler );\n+                  new TransportSelectionHandler(boltChannel, sslCtx,\n+                    encryptionRequired, false, logging, boltProtocolFactory);\n+                ch.pipeline().addLast(transportSelectionHandler);\n             }\n         };\n     }\n@@ -101,9 +102,9 @@ public class SocketTransport implements NettyServer.ProtocolInitializer\n         return address;\n     }\n \n-    private BoltChannel newBoltChannel( Channel ch )\n+    private BoltChannel newBoltChannel(Channel ch)\n     {\n-        var protector = new UnauthenticatedChannelProtector( ch.pipeline(), channelTimeout, maxMessageSize );\n-        return new BoltChannel( connectionTracker.newConnectionId( connector ), connector, ch, protector );\n+        var protector = new UnauthenticatedChannelProtector(ch.pipeline(), channelTimeout, maxMessageSize);\n+        return new BoltChannel(connectionTracker.newConnectionId(connector), connector, ch, protector);\n     }\n }\n",
            "diff_size": 18
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2349",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "50",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "152",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "111",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "126",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "111",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2349/ConstraintSemantics.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2349/ConstraintSemantics.java\nindex 393b9cc01ba..3ac21cc13f8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2349/ConstraintSemantics.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2349/ConstraintSemantics.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.constraints;\n \n import java.util.Iterator;\n@@ -45,40 +46,40 @@ import org.neo4j.storageengine.api.txstate.TxStateVisitor;\n  */\n public interface ConstraintSemantics\n {\n-    @Deprecated\n-    void validateNodeKeyConstraint( Iterator<Cursor<NodeItem>> allNodes, LabelSchemaDescriptor descriptor,\n-            BiPredicate<NodeItem,Integer> hasProperty ) throws CreateConstraintFailureException;\n+  @Deprecated\n+  void validateNodeKeyConstraint(Iterator<Cursor<NodeItem>> allNodes, LabelSchemaDescriptor descriptor,\n+                                 BiPredicate<NodeItem, Integer> hasProperty) throws CreateConstraintFailureException;\n \n-    @Deprecated\n-    void validateNodePropertyExistenceConstraint( Iterator<Cursor<NodeItem>> allNodes, LabelSchemaDescriptor descriptor,\n-            BiPredicate<NodeItem,Integer> hasProperty ) throws CreateConstraintFailureException;\n+  @Deprecated\n+  void validateNodePropertyExistenceConstraint(Iterator<Cursor<NodeItem>> allNodes, LabelSchemaDescriptor descriptor,\n+                                               BiPredicate<NodeItem, Integer> hasProperty) throws CreateConstraintFailureException;\n \n-    @Deprecated\n-    void validateRelationshipPropertyExistenceConstraint( Cursor<RelationshipItem> allRelationships,\n-            RelationTypeSchemaDescriptor descriptor, BiPredicate<RelationshipItem,Integer> hasPropertyCheck )\n-            throws CreateConstraintFailureException;\n+  @Deprecated\n+  void validateRelationshipPropertyExistenceConstraint(Cursor<RelationshipItem> allRelationships,\n+                                                       RelationTypeSchemaDescriptor descriptor, BiPredicate<RelationshipItem, Integer> hasPropertyCheck)\n+      throws CreateConstraintFailureException;\n \n-    void validateNodeKeyConstraint( NodeLabelIndexCursor allNodes, NodeCursor nodeCursor,\n-            PropertyCursor propertyCursor, LabelSchemaDescriptor descriptor ) throws CreateConstraintFailureException;\n+  void validateNodeKeyConstraint(NodeLabelIndexCursor allNodes, NodeCursor nodeCursor,\n+                                 PropertyCursor propertyCursor, LabelSchemaDescriptor descriptor) throws CreateConstraintFailureException;\n \n-    void validateNodePropertyExistenceConstraint( NodeLabelIndexCursor allNodes, NodeCursor nodeCursor,\n-            PropertyCursor propertyCursor, LabelSchemaDescriptor descriptor ) throws CreateConstraintFailureException;\n+  void validateNodePropertyExistenceConstraint(NodeLabelIndexCursor allNodes, NodeCursor nodeCursor,\n+                                               PropertyCursor propertyCursor, LabelSchemaDescriptor descriptor) throws CreateConstraintFailureException;\n \n-    void validateRelationshipPropertyExistenceConstraint( RelationshipScanCursor relationshipCursor,\n-            PropertyCursor propertyCursor, RelationTypeSchemaDescriptor descriptor )\n-            throws CreateConstraintFailureException;\n+  void validateRelationshipPropertyExistenceConstraint(RelationshipScanCursor relationshipCursor,\n+                                                       PropertyCursor propertyCursor, RelationTypeSchemaDescriptor descriptor)\n+      throws CreateConstraintFailureException;\n \n-    ConstraintDescriptor readConstraint( ConstraintRule rule );\n+  ConstraintDescriptor readConstraint(ConstraintRule rule);\n \n-    ConstraintRule createUniquenessConstraintRule( long ruleId, UniquenessConstraintDescriptor descriptor,\n-            long indexId );\n+  ConstraintRule createUniquenessConstraintRule(long ruleId, UniquenessConstraintDescriptor descriptor,\n+                                                long indexId);\n \n-    ConstraintRule createNodeKeyConstraintRule( long ruleId, NodeKeyConstraintDescriptor descriptor, long indexId )\n-            throws CreateConstraintFailureException;\n+  ConstraintRule createNodeKeyConstraintRule(long ruleId, NodeKeyConstraintDescriptor descriptor, long indexId)\n+      throws CreateConstraintFailureException;\n \n-    ConstraintRule createExistenceConstraint( long ruleId, ConstraintDescriptor descriptor )\n-            throws CreateConstraintFailureException;\n+  ConstraintRule createExistenceConstraint(long ruleId, ConstraintDescriptor descriptor)\n+      throws CreateConstraintFailureException;\n \n-    TxStateVisitor decorateTxStateVisitor( StoreReadLayer storeLayer, ReadableTransactionState state,\n-            TxStateVisitor visitor );\n+  TxStateVisitor decorateTxStateVisitor(StoreReadLayer storeLayer, ReadableTransactionState state,\n+                                        TxStateVisitor visitor);\n }\n",
            "diff_size": 27
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "49",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 191).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "52",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 205).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "56",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 236).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "57",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 218).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "58",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 215).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2349/ConstraintSemantics.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2349/ConstraintSemantics.java\nindex 393b9cc01ba..3386c4a7bc4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2349/ConstraintSemantics.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2349/ConstraintSemantics.java\n@@ -46,39 +46,22 @@ import org.neo4j.storageengine.api.txstate.TxStateVisitor;\n public interface ConstraintSemantics\n {\n     @Deprecated\n-    void validateNodeKeyConstraint( Iterator<Cursor<NodeItem>> allNodes, LabelSchemaDescriptor descriptor,\n-            BiPredicate<NodeItem,Integer> hasProperty ) throws CreateConstraintFailureException;\n+    void validateNodeKeyConstraint( Iterator<Cursor<NodeItem>> allNodes, LabelSchemaDescriptor descriptor, BiPredicate<NodeItem,Integer> hasProperty ) throws CreateConstraintFailureException;\n \n-    @Deprecated\n-    void validateNodePropertyExistenceConstraint( Iterator<Cursor<NodeItem>> allNodes, LabelSchemaDescriptor descriptor,\n-            BiPredicate<NodeItem,Integer> hasProperty ) throws CreateConstraintFailureException;\n+@Deprecated\n+    void validateNodePropertyExistenceConstraint( Iterator<Cursor<NodeItem>> allNodes, LabelSchemaDescriptor descriptor, BiPredicate<NodeItem,Integer> hasProperty ) throws CreateConstraintFailureException;\n \n-    @Deprecated\n+@Deprecated\n     void validateRelationshipPropertyExistenceConstraint( Cursor<RelationshipItem> allRelationships,\n-            RelationTypeSchemaDescriptor descriptor, BiPredicate<RelationshipItem,Integer> hasPropertyCheck )\n-            throws CreateConstraintFailureException;\n-\n-    void validateNodeKeyConstraint( NodeLabelIndexCursor allNodes, NodeCursor nodeCursor,\n-            PropertyCursor propertyCursor, LabelSchemaDescriptor descriptor ) throws CreateConstraintFailureException;\n-\n-    void validateNodePropertyExistenceConstraint( NodeLabelIndexCursor allNodes, NodeCursor nodeCursor,\n-            PropertyCursor propertyCursor, LabelSchemaDescriptor descriptor ) throws CreateConstraintFailureException;\n-\n-    void validateRelationshipPropertyExistenceConstraint( RelationshipScanCursor relationshipCursor,\n-            PropertyCursor propertyCursor, RelationTypeSchemaDescriptor descriptor )\n-            throws CreateConstraintFailureException;\n-\n-    ConstraintDescriptor readConstraint( ConstraintRule rule );\n-\n-    ConstraintRule createUniquenessConstraintRule( long ruleId, UniquenessConstraintDescriptor descriptor,\n+            RelationTypeSchemaDescriptor descriptor, BiPredicate<RelationshipItem,Integer> hasPropertyCheck ) throws CreateConstraintFailureException; void validateNodeKeyConstraint( NodeLabelIndexCursor allNodes, NodeCursor nodeCursor,\n+            PropertyCursor propertyCursor, LabelSchemaDescriptor descriptor ) throws CreateConstraintFailureException; void validateNodePropertyExistenceConstraint( NodeLabelIndexCursor allNodes, NodeCursor nodeCursor,\n+            PropertyCursor propertyCursor, LabelSchemaDescriptor descriptor ) throws CreateConstraintFailureException; void validateRelationshipPropertyExistenceConstraint( RelationshipScanCursor relationshipCursor,\n+            PropertyCursor propertyCursor, RelationTypeSchemaDescriptor descriptor ) throws CreateConstraintFailureException;\n+ConstraintDescriptor readConstraint( ConstraintRule rule );\n+ConstraintRule createUniquenessConstraintRule( long ruleId, UniquenessConstraintDescriptor descriptor,\n             long indexId );\n-\n-    ConstraintRule createNodeKeyConstraintRule( long ruleId, NodeKeyConstraintDescriptor descriptor, long indexId )\n-            throws CreateConstraintFailureException;\n-\n-    ConstraintRule createExistenceConstraint( long ruleId, ConstraintDescriptor descriptor )\n-            throws CreateConstraintFailureException;\n-\n-    TxStateVisitor decorateTxStateVisitor( StoreReadLayer storeLayer, ReadableTransactionState state,\n+ConstraintRule createNodeKeyConstraintRule( long ruleId, NodeKeyConstraintDescriptor descriptor, long indexId ) throws CreateConstraintFailureException;\n+ConstraintRule createExistenceConstraint( long ruleId, ConstraintDescriptor descriptor ) throws CreateConstraintFailureException;\n+TxStateVisitor decorateTxStateVisitor( StoreReadLayer storeLayer, ReadableTransactionState state,\n             TxStateVisitor visitor );\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 31
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
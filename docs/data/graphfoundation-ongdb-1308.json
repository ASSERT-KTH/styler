{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1308",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "35",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "35",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1308/SparseNodeFirstRelationshipProcessor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1308/SparseNodeFirstRelationshipProcessor.java\nindex fd67ab1e497..7008d6b510e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1308/SparseNodeFirstRelationshipProcessor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1308/SparseNodeFirstRelationshipProcessor.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.unsafe.impl.batchimport;\n \n import org.neo4j.kernel.impl.store.record.NodeRecord;\n@@ -29,32 +30,32 @@ import org.neo4j.unsafe.impl.batchimport.cache.NodeRelationshipCache;\n  */\n public class SparseNodeFirstRelationshipProcessor implements RecordProcessor<NodeRecord>\n {\n-    private final NodeRelationshipCache cache;\n+  private final NodeRelationshipCache cache;\n \n-    public SparseNodeFirstRelationshipProcessor( NodeRelationshipCache cache )\n-    {\n-        this.cache = cache;\n-    }\n+  public SparseNodeFirstRelationshipProcessor(NodeRelationshipCache cache)\n+  {\n+    this.cache = cache;\n+  }\n \n-    @Override\n-    public boolean process( NodeRecord node )\n+  @Override\n+  public boolean process(NodeRecord node)\n+  {\n+    long nodeId = node.getId();\n+    long firstRel = cache.getFirstRel(nodeId, NodeRelationshipCache.NO_GROUP_VISITOR);\n+    if (firstRel != -1)\n     {\n-        long nodeId = node.getId();\n-        long firstRel = cache.getFirstRel( nodeId, NodeRelationshipCache.NO_GROUP_VISITOR );\n-        if ( firstRel != -1 )\n-        {\n-            node.setNextRel( firstRel );\n-        }\n-        return true;\n+      node.setNextRel(firstRel);\n     }\n+    return true;\n+  }\n \n-    @Override\n-    public void done()\n-    {   // Nothing to do here\n-    }\n+  @Override\n+  public void done()\n+  {   // Nothing to do here\n+  }\n \n-    @Override\n-    public void close()\n-    {   // Nothing to do here\n-    }\n+  @Override\n+  public void close()\n+  {   // Nothing to do here\n+  }\n }\n",
            "diff_size": 29
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1308/SparseNodeFirstRelationshipProcessor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1308/SparseNodeFirstRelationshipProcessor.java\nindex fd67ab1e497..0ed0fe3ba45 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1308/SparseNodeFirstRelationshipProcessor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1308/SparseNodeFirstRelationshipProcessor.java\n@@ -50,11 +50,13 @@ public class SparseNodeFirstRelationshipProcessor implements RecordProcessor<Nod\n \n     @Override\n     public void done()\n-    {   // Nothing to do here\n+    {\n+    // Nothing to do here\n     }\n \n     @Override\n     public void close()\n-    {   // Nothing to do here\n+    {\n+    // Nothing to do here\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
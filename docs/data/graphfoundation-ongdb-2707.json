{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2707",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "38",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "14",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2707/BackupSupportingClassesFactoryProvider.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2707/BackupSupportingClassesFactoryProvider.java\nindex a935d658638..7b4caa7a112 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2707/BackupSupportingClassesFactoryProvider.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2707/BackupSupportingClassesFactoryProvider.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.backup.impl;\n \n import java.util.stream.Stream;\n@@ -28,41 +29,41 @@ import static java.util.Comparator.comparingInt;\n \n public class BackupSupportingClassesFactoryProvider extends Service\n {\n-    /**\n-     * Create a new instance of a service implementation identified with the\n-     * specified key(s).\n-     *\n-     * @param key the main key for identifying this service implementation\n-     */\n-    public BackupSupportingClassesFactoryProvider( String key )\n-    {\n-        super( key );\n-    }\n+  /**\n+   * Create a new instance of a service implementation identified with the\n+   * specified key(s).\n+   *\n+   * @param key the main key for identifying this service implementation\n+   */\n+  public BackupSupportingClassesFactoryProvider(String key)\n+  {\n+    super(key);\n+  }\n \n-    public BackupSupportingClassesFactoryProvider()\n-    {\n-        super( \"default-backup-support-provider\" );\n-    }\n+  public BackupSupportingClassesFactoryProvider()\n+  {\n+    super(\"default-backup-support-provider\");\n+  }\n \n-    public BackupSupportingClassesFactory getFactory( BackupModule backupModule )\n-    {\n-        return new BackupSupportingClassesFactory( backupModule );\n-    }\n+  public BackupSupportingClassesFactory getFactory(BackupModule backupModule)\n+  {\n+    return new BackupSupportingClassesFactory(backupModule);\n+  }\n \n-    public static Stream<BackupSupportingClassesFactoryProvider> getProvidersByPriority()\n-    {\n-        Stream<BackupSupportingClassesFactoryProvider> providers = StreamSupport.stream(\n-                load( BackupSupportingClassesFactoryProvider.class ).spliterator(), false );\n-        // Inject the default provider into the stream, so it participates in sorting by priority.\n-        providers = Stream.concat( providers, Stream.of( new BackupSupportingClassesFactoryProvider() ) );\n-        return providers.sorted( comparingInt( BackupSupportingClassesFactoryProvider::getPriority ).reversed() );\n-    }\n+  public static Stream<BackupSupportingClassesFactoryProvider> getProvidersByPriority()\n+  {\n+    Stream<BackupSupportingClassesFactoryProvider> providers = StreamSupport.stream(\n+        load(BackupSupportingClassesFactoryProvider.class).spliterator(), false);\n+    // Inject the default provider into the stream, so it participates in sorting by priority.\n+    providers = Stream.concat(providers, Stream.of(new BackupSupportingClassesFactoryProvider()));\n+    return providers.sorted(comparingInt(BackupSupportingClassesFactoryProvider::getPriority).reversed());\n+  }\n \n-    /**\n-     * The higher the priority value, the greater the preference\n-     */\n-    protected int getPriority()\n-    {\n-        return 42;\n-    }\n+  /**\n+   * The higher the priority value, the greater the preference\n+   */\n+  protected int getPriority()\n+  {\n+    return 42;\n+  }\n }\n",
            "diff_size": 34
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "54",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 165).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2707/BackupSupportingClassesFactoryProvider.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2707/BackupSupportingClassesFactoryProvider.java\nindex a935d658638..7f54972fdca 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2707/BackupSupportingClassesFactoryProvider.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2707/BackupSupportingClassesFactoryProvider.java\n@@ -51,9 +51,8 @@ public class BackupSupportingClassesFactoryProvider extends Service\n \n     public static Stream<BackupSupportingClassesFactoryProvider> getProvidersByPriority()\n     {\n-        Stream<BackupSupportingClassesFactoryProvider> providers = StreamSupport.stream(\n-                load( BackupSupportingClassesFactoryProvider.class ).spliterator(), false );\n-        // Inject the default provider into the stream, so it participates in sorting by priority.\n+        Stream<BackupSupportingClassesFactoryProvider> providers = StreamSupport.stream( load( BackupSupportingClassesFactoryProvider.class ).spliterator(), false );\n+    // Inject the default provider into the stream, so it participates in sorting by priority.\n         providers = Stream.concat( providers, Stream.of( new BackupSupportingClassesFactoryProvider() ) );\n         return providers.sorted( comparingInt( BackupSupportingClassesFactoryProvider::getPriority ).reversed() );\n     }\n@@ -65,4 +64,4 @@ public class BackupSupportingClassesFactoryProvider extends Service\n     {\n         return 42;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "Activiti-Activiti",
    "error_id": "964",
    "information": {
        "errors": [
            {
                "line": "16",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * limitations under the License.\n */\npackage org.activiti.api.runtime.model.impl;\n\nimport java.util.Objects;\n",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/964/BPMNSignalImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler/964/BPMNSignalImpl.java\nindex 785f96a7f16..0412731ec6b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/964/BPMNSignalImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler/964/BPMNSignalImpl.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.api.runtime.model.impl;\n \n import java.util.Objects;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/964/BPMNSignalImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/intellij/964/BPMNSignalImpl.java\nindex 785f96a7f16..ebf80dd1ebd 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/964/BPMNSignalImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/intellij/964/BPMNSignalImpl.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.api.runtime.model.impl;\n \n import java.util.Objects;\n@@ -51,17 +52,17 @@ public class BPMNSignalImpl extends BPMNElementImpl implements BPMNSignal {\n         BPMNSignalImpl that = (BPMNSignalImpl) o;\n \n         return Objects.equals(getElementId(),\n-                              that.getElementId()) &&\n+                that.getElementId()) &&\n                 Objects.equals(signalPayload,\n-                               that.getSignalPayload());\n+                        that.getSignalPayload());\n     }\n \n     @Override\n     public int hashCode() {\n \n         return Objects.hash(getElementId(),\n-                            signalPayload != null ? signalPayload.getId() : null,\n-                            signalPayload != null ? signalPayload.getName() : null);\n+                signalPayload != null ? signalPayload.getId() : null,\n+                signalPayload != null ? signalPayload.getName() : null);\n     }\n \n     @Override\n",
            "diff_size": 5
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "16",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "23",
                    "severity": "error",
                    "message": "'CLASS_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/964/BPMNSignalImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/codebuff/964/BPMNSignalImpl.java\nindex 785f96a7f16..96dbe53994d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/964/BPMNSignalImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/codebuff/964/BPMNSignalImpl.java\n@@ -16,59 +16,49 @@\n package org.activiti.api.runtime.model.impl;\n \n import java.util.Objects;\n-\n import org.activiti.api.process.model.BPMNSignal;\n import org.activiti.api.process.model.payloads.SignalPayload;\n \n+\n public class BPMNSignalImpl extends BPMNElementImpl implements BPMNSignal {\n \n-    private SignalPayload signalPayload;\n+  private SignalPayload signalPayload;\n \n-    public BPMNSignalImpl() {\n-    }\n-\n-    public BPMNSignalImpl(String elementId\n-    ) {\n-        this.setElementId(elementId);\n-    }\n+  public BPMNSignalImpl() {\n+  }\n \n-    public SignalPayload getSignalPayload() {\n-        return signalPayload;\n-    }\n+  public BPMNSignalImpl(String elementId) {\n+    this.setElementId(elementId);\n+  }\n \n-    public void setSignalPayload(SignalPayload signalPayload) {\n-        this.signalPayload = signalPayload;\n-    }\n+  public SignalPayload getSignalPayload() {\n+    return signalPayload;\n+  }\n \n-    @Override\n-    public boolean equals(Object o) {\n-        if (this == o) {\n-            return true;\n-        }\n-        if (o == null || getClass() != o.getClass()) {\n-            return false;\n-        }\n-        BPMNSignalImpl that = (BPMNSignalImpl) o;\n+  public void setSignalPayload(SignalPayload signalPayload) {\n+    this.signalPayload = signalPayload;\n+  }\n \n-        return Objects.equals(getElementId(),\n-                              that.getElementId()) &&\n-                Objects.equals(signalPayload,\n-                               that.getSignalPayload());\n+  @Override\n+  public boolean equals(Object o) {\n+    if (this == o) {\n+      return true;\n+    }\n+    if (o == null || getClass() != o.getClass()) {\n+      return false;\n     }\n \n-    @Override\n-    public int hashCode() {\n+    BPMNSignalImpl that = (BPMNSignalImpl) o;\n+    return Objects.equals(getElementId(), that.getElementId()) && Objects.equals(signalPayload, that.getSignalPayload());\n+  }\n \n-        return Objects.hash(getElementId(),\n-                            signalPayload != null ? signalPayload.getId() : null,\n-                            signalPayload != null ? signalPayload.getName() : null);\n-    }\n+  @Override\n+  public int hashCode() {\n+    return Objects.hash(getElementId(), signalPayload != null ? signalPayload.getId() : null, signalPayload != null ? signalPayload.getName() : null);\n+  }\n \n-    @Override\n-    public String toString() {\n-        return \"BPMNActivityImpl{\" +\n-                \", elementId='\" + getElementId() + '\\'' +\n-                \", signalPayload='\" + (signalPayload != null ? signalPayload.toString() : null) + '\\'' +\n-                '}';\n-    }\n-}\n+  @Override\n+  public String toString() {\n+    return \"BPMNActivityImpl{\" + \", elementId='\" + getElementId() + '\\'' + \", signalPayload='\" + (signalPayload != null ? signalPayload.toString() : null) + '\\'' + '}';\n+  }\n+}\n\\ No newline at end of file\n",
            "diff_size": 47
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/964/BPMNSignalImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_random/964/BPMNSignalImpl.java\nindex 785f96a7f16..0412731ec6b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/964/BPMNSignalImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_random/964/BPMNSignalImpl.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.api.runtime.model.impl;\n \n import java.util.Objects;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/964/BPMNSignalImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_three_grams/964/BPMNSignalImpl.java\nindex 785f96a7f16..0412731ec6b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/964/BPMNSignalImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_three_grams/964/BPMNSignalImpl.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.api.runtime.model.impl;\n \n import java.util.Objects;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
{
    "project_name": "Angel-ML-angel",
    "error_id": "823",
    "information": {
        "errors": [
            {
                "line": "6",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 102).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * Copyright (C) 2017-2018 THL A29 Limited, a Tencent company. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in\n * compliance with the License. You may obtain a copy of the License at\n *\n * https://opensource.org/licenses/Apache-2.0",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/823/CompIntLongRowUpdateSplit.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/823/CompIntLongRowUpdateSplit.java\nindex 81b941ad96d..c7f9f8665fb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/823/CompIntLongRowUpdateSplit.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/823/CompIntLongRowUpdateSplit.java\n@@ -48,7 +48,7 @@ public class CompIntLongRowUpdateSplit extends RowUpdateSplit {\n    * Create a new CompIntIntRowUpdateSplit.\n    *\n    * @param rowIndex row index\n-   * @param split row update split\n+   * @param split    row update split\n    */\n   public CompIntLongRowUpdateSplit(int rowIndex, IntLongVector split, int maxItemNum) {\n     super(rowIndex, RowType.T_LONG_DENSE, -1, -1);\n",
            "diff_size": 1
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "113",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 109).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/823/CompIntLongRowUpdateSplit.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/823/CompIntLongRowUpdateSplit.java\nindex 81b941ad96d..84991e859f8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/823/CompIntLongRowUpdateSplit.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/823/CompIntLongRowUpdateSplit.java\n@@ -15,7 +15,6 @@\n  *\n  */\n \n-\n package com.tencent.angel.psagent.matrix.oplog.cache;\n \n import com.tencent.angel.ml.math2.VFactory;\n@@ -111,8 +110,7 @@ public class CompIntLongRowUpdateSplit extends RowUpdateSplit {\n         buf.writeLong(values[i]);\n       }\n     } else {\n-      throw new UnsupportedOperationException(\n-          \"unsupport split for storage \" + storage.getClass().getName());\n+      throw new UnsupportedOperationException(\"unsupport split for storage \" + storage.getClass().getName());\n     }\n   }\n \n@@ -151,4 +149,4 @@ public class CompIntLongRowUpdateSplit extends RowUpdateSplit {\n       return 4 + super.bufferLen() + split.getStorage().size() * 12;\n     }\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "118",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 116).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "134",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 146).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/823/CompIntLongRowUpdateSplit.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/823/CompIntLongRowUpdateSplit.java\nindex 81b941ad96d..90631ad93e5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/823/CompIntLongRowUpdateSplit.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/823/CompIntLongRowUpdateSplit.java\n@@ -32,11 +32,13 @@ import it.unimi.dsi.fastutil.objects.ObjectIterator;\n /**\n  * Component int key int row update split\n  */\n+\n public class CompIntLongRowUpdateSplit extends RowUpdateSplit {\n \n   /**\n    * Row update split\n    */\n+\n   private final IntLongVector split;\n \n   /**\n@@ -50,11 +52,11 @@ public class CompIntLongRowUpdateSplit extends RowUpdateSplit {\n    * @param rowIndex row index\n    * @param split row update split\n    */\n+\n   public CompIntLongRowUpdateSplit(int rowIndex, IntLongVector split, int maxItemNum) {\n     super(rowIndex, RowType.T_LONG_DENSE, -1, -1);\n     this.split = split;\n     this.maxItemNum = maxItemNum;\n-\n     if (split != null) {\n       IntLongVectorStorage storage = split.getStorage();\n       if (storage instanceof IntLongDenseVectorStorage) {\n@@ -68,6 +70,7 @@ public class CompIntLongRowUpdateSplit extends RowUpdateSplit {\n   /**\n    * Create a empty CompIntLongRowUpdateSplit.\n    */\n+\n   public CompIntLongRowUpdateSplit() {\n     this(-1, null, -1);\n   }\n@@ -77,6 +80,7 @@ public class CompIntLongRowUpdateSplit extends RowUpdateSplit {\n    *\n    * @return row update split vector\n    */\n+\n   public IntLongVector getSplit() {\n     return split;\n   }\n@@ -85,7 +89,6 @@ public class CompIntLongRowUpdateSplit extends RowUpdateSplit {\n   public void serialize(ByteBuf buf) {\n     super.serialize(buf);\n     IntLongVectorStorage storage = split.getStorage();\n-\n     if (storage instanceof IntLongSparseVectorStorage) {\n       buf.writeInt(storage.size());\n       ObjectIterator<Int2LongMap.Entry> iter = storage.entryIterator();\n@@ -96,29 +99,30 @@ public class CompIntLongRowUpdateSplit extends RowUpdateSplit {\n         buf.writeLong(entry.getLongValue());\n       }\n     } else if (storage instanceof IntLongSortedVectorStorage) {\n-      buf.writeInt(storage.size());\n-      int[] indices = storage.getIndices();\n-      long[] values = storage.getValues();\n-      for (int i = 0; i < indices.length; i++) {\n-        buf.writeInt(indices[i]);\n-        buf.writeLong(values[i]);\n-      }\n+             buf.writeInt(storage.size());\n+\n+             int[] indices = storage.getIndices();\n+             long[] values = storage.getValues();\n+             for (int i = 0; i < indices.length; i++) {\n+               buf.writeInt(indices[i]);\n+               buf.writeLong(values[i]);\n+             }\n     } else if (storage instanceof IntLongDenseVectorStorage) {\n-      long[] values = storage.getValues();\n-      int writeSize = values.length < maxItemNum ? values.length : maxItemNum;\n-      buf.writeInt(writeSize);\n-      for (int i = 0; i < writeSize; i++) {\n-        buf.writeLong(values[i]);\n-      }\n-    } else {\n-      throw new UnsupportedOperationException(\n-          \"unsupport split for storage \" + storage.getClass().getName());\n-    }\n+             long[] values = storage.getValues();\n+             int writeSize = values.length < maxItemNum ? values.length : maxItemNum;\n+             buf.writeInt(writeSize);\n+             for (int i = 0; i < writeSize; i++) {\n+               buf.writeLong(values[i]);\n+             }\n+           } else {\n+             throw new UnsupportedOperationException(\"unsupport split for storage \" + storage.getClass().getName());\n+           }\n   }\n \n   @Override\n   public void deserialize(ByteBuf buf) {\n     super.deserialize(buf);\n+\n     int elemNum = buf.readInt();\n     if (rowType == RowType.T_LONG_DENSE_COMPONENT) {\n       long[] values = new long[elemNum];\n@@ -127,12 +131,10 @@ public class CompIntLongRowUpdateSplit extends RowUpdateSplit {\n       }\n       vector = VFactory.denseLongVector(values);\n     } else if (rowType == RowType.T_LONG_SPARSE_COMPONENT) {\n-      vector = VFactory.sparseLongVector(\n-          (int) (splitContext.getPartKey().getEndCol() - splitContext.getPartKey().getStartCol()),\n-          elemNum);\n-      for (int i = 0; i < elemNum; i++) {\n-        ((IntLongVector) vector).set(buf.readInt(), buf.readLong());\n-      }\n+             vector = VFactory.sparseLongVector((int) (splitContext.getPartKey().getEndCol() - splitContext.getPartKey().getStartCol()), elemNum);\n+             for (int i = 0; i < elemNum; i++) {\n+               ((IntLongVector) vector).set(buf.readInt(), buf.readLong());\n+             }\n     } else {\n       throw new UnsupportedOperationException(\"Unsupport rowtype \" + rowType);\n     }\n@@ -151,4 +153,4 @@ public class CompIntLongRowUpdateSplit extends RowUpdateSplit {\n       return 4 + super.bufferLen() + split.getStorage().size() * 12;\n     }\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 33
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
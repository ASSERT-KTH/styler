{
    "project_name": "RWTH-i5-IDSG-steve",
    "error_id": "100",
    "information": {
        "errors": [
            {
                "line": "36",
                "severity": "error",
                "message": "Line is longer than 120 characters (found 121).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "    private AtomicInteger responseCount = new AtomicInteger(0);\n\n    public RequestTask(OcppVersion ocppVersion, RequestType requestType, List<ChargePointSelect> chargePointSelectList) {\n        this.operationName = StringUtils.getOperationName(requestType);\n        this.ocppVersion = ocppVersion;\n        this.resultSize = chargePointSelectList.size();",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/RWTH-i5-IDSG-steve/errored/1/100/RequestTask.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/RWTH-i5-IDSG-steve/styler/100/RequestTask.java\nindex 977f54c7ea6..8af2fe6de8e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/RWTH-i5-IDSG-steve/errored/1/100/RequestTask.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/RWTH-i5-IDSG-steve/styler/100/RequestTask.java\n@@ -33,8 +33,9 @@ public class RequestTask {\n     private AtomicInteger errorCount = new AtomicInteger(0);\n     private AtomicInteger responseCount = new AtomicInteger(0);\n \n-    public RequestTask(OcppVersion ocppVersion, RequestType requestType, List<ChargePointSelect> chargePointSelectList) {\n-        this.operationName = StringUtils.getOperationName(requestType);\n+    public RequestTask(OcppVersion ocppVersion, RequestType requestType, List <ChargePointSelect >\n+chargePointSelectList) {\n+         this.operationName = StringUtils.getOperationName(requestType);\n         this.ocppVersion = ocppVersion;\n         this.resultSize = chargePointSelectList.size();\n \n",
            "diff_size": 3
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/RWTH-i5-IDSG-steve/errored/1/100/RequestTask.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/RWTH-i5-IDSG-steve/intellij/100/RequestTask.java\nindex 977f54c7ea6..c9b58360f03 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/RWTH-i5-IDSG-steve/errored/1/100/RequestTask.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/RWTH-i5-IDSG-steve/intellij/100/RequestTask.java\n@@ -21,44 +21,44 @@ import java.util.concurrent.atomic.AtomicInteger;\n  */\n @Getter\n public class RequestTask {\n-    private final OcppVersion ocppVersion;\n-    private final String operationName;\n+  private final OcppVersion ocppVersion;\n+  private final String operationName;\n \n-    private final Map<String, RequestResult> resultMap;\n-    private final int resultSize;\n+  private final Map<String, RequestResult> resultMap;\n+  private final int resultSize;\n \n-    private final DateTime startTimestamp = DateTime.now();\n-    private DateTime endTimestamp;\n+  private final DateTime startTimestamp = DateTime.now();\n+  private DateTime endTimestamp;\n \n-    private AtomicInteger errorCount = new AtomicInteger(0);\n-    private AtomicInteger responseCount = new AtomicInteger(0);\n+  private AtomicInteger errorCount = new AtomicInteger(0);\n+  private AtomicInteger responseCount = new AtomicInteger(0);\n \n-    public RequestTask(OcppVersion ocppVersion, RequestType requestType, List<ChargePointSelect> chargePointSelectList) {\n-        this.operationName = StringUtils.getOperationName(requestType);\n-        this.ocppVersion = ocppVersion;\n-        this.resultSize = chargePointSelectList.size();\n+  public RequestTask(OcppVersion ocppVersion, RequestType requestType, List<ChargePointSelect> chargePointSelectList) {\n+    this.operationName = StringUtils.getOperationName(requestType);\n+    this.ocppVersion = ocppVersion;\n+    this.resultSize = chargePointSelectList.size();\n \n-        resultMap = new HashMap<>(resultSize);\n-        for (ChargePointSelect cps : chargePointSelectList) {\n-            resultMap.put(cps.getChargeBoxId(), new RequestResult());\n-        }\n+    resultMap = new HashMap<>(resultSize);\n+    for (ChargePointSelect cps : chargePointSelectList) {\n+      resultMap.put(cps.getChargeBoxId(), new RequestResult());\n     }\n+  }\n \n-    public boolean isFinished() {\n-        return endTimestamp != null;\n-    }\n+  public boolean isFinished() {\n+    return endTimestamp != null;\n+  }\n \n-    public void addNewResponse(String chargeBoxId, String response) {\n-        resultMap.get(chargeBoxId).setResponse(response);\n-        if (resultSize == (errorCount.get() + responseCount.incrementAndGet())) {\n-            endTimestamp = DateTime.now();\n-        }\n+  public void addNewResponse(String chargeBoxId, String response) {\n+    resultMap.get(chargeBoxId).setResponse(response);\n+    if (resultSize == (errorCount.get() + responseCount.incrementAndGet())) {\n+      endTimestamp = DateTime.now();\n     }\n+  }\n \n-    public void addNewError(String chargeBoxId, Exception exception) {\n-        resultMap.get(chargeBoxId).setErrorMessage(exception.getMessage());\n-        if (resultSize == (errorCount.incrementAndGet() + responseCount.get())) {\n-            endTimestamp = DateTime.now();\n-        }\n+  public void addNewError(String chargeBoxId, Exception exception) {\n+    resultMap.get(chargeBoxId).setErrorMessage(exception.getMessage());\n+    if (resultSize == (errorCount.incrementAndGet() + responseCount.get())) {\n+      endTimestamp = DateTime.now();\n     }\n+  }\n }\n",
            "diff_size": 32
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "36",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/RWTH-i5-IDSG-steve/errored/1/100/RequestTask.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/RWTH-i5-IDSG-steve/naturalize/100/RequestTask.java\nindex 977f54c7ea6..35997b7272e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/RWTH-i5-IDSG-steve/errored/1/100/RequestTask.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/RWTH-i5-IDSG-steve/naturalize/100/RequestTask.java\n@@ -61,4 +61,4 @@ public class RequestTask {\n             endTimestamp = DateTime.now();\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "34",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/RWTH-i5-IDSG-steve/errored/1/100/RequestTask.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/RWTH-i5-IDSG-steve/codebuff/100/RequestTask.java\nindex 977f54c7ea6..a9c40eb5cda 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/RWTH-i5-IDSG-steve/errored/1/100/RequestTask.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/RWTH-i5-IDSG-steve/codebuff/100/RequestTask.java\n@@ -6,7 +6,6 @@ import de.rwth.idsg.steve.repository.dto.ChargePointSelect;\n import de.rwth.idsg.steve.utils.StringUtils;\n import lombok.Getter;\n import org.joda.time.DateTime;\n-\n import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n@@ -19,17 +18,16 @@ import java.util.concurrent.atomic.AtomicInteger;\n  * @author Sevket Goekay <goekay@dbis.rwth-aachen.de>\n  * @since 18.09.2014\n  */\n+\n+\n @Getter\n public class RequestTask {\n     private final OcppVersion ocppVersion;\n     private final String operationName;\n-\n     private final Map<String, RequestResult> resultMap;\n     private final int resultSize;\n-\n     private final DateTime startTimestamp = DateTime.now();\n     private DateTime endTimestamp;\n-\n     private AtomicInteger errorCount = new AtomicInteger(0);\n     private AtomicInteger responseCount = new AtomicInteger(0);\n \n@@ -37,7 +35,6 @@ public class RequestTask {\n         this.operationName = StringUtils.getOperationName(requestType);\n         this.ocppVersion = ocppVersion;\n         this.resultSize = chargePointSelectList.size();\n-\n         resultMap = new HashMap<>(resultSize);\n         for (ChargePointSelect cps : chargePointSelectList) {\n             resultMap.put(cps.getChargeBoxId(), new RequestResult());\n@@ -50,6 +47,7 @@ public class RequestTask {\n \n     public void addNewResponse(String chargeBoxId, String response) {\n         resultMap.get(chargeBoxId).setResponse(response);\n+\n         if (resultSize == (errorCount.get() + responseCount.incrementAndGet())) {\n             endTimestamp = DateTime.now();\n         }\n@@ -57,8 +55,9 @@ public class RequestTask {\n \n     public void addNewError(String chargeBoxId, Exception exception) {\n         resultMap.get(chargeBoxId).setErrorMessage(exception.getMessage());\n+\n         if (resultSize == (errorCount.incrementAndGet() + responseCount.get())) {\n             endTimestamp = DateTime.now();\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 10
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "36",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/RWTH-i5-IDSG-steve/errored/1/100/RequestTask.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/RWTH-i5-IDSG-steve/styler_three_grams/100/RequestTask.java\nindex 977f54c7ea6..8af2fe6de8e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/RWTH-i5-IDSG-steve/errored/1/100/RequestTask.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/RWTH-i5-IDSG-steve/styler_three_grams/100/RequestTask.java\n@@ -33,8 +33,9 @@ public class RequestTask {\n     private AtomicInteger errorCount = new AtomicInteger(0);\n     private AtomicInteger responseCount = new AtomicInteger(0);\n \n-    public RequestTask(OcppVersion ocppVersion, RequestType requestType, List<ChargePointSelect> chargePointSelectList) {\n-        this.operationName = StringUtils.getOperationName(requestType);\n+    public RequestTask(OcppVersion ocppVersion, RequestType requestType, List <ChargePointSelect >\n+chargePointSelectList) {\n+         this.operationName = StringUtils.getOperationName(requestType);\n         this.ocppVersion = ocppVersion;\n         this.resultSize = chargePointSelectList.size();\n \n",
            "diff_size": 3
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff",
        "styler_random"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2063",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "40",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "108",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "113",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "114",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2063/ManagementSupport.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2063/ManagementSupport.java\nindex 3e53eebeaf9..2eeb6313817 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2063/ManagementSupport.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2063/ManagementSupport.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.jmx.impl;\n \n import java.util.ArrayList;\n@@ -33,100 +34,99 @@ import static java.lang.management.ManagementFactory.getPlatformMBeanServer;\n \n public class ManagementSupport\n {\n-    public static ManagementSupport load()\n+  public static ManagementSupport load()\n+  {\n+    ManagementSupport support = new ManagementSupport();\n+    for (ManagementSupport candidate : Service.load(ManagementSupport.class))\n     {\n-        ManagementSupport support = new ManagementSupport();\n-        for ( ManagementSupport candidate : Service.load( ManagementSupport.class ) )\n-        {\n-            // Can we know that there aren't going to be multiple instances?\n-            support = candidate;\n-        }\n-        return support;\n+      // Can we know that there aren't going to be multiple instances?\n+      support = candidate;\n     }\n+    return support;\n+  }\n \n-    protected MBeanServer getMBeanServer()\n-    {\n-        return getPlatformMBeanServer();\n-    }\n+  protected MBeanServer getMBeanServer()\n+  {\n+    return getPlatformMBeanServer();\n+  }\n \n-    /**\n-     * Create a proxy for the specified bean.\n-     *\n-     * @param <T> The type of the bean to create.\n-     * @param kernel the kernel that the proxy should be created for.\n-     * @param beanInterface the bean type to create the proxy for.\n-     * @return a new proxy for the specified bean.\n-     */\n-    protected <T> T makeProxy( KernelBean kernel, ObjectName name, Class<T> beanInterface )\n-    {\n-        throw new UnsupportedOperationException( \"Cannot create management bean proxies.\" );\n-    }\n+  /**\n+   * Create a proxy for the specified bean.\n+   *\n+   * @param <T>           The type of the bean to create.\n+   * @param kernel        the kernel that the proxy should be created for.\n+   * @param beanInterface the bean type to create the proxy for.\n+   * @return a new proxy for the specified bean.\n+   */\n+  protected <T> T makeProxy(KernelBean kernel, ObjectName name, Class<T> beanInterface)\n+  {\n+    throw new UnsupportedOperationException(\"Cannot create management bean proxies.\");\n+  }\n \n-    final <T> Collection<T> getProxiesFor( Class<T> beanInterface, KernelBean kernel )\n+  final <T> Collection<T> getProxiesFor(Class<T> beanInterface, KernelBean kernel)\n+  {\n+    Collection<T> result = new ArrayList<>();\n+    ObjectName query = createObjectNameQuery(kernel.getInstanceId(), beanInterface);\n+    for (ObjectName name : getMBeanServer().queryNames(query, null))\n     {\n-        Collection<T> result = new ArrayList<>();\n-        ObjectName query = createObjectNameQuery( kernel.getInstanceId(), beanInterface );\n-        for ( ObjectName name : getMBeanServer().queryNames( query, null ) )\n-        {\n-            result.add( makeProxy( kernel, name, beanInterface ) );\n-        }\n-        return result;\n+      result.add(makeProxy(kernel, name, beanInterface));\n     }\n+    return result;\n+  }\n \n-    protected boolean supportsMxBeans()\n-    {\n-        return false;\n-    }\n+  protected boolean supportsMxBeans()\n+  {\n+    return false;\n+  }\n \n-    public final ObjectName createObjectName( String instanceId, Class<?> beanInterface, String... extraNaming )\n-    {\n-        return createObjectName( instanceId, getBeanName( beanInterface ), false, extraNaming );\n-    }\n+  public final ObjectName createObjectName(String instanceId, Class<?> beanInterface, String... extraNaming)\n+  {\n+    return createObjectName(instanceId, getBeanName(beanInterface), false, extraNaming);\n+  }\n \n-    private ObjectName createObjectNameQuery( String instanceId, Class<?> beanInterface )\n-    {\n-        return createObjectName( instanceId, getBeanName( beanInterface ), true );\n-    }\n+  private ObjectName createObjectNameQuery(String instanceId, Class<?> beanInterface)\n+  {\n+    return createObjectName(instanceId, getBeanName(beanInterface), true);\n+  }\n \n-    public final ObjectName createMBeanQuery( String instanceId )\n-    {\n-        return createObjectName( instanceId, \"*\", false );\n-    }\n+  public final ObjectName createMBeanQuery(String instanceId)\n+  {\n+    return createObjectName(instanceId, \"*\", false);\n+  }\n+\n+  protected String getBeanName(Class<?> beanInterface)\n+  {\n+    return beanName(beanInterface);\n+  }\n \n-    protected String getBeanName( Class<?> beanInterface )\n+  protected ObjectName createObjectName(String instanceId, String beanName, boolean query, String... extraNaming)\n+  {\n+    Hashtable<String, String> properties = new Hashtable<>();\n+    properties.put(\"instance\", \"kernel#\" + instanceId);\n+    properties.put(\"name\", beanName);\n+    for (int i = 0; i < extraNaming.length; i++)\n     {\n-        return beanName( beanInterface );\n+      properties.put(\"name\" + i, extraNaming[i]);\n     }\n-\n-    protected ObjectName createObjectName( String instanceId, String beanName, boolean query, String... extraNaming )\n+    try\n+    {\n+      return new ObjectName(\"org.neo4j\", properties);\n+    } catch (MalformedObjectNameException e)\n     {\n-        Hashtable<String, String> properties = new Hashtable<>();\n-        properties.put( \"instance\", \"kernel#\" + instanceId );\n-        properties.put( \"name\", beanName );\n-        for ( int i = 0; i < extraNaming.length; i++ )\n-        {\n-            properties.put( \"name\" + i, extraNaming[i] );\n-        }\n-        try\n-        {\n-            return new ObjectName( \"org.neo4j\", properties );\n-        }\n-        catch ( MalformedObjectNameException e )\n-        {\n-            return null;\n-        }\n+      return null;\n     }\n+  }\n \n-    static String beanName( Class<?> iface )\n+  static String beanName(Class<?> iface)\n+  {\n+    if (iface.isInterface())\n     {\n-        if ( iface.isInterface() )\n-        {\n-            ManagementInterface management = iface.getAnnotation( ManagementInterface.class );\n-            if ( management != null )\n-            {\n-                return management.name();\n-            }\n-        }\n-        throw new IllegalArgumentException( iface + \" is not a Neo4j Management Been interface\" );\n+      ManagementInterface management = iface.getAnnotation(ManagementInterface.class);\n+      if (management != null)\n+      {\n+        return management.name();\n+      }\n     }\n+    throw new IllegalArgumentException(iface + \" is not a Neo4j Management Been interface\");\n+  }\n }\n",
            "diff_size": 106
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2063/ManagementSupport.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2063/ManagementSupport.java\nindex 3e53eebeaf9..ace8a89efc7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2063/ManagementSupport.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2063/ManagementSupport.java\n@@ -41,7 +41,8 @@ public class ManagementSupport\n             // Can we know that there aren't going to be multiple instances?\n             support = candidate;\n         }\n-        return support;\n+\n+return support;\n     }\n \n     protected MBeanServer getMBeanServer()\n@@ -70,7 +71,8 @@ public class ManagementSupport\n         {\n             result.add( makeProxy( kernel, name, beanInterface ) );\n         }\n-        return result;\n+\n+return result;\n     }\n \n     protected boolean supportsMxBeans()\n@@ -100,14 +102,15 @@ public class ManagementSupport\n \n     protected ObjectName createObjectName( String instanceId, String beanName, boolean query, String... extraNaming )\n     {\n-        Hashtable<String, String> properties = new Hashtable<>();\n+        Hashtable<String,String> properties = new Hashtable<>();\n         properties.put( \"instance\", \"kernel#\" + instanceId );\n         properties.put( \"name\", beanName );\n         for ( int i = 0; i < extraNaming.length; i++ )\n         {\n             properties.put( \"name\" + i, extraNaming[i] );\n         }\n-        try\n+\n+try\n         {\n             return new ObjectName( \"org.neo4j\", properties );\n         }\n@@ -129,4 +132,4 @@ public class ManagementSupport\n         }\n         throw new IllegalArgumentException( iface + \" is not a Neo4j Management Been interface\" );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
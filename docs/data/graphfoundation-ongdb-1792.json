{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1792",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "57",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1792/NamedArgument.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1792/NamedArgument.java\nindex a817738fe26..e49c751d8f1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1792/NamedArgument.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1792/NamedArgument.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.commandline.arguments;\n \n import java.util.Collection;\n@@ -25,47 +26,47 @@ import org.neo4j.helpers.Args;\n \n public interface NamedArgument\n {\n-    /**\n-     * Represents the option in the options list.\n-     */\n-    String optionsListing();\n+  /**\n+   * Represents the option in the options list.\n+   */\n+  String optionsListing();\n \n-    /**\n-     * Represents the option in the usage string.\n-     */\n-    String usage();\n+  /**\n+   * Represents the option in the usage string.\n+   */\n+  String usage();\n \n-    /**\n-     * An explanation of the option in the options list.\n-     */\n-    String description();\n+  /**\n+   * An explanation of the option in the options list.\n+   */\n+  String description();\n \n-    /**\n-     * Name of the option as in '--name=<value>'\n-     */\n-    String name();\n+  /**\n+   * Name of the option as in '--name=<value>'\n+   */\n+  String name();\n \n-    /**\n-     * Example value listed in usage between brackets like '--name=<example-value>'\n-     */\n-    String exampleValue();\n+  /**\n+   * Example value listed in usage between brackets like '--name=<example-value>'\n+   */\n+  String exampleValue();\n \n-    /**\n-     * Parses the option (or possible default value) out of program arguments. Use only if a single argument is allowed.\n-     */\n-    String parse( Args parsedArgs );\n+  /**\n+   * Parses the option (or possible default value) out of program arguments. Use only if a single argument is allowed.\n+   */\n+  String parse(Args parsedArgs);\n \n-    /**\n-     * Parses the option (or possible default value) out of program arguments. Use in case multiple arguments are\n-     * allowed.\n-     */\n-    Collection<String> parseMultiple( Args parsedArgs );\n+  /**\n+   * Parses the option (or possible default value) out of program arguments. Use in case multiple arguments are\n+   * allowed.\n+   */\n+  Collection<String> parseMultiple(Args parsedArgs);\n \n-    /**\n-     * Returns true if this argument was given explicitly on the command line\n-     */\n-    default boolean has( Args parsedArgs )\n-    {\n-        return parsedArgs.has( name() );\n-    }\n+  /**\n+   * Returns true if this argument was given explicitly on the command line\n+   */\n+  default boolean has(Args parsedArgs)\n+  {\n+    return parsedArgs.has(name());\n+  }\n }\n",
            "diff_size": 37
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1792/NamedArgument.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1792/NamedArgument.java\nindex a817738fe26..fc7e88d4c69 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1792/NamedArgument.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1792/NamedArgument.java\n@@ -68,4 +68,4 @@ public interface NamedArgument\n     {\n         return parsedArgs.has( name() );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}